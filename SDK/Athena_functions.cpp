// Name: SoT, Version: 2.2.1.1

#include "../pch.h"

/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Functions
//---------------------------------------------------------------------------

void FPlayerStat::AfterRead()
{
}

void FPlayerStat::BeforeDelete()
{
}

void FAthenaAnimationSkeletonShipCaptainAnimations::AfterRead()
{
	READ_PTR_FULL(EnterDockedPose, UAnimSequence);
	READ_PTR_FULL(ExitDockedPose, UAnimSequence);
	READ_PTR_FULL(Taunt, UAnimSequence);
	READ_PTR_FULL(RamInto, UAnimSequence);
	READ_PTR_FULL(RamCycle, UAnimSequence);
	READ_PTR_FULL(RamImpact, UAnimSequence);
	READ_PTR_FULL(RamOutOf, UAnimSequence);
}

void FAthenaAnimationSkeletonShipCaptainAnimations::BeforeDelete()
{
	DELE_PTR_FULL(EnterDockedPose);
	DELE_PTR_FULL(ExitDockedPose);
	DELE_PTR_FULL(Taunt);
	DELE_PTR_FULL(RamInto);
	DELE_PTR_FULL(RamCycle);
	DELE_PTR_FULL(RamImpact);
	DELE_PTR_FULL(RamOutOf);
}

void FAthenaAnimationSkeletonShipCaptainParams::AfterRead()
{
	READ_PTR_FULL(ShipCaptainIdleCycleA, UAnimSequence);
	READ_PTR_FULL(ShipCaptainIdleCycleB, UAnimSequence);
}

void FAthenaAnimationSkeletonShipCaptainParams::BeforeDelete()
{
	DELE_PTR_FULL(ShipCaptainIdleCycleA);
	DELE_PTR_FULL(ShipCaptainIdleCycleB);
}

void FCarouselPirateBodyshapeCompass::AfterRead()
{
}

void FCarouselPirateBodyshapeCompass::BeforeDelete()
{
}

void FCarouselPirateBodyshape::AfterRead()
{
}

void FCarouselPirateBodyshape::BeforeDelete()
{
}

void FCarouselPirateGroup::AfterRead()
{
}

void FCarouselPirateGroup::BeforeDelete()
{
}

void FCompanyProgressIcon::AfterRead()
{
}

void FCompanyProgressIcon::BeforeDelete()
{
}

void FCompanyProgressIcons::AfterRead()
{
}

void FCompanyProgressIcons::BeforeDelete()
{
}

void FConstellationAudioPair::AfterRead()
{
	READ_PTR_FULL(ConstellationClass, UClass);
	READ_PTR_FULL(AudioStartEvent, UWwiseEvent);
	READ_PTR_FULL(AudioStopEvent, UWwiseEvent);
}

void FConstellationAudioPair::BeforeDelete()
{
	DELE_PTR_FULL(ConstellationClass);
	DELE_PTR_FULL(AudioStartEvent);
	DELE_PTR_FULL(AudioStopEvent);
}

void FLaunchableProjectileState::AfterRead()
{
}

void FLaunchableProjectileState::BeforeDelete()
{
}

void FProjectileAim::AfterRead()
{
	READ_PTR_FULL(AimBase, UPrimitiveComponent);
}

void FProjectileAim::BeforeDelete()
{
	DELE_PTR_FULL(AimBase);
}

void FFireBroadcast::AfterRead()
{
	READ_PTR_FULL(Instigator, AActor);
}

void FFireBroadcast::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
}

void FLightingControllerSettingsOutput::AfterRead()
{
}

void FLightingControllerSettingsOutput::BeforeDelete()
{
}

void FLightingControllerRainParams::AfterRead()
{
}

void FLightingControllerRainParams::BeforeDelete()
{
}

void FLightingControllerLightningParams::AfterRead()
{
	READ_PTR_FULL(LightningTimeIntensityCurve, UCurveFloat);
	READ_PTR_FULL(LightningDistanceIntensityCurve, UCurveFloat);
}

void FLightingControllerLightningParams::BeforeDelete()
{
	DELE_PTR_FULL(LightningTimeIntensityCurve);
	DELE_PTR_FULL(LightningDistanceIntensityCurve);
}

void FLightingControllerLightingParams::AfterRead()
{
}

void FLightingControllerLightingParams::BeforeDelete()
{
}

void FLightingControllerMoonParams::AfterRead()
{
}

void FLightingControllerMoonParams::BeforeDelete()
{
}

void FLightingControllerTimeParams::AfterRead()
{
	READ_PTR_FULL(TimeScalerCurve, UCurveFloat);
}

void FLightingControllerTimeParams::BeforeDelete()
{
	DELE_PTR_FULL(TimeScalerCurve);
}

void FLightingControllerIslandDangerParams::AfterRead()
{
}

void FLightingControllerIslandDangerParams::BeforeDelete()
{
}

void FLightingControllerAssetParams::AfterRead()
{
	READ_PTR_FULL(AtmosphericMaterialParams, UMaterialParameterCollection);
	READ_PTR_FULL(CloudMaterialParams, UMaterialParameterCollection);
	READ_PTR_FULL(ScreenEffectsMaterialParams, UMaterialParameterCollection);
	READ_PTR_FULL(IslandDangerMaterialParams, UMaterialParameterCollection);
	READ_PTR_FULL(UnderworldLightingSet, ULightingControllerSettings);
	READ_PTR_FULL(HideoutLightingSet, ULightingControllerSettings);
	READ_PTR_FULL(ArenaTavernLightingSet, ULightingControllerSettings);
	READ_PTR_FULL(SkyDomeMesh, UStaticMesh);
	READ_PTR_FULL(NorthStarMesh, UStaticMesh);
	READ_PTR_FULL(MoonMesh, UStaticMesh);
}

void FLightingControllerAssetParams::BeforeDelete()
{
	DELE_PTR_FULL(AtmosphericMaterialParams);
	DELE_PTR_FULL(CloudMaterialParams);
	DELE_PTR_FULL(ScreenEffectsMaterialParams);
	DELE_PTR_FULL(IslandDangerMaterialParams);
	DELE_PTR_FULL(UnderworldLightingSet);
	DELE_PTR_FULL(HideoutLightingSet);
	DELE_PTR_FULL(ArenaTavernLightingSet);
	DELE_PTR_FULL(SkyDomeMesh);
	DELE_PTR_FULL(NorthStarMesh);
	DELE_PTR_FULL(MoonMesh);
}

void FLightingControllerLightingVars::AfterRead()
{
}

void FLightingControllerLightingVars::BeforeDelete()
{
}

void FLightingControllerMaterialInstances::AfterRead()
{
	READ_PTR_FULL(NorthStarMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(MoonMaterial, UMaterialInstanceDynamic);
}

void FLightingControllerMaterialInstances::BeforeDelete()
{
	DELE_PTR_FULL(NorthStarMaterial);
	DELE_PTR_FULL(MoonMaterial);
}

void FBlendableDrowningParams::AfterRead()
{
	READ_PTR_FULL(ExtraBubblesFirstPerson, UObject);
}

void FBlendableDrowningParams::BeforeDelete()
{
	DELE_PTR_FULL(ExtraBubblesFirstPerson);
}

void FLightingZoneBlendValues::AfterRead()
{
}

void FLightingZoneBlendValues::BeforeDelete()
{
}

void FPlayerCompanyProgress::AfterRead()
{
}

void FPlayerCompanyProgress::BeforeDelete()
{
}

void FPlayerCompanyProgressCache::AfterRead()
{
}

void FPlayerCompanyProgressCache::BeforeDelete()
{
}

void FCrewMemberData::AfterRead()
{
	READ_PTR_FULL(PlayerState, APlayerState);
}

void FCrewMemberData::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
}

void FCrewShipData::AfterRead()
{
}

void FCrewShipData::BeforeDelete()
{
}

void FCrewMatchmakingVisibilityData::AfterRead()
{
}

void FCrewMatchmakingVisibilityData::BeforeDelete()
{
}

void FCrewArenaRivalVotingData::AfterRead()
{
}

void FCrewArenaRivalVotingData::BeforeDelete()
{
}

void FPlayerCurseToAudioSwitchValue::AfterRead()
{
}

void FPlayerCurseToAudioSwitchValue::BeforeDelete()
{
}

void FPlayerEntitlementsCompact::AfterRead()
{
}

void FPlayerEntitlementsCompact::BeforeDelete()
{
}

void FEntitlements::AfterRead()
{
}

void FEntitlements::BeforeDelete()
{
}

void FPlayerEntitlements::AfterRead()
{
	FEntitlements::AfterRead();

}

void FPlayerEntitlements::BeforeDelete()
{
	FEntitlements::BeforeDelete();

}

void FEntitlementIdInfo::AfterRead()
{
}

void FEntitlementIdInfo::BeforeDelete()
{
}

void FPlayerHeroStatUnit::AfterRead()
{
}

void FPlayerHeroStatUnit::BeforeDelete()
{
}

void FPocketWatchTickAnimation::AfterRead()
{
	READ_PTR_FULL(AnimationCurve, UCurveFloat);
	READ_PTR_FULL(AnimationSound, UWwiseEvent);
}

void FPocketWatchTickAnimation::BeforeDelete()
{
	DELE_PTR_FULL(AnimationCurve);
	DELE_PTR_FULL(AnimationSound);
}

void FPocketWatchHandParams::AfterRead()
{
}

void FPocketWatchHandParams::BeforeDelete()
{
}

void FPocketWatchDateDisplay::AfterRead()
{
	READ_PTR_FULL(DateSwitchSFX, UWwiseEvent);
	READ_PTR_FULL(FirstPersonMeshDynamicMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(ThirdPersonMeshDynamicMaterialInstance, UMaterialInstanceDynamic);
}

void FPocketWatchDateDisplay::BeforeDelete()
{
	DELE_PTR_FULL(DateSwitchSFX);
	DELE_PTR_FULL(FirstPersonMeshDynamicMaterialInstance);
	DELE_PTR_FULL(ThirdPersonMeshDynamicMaterialInstance);
}

void FInputSequencePair::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(Sequence, UAnimMontage);
}

void FInputSequencePair::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(Sequence);
}

void FInputMontagePair::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(Into, UAnimSequenceBase);
	READ_PTR_FULL(Loop, UAnimSequenceBase);
	READ_PTR_FULL(Outof, UAnimSequenceBase);
}

void FInputMontagePair::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Loop);
	DELE_PTR_FULL(Outof);
}

void FWieldableItemActionVisuals::AfterRead()
{
}

void FWieldableItemActionVisuals::BeforeDelete()
{
}

void FEmissaryNotificationState::AfterRead()
{
}

void FEmissaryNotificationState::BeforeDelete()
{
}

void FReapersMarkLevelMultiplier::AfterRead()
{
	READ_PTR_FULL(CompanyId, UClass);
}

void FReapersMarkLevelMultiplier::BeforeDelete()
{
	DELE_PTR_FULL(CompanyId);
}

void FReapersMarkLevelEntry::AfterRead()
{
}

void FReapersMarkLevelEntry::BeforeDelete()
{
}

void FWreckQueryPriorityEntry::AfterRead()
{
}

void FWreckQueryPriorityEntry::BeforeDelete()
{
}

void FCustomWreckEntry::AfterRead()
{
}

void FCustomWreckEntry::BeforeDelete()
{
}

void FWheelDesc::AfterRead()
{
	READ_PTR_FULL(WheelMesh, USkeletalMesh);
}

void FWheelDesc::BeforeDelete()
{
	DELE_PTR_FULL(WheelMesh);
}

void FShipLiveryRGBSwap::AfterRead()
{
	READ_PTR_FULL(TargetMaterial, UMaterialInterface);
}

void FShipLiveryRGBSwap::BeforeDelete()
{
	DELE_PTR_FULL(TargetMaterial);
}

void FShipLiveryTextureSwap::AfterRead()
{
	READ_PTR_FULL(TargetMaterial, UMaterialInterface);
	READ_PTR_FULL(TargetTexture, UTexture2D);
}

void FShipLiveryTextureSwap::BeforeDelete()
{
	DELE_PTR_FULL(TargetMaterial);
	DELE_PTR_FULL(TargetTexture);
}

void FShipLivery::AfterRead()
{
}

void FShipLivery::BeforeDelete()
{
}

void FAimSensitivitySettingParams::AfterRead()
{
}

void FAimSensitivitySettingParams::BeforeDelete()
{
}

void FPhraseData::AfterRead()
{
}

void FPhraseData::BeforeDelete()
{
}

void FStorageContainerContentSpawnerEntry::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
	READ_PTR_FULL(ItemList, UStorageContainerSpawnerItemListBase);
}

void FStorageContainerContentSpawnerEntry::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
	DELE_PTR_FULL(ItemList);
}

void FTypedStorageContainerContentTypeSelectorEntry::AfterRead()
{
	READ_PTR_FULL(ContentSpawnerType, UClass);
}

void FTypedStorageContainerContentTypeSelectorEntry::BeforeDelete()
{
	DELE_PTR_FULL(ContentSpawnerType);
}

void FItemConsumptionStatusChanceEntry::AfterRead()
{
}

void FItemConsumptionStatusChanceEntry::BeforeDelete()
{
}

void FSpawnableItemCategory::AfterRead()
{
}

void FSpawnableItemCategory::BeforeDelete()
{
}

void FSharkPlayerStats::AfterRead()
{
}

void FSharkPlayerStats::BeforeDelete()
{
}

void FSalvageSpawnCompRequest::AfterRead()
{
	READ_PTR_FULL(SalvageItemSpawnComp, USalvageItemSpawnComponent);
}

void FSalvageSpawnCompRequest::BeforeDelete()
{
	DELE_PTR_FULL(SalvageItemSpawnComp);
}

void FSpawnRequests::AfterRead()
{
}

void FSpawnRequests::BeforeDelete()
{
}

void FPortalSpawningInfo::AfterRead()
{
	READ_PTR_FULL(Locator, APortalLocatorActor);
}

void FPortalSpawningInfo::BeforeDelete()
{
	DELE_PTR_FULL(Locator);
}

void FContestCrewManagementMemberData::AfterRead()
{
}

void FContestCrewManagementMemberData::BeforeDelete()
{
}

void FContestCrewManagementMemberDataEvent::AfterRead()
{
}

void FContestCrewManagementMemberDataEvent::BeforeDelete()
{
}

void FContestStopCrewManagementEvent::AfterRead()
{
}

void FContestStopCrewManagementEvent::BeforeDelete()
{
}

void FContestRequestCrewManagementEvent::AfterRead()
{
}

void FContestRequestCrewManagementEvent::BeforeDelete()
{
}

void FContestUpdateScoreBoardTimer::AfterRead()
{
}

void FContestUpdateScoreBoardTimer::BeforeDelete()
{
}

void FNetworkEventStruct::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FNetworkEventStruct::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FContestLaunchStartBlinds::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FContestLaunchStartBlinds::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FFiredFromActorActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FFiredFromActorActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEventPlayerTreasureMapSet::AfterRead()
{
}

void FEventPlayerTreasureMapSet::BeforeDelete()
{
}

void FEventPlayerUseItemEnd::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(UsedItem, AActor);
}

void FEventPlayerUseItemEnd::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(UsedItem);
}

void FEventPlayerUseItemStart::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(UsedItem, AActor);
}

void FEventPlayerUseItemStart::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(UsedItem);
}

void FEventPlayerItemEquip::AfterRead()
{
	READ_PTR_FULL(EquippedItem, AActor);
}

void FEventPlayerItemEquip::BeforeDelete()
{
	DELE_PTR_FULL(EquippedItem);
}

void FEventPlayerDrinkingConsumed::AfterRead()
{
}

void FEventPlayerDrinkingConsumed::BeforeDelete()
{
}

void FEventPlayerDrinkingEnd::AfterRead()
{
}

void FEventPlayerDrinkingEnd::BeforeDelete()
{
}

void FEventPlayerDrinkingStart::AfterRead()
{
}

void FEventPlayerDrinkingStart::BeforeDelete()
{
}

void FEventPlayerResetCrewOccurred::AfterRead()
{
}

void FEventPlayerResetCrewOccurred::BeforeDelete()
{
}

void FEventPlayerCureAllAilments::AfterRead()
{
}

void FEventPlayerCureAllAilments::BeforeDelete()
{
}

void FEventPlayerRepairObjectEnd::AfterRead()
{
}

void FEventPlayerRepairObjectEnd::BeforeDelete()
{
}

void FEventPlayerRepairObjectCompleted::AfterRead()
{
}

void FEventPlayerRepairObjectCompleted::BeforeDelete()
{
}

void FEventPlayerRepairObjectStart::AfterRead()
{
}

void FEventPlayerRepairObjectStart::BeforeDelete()
{
}

void FEventPlayerSeamlessTravelStarted::AfterRead()
{
}

void FEventPlayerSeamlessTravelStarted::BeforeDelete()
{
}

void FEventPlayerLoggedOut::AfterRead()
{
	READ_PTR_FULL(OnlineAthenaPlayerController, AOnlineAthenaPlayerController);
}

void FEventPlayerLoggedOut::BeforeDelete()
{
	DELE_PTR_FULL(OnlineAthenaPlayerController);
}

void FEventInitialPawnPossessed::AfterRead()
{
}

void FEventInitialPawnPossessed::BeforeDelete()
{
}

void FEventPlayerPawnLeavingGame::AfterRead()
{
}

void FEventPlayerPawnLeavingGame::BeforeDelete()
{
}

void FEventPlayerLoggedIn::AfterRead()
{
	READ_PTR_FULL(OnlineAthenaPlayerController, AOnlineAthenaPlayerController);
}

void FEventPlayerLoggedIn::BeforeDelete()
{
	DELE_PTR_FULL(OnlineAthenaPlayerController);
}

void FEventPlayerProvidedInput::AfterRead()
{
}

void FEventPlayerProvidedInput::BeforeDelete()
{
}

void FEmissaryLeaderboardScoreUpdatedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FEmissaryLeaderboardScoreUpdatedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FClientNPCDialogBeganTelemetryEvent::AfterRead()
{
}

void FClientNPCDialogBeganTelemetryEvent::BeforeDelete()
{
}

void FNPCDialogExecuteOptionOnServerRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(DialogComponent, UNPCDialogComponent);
}

void FNPCDialogExecuteOptionOnServerRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(DialogComponent);
}

void FClientNPCDialogOptionUsedTelemetryEvent::AfterRead()
{
}

void FClientNPCDialogOptionUsedTelemetryEvent::BeforeDelete()
{
}

void FReplacementDialogue::AfterRead()
{
}

void FReplacementDialogue::BeforeDelete()
{
}

void FPioneerObjectiveCompleteNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FPioneerObjectiveCompleteNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FReplenishShipData::AfterRead()
{
}

void FReplenishShipData::BeforeDelete()
{
}

void FSetTimeData::AfterRead()
{
}

void FSetTimeData::BeforeDelete()
{
}

void FSetVulnerabilityData::AfterRead()
{
}

void FSetVulnerabilityData::BeforeDelete()
{
}

void FSetHealthChangeLockData::AfterRead()
{
}

void FSetHealthChangeLockData::BeforeDelete()
{
}

void FApplyDamageData::AfterRead()
{
}

void FApplyDamageData::BeforeDelete()
{
}

void FResetToMaxHealthData::AfterRead()
{
}

void FResetToMaxHealthData::BeforeDelete()
{
}

void FSetHealthData::AfterRead()
{
}

void FSetHealthData::BeforeDelete()
{
}

void FSetMaxHealthData::AfterRead()
{
}

void FSetMaxHealthData::BeforeDelete()
{
}

void FSetInvincibilityData::AfterRead()
{
}

void FSetInvincibilityData::BeforeDelete()
{
}

void FGameServerWebSocketEntityEvent::AfterRead()
{
}

void FGameServerWebSocketEntityEvent::BeforeDelete()
{
}

void FCustomTriggerOverlap::AfterRead()
{
	FGameServerWebSocketEntityEvent::AfterRead();

}

void FCustomTriggerOverlap::BeforeDelete()
{
	FGameServerWebSocketEntityEvent::BeforeDelete();

}

void FEventOverMemoryThreshold::AfterRead()
{
}

void FEventOverMemoryThreshold::BeforeDelete()
{
}

void FAllianceJoinStatusChangedEvent::AfterRead()
{
}

void FAllianceJoinStatusChangedEvent::BeforeDelete()
{
}

void FAllianceStatusChangedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FAllianceStatusChangedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FPendingInviteViewModel::AfterRead()
{
}

void FPendingInviteViewModel::BeforeDelete()
{
}

void FPendingInvitesListEvent::AfterRead()
{
}

void FPendingInvitesListEvent::BeforeDelete()
{
}

void FGetPendingInvitesRequest::AfterRead()
{
}

void FGetPendingInvitesRequest::BeforeDelete()
{
}

void FGetOnlineFriendsSuccessEvent::AfterRead()
{
}

void FGetOnlineFriendsSuccessEvent::BeforeDelete()
{
}

void FInviteFriendRequest::AfterRead()
{
}

void FInviteFriendRequest::BeforeDelete()
{
}

void FFriendsListError::AfterRead()
{
}

void FFriendsListError::BeforeDelete()
{
}

void FFriendViewModel::AfterRead()
{
}

void FFriendViewModel::BeforeDelete()
{
}

void FChestEntitlementViewModel::AfterRead()
{
}

void FChestEntitlementViewModel::BeforeDelete()
{
}

void FPetChestPetEntitlementsUpdatedEvent::AfterRead()
{
}

void FPetChestPetEntitlementsUpdatedEvent::BeforeDelete()
{
}

void FRequestPetChestPetLoadoutEvent::AfterRead()
{
}

void FRequestPetChestPetLoadoutEvent::BeforeDelete()
{
}

void FRequestPetChestPetEntitlementsEvent::AfterRead()
{
}

void FRequestPetChestPetEntitlementsEvent::BeforeDelete()
{
}

void FRequestPetChestPreviewUpdateEvent::AfterRead()
{
}

void FRequestPetChestPreviewUpdateEvent::BeforeDelete()
{
}

void FRequestPetChestActionEvent::AfterRead()
{
}

void FRequestPetChestActionEvent::BeforeDelete()
{
}

void FInventoryEquipEvent::AfterRead()
{
}

void FInventoryEquipEvent::BeforeDelete()
{
}

void FIInventoryItem::AfterRead()
{
	READ_PTR_FULL(DescKey, UClass);
}

void FIInventoryItem::BeforeDelete()
{
	DELE_PTR_FULL(DescKey);
}

void FIInventoryItemDescription::AfterRead()
{
	READ_PTR_FULL(DescKey, UClass);
}

void FIInventoryItemDescription::BeforeDelete()
{
	DELE_PTR_FULL(DescKey);
}

void FPirateIdentity::AfterRead()
{
}

void FPirateIdentity::BeforeDelete()
{
}

void FNoteDeletedEvent::AfterRead()
{
}

void FNoteDeletedEvent::BeforeDelete()
{
}

void FEventOnCrewStorageUpdate::AfterRead()
{
}

void FEventOnCrewStorageUpdate::BeforeDelete()
{
}

void FFlameSpecificDataEntry::AfterRead()
{
}

void FFlameSpecificDataEntry::BeforeDelete()
{
}

void FControlObjectActionRuleParams::AfterRead()
{
}

void FControlObjectActionRuleParams::BeforeDelete()
{
}

void FMastCollisionProfiles::AfterRead()
{
}

void FMastCollisionProfiles::BeforeDelete()
{
}

void FMastPhysicsComponents::AfterRead()
{
	READ_PTR_FULL(MastBaseComponent, UPrimitiveComponent);
	READ_PTR_FULL(MastTopComponent, UPrimitiveComponent);
	READ_PTR_FULL(MastWeldedPhysicsBodyComponent, UPrimitiveComponent);
	READ_PTR_FULL(WeldedCrowsNestComponent, UPrimitiveComponent);
	READ_PTR_FULL(UnweldedCrowsNestComponent, UPrimitiveComponent);
}

void FMastPhysicsComponents::BeforeDelete()
{
	DELE_PTR_FULL(MastBaseComponent);
	DELE_PTR_FULL(MastTopComponent);
	DELE_PTR_FULL(MastWeldedPhysicsBodyComponent);
	DELE_PTR_FULL(WeldedCrowsNestComponent);
	DELE_PTR_FULL(UnweldedCrowsNestComponent);
}

void FIntentPredictorParams::AfterRead()
{
}

void FIntentPredictorParams::BeforeDelete()
{
}

void FImpactDamageEvent::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(DirectInstigator, AActor);
	READ_PTR_FULL(RootInstigator, AActor);
}

void FImpactDamageEvent::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(DirectInstigator);
	DELE_PTR_FULL(RootInstigator);
}

void FIntentPredictor::AfterRead()
{
}

void FIntentPredictor::BeforeDelete()
{
}

void FMastDamageAudioParams::AfterRead()
{
	READ_PTR_FULL(MastHingeAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(MastImpactAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(MastDamaged, UWwiseEvent);
	READ_PTR_FULL(MastFallingStart, UWwiseEvent);
	READ_PTR_FULL(MastFallingStop, UWwiseEvent);
	READ_PTR_FULL(MasthHoistingStart, UWwiseEvent);
	READ_PTR_FULL(MastHoistingStop, UWwiseEvent);
	READ_PTR_FULL(MastHoistingComplete, UWwiseEvent);
	READ_PTR_FULL(MastFallComplete, UWwiseEvent);
	READ_PTR_FULL(MastFallenStop, UWwiseEvent);
}

void FMastDamageAudioParams::BeforeDelete()
{
	DELE_PTR_FULL(MastHingeAudioPool);
	DELE_PTR_FULL(MastImpactAudioPool);
	DELE_PTR_FULL(MastDamaged);
	DELE_PTR_FULL(MastFallingStart);
	DELE_PTR_FULL(MastFallingStop);
	DELE_PTR_FULL(MasthHoistingStart);
	DELE_PTR_FULL(MastHoistingStop);
	DELE_PTR_FULL(MastHoistingComplete);
	DELE_PTR_FULL(MastFallComplete);
	DELE_PTR_FULL(MastFallenStop);
}

void FAchievementCriteria::AfterRead()
{
}

void FAchievementCriteria::BeforeDelete()
{
}

void FAchievementDefinition::AfterRead()
{
}

void FAchievementDefinition::BeforeDelete()
{
}

void FFogBankManagerFogAvoidanceArea::AfterRead()
{
}

void FFogBankManagerFogAvoidanceArea::BeforeDelete()
{
}

void FQuestVariable::AfterRead()
{
}

void FQuestVariable::BeforeDelete()
{
}

void FQuestVariableVector::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableVector::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableFloat::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableFloat::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableActor::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableActor::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FWaterPuzzleWaterLevel::AfterRead()
{
}

void FWaterPuzzleWaterLevel::BeforeDelete()
{
}

void FWaterPuzzleRepData::AfterRead()
{
}

void FWaterPuzzleRepData::BeforeDelete()
{
}

void FItemLoadoutCapacity::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FItemLoadoutCapacity::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FItemLoadout::AfterRead()
{
}

void FItemLoadout::BeforeDelete()
{
}

void FItemSpawnWeightedType::AfterRead()
{
	READ_PTR_FULL(Type, UClass);
}

void FItemSpawnWeightedType::BeforeDelete()
{
	DELE_PTR_FULL(Type);
}

void FSpawnInstance::AfterRead()
{
	READ_PTR_FULL(Type, UClass);
	READ_PTR_FULL(ItemSpawnData, UItemSpawnData);
}

void FSpawnInstance::BeforeDelete()
{
	DELE_PTR_FULL(Type);
	DELE_PTR_FULL(ItemSpawnData);
}

void FSpawnedItem::AfterRead()
{
	READ_PTR_FULL(ItemSpawnData, UItemSpawnData);
}

void FSpawnedItem::BeforeDelete()
{
	DELE_PTR_FULL(ItemSpawnData);
}

void FItemSpawnDistribution::AfterRead()
{
}

void FItemSpawnDistribution::BeforeDelete()
{
}

void FPlayerTalkingSettings::AfterRead()
{
	READ_PTR_FULL(Icon, UTexture2D);
}

void FPlayerTalkingSettings::BeforeDelete()
{
	DELE_PTR_FULL(Icon);
}

void FHUDBlurSourceParams::AfterRead()
{
}

void FHUDBlurSourceParams::BeforeDelete()
{
}

void FHUDBlurParams::AfterRead()
{
	READ_PTR_FULL(ScreenEffectsMaterialParameterCollection, UMaterialParameterCollection);
}

void FHUDBlurParams::BeforeDelete()
{
	DELE_PTR_FULL(ScreenEffectsMaterialParameterCollection);
}

void FCrewShipEntry::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FCrewShipEntry::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FCurrentHealthInfo::AfterRead()
{
}

void FCurrentHealthInfo::BeforeDelete()
{
}

void FContinuousHealthChange::AfterRead()
{
}

void FContinuousHealthChange::BeforeDelete()
{
}

void FReapersMarkStatusStatInfo::AfterRead()
{
	READ_PTR_FULL(Status, UClass);
}

void FReapersMarkStatusStatInfo::BeforeDelete()
{
	DELE_PTR_FULL(Status);
}

void FWreckSpawnQueryPriorityData::AfterRead()
{
}

void FWreckSpawnQueryPriorityData::BeforeDelete()
{
}

void FSwimmingCreatureLoadedMaterial::AfterRead()
{
	READ_PTR_FULL(MaterialInstance, UMaterialInstance);
}

void FSwimmingCreatureLoadedMaterial::BeforeDelete()
{
	DELE_PTR_FULL(MaterialInstance);
}

void FItemSpawnTransform::AfterRead()
{
	READ_PTR_FULL(ReferencedSpawnDistributionAsset, UWeightedItemDescSpawnDataAsset);
	READ_PTR_FULL(ReferencedSpawnDistribution, UItemSpawnDistributionAsset);
}

void FItemSpawnTransform::BeforeDelete()
{
	DELE_PTR_FULL(ReferencedSpawnDistributionAsset);
	DELE_PTR_FULL(ReferencedSpawnDistribution);
}

void FCompanySkillsetProgressions::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FCompanySkillsetProgressions::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FShipSizeRequirementData::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
}

void FShipSizeRequirementData::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
}

void FContestCrewRequirementData::AfterRead()
{
}

void FContestCrewRequirementData::BeforeDelete()
{
}

void FFogBankManagerFogBankTemplate::AfterRead()
{
}

void FFogBankManagerFogBankTemplate::BeforeDelete()
{
}

void FLightningImpact::AfterRead()
{
	READ_PTR_FULL(AttachActor, AActor);
	READ_PTR_FULL(TargetCharacter, AAthenaCharacter);
}

void FLightningImpact::BeforeDelete()
{
	DELE_PTR_FULL(AttachActor);
	DELE_PTR_FULL(TargetCharacter);
}

void FActiveLightning::AfterRead()
{
}

void FActiveLightning::BeforeDelete()
{
}

void FNPCReactionVOEntry::AfterRead()
{
}

void FNPCReactionVOEntry::BeforeDelete()
{
}

void FIndividualMeshConsumer::AfterRead()
{
}

void FIndividualMeshConsumer::BeforeDelete()
{
}

void FMeshRegistration::AfterRead()
{
	READ_PTR_FULL(MeshFallbackCategory, UClass);
	READ_PTR_FULL(FallbackMeshToAssign, UObject);
}

void FMeshRegistration::BeforeDelete()
{
	DELE_PTR_FULL(MeshFallbackCategory);
	DELE_PTR_FULL(FallbackMeshToAssign);
}

void FIndividualMeshScoring::AfterRead()
{
	READ_PTR_FULL(MeshOwner, AActor);
}

void FIndividualMeshScoring::BeforeDelete()
{
	DELE_PTR_FULL(MeshOwner);
}

void FShipPartCustomizationInfo::AfterRead()
{
}

void FShipPartCustomizationInfo::BeforeDelete()
{
}

void FShipSizePartCustomizationInfo::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
}

void FShipSizePartCustomizationInfo::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
}

void FStorageContainerWeightedItemListEntry::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FStorageContainerWeightedItemListEntry::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FStorageContainerWeightedItemListEntryList::AfterRead()
{
}

void FStorageContainerWeightedItemListEntryList::BeforeDelete()
{
}

void FStorageContainerContentTypeSelectorEntry::AfterRead()
{
	READ_PTR_FULL(ContentSpawner, UStorageContainerContentSpawner);
}

void FStorageContainerContentTypeSelectorEntry::BeforeDelete()
{
	DELE_PTR_FULL(ContentSpawner);
}

void FSpawnerTypeMapping::AfterRead()
{
	READ_PTR_FULL(Type, UClass);
	READ_PTR_FULL(Spawner, UStorageContainerContentSpawner);
}

void FSpawnerTypeMapping::BeforeDelete()
{
	DELE_PTR_FULL(Type);
	DELE_PTR_FULL(Spawner);
}

void FVaultKeyMapping::AfterRead()
{
	READ_PTR_FULL(VaultKey, UClass);
	READ_PTR_FULL(VaultMedallion, UClass);
}

void FVaultKeyMapping::BeforeDelete()
{
	DELE_PTR_FULL(VaultKey);
	DELE_PTR_FULL(VaultMedallion);
}

void FLockData::AfterRead()
{
	READ_PTR_FULL(RequiredKey, UClass);
	READ_PTR_FULL(UnlockAudioCue, UWwiseEvent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
}

void FLockData::BeforeDelete()
{
	DELE_PTR_FULL(RequiredKey);
	DELE_PTR_FULL(UnlockAudioCue);
	DELE_PTR_FULL(SfxPool);
}

void FAthenaStreamedLevelData::AfterRead()
{
}

void FAthenaStreamedLevelData::BeforeDelete()
{
}

void FMechanismAnimationEvent_VFXParams::AfterRead()
{
	READ_PTR_FULL(ParticleSystem, UParticleSystem);
}

void FMechanismAnimationEvent_VFXParams::BeforeDelete()
{
	DELE_PTR_FULL(ParticleSystem);
}

void FAshenWindsSkullMissfireParams::AfterRead()
{
	READ_PTR_FULL(MissfireStartedSFX, UWwiseEvent);
	READ_PTR_FULL(MissfireStoppedSFX, UWwiseEvent);
}

void FAshenWindsSkullMissfireParams::BeforeDelete()
{
	DELE_PTR_FULL(MissfireStartedSFX);
	DELE_PTR_FULL(MissfireStoppedSFX);
}

void FContestScoreTelemetryGameEvent::AfterRead()
{
}

void FContestScoreTelemetryGameEvent::BeforeDelete()
{
}

void FOtherCrewMuteStateResponse::AfterRead()
{
}

void FOtherCrewMuteStateResponse::BeforeDelete()
{
}

void FOtherCrewMuteStateRequest::AfterRead()
{
}

void FOtherCrewMuteStateRequest::BeforeDelete()
{
}

void FCrewMuteOthersPhrasesEvent::AfterRead()
{
}

void FCrewMuteOthersPhrasesEvent::BeforeDelete()
{
}

void FCrewMutePlayerPhrasesEvent::AfterRead()
{
}

void FCrewMutePlayerPhrasesEvent::BeforeDelete()
{
}

void FCrewMuteOthersChatEvent::AfterRead()
{
}

void FCrewMuteOthersChatEvent::BeforeDelete()
{
}

void FCrewMutePlayerChatEvent::AfterRead()
{
}

void FCrewMutePlayerChatEvent::BeforeDelete()
{
}

void FCrewMuteOthersVoiceEvent::AfterRead()
{
}

void FCrewMuteOthersVoiceEvent::BeforeDelete()
{
}

void FCrewMutePlayerVoiceEvent::AfterRead()
{
}

void FCrewMutePlayerVoiceEvent::BeforeDelete()
{
}

void FClientReachedInGameTelemetryEvent::AfterRead()
{
}

void FClientReachedInGameTelemetryEvent::BeforeDelete()
{
}

void FWhatsNewArticleModel::AfterRead()
{
}

void FWhatsNewArticleModel::BeforeDelete()
{
}

void FWhatsNewArticleClientResponseModel::AfterRead()
{
}

void FWhatsNewArticleClientResponseModel::BeforeDelete()
{
}

void FServiceDiscoveryStateSuccessEvent::AfterRead()
{
}

void FServiceDiscoveryStateSuccessEvent::BeforeDelete()
{
}

void FSetupServiceBridgeStateConnectedEvent::AfterRead()
{
}

void FSetupServiceBridgeStateConnectedEvent::BeforeDelete()
{
}

void FStoreRedemptionStateFailedTelemetryEvent::AfterRead()
{
}

void FStoreRedemptionStateFailedTelemetryEvent::BeforeDelete()
{
}

void FToggleCinematicModeRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(PlayerController, APlayerController);
}

void FToggleCinematicModeRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(PlayerController);
}

void FUpdateCameraPositionRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(AthenaPlayerController, AAthenaPlayerController);
}

void FUpdateCameraPositionRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(AthenaPlayerController);
}

void FCompanyLevelDataTable::AfterRead()
{
	FTableRowBase::AfterRead();

}

void FCompanyLevelDataTable::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

}

void FClientPlayerNewLevelTelemetryEvent::AfterRead()
{
}

void FClientPlayerNewLevelTelemetryEvent::BeforeDelete()
{
}

void FResponseServerMemoryNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FResponseServerMemoryNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEmoteDescHelpers::AfterRead()
{
}

void FEmoteDescHelpers::BeforeDelete()
{
}

void FCheatPerformedByClientNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FCheatPerformedByClientNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventFireWeapon::AfterRead()
{
}

void FEventFireWeapon::BeforeDelete()
{
}

void FFallingIntoWaterEvent::AfterRead()
{
}

void FFallingIntoWaterEvent::BeforeDelete()
{
}

void FEventCustomAnimationPlayAnimation::AfterRead()
{
}

void FEventCustomAnimationPlayAnimation::BeforeDelete()
{
}

void FEventCustomAnimationStateChanged::AfterRead()
{
}

void FEventCustomAnimationStateChanged::BeforeDelete()
{
}

void FEventCapstanArmIntentChanged::AfterRead()
{
}

void FEventCapstanArmIntentChanged::BeforeDelete()
{
}

void FAthenaAnimationCannonConcealedAnimData::AfterRead()
{
	READ_PTR_FULL(InCannonIdle, UAnimSequence);
	READ_PTR_FULL(FiredFromCannon, UAnimSequence);
}

void FAthenaAnimationCannonConcealedAnimData::BeforeDelete()
{
	DELE_PTR_FULL(InCannonIdle);
	DELE_PTR_FULL(FiredFromCannon);
}

void FAthenaAnimationCannonAnimData::AfterRead()
{
	READ_PTR_FULL(Into, UBlendSpace1D);
	READ_PTR_FULL(Fire, UBlendSpace1D);
	READ_PTR_FULL(Outof, UBlendSpace1D);
}

void FAthenaAnimationCannonAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Fire);
	DELE_PTR_FULL(Outof);
}

void FAthenaAICharacterNewWaveGroupSpawned::AfterRead()
{
}

void FAthenaAICharacterNewWaveGroupSpawned::BeforeDelete()
{
}

void FAthenaAICharacterWasKilledWhileCursed::AfterRead()
{
	READ_PTR_FULL(Instigator, AActor);
}

void FAthenaAICharacterWasKilledWhileCursed::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
}

void FAthenaPlayerZonePenetrationTrackerUpdateEvent::AfterRead()
{
	READ_PTR_FULL(PenetratedActor, AActor);
	READ_PTR_FULL(Player, AActor);
}

void FAthenaPlayerZonePenetrationTrackerUpdateEvent::BeforeDelete()
{
	DELE_PTR_FULL(PenetratedActor);
	DELE_PTR_FULL(Player);
}

void FBlinkStrafeEvent::AfterRead()
{
}

void FBlinkStrafeEvent::BeforeDelete()
{
}

void FCapturedByKrakenActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FCapturedByKrakenActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FCharacterActionStateConstructionInfo::AfterRead()
{
	FActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(CharacterOwner, AAthenaCharacter);
}

void FCharacterActionStateConstructionInfo::BeforeDelete()
{
	FActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(CharacterOwner);
}

void FClientConditionsCompleteNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FClientConditionsCompleteNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FDockToObjectActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FDockToObjectActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FControlObjectActionStateConstructionInfo::AfterRead()
{
	FDockToObjectActionStateConstructionInfo::AfterRead();

}

void FControlObjectActionStateConstructionInfo::BeforeDelete()
{
	FDockToObjectActionStateConstructionInfo::BeforeDelete();

}

void FDockToObjectActionStateParams::AfterRead()
{
}

void FDockToObjectActionStateParams::BeforeDelete()
{
}

void FControlObjectActionStateParams::AfterRead()
{
	FDockToObjectActionStateParams::AfterRead();

}

void FControlObjectActionStateParams::BeforeDelete()
{
	FDockToObjectActionStateParams::BeforeDelete();

}

void FLookAtOffsetParams::AfterRead()
{
}

void FLookAtOffsetParams::BeforeDelete()
{
}

void FControlPulleyActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FControlPulleyActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FControlPulleyActionStateConstructionInfo::AfterRead()
{
	FControlObjectActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(AnalogInputId, UClass);
}

void FControlPulleyActionStateConstructionInfo::BeforeDelete()
{
	FControlObjectActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(AnalogInputId);
}

void FEmoteActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FEmoteActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEmoteActionStateParams::AfterRead()
{
}

void FEmoteActionStateParams::BeforeDelete()
{
}

void FEventEmissaryFlagMeshChanged::AfterRead()
{
}

void FEventEmissaryFlagMeshChanged::BeforeDelete()
{
}

void FEventSailFullyRaised::AfterRead()
{
}

void FEventSailFullyRaised::BeforeDelete()
{
}

void FEventSailFullyLowered::AfterRead()
{
}

void FEventSailFullyLowered::BeforeDelete()
{
}

void FEventSailLostPerfectWind::AfterRead()
{
}

void FEventSailLostPerfectWind::BeforeDelete()
{
}

void FEventSailGotPerfectWind::AfterRead()
{
}

void FEventSailGotPerfectWind::BeforeDelete()
{
}

void FEventShipLightStateChange::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
	READ_PTR_FULL(Light, AShipInteractableLight);
}

void FEventShipLightStateChange::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Light);
}

void FEventCrewShipManifestChanged::AfterRead()
{
	READ_PTR_FULL(Ship, AShip);
	READ_PTR_FULL(Manifest, ACrewShipManifest);
}

void FEventCrewShipManifestChanged::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Manifest);
}

void FEventWheelDamageLevelChanged::AfterRead()
{
	READ_PTR_FULL(Wheel, AActor);
}

void FEventWheelDamageLevelChanged::BeforeDelete()
{
	DELE_PTR_FULL(Wheel);
}

void FEventWheelTurningThresholdExceeded::AfterRead()
{
}

void FEventWheelTurningThresholdExceeded::BeforeDelete()
{
}

void FEventFightingWheelAgainstTurbulenceStop::AfterRead()
{
}

void FEventFightingWheelAgainstTurbulenceStop::BeforeDelete()
{
}

void FEventFightingWheelAgainstTurbulenceStart::AfterRead()
{
}

void FEventFightingWheelAgainstTurbulenceStart::BeforeDelete()
{
}

void FEventWheelCentered::AfterRead()
{
}

void FEventWheelCentered::BeforeDelete()
{
}

void FEventWheelStoppedMoving::AfterRead()
{
}

void FEventWheelStoppedMoving::BeforeDelete()
{
}

void FEventWheelStartedMoving::AfterRead()
{
}

void FEventWheelStartedMoving::BeforeDelete()
{
}

void FEventStatueThreatWasDefeated::AfterRead()
{
	READ_PTR_FULL(Instigator, AActor);
	READ_PTR_FULL(DirectInstigator, AActor);
}

void FEventStatueThreatWasDefeated::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
	DELE_PTR_FULL(DirectInstigator);
}

void FMermaidStatueDespawnedTelemetryEvent::AfterRead()
{
}

void FMermaidStatueDespawnedTelemetryEvent::BeforeDelete()
{
}

void FMermaidStatueSpawnTelemetryEvent::AfterRead()
{
}

void FMermaidStatueSpawnTelemetryEvent::BeforeDelete()
{
}

void FEventStormLightningImpact::AfterRead()
{
}

void FEventStormLightningImpact::BeforeDelete()
{
}

void FNewTitlesAvailableToBuyNotificationEvent::AfterRead()
{
}

void FNewTitlesAvailableToBuyNotificationEvent::BeforeDelete()
{
}

void FTutorialEventControlledObjectDestroyed::AfterRead()
{
	READ_PTR_FULL(TutorialEventControlledObject, ATutorialEventControlledObject);
}

void FTutorialEventControlledObjectDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(TutorialEventControlledObject);
}

void FTutorialEventControlledObjectCreated::AfterRead()
{
	READ_PTR_FULL(TutorialEventControlledObject, ATutorialEventControlledObject);
}

void FTutorialEventControlledObjectCreated::BeforeDelete()
{
	DELE_PTR_FULL(TutorialEventControlledObject);
}

void FOnHandleBackwardMovementStopped::AfterRead()
{
}

void FOnHandleBackwardMovementStopped::BeforeDelete()
{
}

void FOnHandleBackwardMovementStarted::AfterRead()
{
}

void FOnHandleBackwardMovementStarted::BeforeDelete()
{
}

void FOnHandleForwardMovementStopped::AfterRead()
{
}

void FOnHandleForwardMovementStopped::BeforeDelete()
{
}

void FOnHandleForwardMovementStarted::AfterRead()
{
}

void FOnHandleForwardMovementStarted::BeforeDelete()
{
}

void FPlayerBucketEmptyTelemetryEvent::AfterRead()
{
}

void FPlayerBucketEmptyTelemetryEvent::BeforeDelete()
{
}

void FPlayerBucketScoopTelemetryEvent::AfterRead()
{
}

void FPlayerBucketScoopTelemetryEvent::BeforeDelete()
{
}

void FUseItemOnServerRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(Item, AWieldableItem);
}

void FUseItemOnServerRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(Item);
}

void FRequestBucketStateRpc::AfterRead()
{
	FUseItemOnServerRpc::AfterRead();

}

void FRequestBucketStateRpc::BeforeDelete()
{
	FUseItemOnServerRpc::BeforeDelete();

}

void FRejectGrenadeThrowRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(Grenade, AGrenade);
}

void FRejectGrenadeThrowRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(Grenade);
}

void FThrowGrenadeMulticastRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(Wielder, AActor);
	READ_PTR_FULL(Grenade, AGrenade);
	READ_PTR_FULL(ThrownProjectileType, UClass);
}

void FThrowGrenadeMulticastRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(Wielder);
	DELE_PTR_FULL(Grenade);
	DELE_PTR_FULL(ThrownProjectileType);
}

void FProjectileTimeStamp::AfterRead()
{
}

void FProjectileTimeStamp::BeforeDelete()
{
}

void FRemoteProjectileAim::AfterRead()
{
}

void FRemoteProjectileAim::BeforeDelete()
{
}

void FFireRequest::AfterRead()
{
	READ_PTR_FULL(Instigator, AActor);
}

void FFireRequest::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
}

void FFireWeaponOnServerRpc::AfterRead()
{
	FUseItemOnServerRpc::AfterRead();

}

void FFireWeaponOnServerRpc::BeforeDelete()
{
	FUseItemOnServerRpc::BeforeDelete();

}

void FEventProjectileWeaponFire::AfterRead()
{
}

void FEventProjectileWeaponFire::BeforeDelete()
{
}

void FEventProjectileWeaponReload::AfterRead()
{
}

void FEventProjectileWeaponReload::BeforeDelete()
{
}

void FProjectileWeaponFireStatsTelemetryEvent::AfterRead()
{
}

void FProjectileWeaponFireStatsTelemetryEvent::BeforeDelete()
{
}

void FProjectileWeaponFiredTelemetryEvent::AfterRead()
{
}

void FProjectileWeaponFiredTelemetryEvent::BeforeDelete()
{
}

void FEmptyWaterFromVaultData::AfterRead()
{
}

void FEmptyWaterFromVaultData::BeforeDelete()
{
}

void FAddWaterToVaultData::AfterRead()
{
}

void FAddWaterToVaultData::BeforeDelete()
{
}

void FSetVaultDoorStateData::AfterRead()
{
}

void FSetVaultDoorStateData::BeforeDelete()
{
}

void FCustomModeResponseModel::AfterRead()
{
}

void FCustomModeResponseModel::BeforeDelete()
{
}

void FCustomModeRequestModel::AfterRead()
{
}

void FCustomModeRequestModel::BeforeDelete()
{
}

void FPlayerCharacterSnapshot::AfterRead()
{
}

void FPlayerCharacterSnapshot::BeforeDelete()
{
}

void FCollectedBootySnapshot::AfterRead()
{
}

void FCollectedBootySnapshot::BeforeDelete()
{
}

void FWheelSnapshot::AfterRead()
{
}

void FWheelSnapshot::BeforeDelete()
{
}

void FCapstanSnapshot::AfterRead()
{
}

void FCapstanSnapshot::BeforeDelete()
{
}

void FMastSnapshot::AfterRead()
{
}

void FMastSnapshot::BeforeDelete()
{
}

void FCannonSnapshot::AfterRead()
{
}

void FCannonSnapshot::BeforeDelete()
{
}

void FBarrelSnapshot::AfterRead()
{
}

void FBarrelSnapshot::BeforeDelete()
{
}

void FIslandSnapshot::AfterRead()
{
}

void FIslandSnapshot::BeforeDelete()
{
}

void FWorldEventSnapshot::AfterRead()
{
}

void FWorldEventSnapshot::BeforeDelete()
{
}

void FPlayerDeemedInactiveTelemetryEvent::AfterRead()
{
}

void FPlayerDeemedInactiveTelemetryEvent::BeforeDelete()
{
}

void FLoadoutRepairTelemetryEventBase::AfterRead()
{
}

void FLoadoutRepairTelemetryEventBase::BeforeDelete()
{
}

void FLoadoutRepairFailedTelemetryEvent::AfterRead()
{
	FLoadoutRepairTelemetryEventBase::AfterRead();

}

void FLoadoutRepairFailedTelemetryEvent::BeforeDelete()
{
	FLoadoutRepairTelemetryEventBase::BeforeDelete();

}

void FLoadoutRepairSuccessTelemetryEvent::AfterRead()
{
	FLoadoutRepairTelemetryEventBase::AfterRead();

}

void FLoadoutRepairSuccessTelemetryEvent::BeforeDelete()
{
	FLoadoutRepairTelemetryEventBase::BeforeDelete();

}

void FServiceStatusNotificationModel::AfterRead()
{
}

void FServiceStatusNotificationModel::BeforeDelete()
{
}

void FServiceStatusNotificationCollectionModel::AfterRead()
{
}

void FServiceStatusNotificationCollectionModel::BeforeDelete()
{
}

void FStickyNotificationUpdatedMessage::AfterRead()
{
}

void FStickyNotificationUpdatedMessage::BeforeDelete()
{
}

void FRewardHandInPopupNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
	READ_PTR_FULL(AudioOverride, UPopUpAudioDesc);
}

void FRewardHandInPopupNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
	DELE_PTR_FULL(AudioOverride);
}

void FServerAllocationSessionCookie::AfterRead()
{
}

void FServerAllocationSessionCookie::BeforeDelete()
{
}

void FCappedCount::AfterRead()
{
}

void FCappedCount::BeforeDelete()
{
}

void FMoreInfoDetails::AfterRead()
{
}

void FMoreInfoDetails::BeforeDelete()
{
}

void FEventCompanyReputationCampaignInformation::AfterRead()
{
}

void FEventCompanyReputationCampaignInformation::BeforeDelete()
{
}

void FEventCompanyReputationCampaignInformationResponse::AfterRead()
{
}

void FEventCompanyReputationCampaignInformationResponse::BeforeDelete()
{
}

void FEventCompanyReputationCampaignInformationRequest::AfterRead()
{
}

void FEventCompanyReputationCampaignInformationRequest::BeforeDelete()
{
}

void FEmissaryState::AfterRead()
{
}

void FEmissaryState::BeforeDelete()
{
}

void FReputationCompanyDisplayInformation::AfterRead()
{
}

void FReputationCompanyDisplayInformation::BeforeDelete()
{
}

void FEmblemInformation::AfterRead()
{
}

void FEmblemInformation::BeforeDelete()
{
}

void FEmblemSetInformation::AfterRead()
{
}

void FEmblemSetInformation::BeforeDelete()
{
}

void FCompanyScreenInformation::AfterRead()
{
}

void FCompanyScreenInformation::BeforeDelete()
{
}

void FEventCompanyScreenDisplayInformationResponse::AfterRead()
{
}

void FEventCompanyScreenDisplayInformationResponse::BeforeDelete()
{
}

void FEventCompanyScreenDisplayInformationRequest::AfterRead()
{
}

void FEventCompanyScreenDisplayInformationRequest::BeforeDelete()
{
}

void FBaseLightData::AfterRead()
{
	READ_PTR_FULL(LightFunctionMaterial, UMaterialInterface);
	READ_PTR_FULL(IESTexture, UTextureLightProfile);
}

void FBaseLightData::BeforeDelete()
{
	DELE_PTR_FULL(LightFunctionMaterial);
	DELE_PTR_FULL(IESTexture);
}

void FBaseLightTemplate::AfterRead()
{
}

void FBaseLightTemplate::BeforeDelete()
{
}

void FPointLightData::AfterRead()
{
}

void FPointLightData::BeforeDelete()
{
}

void FCrewBeganTaleEvent::AfterRead()
{
}

void FCrewBeganTaleEvent::BeforeDelete()
{
}

void FInteractionOption::AfterRead()
{
}

void FInteractionOption::BeforeDelete()
{
}

void FInteractionDefinition::AfterRead()
{
}

void FInteractionDefinition::BeforeDelete()
{
}

void FUpdateInteractionEvent::AfterRead()
{
}

void FUpdateInteractionEvent::BeforeDelete()
{
}

void FSittingActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

	READ_PTR_FULL(OnSitSfx, UWwiseEvent);
	READ_PTR_FULL(OnStandSfx, UWwiseEvent);
	READ_PTR_FULL(SeatPool, UWwiseObjectPoolWrapper);
}

void FSittingActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

	DELE_PTR_FULL(OnSitSfx);
	DELE_PTR_FULL(OnStandSfx);
	DELE_PTR_FULL(SeatPool);
}

void FSittingActionStateConstructionInfo::AfterRead()
{
	FControlObjectActionStateConstructionInfo::AfterRead();

}

void FSittingActionStateConstructionInfo::BeforeDelete()
{
	FControlObjectActionStateConstructionInfo::BeforeDelete();

}

void FEventLocalPlayerExittedSittingState::AfterRead()
{
}

void FEventLocalPlayerExittedSittingState::BeforeDelete()
{
}

void FEventLocalPlayerEnteredSittingState::AfterRead()
{
}

void FEventLocalPlayerEnteredSittingState::BeforeDelete()
{
}

void FTaleQuestTaskCompleteTelemetryEvent::AfterRead()
{
}

void FTaleQuestTaskCompleteTelemetryEvent::BeforeDelete()
{
}

void FTelemetryFragmentInput::AfterRead()
{
}

void FTelemetryFragmentInput::BeforeDelete()
{
}

void FTunnelOfTheDamnedBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FTunnelOfTheDamnedBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FEventSetFishingRodBend::AfterRead()
{
}

void FEventSetFishingRodBend::BeforeDelete()
{
}

void FEventSetFishingReelingSpeed::AfterRead()
{
}

void FEventSetFishingReelingSpeed::BeforeDelete()
{
}

void FEventSetFishingAnimationState::AfterRead()
{
}

void FEventSetFishingAnimationState::BeforeDelete()
{
}

void FEventFishingCastingFailed::AfterRead()
{
}

void FEventFishingCastingFailed::BeforeDelete()
{
}

void FEventPlayerStoppedPlayingShanty::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerStoppedPlayingShanty::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventNewPlayerStartedPlayingShanty::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
	READ_PTR_FULL(Instrument, AActor);
	READ_PTR_FULL(Ensemble, AActor);
}

void FEventNewPlayerStartedPlayingShanty::BeforeDelete()
{
	DELE_PTR_FULL(Player);
	DELE_PTR_FULL(Instrument);
	DELE_PTR_FULL(Ensemble);
}

void FRiddleQuestGateCompletedEvent::AfterRead()
{
}

void FRiddleQuestGateCompletedEvent::BeforeDelete()
{
}

void FOnExitedDeepSeaRegion::AfterRead()
{
}

void FOnExitedDeepSeaRegion::BeforeDelete()
{
}

void FDeepSeaRegionAmbienceAudio::AfterRead()
{
	READ_PTR_FULL(PlayerInDeepSeaStart, UWwiseEvent);
	READ_PTR_FULL(PlayerInDeepSeaStop, UWwiseEvent);
}

void FDeepSeaRegionAmbienceAudio::BeforeDelete()
{
	DELE_PTR_FULL(PlayerInDeepSeaStart);
	DELE_PTR_FULL(PlayerInDeepSeaStop);
}

void FOnEnteredDeepSeaRegion::AfterRead()
{
}

void FOnEnteredDeepSeaRegion::BeforeDelete()
{
}

void FItemSpawnParams::AfterRead()
{
}

void FItemSpawnParams::BeforeDelete()
{
}

void FAthenaAnimationLocomotionTurningAnimData::AfterRead()
{
	READ_PTR_FULL(Turn90, UAnimSequence);
}

void FAthenaAnimationLocomotionTurningAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Turn90);
}

void FAthenaAnimationLocomotionStairsAnimData::AfterRead()
{
	READ_PTR_FULL(UpStairsLeft, UBlendSpace);
	READ_PTR_FULL(UpStairsRight, UBlendSpace);
	READ_PTR_FULL(DownStairsLeft, UBlendSpace);
	READ_PTR_FULL(DownStairsRight, UBlendSpace);
}

void FAthenaAnimationLocomotionStairsAnimData::BeforeDelete()
{
	DELE_PTR_FULL(UpStairsLeft);
	DELE_PTR_FULL(UpStairsRight);
	DELE_PTR_FULL(DownStairsLeft);
	DELE_PTR_FULL(DownStairsRight);
}

void FAthenaAnimationLocomotionAlternateAnimData::AfterRead()
{
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(MainMovement, UBlendSpace);
	READ_PTR_FULL(TurnOut, UAnimSequence);
	READ_PTR_FULL(RunStop, UBlendSpace);
}

void FAthenaAnimationLocomotionAlternateAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(MainMovement);
	DELE_PTR_FULL(TurnOut);
	DELE_PTR_FULL(RunStop);
}

void FContestVoyageIslandData::AfterRead()
{
}

void FContestVoyageIslandData::BeforeDelete()
{
}

void FWeightedContestIslandData::AfterRead()
{
}

void FWeightedContestIslandData::BeforeDelete()
{
}

void FContestIslandArchetype::AfterRead()
{
}

void FContestIslandArchetype::BeforeDelete()
{
}

void FCannonDesc::AfterRead()
{
	READ_PTR_FULL(CannonBarrelMesh, UStaticMesh);
	READ_PTR_FULL(CannonBoxMesh, USkeletalMesh);
}

void FCannonDesc::BeforeDelete()
{
	DELE_PTR_FULL(CannonBarrelMesh);
	DELE_PTR_FULL(CannonBoxMesh);
}

void FIslandEventIcons::AfterRead()
{
	READ_PTR_FULL(ActiveEventIcon, UTexture);
	READ_PTR_FULL(InactiveEventIcon, UTexture);
}

void FIslandEventIcons::BeforeDelete()
{
	DELE_PTR_FULL(ActiveEventIcon);
	DELE_PTR_FULL(InactiveEventIcon);
}

void FCanvasWorldMapBackgroundItems::AfterRead()
{
	READ_PTR_FULL(Texture, UTexture);
}

void FCanvasWorldMapBackgroundItems::BeforeDelete()
{
	DELE_PTR_FULL(Texture);
}

void FCanvasWorldMapSeaAreaItems::AfterRead()
{
	READ_PTR_FULL(Texture, UTexture);
}

void FCanvasWorldMapSeaAreaItems::BeforeDelete()
{
	DELE_PTR_FULL(Texture);
}

void FCanvasWorldMapForegroundItems::AfterRead()
{
	READ_PTR_FULL(Texture, UTexture);
}

void FCanvasWorldMapForegroundItems::BeforeDelete()
{
	DELE_PTR_FULL(Texture);
}

void FMapTableCanvasDetails::AfterRead()
{
}

void FMapTableCanvasDetails::BeforeDelete()
{
}

void FCanvasLerpData::AfterRead()
{
}

void FCanvasLerpData::BeforeDelete()
{
}

void FIslandEventData::AfterRead()
{
	READ_PTR_FULL(EventType, UClass);
}

void FIslandEventData::BeforeDelete()
{
	DELE_PTR_FULL(EventType);
}

void FInventoryMemory::AfterRead()
{
}

void FInventoryMemory::BeforeDelete()
{
}

void FTreasureMapWidget::AfterRead()
{
}

void FTreasureMapWidget::BeforeDelete()
{
}

void FTreasureMapWidgetText::AfterRead()
{
	FTreasureMapWidget::AfterRead();

}

void FTreasureMapWidgetText::BeforeDelete()
{
	FTreasureMapWidget::BeforeDelete();

}

void FAthenaWorldSettingsGameEventSchedulerSettingsConfiguration::AfterRead()
{
	READ_PTR_FULL(EventSchedulerSettings, UGameEventSchedulerSettingsAsset);
}

void FAthenaWorldSettingsGameEventSchedulerSettingsConfiguration::BeforeDelete()
{
	DELE_PTR_FULL(EventSchedulerSettings);
}

void FWorldSafeZone::AfterRead()
{
}

void FWorldSafeZone::BeforeDelete()
{
}

void FDeferredBakedDecal::AfterRead()
{
}

void FDeferredBakedDecal::BeforeDelete()
{
}

void FStartPickupObjectActionRuleParams::AfterRead()
{
}

void FStartPickupObjectActionRuleParams::BeforeDelete()
{
}

void FItemProxyImpactVfxParams::AfterRead()
{
	READ_PTR_FULL(Particles, UObject);
}

void FItemProxyImpactVfxParams::BeforeDelete()
{
	DELE_PTR_FULL(Particles);
}

void FBootyItemSellPrerequisites::AfterRead()
{
}

void FBootyItemSellPrerequisites::BeforeDelete()
{
}

void FRewardId::AfterRead()
{
}

void FRewardId::BeforeDelete()
{
}

void FCompanySpecificBootyReward::AfterRead()
{
	READ_PTR_FULL(CompanyId, UClass);
}

void FCompanySpecificBootyReward::BeforeDelete()
{
	DELE_PTR_FULL(CompanyId);
}

void FItemSpawnTransformWithRandomQuantity::AfterRead()
{
	READ_PTR_FULL(ReferencedSpawnDistributionAssetWithRandomQuantity, UWeightedItemDescSpawnDataAssetWithRandomQuantity);
}

void FItemSpawnTransformWithRandomQuantity::BeforeDelete()
{
	DELE_PTR_FULL(ReferencedSpawnDistributionAssetWithRandomQuantity);
}

void FLookAtOffset::AfterRead()
{
}

void FLookAtOffset::BeforeDelete()
{
}

void FCloudTypeNormalizedWeight::AfterRead()
{
}

void FCloudTypeNormalizedWeight::BeforeDelete()
{
}

void FCloudTypeDefinition::AfterRead()
{
	READ_PTR_FULL(CloudMesh, UStaticMesh);
	READ_PTR_FULL(CloudFluffyMesh, UStaticMesh);
}

void FCloudTypeDefinition::BeforeDelete()
{
	DELE_PTR_FULL(CloudMesh);
	DELE_PTR_FULL(CloudFluffyMesh);
}

void FRenderedCloudProperties::AfterRead()
{
}

void FRenderedCloudProperties::BeforeDelete()
{
}

void FTiledCloudProperties::AfterRead()
{
}

void FTiledCloudProperties::BeforeDelete()
{
}

void FCloudVisualParameters::AfterRead()
{
	READ_PTR_FULL(MaterialTemplatePointCloudSolid, UMaterialInterface);
	READ_PTR_FULL(MaterialTemplatePointCloudFluffy, UMaterialInterface);
	READ_PTR_FULL(MaterialTemplateStreetCloudSolid, UMaterialInterface);
	READ_PTR_FULL(MaterialTemplateStreetCloudFluffy, UMaterialInterface);
}

void FCloudVisualParameters::BeforeDelete()
{
	DELE_PTR_FULL(MaterialTemplatePointCloudSolid);
	DELE_PTR_FULL(MaterialTemplatePointCloudFluffy);
	DELE_PTR_FULL(MaterialTemplateStreetCloudSolid);
	DELE_PTR_FULL(MaterialTemplateStreetCloudFluffy);
}

void FActorId::AfterRead()
{
}

void FActorId::BeforeDelete()
{
}

void FWeakActorHandle::AfterRead()
{
}

void FWeakActorHandle::BeforeDelete()
{
}

void FWalkConditionsParams::AfterRead()
{
}

void FWalkConditionsParams::BeforeDelete()
{
}

void FSprintConditionsParams::AfterRead()
{
}

void FSprintConditionsParams::BeforeDelete()
{
}

void FAchievementKillOpponentFromBehindWithBlunderbuss::AfterRead()
{
}

void FAchievementKillOpponentFromBehindWithBlunderbuss::BeforeDelete()
{
}

void FAchievementHeavyAttackRivalOffTheirShip::AfterRead()
{
	READ_PTR_FULL(Character, AAthenaCharacter);
}

void FAchievementHeavyAttackRivalOffTheirShip::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FAchievementBlockThenHitAndGetBlockedThenTakeHit::AfterRead()
{
	READ_PTR_FULL(Character, AAthenaPlayerCharacter);
}

void FAchievementBlockThenHitAndGetBlockedThenTakeHit::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FAchievementHaveADrinkWithAnotherCrewAtAnOutpost::AfterRead()
{
	READ_PTR_FULL(Character, AAthenaPlayerCharacter);
}

void FAchievementHaveADrinkWithAnotherCrewAtAnOutpost::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FAchievementKillOpponentInContest::AfterRead()
{
}

void FAchievementKillOpponentInContest::BeforeDelete()
{
}

void FAthenaPlayerCharacterModelSwap::AfterRead()
{
	READ_PTR_FULL(FirstPersonMesh, USkeletalMesh);
	READ_PTR_FULL(FirstPersonAnimSetDataId, UClass);
	READ_PTR_FULL(ThirdPersonMesh, USkeletalMesh);
	READ_PTR_FULL(ThirdPersonAnimSetDataId, UClass);
}

void FAthenaPlayerCharacterModelSwap::BeforeDelete()
{
	DELE_PTR_FULL(FirstPersonMesh);
	DELE_PTR_FULL(FirstPersonAnimSetDataId);
	DELE_PTR_FULL(ThirdPersonMesh);
	DELE_PTR_FULL(ThirdPersonAnimSetDataId);
}

void FQuestVariableAsset::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableAsset::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FCrewAllianceJoinStatus::AfterRead()
{
}

void FCrewAllianceJoinStatus::BeforeDelete()
{
}

void FAlliance::AfterRead()
{
}

void FAlliance::BeforeDelete()
{
}

void FNPCAnimationSequence::AfterRead()
{
	READ_PTR_FULL(AnimationSequence, UAnimSequenceBase);
	READ_PTR_FULL(FacialAdditive, UAnimMontage);
}

void FNPCAnimationSequence::BeforeDelete()
{
	DELE_PTR_FULL(AnimationSequence);
	DELE_PTR_FULL(FacialAdditive);
}

void FNPCAnimationContinuousCycle::AfterRead()
{
}

void FNPCAnimationContinuousCycle::BeforeDelete()
{
}

void FNPCContinuousAnimationElement::AfterRead()
{
}

void FNPCContinuousAnimationElement::BeforeDelete()
{
}

void FNPCOneShotAnimationElement::AfterRead()
{
}

void FNPCOneShotAnimationElement::BeforeDelete()
{
}

void FAnimNotifyWwiseObserver::AfterRead()
{
	READ_PTR_FULL(OnEventPosted, UWwiseEvent);
}

void FAnimNotifyWwiseObserver::BeforeDelete()
{
	DELE_PTR_FULL(OnEventPosted);
}

void FQuestVariableClass::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableClass::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FOneShotAnimationElement::AfterRead()
{
}

void FOneShotAnimationElement::BeforeDelete()
{
}

void FAnimationContinuousCycle::AfterRead()
{
	READ_PTR_FULL(In, UAnimSequence);
	READ_PTR_FULL(LoopHitReact, UBlendSpace1D);
	READ_PTR_FULL(Out, UAnimSequence);
}

void FAnimationContinuousCycle::BeforeDelete()
{
	DELE_PTR_FULL(In);
	DELE_PTR_FULL(LoopHitReact);
	DELE_PTR_FULL(Out);
}

void FContinuousAnimationElement::AfterRead()
{
}

void FContinuousAnimationElement::BeforeDelete()
{
}

void FSkeletonCustomAnimationDataStructure::AfterRead()
{
	READ_PTR_FULL(WieldableCosmeticItemList, UNPCHeldObjectData);
}

void FSkeletonCustomAnimationDataStructure::BeforeDelete()
{
	DELE_PTR_FULL(WieldableCosmeticItemList);
}

void FAthenaAnimationLocomotion::AfterRead()
{
	READ_PTR_FULL(CachedOwner, UAthenaAnimationInstance);
}

void FAthenaAnimationLocomotion::BeforeDelete()
{
	DELE_PTR_FULL(CachedOwner);
}

void FAthenaAnimationObjectLocomotionAnimations::AfterRead()
{
	READ_PTR_FULL(Locomotion1, UBlendSpace);
	READ_PTR_FULL(Locomotion2, UBlendSpace);
	READ_PTR_FULL(Locomotion3, UBlendSpace);
	READ_PTR_FULL(Locomotion4, UBlendSpace);
	READ_PTR_FULL(LocomotionTurningLeft, UAnimSequence);
	READ_PTR_FULL(LocomotionTurningRight, UAnimSequence);
	READ_PTR_FULL(LocomotionOutOf, UAnimSequence);
	READ_PTR_FULL(LocomotionSwimming, UBlendSpace);
}

void FAthenaAnimationObjectLocomotionAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Locomotion1);
	DELE_PTR_FULL(Locomotion2);
	DELE_PTR_FULL(Locomotion3);
	DELE_PTR_FULL(Locomotion4);
	DELE_PTR_FULL(LocomotionTurningLeft);
	DELE_PTR_FULL(LocomotionTurningRight);
	DELE_PTR_FULL(LocomotionOutOf);
	DELE_PTR_FULL(LocomotionSwimming);
}

void FAthenaAnimationObjectJumpingAnimations::AfterRead()
{
	READ_PTR_FULL(Start, UBlendSpace);
	READ_PTR_FULL(Cycle, UBlendSpace);
	READ_PTR_FULL(PreImpact, UBlendSpace);
	READ_PTR_FULL(LandLight, UBlendSpace);
}

void FAthenaAnimationObjectJumpingAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Start);
	DELE_PTR_FULL(Cycle);
	DELE_PTR_FULL(PreImpact);
	DELE_PTR_FULL(LandLight);
}

void FAthenaAnimationObjectEquipAnimations::AfterRead()
{
	READ_PTR_FULL(Equip, UAnimSequence);
	READ_PTR_FULL(EquipAsBlendSpace, UBlendSpace);
	READ_PTR_FULL(EquipSwimming, UBlendSpace);
	READ_PTR_FULL(UnEquip, UAnimSequence);
	READ_PTR_FULL(UnEquipAsBlendSpace, UBlendSpace);
	READ_PTR_FULL(Pickup, UAnimSequence);
	READ_PTR_FULL(Drop, UAnimSequence);
}

void FAthenaAnimationObjectEquipAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Equip);
	DELE_PTR_FULL(EquipAsBlendSpace);
	DELE_PTR_FULL(EquipSwimming);
	DELE_PTR_FULL(UnEquip);
	DELE_PTR_FULL(UnEquipAsBlendSpace);
	DELE_PTR_FULL(Pickup);
	DELE_PTR_FULL(Drop);
}

void FAthenaAnimationObjectIdleAnimations::AfterRead()
{
	READ_PTR_FULL(Idle1, UAnimSequence);
	READ_PTR_FULL(Idle2, UAnimSequence);
	READ_PTR_FULL(Idle3, UAnimSequence);
}

void FAthenaAnimationObjectIdleAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Idle1);
	DELE_PTR_FULL(Idle2);
	DELE_PTR_FULL(Idle3);
}

void FAthenaAnimationObjectActionOneShot::AfterRead()
{
}

void FAthenaAnimationObjectActionOneShot::BeforeDelete()
{
}

void FAthenaAnimationObjectActionContinuousSwimming::AfterRead()
{
	READ_PTR_FULL(MainInSwimming, UBlendSpace);
	READ_PTR_FULL(MainOneShotInSwimming, UBlendSpace);
	READ_PTR_FULL(MainCycleSwimming, UBlendSpace);
	READ_PTR_FULL(MainOutSwimming, UBlendSpace);
}

void FAthenaAnimationObjectActionContinuousSwimming::BeforeDelete()
{
	DELE_PTR_FULL(MainInSwimming);
	DELE_PTR_FULL(MainOneShotInSwimming);
	DELE_PTR_FULL(MainCycleSwimming);
	DELE_PTR_FULL(MainOutSwimming);
}

void FAthenaAnimationObjectActionOneShotPitchOverride::AfterRead()
{
}

void FAthenaAnimationObjectActionOneShotPitchOverride::BeforeDelete()
{
}

void FAthenaAnimationObjectJumpingAnimationsPitchOverride::AfterRead()
{
	READ_PTR_FULL(Start, UBlendSpace1D);
	READ_PTR_FULL(Cycle, UBlendSpace1D);
	READ_PTR_FULL(PreImpact, UBlendSpace1D);
	READ_PTR_FULL(LandLight, UBlendSpace1D);
}

void FAthenaAnimationObjectJumpingAnimationsPitchOverride::BeforeDelete()
{
	DELE_PTR_FULL(Start);
	DELE_PTR_FULL(Cycle);
	DELE_PTR_FULL(PreImpact);
	DELE_PTR_FULL(LandLight);
}

void FAthenaAnimationObjectComplexOneShot::AfterRead()
{
	READ_PTR_FULL(WarmUp, UAnimSequence);
	READ_PTR_FULL(WarmUpFromBlock, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Recover, UAnimSequence);
	READ_PTR_FULL(HeavyAttackStunRecover, UAnimSequence);
}

void FAthenaAnimationObjectComplexOneShot::BeforeDelete()
{
	DELE_PTR_FULL(WarmUp);
	DELE_PTR_FULL(WarmUpFromBlock);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Recover);
	DELE_PTR_FULL(HeavyAttackStunRecover);
}

void FAthenaAnimationObjectFacial::AfterRead()
{
}

void FAthenaAnimationObjectFacial::BeforeDelete()
{
}

void FAthenaAnimationSkeletonKnockbackLocomotion::AfterRead()
{
	READ_PTR_FULL(Forwards, UAnimSequence);
	READ_PTR_FULL(Backwards, UAnimSequence);
}

void FAthenaAnimationSkeletonKnockbackLocomotion::BeforeDelete()
{
	DELE_PTR_FULL(Forwards);
	DELE_PTR_FULL(Backwards);
}

void FAthenaAnimationFishingAnimations::AfterRead()
{
	READ_PTR_FULL(CastIntoHoldBack, UAnimSequence);
	READ_PTR_FULL(CastHoldBackLoop, UBlendSpace);
	READ_PTR_FULL(CastForwards, UAnimSequence);
	READ_PTR_FULL(CastHoldLoop, UAnimSequence);
	READ_PTR_FULL(CastToFishing, UAnimSequence);
	READ_PTR_FULL(CastFail, UAnimSequence);
	READ_PTR_FULL(Fishing, UBlendSpace);
	READ_PTR_FULL(FishingAdditive, UBlendSpace1D);
	READ_PTR_FULL(IntoFighting, UBlendSpace1D);
	READ_PTR_FULL(FightingCentral, UBlendSpace);
	READ_PTR_FULL(FightingAdditive, UBlendSpace1D);
	READ_PTR_FULL(Linesnap, UBlendSpace1D);
	READ_PTR_FULL(SuccessReelIn, UAnimSequence);
	READ_PTR_FULL(ComedyItemSuccessReelIn, UAnimSequence);
	READ_PTR_FULL(ShakingAdditive, UAnimSequence);
	READ_PTR_FULL(LineSnapShakingAdditive, UAnimSequence);
	READ_PTR_FULL(FishingToIdle, UAnimSequence);
	READ_PTR_FULL(FishingToUnequip, UAnimSequence);
}

void FAthenaAnimationFishingAnimations::BeforeDelete()
{
	DELE_PTR_FULL(CastIntoHoldBack);
	DELE_PTR_FULL(CastHoldBackLoop);
	DELE_PTR_FULL(CastForwards);
	DELE_PTR_FULL(CastHoldLoop);
	DELE_PTR_FULL(CastToFishing);
	DELE_PTR_FULL(CastFail);
	DELE_PTR_FULL(Fishing);
	DELE_PTR_FULL(FishingAdditive);
	DELE_PTR_FULL(IntoFighting);
	DELE_PTR_FULL(FightingCentral);
	DELE_PTR_FULL(FightingAdditive);
	DELE_PTR_FULL(Linesnap);
	DELE_PTR_FULL(SuccessReelIn);
	DELE_PTR_FULL(ComedyItemSuccessReelIn);
	DELE_PTR_FULL(ShakingAdditive);
	DELE_PTR_FULL(LineSnapShakingAdditive);
	DELE_PTR_FULL(FishingToIdle);
	DELE_PTR_FULL(FishingToUnequip);
}

void FAthenaAnimationFirstPersonTurnDelay::AfterRead()
{
}

void FAthenaAnimationFirstPersonTurnDelay::BeforeDelete()
{
}

void FAthenaAnimationHandHeldItemParams::AfterRead()
{
}

void FAthenaAnimationHandHeldItemParams::BeforeDelete()
{
}

void FAthenaAnimationIdleVariantChange::AfterRead()
{
}

void FAthenaAnimationIdleVariantChange::BeforeDelete()
{
}

void FAthenaAnimationControllableFacialAnimData::AfterRead()
{
	READ_PTR_FULL(Capstan, UBlendSpace1D);
	READ_PTR_FULL(SailAction, UAnimSequence);
	READ_PTR_FULL(SailIdle, UAnimSequence);
	READ_PTR_FULL(CannonFire, UAnimSequence);
	READ_PTR_FULL(CannonAim, UAnimSequence);
	READ_PTR_FULL(HarpoonFire, UAnimSequence);
}

void FAthenaAnimationControllableFacialAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Capstan);
	DELE_PTR_FULL(SailAction);
	DELE_PTR_FULL(SailIdle);
	DELE_PTR_FULL(CannonFire);
	DELE_PTR_FULL(CannonAim);
	DELE_PTR_FULL(HarpoonFire);
}

void FAthenaAnimationFire::AfterRead()
{
}

void FAthenaAnimationFire::BeforeDelete()
{
}

void FAthenaAnimationRowboatAnimationsFirstPerson::AfterRead()
{
	READ_PTR_FULL(SitDown, UAnimSequence);
	READ_PTR_FULL(Stand, UAnimSequence);
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(Row, UAnimSequence);
	READ_PTR_FULL(Recover, UAnimSequence);
	READ_PTR_FULL(Brake, UAnimSequence);
}

void FAthenaAnimationRowboatAnimationsFirstPerson::BeforeDelete()
{
	DELE_PTR_FULL(SitDown);
	DELE_PTR_FULL(Stand);
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(Row);
	DELE_PTR_FULL(Recover);
	DELE_PTR_FULL(Brake);
}

void FAthenaAnimationRowboatAnimationsThirdPerson::AfterRead()
{
	READ_PTR_FULL(SitDown, UAnimSequence);
	READ_PTR_FULL(Stand, UAnimSequence);
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(Row, UBlendSpace1D);
	READ_PTR_FULL(Recover, UBlendSpace1D);
	READ_PTR_FULL(IntoRow, UBlendSpace1D);
	READ_PTR_FULL(IntoRowBrake, UBlendSpace1D);
	READ_PTR_FULL(BrakeRow, UBlendSpace1D);
	READ_PTR_FULL(BrakeRecover, UBlendSpace1D);
	READ_PTR_FULL(BrakeIdle, UBlendSpace1D);
}

void FAthenaAnimationRowboatAnimationsThirdPerson::BeforeDelete()
{
	DELE_PTR_FULL(SitDown);
	DELE_PTR_FULL(Stand);
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(Row);
	DELE_PTR_FULL(Recover);
	DELE_PTR_FULL(IntoRow);
	DELE_PTR_FULL(IntoRowBrake);
	DELE_PTR_FULL(BrakeRow);
	DELE_PTR_FULL(BrakeRecover);
	DELE_PTR_FULL(BrakeIdle);
}

void FAthenaAnimationRowboatAnimationsPassenger::AfterRead()
{
	READ_PTR_FULL(PassengerIntoSitting, UAnimSequence);
	READ_PTR_FULL(PassengerSittingIdle, UAnimSequence);
	READ_PTR_FULL(PassengerStand, UAnimSequence);
}

void FAthenaAnimationRowboatAnimationsPassenger::BeforeDelete()
{
	DELE_PTR_FULL(PassengerIntoSitting);
	DELE_PTR_FULL(PassengerSittingIdle);
	DELE_PTR_FULL(PassengerStand);
}

void FAthenaAnimationRowing::AfterRead()
{
	READ_PTR_FULL(ControlledObject, AActor);
	READ_PTR_FULL(CachedPlayerCharacter, AActor);
	READ_PTR_FULL(CosmeticOarClass, UClass);
}

void FAthenaAnimationRowing::BeforeDelete()
{
	DELE_PTR_FULL(ControlledObject);
	DELE_PTR_FULL(CachedPlayerCharacter);
	DELE_PTR_FULL(CosmeticOarClass);
}

void FAthenaAnimationWaterPumpAnimData::AfterRead()
{
	READ_PTR_FULL(IntoWaterPump, UAnimSequence);
	READ_PTR_FULL(WaterPumpIdle, UAnimSequence);
	READ_PTR_FULL(WaterPumpAction, UAnimSequence);
	READ_PTR_FULL(WaterPumpActionOverlay, UAnimSequence);
	READ_PTR_FULL(OutOfWaterPump, UAnimSequence);
}

void FAthenaAnimationWaterPumpAnimData::BeforeDelete()
{
	DELE_PTR_FULL(IntoWaterPump);
	DELE_PTR_FULL(WaterPumpIdle);
	DELE_PTR_FULL(WaterPumpAction);
	DELE_PTR_FULL(WaterPumpActionOverlay);
	DELE_PTR_FULL(OutOfWaterPump);
}

void FAthenaAnimationWaterPumpParams::AfterRead()
{
}

void FAthenaAnimationWaterPumpParams::BeforeDelete()
{
}

void FAthenaAnimationFishing::AfterRead()
{
	READ_PTR_FULL(FishingRodActor, AActor);
	READ_PTR_FULL(FishingFloat, AActor);
	READ_PTR_FULL(OwningAnimationInstance, UAthenaAnimationInstance);
}

void FAthenaAnimationFishing::BeforeDelete()
{
	DELE_PTR_FULL(FishingRodActor);
	DELE_PTR_FULL(FishingFloat);
	DELE_PTR_FULL(OwningAnimationInstance);
}

void FAthenaAnimationWaterSlideControlAnimData::AfterRead()
{
	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Outof, UAnimSequence);
}

void FAthenaAnimationWaterSlideControlAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Outof);
}

void FAthenaAnimationJumping::AfterRead()
{
}

void FAthenaAnimationJumping::BeforeDelete()
{
}

void FAthenaAnimationWaterPump::AfterRead()
{
	READ_PTR_FULL(WaterPump, AActor);
}

void FAthenaAnimationWaterPump::BeforeDelete()
{
	DELE_PTR_FULL(WaterPump);
}

void FAthenaAnimationLODSettings::AfterRead()
{
}

void FAthenaAnimationLODSettings::BeforeDelete()
{
}

void FAthenaAnimationWieldedItemStateMachine::AfterRead()
{
	READ_PTR_FULL(ContinuousUseInputId, UClass);
	READ_PTR_FULL(OutOfContinuousUseInputId, UClass);
	READ_PTR_FULL(OneShotUseInputId, UClass);
	READ_PTR_FULL(LastValidAnimSequence, UAnimSequence);
	READ_PTR_FULL(LastValidBlendspace, UBlendSpace1D);
	READ_PTR_FULL(PreviousWieldedItem, AActor);
}

void FAthenaAnimationWieldedItemStateMachine::BeforeDelete()
{
	DELE_PTR_FULL(ContinuousUseInputId);
	DELE_PTR_FULL(OutOfContinuousUseInputId);
	DELE_PTR_FULL(OneShotUseInputId);
	DELE_PTR_FULL(LastValidAnimSequence);
	DELE_PTR_FULL(LastValidBlendspace);
	DELE_PTR_FULL(PreviousWieldedItem);
}

void FAthenaAnimationActiveOneShotAnimationStruct::AfterRead()
{
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(ActionPitchOverride, UBlendSpace1D);
	READ_PTR_FULL(ActionLocomotion, UBlendSpace);
}

void FAthenaAnimationActiveOneShotAnimationStruct::BeforeDelete()
{
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(ActionPitchOverride);
	DELE_PTR_FULL(ActionLocomotion);
}

void FAthenaAnimationObjectActionOneShotPlayingStruct::AfterRead()
{
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(ActionVariant1, UAnimSequence);
	READ_PTR_FULL(ActionVariant2, UAnimSequence);
	READ_PTR_FULL(ActionVariant3, UAnimSequence);
	READ_PTR_FULL(ActionVariant4, UAnimSequence);
}

void FAthenaAnimationObjectActionOneShotPlayingStruct::BeforeDelete()
{
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(ActionVariant1);
	DELE_PTR_FULL(ActionVariant2);
	DELE_PTR_FULL(ActionVariant3);
	DELE_PTR_FULL(ActionVariant4);
}

void FAthenaAnimationActiveItemComplexAnimData::AfterRead()
{
	READ_PTR_FULL(WarmUp, UAnimSequence);
	READ_PTR_FULL(HeavyWarmUp, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Recover, UAnimSequence);
	READ_PTR_FULL(HeavyAttackStunRecover, UAnimSequence);
}

void FAthenaAnimationActiveItemComplexAnimData::BeforeDelete()
{
	DELE_PTR_FULL(WarmUp);
	DELE_PTR_FULL(HeavyWarmUp);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Recover);
	DELE_PTR_FULL(HeavyAttackStunRecover);
}

void FAthenaAnimationObjectComplexOneShotPlaySpeeds::AfterRead()
{
}

void FAthenaAnimationObjectComplexOneShotPlaySpeeds::BeforeDelete()
{
}

void FAthenaAnimationObjectMeleeBlocking::AfterRead()
{
	READ_PTR_FULL(BlockingInto, UAnimSequence);
	READ_PTR_FULL(BlockingIntoFromCombat, UAnimSequence);
	READ_PTR_FULL(BlockingMainBlendSpace, UBlendSpace);
	READ_PTR_FULL(BlockingFeedbackSequenceA, UAnimSequence);
	READ_PTR_FULL(BlockingFeedbackSequenceB, UAnimSequence);
	READ_PTR_FULL(BlockingOut, UAnimSequence);
	READ_PTR_FULL(Dodge, UBlendSpace);
	READ_PTR_FULL(BlockingIntoSwimming, UAnimSequence);
	READ_PTR_FULL(BlockingMainBlendSpaceSwimming, UBlendSpace);
	READ_PTR_FULL(BlockingFeedbackSequenceASwimming, UAnimSequence);
	READ_PTR_FULL(BlockingFeedbackSequenceBSwimming, UAnimSequence);
	READ_PTR_FULL(BlockingOutSwimming, UAnimSequence);
}

void FAthenaAnimationObjectMeleeBlocking::BeforeDelete()
{
	DELE_PTR_FULL(BlockingInto);
	DELE_PTR_FULL(BlockingIntoFromCombat);
	DELE_PTR_FULL(BlockingMainBlendSpace);
	DELE_PTR_FULL(BlockingFeedbackSequenceA);
	DELE_PTR_FULL(BlockingFeedbackSequenceB);
	DELE_PTR_FULL(BlockingOut);
	DELE_PTR_FULL(Dodge);
	DELE_PTR_FULL(BlockingIntoSwimming);
	DELE_PTR_FULL(BlockingMainBlendSpaceSwimming);
	DELE_PTR_FULL(BlockingFeedbackSequenceASwimming);
	DELE_PTR_FULL(BlockingFeedbackSequenceBSwimming);
	DELE_PTR_FULL(BlockingOutSwimming);
}

void FAthenaAnimationDebugTrackingParams::AfterRead()
{
}

void FAthenaAnimationDebugTrackingParams::BeforeDelete()
{
}

void FAthenaAnimationDeathAnimData::AfterRead()
{
	READ_PTR_FULL(SwimmingSurfaceDeath, UAnimSequence);
	READ_PTR_FULL(LocomotionDeath, UAnimSequence);
	READ_PTR_FULL(DrowningDeath, UAnimSequence);
	READ_PTR_FULL(WakeUp, UAnimSequence);
	READ_PTR_FULL(WakeUpSwimming, UAnimSequence);
	READ_PTR_FULL(DrowningDeath3rdPerson, UBlendSpace1D);
	READ_PTR_FULL(BeckonInto, UAnimSequence);
	READ_PTR_FULL(BeckonLoop, UAnimSequence);
}

void FAthenaAnimationDeathAnimData::BeforeDelete()
{
	DELE_PTR_FULL(SwimmingSurfaceDeath);
	DELE_PTR_FULL(LocomotionDeath);
	DELE_PTR_FULL(DrowningDeath);
	DELE_PTR_FULL(WakeUp);
	DELE_PTR_FULL(WakeUpSwimming);
	DELE_PTR_FULL(DrowningDeath3rdPerson);
	DELE_PTR_FULL(BeckonInto);
	DELE_PTR_FULL(BeckonLoop);
}

void FAthenaAnimationCamera::AfterRead()
{
}

void FAthenaAnimationCamera::BeforeDelete()
{
}

void FAthenaAnimationFirstPersonAnimatic::AfterRead()
{
	READ_PTR_FULL(FirstPersonAnimationToPlay, UAnimSequence);
	READ_PTR_FULL(FirstPersonAnimaticList, UFirstPersonAnimaticList);
}

void FAthenaAnimationFirstPersonAnimatic::BeforeDelete()
{
	DELE_PTR_FULL(FirstPersonAnimationToPlay);
	DELE_PTR_FULL(FirstPersonAnimaticList);
}

void FAthenaAnimationIKLimbStretch::AfterRead()
{
}

void FAthenaAnimationIKLimbStretch::BeforeDelete()
{
}

void FLadderBlendParams::AfterRead()
{
}

void FLadderBlendParams::BeforeDelete()
{
}

void FAthenaAnimationPitchAlpha::AfterRead()
{
}

void FAthenaAnimationPitchAlpha::BeforeDelete()
{
}

void FAthenaAnimationMountedWeapon::AfterRead()
{
	READ_PTR_FULL(ControlledObject, AActor);
}

void FAthenaAnimationMountedWeapon::BeforeDelete()
{
	DELE_PTR_FULL(ControlledObject);
}

void FAthenaAnimationPulleyControl::AfterRead()
{
}

void FAthenaAnimationPulleyControl::BeforeDelete()
{
}

void FAthenaAnimationPulleyControlAnimData::AfterRead()
{
	READ_PTR_FULL(Entry, UAnimSequence);
	READ_PTR_FULL(IntoLeft, UAnimSequence);
	READ_PTR_FULL(IdleLeft, UAnimSequence);
	READ_PTR_FULL(ActionLeft, UAnimSequence);
	READ_PTR_FULL(OutOfLeft, UAnimSequence);
	READ_PTR_FULL(IntoRight, UAnimSequence);
	READ_PTR_FULL(IdleRight, UAnimSequence);
	READ_PTR_FULL(ActionRight, UAnimSequence);
	READ_PTR_FULL(OutOfRight, UAnimSequence);
}

void FAthenaAnimationPulleyControlAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Entry);
	DELE_PTR_FULL(IntoLeft);
	DELE_PTR_FULL(IdleLeft);
	DELE_PTR_FULL(ActionLeft);
	DELE_PTR_FULL(OutOfLeft);
	DELE_PTR_FULL(IntoRight);
	DELE_PTR_FULL(IdleRight);
	DELE_PTR_FULL(ActionRight);
	DELE_PTR_FULL(OutOfRight);
}

void FAthenaAnimationKeyedInstrumentAnimData::AfterRead()
{
	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Outof, UAnimSequence);
}

void FAthenaAnimationKeyedInstrumentAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Outof);
}

void FAthenaAnimationSkeletonSensingAnimations::AfterRead()
{
	READ_PTR_FULL(UseWithObject, UClass);
	READ_PTR_FULL(InitialReaction, UAnimSequence);
	READ_PTR_FULL(Searching, UBlendSpace1D);
	READ_PTR_FULL(AlertingOthers, UAnimSequence);
	READ_PTR_FULL(Pursuit, UBlendSpace1D);
}

void FAthenaAnimationSkeletonSensingAnimations::BeforeDelete()
{
	DELE_PTR_FULL(UseWithObject);
	DELE_PTR_FULL(InitialReaction);
	DELE_PTR_FULL(Searching);
	DELE_PTR_FULL(AlertingOthers);
	DELE_PTR_FULL(Pursuit);
}

void FAthenaAnimationSkeletonSensingParams::AfterRead()
{
	READ_PTR_FULL(InitialReactionAnimation, UAnimSequence);
	READ_PTR_FULL(SearchingAnimation, UBlendSpace1D);
	READ_PTR_FULL(AlertingOthersAnimation, UAnimSequence);
	READ_PTR_FULL(PursuitAnimation, UBlendSpace1D);
}

void FAthenaAnimationSkeletonSensingParams::BeforeDelete()
{
	DELE_PTR_FULL(InitialReactionAnimation);
	DELE_PTR_FULL(SearchingAnimation);
	DELE_PTR_FULL(AlertingOthersAnimation);
	DELE_PTR_FULL(PursuitAnimation);
}

void FAthenaAnimationSkeletonEmoteActionAnimations::AfterRead()
{
	READ_PTR_FULL(UseWithObject, UClass);
}

void FAthenaAnimationSkeletonEmoteActionAnimations::BeforeDelete()
{
	DELE_PTR_FULL(UseWithObject);
}

void FAthenaAnimationSpawnBase::AfterRead()
{
	READ_PTR_FULL(ObjectId, UClass);
	READ_PTR_FULL(SpawnOnLand, UAnimSequence);
	READ_PTR_FULL(SpawnOnShip, UAnimSequence);
	READ_PTR_FULL(SpawnSummoned, UAnimSequence);
	READ_PTR_FULL(SpawnBoarding, UAnimSequence);
	READ_PTR_FULL(Despawn, UAnimSequence);
}

void FAthenaAnimationSpawnBase::BeforeDelete()
{
	DELE_PTR_FULL(ObjectId);
	DELE_PTR_FULL(SpawnOnLand);
	DELE_PTR_FULL(SpawnOnShip);
	DELE_PTR_FULL(SpawnSummoned);
	DELE_PTR_FULL(SpawnBoarding);
	DELE_PTR_FULL(Despawn);
}

void FAthenaAnimationSkeletonFlee::AfterRead()
{
	READ_PTR_FULL(UseWithObject, UClass);
	READ_PTR_FULL(FleeLocomotionBase, UBlendSpace);
}

void FAthenaAnimationSkeletonFlee::BeforeDelete()
{
	DELE_PTR_FULL(UseWithObject);
	DELE_PTR_FULL(FleeLocomotionBase);
}

void FAthenaAnimationSkeletonFleeInGraph::AfterRead()
{
	READ_PTR_FULL(TurnLeft, UAnimSequence);
	READ_PTR_FULL(TurnRight, UAnimSequence);
	READ_PTR_FULL(LocomotionBase, UBlendSpace);
	READ_PTR_FULL(LocomotionVariant, UBlendSpace);
}

void FAthenaAnimationSkeletonFleeInGraph::BeforeDelete()
{
	DELE_PTR_FULL(TurnLeft);
	DELE_PTR_FULL(TurnRight);
	DELE_PTR_FULL(LocomotionBase);
	DELE_PTR_FULL(LocomotionVariant);
}

void FAthenaAnimationSkeletonScream::AfterRead()
{
	READ_PTR_FULL(SkeletonScream, UAnimSequence);
}

void FAthenaAnimationSkeletonScream::BeforeDelete()
{
	DELE_PTR_FULL(SkeletonScream);
}

void FAthenaAnimationShopInteractionAnimations::AfterRead()
{
	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Out, UAnimSequence);
}

void FAthenaAnimationShopInteractionAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Out);
}

void FAthenaAnimationEmoteAnimations::AfterRead()
{
	READ_PTR_FULL(UseWithObject, UClass);
}

void FAthenaAnimationEmoteAnimations::BeforeDelete()
{
	DELE_PTR_FULL(UseWithObject);
}

void FAthenaAnimationSkeletonCurseAnimations::AfterRead()
{
	READ_PTR_FULL(SkeletonDrunk, UAnimSequence);
	READ_PTR_FULL(SkeletonDance, UAnimSequence);
	READ_PTR_FULL(SkeletonSleepInto, UAnimSequence);
	READ_PTR_FULL(SkeletonSleepLoop, UAnimSequence);
	READ_PTR_FULL(SkeletonSleepOut, UAnimSequence);
}

void FAthenaAnimationSkeletonCurseAnimations::BeforeDelete()
{
	DELE_PTR_FULL(SkeletonDrunk);
	DELE_PTR_FULL(SkeletonDance);
	DELE_PTR_FULL(SkeletonSleepInto);
	DELE_PTR_FULL(SkeletonSleepLoop);
	DELE_PTR_FULL(SkeletonSleepOut);
}

void FAthenaAnimationHarpoonLauncherAnimData::AfterRead()
{
	READ_PTR_FULL(FireInto, UBlendSpace1D);
	READ_PTR_FULL(FireOutOf, UBlendSpace1D);
	READ_PTR_FULL(FireAction, UBlendSpace1D);
}

void FAthenaAnimationHarpoonLauncherAnimData::BeforeDelete()
{
	DELE_PTR_FULL(FireInto);
	DELE_PTR_FULL(FireOutOf);
	DELE_PTR_FULL(FireAction);
}

void FAthenaAnimationSkeletonKnockbackLocomotionStrength::AfterRead()
{
}

void FAthenaAnimationSkeletonKnockbackLocomotionStrength::BeforeDelete()
{
}

void FAthenaAnimationAIKnockback::AfterRead()
{
	READ_PTR_FULL(KnockbackAnimToUse, UAnimSequence);
}

void FAthenaAnimationAIKnockback::BeforeDelete()
{
	DELE_PTR_FULL(KnockbackAnimToUse);
}

void FAthenaAnimationHitReactsAnimData::AfterRead()
{
}

void FAthenaAnimationHitReactsAnimData::BeforeDelete()
{
}

void FAthenaAnimationHitReactsSelectedAnimations::AfterRead()
{
	READ_PTR_FULL(SelectedHitReact0, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReactItem0, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReactItemAction0, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReactSubtle0, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReact1, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReactItem1, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReactItemAction1, UBlendSpace1D);
	READ_PTR_FULL(SelectedHitReactSubtle1, UBlendSpace1D);
	READ_PTR_FULL(SelectedOverrideHitReact, UBlendSpace1D);
}

void FAthenaAnimationHitReactsSelectedAnimations::BeforeDelete()
{
	DELE_PTR_FULL(SelectedHitReact0);
	DELE_PTR_FULL(SelectedHitReactItem0);
	DELE_PTR_FULL(SelectedHitReactItemAction0);
	DELE_PTR_FULL(SelectedHitReactSubtle0);
	DELE_PTR_FULL(SelectedHitReact1);
	DELE_PTR_FULL(SelectedHitReactItem1);
	DELE_PTR_FULL(SelectedHitReactItemAction1);
	DELE_PTR_FULL(SelectedHitReactSubtle1);
	DELE_PTR_FULL(SelectedOverrideHitReact);
}

void FAthenaAnimationHitReactParams::AfterRead()
{
}

void FAthenaAnimationHitReactParams::BeforeDelete()
{
}

void FAthenaAnimationStunData::AfterRead()
{
}

void FAthenaAnimationStunData::BeforeDelete()
{
}

void FAthenaAnimationPlayingFacialAnimations::AfterRead()
{
	READ_PTR_FULL(Capstan, UBlendSpace1D);
	READ_PTR_FULL(SailAction, UAnimSequence);
	READ_PTR_FULL(SailIdle, UAnimSequence);
	READ_PTR_FULL(CannonFire, UAnimSequence);
	READ_PTR_FULL(CannonAim, UAnimSequence);
	READ_PTR_FULL(HarpoonFire, UAnimSequence);
	READ_PTR_FULL(FacialIdle0, UAnimSequence);
	READ_PTR_FULL(FacialIdle1, UAnimSequence);
}

void FAthenaAnimationPlayingFacialAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Capstan);
	DELE_PTR_FULL(SailAction);
	DELE_PTR_FULL(SailIdle);
	DELE_PTR_FULL(CannonFire);
	DELE_PTR_FULL(CannonAim);
	DELE_PTR_FULL(HarpoonFire);
	DELE_PTR_FULL(FacialIdle0);
	DELE_PTR_FULL(FacialIdle1);
}

void FAthenaAnimationPlayingEquipAnimations::AfterRead()
{
	READ_PTR_FULL(Equip, UAnimSequence);
	READ_PTR_FULL(EquipAsBlendSpace, UBlendSpace);
	READ_PTR_FULL(EquipSwimming, UBlendSpace);
}

void FAthenaAnimationPlayingEquipAnimations::BeforeDelete()
{
	DELE_PTR_FULL(Equip);
	DELE_PTR_FULL(EquipAsBlendSpace);
	DELE_PTR_FULL(EquipSwimming);
}

void FAthenaAnimationObjectActionOneShotPlayingStructPitchOverride::AfterRead()
{
	READ_PTR_FULL(Action, UBlendSpace1D);
	READ_PTR_FULL(ActionVariant1, UBlendSpace1D);
	READ_PTR_FULL(ActionVariant2, UBlendSpace1D);
	READ_PTR_FULL(ActionVariant3, UBlendSpace1D);
	READ_PTR_FULL(ActionVariant4, UBlendSpace1D);
}

void FAthenaAnimationObjectActionOneShotPlayingStructPitchOverride::BeforeDelete()
{
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(ActionVariant1);
	DELE_PTR_FULL(ActionVariant2);
	DELE_PTR_FULL(ActionVariant3);
	DELE_PTR_FULL(ActionVariant4);
}

void FAthenaAnimationSkeletonAIFastPathData::AfterRead()
{
}

void FAthenaAnimationSkeletonAIFastPathData::BeforeDelete()
{
}

void FSkeletonCustomAnimationBlueprintPlayingAnimations::AfterRead()
{
	READ_PTR_FULL(OneShot, UAnimSequence);
	READ_PTR_FULL(ContinuousIn, UAnimSequence);
	READ_PTR_FULL(ContinuousLoop_A, UAnimSequence);
	READ_PTR_FULL(ContinuousLoop_B, UAnimSequence);
	READ_PTR_FULL(ContinuousOut, UAnimSequence);
}

void FSkeletonCustomAnimationBlueprintPlayingAnimations::BeforeDelete()
{
	DELE_PTR_FULL(OneShot);
	DELE_PTR_FULL(ContinuousIn);
	DELE_PTR_FULL(ContinuousLoop_A);
	DELE_PTR_FULL(ContinuousLoop_B);
	DELE_PTR_FULL(ContinuousOut);
}

void FAthenaAnimationCustomSkeletonAnimationBlueprintData::AfterRead()
{
	READ_PTR_FULL(WieldableCosmeticItemList, UNPCHeldObjectData);
}

void FAthenaAnimationCustomSkeletonAnimationBlueprintData::BeforeDelete()
{
	DELE_PTR_FULL(WieldableCosmeticItemList);
}

void FAssetDelayLoadEntry::AfterRead()
{
}

void FAssetDelayLoadEntry::BeforeDelete()
{
}

void FRequestedLoopAnims::AfterRead()
{
}

void FRequestedLoopAnims::BeforeDelete()
{
}

void FVenomDamage::AfterRead()
{
}

void FVenomDamage::BeforeDelete()
{
}

void FVenomDamageOverride::AfterRead()
{
	READ_PTR_FULL(VenomSource, UClass);
}

void FVenomDamageOverride::BeforeDelete()
{
	DELE_PTR_FULL(VenomSource);
}

void FBountyQuestRandomSpawnGeneratorParams::AfterRead()
{
	READ_PTR_FULL(Recipes, UAIEncounterGenerationRecipeRankOrderList);
}

void FBountyQuestRandomSpawnGeneratorParams::BeforeDelete()
{
	DELE_PTR_FULL(Recipes);
}

void FWeightedTreasureChestDesc::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FWeightedTreasureChestDesc::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FQuestTypeParams::AfterRead()
{
	READ_PTR_FULL(ReferencedRewards, UWeightedTreasureChestDescAsset);
	READ_PTR_FULL(RewardsAsset, UWeightedItemDescSpawnDataAsset);
	READ_PTR_FULL(OverrideTreasureMapItemDesc, UClass);
}

void FQuestTypeParams::BeforeDelete()
{
	DELE_PTR_FULL(ReferencedRewards);
	DELE_PTR_FULL(RewardsAsset);
	DELE_PTR_FULL(OverrideTreasureMapItemDesc);
}

void FBountyQuestParams::AfterRead()
{
	FQuestTypeParams::AfterRead();

	READ_PTR_FULL(Spawner, UAIBountySpawner);
}

void FBountyQuestParams::BeforeDelete()
{
	FQuestTypeParams::BeforeDelete();

	DELE_PTR_FULL(Spawner);
}

void FFootstepLocation::AfterRead()
{
}

void FFootstepLocation::BeforeDelete()
{
}

void FFragileComponentShipDamageTypeEntry::AfterRead()
{
	READ_PTR_FULL(ShipDamagerType, UClass);
}

void FFragileComponentShipDamageTypeEntry::BeforeDelete()
{
	DELE_PTR_FULL(ShipDamagerType);
}

void FFragileComponentHealthScalarEntry::AfterRead()
{
}

void FFragileComponentHealthScalarEntry::BeforeDelete()
{
}

void FAnimationLODParameters::AfterRead()
{
}

void FAnimationLODParameters::BeforeDelete()
{
}

void FTQStructGenWeightedContainer::AfterRead()
{
}

void FTQStructGenWeightedContainer::BeforeDelete()
{
}

void FTQStructGenEntry::AfterRead()
{
	FTQStructGenWeightedContainer::AfterRead();

	READ_PTR_FULL(TaleQuestDesc, UTaleQuestDescAsset);
	READ_PTR_FULL(LocationBundle, UPLQuestLocationDataBundle);
}

void FTQStructGenEntry::BeforeDelete()
{
	FTQStructGenWeightedContainer::BeforeDelete();

	DELE_PTR_FULL(TaleQuestDesc);
	DELE_PTR_FULL(LocationBundle);
}

void FTQStructGenGroup::AfterRead()
{
	FTQStructGenWeightedContainer::AfterRead();

}

void FTQStructGenGroup::BeforeDelete()
{
	FTQStructGenWeightedContainer::BeforeDelete();

}

void FTQStructGenParams::AfterRead()
{
}

void FTQStructGenParams::BeforeDelete()
{
}

void FUseLadderActionStateParams::AfterRead()
{
	FDockToObjectActionStateParams::AfterRead();

}

void FUseLadderActionStateParams::BeforeDelete()
{
	FDockToObjectActionStateParams::BeforeDelete();

}

void FVaultPuzzleSolutionPositions::AfterRead()
{
}

void FVaultPuzzleSolutionPositions::BeforeDelete()
{
}

void FVaultPuzzleSolutionEntry::AfterRead()
{
}

void FVaultPuzzleSolutionEntry::BeforeDelete()
{
}

void FRewardRequestSucceededEvent::AfterRead()
{
}

void FRewardRequestSucceededEvent::BeforeDelete()
{
}

void FRewardRequestFailedEvent::AfterRead()
{
}

void FRewardRequestFailedEvent::BeforeDelete()
{
}

void FTreasureMapTextEntry::AfterRead()
{
}

void FTreasureMapTextEntry::BeforeDelete()
{
}

void FTreasureMapTextDesc::AfterRead()
{
}

void FTreasureMapTextDesc::BeforeDelete()
{
}

void FRiddleMapContents::AfterRead()
{
}

void FRiddleMapContents::BeforeDelete()
{
}

void FRumbleParameters::AfterRead()
{
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(CameraShakeEffect, UClass);
}

void FRumbleParameters::BeforeDelete()
{
	DELE_PTR_FULL(ForceFeedbackEffect);
	DELE_PTR_FULL(CameraShakeEffect);
}

void FPartCustomisation::AfterRead()
{
}

void FPartCustomisation::BeforeDelete()
{
}

void FShipPartsCataloguePartCustomisation::AfterRead()
{
}

void FShipPartsCataloguePartCustomisation::BeforeDelete()
{
}

void FShipPartsCataloguePartCustomisations::AfterRead()
{
}

void FShipPartsCataloguePartCustomisations::BeforeDelete()
{
}

void FShipPartsCatalogue::AfterRead()
{
}

void FShipPartsCatalogue::BeforeDelete()
{
}

void FWeightedPetAnimation::AfterRead()
{
	READ_PTR_FULL(Animation, UAnimSequence);
}

void FWeightedPetAnimation::BeforeDelete()
{
	DELE_PTR_FULL(Animation);
}

void FWeightedPetAnimations::AfterRead()
{
}

void FWeightedPetAnimations::BeforeDelete()
{
}

void FLaunchableProjectileData::AfterRead()
{
}

void FLaunchableProjectileData::BeforeDelete()
{
}

void FLaunchableActiveProjectileData::AfterRead()
{
}

void FLaunchableActiveProjectileData::BeforeDelete()
{
}

void FIslandSelectionType::AfterRead()
{
}

void FIslandSelectionType::BeforeDelete()
{
}

void FRegionMapIslandData::AfterRead()
{
}

void FRegionMapIslandData::BeforeDelete()
{
}

void FGhostShipRewardData::AfterRead()
{
	READ_PTR_FULL(Rewards, UWeightedItemDescSpawnDataAsset);
}

void FGhostShipRewardData::BeforeDelete()
{
	DELE_PTR_FULL(Rewards);
}

void FAggressiveGhostShipRewardData::AfterRead()
{
}

void FAggressiveGhostShipRewardData::BeforeDelete()
{
}

void FAggressiveGhostShipSplineDataVariables::AfterRead()
{
}

void FAggressiveGhostShipSplineDataVariables::BeforeDelete()
{
}

void FAggressiveGhostShipSplineDataOffsets::AfterRead()
{
}

void FAggressiveGhostShipSplineDataOffsets::BeforeDelete()
{
}

void FAggressiveGhostShipState::AfterRead()
{
}

void FAggressiveGhostShipState::BeforeDelete()
{
}

void FSpawnerData::AfterRead()
{
	READ_PTR_FULL(ItemSpawnData, UItemSpawnData);
}

void FSpawnerData::BeforeDelete()
{
	DELE_PTR_FULL(ItemSpawnData);
}

void FWeightedItemDescSpawner::AfterRead()
{
}

void FWeightedItemDescSpawner::BeforeDelete()
{
}

void FAggressiveGhostHealthToVfxLevel::AfterRead()
{
}

void FAggressiveGhostHealthToVfxLevel::BeforeDelete()
{
}

void FAggressiveGhostShipLocationEntryDesc::AfterRead()
{
	READ_PTR_FULL(Location, UAggressiveGhostShipLocationDataAsset);
}

void FAggressiveGhostShipLocationEntryDesc::BeforeDelete()
{
	DELE_PTR_FULL(Location);
}

void FAggressiveGhostShipEncounterShipDesc::AfterRead()
{
	READ_PTR_FULL(Difficulty, UAggressiveGhostShipDifficultyDataAsset);
	READ_PTR_FULL(ShotSelection, UAggressiveGhostShipShotSelectionDataAsset);
	READ_PTR_FULL(Ship, UClass);
	READ_PTR_FULL(Visuals, UAggressiveGhostShipVisualsDataAsset);
}

void FAggressiveGhostShipEncounterShipDesc::BeforeDelete()
{
	DELE_PTR_FULL(Difficulty);
	DELE_PTR_FULL(ShotSelection);
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Visuals);
}

void FAggressiveGhostShipEncounterWaveFormationDesc::AfterRead()
{
	READ_PTR_FULL(FixedSpline, UAggressiveGhostShipFixedSplinesDataAsset);
}

void FAggressiveGhostShipEncounterWaveFormationDesc::BeforeDelete()
{
	DELE_PTR_FULL(FixedSpline);
}

void FAggressiveGhostShipEncounterWaveDesc::AfterRead()
{
	READ_PTR_FULL(WaveMusicZoneActorClass, UClass);
}

void FAggressiveGhostShipEncounterWaveDesc::BeforeDelete()
{
	DELE_PTR_FULL(WaveMusicZoneActorClass);
}

void FCutscenePool::AfterRead()
{
	READ_PTR_FULL(PoolType, UCutscenePoolType);
}

void FCutscenePool::BeforeDelete()
{
	DELE_PTR_FULL(PoolType);
}

void FCutsceneGroup::AfterRead()
{
}

void FCutsceneGroup::BeforeDelete()
{
}

void FCutsceneResponseData::AfterRead()
{
}

void FCutsceneResponseData::BeforeDelete()
{
}

void FPeriodicResponse::AfterRead()
{
	READ_PTR_FULL(Owner, UObject);
}

void FPeriodicResponse::BeforeDelete()
{
	DELE_PTR_FULL(Owner);
}

void FPossessableSequence::AfterRead()
{
	READ_PTR_FULL(ActorToPossess, AActor);
}

void FPossessableSequence::BeforeDelete()
{
	DELE_PTR_FULL(ActorToPossess);
}

void FCutSceneLoadData::AfterRead()
{
	READ_PTR_FULL(SpawnablesParent, AActor);
}

void FCutSceneLoadData::BeforeDelete()
{
	DELE_PTR_FULL(SpawnablesParent);
}

void FRecentlyInteractedWithPlayers::AfterRead()
{
	READ_PTR_FULL(ReportingCharacter, AAthenaPlayerCharacter);
}

void FRecentlyInteractedWithPlayers::BeforeDelete()
{
	DELE_PTR_FULL(ReportingCharacter);
}

void FChestTabViewModel::AfterRead()
{
}

void FChestTabViewModel::BeforeDelete()
{
}

void FCatalogOfferPrerequisites::AfterRead()
{
}

void FCatalogOfferPrerequisites::BeforeDelete()
{
}

void FPremiumCatalogOfferGroup::AfterRead()
{
}

void FPremiumCatalogOfferGroup::BeforeDelete()
{
}

void FPremiumCatalogOfferData::AfterRead()
{
}

void FPremiumCatalogOfferData::BeforeDelete()
{
}

void FCatalogOffer::AfterRead()
{
}

void FCatalogOffer::BeforeDelete()
{
}

void FStoreOnlinePurchaseResult::AfterRead()
{
}

void FStoreOnlinePurchaseResult::BeforeDelete()
{
}

void FStoreCatalogItem::AfterRead()
{
}

void FStoreCatalogItem::BeforeDelete()
{
}

void FPirateProfile::AfterRead()
{
}

void FPirateProfile::BeforeDelete()
{
}

void FPlayerInfoRequest::AfterRead()
{
}

void FPlayerInfoRequest::BeforeDelete()
{
}

void FPlayerInfoResponse::AfterRead()
{
}

void FPlayerInfoResponse::BeforeDelete()
{
}

void FPlayerManagerServiceUninitialisedEvent::AfterRead()
{
}

void FPlayerManagerServiceUninitialisedEvent::BeforeDelete()
{
}

void FPlayerManagerServiceInitialisedEvent::AfterRead()
{
}

void FPlayerManagerServiceInitialisedEvent::BeforeDelete()
{
}

void FRewardRequestSucceededNotificationEvent::AfterRead()
{
}

void FRewardRequestSucceededNotificationEvent::BeforeDelete()
{
}

void FRewardRequestFailedNotificationEvent::AfterRead()
{
}

void FRewardRequestFailedNotificationEvent::BeforeDelete()
{
}

void FRewardGrantedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FRewardGrantedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FXPGrantedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FXPGrantedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FCurrencyGrantedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FCurrencyGrantedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventApplySingleStickSettings::AfterRead()
{
}

void FEventApplySingleStickSettings::BeforeDelete()
{
}

void FPlayerStatsDispatcherSettings::AfterRead()
{
}

void FPlayerStatsDispatcherSettings::BeforeDelete()
{
}

void FStatSingleMessage::AfterRead()
{
}

void FStatSingleMessage::BeforeDelete()
{
}

void FStatBatchMessageValues::AfterRead()
{
}

void FStatBatchMessageValues::BeforeDelete()
{
}

void FThrowGrenadeRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FThrowGrenadeRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FFireLaunchableShotRpc::AfterRead()
{
	FUseItemOnServerRpc::AfterRead();

	READ_PTR_FULL(Action, ULaunchableShotActionComponent);
}

void FFireLaunchableShotRpc::BeforeDelete()
{
	FUseItemOnServerRpc::BeforeDelete();

	DELE_PTR_FULL(Action);
}

void FSpawnLaunchableShotRpc::AfterRead()
{
	FUseItemOnServerRpc::AfterRead();

	READ_PTR_FULL(Action, ULaunchableShotActionComponent);
}

void FSpawnLaunchableShotRpc::BeforeDelete()
{
	FUseItemOnServerRpc::BeforeDelete();

	DELE_PTR_FULL(Action);
}

void FEventLanternIsLightOnStateChanged::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
	READ_PTR_FULL(InputID, UClass);
}

void FEventLanternIsLightOnStateChanged::BeforeDelete()
{
	DELE_PTR_FULL(Item);
	DELE_PTR_FULL(InputID);
}

void FCompanyLevelDefinition::AfterRead()
{
}

void FCompanyLevelDefinition::BeforeDelete()
{
}

void FCompanyReputationProgressModel::AfterRead()
{
}

void FCompanyReputationProgressModel::BeforeDelete()
{
}

void FCompanyProgressUpdateEvent::AfterRead()
{
}

void FCompanyProgressUpdateEvent::BeforeDelete()
{
}

void FCompanyProgressUpdateMessage::AfterRead()
{
}

void FCompanyProgressUpdateMessage::BeforeDelete()
{
}

void FConfigurationRemoteServiceRequestConfigurationResultEvent::AfterRead()
{
}

void FConfigurationRemoteServiceRequestConfigurationResultEvent::BeforeDelete()
{
}

void FConfigurationRemoteServiceRequestConfigurationEvent::AfterRead()
{
}

void FConfigurationRemoteServiceRequestConfigurationEvent::BeforeDelete()
{
}

void FRemoteConfigurationProviderUpdateConfigurationEvent::AfterRead()
{
}

void FRemoteConfigurationProviderUpdateConfigurationEvent::BeforeDelete()
{
}

void FRuntimeFeatureConfigurationAvailableEvent::AfterRead()
{
}

void FRuntimeFeatureConfigurationAvailableEvent::BeforeDelete()
{
}

void FEmblemRemoteCriteriaProgress::AfterRead()
{
}

void FEmblemRemoteCriteriaProgress::BeforeDelete()
{
}

void FRandomParticleSystemPickerEntry::AfterRead()
{
	READ_PTR_FULL(Effect, UObject);
}

void FRandomParticleSystemPickerEntry::BeforeDelete()
{
	DELE_PTR_FULL(Effect);
}

void FRandomParticleSystemPicker::AfterRead()
{
}

void FRandomParticleSystemPicker::BeforeDelete()
{
}

void FInteractObjectActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FInteractObjectActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FActivePlayerActivity::AfterRead()
{
}

void FActivePlayerActivity::BeforeDelete()
{
}

void FEventRequestSayPhraseWithNonLocalisedArgument::AfterRead()
{
}

void FEventRequestSayPhraseWithNonLocalisedArgument::BeforeDelete()
{
}

void FEventRequestSayPhraseWithArgument::AfterRead()
{
}

void FEventRequestSayPhraseWithArgument::BeforeDelete()
{
}

void FEventRequestSayPhrase::AfterRead()
{
}

void FEventRequestSayPhrase::BeforeDelete()
{
}

void FRadialActionGroup::AfterRead()
{
	READ_PTR_FULL(PrimaryAction, URadialAction);
	READ_PTR_FULL(SecondaryAction, URadialAction);
	READ_PTR_FULL(TertiaryAction, URadialAction);
	READ_PTR_FULL(QuaternaryAction, URadialAction);
}

void FRadialActionGroup::BeforeDelete()
{
	DELE_PTR_FULL(PrimaryAction);
	DELE_PTR_FULL(SecondaryAction);
	DELE_PTR_FULL(TertiaryAction);
	DELE_PTR_FULL(QuaternaryAction);
}

void FRadialContext::AfterRead()
{
}

void FRadialContext::BeforeDelete()
{
}

void FPushCachedSlotActionEvent::AfterRead()
{
}

void FPushCachedSlotActionEvent::BeforeDelete()
{
}

void FRadialContextChanged::AfterRead()
{
}

void FRadialContextChanged::BeforeDelete()
{
}

void FRadialActionBindings::AfterRead()
{
}

void FRadialActionBindings::BeforeDelete()
{
}

void FRadialInventoryEvent::AfterRead()
{
}

void FRadialInventoryEvent::BeforeDelete()
{
}

void FUpdateRadialIconUrls::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FUpdateRadialIconUrls::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FRadialPageChanged::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FRadialPageChanged::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FRadialInventoryCenterUpdated::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FRadialInventoryCenterUpdated::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FRadialInventoryClearHighlight::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FRadialInventoryClearHighlight::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FRadialInventorySlotHighlighted::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FRadialInventorySlotHighlighted::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FFocusRadialInventorySlot::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FFocusRadialInventorySlot::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FCanShowQuaternaryActionButton::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FCanShowQuaternaryActionButton::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FCanShowTertiaryActionButton::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FCanShowTertiaryActionButton::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FCanShowSecondaryActionButton::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FCanShowSecondaryActionButton::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FCanShowPrimaryActionButton::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FCanShowPrimaryActionButton::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FHideRadialInventory::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FHideRadialInventory::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FEnableRadialInventoryMouseControl::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FEnableRadialInventoryMouseControl::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FClearRadialInventory::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FClearRadialInventory::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FSetRadialTitleText::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FSetRadialTitleText::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FShowRadialInventory::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FShowRadialInventory::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FEventDockingStateChanged::AfterRead()
{
}

void FEventDockingStateChanged::BeforeDelete()
{
}

void FEventPlayerDockToObjectEnd::AfterRead()
{
	READ_PTR_FULL(ObjectBeingUsed, AActor);
}

void FEventPlayerDockToObjectEnd::BeforeDelete()
{
	DELE_PTR_FULL(ObjectBeingUsed);
}

void FEventPlayerDockToObjectStart::AfterRead()
{
	READ_PTR_FULL(ObjectBeingUsed, AActor);
}

void FEventPlayerDockToObjectStart::BeforeDelete()
{
	DELE_PTR_FULL(ObjectBeingUsed);
}

void FEventUndockedFromObject::AfterRead()
{
}

void FEventUndockedFromObject::BeforeDelete()
{
}

void FIntentSignChangedEvent::AfterRead()
{
}

void FIntentSignChangedEvent::BeforeDelete()
{
}

void FIntentChangedEvent::AfterRead()
{
}

void FIntentChangedEvent::BeforeDelete()
{
}

void FClamberActionStateConstructionInfo::AfterRead()
{
	FDockToObjectActionStateConstructionInfo::AfterRead();

}

void FClamberActionStateConstructionInfo::BeforeDelete()
{
	FDockToObjectActionStateConstructionInfo::BeforeDelete();

}

void FClamberEndEvent::AfterRead()
{
}

void FClamberEndEvent::BeforeDelete()
{
}

void FClamberBeginEvent::AfterRead()
{
}

void FClamberBeginEvent::BeforeDelete()
{
}

void FEventPlayerReliquishedControlOfControllable::AfterRead()
{
	READ_PTR_FULL(ControllableObject, AActor);
}

void FEventPlayerReliquishedControlOfControllable::BeforeDelete()
{
	DELE_PTR_FULL(ControllableObject);
}

void FEventPlayerTakenControlOfControllable::AfterRead()
{
	READ_PTR_FULL(ControllableObject, AActor);
}

void FEventPlayerTakenControlOfControllable::BeforeDelete()
{
	DELE_PTR_FULL(ControllableObject);
}

void FTakeControlActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FTakeControlActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEventDockedToObject::AfterRead()
{
}

void FEventDockedToObject::BeforeDelete()
{
}

void FEventRelinquishedControlOfObject::AfterRead()
{
	READ_PTR_FULL(RelinquishedObject, UObject);
}

void FEventRelinquishedControlOfObject::BeforeDelete()
{
	DELE_PTR_FULL(RelinquishedObject);
}

void FEventTakenControlOfObject::AfterRead()
{
	READ_PTR_FULL(ControlledObject, AActor);
}

void FEventTakenControlOfObject::BeforeDelete()
{
	DELE_PTR_FULL(ControlledObject);
}

void FDamageInstance::AfterRead()
{
	READ_PTR_FULL(DirectInstigator, AActor);
	READ_PTR_FULL(RootInstigator, AActor);
}

void FDamageInstance::BeforeDelete()
{
	DELE_PTR_FULL(DirectInstigator);
	DELE_PTR_FULL(RootInstigator);
}

void FEventPlayerCharacterDeath::AfterRead()
{
	READ_PTR_FULL(PirateKilled, ACharacter);
}

void FEventPlayerCharacterDeath::BeforeDelete()
{
	DELE_PTR_FULL(PirateKilled);
}

void FEventCharacterDead::AfterRead()
{
}

void FEventCharacterDead::BeforeDelete()
{
}

void FEventKilledCharacter::AfterRead()
{
	READ_PTR_FULL(KilledCharacter, AActor);
}

void FEventKilledCharacter::BeforeDelete()
{
	DELE_PTR_FULL(KilledCharacter);
}

void FEventCharacterDeath::AfterRead()
{
}

void FEventCharacterDeath::BeforeDelete()
{
}

void FDeadActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FDeadActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEventCharacterConcealedInLoadableEnd::AfterRead()
{
}

void FEventCharacterConcealedInLoadableEnd::BeforeDelete()
{
}

void FEventCharacterConcealedInLoadableBegin::AfterRead()
{
}

void FEventCharacterConcealedInLoadableBegin::BeforeDelete()
{
}

void FEventLoadableItemUnloadingEnd::AfterRead()
{
}

void FEventLoadableItemUnloadingEnd::BeforeDelete()
{
}

void FEventLoadableItemUnloadingBegin::AfterRead()
{
}

void FEventLoadableItemUnloadingBegin::BeforeDelete()
{
}

void FEventLoadableItemLoadingEnd::AfterRead()
{
}

void FEventLoadableItemLoadingEnd::BeforeDelete()
{
}

void FEventLoadableItemLoadingBegin::AfterRead()
{
}

void FEventLoadableItemLoadingBegin::BeforeDelete()
{
}

void FEventLoadableObjectUnloaded::AfterRead()
{
}

void FEventLoadableObjectUnloaded::BeforeDelete()
{
}

void FEventLoadableObjectLoaded::AfterRead()
{
}

void FEventLoadableObjectLoaded::BeforeDelete()
{
}

void FEventLoadableObjectDestroyed::AfterRead()
{
}

void FEventLoadableObjectDestroyed::BeforeDelete()
{
}

void FEventReceiveMountpointComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UMountpointComponent);
}

void FEventReceiveMountpointComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FEventMountedItemFullyInterpolatedToMountpoint::AfterRead()
{
}

void FEventMountedItemFullyInterpolatedToMountpoint::BeforeDelete()
{
}

void FUnmountedFromMountpointEvent::AfterRead()
{
}

void FUnmountedFromMountpointEvent::BeforeDelete()
{
}

void FMountCompleteEvent::AfterRead()
{
	READ_PTR_FULL(MountedToActor, AActor);
	READ_PTR_FULL(MountedActor, AActor);
}

void FMountCompleteEvent::BeforeDelete()
{
	DELE_PTR_FULL(MountedToActor);
	DELE_PTR_FULL(MountedActor);
}

void FMountedOnMountpointEvent::AfterRead()
{
}

void FMountedOnMountpointEvent::BeforeDelete()
{
}

void FTransitionLadderEndEvent::AfterRead()
{
}

void FTransitionLadderEndEvent::BeforeDelete()
{
}

void FLadderDefinition::AfterRead()
{
}

void FLadderDefinition::BeforeDelete()
{
}

void FUseLadderBeginEvent::AfterRead()
{
}

void FUseLadderBeginEvent::BeforeDelete()
{
}

void FInvalidFireRequestDetected::AfterRead()
{
	READ_PTR_FULL(RequestingObject, UObject);
}

void FInvalidFireRequestDetected::BeforeDelete()
{
	DELE_PTR_FULL(RequestingObject);
}

void FRequestAuthoritativeFire::AfterRead()
{
	READ_PTR_FULL(RequestingObject, UObject);
}

void FRequestAuthoritativeFire::BeforeDelete()
{
	DELE_PTR_FULL(RequestingObject);
}

void FEventMeleeAttackProcessorInterrupted::AfterRead()
{
}

void FEventMeleeAttackProcessorInterrupted::BeforeDelete()
{
}

void FEventMeleeAttackStarted::AfterRead()
{
	READ_PTR_FULL(AttackData, UMeleeAttackDataAsset);
}

void FEventMeleeAttackStarted::BeforeDelete()
{
	DELE_PTR_FULL(AttackData);
}

void FEventPlayerNameOverridesLoaded::AfterRead()
{
}

void FEventPlayerNameOverridesLoaded::BeforeDelete()
{
}

void FAthenaAnimationCharacterSelect::AfterRead()
{
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(IntoHighlight, UAnimSequence);
	READ_PTR_FULL(Highlighted, UAnimSequence);
	READ_PTR_FULL(OutOfHighlight, UAnimSequence);
	READ_PTR_FULL(Selected, UAnimSequence);
}

void FAthenaAnimationCharacterSelect::BeforeDelete()
{
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(IntoHighlight);
	DELE_PTR_FULL(Highlighted);
	DELE_PTR_FULL(OutOfHighlight);
	DELE_PTR_FULL(Selected);
}

void FAthenaAnimationCameraAdditiveAnimData::AfterRead()
{
	READ_PTR_FULL(CameraDefaultYaw, UAnimSequence);
	READ_PTR_FULL(CameraDefaultPitch, UAnimSequence);
	READ_PTR_FULL(CameraWheelYaw, UAnimSequence);
	READ_PTR_FULL(CameraWheelPitch, UAnimSequence);
	READ_PTR_FULL(CameraCapstanYaw, UAnimSequence);
	READ_PTR_FULL(CameraCapstanPitch, UAnimSequence);
	READ_PTR_FULL(CameraSailYaw, UAnimSequence);
	READ_PTR_FULL(CameraSailPitch, UAnimSequence);
	READ_PTR_FULL(CameraLadderYaw, UAnimSequence);
	READ_PTR_FULL(CameraLadderPitch, UAnimSequence);
}

void FAthenaAnimationCameraAdditiveAnimData::BeforeDelete()
{
	DELE_PTR_FULL(CameraDefaultYaw);
	DELE_PTR_FULL(CameraDefaultPitch);
	DELE_PTR_FULL(CameraWheelYaw);
	DELE_PTR_FULL(CameraWheelPitch);
	DELE_PTR_FULL(CameraCapstanYaw);
	DELE_PTR_FULL(CameraCapstanPitch);
	DELE_PTR_FULL(CameraSailYaw);
	DELE_PTR_FULL(CameraSailPitch);
	DELE_PTR_FULL(CameraLadderYaw);
	DELE_PTR_FULL(CameraLadderPitch);
}

void FAthenaAnimationIKFootplantingAnimData::AfterRead()
{
}

void FAthenaAnimationIKFootplantingAnimData::BeforeDelete()
{
}

void FAthenaAnimationIdlesAnimData::AfterRead()
{
}

void FAthenaAnimationIdlesAnimData::BeforeDelete()
{
}

void FAthenaAnimationJumpingFirstPersonAnimData::AfterRead()
{
	READ_PTR_FULL(JumpStart, UAnimSequence);
	READ_PTR_FULL(JumpCycle, UBlendSpace);
	READ_PTR_FULL(PreImpact, UAnimSequence);
	READ_PTR_FULL(LandLight, UBlendSpace);
	READ_PTR_FULL(LandHeavy, UBlendSpace);
}

void FAthenaAnimationJumpingFirstPersonAnimData::BeforeDelete()
{
	DELE_PTR_FULL(JumpStart);
	DELE_PTR_FULL(JumpCycle);
	DELE_PTR_FULL(PreImpact);
	DELE_PTR_FULL(LandLight);
	DELE_PTR_FULL(LandHeavy);
}

void FAthenaAnimationJumpingThirdPersonAnimData::AfterRead()
{
}

void FAthenaAnimationJumpingThirdPersonAnimData::BeforeDelete()
{
}

void FEventSetCrewProgressOverride::AfterRead()
{
	READ_PTR_FULL(ProgressId, UClass);
}

void FEventSetCrewProgressOverride::BeforeDelete()
{
	DELE_PTR_FULL(ProgressId);
}

void FEventNamedProgressLocationDestroyed::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, AProgressSpawnLocation);
}

void FEventNamedProgressLocationDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventNamedProgressLocationCreated::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, AProgressSpawnLocation);
}

void FEventNamedProgressLocationCreated::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventShipSpawnLocationDestroyed::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, AShipSpawnLocation);
}

void FEventShipSpawnLocationDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventShipSpawnLocationCreated::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, AShipSpawnLocation);
}

void FEventShipSpawnLocationCreated::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventGhostShipPlayerSpawnLocationDestroyed::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, AGhostShipPlayerSpawnLocation);
}

void FEventGhostShipPlayerSpawnLocationDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventGhostShipPlayerSpawnLocationCreated::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, AGhostShipPlayerSpawnLocation);
}

void FEventGhostShipPlayerSpawnLocationCreated::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventSpawnLocationDestroyed::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, ASpawnLocation);
}

void FEventSpawnLocationDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FEventSpawnLocationCreated::AfterRead()
{
	READ_PTR_FULL(SpawnLocation, ASpawnLocation);
}

void FEventSpawnLocationCreated::BeforeDelete()
{
	DELE_PTR_FULL(SpawnLocation);
}

void FIslandTeleportLocation::AfterRead()
{
	READ_PTR_FULL(SeaId, UClass);
}

void FIslandTeleportLocation::BeforeDelete()
{
	DELE_PTR_FULL(SeaId);
}

void FEventIslandsSucessfullyCached::AfterRead()
{
}

void FEventIslandsSucessfullyCached::BeforeDelete()
{
}

void FEventIslandDiscoveredServer::AfterRead()
{
}

void FEventIslandDiscoveredServer::BeforeDelete()
{
}

void FEventAllIslandsLoaded::AfterRead()
{
}

void FEventAllIslandsLoaded::BeforeDelete()
{
}

void FEventIslandDiscoveredNotification::AfterRead()
{
}

void FEventIslandDiscoveredNotification::BeforeDelete()
{
}

void FEventPlayerSetFootOnIsland::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerSetFootOnIsland::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventPlayerLeftIslandVicinity::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerLeftIslandVicinity::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventPlayerEnteredIslandVicinity::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerEnteredIslandVicinity::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventSpawnComponentRequest::AfterRead()
{
	READ_PTR_FULL(SalvageItemSpawnComponent, USalvageItemSpawnComponent);
}

void FEventSpawnComponentRequest::BeforeDelete()
{
	DELE_PTR_FULL(SalvageItemSpawnComponent);
}

void FPetAnimationWeighting::AfterRead()
{
}

void FPetAnimationWeighting::BeforeDelete()
{
}

void FWeightedPetAnimationSelector::AfterRead()
{
}

void FWeightedPetAnimationSelector::BeforeDelete()
{
}

void FEventMapPiecedObtained::AfterRead()
{
}

void FEventMapPiecedObtained::BeforeDelete()
{
}

void FAggressiveGhostShipSpawnedRewardsTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipSpawnedRewardsTelemetryEvent::BeforeDelete()
{
}

void FAthenaAnimationObjectActionContinuousStruct::AfterRead()
{
	READ_PTR_FULL(MainInto, UAnimSequence);
	READ_PTR_FULL(MainIntoLocomotion, UBlendSpace);
	READ_PTR_FULL(OneShotInto, UAnimSequence);
	READ_PTR_FULL(MainCycleIdle, UAnimSequence);
	READ_PTR_FULL(MainCycleLocomotion, UBlendSpace);
	READ_PTR_FULL(MainOutOf, UAnimSequence);
	READ_PTR_FULL(MainOutOfLocomotion, UBlendSpace);
	READ_PTR_FULL(TurnOutAlt, UAnimSequence);
	READ_PTR_FULL(CustomAdditiveForAction, UAnimSequence);
}

void FAthenaAnimationObjectActionContinuousStruct::BeforeDelete()
{
	DELE_PTR_FULL(MainInto);
	DELE_PTR_FULL(MainIntoLocomotion);
	DELE_PTR_FULL(OneShotInto);
	DELE_PTR_FULL(MainCycleIdle);
	DELE_PTR_FULL(MainCycleLocomotion);
	DELE_PTR_FULL(MainOutOf);
	DELE_PTR_FULL(MainOutOfLocomotion);
	DELE_PTR_FULL(TurnOutAlt);
	DELE_PTR_FULL(CustomAdditiveForAction);
}

void FAthenaAnimationObjectActionContinuous::AfterRead()
{
}

void FAthenaAnimationObjectActionContinuous::BeforeDelete()
{
}

void FAthenaAnimationFacialAnimData::AfterRead()
{
	READ_PTR_FULL(Death, UAnimSequence);
	READ_PTR_FULL(HitReact, UAnimSequence);
	READ_PTR_FULL(Sick, UAnimMontage);
	READ_PTR_FULL(Cough, UAnimSequence);
	READ_PTR_FULL(UnderwaterIdle, UAnimSequence);
	READ_PTR_FULL(CurrentFacialMontage, UAnimMontage);
	READ_PTR_FULL(PlayingFacialMontage, UAnimMontage);
}

void FAthenaAnimationFacialAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Death);
	DELE_PTR_FULL(HitReact);
	DELE_PTR_FULL(Sick);
	DELE_PTR_FULL(Cough);
	DELE_PTR_FULL(UnderwaterIdle);
	DELE_PTR_FULL(CurrentFacialMontage);
	DELE_PTR_FULL(PlayingFacialMontage);
}

void FConditionalHandInStat::AfterRead()
{
}

void FConditionalHandInStat::BeforeDelete()
{
}

void FAthenaAnimationObjectActionContinuousStructPitchOverride::AfterRead()
{
	READ_PTR_FULL(MainInto, UBlendSpace1D);
	READ_PTR_FULL(MainCycleIdle, UBlendSpace1D);
	READ_PTR_FULL(MainCycleLocomotion, UBlendSpace1D);
	READ_PTR_FULL(MainOutOf, UBlendSpace1D);
}

void FAthenaAnimationObjectActionContinuousStructPitchOverride::BeforeDelete()
{
	DELE_PTR_FULL(MainInto);
	DELE_PTR_FULL(MainCycleIdle);
	DELE_PTR_FULL(MainCycleLocomotion);
	DELE_PTR_FULL(MainOutOf);
}

void FAthenaAnimationObjectActionContinuousPitchOverride::AfterRead()
{
}

void FAthenaAnimationObjectActionContinuousPitchOverride::BeforeDelete()
{
}

void FCargoRunReward::AfterRead()
{
}

void FCargoRunReward::BeforeDelete()
{
}

void FCarouselPirateClothingItem::AfterRead()
{
	READ_PTR_FULL(Item, UClass);
}

void FCarouselPirateClothingItem::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FCarouselPirateClothingCategoryBias::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FCarouselPirateClothingCategoryBias::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FCarouselPirateClothing::AfterRead()
{
}

void FCarouselPirateClothing::BeforeDelete()
{
}

void FCarouselPirateGeneratorParams::AfterRead()
{
}

void FCarouselPirateGeneratorParams::BeforeDelete()
{
}

void FCompanyShopSkin::AfterRead()
{
}

void FCompanyShopSkin::BeforeDelete()
{
}

void FDockableBaseActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FDockableBaseActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FKrakenAnimatedTentacleHitReactAnimation::AfterRead()
{
	READ_PTR_FULL(HitReactAnimation, UAnimSequence);
}

void FKrakenAnimatedTentacleHitReactAnimation::BeforeDelete()
{
	DELE_PTR_FULL(HitReactAnimation);
}

void FKrakenSpawnLocationParams::AfterRead()
{
}

void FKrakenSpawnLocationParams::BeforeDelete()
{
}

void FLandmarkReactionEventPlayForceFeedbackEntry::AfterRead()
{
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
}

void FLandmarkReactionEventPlayForceFeedbackEntry::BeforeDelete()
{
	DELE_PTR_FULL(ForceFeedbackEffect);
}

void FFlameData::AfterRead()
{
}

void FFlameData::BeforeDelete()
{
}

void FPlayerActionCannonTelemetryEvent::AfterRead()
{
}

void FPlayerActionCannonTelemetryEvent::BeforeDelete()
{
}

void FMusicEvent::AfterRead()
{
	READ_PTR_FULL(StartEvent, UWwiseEvent);
	READ_PTR_FULL(StopEvent, UWwiseEvent);
}

void FMusicEvent::BeforeDelete()
{
	DELE_PTR_FULL(StartEvent);
	DELE_PTR_FULL(StopEvent);
}

void FKrakenMusicEvent::AfterRead()
{
	FMusicEvent::AfterRead();

}

void FKrakenMusicEvent::BeforeDelete()
{
	FMusicEvent::BeforeDelete();

}

void FTinySharkMusicEvent::AfterRead()
{
	FMusicEvent::AfterRead();

}

void FTinySharkMusicEvent::BeforeDelete()
{
	FMusicEvent::BeforeDelete();

}

void FWalletBalanceItem::AfterRead()
{
}

void FWalletBalanceItem::BeforeDelete()
{
}

void FShipMetadata::AfterRead()
{
	READ_PTR_FULL(ShipTypeObject, UClass);
	READ_PTR_FULL(ShipCategoryObject, UClass);
}

void FShipMetadata::BeforeDelete()
{
	DELE_PTR_FULL(ShipTypeObject);
	DELE_PTR_FULL(ShipCategoryObject);
}

void FShipTemplate::AfterRead()
{
	READ_PTR_FULL(ShipSizeObject, UClass);
}

void FShipTemplate::BeforeDelete()
{
	DELE_PTR_FULL(ShipSizeObject);
}

void FPartDesc::AfterRead()
{
}

void FPartDesc::BeforeDelete()
{
}

void FPartsCustomisation::AfterRead()
{
}

void FPartsCustomisation::BeforeDelete()
{
}

void FShipDesc::AfterRead()
{
}

void FShipDesc::BeforeDelete()
{
}

void FAppearMaterialParams::AfterRead()
{
	READ_PTR_FULL(AppearCurveAsset, UCurveFloat);
	READ_PTR_FULL(DisppearCurveAsset, UCurveFloat);
}

void FAppearMaterialParams::BeforeDelete()
{
	DELE_PTR_FULL(AppearCurveAsset);
	DELE_PTR_FULL(DisppearCurveAsset);
}

void FDynamicMaterialsList::AfterRead()
{
}

void FDynamicMaterialsList::BeforeDelete()
{
}

void FMaterialAnimatorAnimationEntry::AfterRead()
{
	READ_PTR_FULL(AnimationCurve, UCurveFloat);
}

void FMaterialAnimatorAnimationEntry::BeforeDelete()
{
	DELE_PTR_FULL(AnimationCurve);
}

void FMaterialAnimatorGroupInstance::AfterRead()
{
}

void FMaterialAnimatorGroupInstance::BeforeDelete()
{
}

void FDynamicMaterialListContainer::AfterRead()
{
}

void FDynamicMaterialListContainer::BeforeDelete()
{
}

void FVfxSpawner::AfterRead()
{
	READ_PTR_FULL(EmitterTemplate, UObject);
	READ_PTR_FULL(AttachToComponent, USceneComponent);
	READ_PTR_FULL(SocketOwnerComponent, USceneComponent);
	READ_PTR_FULL(Owner, UObject);
}

void FVfxSpawner::BeforeDelete()
{
	DELE_PTR_FULL(EmitterTemplate);
	DELE_PTR_FULL(AttachToComponent);
	DELE_PTR_FULL(SocketOwnerComponent);
	DELE_PTR_FULL(Owner);
}

void FVfxSelectorEntry::AfterRead()
{
	READ_PTR_FULL(ParticleSystem, UObject);
	READ_PTR_FULL(WiseEvent, UWwiseEvent);
	READ_PTR_FULL(WwisePoolToUse, UWwiseObjectPoolWrapper);
}

void FVfxSelectorEntry::BeforeDelete()
{
	DELE_PTR_FULL(ParticleSystem);
	DELE_PTR_FULL(WiseEvent);
	DELE_PTR_FULL(WwisePoolToUse);
}

void FRadialInstance::AfterRead()
{
	READ_PTR_FULL(Content, URadialContentRule);
	READ_PTR_FULL(PrimaryAction, URadialAction);
	READ_PTR_FULL(SecondaryAction, URadialAction);
	READ_PTR_FULL(TertiaryAction, URadialAction);
	READ_PTR_FULL(QuaternaryAction, URadialAction);
	READ_PTR_FULL(RadialInputBinder, URadialInputBinder);
}

void FRadialInstance::BeforeDelete()
{
	DELE_PTR_FULL(Content);
	DELE_PTR_FULL(PrimaryAction);
	DELE_PTR_FULL(SecondaryAction);
	DELE_PTR_FULL(TertiaryAction);
	DELE_PTR_FULL(QuaternaryAction);
	DELE_PTR_FULL(RadialInputBinder);
}

void FTunnelOfTheDamnedInstance::AfterRead()
{
}

void FTunnelOfTheDamnedInstance::BeforeDelete()
{
}

void FTelemetryFragmentListenerHandle::AfterRead()
{
	READ_PTR_FULL(FragmentType, UScriptStruct);
}

void FTelemetryFragmentListenerHandle::BeforeDelete()
{
	DELE_PTR_FULL(FragmentType);
}

void FBattleElevatorEventRoomPhase::AfterRead()
{
}

void FBattleElevatorEventRoomPhase::BeforeDelete()
{
}

void FCurrentPhaseData::AfterRead()
{
}

void FCurrentPhaseData::BeforeDelete()
{
}

void FLocationMapBannerParams::AfterRead()
{
}

void FLocationMapBannerParams::BeforeDelete()
{
}

void FEventCharacterHitReaction::AfterRead()
{
}

void FEventCharacterHitReaction::BeforeDelete()
{
}

void FEventPlayerCharacterPuzzleVaultIncorrect::AfterRead()
{
}

void FEventPlayerCharacterPuzzleVaultIncorrect::BeforeDelete()
{
}

void FEventPlayerCharacterPuzzleVaultComplete::AfterRead()
{
}

void FEventPlayerCharacterPuzzleVaultComplete::BeforeDelete()
{
}

void FEventPlayerCharacterInPuzzleVaultChanged::AfterRead()
{
}

void FEventPlayerCharacterInPuzzleVaultChanged::BeforeDelete()
{
}

void FEventFaunaAddedToEmptyCrate::AfterRead()
{
}

void FEventFaunaAddedToEmptyCrate::BeforeDelete()
{
}

void FEventItemUseAINoiseEvent::AfterRead()
{
}

void FEventItemUseAINoiseEvent::BeforeDelete()
{
}

void FEventAnimationShopInteraction::AfterRead()
{
}

void FEventAnimationShopInteraction::BeforeDelete()
{
}

void FEventFaceTargetEnabled::AfterRead()
{
}

void FEventFaceTargetEnabled::BeforeDelete()
{
}

void FEventRemoteCharacterStartedDig::AfterRead()
{
}

void FEventRemoteCharacterStartedDig::BeforeDelete()
{
}

void FEventRequestVomit::AfterRead()
{
}

void FEventRequestVomit::BeforeDelete()
{
}

void FEventIsDrunk::AfterRead()
{
}

void FEventIsDrunk::BeforeDelete()
{
}

void FEventFallWithDamageLegNotBroken::AfterRead()
{
}

void FEventFallWithDamageLegNotBroken::BeforeDelete()
{
}

void FEventHealedLeg::AfterRead()
{
}

void FEventHealedLeg::BeforeDelete()
{
}

void FEventBrokeLeg::AfterRead()
{
}

void FEventBrokeLeg::BeforeDelete()
{
}

void FEventCharacterDespawned::AfterRead()
{
	READ_PTR_FULL(Character, AAthenaCharacter);
}

void FEventCharacterDespawned::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FEventCharacterSpawned::AfterRead()
{
	READ_PTR_FULL(Character, AAthenaCharacter);
}

void FEventCharacterSpawned::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FEventPlayerGhostShipWhiteOutStarted::AfterRead()
{
}

void FEventPlayerGhostShipWhiteOutStarted::BeforeDelete()
{
}

void FEventCharacterRestarted::AfterRead()
{
}

void FEventCharacterRestarted::BeforeDelete()
{
}

void FEventCharacterEndTeleport::AfterRead()
{
}

void FEventCharacterEndTeleport::BeforeDelete()
{
}

void FEventCharacterBeginTeleport::AfterRead()
{
}

void FEventCharacterBeginTeleport::BeforeDelete()
{
}

void FEventCharacterLanded::AfterRead()
{
}

void FEventCharacterLanded::BeforeDelete()
{
}

void FEventCharacterJumped::AfterRead()
{
}

void FEventCharacterJumped::BeforeDelete()
{
}

void FEventCharacterDestroyed::AfterRead()
{
}

void FEventCharacterDestroyed::BeforeDelete()
{
}

void FEventRequestRespawn::AfterRead()
{
	READ_PTR_FULL(Character, APawn);
}

void FEventRequestRespawn::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FEventCharacterInteraction::AfterRead()
{
	READ_PTR_FULL(Interactable, UObject);
}

void FEventCharacterInteraction::BeforeDelete()
{
	DELE_PTR_FULL(Interactable);
}

void FEventCannonFiredOnServer::AfterRead()
{
	READ_PTR_FULL(Cannon, ACannon);
}

void FEventCannonFiredOnServer::BeforeDelete()
{
	DELE_PTR_FULL(Cannon);
}

void FEventCannonFired::AfterRead()
{
	READ_PTR_FULL(FiredCannon, ACannon);
}

void FEventCannonFired::BeforeDelete()
{
	DELE_PTR_FULL(FiredCannon);
}

void FEventCannonAimingStoppedYaw::AfterRead()
{
}

void FEventCannonAimingStoppedYaw::BeforeDelete()
{
}

void FEventCannonAimingStoppedPitch::AfterRead()
{
}

void FEventCannonAimingStoppedPitch::BeforeDelete()
{
}

void FEventCannonAimingStartedYaw::AfterRead()
{
}

void FEventCannonAimingStartedYaw::BeforeDelete()
{
}

void FEventCannonAimingStartedPitch::AfterRead()
{
}

void FEventCannonAimingStartedPitch::BeforeDelete()
{
}

void FEventCannonAimingCenteredYaw::AfterRead()
{
}

void FEventCannonAimingCenteredYaw::BeforeDelete()
{
}

void FEventCannonAimingCenteredPitch::AfterRead()
{
}

void FEventCannonAimingCenteredPitch::BeforeDelete()
{
}

void FClientTelemetryConfigurationSettings::AfterRead()
{
}

void FClientTelemetryConfigurationSettings::BeforeDelete()
{
}

void FCatalogOfferRewardDataAsset::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FCatalogOfferRewardDataAsset::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FCatalogOfferCompanyLevelDataAsset::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FCatalogOfferCompanyLevelDataAsset::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FCatalogOfferPrerequisitesDataAsset::AfterRead()
{
}

void FCatalogOfferPrerequisitesDataAsset::BeforeDelete()
{
}

void FCharacterSocketFootWaterImpactResult::AfterRead()
{
}

void FCharacterSocketFootWaterImpactResult::BeforeDelete()
{
}

void FCharacterFootWaterImpactResult::AfterRead()
{
}

void FCharacterFootWaterImpactResult::BeforeDelete()
{
}

void FCharacterFootImpactResult::AfterRead()
{
}

void FCharacterFootImpactResult::BeforeDelete()
{
}

void FSocketCollisionExitWaterEvent::AfterRead()
{
}

void FSocketCollisionExitWaterEvent::BeforeDelete()
{
}

void FSocketCollisionEnterWaterEvent::AfterRead()
{
}

void FSocketCollisionEnterWaterEvent::BeforeDelete()
{
}

void FSocketCollisionEvent::AfterRead()
{
}

void FSocketCollisionEvent::BeforeDelete()
{
}

void FEventReceiveChestOfRageComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UChestOfRageComponent);
}

void FEventReceiveChestOfRageComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FHttpClientComponentRequestEvent::AfterRead()
{
}

void FHttpClientComponentRequestEvent::BeforeDelete()
{
}

void FHttpClientComponentResponseEvent::AfterRead()
{
}

void FHttpClientComponentResponseEvent::BeforeDelete()
{
}

void FAmmoUI::AfterRead()
{
	READ_PTR_FULL(TargetPawn, APawn);
}

void FAmmoUI::BeforeDelete()
{
	DELE_PTR_FULL(TargetPawn);
}

void FContestLeaderboardEntry::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FContestLeaderboardEntry::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FUpdateScoreBalanceHUDEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FUpdateScoreBalanceHUDEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FScoreGrantedNotificationUIEvent::AfterRead()
{
}

void FScoreGrantedNotificationUIEvent::BeforeDelete()
{
}

void FVoyageQuestsBegun::AfterRead()
{
}

void FVoyageQuestsBegun::BeforeDelete()
{
}

void FVoyageChapterBegun::AfterRead()
{
}

void FVoyageChapterBegun::BeforeDelete()
{
}

void FVoyageChestDiscoveredInContest::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FVoyageChestDiscoveredInContest::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FVoyageChestDiscovered::AfterRead()
{
	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FVoyageChestDiscovered::BeforeDelete()
{
	DELE_PTR_FULL(PopUpDesc);
}

void FVoyageCancelled::AfterRead()
{
}

void FVoyageCancelled::BeforeDelete()
{
}

void FVoyageComplete::AfterRead()
{
}

void FVoyageComplete::BeforeDelete()
{
}

void FVoyageBegun::AfterRead()
{
}

void FVoyageBegun::BeforeDelete()
{
}

void FCatalogTab::AfterRead()
{
}

void FCatalogTab::BeforeDelete()
{
}

void FShopDialogueMessages::AfterRead()
{
}

void FShopDialogueMessages::BeforeDelete()
{
}

void FCategoryTab::AfterRead()
{
}

void FCategoryTab::BeforeDelete()
{
}

void FShopDefinition::AfterRead()
{
}

void FShopDefinition::BeforeDelete()
{
}

void FOpenPremiumStoreFrontEvent::AfterRead()
{
}

void FOpenPremiumStoreFrontEvent::BeforeDelete()
{
}

void FRequestPremiumStoreFrontOpenEvent::AfterRead()
{
}

void FRequestPremiumStoreFrontOpenEvent::BeforeDelete()
{
}

void FPremiumShopClosedEvent::AfterRead()
{
}

void FPremiumShopClosedEvent::BeforeDelete()
{
}

void FPurchasePremiumCurrencyErrorEvent::AfterRead()
{
}

void FPurchasePremiumCurrencyErrorEvent::BeforeDelete()
{
}

void FPurchasePremiumCurrencyResponseEvent::AfterRead()
{
}

void FPurchasePremiumCurrencyResponseEvent::BeforeDelete()
{
}

void FPurchasePremiumCurrencyRequestEvent::AfterRead()
{
}

void FPurchasePremiumCurrencyRequestEvent::BeforeDelete()
{
}

void FPremiumCurrencyItemsErrorEvent::AfterRead()
{
}

void FPremiumCurrencyItemsErrorEvent::BeforeDelete()
{
}

void FPremiumCurrencyItem::AfterRead()
{
}

void FPremiumCurrencyItem::BeforeDelete()
{
}

void FSessionCreationCrewMemberModel::AfterRead()
{
}

void FSessionCreationCrewMemberModel::BeforeDelete()
{
}

void FSessionCreationCrewModel::AfterRead()
{
}

void FSessionCreationCrewModel::BeforeDelete()
{
}

void FSessionCreationRequestModel::AfterRead()
{
}

void FSessionCreationRequestModel::BeforeDelete()
{
}

void FContestMatchmakingLocationsResponseModel::AfterRead()
{
}

void FContestMatchmakingLocationsResponseModel::BeforeDelete()
{
}

void FTransitionLadderActionStateConstructionInfo::AfterRead()
{
	FDockToObjectActionStateConstructionInfo::AfterRead();

}

void FTransitionLadderActionStateConstructionInfo::BeforeDelete()
{
	FDockToObjectActionStateConstructionInfo::BeforeDelete();

}

void FLinearTransitionLadderActionStateConstructionInfo::AfterRead()
{
	FTransitionLadderActionStateConstructionInfo::AfterRead();

}

void FLinearTransitionLadderActionStateConstructionInfo::BeforeDelete()
{
	FTransitionLadderActionStateConstructionInfo::BeforeDelete();

}

void FMeleeBlockingActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(InputID, UClass);
}

void FMeleeBlockingActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(InputID);
}

void FMeleeBlockingActionStateParams::AfterRead()
{
}

void FMeleeBlockingActionStateParams::BeforeDelete()
{
}

void FMigrationActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FMigrationActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FClientMigrationEndedEvent::AfterRead()
{
}

void FClientMigrationEndedEvent::BeforeDelete()
{
}

void FServerMigrationStateChanged::AfterRead()
{
}

void FServerMigrationStateChanged::BeforeDelete()
{
}

void FMigrationSetupCompleteNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FMigrationSetupCompleteNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FRequestClosePossessionsChestEvent::AfterRead()
{
}

void FRequestClosePossessionsChestEvent::BeforeDelete()
{
}

void FClothingChestCloseRequestEvent::AfterRead()
{
}

void FClothingChestCloseRequestEvent::BeforeDelete()
{
}

void FRequestOpenPossessionsChestEvent::AfterRead()
{
}

void FRequestOpenPossessionsChestEvent::BeforeDelete()
{
}

void FClothingChestOpenRequestEvent::AfterRead()
{
	READ_PTR_FULL(Interaction, AActor);
}

void FClothingChestOpenRequestEvent::BeforeDelete()
{
	DELE_PTR_FULL(Interaction);
}

void FClothingChestUnequipEmoteEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FClothingChestUnequipEmoteEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FClothingChestEquipEmoteEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FClothingChestEquipEmoteEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FClothingChestChangeClothingEvent::AfterRead()
{
}

void FClothingChestChangeClothingEvent::BeforeDelete()
{
}

void FClothingChestUnequipClothingEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FClothingChestUnequipClothingEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FClothingChestEquipClothingEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FClothingChestEquipClothingEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FEquipmentChestEquipItemEvent::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FEquipmentChestEquipItemEvent::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FPetChestNamePetFeedbackEvent::AfterRead()
{
}

void FPetChestNamePetFeedbackEvent::BeforeDelete()
{
}

void FPetChestNamePetEvent::AfterRead()
{
}

void FPetChestNamePetEvent::BeforeDelete()
{
}

void FPlayerStateSnapshot::AfterRead()
{
}

void FPlayerStateSnapshot::BeforeDelete()
{
}

void FRowboatSnapshot::AfterRead()
{
}

void FRowboatSnapshot::BeforeDelete()
{
}

void FAllianceDisbandedTelemetryEvent::AfterRead()
{
}

void FAllianceDisbandedTelemetryEvent::BeforeDelete()
{
}

void FServerMigrateToTelemetryEvent::AfterRead()
{
}

void FServerMigrateToTelemetryEvent::BeforeDelete()
{
}

void FBountyQuestTargetKilledTelemetryEvent::AfterRead()
{
}

void FBountyQuestTargetKilledTelemetryEvent::BeforeDelete()
{
}

void FBountyQuestWaveCompletedTelemetryEvent::AfterRead()
{
}

void FBountyQuestWaveCompletedTelemetryEvent::BeforeDelete()
{
}

void FQuestStartBountyTelemetryEvent::AfterRead()
{
}

void FQuestStartBountyTelemetryEvent::BeforeDelete()
{
}

void FQuestDesc::AfterRead()
{
}

void FQuestDesc::BeforeDelete()
{
}

void FCargoRunQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

	READ_PTR_FULL(OverrideTreasureMapItemDesc, UClass);
}

void FCargoRunQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

	DELE_PTR_FULL(OverrideTreasureMapItemDesc);
}

void FCargoDeliveredTelemetryEvent::AfterRead()
{
}

void FCargoDeliveredTelemetryEvent::BeforeDelete()
{
}

void FCargoRunCratePickedUpTelemetryEvent::AfterRead()
{
}

void FCargoRunCratePickedUpTelemetryEvent::BeforeDelete()
{
}

void FCargoRunQuestCrateEntries::AfterRead()
{
}

void FCargoRunQuestCrateEntries::BeforeDelete()
{
}

void FQuestStartCargoRunTelemetryEvent::AfterRead()
{
}

void FQuestStartCargoRunTelemetryEvent::BeforeDelete()
{
}

void FPlayNpcAnimationNetworkEvent::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(TargetActor, AActor);
	READ_PTR_FULL(LocalMusicZone, UClass);
	READ_PTR_FULL(PlaceableReaction, APlaceableReaction);
}

void FPlayNpcAnimationNetworkEvent::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(TargetActor);
	DELE_PTR_FULL(LocalMusicZone);
	DELE_PTR_FULL(PlaceableReaction);
}

void FStopNpcAnimationNetworkEvent::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(TargetActor, AActor);
	READ_PTR_FULL(PlaceableReaction, APlaceableReaction);
}

void FStopNpcAnimationNetworkEvent::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(TargetActor);
	DELE_PTR_FULL(PlaceableReaction);
}

void FEmergantVoyageQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

}

void FEmergantVoyageQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

}

void FMatchmakeQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

}

void FMatchmakeQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

}

void FRewardQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

}

void FRewardQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

}

void FStagingQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

}

void FStagingQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

}

void FMerchantItemGroupDesc::AfterRead()
{
}

void FMerchantItemGroupDesc::BeforeDelete()
{
}

void FMerchantQuestItemDescAndReward::AfterRead()
{
	READ_PTR_FULL(CrateDesc, UClass);
}

void FMerchantQuestItemDescAndReward::BeforeDelete()
{
	DELE_PTR_FULL(CrateDesc);
}

void FMerchantMapItemData::AfterRead()
{
	READ_PTR_FULL(IconImage, UTexture);
	READ_PTR_FULL(CrateItemDesc, UClass);
	READ_PTR_FULL(FaunaSpecies, UClass);
	READ_PTR_FULL(FaunaBreed, UClass);
}

void FMerchantMapItemData::BeforeDelete()
{
	DELE_PTR_FULL(IconImage);
	DELE_PTR_FULL(CrateItemDesc);
	DELE_PTR_FULL(FaunaSpecies);
	DELE_PTR_FULL(FaunaBreed);
}

void FMerchantQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

	READ_PTR_FULL(Layout, UMerchantMapLayout);
	READ_PTR_FULL(OverrideTreasureMapItemDesc, UClass);
}

void FMerchantQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

	DELE_PTR_FULL(Layout);
	DELE_PTR_FULL(OverrideTreasureMapItemDesc);
}

void FMerchantCratesReadyForCollectionEvent::AfterRead()
{
}

void FMerchantCratesReadyForCollectionEvent::BeforeDelete()
{
}

void FMerchantQuestContractExpiredNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FMerchantQuestContractExpiredNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FMerchantQuestContractCompleteNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FMerchantQuestContractCompleteNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FMerchantQuestCrateFilledNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FMerchantQuestCrateFilledNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FMerchantCrateAllocatedTelemetryEvent::AfterRead()
{
}

void FMerchantCrateAllocatedTelemetryEvent::BeforeDelete()
{
}

void FQuestMerchantCrateAllocatedTelemetryEvent::AfterRead()
{
}

void FQuestMerchantCrateAllocatedTelemetryEvent::BeforeDelete()
{
}

void FMerchantQuestStartTelemetryEventRequiredItemEntry::AfterRead()
{
}

void FMerchantQuestStartTelemetryEventRequiredItemEntry::BeforeDelete()
{
}

void FMerchantQuestStartTelemetryEvent::AfterRead()
{
}

void FMerchantQuestStartTelemetryEvent::BeforeDelete()
{
}

void FTallTaleDebugInfo::AfterRead()
{
}

void FTallTaleDebugInfo::BeforeDelete()
{
}

void FClientTallTaleDebugInfoNetworkEvent::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FClientTallTaleDebugInfoNetworkEvent::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FQuestWeightedDistance::AfterRead()
{
}

void FQuestWeightedDistance::BeforeDelete()
{
}

void FRiddleQuestGateDesc::AfterRead()
{
	READ_PTR_FULL(Landmark, ALandmark);
}

void FRiddleQuestGateDesc::BeforeDelete()
{
	DELE_PTR_FULL(Landmark);
}

void FRiddleQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

	READ_PTR_FULL(TreasureChestDesc, UClass);
	READ_PTR_FULL(TreasureSpawnData, UItemSpawnData);
	READ_PTR_FULL(BoobyTrapSpawner, UAIBoobyTrapSpawner);
	READ_PTR_FULL(OverrideTreasureMapItemDesc, UClass);
}

void FRiddleQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

	DELE_PTR_FULL(TreasureChestDesc);
	DELE_PTR_FULL(TreasureSpawnData);
	DELE_PTR_FULL(BoobyTrapSpawner);
	DELE_PTR_FULL(OverrideTreasureMapItemDesc);
}

void FRiddleQuestGateStartedTelemetryEvent::AfterRead()
{
}

void FRiddleQuestGateStartedTelemetryEvent::BeforeDelete()
{
}

void FQuestStartRiddleTelemetryEvent::AfterRead()
{
}

void FQuestStartRiddleTelemetryEvent::BeforeDelete()
{
}

void FQuestStartXMarksTheSpotTelemetryEvent::AfterRead()
{
}

void FQuestStartXMarksTheSpotTelemetryEvent::BeforeDelete()
{
}

void FQuestPageListPopulator::AfterRead()
{
}

void FQuestPageListPopulator::BeforeDelete()
{
}

void FItemBuriedTaleQuestAutomationEvent::AfterRead()
{
	READ_PTR_FULL(ItemBuried, UClass);
}

void FItemBuriedTaleQuestAutomationEvent::BeforeDelete()
{
	DELE_PTR_FULL(ItemBuried);
}

void FAggressiveGhostShipEncounterStartFromTaleTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipEncounterStartFromTaleTelemetryEvent::BeforeDelete()
{
}

void FSpawnerCreatedAutomationEvent::AfterRead()
{
	READ_PTR_FULL(SpawnerLocation, AActor);
	READ_PTR_FULL(Spawner, UAISpawner);
}

void FSpawnerCreatedAutomationEvent::BeforeDelete()
{
	DELE_PTR_FULL(SpawnerLocation);
	DELE_PTR_FULL(Spawner);
}

void FLinearTransitionActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(SceneComponent, USceneComponent);
}

void FLinearTransitionActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(SceneComponent);
}

void FLinearTransitionActionStateDurationCompletedEvent::AfterRead()
{
	READ_PTR_FULL(SceneComponent, USceneComponent);
}

void FLinearTransitionActionStateDurationCompletedEvent::BeforeDelete()
{
	DELE_PTR_FULL(SceneComponent);
}

void FCutsceneResponseResult::AfterRead()
{
}

void FCutsceneResponseResult::BeforeDelete()
{
}

void FQueuedCutsceneData::AfterRead()
{
}

void FQueuedCutsceneData::BeforeDelete()
{
}

void FCutscenePriorityQueueEntry::AfterRead()
{
}

void FCutscenePriorityQueueEntry::BeforeDelete()
{
}

void FCutsceneTimestampData::AfterRead()
{
}

void FCutsceneTimestampData::BeforeDelete()
{
}

void FCutsceneStateChangedEvent::AfterRead()
{
}

void FCutsceneStateChangedEvent::BeforeDelete()
{
}

void FPlayCutsceneNetworkEvent::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(TargetComponent, UCutsceneComponent);
}

void FPlayCutsceneNetworkEvent::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(TargetComponent);
}

void FEventSequencerCutSceneEnded::AfterRead()
{
}

void FEventSequencerCutSceneEnded::BeforeDelete()
{
}

void FEventSequencerCutSceneStarted::AfterRead()
{
}

void FEventSequencerCutSceneStarted::BeforeDelete()
{
}

void FServerMigrationCrewMigrationStatus::AfterRead()
{
}

void FServerMigrationCrewMigrationStatus::BeforeDelete()
{
}

void FCrewMember::AfterRead()
{
}

void FCrewMember::BeforeDelete()
{
}

void FPlayerJoinedCrew::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FPlayerJoinedCrew::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventChangeMatchmakingVisibility::AfterRead()
{
}

void FEventChangeMatchmakingVisibility::BeforeDelete()
{
}

void FEventScuttleShip::AfterRead()
{
}

void FEventScuttleShip::BeforeDelete()
{
}

void FEventPlayerRemovedFromCrew::AfterRead()
{
	READ_PTR_FULL(UniqueId, APlayerState);
}

void FEventPlayerRemovedFromCrew::BeforeDelete()
{
	DELE_PTR_FULL(UniqueId);
}

void FEventPlayerAddedToCrew::AfterRead()
{
	READ_PTR_FULL(UniqueId, APlayerState);
}

void FEventPlayerAddedToCrew::BeforeDelete()
{
	DELE_PTR_FULL(UniqueId);
}

void FAthenaAnimationObjectMeleeV2SpecialAttack::AfterRead()
{
}

void FAthenaAnimationObjectMeleeV2SpecialAttack::BeforeDelete()
{
}

void FAthenaAnimationObjectMeleeV2::AfterRead()
{
	READ_PTR_FULL(BlockingMainInto, UAnimSequence);
	READ_PTR_FULL(BlockingIntoFromCombat, UAnimSequence);
	READ_PTR_FULL(BlockingMainBlendSpace, UBlendSpace);
	READ_PTR_FULL(BlockingOut, UAnimSequence);
	READ_PTR_FULL(BlockingMainIntoSwimming, UAnimSequence);
	READ_PTR_FULL(BlockingMainBlendSpaceSwimming, UBlendSpace);
	READ_PTR_FULL(BlockingOutSwimming, UAnimSequence);
	READ_PTR_FULL(CombatLocomotion, UBlendSpace);
	READ_PTR_FULL(CombatLocomotionTurningLeft, UAnimSequence);
	READ_PTR_FULL(CombatLocomotionTurningRight, UAnimSequence);
	READ_PTR_FULL(CombatLocomotionTurnOut, UAnimSequence);
	READ_PTR_FULL(Dodge, UBlendSpace);
	READ_PTR_FULL(LungeWarmupLocomotion, UBlendSpace);
}

void FAthenaAnimationObjectMeleeV2::BeforeDelete()
{
	DELE_PTR_FULL(BlockingMainInto);
	DELE_PTR_FULL(BlockingIntoFromCombat);
	DELE_PTR_FULL(BlockingMainBlendSpace);
	DELE_PTR_FULL(BlockingOut);
	DELE_PTR_FULL(BlockingMainIntoSwimming);
	DELE_PTR_FULL(BlockingMainBlendSpaceSwimming);
	DELE_PTR_FULL(BlockingOutSwimming);
	DELE_PTR_FULL(CombatLocomotion);
	DELE_PTR_FULL(CombatLocomotionTurningLeft);
	DELE_PTR_FULL(CombatLocomotionTurningRight);
	DELE_PTR_FULL(CombatLocomotionTurnOut);
	DELE_PTR_FULL(Dodge);
	DELE_PTR_FULL(LungeWarmupLocomotion);
}

void FMerchantCrateItemInfoFaunaBreedRarityEntry::AfterRead()
{
	READ_PTR_FULL(FaunaBreed, UClass);
}

void FMerchantCrateItemInfoFaunaBreedRarityEntry::BeforeDelete()
{
	DELE_PTR_FULL(FaunaBreed);
}

void FMerchantCrateSfx::AfterRead()
{
	READ_PTR_FULL(EquipSfx, UWwiseEvent);
	READ_PTR_FULL(UnequipSfx, UWwiseEvent);
	READ_PTR_FULL(WielderLandedJumpSfx, UWwiseEvent);
	READ_PTR_FULL(WielderFootstepLayerOneshot, UWwiseEvent);
}

void FMerchantCrateSfx::BeforeDelete()
{
	DELE_PTR_FULL(EquipSfx);
	DELE_PTR_FULL(UnequipSfx);
	DELE_PTR_FULL(WielderLandedJumpSfx);
	DELE_PTR_FULL(WielderFootstepLayerOneshot);
}

void FItemInfoTogglePair::AfterRead()
{
}

void FItemInfoTogglePair::BeforeDelete()
{
}

void FBeaconData::AfterRead()
{
}

void FBeaconData::BeforeDelete()
{
}

void FBellPlayerStats::AfterRead()
{
}

void FBellPlayerStats::BeforeDelete()
{
}

void FBellDesc::AfterRead()
{
	READ_PTR_FULL(BellMesh, UStaticMesh);
	READ_PTR_FULL(BellRingSFX, UWwiseEvent);
	READ_PTR_FULL(BellRingTurbulenceSFX, UWwiseEvent);
}

void FBellDesc::BeforeDelete()
{
	DELE_PTR_FULL(BellMesh);
	DELE_PTR_FULL(BellRingSFX);
	DELE_PTR_FULL(BellRingTurbulenceSFX);
}

void FAtmosphericPressureZoneParameters::AfterRead()
{
}

void FAtmosphericPressureZoneParameters::BeforeDelete()
{
}

void FLightingZoneParameters::AfterRead()
{
}

void FLightingZoneParameters::BeforeDelete()
{
}

void FWeightedAIBoobyTrapSpawner::AfterRead()
{
	READ_PTR_FULL(Spawner, UAIBoobyTrapSpawner);
}

void FWeightedAIBoobyTrapSpawner::BeforeDelete()
{
	DELE_PTR_FULL(Spawner);
}

void FBoobyTrapSpawnerRankEntry::AfterRead()
{
}

void FBoobyTrapSpawnerRankEntry::BeforeDelete()
{
}

void FTreasureMapWidgetTexture::AfterRead()
{
	FTreasureMapWidget::AfterRead();

	READ_PTR_FULL(Image, UTexture);
}

void FTreasureMapWidgetTexture::BeforeDelete()
{
	FTreasureMapWidget::BeforeDelete();

	DELE_PTR_FULL(Image);
}

void FTreasureMapWidgetLocalisedText::AfterRead()
{
	FTreasureMapWidgetText::AfterRead();

}

void FTreasureMapWidgetLocalisedText::BeforeDelete()
{
	FTreasureMapWidgetText::BeforeDelete();

}

void FTreasureMapWidgetLocalisedTextWithFontOverride::AfterRead()
{
	FTreasureMapWidgetLocalisedText::AfterRead();

	READ_PTR_FULL(FontOverride, UFont);
}

void FTreasureMapWidgetLocalisedTextWithFontOverride::BeforeDelete()
{
	FTreasureMapWidgetLocalisedText::BeforeDelete();

	DELE_PTR_FULL(FontOverride);
}

void FPageReference::AfterRead()
{
}

void FPageReference::BeforeDelete()
{
}

void FQuestBookPageRenderer::AfterRead()
{
	READ_PTR_FULL(Font, UFont);
}

void FQuestBookPageRenderer::BeforeDelete()
{
	DELE_PTR_FULL(Font);
}

void FQuestBookMaterialHandler::AfterRead()
{
	READ_PTR_FULL(LeftSpreadLeftPageRenderTarget, UMaybeCompressedCanvasRenderTarget2D);
	READ_PTR_FULL(LeftSpreadRightPageRenderTarget, UMaybeCompressedCanvasRenderTarget2D);
	READ_PTR_FULL(RightSpreadLeftPageRenderTarget, UMaybeCompressedCanvasRenderTarget2D);
	READ_PTR_FULL(RightSpreadRightPageRenderTarget, UMaybeCompressedCanvasRenderTarget2D);
	READ_PTR_FULL(LeftSpreadLeftPageContents, UQuestBookPageLayout);
	READ_PTR_FULL(LeftSpreadRightPageContents, UQuestBookPageLayout);
	READ_PTR_FULL(RightSpreadLeftPageContents, UQuestBookPageLayout);
	READ_PTR_FULL(RightSpreadRightPageContents, UQuestBookPageLayout);
}

void FQuestBookMaterialHandler::BeforeDelete()
{
	DELE_PTR_FULL(LeftSpreadLeftPageRenderTarget);
	DELE_PTR_FULL(LeftSpreadRightPageRenderTarget);
	DELE_PTR_FULL(RightSpreadLeftPageRenderTarget);
	DELE_PTR_FULL(RightSpreadRightPageRenderTarget);
	DELE_PTR_FULL(LeftSpreadLeftPageContents);
	DELE_PTR_FULL(LeftSpreadRightPageContents);
	DELE_PTR_FULL(RightSpreadLeftPageContents);
	DELE_PTR_FULL(RightSpreadRightPageContents);
}

void FBountyMapTargetDesc::AfterRead()
{
	READ_PTR_FULL(MugShotImage, UTexture);
}

void FBountyMapTargetDesc::BeforeDelete()
{
	DELE_PTR_FULL(MugShotImage);
}

void FQuestBootyItemPopUpEntry::AfterRead()
{
	READ_PTR_FULL(PopUp, UPopUpMessageDesc);
}

void FQuestBootyItemPopUpEntry::BeforeDelete()
{
	DELE_PTR_FULL(PopUp);
}

void FBountyQuestMugShotSet::AfterRead()
{
	READ_PTR_FULL(Form, UAthenaAIFormDataAsset);
	READ_PTR_FULL(MaleCaptainMugShot, UTexture);
	READ_PTR_FULL(FemaleCaptainMugShot, UTexture);
	READ_PTR_FULL(MaleCrewMugShot, UTexture);
	READ_PTR_FULL(FemaleCrewMugShot, UTexture);
}

void FBountyQuestMugShotSet::BeforeDelete()
{
	DELE_PTR_FULL(Form);
	DELE_PTR_FULL(MaleCaptainMugShot);
	DELE_PTR_FULL(FemaleCaptainMugShot);
	DELE_PTR_FULL(MaleCrewMugShot);
	DELE_PTR_FULL(FemaleCrewMugShot);
}

void FBountyQuestLayoutOption::AfterRead()
{
	READ_PTR_FULL(Layout, UBountyMapLayout);
}

void FBountyQuestLayoutOption::BeforeDelete()
{
	DELE_PTR_FULL(Layout);
}

void FContestUIDescriptions::AfterRead()
{
	READ_PTR_FULL(NewMapDesc, UPopUpMessageDesc);
	READ_PTR_FULL(ShipSunkDesc, UPopUpMessageDesc);
}

void FContestUIDescriptions::BeforeDelete()
{
	DELE_PTR_FULL(NewMapDesc);
	DELE_PTR_FULL(ShipSunkDesc);
}

void FShipLiveryCatalogueEntry::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(ShipScrollTeamIcon, UTexture);
	READ_PTR_FULL(CrewLiveryOverlayIcon, UTexture);
}

void FShipLiveryCatalogueEntry::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(ShipScrollTeamIcon);
	DELE_PTR_FULL(CrewLiveryOverlayIcon);
}

void FShipLiveryTeamSet::AfterRead()
{
}

void FShipLiveryTeamSet::BeforeDelete()
{
}

void FCrewShipPersistentData::AfterRead()
{
	READ_PTR_FULL(CrewShipManifest, ACrewShipManifest);
}

void FCrewShipPersistentData::BeforeDelete()
{
	DELE_PTR_FULL(CrewShipManifest);
}

void FCrewShipPersistentDataManager::AfterRead()
{
}

void FCrewShipPersistentDataManager::BeforeDelete()
{
}

void FPlayersSpawningInTavern::AfterRead()
{
	READ_PTR_FULL(PlayerState, APlayerState);
}

void FPlayersSpawningInTavern::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
}

void FTrackedCrewInContest::AfterRead()
{
}

void FTrackedCrewInContest::BeforeDelete()
{
}

void FAchievementCompleteContest::AfterRead()
{
}

void FAchievementCompleteContest::BeforeDelete()
{
}

void FServerCrewChangedVisibilityStateEvent::AfterRead()
{
}

void FServerCrewChangedVisibilityStateEvent::BeforeDelete()
{
}

void FCinematicQuestEvent::AfterRead()
{
}

void FCinematicQuestEvent::BeforeDelete()
{
}

void FContestMapLayoutScoreInfo::AfterRead()
{
}

void FContestMapLayoutScoreInfo::BeforeDelete()
{
}

void FContestMapCrewData::AfterRead()
{
	READ_PTR_FULL(CrewIcon, UTexture);
	READ_PTR_FULL(ScoreIcon, UTexture);
	READ_PTR_FULL(UnderlineIcon, UTexture);
}

void FContestMapCrewData::BeforeDelete()
{
	DELE_PTR_FULL(CrewIcon);
	DELE_PTR_FULL(ScoreIcon);
	DELE_PTR_FULL(UnderlineIcon);
}

void FContestMapContents::AfterRead()
{
}

void FContestMapContents::BeforeDelete()
{
}

void FMerchantSpawnData::AfterRead()
{
}

void FMerchantSpawnData::BeforeDelete()
{
}

void FShipDamageEntry::AfterRead()
{
	READ_PTR_FULL(OtherShipSize, UClass);
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
}

void FShipDamageEntry::BeforeDelete()
{
	DELE_PTR_FULL(OtherShipSize);
	DELE_PTR_FULL(ForceFeedbackEffect);
}

void FShipHullRammingSpurDamageEntry::AfterRead()
{
}

void FShipHullRammingSpurDamageEntry::BeforeDelete()
{
}

void FShipHullLandscapeDamageEntry::AfterRead()
{
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
}

void FShipHullLandscapeDamageEntry::BeforeDelete()
{
	DELE_PTR_FULL(ForceFeedbackEffect);
}

void FShipHullDamageTypeEntry::AfterRead()
{
}

void FShipHullDamageTypeEntry::BeforeDelete()
{
}

void FShipHullDamageLevel::AfterRead()
{
	READ_PTR_FULL(SpeedBand, UClass);
}

void FShipHullDamageLevel::BeforeDelete()
{
	DELE_PTR_FULL(SpeedBand);
}

void FShipHullDamageParams::AfterRead()
{
}

void FShipHullDamageParams::BeforeDelete()
{
}

void FRammableExplosiveEntry::AfterRead()
{
	READ_PTR_FULL(RammerType, UClass);
	READ_PTR_FULL(MinimumSpeedForExplosion, UClass);
}

void FRammableExplosiveEntry::BeforeDelete()
{
	DELE_PTR_FULL(RammerType);
	DELE_PTR_FULL(MinimumSpeedForExplosion);
}

void FFaunaAnimationTurningStructure::AfterRead()
{
	READ_PTR_FULL(TurnLeft, UAnimSequence);
	READ_PTR_FULL(TurnRight, UAnimSequence);
}

void FFaunaAnimationTurningStructure::BeforeDelete()
{
	DELE_PTR_FULL(TurnLeft);
	DELE_PTR_FULL(TurnRight);
}

void FFaunaAnimationStartledStructure::AfterRead()
{
	READ_PTR_FULL(StartledLowAgitation, UAnimSequence);
	READ_PTR_FULL(StartledHighAgitation, UAnimSequence);
	READ_PTR_FULL(StartledOneShot, UAnimSequence);
}

void FFaunaAnimationStartledStructure::BeforeDelete()
{
	DELE_PTR_FULL(StartledLowAgitation);
	DELE_PTR_FULL(StartledHighAgitation);
	DELE_PTR_FULL(StartledOneShot);
}

void FFaunaAnimationPigStarvingStructure::AfterRead()
{
	READ_PTR_FULL(StarveIn, UAnimSequence);
	READ_PTR_FULL(StarveLoop, UAnimSequence);
	READ_PTR_FULL(StarveOut, UAnimSequence);
	READ_PTR_FULL(StarveDeath, UAnimSequence);
	READ_PTR_FULL(StarveStartledLow, UAnimSequence);
	READ_PTR_FULL(StarveStartledHigh, UAnimSequence);
}

void FFaunaAnimationPigStarvingStructure::BeforeDelete()
{
	DELE_PTR_FULL(StarveIn);
	DELE_PTR_FULL(StarveLoop);
	DELE_PTR_FULL(StarveOut);
	DELE_PTR_FULL(StarveDeath);
	DELE_PTR_FULL(StarveStartledLow);
	DELE_PTR_FULL(StarveStartledHigh);
}

void FFaunaAnimationEatingStructure::AfterRead()
{
	READ_PTR_FULL(EatingNormal, UAnimSequence);
	READ_PTR_FULL(EatingStarving, UAnimSequence);
}

void FFaunaAnimationEatingStructure::BeforeDelete()
{
	DELE_PTR_FULL(EatingNormal);
	DELE_PTR_FULL(EatingStarving);
}

void FFaunaAnimationSnakeBiteStructure::AfterRead()
{
	READ_PTR_FULL(BiteStanceIn, UAnimSequence);
	READ_PTR_FULL(BiteStanceOut, UAnimSequence);
	READ_PTR_FULL(BiteStanceLoopIdle, UAnimSequence);
	READ_PTR_FULL(BiteStanceAttack, UAnimSequence);
}

void FFaunaAnimationSnakeBiteStructure::BeforeDelete()
{
	DELE_PTR_FULL(BiteStanceIn);
	DELE_PTR_FULL(BiteStanceOut);
	DELE_PTR_FULL(BiteStanceLoopIdle);
	DELE_PTR_FULL(BiteStanceAttack);
}

void FFaunaAnimationSnakeCharmStructure::AfterRead()
{
	READ_PTR_FULL(CharmIn, UAnimSequence);
	READ_PTR_FULL(CharmLoop, UAnimSequence);
	READ_PTR_FULL(CharmOut, UAnimSequence);
}

void FFaunaAnimationSnakeCharmStructure::BeforeDelete()
{
	DELE_PTR_FULL(CharmIn);
	DELE_PTR_FULL(CharmLoop);
	DELE_PTR_FULL(CharmOut);
}

void FFaunaAnimationSnakeAttack::AfterRead()
{
}

void FFaunaAnimationSnakeAttack::BeforeDelete()
{
}

void FFaunaAnimationBaseStructure::AfterRead()
{
}

void FFaunaAnimationBaseStructure::BeforeDelete()
{
}

void FMechanismTransformAnimationCurve::AfterRead()
{
	READ_PTR_FULL(CurveAsset, UMechanismAnimationCurve_Transform);
}

void FMechanismTransformAnimationCurve::BeforeDelete()
{
	DELE_PTR_FULL(CurveAsset);
}

void FReapersMarkCurseStatInfo::AfterRead()
{
}

void FReapersMarkCurseStatInfo::BeforeDelete()
{
}

void FClothingLoadout::AfterRead()
{
}

void FClothingLoadout::BeforeDelete()
{
}

void FPetLoadoutItem::AfterRead()
{
	READ_PTR_FULL(PetEntitlementDesc, UClass);
	READ_PTR_FULL(PetCustomizationDesc, UClass);
}

void FPetLoadoutItem::BeforeDelete()
{
	DELE_PTR_FULL(PetEntitlementDesc);
	DELE_PTR_FULL(PetCustomizationDesc);
}

void FPetLoadout::AfterRead()
{
}

void FPetLoadout::BeforeDelete()
{
}

void FLoadout::AfterRead()
{
}

void FLoadout::BeforeDelete()
{
}

void FLoadoutCacheEntry::AfterRead()
{
}

void FLoadoutCacheEntry::BeforeDelete()
{
}

void FQuestVariableAssetArray::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableAssetArray::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableAISpawner::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableAISpawner::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableAIDioramaDesc::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableAIDioramaDesc::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableNotificationDesc::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableNotificationDesc::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableAISpawnerArray::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableAISpawnerArray::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FForkedStep::AfterRead()
{
	READ_PTR_FULL(Step, UTaleQuestStep);
}

void FForkedStep::BeforeDelete()
{
	DELE_PTR_FULL(Step);
}

void FCampaignRanks::AfterRead()
{
}

void FCampaignRanks::BeforeDelete()
{
}

void FTreasureLocationData::AfterRead()
{
}

void FTreasureLocationData::BeforeDelete()
{
}

void FTreasureData::AfterRead()
{
	READ_PTR_FULL(TreasureChestDesc, UClass);
	READ_PTR_FULL(TreasureSpawnData, UItemSpawnData);
}

void FTreasureData::BeforeDelete()
{
	DELE_PTR_FULL(TreasureChestDesc);
	DELE_PTR_FULL(TreasureSpawnData);
}

void FXMarksTheSpotQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

	READ_PTR_FULL(OverrideTreasureMapItemDesc, UClass);
}

void FXMarksTheSpotQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

	DELE_PTR_FULL(OverrideTreasureMapItemDesc);
}

void FPetRoamingAnimationStateLoadableWeightedDefinition::AfterRead()
{
}

void FPetRoamingAnimationStateLoadableWeightedDefinition::BeforeDelete()
{
}

void FQuestVariablePageLayout::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariablePageLayout::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FMapTransformRenderData::AfterRead()
{
}

void FMapTransformRenderData::BeforeDelete()
{
}

void FNPCOnSurfaceFloodedLevel::AfterRead()
{
}

void FNPCOnSurfaceFloodedLevel::BeforeDelete()
{
}

void FNPCOnSurfaceShipSizeFloodedLevels::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
}

void FNPCOnSurfaceShipSizeFloodedLevels::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
}

void FNPCOnSurfaceLocationsEntry::AfterRead()
{
}

void FNPCOnSurfaceLocationsEntry::BeforeDelete()
{
}

void FNPCOnSurfaceLocationGroup::AfterRead()
{
}

void FNPCOnSurfaceLocationGroup::BeforeDelete()
{
}

void FNPCOnDespawnVOEntry::AfterRead()
{
}

void FNPCOnDespawnVOEntry::BeforeDelete()
{
}

void FLocator::AfterRead()
{
}

void FLocator::BeforeDelete()
{
}

void FRainZoneParameters::AfterRead()
{
}

void FRainZoneParameters::BeforeDelete()
{
}

void FNonVerbalPhraseData::AfterRead()
{
}

void FNonVerbalPhraseData::BeforeDelete()
{
}

void FNonVerbalPageData::AfterRead()
{
}

void FNonVerbalPageData::BeforeDelete()
{
}

void FRewardGroup::AfterRead()
{
}

void FRewardGroup::BeforeDelete()
{
}

void FRewardGroupList::AfterRead()
{
}

void FRewardGroupList::BeforeDelete()
{
}

void FPerChapterRankRewardEntry::AfterRead()
{
}

void FPerChapterRankRewardEntry::BeforeDelete()
{
}

void FLandmarkTreasureLocationEntry::AfterRead()
{
}

void FLandmarkTreasureLocationEntry::BeforeDelete()
{
}

void FOutOfAmmoDestructionEffects::AfterRead()
{
	READ_PTR_FULL(DestroyLerpCurve, UCurveFloat);
	READ_PTR_FULL(DestroyVfx, UObject);
	READ_PTR_FULL(DestroyAudioEvent, UWwiseEvent);
	READ_PTR_FULL(DestroyAudioPool, UWwiseObjectPoolWrapper);
}

void FOutOfAmmoDestructionEffects::BeforeDelete()
{
	DELE_PTR_FULL(DestroyLerpCurve);
	DELE_PTR_FULL(DestroyVfx);
	DELE_PTR_FULL(DestroyAudioEvent);
	DELE_PTR_FULL(DestroyAudioPool);
}

void FEventAmmoChanged::AfterRead()
{
}

void FEventAmmoChanged::BeforeDelete()
{
}

void FAmmoEffectState::AfterRead()
{
}

void FAmmoEffectState::BeforeDelete()
{
}

void FItemSnapshot::AfterRead()
{
}

void FItemSnapshot::BeforeDelete()
{
}

void FLocationBootyStorage::AfterRead()
{
}

void FLocationBootyStorage::BeforeDelete()
{
}

void FCrewBootyStorage::AfterRead()
{
}

void FCrewBootyStorage::BeforeDelete()
{
}

void FStormStrengthType::AfterRead()
{
}

void FStormStrengthType::BeforeDelete()
{
}

void FRomeBeaconVelocityMap::AfterRead()
{
}

void FRomeBeaconVelocityMap::BeforeDelete()
{
}

void FEmblemCriteria::AfterRead()
{
}

void FEmblemCriteria::BeforeDelete()
{
}

void FEmblemRankDefinition::AfterRead()
{
}

void FEmblemRankDefinition::BeforeDelete()
{
}

void FEmblemSetDefinition::AfterRead()
{
	READ_PTR_FULL(UnlockPopUp, UPopUpMessageDesc);
	READ_PTR_FULL(UnlockPopUpAudioOverrides, UPopUpAudioDesc);
}

void FEmblemSetDefinition::BeforeDelete()
{
	DELE_PTR_FULL(UnlockPopUp);
	DELE_PTR_FULL(UnlockPopUpAudioOverrides);
}

void FAggressiveGhostShipSplineData::AfterRead()
{
}

void FAggressiveGhostShipSplineData::BeforeDelete()
{
}

void FContestMigrationRequestMessage::AfterRead()
{
}

void FContestMigrationRequestMessage::BeforeDelete()
{
}

void FEventPlayerChangedTableMapPan::AfterRead()
{
}

void FEventPlayerChangedTableMapPan::BeforeDelete()
{
}

void FEventPlayerChangedTableMapZoom::AfterRead()
{
}

void FEventPlayerChangedTableMapZoom::BeforeDelete()
{
}

void FClientStartConnectingToServerTelemetryEvent::AfterRead()
{
}

void FClientStartConnectingToServerTelemetryEvent::BeforeDelete()
{
}

void FCrewManagementMemberBrigState::AfterRead()
{
}

void FCrewManagementMemberBrigState::BeforeDelete()
{
}

void FCrewManagementMemberData::AfterRead()
{
}

void FCrewManagementMemberData::BeforeDelete()
{
}

void FReservedCrewSlotData::AfterRead()
{
}

void FReservedCrewSlotData::BeforeDelete()
{
}

void FCrewManagementOtherCrewData::AfterRead()
{
}

void FCrewManagementOtherCrewData::BeforeDelete()
{
}

void FCrewManagementShipData::AfterRead()
{
}

void FCrewManagementShipData::BeforeDelete()
{
}

void FCrewManagementMatchmakingVisibilityData::AfterRead()
{
}

void FCrewManagementMatchmakingVisibilityData::BeforeDelete()
{
}

void FCrewManagementArenaRivalVotingData::AfterRead()
{
}

void FCrewManagementArenaRivalVotingData::BeforeDelete()
{
}

void FCrewManagementData::AfterRead()
{
}

void FCrewManagementData::BeforeDelete()
{
}

void FCrewManagementEvent::AfterRead()
{
}

void FCrewManagementEvent::BeforeDelete()
{
}

void FStopRequestCrewManagementEvent::AfterRead()
{
}

void FStopRequestCrewManagementEvent::BeforeDelete()
{
}

void FRequestCrewManagementEvent::AfterRead()
{
}

void FRequestCrewManagementEvent::BeforeDelete()
{
}

void FEventApplyStatusPlayerCurse::AfterRead()
{
}

void FEventApplyStatusPlayerCurse::BeforeDelete()
{
}

void FEventCurseSleep::AfterRead()
{
}

void FEventCurseSleep::BeforeDelete()
{
}

void FEventCurseBoogie::AfterRead()
{
}

void FEventCurseBoogie::BeforeDelete()
{
}

void FEventCurseDrunkenness::AfterRead()
{
}

void FEventCurseDrunkenness::BeforeDelete()
{
}

void FEventCurseLimp::AfterRead()
{
}

void FEventCurseLimp::BeforeDelete()
{
}

void FCurseInfo::AfterRead()
{
}

void FCurseInfo::BeforeDelete()
{
}

void FPremiumCurrencyItemsResponseEvent::AfterRead()
{
}

void FPremiumCurrencyItemsResponseEvent::BeforeDelete()
{
}

void FPremiumCurrencyItemsRequestEvent::AfterRead()
{
}

void FPremiumCurrencyItemsRequestEvent::BeforeDelete()
{
}

void FPurchasePremiumShopOfferFailedEvent::AfterRead()
{
}

void FPurchasePremiumShopOfferFailedEvent::BeforeDelete()
{
}

void FPurchasePremiumShopOfferSucceededEvent::AfterRead()
{
}

void FPurchasePremiumShopOfferSucceededEvent::BeforeDelete()
{
}

void FPurchaseRealMoneyShopOfferFailedEvent::AfterRead()
{
}

void FPurchaseRealMoneyShopOfferFailedEvent::BeforeDelete()
{
}

void FSeasonPassRealMoneyPriceResponseEvent::AfterRead()
{
}

void FSeasonPassRealMoneyPriceResponseEvent::BeforeDelete()
{
}

void FRequestSeasonPassRealMoneyPriceEvent::AfterRead()
{
}

void FRequestSeasonPassRealMoneyPriceEvent::BeforeDelete()
{
}

void FRequestRealMoneyPurchaseSeasonPassOfferEvent::AfterRead()
{
}

void FRequestRealMoneyPurchaseSeasonPassOfferEvent::BeforeDelete()
{
}

void FRequestPurchaseSeasonPassOfferEvent::AfterRead()
{
}

void FRequestPurchaseSeasonPassOfferEvent::BeforeDelete()
{
}

void FRequestRealMoneyPurchasePremiumShopOfferEvent::AfterRead()
{
}

void FRequestRealMoneyPurchasePremiumShopOfferEvent::BeforeDelete()
{
}

void FRequestPurchasePremiumShopOfferEvent::AfterRead()
{
}

void FRequestPurchasePremiumShopOfferEvent::BeforeDelete()
{
}

void FRequestPremiumShopOffersEvent::AfterRead()
{
}

void FRequestPremiumShopOffersEvent::BeforeDelete()
{
}

void FPetShopErrorEvent::AfterRead()
{
}

void FPetShopErrorEvent::BeforeDelete()
{
}

void FShopOfferPrice::AfterRead()
{
}

void FShopOfferPrice::BeforeDelete()
{
}

void FShopOfferPrerequisites::AfterRead()
{
}

void FShopOfferPrerequisites::BeforeDelete()
{
}

void FShopOffer::AfterRead()
{
}

void FShopOffer::BeforeDelete()
{
}

void FPetBreedViewModel::AfterRead()
{
}

void FPetBreedViewModel::BeforeDelete()
{
}

void FRequestOpenShopEvent::AfterRead()
{
}

void FRequestOpenShopEvent::BeforeDelete()
{
}

void FSkellyFortFinder::AfterRead()
{
}

void FSkellyFortFinder::BeforeDelete()
{
}

void FCinematicCrewEvent::AfterRead()
{
}

void FCinematicCrewEvent::BeforeDelete()
{
}

void FCinematicCrewNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FCinematicCrewNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventReceiveTankardRefillerComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UTankardRefillerComponent);
}

void FEventReceiveTankardRefillerComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FVomitFacialAnim::AfterRead()
{
}

void FVomitFacialAnim::BeforeDelete()
{
}

void FEventReceiveWeepingComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UWeepingComponent);
}

void FEventReceiveWeepingComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FWielderInfo::AfterRead()
{
	READ_PTR_FULL(Character, AAthenaPlayerCharacter);
	READ_PTR_FULL(Controller, AAthenaPlayerController);
	READ_PTR_FULL(State, AAthenaPlayerState);
}

void FWielderInfo::BeforeDelete()
{
	DELE_PTR_FULL(Character);
	DELE_PTR_FULL(Controller);
	DELE_PTR_FULL(State);
}

void FEventAIEndCustomAnimationSequenceLoop::AfterRead()
{
}

void FEventAIEndCustomAnimationSequenceLoop::BeforeDelete()
{
}

void FEventAITriggerCustomAnimationSequence::AfterRead()
{
}

void FEventAITriggerCustomAnimationSequence::BeforeDelete()
{
}

void FEventAISkeletalShipCaptainAnimState::AfterRead()
{
}

void FEventAISkeletalShipCaptainAnimState::BeforeDelete()
{
}

void FEventAIUseAlternateLocomotionSet::AfterRead()
{
	READ_PTR_FULL(WieldedItemAnimationStoreId, UClass);
}

void FEventAIUseAlternateLocomotionSet::BeforeDelete()
{
	DELE_PTR_FULL(WieldedItemAnimationStoreId);
}

void FEventAIEmoteActionAnimationChange::AfterRead()
{
	READ_PTR_FULL(Owner, AAthenaCharacter);
}

void FEventAIEmoteActionAnimationChange::BeforeDelete()
{
	DELE_PTR_FULL(Owner);
}

void FEventAISenseAnimationChange::AfterRead()
{
	READ_PTR_FULL(Owner, AAthenaCharacter);
}

void FEventAISenseAnimationChange::BeforeDelete()
{
	DELE_PTR_FULL(Owner);
}

void FEventAncientAIFormDespawned::AfterRead()
{
	READ_PTR_FULL(KilledBy, AActor);
}

void FEventAncientAIFormDespawned::BeforeDelete()
{
	DELE_PTR_FULL(KilledBy);
}

void FFogBankLocalPlayerPenetrationEvent::AfterRead()
{
}

void FFogBankLocalPlayerPenetrationEvent::BeforeDelete()
{
}

void FEventAudioPlayerExitedHotFloorVicinity::AfterRead()
{
}

void FEventAudioPlayerExitedHotFloorVicinity::BeforeDelete()
{
}

void FEventAudioPlayerEnteredHotFloorVicinity::AfterRead()
{
}

void FEventAudioPlayerEnteredHotFloorVicinity::BeforeDelete()
{
}

void FSpeechAccessibilitySetting::AfterRead()
{
}

void FSpeechAccessibilitySetting::BeforeDelete()
{
}

void FSpeechAccessibilityProfileUser::AfterRead()
{
}

void FSpeechAccessibilityProfileUser::BeforeDelete()
{
}

void FStreamSnapshotModel::AfterRead()
{
}

void FStreamSnapshotModel::BeforeDelete()
{
}

void FStreamingStatusModel::AfterRead()
{
}

void FStreamingStatusModel::BeforeDelete()
{
}

void FStreamersRequest::AfterRead()
{
}

void FStreamersRequest::BeforeDelete()
{
}

void FCreatorCrewSettings::AfterRead()
{
}

void FCreatorCrewSettings::BeforeDelete()
{
}

void FCrewSessionLostEvent::AfterRead()
{
}

void FCrewSessionLostEvent::BeforeDelete()
{
}

void FCrewSessionDetailsChangedEvent::AfterRead()
{
}

void FCrewSessionDetailsChangedEvent::BeforeDelete()
{
}

void FRequestCurrentCrewSessionEvent::AfterRead()
{
}

void FRequestCurrentCrewSessionEvent::BeforeDelete()
{
}

void FLargeSessionServerEncounterDevTelemetryEvent::AfterRead()
{
}

void FLargeSessionServerEncounterDevTelemetryEvent::BeforeDelete()
{
}

void FLargeSessionEncounterDevTelemetryEvent::AfterRead()
{
}

void FLargeSessionEncounterDevTelemetryEvent::BeforeDelete()
{
}

void FDebugFlyingActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FDebugFlyingActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FDebugShipControlActionStateConstructionInfo::AfterRead()
{
	FControlObjectActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(DebugShipController, ADebugShipController);
}

void FDebugShipControlActionStateConstructionInfo::BeforeDelete()
{
	FControlObjectActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(DebugShipController);
}

void FDebugSuperSailorActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FDebugSuperSailorActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FDebugSuperSailorSetSpeedAmpRPCEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FDebugSuperSailorSetSpeedAmpRPCEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FDebugSuperSailorSetYawSpeedRPCEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FDebugSuperSailorSetYawSpeedRPCEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FDebugSuperSailorSetFwdSpeedRPCEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FDebugSuperSailorSetFwdSpeedRPCEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FQueryContendedResourcesRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FQueryContendedResourcesRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FQueryEventSchedulerStatusRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FQueryEventSchedulerStatusRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FQueryMigrationStatusRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(AthenaPlayerController, AAthenaPlayerController);
}

void FQueryMigrationStatusRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(AthenaPlayerController);
}

void FQueryServerMemoryRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(AthenaPlayerController, AAthenaPlayerController);
}

void FQueryServerMemoryRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(AthenaPlayerController);
}

void FResponseContendedResourcesNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FResponseContendedResourcesNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FResponseEventSchedulerStatusNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FResponseEventSchedulerStatusNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FResponseMigrationStatusNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FResponseMigrationStatusNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FStatBatchMessage::AfterRead()
{
}

void FStatBatchMessage::BeforeDelete()
{
}

void FEnableObjectLeakDetectionTelemetryRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FEnableObjectLeakDetectionTelemetryRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FObjectLeakDetectionDataReceivedEvent::AfterRead()
{
	READ_PTR_FULL(Connection, UNetConnection);
}

void FObjectLeakDetectionDataReceivedEvent::BeforeDelete()
{
	DELE_PTR_FULL(Connection);
}

void FObjectLeakDetectionTelemetryRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FObjectLeakDetectionTelemetryRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FRequestWalletBalanceUpdateHUDEvent::AfterRead()
{
}

void FRequestWalletBalanceUpdateHUDEvent::BeforeDelete()
{
}

void FHUDWalletBalance::AfterRead()
{
}

void FHUDWalletBalance::BeforeDelete()
{
}

void FClientProjectileHitRegInfoTelemetryEvent::AfterRead()
{
}

void FClientProjectileHitRegInfoTelemetryEvent::BeforeDelete()
{
}

void FFeatureConfigTelemetryEvent::AfterRead()
{
}

void FFeatureConfigTelemetryEvent::BeforeDelete()
{
}

void FServerHeartbeatTelemetryEvent::AfterRead()
{
}

void FServerHeartbeatTelemetryEvent::BeforeDelete()
{
}

void FEventScreenSizeInfoRequest::AfterRead()
{
}

void FEventScreenSizeInfoRequest::BeforeDelete()
{
}

void FEventScreenSizeInfo::AfterRead()
{
}

void FEventScreenSizeInfo::BeforeDelete()
{
}

void FAlwaysSkipMapTableAnimationChangeEvent::AfterRead()
{
}

void FAlwaysSkipMapTableAnimationChangeEvent::BeforeDelete()
{
}

void FGameNarrationOverrideStateChangeEvent::AfterRead()
{
}

void FGameNarrationOverrideStateChangeEvent::BeforeDelete()
{
}

void FClothingChestClothingLoadoutUpdatedEvent::AfterRead()
{
}

void FClothingChestClothingLoadoutUpdatedEvent::BeforeDelete()
{
}

void FUIRankSkin::AfterRead()
{
}

void FUIRankSkin::BeforeDelete()
{
}

void FUICompanySkin::AfterRead()
{
}

void FUICompanySkin::BeforeDelete()
{
}

void FUICompanyShopInfo::AfterRead()
{
}

void FUICompanyShopInfo::BeforeDelete()
{
}

void FUICompanyData::AfterRead()
{
}

void FUICompanyData::BeforeDelete()
{
}

void FEventCompanyDataResponse::AfterRead()
{
}

void FEventCompanyDataResponse::BeforeDelete()
{
}

void FEventCompanyDataRequest::AfterRead()
{
}

void FEventCompanyDataRequest::BeforeDelete()
{
}

void FPetChestPetLoadoutUpdatedEvent::AfterRead()
{
}

void FPetChestPetLoadoutUpdatedEvent::BeforeDelete()
{
}

void FEventCompanyReputationCampaignDetail::AfterRead()
{
}

void FEventCompanyReputationCampaignDetail::BeforeDelete()
{
}

void FEventCompanyReputationCampaignDetailResponse::AfterRead()
{
}

void FEventCompanyReputationCampaignDetailResponse::BeforeDelete()
{
}

void FEventCompanyReputationCampaignDetailRequest::AfterRead()
{
}

void FEventCompanyReputationCampaignDetailRequest::BeforeDelete()
{
}

void FShipCustomizationChestShipCustomizationEntitlementsUpdatedEvent::AfterRead()
{
}

void FShipCustomizationChestShipCustomizationEntitlementsUpdatedEvent::BeforeDelete()
{
}

void FRequestShipCustomizationChestShipCustomizationLoadoutEvent::AfterRead()
{
}

void FRequestShipCustomizationChestShipCustomizationLoadoutEvent::BeforeDelete()
{
}

void FRequestShipCustomizationChestShipCustomizationEntitlementsEvent::AfterRead()
{
}

void FRequestShipCustomizationChestShipCustomizationEntitlementsEvent::BeforeDelete()
{
}

void FRequestShipCustomizationChestUnequipShipCustomizationEvent::AfterRead()
{
}

void FRequestShipCustomizationChestUnequipShipCustomizationEvent::BeforeDelete()
{
}

void FRequestShipCustomizationChestEquipShipCustomizationEvent::AfterRead()
{
}

void FRequestShipCustomizationChestEquipShipCustomizationEvent::BeforeDelete()
{
}

void FVoyageDiscardedTelemetryEvent::AfterRead()
{
}

void FVoyageDiscardedTelemetryEvent::BeforeDelete()
{
}

void FVoyageProposalLostVotingSessionTelemetryEvent::AfterRead()
{
}

void FVoyageProposalLostVotingSessionTelemetryEvent::BeforeDelete()
{
}

void FVoyageProposalWonVotingSessionTelemetryEvent::AfterRead()
{
}

void FVoyageProposalWonVotingSessionTelemetryEvent::BeforeDelete()
{
}

void FPlayerVoyageProposalVoteTelemetryEvent::AfterRead()
{
}

void FPlayerVoyageProposalVoteTelemetryEvent::BeforeDelete()
{
}

void FBoxedRpcDiscardVoyage::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(VoyageToDiscard, UClass);
}

void FBoxedRpcDiscardVoyage::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(VoyageToDiscard);
}

void FVoyageInventoryClosedEvent::AfterRead()
{
}

void FVoyageInventoryClosedEvent::BeforeDelete()
{
}

void FVoyageDisplayInformation::AfterRead()
{
}

void FVoyageDisplayInformation::BeforeDelete()
{
}

void FVoyageProposalDescViewModel::AfterRead()
{
	FVoyageDisplayInformation::AfterRead();

}

void FVoyageProposalDescViewModel::BeforeDelete()
{
	FVoyageDisplayInformation::BeforeDelete();

}

void FVoyageAndTaleProposalsUpdatedEvent::AfterRead()
{
}

void FVoyageAndTaleProposalsUpdatedEvent::BeforeDelete()
{
}

void FAthenaAnimationWeaponData::AfterRead()
{
}

void FAthenaAnimationWeaponData::BeforeDelete()
{
}

void FAthenaAnimationWeapon::AfterRead()
{
}

void FAthenaAnimationWeapon::BeforeDelete()
{
}

void FAthenaAnimationWheelTurnsAnimData::AfterRead()
{
	READ_PTR_FULL(Turn, UAnimSequence);
	READ_PTR_FULL(TurnFast, UAnimSequence);
	READ_PTR_FULL(TurnFast180, UAnimSequence);
}

void FAthenaAnimationWheelTurnsAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Turn);
	DELE_PTR_FULL(TurnFast);
	DELE_PTR_FULL(TurnFast180);
}

void FAthenaAnimationWheelArmOverlayAnimData::AfterRead()
{
	READ_PTR_FULL(ArmLower, UBlendSpace1D);
	READ_PTR_FULL(ArmRaise, UBlendSpace1D);
}

void FAthenaAnimationWheelArmOverlayAnimData::BeforeDelete()
{
	DELE_PTR_FULL(ArmLower);
	DELE_PTR_FULL(ArmRaise);
}

void FAthenaAnimationWheelAnimData::AfterRead()
{
	READ_PTR_FULL(Into, UAnimSequence);
}

void FAthenaAnimationWheelAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Into);
}

void FGameEventExclusionZone::AfterRead()
{
}

void FGameEventExclusionZone::BeforeDelete()
{
}

void FGameEventSchedulerConfigTelemetry::AfterRead()
{
}

void FGameEventSchedulerConfigTelemetry::BeforeDelete()
{
}

void FHideInObjectActionStateConstructionInfo::AfterRead()
{
	FControlObjectActionStateConstructionInfo::AfterRead();

}

void FHideInObjectActionStateConstructionInfo::BeforeDelete()
{
	FControlObjectActionStateConstructionInfo::BeforeDelete();

}

void FAISpawnActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(HeldItemToBeginSpawn, UClass);
}

void FAISpawnActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(HeldItemToBeginSpawn);
}

void FCrewCompletedEmergentVoyageEvent::AfterRead()
{
}

void FCrewCompletedEmergentVoyageEvent::BeforeDelete()
{
}

void FCrewCancelledPrimaryVoyageEvent::AfterRead()
{
}

void FCrewCancelledPrimaryVoyageEvent::BeforeDelete()
{
}

void FCrewCompletedTaleEvent::AfterRead()
{
}

void FCrewCompletedTaleEvent::BeforeDelete()
{
}

void FCrewCompletedPrimaryVoyageEvent::AfterRead()
{
}

void FCrewCompletedPrimaryVoyageEvent::BeforeDelete()
{
}

void FTeleportLocation::AfterRead()
{
	READ_PTR_FULL(TeleportBase, USceneComponent);
}

void FTeleportLocation::BeforeDelete()
{
	DELE_PTR_FULL(TeleportBase);
}

void FEnterTunnelOfTheDamnedActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FEnterTunnelOfTheDamnedActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FMapTableStateForTunnel::AfterRead()
{
	READ_PTR_FULL(Table, AActor);
}

void FMapTableStateForTunnel::BeforeDelete()
{
	DELE_PTR_FULL(Table);
}

void FEventOnCrewStorageFull::AfterRead()
{
}

void FEventOnCrewStorageFull::BeforeDelete()
{
}

void FRetrieveBootyActorSpawnedEvent::AfterRead()
{
}

void FRetrieveBootyActorSpawnedEvent::BeforeDelete()
{
}

void FInitRetrieveBootyActorEvent::AfterRead()
{
}

void FInitRetrieveBootyActorEvent::BeforeDelete()
{
}

void FDismissRetrieveBootyActorEvent::AfterRead()
{
}

void FDismissRetrieveBootyActorEvent::BeforeDelete()
{
}

void FClientRequestExitConcealingObjectNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FClientRequestExitConcealingObjectNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventConcealingObjectUsed::AfterRead()
{
	READ_PTR_FULL(UsingActor, AActor);
}

void FEventConcealingObjectUsed::BeforeDelete()
{
	DELE_PTR_FULL(UsingActor);
}

void FDeactivateContestZoneEvent::AfterRead()
{
}

void FDeactivateContestZoneEvent::BeforeDelete()
{
}

void FActivateContestZoneEvent::AfterRead()
{
}

void FActivateContestZoneEvent::BeforeDelete()
{
}

void FInitialiseContestZoneEvent::AfterRead()
{
}

void FInitialiseContestZoneEvent::BeforeDelete()
{
}

void FCrewScore::AfterRead()
{
}

void FCrewScore::BeforeDelete()
{
}

void FContestLeaderboardUpdateEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FContestLeaderboardUpdateEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FPlayersCompletedContestSpawnInRewardStage::AfterRead()
{
}

void FPlayersCompletedContestSpawnInRewardStage::BeforeDelete()
{
}

void FPlayersCompletedContestSpawn::AfterRead()
{
}

void FPlayersCompletedContestSpawn::BeforeDelete()
{
}

void FPrepareTavernForContestMigration::AfterRead()
{
}

void FPrepareTavernForContestMigration::BeforeDelete()
{
}

void FPetAnimationDataPreview::AfterRead()
{
}

void FPetAnimationDataPreview::BeforeDelete()
{
}

void FEventAnimationAllowInterrupt::AfterRead()
{
}

void FEventAnimationAllowInterrupt::BeforeDelete()
{
}

void FEventAnimationBlockInterrupt::AfterRead()
{
}

void FEventAnimationBlockInterrupt::BeforeDelete()
{
}

void FEventShipRemovedFromCrew::AfterRead()
{
}

void FEventShipRemovedFromCrew::BeforeDelete()
{
}

void FEventShipAddedToCrew::AfterRead()
{
	READ_PTR_FULL(ShipActor, AActor);
}

void FEventShipAddedToCrew::BeforeDelete()
{
	DELE_PTR_FULL(ShipActor);
}

void FEventPlayerTaleProgressUpdated::AfterRead()
{
}

void FEventPlayerTaleProgressUpdated::BeforeDelete()
{
}

void FCrewBaseTelemetryFragmentPlayerControllerLookupInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

	READ_PTR_FULL(CrewMemberPlayerState, APlayerState);
}

void FCrewBaseTelemetryFragmentPlayerControllerLookupInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

	DELE_PTR_FULL(CrewMemberPlayerState);
}

void FCrewBaseTelemetryFragmentPlayerCharacterLookupInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

	READ_PTR_FULL(CrewMemberCharacter, ACharacter);
}

void FCrewBaseTelemetryFragmentPlayerCharacterLookupInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

	DELE_PTR_FULL(CrewMemberCharacter);
}

void FCrewBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FCrewBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FServerPopulationTelemetryFragment::AfterRead()
{
}

void FServerPopulationTelemetryFragment::BeforeDelete()
{
}

void FCrewBaseTelemetryFragment::AfterRead()
{
}

void FCrewBaseTelemetryFragment::BeforeDelete()
{
}

void FPlayerBriggedEndTelemetryEvent::AfterRead()
{
}

void FPlayerBriggedEndTelemetryEvent::BeforeDelete()
{
}

void FSessionVisibilityChangedTelemetryEvent::AfterRead()
{
}

void FSessionVisibilityChangedTelemetryEvent::BeforeDelete()
{
}

void FShipScuttledTelemetryEvent::AfterRead()
{
}

void FShipScuttledTelemetryEvent::BeforeDelete()
{
}

void FItemActionEffectHandle::AfterRead()
{
}

void FItemActionEffectHandle::BeforeDelete()
{
}

void FEventWieldableItemIsAboutToBeStowed::AfterRead()
{
}

void FEventWieldableItemIsAboutToBeStowed::BeforeDelete()
{
}

void FEventItemDroppedOnActor::AfterRead()
{
	READ_PTR_FULL(DroppedActor, AActor);
}

void FEventItemDroppedOnActor::BeforeDelete()
{
	DELE_PTR_FULL(DroppedActor);
}

void FEventWieldableItemDropped::AfterRead()
{
	READ_PTR_FULL(DroppedItemCategory, UClass);
	READ_PTR_FULL(ContactActor, AActor);
}

void FEventWieldableItemDropped::BeforeDelete()
{
	DELE_PTR_FULL(DroppedItemCategory);
	DELE_PTR_FULL(ContactActor);
}

void FEventExplosionDidDestroyWieldedItem::AfterRead()
{
	READ_PTR_FULL(DestroyedItem, AWieldableItem);
}

void FEventExplosionDidDestroyWieldedItem::BeforeDelete()
{
	DELE_PTR_FULL(DestroyedItem);
}

void FLockedWieldableItemCategoriesUpdatedEvent::AfterRead()
{
}

void FLockedWieldableItemCategoriesUpdatedEvent::BeforeDelete()
{
}

void FWieldableItemsUpdatedEvent::AfterRead()
{
}

void FWieldableItemsUpdatedEvent::BeforeDelete()
{
}

void FEventUseAlternateIdle::AfterRead()
{
}

void FEventUseAlternateIdle::BeforeDelete()
{
}

void FEventClientItemUseSpeedScaled::AfterRead()
{
}

void FEventClientItemUseSpeedScaled::BeforeDelete()
{
}

void FEventWieldableItemSetIsWielded::AfterRead()
{
	READ_PTR_FULL(Wielder, AActor);
}

void FEventWieldableItemSetIsWielded::BeforeDelete()
{
	DELE_PTR_FULL(Wielder);
}

void FEventWieldableItemUseStoppedAndFullyHidden::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
}

void FEventWieldableItemUseStoppedAndFullyHidden::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FEventWieldableItemUseStopped::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
	READ_PTR_FULL(InputID, UClass);
}

void FEventWieldableItemUseStopped::BeforeDelete()
{
	DELE_PTR_FULL(Item);
	DELE_PTR_FULL(InputID);
}

void FEventWieldableItemUseStarted::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
	READ_PTR_FULL(InputID, UClass);
}

void FEventWieldableItemUseStarted::BeforeDelete()
{
	DELE_PTR_FULL(Item);
	DELE_PTR_FULL(InputID);
}

void FEventWieldableItemUseStartingAndJustMadeVisible::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
}

void FEventWieldableItemUseStartingAndJustMadeVisible::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FEventOneShotUseTriggered::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
	READ_PTR_FULL(InputID, UClass);
}

void FEventOneShotUseTriggered::BeforeDelete()
{
	DELE_PTR_FULL(Item);
	DELE_PTR_FULL(InputID);
}

void FWieldAnimationParams::AfterRead()
{
}

void FWieldAnimationParams::BeforeDelete()
{
}

void FAthenaAnimationCoreObjectAnimations::AfterRead()
{
	READ_PTR_FULL(HandAdditive, UAnimSequence);
	READ_PTR_FULL(ScreamStun, UAnimSequence);
}

void FAthenaAnimationCoreObjectAnimations::BeforeDelete()
{
	DELE_PTR_FULL(HandAdditive);
	DELE_PTR_FULL(ScreamStun);
}

void FAthenaAnimationObjectTargetingOptions::AfterRead()
{
}

void FAthenaAnimationObjectTargetingOptions::BeforeDelete()
{
}

void FAthenaAnimationPitchControlStates::AfterRead()
{
}

void FAthenaAnimationPitchControlStates::BeforeDelete()
{
}

void FAthenaAnimationFirstPersonTurnDelayStates::AfterRead()
{
}

void FAthenaAnimationFirstPersonTurnDelayStates::BeforeDelete()
{
}

void FAthenaAnimationLoadObjectsWrapper::AfterRead()
{
	READ_PTR_FULL(ObjectId, UClass);
}

void FAthenaAnimationLoadObjectsWrapper::BeforeDelete()
{
	DELE_PTR_FULL(ObjectId);
}

void FCargoRunQuestParams::AfterRead()
{
	FQuestTypeParams::AfterRead();

	READ_PTR_FULL(RequiredItemsDataAsset, UCargoRunQuestRandomRequiredItemsDataAsset);
}

void FCargoRunQuestParams::BeforeDelete()
{
	FQuestTypeParams::BeforeDelete();

	DELE_PTR_FULL(RequiredItemsDataAsset);
}

void FRequiredClothingData::AfterRead()
{
}

void FRequiredClothingData::BeforeDelete()
{
}

void FItemRequirementData::AfterRead()
{
}

void FItemRequirementData::BeforeDelete()
{
}

void FEventTaleQuestServiceEntry::AfterRead()
{
}

void FEventTaleQuestServiceEntry::BeforeDelete()
{
}

void FFogBankSettings::AfterRead()
{
}

void FFogBankSettings::BeforeDelete()
{
}

void FFogColourForSea::AfterRead()
{
	READ_PTR_FULL(Sea, UClass);
}

void FFogColourForSea::BeforeDelete()
{
	DELE_PTR_FULL(Sea);
}

void FFogBankManagerIslandTypesToKeepAwayFrom::AfterRead()
{
}

void FFogBankManagerIslandTypesToKeepAwayFrom::BeforeDelete()
{
}

void FFogBankManagerIslandNamesToKeepAwayFrom::AfterRead()
{
}

void FFogBankManagerIslandNamesToKeepAwayFrom::BeforeDelete()
{
}

void FDecalEntry::AfterRead()
{
	READ_PTR_FULL(DecalComponent, UDecalComponent);
	READ_PTR_FULL(DecalMaterial, UMaterialInstanceDynamic);
}

void FDecalEntry::BeforeDelete()
{
	DELE_PTR_FULL(DecalComponent);
	DELE_PTR_FULL(DecalMaterial);
}

void FLightingControllerPostProcessParams::AfterRead()
{
	READ_PTR_FULL(PostProcessUnderWaterPrelightingMaterial, UMaterialInterface);
	READ_PTR_FULL(PostProcessUnderwaterCausticsMaterial, UMaterialInterface);
	READ_PTR_FULL(PostProcessDistortionMaterial, UMaterialInterface);
	READ_PTR_FULL(PostProcessColourOverlayMaterial, UMaterialInterface);
}

void FLightingControllerPostProcessParams::BeforeDelete()
{
	DELE_PTR_FULL(PostProcessUnderWaterPrelightingMaterial);
	DELE_PTR_FULL(PostProcessUnderwaterCausticsMaterial);
	DELE_PTR_FULL(PostProcessDistortionMaterial);
	DELE_PTR_FULL(PostProcessColourOverlayMaterial);
}

void FPlayerHealthChangeTelemetryEvent::AfterRead()
{
}

void FPlayerHealthChangeTelemetryEvent::BeforeDelete()
{
}

void FWheelAnimationProperties::AfterRead()
{
	READ_PTR_FULL(TurbulenceInputScale, UCurveFloat);
}

void FWheelAnimationProperties::BeforeDelete()
{
	DELE_PTR_FULL(TurbulenceInputScale);
}

void FWheelEventProperties::AfterRead()
{
}

void FWheelEventProperties::BeforeDelete()
{
}

void FMaterialManipulationSettings::AfterRead()
{
}

void FMaterialManipulationSettings::BeforeDelete()
{
}

void FMeshAnimatorSyncData::AfterRead()
{
}

void FMeshAnimatorSyncData::BeforeDelete()
{
}

void FMeshAnimatorInstance::AfterRead()
{
}

void FMeshAnimatorInstance::BeforeDelete()
{
}

void FVisualFeedbackEntry::AfterRead()
{
	READ_PTR_FULL(Effect, UEffectBlendObjectBase);
}

void FVisualFeedbackEntry::BeforeDelete()
{
	DELE_PTR_FULL(Effect);
}

void FVisualFeedbackList::AfterRead()
{
}

void FVisualFeedbackList::BeforeDelete()
{
}

void FRadialRuleInstanceMapping::AfterRead()
{
	READ_PTR_FULL(Rule, URadialCreationRuleAsset);
}

void FRadialRuleInstanceMapping::BeforeDelete()
{
	DELE_PTR_FULL(Rule);
}

void FNamedFirstPersonAnimatic::AfterRead()
{
}

void FNamedFirstPersonAnimatic::BeforeDelete()
{
}

void FIslandMaterialZoneStatusMapping::AfterRead()
{
	READ_PTR_FULL(SurfaceMaterial, UPhysicalMaterial);
}

void FIslandMaterialZoneStatusMapping::BeforeDelete()
{
	DELE_PTR_FULL(SurfaceMaterial);
}

void FToggledSpawnerOverride::AfterRead()
{
	READ_PTR_FULL(Spawner, UAISpawner);
}

void FToggledSpawnerOverride::BeforeDelete()
{
	DELE_PTR_FULL(Spawner);
}

void FWeightedItemDescSpawnDataAssetWithWeight::AfterRead()
{
	READ_PTR_FULL(WeightedItemSpawnDataAsset, UWeightedItemDescSpawnDataAsset);
}

void FWeightedItemDescSpawnDataAssetWithWeight::BeforeDelete()
{
	DELE_PTR_FULL(WeightedItemSpawnDataAsset);
}

void FWeightedItemDescSpawnDataAssetsWithWeights::AfterRead()
{
}

void FWeightedItemDescSpawnDataAssetsWithWeights::BeforeDelete()
{
}

void FMerchantMapLayoutItem::AfterRead()
{
}

void FMerchantMapLayoutItem::BeforeDelete()
{
}

void FRammableDamageEntry::AfterRead()
{
	READ_PTR_FULL(RammerType, UClass);
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
}

void FRammableDamageEntry::BeforeDelete()
{
	DELE_PTR_FULL(RammerType);
	DELE_PTR_FULL(ForceFeedbackEffect);
}

void FNamedPointsCollectionGroup::AfterRead()
{
}

void FNamedPointsCollectionGroup::BeforeDelete()
{
}

void FMechanismCheckpoint::AfterRead()
{
}

void FMechanismCheckpoint::BeforeDelete()
{
}

void FKeySequence::AfterRead()
{
	READ_PTR_FULL(VaultKeyDesc, UClass);
}

void FKeySequence::BeforeDelete()
{
	DELE_PTR_FULL(VaultKeyDesc);
}

void FTimedDoorState::AfterRead()
{
}

void FTimedDoorState::BeforeDelete()
{
}

void FMechanismFloatAnimationCurve::AfterRead()
{
	READ_PTR_FULL(CurveAsset, UMechanismAnimationCurve_Float);
}

void FMechanismFloatAnimationCurve::BeforeDelete()
{
	DELE_PTR_FULL(CurveAsset);
}

void FAggressiveGhostShipEncounterFormationLocationDesc::AfterRead()
{
}

void FAggressiveGhostShipEncounterFormationLocationDesc::BeforeDelete()
{
}

void FAggressiveGhostShipEncounterFormationDesc::AfterRead()
{
}

void FAggressiveGhostShipEncounterFormationDesc::BeforeDelete()
{
}

void FAggressiveGhostShipEncounterFormationDescGroup::AfterRead()
{
}

void FAggressiveGhostShipEncounterFormationDescGroup::BeforeDelete()
{
}

void FAggressiveGhostShipFixedSpline::AfterRead()
{
}

void FAggressiveGhostShipFixedSpline::BeforeDelete()
{
}

void FAggressiveGhostShipDifficultyTargetSelection::AfterRead()
{
}

void FAggressiveGhostShipDifficultyTargetSelection::BeforeDelete()
{
}

void FAggressiveGhostShipDifficultyShipSizeTargetSelection::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
}

void FAggressiveGhostShipDifficultyShipSizeTargetSelection::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
}

void FAggressiveGhostShipShotSelection::AfterRead()
{
	READ_PTR_FULL(ProjectileClass, UClass);
}

void FAggressiveGhostShipShotSelection::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileClass);
}

void FAggressiveGhostShipVisualsMaterialOverride::AfterRead()
{
}

void FAggressiveGhostShipVisualsMaterialOverride::BeforeDelete()
{
}

void FAggressiveGhostShipVisualsExtraMesh::AfterRead()
{
}

void FAggressiveGhostShipVisualsExtraMesh::BeforeDelete()
{
}

void FMeleeAIAbilityAngleChecker::AfterRead()
{
}

void FMeleeAIAbilityAngleChecker::BeforeDelete()
{
}

void FFishSizeAndWeight::AfterRead()
{
}

void FFishSizeAndWeight::BeforeDelete()
{
}

void FFirstPersonAnimaticSettings::AfterRead()
{
}

void FFirstPersonAnimaticSettings::BeforeDelete()
{
}

void FFirstPersonAnimaticActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FFirstPersonAnimaticActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FCharacterAnimaticSettings::AfterRead()
{
}

void FCharacterAnimaticSettings::BeforeDelete()
{
}

void FUIReturnedToPlayerEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FUIReturnedToPlayerEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventPlayerControllerHitNotification::AfterRead()
{
}

void FEventPlayerControllerHitNotification::BeforeDelete()
{
}

void FEventClientPlayerSpawnedBeforeGameState::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FEventClientPlayerSpawnedBeforeGameState::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventPlayerTeleportToSafety::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FEventPlayerTeleportToSafety::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventPlayerControllerUnPossess::AfterRead()
{
	READ_PTR_FULL(Pawn, APawn);
}

void FEventPlayerControllerUnPossess::BeforeDelete()
{
	DELE_PTR_FULL(Pawn);
}

void FEventPlayerControllerPossess::AfterRead()
{
	READ_PTR_FULL(Pawn, APawn);
}

void FEventPlayerControllerPossess::BeforeDelete()
{
	DELE_PTR_FULL(Pawn);
}

void FEventAthenaPlayerControllerEndingPlay::AfterRead()
{
	READ_PTR_FULL(Controller, AAthenaPlayerController);
}

void FEventAthenaPlayerControllerEndingPlay::BeforeDelete()
{
	DELE_PTR_FULL(Controller);
}

void FEventAthenaPlayerControllerBegunPlay::AfterRead()
{
	READ_PTR_FULL(Controller, AAthenaPlayerController);
}

void FEventAthenaPlayerControllerBegunPlay::BeforeDelete()
{
	DELE_PTR_FULL(Controller);
}

void FEventPlayerControllerDestroyedCalled::AfterRead()
{
	READ_PTR_FULL(Controller, AAthenaPlayerController);
}

void FEventPlayerControllerDestroyedCalled::BeforeDelete()
{
	DELE_PTR_FULL(Controller);
}

void FPlayerHeroStatUpdatedEvent::AfterRead()
{
}

void FPlayerHeroStatUpdatedEvent::BeforeDelete()
{
}

void FPlayerModerationReportablePlayerDetails::AfterRead()
{
}

void FPlayerModerationReportablePlayerDetails::BeforeDelete()
{
}

void FRecentlyInteractedWithPlayer::AfterRead()
{
}

void FRecentlyInteractedWithPlayer::BeforeDelete()
{
}

void FPlayerNonVerbalComponentTelemetry::AfterRead()
{
	READ_PTR_FULL(PlayerController, AAthenaPlayerController);
}

void FPlayerNonVerbalComponentTelemetry::BeforeDelete()
{
	DELE_PTR_FULL(PlayerController);
}

void FPioneerRewardInfo::AfterRead()
{
	READ_PTR_FULL(PopUp, UPopUpMessageDesc);
}

void FPioneerRewardInfo::BeforeDelete()
{
	DELE_PTR_FULL(PopUp);
}

void FPosablePirateAnimation::AfterRead()
{
	READ_PTR_FULL(Animation, UAnimSequence);
	READ_PTR_FULL(SkeletalMeshProp, USkeletalMesh);
	READ_PTR_FULL(StaticMeshProp, UStaticMesh);
}

void FPosablePirateAnimation::BeforeDelete()
{
	DELE_PTR_FULL(Animation);
	DELE_PTR_FULL(SkeletalMeshProp);
	DELE_PTR_FULL(StaticMeshProp);
}

void FPirateDeletionRequestedEvent::AfterRead()
{
}

void FPirateDeletionRequestedEvent::BeforeDelete()
{
}

void FConnectToServicesStateDiscoverySucceededPreLoginEvent::AfterRead()
{
}

void FConnectToServicesStateDiscoverySucceededPreLoginEvent::BeforeDelete()
{
}

void FLobbyInviteCode::AfterRead()
{
}

void FLobbyInviteCode::BeforeDelete()
{
}

void FLobbyCreationRequestModel::AfterRead()
{
}

void FLobbyCreationRequestModel::BeforeDelete()
{
}

void FLobbyServiceModel::AfterRead()
{
}

void FLobbyServiceModel::BeforeDelete()
{
}

void FStunnedActionStateParams::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FStunnedActionStateParams::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FStunnedActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FStunnedActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEventSwimmingCreatureShipBite::AfterRead()
{
	READ_PTR_FULL(Ship, AShip);
}

void FEventSwimmingCreatureShipBite::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventFaunaAnimationStartSnakeStrike::AfterRead()
{
}

void FEventFaunaAnimationStartSnakeStrike::BeforeDelete()
{
}

void FEventFaunaAnimationSnakeInCharmStance::AfterRead()
{
}

void FEventFaunaAnimationSnakeInCharmStance::BeforeDelete()
{
}

void FEventFaunaAnimationSnakeInAttackStance::AfterRead()
{
}

void FEventFaunaAnimationSnakeInAttackStance::BeforeDelete()
{
}

void FEventFaunaAnimationAgitated::AfterRead()
{
}

void FEventFaunaAnimationAgitated::BeforeDelete()
{
}

void FEventFaunaAnimationStartEating::AfterRead()
{
}

void FEventFaunaAnimationStartEating::BeforeDelete()
{
}

void FEventFaunaAnimationStarving::AfterRead()
{
}

void FEventFaunaAnimationStarving::BeforeDelete()
{
}

void FEventFaunaAnimationSpecial::AfterRead()
{
}

void FEventFaunaAnimationSpecial::BeforeDelete()
{
}

void FEventFaunaAnimationImpact::AfterRead()
{
}

void FEventFaunaAnimationImpact::BeforeDelete()
{
}

void FEventFaunaAnimationLocationChanged::AfterRead()
{
}

void FEventFaunaAnimationLocationChanged::BeforeDelete()
{
}

void FEventFaunaAnimationIsCaged::AfterRead()
{
}

void FEventFaunaAnimationIsCaged::BeforeDelete()
{
}

void FEventFaunaAnimationTransition::AfterRead()
{
}

void FEventFaunaAnimationTransition::BeforeDelete()
{
}

void FPlayerTookFlameOfFateEvent::AfterRead()
{
	READ_PTR_FULL(PlayerCharacter, AAthenaPlayerCharacter);
	READ_PTR_FULL(Source, UObject);
}

void FPlayerTookFlameOfFateEvent::BeforeDelete()
{
	DELE_PTR_FULL(PlayerCharacter);
	DELE_PTR_FULL(Source);
}

void FPlayerSetFlameOfFateEvent::AfterRead()
{
	READ_PTR_FULL(PlayerCharacter, AAthenaPlayerCharacter);
	READ_PTR_FULL(Target, UObject);
}

void FPlayerSetFlameOfFateEvent::BeforeDelete()
{
	DELE_PTR_FULL(PlayerCharacter);
	DELE_PTR_FULL(Target);
}

void FSetFlameOfFateEvent::AfterRead()
{
	READ_PTR_FULL(Source, UObject);
}

void FSetFlameOfFateEvent::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FPlayerRecieveFlameTelemetryEvent::AfterRead()
{
}

void FPlayerRecieveFlameTelemetryEvent::BeforeDelete()
{
}

void FPlayerSetFlameOfFateTelemetryEvent::AfterRead()
{
}

void FPlayerSetFlameOfFateTelemetryEvent::BeforeDelete()
{
}

void FPlinthActivatedEvent::AfterRead()
{
}

void FPlinthActivatedEvent::BeforeDelete()
{
}

void FDeactivateHatchEvent::AfterRead()
{
}

void FDeactivateHatchEvent::BeforeDelete()
{
}

void FActivateHatchEvent::AfterRead()
{
}

void FActivateHatchEvent::BeforeDelete()
{
}

void FOnRepIsXboxGamePadOnlyServerEvent::AfterRead()
{
}

void FOnRepIsXboxGamePadOnlyServerEvent::BeforeDelete()
{
}

void FEventAthenaCharacterMovementTickFinished::AfterRead()
{
}

void FEventAthenaCharacterMovementTickFinished::BeforeDelete()
{
}

void FEventInitialNetRelevantActorsCreated::AfterRead()
{
}

void FEventInitialNetRelevantActorsCreated::BeforeDelete()
{
}

void FEventHarpoonProjectileClientStateChanged::AfterRead()
{
}

void FEventHarpoonProjectileClientStateChanged::BeforeDelete()
{
}

void FIconCaptureDataRow::AfterRead()
{
	FTableRowBase::AfterRead();

}

void FIconCaptureDataRow::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

}

void FClothingLoadoutUpdatedEvent::AfterRead()
{
	READ_PTR_FULL(Character, AActor);
}

void FClothingLoadoutUpdatedEvent::BeforeDelete()
{
	DELE_PTR_FULL(Character);
}

void FEmoteLoadoutUpdatedEvent::AfterRead()
{
}

void FEmoteLoadoutUpdatedEvent::BeforeDelete()
{
}

void FPlayerChangedShipLoadoutEvent::AfterRead()
{
}

void FPlayerChangedShipLoadoutEvent::BeforeDelete()
{
}

void FPlayerChangedLoadoutEvent::AfterRead()
{
}

void FPlayerChangedLoadoutEvent::BeforeDelete()
{
}

void FPetLoadoutUpdatedEvent::AfterRead()
{
}

void FPetLoadoutUpdatedEvent::BeforeDelete()
{
}

void FShipCustomizationLoadoutUpdatedEvent::AfterRead()
{
}

void FShipCustomizationLoadoutUpdatedEvent::BeforeDelete()
{
}

void FTitleLoadoutUpdatedEvent::AfterRead()
{
}

void FTitleLoadoutUpdatedEvent::BeforeDelete()
{
}

void FMountedWeaponFireAcknowledgeRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(MountedWeaponObject, UObject);
}

void FMountedWeaponFireAcknowledgeRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(MountedWeaponObject);
}

void FMountedWeaponFireRejectionRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(MountedWeaponObject, UObject);
}

void FMountedWeaponFireRejectionRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(MountedWeaponObject);
}

void FEventNPCServiceRegistered::AfterRead()
{
}

void FEventNPCServiceRegistered::BeforeDelete()
{
}

void FShipRestockedTelemetryEvent::AfterRead()
{
}

void FShipRestockedTelemetryEvent::BeforeDelete()
{
}

void FPlayerExitsShopTelemetryEvent::AfterRead()
{
}

void FPlayerExitsShopTelemetryEvent::BeforeDelete()
{
}

void FClientRequestCameraFadeCompleteAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FClientRequestCameraFadeCompleteAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FServerCameraFadeCompleteAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FServerCameraFadeCompleteAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FCampaignCompletedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FCampaignCompletedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEmblemUnlockedPopupEvent::AfterRead()
{
	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
	READ_PTR_FULL(PopUpAudioOverrides, UPopUpAudioDesc);
}

void FEmblemUnlockedPopupEvent::BeforeDelete()
{
	DELE_PTR_FULL(PopUpDesc);
	DELE_PTR_FULL(PopUpAudioOverrides);
}

void FEventEmblemUnlockedNotification::AfterRead()
{
}

void FEventEmblemUnlockedNotification::BeforeDelete()
{
}

void FCrewCostumeEntitlementHelpers::AfterRead()
{
}

void FCrewCostumeEntitlementHelpers::BeforeDelete()
{
}

void FConsumeEntitlementRequestFailedTelemetryEvent::AfterRead()
{
}

void FConsumeEntitlementRequestFailedTelemetryEvent::BeforeDelete()
{
}

void FEventPlayerConfigSetBooleanValue::AfterRead()
{
}

void FEventPlayerConfigSetBooleanValue::BeforeDelete()
{
}

void FEventPlayerConfigRequestAllConfigsResponse::AfterRead()
{
}

void FEventPlayerConfigRequestAllConfigsResponse::BeforeDelete()
{
}

void FEventPlayerConfigRequestAllConfigs::AfterRead()
{
}

void FEventPlayerConfigRequestAllConfigs::BeforeDelete()
{
}

void FEventPlayerTeleportComplete::AfterRead()
{
	READ_PTR_FULL(PlayerState, AAthenaPlayerState);
}

void FEventPlayerTeleportComplete::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
}

void FEventPlayerWaitingToSpawnComplete::AfterRead()
{
	READ_PTR_FULL(PlayerState, AAthenaPlayerState);
}

void FEventPlayerWaitingToSpawnComplete::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
}

void FEventPlayerTriggeredTrapPressurePlate::AfterRead()
{
}

void FEventPlayerTriggeredTrapPressurePlate::BeforeDelete()
{
}

void FEventPlayerFellDistance::AfterRead()
{
}

void FEventPlayerFellDistance::BeforeDelete()
{
}

void FEventPlayerLeftRainZone::AfterRead()
{
}

void FEventPlayerLeftRainZone::BeforeDelete()
{
}

void FEventPlayerEnteredRainZone::AfterRead()
{
}

void FEventPlayerEnteredRainZone::BeforeDelete()
{
}

void FEventWielderHasExternalLightSource::AfterRead()
{
}

void FEventWielderHasExternalLightSource::BeforeDelete()
{
}

void FCrewLeftAllianceTelemetryEvent::AfterRead()
{
}

void FCrewLeftAllianceTelemetryEvent::BeforeDelete()
{
}

void FPirateInventoryItemModel::AfterRead()
{
}

void FPirateInventoryItemModel::BeforeDelete()
{
}

void FPirateReRollRequestModel::AfterRead()
{
}

void FPirateReRollRequestModel::BeforeDelete()
{
}

void FRewardRequestSucceededMessage::AfterRead()
{
}

void FRewardRequestSucceededMessage::BeforeDelete()
{
}

void FPenaltyRequestMessage::AfterRead()
{
}

void FPenaltyRequestMessage::BeforeDelete()
{
}

void FRewardRequestForPirateMessage::AfterRead()
{
}

void FRewardRequestForPirateMessage::BeforeDelete()
{
}

void FRewardRequestCrew::AfterRead()
{
}

void FRewardRequestCrew::BeforeDelete()
{
}

void FAllianceRewardRequestMessage::AfterRead()
{
}

void FAllianceRewardRequestMessage::BeforeDelete()
{
}

void FRewardRequestMessage::AfterRead()
{
}

void FRewardRequestMessage::BeforeDelete()
{
}

void FPirateGoldReward::AfterRead()
{
}

void FPirateGoldReward::BeforeDelete()
{
}

void FAwardGoldMessage::AfterRead()
{
}

void FAwardGoldMessage::BeforeDelete()
{
}

void FServerMatchmakingConfigChangedEvent::AfterRead()
{
}

void FServerMatchmakingConfigChangedEvent::BeforeDelete()
{
}

void FServerMatchmakingCrewLeftEvent::AfterRead()
{
}

void FServerMatchmakingCrewLeftEvent::BeforeDelete()
{
}

void FServerMatchmakingPlayerServerAssignmentEvent::AfterRead()
{
}

void FServerMatchmakingPlayerServerAssignmentEvent::BeforeDelete()
{
}

void FServerMatchmakingResultEvent::AfterRead()
{
}

void FServerMatchmakingResultEvent::BeforeDelete()
{
}

void FServerMatchmakingPlayerCrewAssignmentEvent::AfterRead()
{
}

void FServerMatchmakingPlayerCrewAssignmentEvent::BeforeDelete()
{
}

void FServerMatchmakingRequestEvent::AfterRead()
{
}

void FServerMatchmakingRequestEvent::BeforeDelete()
{
}

void FServerMatchmakingRefusedEvent::AfterRead()
{
}

void FServerMatchmakingRefusedEvent::BeforeDelete()
{
}

void FCompanyReputationSummary::AfterRead()
{
}

void FCompanyReputationSummary::BeforeDelete()
{
}

void FReputationDisplayInformation::AfterRead()
{
}

void FReputationDisplayInformation::BeforeDelete()
{
}

void FEventFriendsListFailed::AfterRead()
{
}

void FEventFriendsListFailed::BeforeDelete()
{
}

void FEventFriendsListChanged::AfterRead()
{
}

void FEventFriendsListChanged::BeforeDelete()
{
}

void FEventFriendsListResponse::AfterRead()
{
}

void FEventFriendsListResponse::BeforeDelete()
{
}

void FEventFriendsListRequest::AfterRead()
{
}

void FEventFriendsListRequest::BeforeDelete()
{
}

void FEventHUDSetMousePosition::AfterRead()
{
}

void FEventHUDSetMousePosition::BeforeDelete()
{
}

void FEventHUDMouseCursorCentre::AfterRead()
{
}

void FEventHUDMouseCursorCentre::BeforeDelete()
{
}

void FEventHUDMouseFocusRequest::AfterRead()
{
}

void FEventHUDMouseFocusRequest::BeforeDelete()
{
}

void FEventHUDScriptingReady::AfterRead()
{
}

void FEventHUDScriptingReady::BeforeDelete()
{
}

void FTextboxTextFromVirtualKeyboard::AfterRead()
{
}

void FTextboxTextFromVirtualKeyboard::BeforeDelete()
{
}

void FEventPetNameTextboxTextFromVirtualKeyboard::AfterRead()
{
}

void FEventPetNameTextboxTextFromVirtualKeyboard::BeforeDelete()
{
}

void FEventChatboxTextFromVirtualKeyboard::AfterRead()
{
}

void FEventChatboxTextFromVirtualKeyboard::BeforeDelete()
{
}

void FEventPlayerOpenChatbox::AfterRead()
{
}

void FEventPlayerOpenChatbox::BeforeDelete()
{
}

void FEventPlayerOpenQuickMenu::AfterRead()
{
}

void FEventPlayerOpenQuickMenu::BeforeDelete()
{
}

void FEventPlayerOpenEscapeMenu::AfterRead()
{
}

void FEventPlayerOpenEscapeMenu::BeforeDelete()
{
}

void FEventInGameBlurRequest::AfterRead()
{
}

void FEventInGameBlurRequest::BeforeDelete()
{
}

void FTextboxFocusRequest::AfterRead()
{
}

void FTextboxFocusRequest::BeforeDelete()
{
}

void FEventPetNameTextboxFocusRequest::AfterRead()
{
}

void FEventPetNameTextboxFocusRequest::BeforeDelete()
{
}

void FEventChatboxFocusRequest::AfterRead()
{
}

void FEventChatboxFocusRequest::BeforeDelete()
{
}

void FEventInGameUIFocusRequest::AfterRead()
{
}

void FEventInGameUIFocusRequest::BeforeDelete()
{
}

void FUIPremiumStoreItemInteractEvent::AfterRead()
{
}

void FUIPremiumStoreItemInteractEvent::BeforeDelete()
{
}

void FUIPremiumStorePanelHighlightEvent::AfterRead()
{
}

void FUIPremiumStorePanelHighlightEvent::BeforeDelete()
{
}

void FUIPremiumStorePageTransitionEvent::AfterRead()
{
}

void FUIPremiumStorePageTransitionEvent::BeforeDelete()
{
}

void FUIPremiumStoreOpenEvent::AfterRead()
{
}

void FUIPremiumStoreOpenEvent::BeforeDelete()
{
}

void FUIScreenTransitionEvent::AfterRead()
{
}

void FUIScreenTransitionEvent::BeforeDelete()
{
}

void FOnHUDDestruction::AfterRead()
{
}

void FOnHUDDestruction::BeforeDelete()
{
}

void FOfferPurchasedEvent::AfterRead()
{
}

void FOfferPurchasedEvent::BeforeDelete()
{
}

void FLaunchableProjectileDamageEvent::AfterRead()
{
	READ_PTR_FULL(Instigator, AActor);
	READ_PTR_FULL(ProjectileActor, AActor);
	READ_PTR_FULL(ActorHit, AActor);
}

void FLaunchableProjectileDamageEvent::BeforeDelete()
{
	DELE_PTR_FULL(Instigator);
	DELE_PTR_FULL(ProjectileActor);
	DELE_PTR_FULL(ActorHit);
}

void FEventRecoveredMaxHealth::AfterRead()
{
}

void FEventRecoveredMaxHealth::BeforeDelete()
{
}

void FEventHealthChangeContinuousEnd::AfterRead()
{
}

void FEventHealthChangeContinuousEnd::BeforeDelete()
{
}

void FEventHealthChangeContinuousStart::AfterRead()
{
}

void FEventHealthChangeContinuousStart::BeforeDelete()
{
}

void FEventHealthChangeAllContinuousChangesRemoved::AfterRead()
{
}

void FEventHealthChangeAllContinuousChangesRemoved::BeforeDelete()
{
}

void FEventHealthChangeContinuousRemoved::AfterRead()
{
}

void FEventHealthChangeContinuousRemoved::BeforeDelete()
{
}

void FEventHealthChangeContinuousApplied::AfterRead()
{
}

void FEventHealthChangeContinuousApplied::BeforeDelete()
{
}

void FHealthChange::AfterRead()
{
	READ_PTR_FULL(DirectInstigator, AActor);
	READ_PTR_FULL(RootInstigator, AActor);
}

void FHealthChange::BeforeDelete()
{
	DELE_PTR_FULL(DirectInstigator);
	DELE_PTR_FULL(RootInstigator);
}

void FEventHealthChanged::AfterRead()
{
}

void FEventHealthChanged::BeforeDelete()
{
}

void FEventFinishedSpawning::AfterRead()
{
}

void FEventFinishedSpawning::BeforeDelete()
{
}

void FEventFiredFromActorEnd::AfterRead()
{
}

void FEventFiredFromActorEnd::BeforeDelete()
{
}

void FEventFiredFromActorStart::AfterRead()
{
}

void FEventFiredFromActorStart::BeforeDelete()
{
}

void FSetFirstPersonMeshVisibleEvent::AfterRead()
{
}

void FSetFirstPersonMeshVisibleEvent::BeforeDelete()
{
}

void FEventCharacterKnockedBack::AfterRead()
{
}

void FEventCharacterKnockedBack::BeforeDelete()
{
}

void FEventCharacterMovementModeChanged::AfterRead()
{
}

void FEventCharacterMovementModeChanged::BeforeDelete()
{
}

void FEventCharacterInert::AfterRead()
{
}

void FEventCharacterInert::BeforeDelete()
{
}

void FEventPlayerInteractedWithObject::AfterRead()
{
}

void FEventPlayerInteractedWithObject::BeforeDelete()
{
}

void FEventPlayerStatePawnUnPossessed::AfterRead()
{
	READ_PTR_FULL(PlayerState, APlayerState);
	READ_PTR_FULL(UnPossessedPawn, APawn);
}

void FEventPlayerStatePawnUnPossessed::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
	DELE_PTR_FULL(UnPossessedPawn);
}

void FEventPlayerStatePawnPossessed::AfterRead()
{
	READ_PTR_FULL(PlayerState, APlayerState);
	READ_PTR_FULL(PossessedPawn, APawn);
}

void FEventPlayerStatePawnPossessed::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
	DELE_PTR_FULL(PossessedPawn);
}

void FOtherPartyTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FOtherPartyTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FOtherPartyTelemetryFragment::AfterRead()
{
}

void FOtherPartyTelemetryFragment::BeforeDelete()
{
}

void FEventPlayerLeftProximity::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerLeftProximity::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventPlayerEnteredProximity::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerEnteredProximity::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FConditionalStatContext::AfterRead()
{
	READ_PTR_FULL(ObjectOfInterest1, UObject);
	READ_PTR_FULL(ObjectOfInterest2, UObject);
}

void FConditionalStatContext::BeforeDelete()
{
	DELE_PTR_FULL(ObjectOfInterest1);
	DELE_PTR_FULL(ObjectOfInterest2);
}

void FHeroStatEvent::AfterRead()
{
}

void FHeroStatEvent::BeforeDelete()
{
}

void FCrewStatEvent::AfterRead()
{
}

void FCrewStatEvent::BeforeDelete()
{
}

void FStatEvent::AfterRead()
{
}

void FStatEvent::BeforeDelete()
{
}

void FActorDeactivationCompleted::AfterRead()
{
}

void FActorDeactivationCompleted::BeforeDelete()
{
}

void FActorDeactivationRequested::AfterRead()
{
}

void FActorDeactivationRequested::BeforeDelete()
{
}

void FActorActivationCompleted::AfterRead()
{
}

void FActorActivationCompleted::BeforeDelete()
{
}

void FActorActivationRequested::AfterRead()
{
}

void FActorActivationRequested::BeforeDelete()
{
}

void FEventExposedToRainChanged::AfterRead()
{
}

void FEventExposedToRainChanged::BeforeDelete()
{
}

void FEventWithinRainZoneChanged::AfterRead()
{
}

void FEventWithinRainZoneChanged::BeforeDelete()
{
}

void FEventCustomizableActorChanged::AfterRead()
{
	READ_PTR_FULL(CustomizableActor, AActor);
}

void FEventCustomizableActorChanged::BeforeDelete()
{
	DELE_PTR_FULL(CustomizableActor);
}

void FEventShipExitedSafeZone::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipExitedSafeZone::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipEnteredSafeZone::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipEnteredSafeZone::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipExitedWater::AfterRead()
{
}

void FEventShipExitedWater::BeforeDelete()
{
}

void FEventShipEnteredWater::AfterRead()
{
}

void FEventShipEnteredWater::BeforeDelete()
{
}

void FEventShipSailedDistance::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipSailedDistance::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipWaterAddedOnOffEvent::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipWaterAddedOnOffEvent::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipSetSail::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipSetSail::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipBecameUseless::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipBecameUseless::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipDestroyed::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipBuilt::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipBuilt::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipCreated::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventShipCreated::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventShipRegionChanged::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
	READ_PTR_FULL(Actor, AActor);
}

void FEventShipRegionChanged::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Actor);
}

void FEventCurrentShipChanged::AfterRead()
{
	READ_PTR_FULL(CurrentShip, AActor);
}

void FEventCurrentShipChanged::BeforeDelete()
{
	DELE_PTR_FULL(CurrentShip);
}

void FLandmarkSoundPlayedEvent::AfterRead()
{
	READ_PTR_FULL(AudioEvent, UWwiseEvent);
}

void FLandmarkSoundPlayedEvent::BeforeDelete()
{
	DELE_PTR_FULL(AudioEvent);
}

void FPlayLandmarkReactionRPC::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(Landmark, ALandmark);
}

void FPlayLandmarkReactionRPC::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(Landmark);
}

void FLastCrewMemberEnteredTunnel::AfterRead()
{
}

void FLastCrewMemberEnteredTunnel::BeforeDelete()
{
}

void FEnterTunnelOfTheDamnedFadeComplete::AfterRead()
{
}

void FEnterTunnelOfTheDamnedFadeComplete::BeforeDelete()
{
}

void FExitTunnelOfTheDamnedActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(CameraAnim, UCameraAnim);
	READ_PTR_FULL(CameraBlendCurve, UCurveFloat);
}

void FExitTunnelOfTheDamnedActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(CameraAnim);
	DELE_PTR_FULL(CameraBlendCurve);
}

void FTunnelOfTheDamnedMigrationFailed::AfterRead()
{
}

void FTunnelOfTheDamnedMigrationFailed::BeforeDelete()
{
}

void FExpireCustomWreckEvent::AfterRead()
{
}

void FExpireCustomWreckEvent::BeforeDelete()
{
}

void FEventSkeletonFortDoorUnlocked::AfterRead()
{
}

void FEventSkeletonFortDoorUnlocked::BeforeDelete()
{
}

void FInteractingActorData::AfterRead()
{
}

void FInteractingActorData::BeforeDelete()
{
}

void FTimedDoorFinishedLoadingKeySequenceEvent::AfterRead()
{
}

void FTimedDoorFinishedLoadingKeySequenceEvent::BeforeDelete()
{
}

void FTimedDoorStartClosingEvent::AfterRead()
{
}

void FTimedDoorStartClosingEvent::BeforeDelete()
{
}

void FTimedDoorStartOpeningEvent::AfterRead()
{
}

void FTimedDoorStartOpeningEvent::BeforeDelete()
{
}

void FTimedDoorClosedEvent::AfterRead()
{
}

void FTimedDoorClosedEvent::BeforeDelete()
{
}

void FTimedDoorOpenedEvent::AfterRead()
{
}

void FTimedDoorOpenedEvent::BeforeDelete()
{
}

void FElevatorHeightCallback::AfterRead()
{
}

void FElevatorHeightCallback::BeforeDelete()
{
}

void FAshenLordNewHealthStageTelemetryEvent::AfterRead()
{
}

void FAshenLordNewHealthStageTelemetryEvent::BeforeDelete()
{
}

void FAshenWindSkullUseItemTelemetryEvent::AfterRead()
{
}

void FAshenWindSkullUseItemTelemetryEvent::BeforeDelete()
{
}

void FEventBellRung::AfterRead()
{
}

void FEventBellRung::BeforeDelete()
{
}

void FWorldMarkerDesc::AfterRead()
{
	READ_PTR_FULL(Marker, UBaseWorldMarker);
	READ_PTR_FULL(Variant, UClass);
}

void FWorldMarkerDesc::BeforeDelete()
{
	DELE_PTR_FULL(Marker);
	DELE_PTR_FULL(Variant);
}

void FCachedIslandStore::AfterRead()
{
}

void FCachedIslandStore::BeforeDelete()
{
}

void FEventItemsRetrieved::AfterRead()
{
}

void FEventItemsRetrieved::BeforeDelete()
{
}

void FAggressiveGhostShipPortalJumpedTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipPortalJumpedTelemetryEvent::BeforeDelete()
{
}

void FAggressiveGhostShipAnchorDropTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipAnchorDropTelemetryEvent::BeforeDelete()
{
}

void FAthenaAnimationCapstan::AfterRead()
{
	READ_PTR_FULL(ControlledObject, AActor);
}

void FAthenaAnimationCapstan::BeforeDelete()
{
	DELE_PTR_FULL(ControlledObject);
}

void FAthenaAnimationShopInteractionParams::AfterRead()
{
	READ_PTR_FULL(IntoAnimToPlay, UAnimSequence);
	READ_PTR_FULL(LoopAnimToPlay, UAnimSequence);
	READ_PTR_FULL(OutOfAnimToPlay, UAnimSequence);
}

void FAthenaAnimationShopInteractionParams::BeforeDelete()
{
	DELE_PTR_FULL(IntoAnimToPlay);
	DELE_PTR_FULL(LoopAnimToPlay);
	DELE_PTR_FULL(OutOfAnimToPlay);
}

void FFeatureToggledLevel::AfterRead()
{
}

void FFeatureToggledLevel::BeforeDelete()
{
}

void FHandOnWheelAnimationRanges::AfterRead()
{
}

void FHandOnWheelAnimationRanges::BeforeDelete()
{
}

void FWheelIKActivationRanges::AfterRead()
{
}

void FWheelIKActivationRanges::BeforeDelete()
{
}

void FAthenaAnimationWheel::AfterRead()
{
	READ_PTR_FULL(ControlledObject, AActor);
}

void FAthenaAnimationWheel::BeforeDelete()
{
	DELE_PTR_FULL(ControlledObject);
}

void FItemCategoryAIStrategyMovementPropertiesOverride::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FItemCategoryAIStrategyMovementPropertiesOverride::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FNetPositionErrorTolerance::AfterRead()
{
}

void FNetPositionErrorTolerance::BeforeDelete()
{
}

void FFeatureToggledLevels::AfterRead()
{
}

void FFeatureToggledLevels::BeforeDelete()
{
}

void FSubModeLevel::AfterRead()
{
}

void FSubModeLevel::BeforeDelete()
{
}

void FPlayModeLevelArray::AfterRead()
{
}

void FPlayModeLevelArray::BeforeDelete()
{
}

void FStorageContainerRefresher::AfterRead()
{
}

void FStorageContainerRefresher::BeforeDelete()
{
}

void FDebugReplicatedAbilityData::AfterRead()
{
	READ_PTR_FULL(TypeClass, UClass);
}

void FDebugReplicatedAbilityData::BeforeDelete()
{
	DELE_PTR_FULL(TypeClass);
}

void FDigEventFxParams::AfterRead()
{
	READ_PTR_FULL(Particles, UObject);
	READ_PTR_FULL(Rumble, UForceFeedbackEffect);
}

void FDigEventFxParams::BeforeDelete()
{
	DELE_PTR_FULL(Particles);
	DELE_PTR_FULL(Rumble);
}

void FDigSurfaceTypeParams::AfterRead()
{
}

void FDigSurfaceTypeParams::BeforeDelete()
{
}

void FSurfaceDigHole::AfterRead()
{
	READ_PTR_FULL(DigHoleClass, UClass);
}

void FSurfaceDigHole::BeforeDelete()
{
	DELE_PTR_FULL(DigHoleClass);
}

void FEncounterServiceEntry::AfterRead()
{
}

void FEncounterServiceEntry::BeforeDelete()
{
}

void FEncounterServiceParams::AfterRead()
{
}

void FEncounterServiceParams::BeforeDelete()
{
}

void FCrewServiceParams::AfterRead()
{
}

void FCrewServiceParams::BeforeDelete()
{
}

void FSurfaceDigType::AfterRead()
{
}

void FSurfaceDigType::BeforeDelete()
{
}

void FShovelSurfaceDigType::AfterRead()
{
}

void FShovelSurfaceDigType::BeforeDelete()
{
}

void FMermaidServiceMermaidSpawnParams::AfterRead()
{
}

void FMermaidServiceMermaidSpawnParams::BeforeDelete()
{
}

void FMakeFriendsEmoteParams::AfterRead()
{
}

void FMakeFriendsEmoteParams::BeforeDelete()
{
}

void FMermaidRespawnConfig::AfterRead()
{
}

void FMermaidRespawnConfig::BeforeDelete()
{
}

void FCharacterSocketCollisionServiceParams::AfterRead()
{
}

void FCharacterSocketCollisionServiceParams::BeforeDelete()
{
}

void FAthenaAICharacterParams::AfterRead()
{
}

void FAthenaAICharacterParams::BeforeDelete()
{
}

void FPlayerModerationParams::AfterRead()
{
}

void FPlayerModerationParams::BeforeDelete()
{
}

void FMerchantQuestRandomRequiredItemsEntry::AfterRead()
{
	READ_PTR_FULL(RequiredItem, UMerchantQuestItemData);
}

void FMerchantQuestRandomRequiredItemsEntry::BeforeDelete()
{
	DELE_PTR_FULL(RequiredItem);
}

void FMerchantQuestCategoryGroup::AfterRead()
{
}

void FMerchantQuestCategoryGroup::BeforeDelete()
{
}

void FChapterDataEntry::AfterRead()
{
	READ_PTR_FULL(PerChapterRewardAsset, UVoyageRewardDataAsset);
}

void FChapterDataEntry::BeforeDelete()
{
	DELE_PTR_FULL(PerChapterRewardAsset);
}

void FQuestSelectionParams::AfterRead()
{
}

void FQuestSelectionParams::BeforeDelete()
{
}

void FRiddleQuestParams::AfterRead()
{
	FQuestTypeParams::AfterRead();

	READ_PTR_FULL(BoobyTrapSpawnerDataAsset, UBoobyTrapSpawnerDataAsset);
}

void FRiddleQuestParams::BeforeDelete()
{
	FQuestTypeParams::BeforeDelete();

	DELE_PTR_FULL(BoobyTrapSpawnerDataAsset);
}

void FMerchantQuestCategoryGroupBounds::AfterRead()
{
}

void FMerchantQuestCategoryGroupBounds::BeforeDelete()
{
}

void FMatchmakingQuestParams::AfterRead()
{
}

void FMatchmakingQuestParams::BeforeDelete()
{
}

void FStagingQuestParams::AfterRead()
{
}

void FStagingQuestParams::BeforeDelete()
{
}

void FEmergantVoyageQuestParams::AfterRead()
{
}

void FEmergantVoyageQuestParams::BeforeDelete()
{
}

void FRewardQuestParams::AfterRead()
{
}

void FRewardQuestParams::BeforeDelete()
{
}

void FVoyageLocationFixedParams::AfterRead()
{
}

void FVoyageLocationFixedParams::BeforeDelete()
{
}

void FVoyageLocationDistance::AfterRead()
{
}

void FVoyageLocationDistance::BeforeDelete()
{
}

void FVoyageLocationRandomParams::AfterRead()
{
	READ_PTR_FULL(OnlyNamedIslandsListDataAsset, UVoyageLocationOnlyNamedIslandListDataAsset);
}

void FVoyageLocationRandomParams::BeforeDelete()
{
	DELE_PTR_FULL(OnlyNamedIslandsListDataAsset);
}

void FVoyageLocationParams::AfterRead()
{
}

void FVoyageLocationParams::BeforeDelete()
{
}

void FWeightedVoyageLocationParams::AfterRead()
{
}

void FWeightedVoyageLocationParams::BeforeDelete()
{
}

void FXMarksTheSpotQuestParams::AfterRead()
{
	FQuestTypeParams::AfterRead();

	READ_PTR_FULL(BoobyTrapSpawnerDataAsset, UBoobyTrapSpawnerDataAsset);
}

void FXMarksTheSpotQuestParams::BeforeDelete()
{
	FQuestTypeParams::BeforeDelete();

	DELE_PTR_FULL(BoobyTrapSpawnerDataAsset);
}

void FMerchantQuestParams::AfterRead()
{
	FQuestTypeParams::AfterRead();

	READ_PTR_FULL(RequiredItemsDataAsset, UMerchantQuestRequiredItemsDataAsset);
	READ_PTR_FULL(RandomRequiredItemsDataAsset, UMerchantQuestRandomRequiredItemsDataAsset);
}

void FMerchantQuestParams::BeforeDelete()
{
	FQuestTypeParams::BeforeDelete();

	DELE_PTR_FULL(RequiredItemsDataAsset);
	DELE_PTR_FULL(RandomRequiredItemsDataAsset);
}

void FQuestParams::AfterRead()
{
}

void FQuestParams::BeforeDelete()
{
}

void FWeightedQuestParams::AfterRead()
{
}

void FWeightedQuestParams::BeforeDelete()
{
}

void FQuestPoolParams::AfterRead()
{
}

void FQuestPoolParams::BeforeDelete()
{
}

void FQuestDistributionAllAtOnceParams::AfterRead()
{
}

void FQuestDistributionAllAtOnceParams::BeforeDelete()
{
}

void FQuestDistributionPerChapterParams::AfterRead()
{
}

void FQuestDistributionPerChapterParams::BeforeDelete()
{
}

void FQuestDistributionFixedChaptersParams::AfterRead()
{
}

void FQuestDistributionFixedChaptersParams::BeforeDelete()
{
}

void FQuestDistributionParams::AfterRead()
{
}

void FQuestDistributionParams::BeforeDelete()
{
}

void FVoyageRecipe::AfterRead()
{
}

void FVoyageRecipe::BeforeDelete()
{
}

void FWeightedContestZone::AfterRead()
{
}

void FWeightedContestZone::BeforeDelete()
{
}

void FContestTimerData::AfterRead()
{
}

void FContestTimerData::BeforeDelete()
{
}

void FContestZoneDistribution::AfterRead()
{
}

void FContestZoneDistribution::BeforeDelete()
{
}

void FEmergentContestVoyageRecipe::AfterRead()
{
	FVoyageRecipe::AfterRead();

}

void FEmergentContestVoyageRecipe::BeforeDelete()
{
	FVoyageRecipe::BeforeDelete();

}

void FChapterQuests::AfterRead()
{
}

void FChapterQuests::BeforeDelete()
{
}

void FFeatureToggledChapters::AfterRead()
{
}

void FFeatureToggledChapters::BeforeDelete()
{
}

void FShipCurseVFXTemplate::AfterRead()
{
	READ_PTR_FULL(ActorClass, UClass);
	READ_PTR_FULL(Template, UParticleSystem);
}

void FShipCurseVFXTemplate::BeforeDelete()
{
	DELE_PTR_FULL(ActorClass);
	DELE_PTR_FULL(Template);
}

void FShipCurseAudioLoop::AfterRead()
{
	READ_PTR_FULL(PlayLoop, UWwiseEvent);
	READ_PTR_FULL(StopLoop, UWwiseEvent);
	READ_PTR_FULL(PoolWrapper, UWwiseObjectPoolWrapper);
}

void FShipCurseAudioLoop::BeforeDelete()
{
	DELE_PTR_FULL(PlayLoop);
	DELE_PTR_FULL(StopLoop);
	DELE_PTR_FULL(PoolWrapper);
}

void FShipCurseFXData::AfterRead()
{
}

void FShipCurseFXData::BeforeDelete()
{
}

void FShipCurseSpawnedFXObject::AfterRead()
{
	READ_PTR_FULL(StopAudioLoopEvent, UWwiseEvent);
}

void FShipCurseSpawnedFXObject::BeforeDelete()
{
	DELE_PTR_FULL(StopAudioLoopEvent);
}

void FSinkingShipParams::AfterRead()
{
}

void FSinkingShipParams::BeforeDelete()
{
}

void FAthenaAnimationRowboatParams::AfterRead()
{
}

void FAthenaAnimationRowboatParams::BeforeDelete()
{
}

void FAthenaAnimationFishingParams::AfterRead()
{
}

void FAthenaAnimationFishingParams::BeforeDelete()
{
}

void FAthenaAnimationDeathData::AfterRead()
{
}

void FAthenaAnimationDeathData::BeforeDelete()
{
}

void FAthenaAnimationDeath::AfterRead()
{
	READ_PTR_FULL(DeathDataAsset, UAthenaAnimationDeathDataAsset);
}

void FAthenaAnimationDeath::BeforeDelete()
{
	DELE_PTR_FULL(DeathDataAsset);
}

void FAthenaAnimationSkeletonEmoteActionParams::AfterRead()
{
	READ_PTR_FULL(TauntAnimation, UAnimSequence);
	READ_PTR_FULL(CheerAnimation, UAnimSequence);
	READ_PTR_FULL(TauntAnimationB, UAnimSequence);
	READ_PTR_FULL(CheerAnimationB, UAnimSequence);
}

void FAthenaAnimationSkeletonEmoteActionParams::BeforeDelete()
{
	DELE_PTR_FULL(TauntAnimation);
	DELE_PTR_FULL(CheerAnimation);
	DELE_PTR_FULL(TauntAnimationB);
	DELE_PTR_FULL(CheerAnimationB);
}

void FAthenaAnimationAI::AfterRead()
{
	READ_PTR_FULL(AISpawn, UAnimSequence);
	READ_PTR_FULL(AIDespawn, UAnimSequence);
}

void FAthenaAnimationAI::BeforeDelete()
{
	DELE_PTR_FULL(AISpawn);
	DELE_PTR_FULL(AIDespawn);
}

void FBountyMapContents::AfterRead()
{
}

void FBountyMapContents::BeforeDelete()
{
}

void FAthenaAnimationLoadObjectByID::AfterRead()
{
	READ_PTR_FULL(CharacterType, UClass);
	READ_PTR_FULL(DestinationStruct, UScriptStruct);
}

void FAthenaAnimationLoadObjectByID::BeforeDelete()
{
	DELE_PTR_FULL(CharacterType);
	DELE_PTR_FULL(DestinationStruct);
}

void FAthenaAnimationLadder::AfterRead()
{
}

void FAthenaAnimationLadder::BeforeDelete()
{
}

void FShipActiveCurseFXData::AfterRead()
{
}

void FShipActiveCurseFXData::BeforeDelete()
{
}

void FTQStructGenSelection::AfterRead()
{
	READ_PTR_FULL(TaleQuestDesc, UTaleQuestDescAsset);
	READ_PTR_FULL(LocationData, UPLQuestLocationDataAsset);
}

void FTQStructGenSelection::BeforeDelete()
{
	DELE_PTR_FULL(TaleQuestDesc);
	DELE_PTR_FULL(LocationData);
}

void FQuestVarLocationData::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVarLocationData::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVarTaleQuest::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVarTaleQuest::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableBool::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableBool::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FOpenForListEntry::AfterRead()
{
	READ_PTR_FULL(Pawn, APawn);
}

void FOpenForListEntry::BeforeDelete()
{
	DELE_PTR_FULL(Pawn);
}

void FGlintVisibilityLock::AfterRead()
{
}

void FGlintVisibilityLock::BeforeDelete()
{
}

void FQuestVariablePageBundle::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariablePageBundle::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FCannonAISpawnerZone::AfterRead()
{
}

void FCannonAISpawnerZone::BeforeDelete()
{
}

void FCannonAILocation::AfterRead()
{
}

void FCannonAILocation::BeforeDelete()
{
}

void FRequiredShipCustomizationData::AfterRead()
{
}

void FRequiredShipCustomizationData::BeforeDelete()
{
}

void FItemLoadoutSlot::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FItemLoadoutSlot::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FItemLoadoutComponentSlots::AfterRead()
{
}

void FItemLoadoutComponentSlots::BeforeDelete()
{
}

void FItemPreviewView::AfterRead()
{
	READ_PTR_FULL(Anim, UAnimationAsset);
}

void FItemPreviewView::BeforeDelete()
{
	DELE_PTR_FULL(Anim);
}

void FCategoryPreviewEntry::AfterRead()
{
	READ_PTR_FULL(PreviewCategory, UClass);
	READ_PTR_FULL(ItemCategoryClass, UClass);
	READ_PTR_FULL(PreviewClassType, UClass);
}

void FCategoryPreviewEntry::BeforeDelete()
{
	DELE_PTR_FULL(PreviewCategory);
	DELE_PTR_FULL(ItemCategoryClass);
	DELE_PTR_FULL(PreviewClassType);
}

void FExplosionForceFeedbackInfo::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(Effect, UForceFeedbackEffect);
	READ_PTR_FULL(EffectLower, UForceFeedbackEffect);
}

void FExplosionForceFeedbackInfo::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(Effect);
	DELE_PTR_FULL(EffectLower);
}

void FProcessableActions::AfterRead()
{
}

void FProcessableActions::BeforeDelete()
{
}

void FKrakenAnimatedTentacleCollisionSegment::AfterRead()
{
	READ_PTR_FULL(Capsule, UCapsuleComponent);
}

void FKrakenAnimatedTentacleCollisionSegment::BeforeDelete()
{
	DELE_PTR_FULL(Capsule);
}

void FKrakenAnimatedTentacleHeldTargetVomittingChance::AfterRead()
{
	READ_PTR_FULL(CurrentState, UClass);
}

void FKrakenAnimatedTentacleHeldTargetVomittingChance::BeforeDelete()
{
	DELE_PTR_FULL(CurrentState);
}

void FKrakenAnimatedTentacleWaterTriggerableFX::AfterRead()
{
	READ_PTR_FULL(State, UClass);
	READ_PTR_FULL(FirstPersonTargetVFX, UObject);
	READ_PTR_FULL(ThirdPersonTargetVFX, UObject);
	READ_PTR_FULL(AboveWaterVFX, UObject);
	READ_PTR_FULL(BelowWaterVFX, UObject);
}

void FKrakenAnimatedTentacleWaterTriggerableFX::BeforeDelete()
{
	DELE_PTR_FULL(State);
	DELE_PTR_FULL(FirstPersonTargetVFX);
	DELE_PTR_FULL(ThirdPersonTargetVFX);
	DELE_PTR_FULL(AboveWaterVFX);
	DELE_PTR_FULL(BelowWaterVFX);
}

void FVomitVFXObject::AfterRead()
{
	READ_PTR_FULL(FirstPerson, UObject);
	READ_PTR_FULL(ThirdPerson, UObject);
}

void FVomitVFXObject::BeforeDelete()
{
	DELE_PTR_FULL(FirstPerson);
	DELE_PTR_FULL(ThirdPerson);
}

void FVomitVFX::AfterRead()
{
	READ_PTR_FULL(Component1st, UParticleSystemComponent);
	READ_PTR_FULL(Component3rd, UParticleSystemComponent);
	READ_PTR_FULL(Controller, AController);
}

void FVomitVFX::BeforeDelete()
{
	DELE_PTR_FULL(Component1st);
	DELE_PTR_FULL(Component3rd);
	DELE_PTR_FULL(Controller);
}

void FVomitSFX::AfterRead()
{
	READ_PTR_FULL(VomitSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(VomitSfxEvent, UWwiseEvent);
	READ_PTR_FULL(VomitInBucketSfxEvent, UWwiseEvent);
}

void FVomitSFX::BeforeDelete()
{
	DELE_PTR_FULL(VomitSfxPool);
	DELE_PTR_FULL(VomitSfxEvent);
	DELE_PTR_FULL(VomitInBucketSfxEvent);
}

void FVomitScreenFX::AfterRead()
{
}

void FVomitScreenFX::BeforeDelete()
{
}

void FVomitProjectiles::AfterRead()
{
	READ_PTR_FULL(VomitProjectileClass, UClass);
}

void FVomitProjectiles::BeforeDelete()
{
	DELE_PTR_FULL(VomitProjectileClass);
}

void FVoyageGeneratorSimBlackboard::AfterRead()
{
}

void FVoyageGeneratorSimBlackboard::BeforeDelete()
{
}

void FAttackTimingWindow::AfterRead()
{
}

void FAttackTimingWindow::BeforeDelete()
{
}

void FStunAttackerOnHitSurfacePair::AfterRead()
{
	READ_PTR_FULL(PhysMaterial, UPhysicalMaterial);
}

void FStunAttackerOnHitSurfacePair::BeforeDelete()
{
	DELE_PTR_FULL(PhysMaterial);
}

void FAllianceNotificationData::AfterRead()
{
	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FAllianceNotificationData::BeforeDelete()
{
	DELE_PTR_FULL(PopUpDesc);
}

void FAlliancePennantData::AfterRead()
{
	READ_PTR_FULL(MapFlagIcon, UTexture);
}

void FAlliancePennantData::BeforeDelete()
{
	DELE_PTR_FULL(MapFlagIcon);
}

void FShipSizePartCustomizationNameData::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
}

void FShipSizePartCustomizationNameData::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
}

void FAtmosphericPressureZoneParametersAndLocation::AfterRead()
{
}

void FAtmosphericPressureZoneParametersAndLocation::BeforeDelete()
{
}

void FGameEventSettings::AfterRead()
{
	READ_PTR_FULL(GameEventType, UClass);
}

void FGameEventSettings::BeforeDelete()
{
	DELE_PTR_FULL(GameEventType);
}

void FGameEventCount::AfterRead()
{
	READ_PTR_FULL(GameEventType, UClass);
}

void FGameEventCount::BeforeDelete()
{
	DELE_PTR_FULL(GameEventType);
}

void FGameEventWeightedList::AfterRead()
{
}

void FGameEventWeightedList::BeforeDelete()
{
}

void FGameEventSchedulerConfiguration::AfterRead()
{
}

void FGameEventSchedulerConfiguration::BeforeDelete()
{
}

void FSpawnerTypeMappings::AfterRead()
{
}

void FSpawnerTypeMappings::BeforeDelete()
{
}

void FIslandItemSpawnLocationData::AfterRead()
{
}

void FIslandItemSpawnLocationData::BeforeDelete()
{
}

void FTypedIslandItemSpawnLocationData::AfterRead()
{
	READ_PTR_FULL(LocationType, UClass);
}

void FTypedIslandItemSpawnLocationData::BeforeDelete()
{
	DELE_PTR_FULL(LocationType);
}

void FMechanismMaterialOverride::AfterRead()
{
	READ_PTR_FULL(Group, UClass);
}

void FMechanismMaterialOverride::BeforeDelete()
{
	DELE_PTR_FULL(Group);
}

void FMechanismMaterialMapEntry::AfterRead()
{
}

void FMechanismMaterialMapEntry::BeforeDelete()
{
}

void FAnimatedMaterialData::AfterRead()
{
	READ_PTR_FULL(InCurve, UCurveFloat);
	READ_PTR_FULL(OutCurve, UCurveFloat);
	READ_PTR_FULL(CurrentBlendCurve, UCurveFloat);
}

void FAnimatedMaterialData::BeforeDelete()
{
	DELE_PTR_FULL(InCurve);
	DELE_PTR_FULL(OutCurve);
	DELE_PTR_FULL(CurrentBlendCurve);
}

void FFlamethrowerCollisionsParams::AfterRead()
{
	READ_PTR_FULL(FlamePointsTravelCurve, UCurveFloat);
}

void FFlamethrowerCollisionsParams::BeforeDelete()
{
	DELE_PTR_FULL(FlamePointsTravelCurve);
}

void FDebugFishSelectionSize::AfterRead()
{
	READ_PTR_FULL(FishClass, UClass);
}

void FDebugFishSelectionSize::BeforeDelete()
{
	DELE_PTR_FULL(FishClass);
}

void FDebugFishSelectionColour::AfterRead()
{
}

void FDebugFishSelectionColour::BeforeDelete()
{
}

void FDebugFishSelectionBreed::AfterRead()
{
}

void FDebugFishSelectionBreed::BeforeDelete()
{
}

void FCrewScoreAppendedEvent::AfterRead()
{
}

void FCrewScoreAppendedEvent::BeforeDelete()
{
}

void FCrewScoredEvent::AfterRead()
{
}

void FCrewScoredEvent::BeforeDelete()
{
}

void FCrewWinEvent::AfterRead()
{
}

void FCrewWinEvent::BeforeDelete()
{
}

void FRequestSilverEvent::AfterRead()
{
	READ_PTR_FULL(WieldableItemSold, AWieldableItem);
}

void FRequestSilverEvent::BeforeDelete()
{
	DELE_PTR_FULL(WieldableItemSold);
}

void FNonVerbalRadialSlot::AfterRead()
{
}

void FNonVerbalRadialSlot::BeforeDelete()
{
}

void FSetNonVerbalOptionWithImages::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FSetNonVerbalOptionWithImages::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FSetNonVerbalOption::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FSetNonVerbalOption::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FKrakenAnimatedTentacleHoldingStateTransitionChance::AfterRead()
{
	READ_PTR_FULL(StateToTransitionTo, UClass);
}

void FKrakenAnimatedTentacleHoldingStateTransitionChance::BeforeDelete()
{
	DELE_PTR_FULL(StateToTransitionTo);
}

void FLightingZoneDistances::AfterRead()
{
}

void FLightingZoneDistances::BeforeDelete()
{
}

void FClientStartCrewMatchmakingTelemetryEvent::AfterRead()
{
}

void FClientStartCrewMatchmakingTelemetryEvent::BeforeDelete()
{
}

void FClientStartLobbyTelemetryEvent::AfterRead()
{
}

void FClientStartLobbyTelemetryEvent::BeforeDelete()
{
}

void FClientStartSessionSelectionTelemetryEvent::AfterRead()
{
}

void FClientStartSessionSelectionTelemetryEvent::BeforeDelete()
{
}

void FClientStartPirateSelectionTelemetryEvent::AfterRead()
{
}

void FClientStartPirateSelectionTelemetryEvent::BeforeDelete()
{
}

void FWaitForLoadingScreenTelemetryEvent::AfterRead()
{
}

void FWaitForLoadingScreenTelemetryEvent::BeforeDelete()
{
}

void FClientProfileLogInTelemetryEvent::AfterRead()
{
}

void FClientProfileLogInTelemetryEvent::BeforeDelete()
{
}

void FBootFlowNetworkErrorTelemetryEvent::AfterRead()
{
}

void FBootFlowNetworkErrorTelemetryEvent::BeforeDelete()
{
}

void FPopUpQueueServicePausedTelemetryEvent::AfterRead()
{
}

void FPopUpQueueServicePausedTelemetryEvent::BeforeDelete()
{
}

void FUIPremiumStoreItemInteractTelemetryEvent::AfterRead()
{
}

void FUIPremiumStoreItemInteractTelemetryEvent::BeforeDelete()
{
}

void FUIPremiumStorePanelHighlightTelemetryEvent::AfterRead()
{
}

void FUIPremiumStorePanelHighlightTelemetryEvent::BeforeDelete()
{
}

void FUIPremiumStorePageTransitionTelemetryEvent::AfterRead()
{
}

void FUIPremiumStorePageTransitionTelemetryEvent::BeforeDelete()
{
}

void FUIPremiumStoreOpenTelemetryEvent::AfterRead()
{
}

void FUIPremiumStoreOpenTelemetryEvent::BeforeDelete()
{
}

void FTutorialHideFootstepEvent::AfterRead()
{
}

void FTutorialHideFootstepEvent::BeforeDelete()
{
}

void FTutorialShowFootstepEvent::AfterRead()
{
}

void FTutorialShowFootstepEvent::BeforeDelete()
{
}

void FTutorialDialogOptionSelectEvent::AfterRead()
{
}

void FTutorialDialogOptionSelectEvent::BeforeDelete()
{
}

void FTutorialDialogEvent::AfterRead()
{
}

void FTutorialDialogEvent::BeforeDelete()
{
}

void FPostSellTutorialItem::AfterRead()
{
}

void FPostSellTutorialItem::BeforeDelete()
{
}

void FPreSellTutorialItem::AfterRead()
{
	READ_PTR_FULL(SpawnedItem, AItemInfo);
}

void FPreSellTutorialItem::BeforeDelete()
{
	DELE_PTR_FULL(SpawnedItem);
}

void FTutorialDisplayedMermaidNotificationTelemetryEvent::AfterRead()
{
}

void FTutorialDisplayedMermaidNotificationTelemetryEvent::BeforeDelete()
{
}

void FTutorialResetMysteriousStrangersEvent::AfterRead()
{
}

void FTutorialResetMysteriousStrangersEvent::BeforeDelete()
{
}

void FTutorialLegendaryTavernStrangerPlaySummonSFXEvent::AfterRead()
{
}

void FTutorialLegendaryTavernStrangerPlaySummonSFXEvent::BeforeDelete()
{
}

void FTutorialStepExitedEvent::AfterRead()
{
}

void FTutorialStepExitedEvent::BeforeDelete()
{
}

void FTutorialStepEnteredEvent::AfterRead()
{
}

void FTutorialStepEnteredEvent::BeforeDelete()
{
}

void FStartGameNarrative::AfterRead()
{
}

void FStartGameNarrative::BeforeDelete()
{
}

void FPioneerObjectiveCompleteEvent::AfterRead()
{
}

void FPioneerObjectiveCompleteEvent::BeforeDelete()
{
}

void FPlayerModerationReportablePlayers::AfterRead()
{
}

void FPlayerModerationReportablePlayers::BeforeDelete()
{
}

void FSessionCreationCrewResponseModel::AfterRead()
{
}

void FSessionCreationCrewResponseModel::BeforeDelete()
{
}

void FSessionCreationResponseModel::AfterRead()
{
}

void FSessionCreationResponseModel::BeforeDelete()
{
}

void FEventCharacterFootEnterWater::AfterRead()
{
}

void FEventCharacterFootEnterWater::BeforeDelete()
{
}

void FModalInteractionActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FModalInteractionActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FModalInteractionActionStateSerialisableData::AfterRead()
{
	FActionStateSerialisableData::AfterRead();

}

void FModalInteractionActionStateSerialisableData::BeforeDelete()
{
	FActionStateSerialisableData::BeforeDelete();

}

void FCrewSnapshot::AfterRead()
{
}

void FCrewSnapshot::BeforeDelete()
{
}

void FShipSnapshot::AfterRead()
{
}

void FShipSnapshot::BeforeDelete()
{
}

void FWorldSnapshot::AfterRead()
{
}

void FWorldSnapshot::BeforeDelete()
{
}

void FShipTrackerSnapshot::AfterRead()
{
}

void FShipTrackerSnapshot::BeforeDelete()
{
}

void FCommandData::AfterRead()
{
}

void FCommandData::BeforeDelete()
{
}

void FEnableSkeletonSpawnerData::AfterRead()
{
}

void FEnableSkeletonSpawnerData::BeforeDelete()
{
}

void FRemoveTriggerData::AfterRead()
{
}

void FRemoveTriggerData::BeforeDelete()
{
}

void FCreateSphereTriggerData::AfterRead()
{
}

void FCreateSphereTriggerData::BeforeDelete()
{
}

void FCreateBoxTriggerData::AfterRead()
{
}

void FCreateBoxTriggerData::BeforeDelete()
{
}

void FRemoveWorldEventData::AfterRead()
{
}

void FRemoveWorldEventData::BeforeDelete()
{
}

void FAddWorldEventData::AfterRead()
{
}

void FAddWorldEventData::BeforeDelete()
{
}

void FEnableDefaultGameEventSchedulerData::AfterRead()
{
}

void FEnableDefaultGameEventSchedulerData::BeforeDelete()
{
}

void FAdvanceGameEventSchedulerData::AfterRead()
{
}

void FAdvanceGameEventSchedulerData::BeforeDelete()
{
}

void FLoadShipsCannonsData::AfterRead()
{
}

void FLoadShipsCannonsData::BeforeDelete()
{
}

void FAddItemToShipsData::AfterRead()
{
}

void FAddItemToShipsData::BeforeDelete()
{
}

void FAimSensitivityRuntimeDataEntry::AfterRead()
{
}

void FAimSensitivityRuntimeDataEntry::BeforeDelete()
{
}

void FAimSensitivityRuntimeData::AfterRead()
{
}

void FAimSensitivityRuntimeData::BeforeDelete()
{
}

void FTriggerPlaceableReactionEvent::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(PlaceableReaction, APlaceableReaction);
}

void FTriggerPlaceableReactionEvent::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(PlaceableReaction);
}

void FEventLocalPlayerExitedIslandDanger::AfterRead()
{
}

void FEventLocalPlayerExitedIslandDanger::BeforeDelete()
{
}

void FEventLocalPlayerEnteredIslandDanger::AfterRead()
{
}

void FEventLocalPlayerEnteredIslandDanger::BeforeDelete()
{
}

void FMatineeActorSetPositionNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(MatineeActor, AMatineeActor);
}

void FMatineeActorSetPositionNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(MatineeActor);
}

void FMatineeActorStopNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(MatineeActor, AMatineeActor);
}

void FMatineeActorStopNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(MatineeActor);
}

void FMatineeActorPlayNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(MatineeActor, AMatineeActor);
}

void FMatineeActorPlayNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(MatineeActor);
}

void FPlayerRadialChatTelemetryEvent::AfterRead()
{
}

void FPlayerRadialChatTelemetryEvent::BeforeDelete()
{
}

void FAchievementRemoteServiceLogTelemetry::AfterRead()
{
}

void FAchievementRemoteServiceLogTelemetry::BeforeDelete()
{
}

void FAchievementUnlockedEvent::AfterRead()
{
}

void FAchievementUnlockedEvent::BeforeDelete()
{
}

void FAchievementUnlockedMessage::AfterRead()
{
}

void FAchievementUnlockedMessage::BeforeDelete()
{
}

void FDeveloperTelemetryPayload::AfterRead()
{
}

void FDeveloperTelemetryPayload::BeforeDelete()
{
}

void FPlayerDeveloperTelemetryEvent::AfterRead()
{
	FDeveloperTelemetryPayload::AfterRead();

}

void FPlayerDeveloperTelemetryEvent::BeforeDelete()
{
	FDeveloperTelemetryPayload::BeforeDelete();

}

void FClientInputBlockedTelemetryEvent::AfterRead()
{
}

void FClientInputBlockedTelemetryEvent::BeforeDelete()
{
}

void FContestTavernStagingTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FContestTavernStagingTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FContestTavernStagingTelemetryFragment::AfterRead()
{
}

void FContestTavernStagingTelemetryFragment::BeforeDelete()
{
}

void FServerContestScoreUpdateTelemetryEvent::AfterRead()
{
}

void FServerContestScoreUpdateTelemetryEvent::BeforeDelete()
{
}

void FServerDeniedClientAtPreLoginTelemetryEvent::AfterRead()
{
}

void FServerDeniedClientAtPreLoginTelemetryEvent::BeforeDelete()
{
}

void FFireTelemetryInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FFireTelemetryInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FFireTelemetryFragment::AfterRead()
{
}

void FFireTelemetryFragment::BeforeDelete()
{
}

void FClientMemoryReportSentTelemetryEvent::AfterRead()
{
}

void FClientMemoryReportSentTelemetryEvent::BeforeDelete()
{
}

void FClientOutOfMemoryTelemetryEvent::AfterRead()
{
}

void FClientOutOfMemoryTelemetryEvent::BeforeDelete()
{
}

void FClientPanicGarbageCollectionTelemetryEvent::AfterRead()
{
}

void FClientPanicGarbageCollectionTelemetryEvent::BeforeDelete()
{
}

void FClientHighMemoryPerformanceTelemetryEvent::AfterRead()
{
}

void FClientHighMemoryPerformanceTelemetryEvent::BeforeDelete()
{
}

void FClientPerformanceTelemetryEvent::AfterRead()
{
}

void FClientPerformanceTelemetryEvent::BeforeDelete()
{
}

void FServerPerformanceTelemetryEvent::AfterRead()
{
}

void FServerPerformanceTelemetryEvent::BeforeDelete()
{
}

void FVoiceChatStatusTelemetryEvent::AfterRead()
{
}

void FVoiceChatStatusTelemetryEvent::BeforeDelete()
{
}

void FGraphicalSettingsTelemetryEvent::AfterRead()
{
}

void FGraphicalSettingsTelemetryEvent::BeforeDelete()
{
}

void FStreamingTelemetryBaseEvent::AfterRead()
{
}

void FStreamingTelemetryBaseEvent::BeforeDelete()
{
}

void FLevelCancelCompletedTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelCancelCompletedTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FLevelCancelRequestedTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelCancelRequestedTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FLevelUnloadCompletedTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelUnloadCompletedTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FLevelUnloadRequestedTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelUnloadRequestedTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FLevelMadeHiddenTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelMadeHiddenTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FLevelLoadCompletedTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelLoadCompletedTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FLevelMadeVisibleTelemetryEvent::AfterRead()
{
	FLevelLoadCompletedTelemetryEvent::AfterRead();

}

void FLevelMadeVisibleTelemetryEvent::BeforeDelete()
{
	FLevelLoadCompletedTelemetryEvent::BeforeDelete();

}

void FLevelLoadRequestedTelemetryEvent::AfterRead()
{
	FStreamingTelemetryBaseEvent::AfterRead();

}

void FLevelLoadRequestedTelemetryEvent::BeforeDelete()
{
	FStreamingTelemetryBaseEvent::BeforeDelete();

}

void FStreamingTelemetryConfigurationSettings::AfterRead()
{
}

void FStreamingTelemetryConfigurationSettings::BeforeDelete()
{
}

void FUserSettingsTelemetryEvent::AfterRead()
{
}

void FUserSettingsTelemetryEvent::BeforeDelete()
{
}

void FEventTestControlStateEnd::AfterRead()
{
}

void FEventTestControlStateEnd::BeforeDelete()
{
}

void FEventTestControlStateFullyDocked::AfterRead()
{
}

void FEventTestControlStateFullyDocked::BeforeDelete()
{
}

void FEventTestControlStateStart::AfterRead()
{
}

void FEventTestControlStateStart::BeforeDelete()
{
}

void FEventTestControlStateUpdate::AfterRead()
{
}

void FEventTestControlStateUpdate::BeforeDelete()
{
}

void FTestControlObjectActionStateConstructionInfo::AfterRead()
{
	FControlObjectActionStateConstructionInfo::AfterRead();

}

void FTestControlObjectActionStateConstructionInfo::BeforeDelete()
{
	FControlObjectActionStateConstructionInfo::BeforeDelete();

}

void FTestNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FTestNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FPrepareInstantFireRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(Weapon, ATestProjectileWeapon);
}

void FPrepareInstantFireRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(Weapon);
}

void FRenderToTextureTestReadyEvent::AfterRead()
{
}

void FRenderToTextureTestReadyEvent::BeforeDelete()
{
}

void FRenderToTextureTestStringEvent::AfterRead()
{
}

void FRenderToTextureTestStringEvent::BeforeDelete()
{
}

void FRenderToTextureTestChangeEvent::AfterRead()
{
	READ_PTR_FULL(Object, AActor);
}

void FRenderToTextureTestChangeEvent::BeforeDelete()
{
	DELE_PTR_FULL(Object);
}

void FTestTelemetryEventWithPlayerItemUsageFragment::AfterRead()
{
}

void FTestTelemetryEventWithPlayerItemUsageFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithPlayerActionFragment::AfterRead()
{
}

void FTestTelemetryEventWithPlayerActionFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithObjectUsageFragment::AfterRead()
{
}

void FTestTelemetryEventWithObjectUsageFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithPlayerBaseFragment::AfterRead()
{
}

void FTestTelemetryEventWithPlayerBaseFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithRPCFragment::AfterRead()
{
}

void FTestTelemetryEventWithRPCFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithServerTenancyFragment::AfterRead()
{
}

void FTestTelemetryEventWithServerTenancyFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithServerFragment::AfterRead()
{
}

void FTestTelemetryEventWithServerFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithBaseFragment::AfterRead()
{
}

void FTestTelemetryEventWithBaseFragment::BeforeDelete()
{
}

void FTestTelemetryEventWithIntAndTestFragment::AfterRead()
{
}

void FTestTelemetryEventWithIntAndTestFragment::BeforeDelete()
{
}

void FTestTelemetryFragmentWithInt::AfterRead()
{
}

void FTestTelemetryFragmentWithInt::BeforeDelete()
{
}

void FTestTelemetryJsonSchemaWriterStructWithTwoFragments::AfterRead()
{
}

void FTestTelemetryJsonSchemaWriterStructWithTwoFragments::BeforeDelete()
{
}

void FTestTelemetryInheritanceBaseStruct::AfterRead()
{
}

void FTestTelemetryInheritanceBaseStruct::BeforeDelete()
{
}

void FTestTelemetryInheritanceLevel1Struct::AfterRead()
{
	FTestTelemetryInheritanceBaseStruct::AfterRead();

}

void FTestTelemetryInheritanceLevel1Struct::BeforeDelete()
{
	FTestTelemetryInheritanceBaseStruct::BeforeDelete();

}

void FTestTelemetryJsonSchemaWriterStructWithBaseFragment::AfterRead()
{
}

void FTestTelemetryJsonSchemaWriterStructWithBaseFragment::BeforeDelete()
{
}

void FTestTelemetryJsonSchemaWriterNestedStruct::AfterRead()
{
}

void FTestTelemetryJsonSchemaWriterNestedStruct::BeforeDelete()
{
}

void FTestTelemetryJsonSchemaWriterStruct::AfterRead()
{
}

void FTestTelemetryJsonSchemaWriterStruct::BeforeDelete()
{
}

void FFinishIntroAnimaticTutorialStepRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(TutorialComponent, UAthenaTutorialComponent);
}

void FFinishIntroAnimaticTutorialStepRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(TutorialComponent);
}

void FCinematicEmissaryEvent::AfterRead()
{
}

void FCinematicEmissaryEvent::BeforeDelete()
{
}

void FCinematicEmissaryNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FCinematicEmissaryNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FFrontendCrewMember::AfterRead()
{
}

void FFrontendCrewMember::BeforeDelete()
{
}

void FSeasonGoalProgressionMessage::AfterRead()
{
}

void FSeasonGoalProgressionMessage::BeforeDelete()
{
}

void FSeasonTierInfo::AfterRead()
{
}

void FSeasonTierInfo::BeforeDelete()
{
}

void FSeasonGoalInfo::AfterRead()
{
}

void FSeasonGoalInfo::BeforeDelete()
{
}

void FPointLightTemplate::AfterRead()
{
	FBaseLightTemplate::AfterRead();

}

void FPointLightTemplate::BeforeDelete()
{
	FBaseLightTemplate::BeforeDelete();

}

void FSpotLightData::AfterRead()
{
}

void FSpotLightData::BeforeDelete()
{
}

void FSpotLightTemplate::AfterRead()
{
	FPointLightTemplate::AfterRead();

}

void FSpotLightTemplate::BeforeDelete()
{
	FPointLightTemplate::BeforeDelete();

}

void FTrackedActorTelemetryFragment::AfterRead()
{
}

void FTrackedActorTelemetryFragment::BeforeDelete()
{
}

void FBuoyancyStateChanged::AfterRead()
{
}

void FBuoyancyStateChanged::BeforeDelete()
{
}

void FEventBuoyantSpawnedObjectOwnershipTransferred::AfterRead()
{
}

void FEventBuoyantSpawnedObjectOwnershipTransferred::BeforeDelete()
{
}

void FLoginTokenServiceResultEvent::AfterRead()
{
}

void FLoginTokenServiceResultEvent::BeforeDelete()
{
}

void FLoginTokenServiceRequestTokenEvent::AfterRead()
{
}

void FLoginTokenServiceRequestTokenEvent::BeforeDelete()
{
}

void FTunnelsOfTheDamnedMigrationDataHolder::AfterRead()
{
}

void FTunnelsOfTheDamnedMigrationDataHolder::BeforeDelete()
{
}

void FMigrationRequestedAutomationEvent::AfterRead()
{
	READ_PTR_FULL(MigrationStep, UWaitForTunnelOfTheDamnedMigrationTaleQuestStep);
}

void FMigrationRequestedAutomationEvent::BeforeDelete()
{
	DELE_PTR_FULL(MigrationStep);
}

void FWreckSpawnBlockingData::AfterRead()
{
}

void FWreckSpawnBlockingData::BeforeDelete()
{
}

void FAggressiveGhostShipDroppedMineTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipDroppedMineTelemetryEvent::BeforeDelete()
{
}

void FAggressiveGhostShipProjectileCollidedTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipProjectileCollidedTelemetryEvent::BeforeDelete()
{
}

void FAggressiveGhostShipProjectileShotTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipProjectileShotTelemetryEvent::BeforeDelete()
{
}

void FAggressiveGhostShipDespawnTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipDespawnTelemetryEvent::BeforeDelete()
{
}

void FAggressiveGhostShipSpawnTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipSpawnTelemetryEvent::BeforeDelete()
{
}

void FAggressiveGhostShipEncounterEndTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipEncounterEndTelemetryEvent::BeforeDelete()
{
}

void FContestCeremonyEvent::AfterRead()
{
}

void FContestCeremonyEvent::BeforeDelete()
{
}

void FContestEventSet::AfterRead()
{
}

void FContestEventSet::BeforeDelete()
{
}

void FShipLiveryCatalogue::AfterRead()
{
}

void FShipLiveryCatalogue::BeforeDelete()
{
}

void FCrew::AfterRead()
{
}

void FCrew::BeforeDelete()
{
}

void FTimedContestEventAction::AfterRead()
{
}

void FTimedContestEventAction::BeforeDelete()
{
}

void FShipIdentityOwnership::AfterRead()
{
}

void FShipIdentityOwnership::BeforeDelete()
{
}

void FDebugCrewContestInfo::AfterRead()
{
}

void FDebugCrewContestInfo::BeforeDelete()
{
}

void FScoreRewardValueData::AfterRead()
{
}

void FScoreRewardValueData::BeforeDelete()
{
}

void FScoreReasonIcons::AfterRead()
{
	READ_PTR_FULL(ScoreScrollScoringIcon, UTexture);
}

void FScoreReasonIcons::BeforeDelete()
{
	DELE_PTR_FULL(ScoreScrollScoringIcon);
}

void FLightingControllerTransformParams::AfterRead()
{
}

void FLightingControllerTransformParams::BeforeDelete()
{
}

void FLightningStrikeFrequency::AfterRead()
{
}

void FLightningStrikeFrequency::BeforeDelete()
{
}

void FMeleeAttackHitResponseData::AfterRead()
{
	READ_PTR_FULL(AttackingCharacter, APawn);
	READ_PTR_FULL(AttackData, UMeleeAttackDataAsset);
}

void FMeleeAttackHitResponseData::BeforeDelete()
{
	DELE_PTR_FULL(AttackingCharacter);
	DELE_PTR_FULL(AttackData);
}

void FPremiumShopBundleOfferItem::AfterRead()
{
	READ_PTR_FULL(Offer, UCatalogOfferDataAsset);
}

void FPremiumShopBundleOfferItem::BeforeDelete()
{
	DELE_PTR_FULL(Offer);
}

void FPremiumShopOfferItem::AfterRead()
{
	READ_PTR_FULL(Offer, UCatalogOfferDataAsset);
}

void FPremiumShopOfferItem::BeforeDelete()
{
	DELE_PTR_FULL(Offer);
}

void FVoyageProposalAssetData::AfterRead()
{
}

void FVoyageProposalAssetData::BeforeDelete()
{
}

void FShipHullAudioData::AfterRead()
{
	READ_PTR_FULL(WwiseObjectPoolWrapper, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(WwiseEvent, UWwiseEvent);
}

void FShipHullAudioData::BeforeDelete()
{
	DELE_PTR_FULL(WwiseObjectPoolWrapper);
	DELE_PTR_FULL(WwiseEvent);
}

void FMatchmakingVoyageRecipe::AfterRead()
{
	FVoyageRecipe::AfterRead();

}

void FMatchmakingVoyageRecipe::BeforeDelete()
{
	FVoyageRecipe::BeforeDelete();

}

void FWheelPartsScales::AfterRead()
{
}

void FWheelPartsScales::BeforeDelete()
{
}

void FWheelAdditiveProperties::AfterRead()
{
}

void FWheelAdditiveProperties::BeforeDelete()
{
}

void FWheelAdditiveAlphaSets::AfterRead()
{
}

void FWheelAdditiveAlphaSets::BeforeDelete()
{
}

void FBlendAdditiveValues::AfterRead()
{
}

void FBlendAdditiveValues::BeforeDelete()
{
}

void FWheelArmIKDownWithinRange::AfterRead()
{
}

void FWheelArmIKDownWithinRange::BeforeDelete()
{
}

void FWheelArmIKBoolSets::AfterRead()
{
}

void FWheelArmIKBoolSets::BeforeDelete()
{
}

void FFeaturedEntitlements::AfterRead()
{
}

void FFeaturedEntitlements::BeforeDelete()
{
}

void FUnlockableEntitlementCategory::AfterRead()
{
}

void FUnlockableEntitlementCategory::BeforeDelete()
{
}

void FRadialInputBindings::AfterRead()
{
	READ_PTR_FULL(GamepadActivatedId, UClass);
	READ_PTR_FULL(GamepadDectivatedId, UClass);
	READ_PTR_FULL(KeyboardActivatedId, UClass);
	READ_PTR_FULL(KeyboardDectivatedId, UClass);
}

void FRadialInputBindings::BeforeDelete()
{
	DELE_PTR_FULL(GamepadActivatedId);
	DELE_PTR_FULL(GamepadDectivatedId);
	DELE_PTR_FULL(KeyboardActivatedId);
	DELE_PTR_FULL(KeyboardDectivatedId);
}

void FBaseRadialEntry::AfterRead()
{
	READ_PTR_FULL(RadialCreationRule, URadialCreationRuleAsset);
	READ_PTR_FULL(RadialContextBase, URadialContextBase);
}

void FBaseRadialEntry::BeforeDelete()
{
	DELE_PTR_FULL(RadialCreationRule);
	DELE_PTR_FULL(RadialContextBase);
}

void FAthenaAnimationServerAnimAISpawnData::AfterRead()
{
}

void FAthenaAnimationServerAnimAISpawnData::BeforeDelete()
{
}

void FSharkMaterialEntry::AfterRead()
{
}

void FSharkMaterialEntry::BeforeDelete()
{
}

void FEmergentVoyageSourceIconInfo::AfterRead()
{
}

void FEmergentVoyageSourceIconInfo::BeforeDelete()
{
}

void FSceneDialogueStructure::AfterRead()
{
}

void FSceneDialogueStructure::BeforeDelete()
{
}

void FRammableDamageSpeedEntry::AfterRead()
{
	READ_PTR_FULL(SpeedBand, UClass);
}

void FRammableDamageSpeedEntry::BeforeDelete()
{
	DELE_PTR_FULL(SpeedBand);
}

void FShipSpecificData::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(VignetteSequence, ULevelSequence);
}

void FShipSpecificData::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(VignetteSequence);
}

void FShipCameraAnimation::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(Animation, UCameraAnim);
	READ_PTR_FULL(BlendCurve, UCurveFloat);
}

void FShipCameraAnimation::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(Animation);
	DELE_PTR_FULL(BlendCurve);
}

void FTunnelOfTheDamnedClass::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(TunnelClass, UClass);
}

void FTunnelOfTheDamnedClass::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(TunnelClass);
}

void FSeaRock::AfterRead()
{
}

void FSeaRock::BeforeDelete()
{
}

void FSequenceResponseContainer::AfterRead()
{
	READ_PTR_FULL(ResponseActor, AActor);
}

void FSequenceResponseContainer::BeforeDelete()
{
	DELE_PTR_FULL(ResponseActor);
}

void FNavigationOptions::AfterRead()
{
}

void FNavigationOptions::BeforeDelete()
{
}

void FStateChangeCoordination::AfterRead()
{
	READ_PTR_FULL(OtherCutscene, ACoordinatedCutsceneTrigger);
}

void FStateChangeCoordination::BeforeDelete()
{
	DELE_PTR_FULL(OtherCutscene);
}

void FCutsceneTriggerEditorOnlyData::AfterRead()
{
}

void FCutsceneTriggerEditorOnlyData::BeforeDelete()
{
}

void FCutsceneAnimationElement::AfterRead()
{
}

void FCutsceneAnimationElement::BeforeDelete()
{
}

void FShipwreckSite::AfterRead()
{
}

void FShipwreckSite::BeforeDelete()
{
}

void FEmblemUnlockedMessage::AfterRead()
{
}

void FEmblemUnlockedMessage::BeforeDelete()
{
}

void FEngagementMessageServiceResultEvent::AfterRead()
{
}

void FEngagementMessageServiceResultEvent::BeforeDelete()
{
}

void FEvictPlayerMessage::AfterRead()
{
}

void FEvictPlayerMessage::BeforeDelete()
{
}

void FLocText::AfterRead()
{
}

void FLocText::BeforeDelete()
{
}

void FRemoteLocalizationData::AfterRead()
{
}

void FRemoteLocalizationData::BeforeDelete()
{
}

void FEventAthenaLocalPlayerPirateIdentitySet::AfterRead()
{
}

void FEventAthenaLocalPlayerPirateIdentitySet::BeforeDelete()
{
}

void FEventAthenaLocalPlayerRequestRequiredControllersConnectedResponse::AfterRead()
{
}

void FEventAthenaLocalPlayerRequestRequiredControllersConnectedResponse::BeforeDelete()
{
}

void FEventAthenaLocalPlayerRequestRequiredControllersConnected::AfterRead()
{
}

void FEventAthenaLocalPlayerRequestRequiredControllersConnected::BeforeDelete()
{
}

void FEventLocalPrimaryPlayerReset::AfterRead()
{
}

void FEventLocalPrimaryPlayerReset::BeforeDelete()
{
}

void FEventAthenaLocalPlayerFocalUserSet::AfterRead()
{
}

void FEventAthenaLocalPlayerFocalUserSet::BeforeDelete()
{
}

void FEventPrimaryPlayerProfileDisconnected::AfterRead()
{
}

void FEventPrimaryPlayerProfileDisconnected::BeforeDelete()
{
}

void FEventPrimaryPlayerProfileConnected::AfterRead()
{
}

void FEventPrimaryPlayerProfileConnected::BeforeDelete()
{
}

void FEventAthenaLocalPlayerControllerPairingChanged::AfterRead()
{
}

void FEventAthenaLocalPlayerControllerPairingChanged::BeforeDelete()
{
}

void FEventHideControllerDisconnectedUI::AfterRead()
{
}

void FEventHideControllerDisconnectedUI::BeforeDelete()
{
}

void FEventShowControllerDisconnectedUI::AfterRead()
{
}

void FEventShowControllerDisconnectedUI::BeforeDelete()
{
}

void FEventAthenaLocalPlayerControllerDisconnected::AfterRead()
{
}

void FEventAthenaLocalPlayerControllerDisconnected::BeforeDelete()
{
}

void FEventAthenaLocalPlayerControllerConnected::AfterRead()
{
}

void FEventAthenaLocalPlayerControllerConnected::BeforeDelete()
{
}

void FEventAthenaLocalPlayerClearControllerId::AfterRead()
{
}

void FEventAthenaLocalPlayerClearControllerId::BeforeDelete()
{
}

void FEventAthenaLocalPlayerControllerTypeRequest::AfterRead()
{
}

void FEventAthenaLocalPlayerControllerTypeRequest::BeforeDelete()
{
}

void FEventAthenaLocalPlayerControllerTypeChange::AfterRead()
{
}

void FEventAthenaLocalPlayerControllerTypeChange::BeforeDelete()
{
}

void FEventAthenaLocalPlayerSetControllerId::AfterRead()
{
}

void FEventAthenaLocalPlayerSetControllerId::BeforeDelete()
{
}

void FCinematicQuestNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FCinematicQuestNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FPlayModeVariantResponse::AfterRead()
{
}

void FPlayModeVariantResponse::BeforeDelete()
{
}

void FRequestPlayModeVariant::AfterRead()
{
}

void FRequestPlayModeVariant::BeforeDelete()
{
}

void FEventPopUpQueueServicePaused::AfterRead()
{
}

void FEventPopUpQueueServicePaused::BeforeDelete()
{
}

void FSetArenaIslandBanners::AfterRead()
{
}

void FSetArenaIslandBanners::BeforeDelete()
{
}

void FSetAdventureIslandBanners::AfterRead()
{
}

void FSetAdventureIslandBanners::BeforeDelete()
{
}

void FNarrationStateRequestEvent::AfterRead()
{
}

void FNarrationStateRequestEvent::BeforeDelete()
{
}

void FNarrationStateEvent::AfterRead()
{
}

void FNarrationStateEvent::BeforeDelete()
{
}

void FNarrationRequestEvent::AfterRead()
{
}

void FNarrationRequestEvent::BeforeDelete()
{
}

void FSetToastHoldDurationMultiplier::AfterRead()
{
}

void FSetToastHoldDurationMultiplier::BeforeDelete()
{
}

void FSetNarrateToasts::AfterRead()
{
}

void FSetNarrateToasts::BeforeDelete()
{
}

void FSetScreenSpaceTooltips::AfterRead()
{
}

void FSetScreenSpaceTooltips::BeforeDelete()
{
}

void FSetNotificationScale::AfterRead()
{
}

void FSetNotificationScale::BeforeDelete()
{
}

void FSendMarketingOptInResponse::AfterRead()
{
}

void FSendMarketingOptInResponse::BeforeDelete()
{
}

void FAccessibiltySettingsModalEvent::AfterRead()
{
}

void FAccessibiltySettingsModalEvent::BeforeDelete()
{
}

void FRequestShowMarketingOptInPopUp::AfterRead()
{
}

void FRequestShowMarketingOptInPopUp::BeforeDelete()
{
}

void FRequestShowGamerCard::AfterRead()
{
}

void FRequestShowGamerCard::BeforeDelete()
{
}

void FEventSendCapturedKeybind::AfterRead()
{
}

void FEventSendCapturedKeybind::BeforeDelete()
{
}

void FEventKeybindCaptureCancelRequest::AfterRead()
{
}

void FEventKeybindCaptureCancelRequest::BeforeDelete()
{
}

void FEventKeybindCaptureRequest::AfterRead()
{
}

void FEventKeybindCaptureRequest::BeforeDelete()
{
}

void FEventFrontendSetSceneVisibility::AfterRead()
{
}

void FEventFrontendSetSceneVisibility::BeforeDelete()
{
}

void FEventInGameUISetMigrationMode::AfterRead()
{
}

void FEventInGameUISetMigrationMode::BeforeDelete()
{
}

void FEventToggleNonCrewVoiceMuteState::AfterRead()
{
}

void FEventToggleNonCrewVoiceMuteState::BeforeDelete()
{
}

void FEventToggleScrambleGamertags::AfterRead()
{
}

void FEventToggleScrambleGamertags::BeforeDelete()
{
}

void FEventToggleCrewNameplates::AfterRead()
{
}

void FEventToggleCrewNameplates::BeforeDelete()
{
}

void FEventToggleOtherCrewNameplates::AfterRead()
{
}

void FEventToggleOtherCrewNameplates::BeforeDelete()
{
}

void FEventTogglePhotoMode::AfterRead()
{
}

void FEventTogglePhotoMode::BeforeDelete()
{
}

void FEventInGameUISetPhotoMode::AfterRead()
{
}

void FEventInGameUISetPhotoMode::BeforeDelete()
{
}

void FMessageInABottleGivenVoyageTelemetryEvent::AfterRead()
{
}

void FMessageInABottleGivenVoyageTelemetryEvent::BeforeDelete()
{
}

void FCrewBeganPrimaryVoyageEvent::AfterRead()
{
}

void FCrewBeganPrimaryVoyageEvent::BeforeDelete()
{
}

void FDiscoveryNotificationEvent::AfterRead()
{
}

void FDiscoveryNotificationEvent::BeforeDelete()
{
}

void FQuestInfo::AfterRead()
{
}

void FQuestInfo::BeforeDelete()
{
}

void FAggressiveGhostShipEncounterStartTelemetryEvent::AfterRead()
{
}

void FAggressiveGhostShipEncounterStartTelemetryEvent::BeforeDelete()
{
}

void FEventPlayerStoppedSwimming::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerStoppedSwimming::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventPlayerStartedSwimming::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FEventPlayerStartedSwimming::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FEventCharacterStoppedDrowning::AfterRead()
{
}

void FEventCharacterStoppedDrowning::BeforeDelete()
{
}

void FEventCharacterStartedDrowning::AfterRead()
{
}

void FEventCharacterStartedDrowning::BeforeDelete()
{
}

void FEventCharacterDrowning::AfterRead()
{
}

void FEventCharacterDrowning::BeforeDelete()
{
}

void FFishingFishFishingRodDebugDrawInfo::AfterRead()
{
}

void FFishingFishFishingRodDebugDrawInfo::BeforeDelete()
{
}

void FFishingFishFishingRodInfo::AfterRead()
{
}

void FFishingFishFishingRodInfo::BeforeDelete()
{
}

void FPlayerGameFishingTelemetryEvent::AfterRead()
{
}

void FPlayerGameFishingTelemetryEvent::BeforeDelete()
{
}

void FFishingActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FFishingActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEventFishingFishCollisionDetected::AfterRead()
{
}

void FEventFishingFishCollisionDetected::BeforeDelete()
{
}

void FEventFishingFishEscaping::AfterRead()
{
}

void FEventFishingFishEscaping::BeforeDelete()
{
}

void FEventFishingFishCaught::AfterRead()
{
	READ_PTR_FULL(CaughtActor, AActor);
}

void FEventFishingFishCaught::BeforeDelete()
{
	DELE_PTR_FULL(CaughtActor);
}

void FEventFishingFishBecameTired::AfterRead()
{
}

void FEventFishingFishBecameTired::BeforeDelete()
{
}

void FEventFishingFishStartedBattling::AfterRead()
{
}

void FEventFishingFishStartedBattling::BeforeDelete()
{
}

void FEventFishingFishFloatBitten::AfterRead()
{
}

void FEventFishingFishFloatBitten::BeforeDelete()
{
}

void FEventFishingReelingWhileBattlingStateChange::AfterRead()
{
}

void FEventFishingReelingWhileBattlingStateChange::BeforeDelete()
{
}

void FEventSetJIPFishingAnimationState::AfterRead()
{
}

void FEventSetJIPFishingAnimationState::BeforeDelete()
{
}

void FEventFishingRodFishCaught::AfterRead()
{
}

void FEventFishingRodFishCaught::BeforeDelete()
{
}

void FEventFishingRodFishingStateChanged::AfterRead()
{
}

void FEventFishingRodFishingStateChanged::BeforeDelete()
{
}

void FEventSetFishingIsComedyItem::AfterRead()
{
}

void FEventSetFishingIsComedyItem::BeforeDelete()
{
}

void FEventSetFishingFloatActor::AfterRead()
{
	READ_PTR_FULL(FishingFloat, AActor);
}

void FEventSetFishingFloatActor::BeforeDelete()
{
	DELE_PTR_FULL(FishingFloat);
}

void FEventSetRemappedPlayerDirection::AfterRead()
{
}

void FEventSetRemappedPlayerDirection::BeforeDelete()
{
}

void FEventSetFishingRodWieldedItem::AfterRead()
{
	READ_PTR_FULL(FishingRod, AActor);
}

void FEventSetFishingRodWieldedItem::BeforeDelete()
{
	DELE_PTR_FULL(FishingRod);
}

void FEventSetFishingLineSnapShake::AfterRead()
{
}

void FEventSetFishingLineSnapShake::BeforeDelete()
{
}

void FEventSetFishingTensionShake::AfterRead()
{
}

void FEventSetFishingTensionShake::BeforeDelete()
{
}

void FAthenaAnimationPitchShoulders::AfterRead()
{
}

void FAthenaAnimationPitchShoulders::BeforeDelete()
{
}

void FAthenaAnimationFootPlanting::AfterRead()
{
}

void FAthenaAnimationFootPlanting::BeforeDelete()
{
}

void FVFXHandlerComponentParams::AfterRead()
{
	READ_PTR_FULL(ParticleSystem, UParticleSystem);
}

void FVFXHandlerComponentParams::BeforeDelete()
{
	DELE_PTR_FULL(ParticleSystem);
}

void FChargedAttackProjectileWeights::AfterRead()
{
}

void FChargedAttackProjectileWeights::BeforeDelete()
{
}

void FCanvasWorldMapGeneric::AfterRead()
{
	READ_PTR_FULL(MarkerActor, AActor);
	READ_PTR_FULL(Icon, UTexture);
}

void FCanvasWorldMapGeneric::BeforeDelete()
{
	DELE_PTR_FULL(MarkerActor);
	DELE_PTR_FULL(Icon);
}

void FGenericPartDesc::AfterRead()
{
	READ_PTR_FULL(Mesh, UStaticMesh);
}

void FGenericPartDesc::BeforeDelete()
{
	DELE_PTR_FULL(Mesh);
}

void FPetSpawnDefinition::AfterRead()
{
	READ_PTR_FULL(PetDesc, UClass);
}

void FPetSpawnDefinition::BeforeDelete()
{
	DELE_PTR_FULL(PetDesc);
}

void FSpawnedPetData::AfterRead()
{
	READ_PTR_FULL(SpawnedPet, APet);
	READ_PTR_FULL(SpawnedInfo, APetItemInfo);
}

void FSpawnedPetData::BeforeDelete()
{
	DELE_PTR_FULL(SpawnedPet);
	DELE_PTR_FULL(SpawnedInfo);
}

void FVoyageProposalCompanyAssetData::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FVoyageProposalCompanyAssetData::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FCanvasLOD::AfterRead()
{
}

void FCanvasLOD::BeforeDelete()
{
}

void FBuriedTreasureChestParams::AfterRead()
{
}

void FBuriedTreasureChestParams::BeforeDelete()
{
}

void FVoyageProposalOverride::AfterRead()
{
	READ_PTR_FULL(Proposal, UClass);
}

void FVoyageProposalOverride::BeforeDelete()
{
	DELE_PTR_FULL(Proposal);
}

void FEmissaryCompanyQuestIcons::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FEmissaryCompanyQuestIcons::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FResourceCacheEntry::AfterRead()
{
}

void FResourceCacheEntry::BeforeDelete()
{
}

void FMeshAnimatorAnimationMeshEntry::AfterRead()
{
}

void FMeshAnimatorAnimationMeshEntry::BeforeDelete()
{
}

void FMeshAnimatorAnimationEntry::AfterRead()
{
}

void FMeshAnimatorAnimationEntry::BeforeDelete()
{
}

void FEncounter::AfterRead()
{
	READ_PTR_FULL(EncounterActor, AActor);
}

void FEncounter::BeforeDelete()
{
	DELE_PTR_FULL(EncounterActor);
}

void FUserSettingsMapMarkDefinition::AfterRead()
{
	READ_PTR_FULL(MarkId, UClass);
}

void FUserSettingsMapMarkDefinition::BeforeDelete()
{
	DELE_PTR_FULL(MarkId);
}

void FLandmarkReactionKeyFrame::AfterRead()
{
	READ_PTR_FULL(Event, ULandmarkReactionEvent);
}

void FLandmarkReactionKeyFrame::BeforeDelete()
{
	DELE_PTR_FULL(Event);
}

void FTimedDoorLandmarkReactions::AfterRead()
{
}

void FTimedDoorLandmarkReactions::BeforeDelete()
{
}

void FIslandNameAndBounds::AfterRead()
{
}

void FIslandNameAndBounds::BeforeDelete()
{
}

void FEventIslandEventDataChanged::AfterRead()
{
}

void FEventIslandEventDataChanged::BeforeDelete()
{
}

void FBeaconExtinguishedEvent::AfterRead()
{
}

void FBeaconExtinguishedEvent::BeforeDelete()
{
}

void FBeaconLitEvent::AfterRead()
{
}

void FBeaconLitEvent::BeforeDelete()
{
}

void FPioneerRewardEpochCompleteEvent::AfterRead()
{
}

void FPioneerRewardEpochCompleteEvent::BeforeDelete()
{
}

void FPetSpeciesViewModel::AfterRead()
{
}

void FPetSpeciesViewModel::BeforeDelete()
{
}

void FPetShopDefinition::AfterRead()
{
}

void FPetShopDefinition::BeforeDelete()
{
}

void FPetShopResponseEvent::AfterRead()
{
}

void FPetShopResponseEvent::BeforeDelete()
{
}

void FPetShopRefreshEvent::AfterRead()
{
}

void FPetShopRefreshEvent::BeforeDelete()
{
}

void FPetShopRequestEvent::AfterRead()
{
}

void FPetShopRequestEvent::BeforeDelete()
{
}

void FKnockBackInfo::AfterRead()
{
}

void FKnockBackInfo::BeforeDelete()
{
}

void FWeaponProjectileEffectParams::AfterRead()
{
}

void FWeaponProjectileEffectParams::BeforeDelete()
{
}

void FProjectileHitEvent::AfterRead()
{
	READ_PTR_FULL(ProjectileId, UClass);
}

void FProjectileHitEvent::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileId);
}

void FWeaponProjectileParams::AfterRead()
{
	READ_PTR_FULL(ProjectileId, UClass);
}

void FWeaponProjectileParams::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileId);
}

void FWeaponProjectileCreator::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FWeaponProjectileCreator::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FStatueCosmeticTimingHandler::AfterRead()
{
}

void FStatueCosmeticTimingHandler::BeforeDelete()
{
}

void FQuestBookPageRenderingTriggerRedraw::AfterRead()
{
}

void FQuestBookPageRenderingTriggerRedraw::BeforeDelete()
{
}

void FRiddleTextPhraseId::AfterRead()
{
}

void FRiddleTextPhraseId::BeforeDelete()
{
}

void FStatusScreenEffectParams::AfterRead()
{
}

void FStatusScreenEffectParams::BeforeDelete()
{
}

void FServerUpdateCrewState::AfterRead()
{
}

void FServerUpdateCrewState::BeforeDelete()
{
}

void FServerStateUpdateMessage::AfterRead()
{
}

void FServerStateUpdateMessage::BeforeDelete()
{
}

void FSiteGeneratorThresholdData::AfterRead()
{
}

void FSiteGeneratorThresholdData::BeforeDelete()
{
}

void FAthenaCharacterDodgeEvent::AfterRead()
{
}

void FAthenaCharacterDodgeEvent::BeforeDelete()
{
}

void FEventDeathBlackFadeStopped::AfterRead()
{
}

void FEventDeathBlackFadeStopped::BeforeDelete()
{
}

void FEventDeathBlackFadeTriggered::AfterRead()
{
}

void FEventDeathBlackFadeTriggered::BeforeDelete()
{
}

void FEventDeathCameraDeactivated::AfterRead()
{
}

void FEventDeathCameraDeactivated::BeforeDelete()
{
}

void FEventDeathCameraActivated::AfterRead()
{
}

void FEventDeathCameraActivated::BeforeDelete()
{
}

void FEventPlayerCharacterModelsReplaced::AfterRead()
{
	READ_PTR_FULL(PlayerCharacter, AActor);
}

void FEventPlayerCharacterModelsReplaced::BeforeDelete()
{
	DELE_PTR_FULL(PlayerCharacter);
}

void FEventPlayerCharacterExitedShip::AfterRead()
{
	READ_PTR_FULL(PlayerCharacter, AActor);
}

void FEventPlayerCharacterExitedShip::BeforeDelete()
{
	DELE_PTR_FULL(PlayerCharacter);
}

void FEventPlayerCharacterEnteredShip::AfterRead()
{
	READ_PTR_FULL(PlayerCharacter, AActor);
}

void FEventPlayerCharacterEnteredShip::BeforeDelete()
{
	DELE_PTR_FULL(PlayerCharacter);
}

void FEventPlayerCharacterLeft::AfterRead()
{
	READ_PTR_FULL(AthenaCharacter, AAthenaPlayerCharacter);
}

void FEventPlayerCharacterLeft::BeforeDelete()
{
	DELE_PTR_FULL(AthenaCharacter);
}

void FEventPlayerCharacterJoined::AfterRead()
{
	READ_PTR_FULL(AthenaCharacter, AAthenaPlayerCharacter);
}

void FEventPlayerCharacterJoined::BeforeDelete()
{
	DELE_PTR_FULL(AthenaCharacter);
}

void FIngestedByKrakenActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FIngestedByKrakenActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FInteractLoadableActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(DefaultItemDesc, UClass);
}

void FInteractLoadableActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(DefaultItemDesc);
}

void FEventTriggerOverlayAction::AfterRead()
{
	READ_PTR_FULL(InteractObject, UObject);
}

void FEventTriggerOverlayAction::BeforeDelete()
{
	DELE_PTR_FULL(InteractObject);
}

void FInvertRadialYInputEvent::AfterRead()
{
}

void FInvertRadialYInputEvent::BeforeDelete()
{
}

void FEnableMovementDuringRadialEvent::AfterRead()
{
}

void FEnableMovementDuringRadialEvent::BeforeDelete()
{
}

void FLeaveGhostShipActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FLeaveGhostShipActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FCrewJoinedAllianceTelemetryEvent::AfterRead()
{
}

void FCrewJoinedAllianceTelemetryEvent::BeforeDelete()
{
}

void FAllianceCreatedTelemetryEvent::AfterRead()
{
}

void FAllianceCreatedTelemetryEvent::BeforeDelete()
{
}

void FPlayerReleasedFromBrig::AfterRead()
{
}

void FPlayerReleasedFromBrig::BeforeDelete()
{
}

void FPlayerBanishedToBrig::AfterRead()
{
}

void FPlayerBanishedToBrig::BeforeDelete()
{
}

void FPlayerBrigStatusChanged::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FPlayerBrigStatusChanged::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FCrewServiceCrewsReplicatedEvent::AfterRead()
{
}

void FCrewServiceCrewsReplicatedEvent::BeforeDelete()
{
}

void FEventQueriedPlayerSpawnLocation::AfterRead()
{
}

void FEventQueriedPlayerSpawnLocation::BeforeDelete()
{
}

void FFailedToFindPlayerSpawnLocationPotentialLocation::AfterRead()
{
}

void FFailedToFindPlayerSpawnLocationPotentialLocation::BeforeDelete()
{
}

void FRepairLoadoutFromSeedRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FRepairLoadoutFromSeedRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FPlayerBuriedTreasureServiceMapBundleStolenEvent::AfterRead()
{
	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FPlayerBuriedTreasureServiceMapBundleStolenEvent::BeforeDelete()
{
	DELE_PTR_FULL(PopUpDesc);
}

void FRequestEmblemProgressMessage::AfterRead()
{
}

void FRequestEmblemProgressMessage::BeforeDelete()
{
}

void FInventoryResponseEvent::AfterRead()
{
}

void FInventoryResponseEvent::BeforeDelete()
{
}

void FInventoryRequestEvent::AfterRead()
{
}

void FInventoryRequestEvent::BeforeDelete()
{
}

void FInventoryCountsResponseEvent::AfterRead()
{
}

void FInventoryCountsResponseEvent::BeforeDelete()
{
}

void FRequestInventoryCountsEvent::AfterRead()
{
}

void FRequestInventoryCountsEvent::BeforeDelete()
{
}

void FCrewCancelledTaleEvent::AfterRead()
{
}

void FCrewCancelledTaleEvent::BeforeDelete()
{
}

void FAthenaAnimationEmoteAnimgraphStructure::AfterRead()
{
	READ_PTR_FULL(OneShotAnimationToUse, UAnimSequence);
	READ_PTR_FULL(ContinuousInAnimationToUse, UAnimSequence);
	READ_PTR_FULL(ContinuousLoopAnimationToUseA, UAnimSequence);
	READ_PTR_FULL(ContinuousLoopAnimationToUseB, UAnimSequence);
}

void FAthenaAnimationEmoteAnimgraphStructure::BeforeDelete()
{
	DELE_PTR_FULL(OneShotAnimationToUse);
	DELE_PTR_FULL(ContinuousInAnimationToUse);
	DELE_PTR_FULL(ContinuousLoopAnimationToUseA);
	DELE_PTR_FULL(ContinuousLoopAnimationToUseB);
}

void FCompanySpecificCargoRunStats::AfterRead()
{
	READ_PTR_FULL(CompanyId, UClass);
}

void FCompanySpecificCargoRunStats::BeforeDelete()
{
	DELE_PTR_FULL(CompanyId);
}

void FCargoRunMapContents::AfterRead()
{
}

void FCargoRunMapContents::BeforeDelete()
{
}

void FCompanyRankGradeData::AfterRead()
{
	READ_PTR_FULL(Rank, UClass);
}

void FCompanyRankGradeData::BeforeDelete()
{
	DELE_PTR_FULL(Rank);
}

void FCompanyRankData::AfterRead()
{
}

void FCompanyRankData::BeforeDelete()
{
}

void FContestMapLayoutCrew::AfterRead()
{
}

void FContestMapLayoutCrew::BeforeDelete()
{
}

void FFaunaAnimationLocationStructure::AfterRead()
{
}

void FFaunaAnimationLocationStructure::BeforeDelete()
{
}

void FFaunaAnimationStructure::AfterRead()
{
}

void FFaunaAnimationStructure::BeforeDelete()
{
}

void FFaunaAnimationCurrentPlayingAnimations::AfterRead()
{
	READ_PTR_FULL(LandLocomotionA, UBlendSpace1D);
	READ_PTR_FULL(LandLocomotionB, UBlendSpace1D);
	READ_PTR_FULL(SeaLocomotionA, UBlendSpace1D);
	READ_PTR_FULL(SeaLocomotionB, UBlendSpace1D);
	READ_PTR_FULL(UnderwaterLocomotionA, UBlendSpace1D);
	READ_PTR_FULL(UnderwaterLocomotionB, UBlendSpace1D);
	READ_PTR_FULL(LandIdleA, UAnimSequence);
	READ_PTR_FULL(LandIdleB, UAnimSequence);
	READ_PTR_FULL(SeaIdleA, UAnimSequence);
	READ_PTR_FULL(SeaIdleB, UAnimSequence);
	READ_PTR_FULL(UnderwaterIdleA, UAnimSequence);
	READ_PTR_FULL(UnderwaterIdleB, UAnimSequence);
}

void FFaunaAnimationCurrentPlayingAnimations::BeforeDelete()
{
	DELE_PTR_FULL(LandLocomotionA);
	DELE_PTR_FULL(LandLocomotionB);
	DELE_PTR_FULL(SeaLocomotionA);
	DELE_PTR_FULL(SeaLocomotionB);
	DELE_PTR_FULL(UnderwaterLocomotionA);
	DELE_PTR_FULL(UnderwaterLocomotionB);
	DELE_PTR_FULL(LandIdleA);
	DELE_PTR_FULL(LandIdleB);
	DELE_PTR_FULL(SeaIdleA);
	DELE_PTR_FULL(SeaIdleB);
	DELE_PTR_FULL(UnderwaterIdleA);
	DELE_PTR_FULL(UnderwaterIdleB);
}

void FShipLeakParams::AfterRead()
{
}

void FShipLeakParams::BeforeDelete()
{
}

void FHullDamageParamSet::AfterRead()
{
}

void FHullDamageParamSet::BeforeDelete()
{
}

void FHullDamageNamedParamSet::AfterRead()
{
}

void FHullDamageNamedParamSet::BeforeDelete()
{
}

void FControlCapstanArmActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FControlCapstanArmActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FTeleportActionStateParams::AfterRead()
{
}

void FTeleportActionStateParams::BeforeDelete()
{
}

void FDockableCutsceneActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FDockableCutsceneActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FDigAnimParams::AfterRead()
{
}

void FDigAnimParams::BeforeDelete()
{
}

void FPlayerGameEndTelemetryEvent::AfterRead()
{
}

void FPlayerGameEndTelemetryEvent::BeforeDelete()
{
}

void FUIScreenTransitionTelemetryEvent::AfterRead()
{
}

void FUIScreenTransitionTelemetryEvent::BeforeDelete()
{
}

void FShovelTelemetryEvent::AfterRead()
{
}

void FShovelTelemetryEvent::BeforeDelete()
{
}

void FShipSpawnedTelemetryEvent::AfterRead()
{
}

void FShipSpawnedTelemetryEvent::BeforeDelete()
{
}

void FShipHeartbeatTelemetryEvent::AfterRead()
{
}

void FShipHeartbeatTelemetryEvent::BeforeDelete()
{
}

void FShipDestroyedTelemetryEvent::AfterRead()
{
}

void FShipDestroyedTelemetryEvent::BeforeDelete()
{
}

void FPlayerSpawnTelemetryEvent::AfterRead()
{
}

void FPlayerSpawnTelemetryEvent::BeforeDelete()
{
}

void FPlayerObjectUsageStartTelemetryEvent::AfterRead()
{
}

void FPlayerObjectUsageStartTelemetryEvent::BeforeDelete()
{
}

void FPlayerObjectUsageEndTelemetryEvent::AfterRead()
{
}

void FPlayerObjectUsageEndTelemetryEvent::BeforeDelete()
{
}

void FPlayerItemRetrievalFromContainerTelemetryEvent::AfterRead()
{
}

void FPlayerItemRetrievalFromContainerTelemetryEvent::BeforeDelete()
{
}

void FPlayerItemEquipTelemetryEvent::AfterRead()
{
}

void FPlayerItemEquipTelemetryEvent::BeforeDelete()
{
}

void FPlayerCapstanUsageStartTelemetryEvent::AfterRead()
{
}

void FPlayerCapstanUsageStartTelemetryEvent::BeforeDelete()
{
}

void FPlayerCapstanUsageEndTelemetryEvent::AfterRead()
{
}

void FPlayerCapstanUsageEndTelemetryEvent::BeforeDelete()
{
}

void FPlayerActionTelemetryEvent::AfterRead()
{
}

void FPlayerActionTelemetryEvent::BeforeDelete()
{
}

void FLoadingTelemetryEvent::AfterRead()
{
}

void FLoadingTelemetryEvent::BeforeDelete()
{
}

void FCrewPlayerLeftTelemetryEvent::AfterRead()
{
}

void FCrewPlayerLeftTelemetryEvent::BeforeDelete()
{
}

void FCrewPlayerJoinedTelemetryEvent::AfterRead()
{
}

void FCrewPlayerJoinedTelemetryEvent::BeforeDelete()
{
}

void FCrewDestroyedTelemetryEvent::AfterRead()
{
}

void FCrewDestroyedTelemetryEvent::BeforeDelete()
{
}

void FCrewCreatedTelemetryEvent::AfterRead()
{
}

void FCrewCreatedTelemetryEvent::BeforeDelete()
{
}

void FFeaturedClothingCategory::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FFeaturedClothingCategory::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FFeaturedPetCategory::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FFeaturedPetCategory::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FFeaturedShipCustomisationCategory::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FFeaturedShipCustomisationCategory::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FSetHiddenData::AfterRead()
{
	READ_PTR_FULL(SequencerActor, ASequencerCutSceneActor);
	READ_PTR_FULL(LevelSeq, ULevelSequence);
}

void FSetHiddenData::BeforeDelete()
{
	DELE_PTR_FULL(SequencerActor);
	DELE_PTR_FULL(LevelSeq);
}

void FShipCustomizationChestCrewMember::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FShipCustomizationChestCrewMember::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FNPCInitialSpawnedCosmeticItems::AfterRead()
{
	READ_PTR_FULL(CosmeticItemObject, UClass);
}

void FNPCInitialSpawnedCosmeticItems::BeforeDelete()
{
	DELE_PTR_FULL(CosmeticItemObject);
}

void FNPCCustomAnimationDataStructure::AfterRead()
{
	READ_PTR_FULL(WieldableCosmeticItemList, UNPCHeldObjectData);
}

void FNPCCustomAnimationDataStructure::BeforeDelete()
{
	DELE_PTR_FULL(WieldableCosmeticItemList);
}

void FNPCCustomAnimationBlueprintPlayingAnimations::AfterRead()
{
	READ_PTR_FULL(OneShot, UAnimSequenceBase);
	READ_PTR_FULL(ContinouousIn, UAnimSequenceBase);
	READ_PTR_FULL(ContinouousLoop_A, UAnimSequenceBase);
	READ_PTR_FULL(ContinouousLoop_B, UAnimSequenceBase);
	READ_PTR_FULL(ContinouousOut, UAnimSequenceBase);
}

void FNPCCustomAnimationBlueprintPlayingAnimations::BeforeDelete()
{
	DELE_PTR_FULL(OneShot);
	DELE_PTR_FULL(ContinouousIn);
	DELE_PTR_FULL(ContinouousLoop_A);
	DELE_PTR_FULL(ContinouousLoop_B);
	DELE_PTR_FULL(ContinouousOut);
}

void FNPCCustomAnimationBlueprintPlayingMontage::AfterRead()
{
	READ_PTR_FULL(OneShot, UAnimMontage);
	READ_PTR_FULL(ContinouousIn, UAnimMontage);
	READ_PTR_FULL(ContinouousLoop_A, UAnimMontage);
	READ_PTR_FULL(ContinouousLoop_B, UAnimMontage);
	READ_PTR_FULL(ContinouousOut, UAnimMontage);
}

void FNPCCustomAnimationBlueprintPlayingMontage::BeforeDelete()
{
	DELE_PTR_FULL(OneShot);
	DELE_PTR_FULL(ContinouousIn);
	DELE_PTR_FULL(ContinouousLoop_A);
	DELE_PTR_FULL(ContinouousLoop_B);
	DELE_PTR_FULL(ContinouousOut);
}

void FNPCAnimationIdlesVariantStruct::AfterRead()
{
	READ_PTR_FULL(IdleVariant, UAnimSequence);
	READ_PTR_FULL(InactiveIdleVariant, UAnimSequence);
	READ_PTR_FULL(InteractIdleVariant, UAnimSequence);
}

void FNPCAnimationIdlesVariantStruct::BeforeDelete()
{
	DELE_PTR_FULL(IdleVariant);
	DELE_PTR_FULL(InactiveIdleVariant);
	DELE_PTR_FULL(InteractIdleVariant);
}

void FNPCDialogFormattedHeaderByConditionText::AfterRead()
{
}

void FNPCDialogFormattedHeaderByConditionText::BeforeDelete()
{
}

void FNPCDialogHeaderByConditionText::AfterRead()
{
}

void FNPCDialogHeaderByConditionText::BeforeDelete()
{
}

void FPlayModePhrases::AfterRead()
{
	READ_PTR_FULL(PhraseDataAsset, UPhrasesRadialDataAsset);
	READ_PTR_FULL(QuickAccessDataAsset, UNonVerbalRadialDataAsset);
	READ_PTR_FULL(StrategyDataAsset, UNonVerbalRadialDataAsset);
}

void FPlayModePhrases::BeforeDelete()
{
	DELE_PTR_FULL(PhraseDataAsset);
	DELE_PTR_FULL(QuickAccessDataAsset);
	DELE_PTR_FULL(StrategyDataAsset);
}

void FWalletBalance::AfterRead()
{
}

void FWalletBalance::BeforeDelete()
{
}

void FAnimatedMechanismActionState::AfterRead()
{
}

void FAnimatedMechanismActionState::BeforeDelete()
{
}

void FMechanismAnimationEventContainer::AfterRead()
{
}

void FMechanismAnimationEventContainer::BeforeDelete()
{
}

void FProjectileShotParams::AfterRead()
{
}

void FProjectileShotParams::BeforeDelete()
{
}

void FAudioEmitterParameters::AfterRead()
{
	READ_PTR_FULL(LocalEmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(RemoteEmitterPool, UWwiseObjectPoolWrapper);
}

void FAudioEmitterParameters::BeforeDelete()
{
	DELE_PTR_FULL(LocalEmitterPool);
	DELE_PTR_FULL(RemoteEmitterPool);
}

void FProjectileWeaponParameters::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(ProjectileId, UClass);
	READ_PTR_FULL(DryFireSfx, UWwiseEvent);
}

void FProjectileWeaponParameters::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(ProjectileId);
	DELE_PTR_FULL(DryFireSfx);
}

void FContentTypeSelectorPair::AfterRead()
{
	READ_PTR_FULL(ContentTypeSelectorCondition, UContentTypeSelectionConditional);
	READ_PTR_FULL(ContentTypeSelector, UStorageContainerContentTypeSelector);
}

void FContentTypeSelectorPair::BeforeDelete()
{
	DELE_PTR_FULL(ContentTypeSelectorCondition);
	DELE_PTR_FULL(ContentTypeSelector);
}

void FStorageContainerNode::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FStorageContainerNode::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FStaggerModifiers::AfterRead()
{
}

void FStaggerModifiers::BeforeDelete()
{
}

void FStandardAnchorDynamicsParameters::AfterRead()
{
	READ_PTR_FULL(UnaryWheelAngleBasedTorque, UCurveFloat);
	READ_PTR_FULL(ForwardSpeedBasedTorque, UCurveFloat);
	READ_PTR_FULL(YawDeltaVsCorrectiveTorquePerKgMass, UCurveFloat);
}

void FStandardAnchorDynamicsParameters::BeforeDelete()
{
	DELE_PTR_FULL(UnaryWheelAngleBasedTorque);
	DELE_PTR_FULL(ForwardSpeedBasedTorque);
	DELE_PTR_FULL(YawDeltaVsCorrectiveTorquePerKgMass);
}

void FXMarksTheSpotMapMark::AfterRead()
{
}

void FXMarksTheSpotMapMark::BeforeDelete()
{
}

void FVaultTreasureRarity::AfterRead()
{
	READ_PTR_FULL(VaultKeyDesc, UClass);
	READ_PTR_FULL(ReferencedSpawnDistributionAsset, UWeightedItemDescSpawnDataAsset);
}

void FVaultTreasureRarity::BeforeDelete()
{
	DELE_PTR_FULL(VaultKeyDesc);
	DELE_PTR_FULL(ReferencedSpawnDistributionAsset);
}

void FTutorialStepDependencies::AfterRead()
{
	READ_PTR_FULL(Controller, AAthenaPlayerController);
}

void FTutorialStepDependencies::BeforeDelete()
{
	DELE_PTR_FULL(Controller);
}

void FTutorialSequence::AfterRead()
{
}

void FTutorialSequence::BeforeDelete()
{
}

void FTutorialStep::AfterRead()
{
}

void FTutorialStep::BeforeDelete()
{
}

void FTutorialStepEatBanana::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepEatBanana::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FTutorialStepUseMap::AfterRead()
{
	FTutorialStep::AfterRead();

	READ_PTR_FULL(TutorialMap, AWieldableItem);
}

void FTutorialStepUseMap::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

	DELE_PTR_FULL(TutorialMap);
}

void FTutorialStepBuyVoyage::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepBuyVoyage::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FTutorialStepCycleWeapons::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepCycleWeapons::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FTutorialStepSellTreasure::AfterRead()
{
	FTutorialStep::AfterRead();

	READ_PTR_FULL(SpawnedChest, AItemInfo);
}

void FTutorialStepSellTreasure::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

	DELE_PTR_FULL(SpawnedChest);
}

void FTutorialStepBuyClothes::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepBuyClothes::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FTutorialStepReturnToStranger::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepReturnToStranger::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FTutorialStepBeginTallTale::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepBeginTallTale::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FTutorialStepEndOfTutorial::AfterRead()
{
	FTutorialStep::AfterRead();

}

void FTutorialStepEndOfTutorial::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

}

void FWaterBarrelFeedbackLevel::AfterRead()
{
	READ_PTR_FULL(Effect, UForceFeedbackEffect);
}

void FWaterBarrelFeedbackLevel::BeforeDelete()
{
	DELE_PTR_FULL(Effect);
}

void FWaterSensitiveHealthChange::AfterRead()
{
}

void FWaterSensitiveHealthChange::BeforeDelete()
{
}

void FLightingZoneParametersAndLocation::AfterRead()
{
}

void FLightingZoneParametersAndLocation::BeforeDelete()
{
}

void FWeightedRewardEntry::AfterRead()
{
}

void FWeightedRewardEntry::BeforeDelete()
{
}

void FWeightedRewardTableUnit::AfterRead()
{
	READ_PTR_FULL(Entitlement, UClass);
}

void FWeightedRewardTableUnit::BeforeDelete()
{
	DELE_PTR_FULL(Entitlement);
}

void FManagedVulnerabilityLayer::AfterRead()
{
	READ_PTR_FULL(VulnerabilityLayerToApply, UDamageableVulnerabilityLayer);
}

void FManagedVulnerabilityLayer::BeforeDelete()
{
	DELE_PTR_FULL(VulnerabilityLayerToApply);
}

void FRegionMapData::AfterRead()
{
}

void FRegionMapData::BeforeDelete()
{
}

void FPetAnimationCycleMontage::AfterRead()
{
	READ_PTR_FULL(In, UAnimMontage);
	READ_PTR_FULL(Loop, UAnimMontage);
	READ_PTR_FULL(Out, UAnimMontage);
}

void FPetAnimationCycleMontage::BeforeDelete()
{
	DELE_PTR_FULL(In);
	DELE_PTR_FULL(Loop);
	DELE_PTR_FULL(Out);
}

void FPetRoamingAnimationStateDefinition::AfterRead()
{
	READ_PTR_FULL(MontageData, UAnimMontage);
}

void FPetRoamingAnimationStateDefinition::BeforeDelete()
{
	DELE_PTR_FULL(MontageData);
}

void FPetAnimationCycle::AfterRead()
{
	READ_PTR_FULL(In, UAnimSequenceBase);
	READ_PTR_FULL(Loop, UAnimSequenceBase);
	READ_PTR_FULL(Out, UAnimSequenceBase);
}

void FPetAnimationCycle::BeforeDelete()
{
	DELE_PTR_FULL(In);
	DELE_PTR_FULL(Loop);
	DELE_PTR_FULL(Out);
}

void FPetAnimationDataJump::AfterRead()
{
	READ_PTR_FULL(JumpStart, UAnimSequenceBase);
	READ_PTR_FULL(JumpCycle, UAnimSequenceBase);
	READ_PTR_FULL(PreImpact, UAnimSequenceBase);
	READ_PTR_FULL(LandLight, UAnimSequenceBase);
}

void FPetAnimationDataJump::BeforeDelete()
{
	DELE_PTR_FULL(JumpStart);
	DELE_PTR_FULL(JumpCycle);
	DELE_PTR_FULL(PreImpact);
	DELE_PTR_FULL(LandLight);
}

void FHeldStateSpecificBlendWeight::AfterRead()
{
}

void FHeldStateSpecificBlendWeight::BeforeDelete()
{
}

void FJumpHeldAdditiveBlendWeight::AfterRead()
{
}

void FJumpHeldAdditiveBlendWeight::BeforeDelete()
{
}

void FPetAnimationDataBeingHeld::AfterRead()
{
	READ_PTR_FULL(DefaultIdle, UAnimSequenceBase);
	READ_PTR_FULL(Equip, UAnimSequenceBase);
	READ_PTR_FULL(Drop, UAnimSequenceBase);
	READ_PTR_FULL(Chew, UAnimSequenceBase);
	READ_PTR_FULL(PositiveFeedingReact, UAnimSequenceBase);
	READ_PTR_FULL(PositiveFeedingReactShown, UAnimSequenceBase);
	READ_PTR_FULL(NegativeFeedingReact, UAnimSequenceBase);
	READ_PTR_FULL(NegativeFeedingReactShown, UAnimSequenceBase);
	READ_PTR_FULL(RefuseFeedingReact, UAnimSequenceBase);
	READ_PTR_FULL(RefuseFeedingReactShown, UAnimSequenceBase);
	READ_PTR_FULL(Locomotion, UBlendSpace);
	READ_PTR_FULL(ShowingLocomotion, UBlendSpace);
	READ_PTR_FULL(Underwater, UAnimSequenceBase);
	READ_PTR_FULL(ShowingUnderwater, UAnimSequenceBase);
}

void FPetAnimationDataBeingHeld::BeforeDelete()
{
	DELE_PTR_FULL(DefaultIdle);
	DELE_PTR_FULL(Equip);
	DELE_PTR_FULL(Drop);
	DELE_PTR_FULL(Chew);
	DELE_PTR_FULL(PositiveFeedingReact);
	DELE_PTR_FULL(PositiveFeedingReactShown);
	DELE_PTR_FULL(NegativeFeedingReact);
	DELE_PTR_FULL(NegativeFeedingReactShown);
	DELE_PTR_FULL(RefuseFeedingReact);
	DELE_PTR_FULL(RefuseFeedingReactShown);
	DELE_PTR_FULL(Locomotion);
	DELE_PTR_FULL(ShowingLocomotion);
	DELE_PTR_FULL(Underwater);
	DELE_PTR_FULL(ShowingUnderwater);
}

void FPetAnimationDataRoaming::AfterRead()
{
	READ_PTR_FULL(RoamingAnimationStateDefinitionsAsset, UPetRoamingAnimationStateDefinitionsDataAsset);
	READ_PTR_FULL(Locomotion_In, UAnimSequenceBase);
	READ_PTR_FULL(Locomotion, UBlendSpace1D);
	READ_PTR_FULL(Locomotion_Out, UAnimSequenceBase);
	READ_PTR_FULL(Locomotion_Scared, UAnimSequenceBase);
	READ_PTR_FULL(Locomotion_Sad_Additive, UAnimSequenceBase);
	READ_PTR_FULL(TurnLeft, UAnimSequenceBase);
	READ_PTR_FULL(TurnRight, UAnimSequenceBase);
	READ_PTR_FULL(TurnLeftIntoLocomotion, UAnimSequenceBase);
	READ_PTR_FULL(TurnRightIntoLocomotion, UAnimSequenceBase);
	READ_PTR_FULL(Arrive, UAnimSequenceBase);
	READ_PTR_FULL(Exit, UAnimSequenceBase);
	READ_PTR_FULL(LandingLoop, UAnimSequenceBase);
	READ_PTR_FULL(Landing_Out, UAnimSequenceBase);
	READ_PTR_FULL(TakingOff_In, UAnimSequenceBase);
	READ_PTR_FULL(TakingOffLoop, UAnimSequenceBase);
	READ_PTR_FULL(Flying, UBlendSpace1D);
	READ_PTR_FULL(Flying_Scared, UAnimSequenceBase);
	READ_PTR_FULL(PositiveMood, UAnimSequenceBase);
	READ_PTR_FULL(CloseRadiusPositiveMood, UAnimSequenceBase);
}

void FPetAnimationDataRoaming::BeforeDelete()
{
	DELE_PTR_FULL(RoamingAnimationStateDefinitionsAsset);
	DELE_PTR_FULL(Locomotion_In);
	DELE_PTR_FULL(Locomotion);
	DELE_PTR_FULL(Locomotion_Out);
	DELE_PTR_FULL(Locomotion_Scared);
	DELE_PTR_FULL(Locomotion_Sad_Additive);
	DELE_PTR_FULL(TurnLeft);
	DELE_PTR_FULL(TurnRight);
	DELE_PTR_FULL(TurnLeftIntoLocomotion);
	DELE_PTR_FULL(TurnRightIntoLocomotion);
	DELE_PTR_FULL(Arrive);
	DELE_PTR_FULL(Exit);
	DELE_PTR_FULL(LandingLoop);
	DELE_PTR_FULL(Landing_Out);
	DELE_PTR_FULL(TakingOff_In);
	DELE_PTR_FULL(TakingOffLoop);
	DELE_PTR_FULL(Flying);
	DELE_PTR_FULL(Flying_Scared);
	DELE_PTR_FULL(PositiveMood);
	DELE_PTR_FULL(CloseRadiusPositiveMood);
}

void FPetAnimationDataStructure::AfterRead()
{
	READ_PTR_FULL(WeightedAnimationLoadOnDemandDataRoaming, UWeightedAnimationLoadOnDemandDataAsset);
	READ_PTR_FULL(WeightedAnimationLoadOnDemandDataHeld, UWeightedAnimationLoadOnDemandDataAsset);
	READ_PTR_FULL(WeightedAnimationLoadOnDemandDataShow, UWeightedAnimationLoadOnDemandDataAsset);
}

void FPetAnimationDataStructure::BeforeDelete()
{
	DELE_PTR_FULL(WeightedAnimationLoadOnDemandDataRoaming);
	DELE_PTR_FULL(WeightedAnimationLoadOnDemandDataHeld);
	DELE_PTR_FULL(WeightedAnimationLoadOnDemandDataShow);
}

void FAggressiveGhostShipMineFormation::AfterRead()
{
}

void FAggressiveGhostShipMineFormation::BeforeDelete()
{
}

void FAggressiveGhostShipMineFormationOptions::AfterRead()
{
}

void FAggressiveGhostShipMineFormationOptions::BeforeDelete()
{
}

void FAggressiveGhostShipsEncounterHeightPerIslandOffsets::AfterRead()
{
}

void FAggressiveGhostShipsEncounterHeightPerIslandOffsets::BeforeDelete()
{
}

void FGameEventServiceDesc::AfterRead()
{
}

void FGameEventServiceDesc::BeforeDelete()
{
}

void FAggressiveGhostShipsEncounterServiceDesc::AfterRead()
{
	FGameEventServiceDesc::AfterRead();

}

void FAggressiveGhostShipsEncounterServiceDesc::BeforeDelete()
{
	FGameEventServiceDesc::BeforeDelete();

}

void FFishingComedyItemInfo::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FFishingComedyItemInfo::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FEventCompanyProgressUpdateNotification::AfterRead()
{
}

void FEventCompanyProgressUpdateNotification::BeforeDelete()
{
}

void FRegisterCeremonyInterface::AfterRead()
{
}

void FRegisterCeremonyInterface::BeforeDelete()
{
}

void FOwnedCrewCostumes::AfterRead()
{
}

void FOwnedCrewCostumes::BeforeDelete()
{
}

void FUpdateContestUI::AfterRead()
{
}

void FUpdateContestUI::BeforeDelete()
{
}

void FContestChestDugUpEvent::AfterRead()
{
	READ_PTR_FULL(DiscoveringCharacter, AActor);
	READ_PTR_FULL(TreasureChestItemInformation, AItemInfo);
}

void FContestChestDugUpEvent::BeforeDelete()
{
	DELE_PTR_FULL(DiscoveringCharacter);
	DELE_PTR_FULL(TreasureChestItemInformation);
}

void FWeightedEmergentContestVoyageRecipe::AfterRead()
{
	READ_PTR_FULL(ContestVoyage, UEmergentContestVoyageRecipeDataAsset);
}

void FWeightedEmergentContestVoyageRecipe::BeforeDelete()
{
	DELE_PTR_FULL(ContestVoyage);
}

void FWeightedTallTaleContestRecipe::AfterRead()
{
	READ_PTR_FULL(TallTaleContest, UTallTaleContestRecipeDataAsset);
}

void FWeightedTallTaleContestRecipe::BeforeDelete()
{
	DELE_PTR_FULL(TallTaleContest);
}

void FWeightedContestList::AfterRead()
{
}

void FWeightedContestList::BeforeDelete()
{
}

void FCachedRespawnPoint::AfterRead()
{
	READ_PTR_FULL(AllocatedSpawnLocation, AShipSpawnLocation);
}

void FCachedRespawnPoint::BeforeDelete()
{
	DELE_PTR_FULL(AllocatedSpawnLocation);
}

void FSinkShipData::AfterRead()
{
}

void FSinkShipData::BeforeDelete()
{
}

void FEntitlementsFailedEvent::AfterRead()
{
}

void FEntitlementsFailedEvent::BeforeDelete()
{
}

void FEntitlementItem::AfterRead()
{
}

void FEntitlementItem::BeforeDelete()
{
}

void FEntitlementsResponseEvent::AfterRead()
{
}

void FEntitlementsResponseEvent::BeforeDelete()
{
}

void FEntitlementsRequestEvent::AfterRead()
{
}

void FEntitlementsRequestEvent::BeforeDelete()
{
}

void FEventObjectStateMigrationImpl::AfterRead()
{
}

void FEventObjectStateMigrationImpl::BeforeDelete()
{
}

void FEventReceiveExplosiveComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UExplosiveComponent);
}

void FEventReceiveExplosiveComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FFaunaAnimationIndexStruct::AfterRead()
{
}

void FFaunaAnimationIndexStruct::BeforeDelete()
{
}

void FObjectHitDetectedEvent::AfterRead()
{
}

void FObjectHitDetectedEvent::BeforeDelete()
{
}

void FBuriedBuriable::AfterRead()
{
}

void FBuriedBuriable::BeforeDelete()
{
}

void FEventImpactVfxSpawned::AfterRead()
{
}

void FEventImpactVfxSpawned::BeforeDelete()
{
}

void FActivePlayerState::AfterRead()
{
}

void FActivePlayerState::BeforeDelete()
{
}

void FEventInactivityDetectionActionPerformed::AfterRead()
{
}

void FEventInactivityDetectionActionPerformed::BeforeDelete()
{
}

void FPirateGeneratorBakeTelemetryEvent::AfterRead()
{
}

void FPirateGeneratorBakeTelemetryEvent::BeforeDelete()
{
}

void FPirateGeneratorBakeFailureTelemetryEvent::AfterRead()
{
	FPirateGeneratorBakeTelemetryEvent::AfterRead();

}

void FPirateGeneratorBakeFailureTelemetryEvent::BeforeDelete()
{
	FPirateGeneratorBakeTelemetryEvent::BeforeDelete();

}

void FPiratePreviewShutdownEvent::AfterRead()
{
}

void FPiratePreviewShutdownEvent::BeforeDelete()
{
}

void FPiratePreviewBusyEvent::AfterRead()
{
}

void FPiratePreviewBusyEvent::BeforeDelete()
{
}

void FPiratePreviewReadyEvent::AfterRead()
{
}

void FPiratePreviewReadyEvent::BeforeDelete()
{
}

void FPiratePreviewMoveCameraEvent::AfterRead()
{
}

void FPiratePreviewMoveCameraEvent::BeforeDelete()
{
}

void FPiratePreviewView::AfterRead()
{
	READ_PTR_FULL(Anim, UAnimationAsset);
}

void FPiratePreviewView::BeforeDelete()
{
	DELE_PTR_FULL(Anim);
}

void FPiratePreviewGeneratePirateEvent::AfterRead()
{
}

void FPiratePreviewGeneratePirateEvent::BeforeDelete()
{
}

void FPiratePreviewLoadingEvent::AfterRead()
{
}

void FPiratePreviewLoadingEvent::BeforeDelete()
{
}

void FPiratePreviewLoadedEvent::AfterRead()
{
}

void FPiratePreviewLoadedEvent::BeforeDelete()
{
}

void FPiratePreviewCreatedEvent::AfterRead()
{
}

void FPiratePreviewCreatedEvent::BeforeDelete()
{
}

void FRequestClearClothingCategoryPiratePreviewEvent::AfterRead()
{
}

void FRequestClearClothingCategoryPiratePreviewEvent::BeforeDelete()
{
}

void FRequestRandomiseClothingCategoryPiratePreviewEvent::AfterRead()
{
}

void FRequestRandomiseClothingCategoryPiratePreviewEvent::BeforeDelete()
{
}

void FRequestEquipClothingPiratePreviewEvent::AfterRead()
{
}

void FRequestEquipClothingPiratePreviewEvent::BeforeDelete()
{
}

void FRequestDestroyPiratePreviewEvent::AfterRead()
{
}

void FRequestDestroyPiratePreviewEvent::BeforeDelete()
{
}

void FRequestCreatePiratePreviewEvent::AfterRead()
{
}

void FRequestCreatePiratePreviewEvent::BeforeDelete()
{
}

void FCrewCancelVoteToChangeMatchmakingVisibilityEvent::AfterRead()
{
}

void FCrewCancelVoteToChangeMatchmakingVisibilityEvent::BeforeDelete()
{
}

void FCrewVoteToChangeMatchmakingVisibilityEvent::AfterRead()
{
}

void FCrewVoteToChangeMatchmakingVisibilityEvent::BeforeDelete()
{
}

void FInviteFriendsEvent::AfterRead()
{
}

void FInviteFriendsEvent::BeforeDelete()
{
}

void FShipCancelVoteToScuttleEvent::AfterRead()
{
}

void FShipCancelVoteToScuttleEvent::BeforeDelete()
{
}

void FShipVoteToScuttleEvent::AfterRead()
{
}

void FShipVoteToScuttleEvent::BeforeDelete()
{
}

void FCrewCancelVoteOutOfBrigEvent::AfterRead()
{
}

void FCrewCancelVoteOutOfBrigEvent::BeforeDelete()
{
}

void FCrewVoteOutOfBrigEvent::AfterRead()
{
}

void FCrewVoteOutOfBrigEvent::BeforeDelete()
{
}

void FCrewCancelVoteToBrigEvent::AfterRead()
{
}

void FCrewCancelVoteToBrigEvent::BeforeDelete()
{
}

void FCrewVoteToBrigEvent::AfterRead()
{
}

void FCrewVoteToBrigEvent::BeforeDelete()
{
}

void FPremiumStoreTimeLimited::AfterRead()
{
}

void FPremiumStoreTimeLimited::BeforeDelete()
{
}

void FPremiumStoreBundleOffer::AfterRead()
{
	FShopOffer::AfterRead();

}

void FPremiumStoreBundleOffer::BeforeDelete()
{
	FShopOffer::BeforeDelete();

}

void FPremiumStoreBundleItem::AfterRead()
{
	FShopOffer::AfterRead();

}

void FPremiumStoreBundleItem::BeforeDelete()
{
	FShopOffer::BeforeDelete();

}

void FPremiumStoreBundleView::AfterRead()
{
}

void FPremiumStoreBundleView::BeforeDelete()
{
}

void FPremiumStoreOffer::AfterRead()
{
	FShopOffer::AfterRead();

}

void FPremiumStoreOffer::BeforeDelete()
{
	FShopOffer::BeforeDelete();

}

void FPremiumStoreItemsView::AfterRead()
{
}

void FPremiumStoreItemsView::BeforeDelete()
{
}

void FPremiumStoreBundleSetView::AfterRead()
{
}

void FPremiumStoreBundleSetView::BeforeDelete()
{
}

void FPremiumStoreItemsSetView::AfterRead()
{
}

void FPremiumStoreItemsSetView::BeforeDelete()
{
}

void FPremiumStoreCardView::AfterRead()
{
}

void FPremiumStoreCardView::BeforeDelete()
{
}

void FPremiumStoreCardsView::AfterRead()
{
}

void FPremiumStoreCardsView::BeforeDelete()
{
}

void FPremiumStoreItemView::AfterRead()
{
	FPremiumStoreOffer::AfterRead();

}

void FPremiumStoreItemView::BeforeDelete()
{
	FPremiumStoreOffer::BeforeDelete();

}

void FPremiumStoreLandingPageItem::AfterRead()
{
}

void FPremiumStoreLandingPageItem::BeforeDelete()
{
}

void FPremiumStoreLandingPageTab::AfterRead()
{
}

void FPremiumStoreLandingPageTab::BeforeDelete()
{
}

void FPremiumStoreLandingPage::AfterRead()
{
}

void FPremiumStoreLandingPage::BeforeDelete()
{
}

void FPremiumStoreOffersEvent::AfterRead()
{
}

void FPremiumStoreOffersEvent::BeforeDelete()
{
}

void FRequestPremiumStoreOffersEvent::AfterRead()
{
}

void FRequestPremiumStoreOffersEvent::BeforeDelete()
{
}

void FEventStatueThreatWasDamaged::AfterRead()
{
}

void FEventStatueThreatWasDamaged::BeforeDelete()
{
}

void FEventBuriableAdded::AfterRead()
{
}

void FEventBuriableAdded::BeforeDelete()
{
}

void FReapersMarkLevelChanged::AfterRead()
{
}

void FReapersMarkLevelChanged::BeforeDelete()
{
}

void FReapersMarkResetVoyageProgress::AfterRead()
{
}

void FReapersMarkResetVoyageProgress::BeforeDelete()
{
}

void FReapersMarkUpdateVoyageProgress::AfterRead()
{
}

void FReapersMarkUpdateVoyageProgress::BeforeDelete()
{
}

void FRevealerDisabledEvent::AfterRead()
{
}

void FRevealerDisabledEvent::BeforeDelete()
{
}

void FRevealerEnabledEvent::AfterRead()
{
}

void FRevealerEnabledEvent::BeforeDelete()
{
}

void FRevealableComponentDespawnedEvent::AfterRead()
{
}

void FRevealableComponentDespawnedEvent::BeforeDelete()
{
}

void FRevealableComponentSpawnedEvent::AfterRead()
{
}

void FRevealableComponentSpawnedEvent::BeforeDelete()
{
}

void FDisplayShutdownTimerMessageClient::AfterRead()
{
}

void FDisplayShutdownTimerMessageClient::BeforeDelete()
{
}

void FCatalog::AfterRead()
{
}

void FCatalog::BeforeDelete()
{
}

void FCompanyLevelClaim::AfterRead()
{
}

void FCompanyLevelClaim::BeforeDelete()
{
}

void FEntitlementsUpdatedMessage::AfterRead()
{
}

void FEntitlementsUpdatedMessage::BeforeDelete()
{
}

void FPurchaseOfferResponse::AfterRead()
{
}

void FPurchaseOfferResponse::BeforeDelete()
{
}

void FPurchaseRequestFailedResponse::AfterRead()
{
}

void FPurchaseRequestFailedResponse::BeforeDelete()
{
}

void FPurchaseRequestSuccessResponse::AfterRead()
{
}

void FPurchaseRequestSuccessResponse::BeforeDelete()
{
}

void FEntitlementInfo::AfterRead()
{
}

void FEntitlementInfo::BeforeDelete()
{
}

void FCreatePirateRequestEvent::AfterRead()
{
}

void FCreatePirateRequestEvent::BeforeDelete()
{
}

void FPirateProfileImageModel::AfterRead()
{
}

void FPirateProfileImageModel::BeforeDelete()
{
}

void FProposedTaleEntry::AfterRead()
{
	READ_PTR_FULL(TaleData, UVoyageDescDataAsset);
	READ_PTR_FULL(ProposingObject, AActor);
}

void FProposedTaleEntry::BeforeDelete()
{
	DELE_PTR_FULL(TaleData);
	DELE_PTR_FULL(ProposingObject);
}

void FTaleProposalVoteSlotUpdatedEvent::AfterRead()
{
	READ_PTR_FULL(CurrentActiveTale, UVoyageDescDataAsset);
}

void FTaleProposalVoteSlotUpdatedEvent::BeforeDelete()
{
	DELE_PTR_FULL(CurrentActiveTale);
}

void FProposedVoyageEntry::AfterRead()
{
	READ_PTR_FULL(ProposalDesc, UVoyageProposalDesc);
	READ_PTR_FULL(ProposingPlayerState, AAthenaPlayerState);
}

void FProposedVoyageEntry::BeforeDelete()
{
	DELE_PTR_FULL(ProposalDesc);
	DELE_PTR_FULL(ProposingPlayerState);
}

void FVoyageProposalVoteSlotUpdatedEvent::AfterRead()
{
}

void FVoyageProposalVoteSlotUpdatedEvent::BeforeDelete()
{
}

void FVoyageProposedEvent::AfterRead()
{
	READ_PTR_FULL(ProposalDesc, UVoyageProposalDesc);
	READ_PTR_FULL(Proposer, APlayerState);
}

void FVoyageProposedEvent::BeforeDelete()
{
	DELE_PTR_FULL(ProposalDesc);
	DELE_PTR_FULL(Proposer);
}

void FEventPlayerWithdrewVoyage::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FEventPlayerWithdrewVoyage::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventWaterSplashExitWater::AfterRead()
{
}

void FEventWaterSplashExitWater::BeforeDelete()
{
}

void FEventWaterSplashEnterWater::AfterRead()
{
}

void FEventWaterSplashEnterWater::BeforeDelete()
{
}

void FSlidingDoorOpenedEvent::AfterRead()
{
}

void FSlidingDoorOpenedEvent::BeforeDelete()
{
}

void FSwingDoorOpenedEvent::AfterRead()
{
}

void FSwingDoorOpenedEvent::BeforeDelete()
{
}

void FEventReceiveOpenableItemComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UOpenableItemComponent);
}

void FEventReceiveOpenableItemComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FEventOpenableItemAnimationFinished::AfterRead()
{
}

void FEventOpenableItemAnimationFinished::BeforeDelete()
{
}

void FEventOpenableItemStateChanged::AfterRead()
{
}

void FEventOpenableItemStateChanged::BeforeDelete()
{
}

void FEventNotifyOpenableItemState::AfterRead()
{
}

void FEventNotifyOpenableItemState::BeforeDelete()
{
}

void FTradeRouteMapData::AfterRead()
{
	FRegionMapData::AfterRead();

}

void FTradeRouteMapData::BeforeDelete()
{
	FRegionMapData::BeforeDelete();

}

void FEventActorRoleChanged::AfterRead()
{
}

void FEventActorRoleChanged::BeforeDelete()
{
}

void FEventAIOnDelayedAssignedMeshConsumed::AfterRead()
{
	READ_PTR_FULL(MeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(ConsumedMesh, USkeletalMesh);
}

void FEventAIOnDelayedAssignedMeshConsumed::BeforeDelete()
{
	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(ConsumedMesh);
}

void FPlayerEntitlementUpdatedEvent::AfterRead()
{
}

void FPlayerEntitlementUpdatedEvent::BeforeDelete()
{
}

void FEventPlayerPirateIdentityDeemedInactive::AfterRead()
{
}

void FEventPlayerPirateIdentityDeemedInactive::BeforeDelete()
{
}

void FEventPlayerPirateIdentityInvalidated::AfterRead()
{
}

void FEventPlayerPirateIdentityInvalidated::BeforeDelete()
{
}

void FEventPlayerPirateIdentityReady::AfterRead()
{
}

void FEventPlayerPirateIdentityReady::BeforeDelete()
{
}

void FBaseTelemetryFragment::AfterRead()
{
}

void FBaseTelemetryFragment::BeforeDelete()
{
}

void FClientTelemetryFragment::AfterRead()
{
}

void FClientTelemetryFragment::BeforeDelete()
{
}

void FClientDeveloperTelemetryEvent::AfterRead()
{
	FDeveloperTelemetryPayload::AfterRead();

}

void FClientDeveloperTelemetryEvent::BeforeDelete()
{
	FDeveloperTelemetryPayload::BeforeDelete();

}

void FServerTenancyTelemetryFragment::AfterRead()
{
}

void FServerTenancyTelemetryFragment::BeforeDelete()
{
}

void FServerTelemetryFragment::AfterRead()
{
}

void FServerTelemetryFragment::BeforeDelete()
{
}

void FServerDeveloperTelemetryEvent::AfterRead()
{
	FDeveloperTelemetryPayload::AfterRead();

}

void FServerDeveloperTelemetryEvent::BeforeDelete()
{
	FDeveloperTelemetryPayload::BeforeDelete();

}

void FPlayerBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FPlayerBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FPlayerBaseTelemetryFragment::AfterRead()
{
}

void FPlayerBaseTelemetryFragment::BeforeDelete()
{
}

void FPlayerPositionTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FPlayerPositionTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FPlayerPositionTelemetryFragment::AfterRead()
{
}

void FPlayerPositionTelemetryFragment::BeforeDelete()
{
}

void FRPCTelemetryFragment::AfterRead()
{
}

void FRPCTelemetryFragment::BeforeDelete()
{
}

void FCampaignGoalProgressEvent::AfterRead()
{
}

void FCampaignGoalProgressEvent::BeforeDelete()
{
}

void FCampaignGoalModel::AfterRead()
{
}

void FCampaignGoalModel::BeforeDelete()
{
}

void FCampaignGoalProgressMessage::AfterRead()
{
}

void FCampaignGoalProgressMessage::BeforeDelete()
{
}

void FNPCDemandMultiplier::AfterRead()
{
}

void FNPCDemandMultiplier::BeforeDelete()
{
}

void FCommodityDemandMultipliers::AfterRead()
{
}

void FCommodityDemandMultipliers::BeforeDelete()
{
}

void FPeriodicCommodityMultipliers::AfterRead()
{
}

void FPeriodicCommodityMultipliers::BeforeDelete()
{
}

void FRemoteCommodityDemandData::AfterRead()
{
}

void FRemoteCommodityDemandData::BeforeDelete()
{
}

void FCommodityDemandModel::AfterRead()
{
}

void FCommodityDemandModel::BeforeDelete()
{
}

void FEmissaryLeaderboardScoreUpdatedEvent::AfterRead()
{
}

void FEmissaryLeaderboardScoreUpdatedEvent::BeforeDelete()
{
}

void FLeaderboardScoreUpdateMessage::AfterRead()
{
}

void FLeaderboardScoreUpdateMessage::BeforeDelete()
{
}

void FNotesManagementRemoteServiceNoteTextModel::AfterRead()
{
}

void FNotesManagementRemoteServiceNoteTextModel::BeforeDelete()
{
}

void FNotesManagementRemoteServiceAddNoteModel::AfterRead()
{
}

void FNotesManagementRemoteServiceAddNoteModel::BeforeDelete()
{
}

void FCompletionEventsRemoteServiceModel::AfterRead()
{
}

void FCompletionEventsRemoteServiceModel::BeforeDelete()
{
}

void FNotesRemoteServiceModel::AfterRead()
{
}

void FNotesRemoteServiceModel::BeforeDelete()
{
}

void FNotesRemoteServiceNoteDetailModel::AfterRead()
{
}

void FNotesRemoteServiceNoteDetailModel::BeforeDelete()
{
}

void FNotesRemoteServiceNoteModel::AfterRead()
{
}

void FNotesRemoteServiceNoteModel::BeforeDelete()
{
}

void FGenericLightTemplate::AfterRead()
{
}

void FGenericLightTemplate::BeforeDelete()
{
}

void FClientRequestAsyncLoadingCompleteAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FClientRequestAsyncLoadingCompleteAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FMaterialInformationTranslationData::AfterRead()
{
	FTableRowBase::AfterRead();

}

void FMaterialInformationTranslationData::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

}

void FTrackedActorEntry::AfterRead()
{
}

void FTrackedActorEntry::BeforeDelete()
{
}

void FTrackedActorTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FTrackedActorTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FTreasureChestSoldInAllianceNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FTreasureChestSoldInAllianceNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FTreasureChestSoldNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FTreasureChestSoldNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FCampaignInfo::AfterRead()
{
}

void FCampaignInfo::BeforeDelete()
{
}

void FPotentialChainNode::AfterRead()
{
	READ_PTR_FULL(NodeActor, AActor);
}

void FPotentialChainNode::BeforeDelete()
{
	DELE_PTR_FULL(NodeActor);
}

void FHiddenActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FHiddenActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FViewVoyageBanners::AfterRead()
{
}

void FViewVoyageBanners::BeforeDelete()
{
}

void FVoyageParticipantView::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FVoyageParticipantView::BeforeDelete()
{
	DELE_PTR_FULL(Company);
	DELE_PTR_FULL(PopUpDesc);
}

void FVoyageParticipantViewContainer::AfterRead()
{
}

void FVoyageParticipantViewContainer::BeforeDelete()
{
}

void FAthenaCharacterSwimSpeed::AfterRead()
{
}

void FAthenaCharacterSwimSpeed::BeforeDelete()
{
}

void FAthenaCharacterSwimParams::AfterRead()
{
}

void FAthenaCharacterSwimParams::BeforeDelete()
{
}

void FSharedShovelParams::AfterRead()
{
}

void FSharedShovelParams::BeforeDelete()
{
}

void FBeaconLitWithFlameOfFateStatsToFire::AfterRead()
{
}

void FBeaconLitWithFlameOfFateStatsToFire::BeforeDelete()
{
}

void FAthenaCharacterDodgeParams::AfterRead()
{
}

void FAthenaCharacterDodgeParams::BeforeDelete()
{
}

void FItemUseSpeedParams::AfterRead()
{
}

void FItemUseSpeedParams::BeforeDelete()
{
}

void FCannonEnchantmentDesc::AfterRead()
{
	READ_PTR_FULL(MuzzleFlashVfxFirstPerson, UObject);
	READ_PTR_FULL(MuzzleFlashVfxThirdPerson, UObject);
	READ_PTR_FULL(FireSfx, UWwiseEvent);
}

void FCannonEnchantmentDesc::BeforeDelete()
{
	DELE_PTR_FULL(MuzzleFlashVfxFirstPerson);
	DELE_PTR_FULL(MuzzleFlashVfxThirdPerson);
	DELE_PTR_FULL(FireSfx);
}

void FCategoryDefaultsUnit::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FCategoryDefaultsUnit::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FEmissaryLevelMultiplierModel::AfterRead()
{
}

void FEmissaryLevelMultiplierModel::BeforeDelete()
{
}

void FEmissaryRewardMultiplierModel::AfterRead()
{
}

void FEmissaryRewardMultiplierModel::BeforeDelete()
{
}

void FNPCOnSurfaceCannonManagerCrewSizeSettings::AfterRead()
{
}

void FNPCOnSurfaceCannonManagerCrewSizeSettings::BeforeDelete()
{
}

void FIndividualMeshScoringToAdd::AfterRead()
{
}

void FIndividualMeshScoringToAdd::BeforeDelete()
{
}

void FParticleSystemPicker::AfterRead()
{
	READ_PTR_FULL(ObserverAboveEffectAboveWater, UParticleSystem);
	READ_PTR_FULL(ObserverBelowEffectBelowWater, UParticleSystem);
	READ_PTR_FULL(ObserverAboveEffectBelowWater, UParticleSystem);
	READ_PTR_FULL(ObserverBelowEffectAboveWater, UParticleSystem);
}

void FParticleSystemPicker::BeforeDelete()
{
	DELE_PTR_FULL(ObserverAboveEffectAboveWater);
	DELE_PTR_FULL(ObserverBelowEffectBelowWater);
	DELE_PTR_FULL(ObserverAboveEffectBelowWater);
	DELE_PTR_FULL(ObserverBelowEffectAboveWater);
}

void FRainZoneParametersAndLocation::AfterRead()
{
}

void FRainZoneParametersAndLocation::BeforeDelete()
{
}

void FShipInternalWaterParams::AfterRead()
{
	READ_PTR_FULL(SloshinessCurve, UCurveFloat);
	READ_PTR_FULL(FillPercentageVSMaxRollAngleCurve, UCurveFloat);
}

void FShipInternalWaterParams::BeforeDelete()
{
	DELE_PTR_FULL(SloshinessCurve);
	DELE_PTR_FULL(FillPercentageVSMaxRollAngleCurve);
}

void FWeightedItemDescSpawnData::AfterRead()
{
	READ_PTR_FULL(ItemSpawnData, UItemSpawnData);
}

void FWeightedItemDescSpawnData::BeforeDelete()
{
	DELE_PTR_FULL(ItemSpawnData);
}

void FWeightedItemDescSpawnDataWithRandomQuantity::AfterRead()
{
	FWeightedItemDescSpawnData::AfterRead();

}

void FWeightedItemDescSpawnDataWithRandomQuantity::BeforeDelete()
{
	FWeightedItemDescSpawnData::BeforeDelete();

}

void FWeightedRewardTable::AfterRead()
{
}

void FWeightedRewardTable::BeforeDelete()
{
}

void FAllowedItemsBasedOnFeature::AfterRead()
{
	READ_PTR_FULL(AllowedItems, UContainerAllowedItemsDataAsset);
}

void FAllowedItemsBasedOnFeature::BeforeDelete()
{
	DELE_PTR_FULL(AllowedItems);
}

void FStorageContainerBackingStore::AfterRead()
{
	READ_PTR_FULL(CachedAllowedItems, UContainerAllowedItemsDataAsset);
}

void FStorageContainerBackingStore::BeforeDelete()
{
	DELE_PTR_FULL(CachedAllowedItems);
}

void FStorageContainerWeightedItemListFeatureGroup::AfterRead()
{
}

void FStorageContainerWeightedItemListFeatureGroup::BeforeDelete()
{
}

void FTreasureMapWidgetTextWithScaledWidthBackground::AfterRead()
{
	FTreasureMapWidgetText::AfterRead();

}

void FTreasureMapWidgetTextWithScaledWidthBackground::BeforeDelete()
{
	FTreasureMapWidgetText::BeforeDelete();

}

void FStaticMeshVoteIndicator::AfterRead()
{
	READ_PTR_FULL(Mesh, UStaticMeshComponent);
}

void FStaticMeshVoteIndicator::BeforeDelete()
{
	DELE_PTR_FULL(Mesh);
}

void FInlineVotingParameterSet::AfterRead()
{
	READ_PTR_FULL(Consumer, UVoteConsumerInlineBase);
	READ_PTR_FULL(Validator, UVoteValidatorInlineBase);
}

void FInlineVotingParameterSet::BeforeDelete()
{
	DELE_PTR_FULL(Consumer);
	DELE_PTR_FULL(Validator);
}

void FQuestVariableTransform::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableTransform::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FSwimmingCreatureAIStrategyMovementProperties::AfterRead()
{
	READ_PTR_FULL(AIStrategy, UClass);
}

void FSwimmingCreatureAIStrategyMovementProperties::BeforeDelete()
{
	DELE_PTR_FULL(AIStrategy);
}

void FSwimmingCreatureMovementReplicatedData::AfterRead()
{
}

void FSwimmingCreatureMovementReplicatedData::BeforeDelete()
{
}

void FSwimmingCreatureImpactAnimData::AfterRead()
{
	READ_PTR_FULL(ImpactAnim, UAnimSequenceBase);
}

void FSwimmingCreatureImpactAnimData::BeforeDelete()
{
	DELE_PTR_FULL(ImpactAnim);
}

void FAIStrategySpeedOverride::AfterRead()
{
	READ_PTR_FULL(Strategy, UClass);
}

void FAIStrategySpeedOverride::BeforeDelete()
{
	DELE_PTR_FULL(Strategy);
}

void FMastDesc::AfterRead()
{
	READ_PTR_FULL(MastUnbrokenMesh, UStaticMesh);
	READ_PTR_FULL(MastMainYardMesh, UStaticMesh);
	READ_PTR_FULL(MastTopYardMesh, UStaticMesh);
	READ_PTR_FULL(MastTopgallantYardMesh, UStaticMesh);
	READ_PTR_FULL(MastPennantMesh, UStaticMesh);
	READ_PTR_FULL(MastSecondaryPennantMesh, UStaticMesh);
	READ_PTR_FULL(MastCrowsNestMesh, UStaticMesh);
}

void FMastDesc::BeforeDelete()
{
	DELE_PTR_FULL(MastUnbrokenMesh);
	DELE_PTR_FULL(MastMainYardMesh);
	DELE_PTR_FULL(MastTopYardMesh);
	DELE_PTR_FULL(MastTopgallantYardMesh);
	DELE_PTR_FULL(MastPennantMesh);
	DELE_PTR_FULL(MastSecondaryPennantMesh);
	DELE_PTR_FULL(MastCrowsNestMesh);
}

void FQuestVariableShipwreck::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableShipwreck::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FFlamethrowerStatusOverride::AfterRead()
{
}

void FFlamethrowerStatusOverride::BeforeDelete()
{
}

void FMechanismBindingSettings::AfterRead()
{
}

void FMechanismBindingSettings::BeforeDelete()
{
}

void FMechanismBinding::AfterRead()
{
}

void FMechanismBinding::BeforeDelete()
{
}

void FFeatureToggledMechanismGroups::AfterRead()
{
}

void FFeatureToggledMechanismGroups::BeforeDelete()
{
}

void FStreamersResponse::AfterRead()
{
}

void FStreamersResponse::BeforeDelete()
{
}

void FEventCharacterFootExitWater::AfterRead()
{
}

void FEventCharacterFootExitWater::BeforeDelete()
{
}

void FEventCharacterFootImpact::AfterRead()
{
}

void FEventCharacterFootImpact::BeforeDelete()
{
}

void FClientMeleeHitRegInfoTelemetryEvent::AfterRead()
{
}

void FClientMeleeHitRegInfoTelemetryEvent::BeforeDelete()
{
}

void FServerMeleeHitRegInfoTelemetryEvent::AfterRead()
{
}

void FServerMeleeHitRegInfoTelemetryEvent::BeforeDelete()
{
}

void FMeleeWeaponAttackTelemetryEvent::AfterRead()
{
}

void FMeleeWeaponAttackTelemetryEvent::BeforeDelete()
{
}

void FMeleeAttackMoveSpeedValidationTelemetryEvent::AfterRead()
{
}

void FMeleeAttackMoveSpeedValidationTelemetryEvent::BeforeDelete()
{
}

void FAIKnockbackActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FAIKnockbackActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FBeingRetractedActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(RetractingComponent, USceneComponent);
}

void FBeingRetractedActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(RetractingComponent);
}

void FServerStartingForcedShutdownEvent::AfterRead()
{
}

void FServerStartingForcedShutdownEvent::BeforeDelete()
{
}

void FClientScheduleShutdownNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FClientScheduleShutdownNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FScheduledShutdownSettingsClient::AfterRead()
{
}

void FScheduledShutdownSettingsClient::BeforeDelete()
{
}

void FServerPerformanceHeartbeatTelemetryEvent::AfterRead()
{
}

void FServerPerformanceHeartbeatTelemetryEvent::BeforeDelete()
{
}

void FDisplayServiceStatusNotificationClient::AfterRead()
{
}

void FDisplayServiceStatusNotificationClient::BeforeDelete()
{
}

void FPlayerEnteredFortVicinityEvent::AfterRead()
{
	READ_PTR_FULL(Player, AActor);
}

void FPlayerEnteredFortVicinityEvent::BeforeDelete()
{
	DELE_PTR_FULL(Player);
}

void FFortOfTheDamnedCompletedEvent::AfterRead()
{
}

void FFortOfTheDamnedCompletedEvent::BeforeDelete()
{
}

void FFortCompletedEvent::AfterRead()
{
}

void FFortCompletedEvent::BeforeDelete()
{
}

void FFortStartedEvent::AfterRead()
{
}

void FFortStartedEvent::BeforeDelete()
{
}

void FFortCompletedTelemetryEvent::AfterRead()
{
}

void FFortCompletedTelemetryEvent::BeforeDelete()
{
}

void FFortStartedTelemetryEvent::AfterRead()
{
}

void FFortStartedTelemetryEvent::BeforeDelete()
{
}

void FFortDespawnTelemetryEvent::AfterRead()
{
}

void FFortDespawnTelemetryEvent::BeforeDelete()
{
}

void FFortSpawnTelemetryEvent::AfterRead()
{
}

void FFortSpawnTelemetryEvent::BeforeDelete()
{
}

void FFortKeyUsedTelemetryEvent::AfterRead()
{
}

void FFortKeyUsedTelemetryEvent::BeforeDelete()
{
}

void FFortTargetKilledTelemetryEvent::AfterRead()
{
}

void FFortTargetKilledTelemetryEvent::BeforeDelete()
{
}

void FFortWaveCompletedTelemetryEvent::AfterRead()
{
}

void FFortWaveCompletedTelemetryEvent::BeforeDelete()
{
}

void FEventGhostShipLevelLoaded::AfterRead()
{
}

void FEventGhostShipLevelLoaded::BeforeDelete()
{
}

void FEventSpawnedAsGhostNotification::AfterRead()
{
}

void FEventSpawnedAsGhostNotification::BeforeDelete()
{
}

void FEventGhostShipDoorDestroyed::AfterRead()
{
	READ_PTR_FULL(GhostShipDoor, AGhostShipDoor);
}

void FEventGhostShipDoorDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(GhostShipDoor);
}

void FEventGhostShipDoorCreated::AfterRead()
{
	READ_PTR_FULL(GhostShipDoor, AGhostShipDoor);
}

void FEventGhostShipDoorCreated::BeforeDelete()
{
	DELE_PTR_FULL(GhostShipDoor);
}

void FInitRHIDiagnosticTelemetryEvent::AfterRead()
{
}

void FInitRHIDiagnosticTelemetryEvent::BeforeDelete()
{
}

void FAchievementUpdatedTelemetry::AfterRead()
{
}

void FAchievementUpdatedTelemetry::BeforeDelete()
{
}

void FAeolusAchievementsUpdatedFromServicesTelemetry::AfterRead()
{
}

void FAeolusAchievementsUpdatedFromServicesTelemetry::BeforeDelete()
{
}

void FAeolusIncorrectAchievementsRemovedTelemetry::AfterRead()
{
}

void FAeolusIncorrectAchievementsRemovedTelemetry::BeforeDelete()
{
}

void FRemoteAchievementCompletionModel::AfterRead()
{
}

void FRemoteAchievementCompletionModel::BeforeDelete()
{
}

void FRemoteAchievementProgressModel::AfterRead()
{
}

void FRemoteAchievementProgressModel::BeforeDelete()
{
}

void FGetFilteredCatalogRequestModel::AfterRead()
{
}

void FGetFilteredCatalogRequestModel::BeforeDelete()
{
}

void FWalletLastKnownBalanceUpdatedEvent::AfterRead()
{
}

void FWalletLastKnownBalanceUpdatedEvent::BeforeDelete()
{
}

void FWalletUpdatedMessage::AfterRead()
{
}

void FWalletUpdatedMessage::BeforeDelete()
{
}

void FCommerceRemoteServiceWalletBalanceResponse::AfterRead()
{
}

void FCommerceRemoteServiceWalletBalanceResponse::BeforeDelete()
{
}

void FEmblemRemoteProgress::AfterRead()
{
}

void FEmblemRemoteProgress::BeforeDelete()
{
}

void FEmblemDefinitionModel::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FEmblemDefinitionModel::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FEmblemServiceFinishedUpdatingProgressEvent::AfterRead()
{
}

void FEmblemServiceFinishedUpdatingProgressEvent::BeforeDelete()
{
}

void FRewardGrantedMessage::AfterRead()
{
}

void FRewardGrantedMessage::BeforeDelete()
{
}

void FCompanyXpGrantedMessage::AfterRead()
{
}

void FCompanyXpGrantedMessage::BeforeDelete()
{
}

void FCurrencyGrantedMessage::AfterRead()
{
}

void FCurrencyGrantedMessage::BeforeDelete()
{
}

void FRewardRequestFailedMessage::AfterRead()
{
}

void FRewardRequestFailedMessage::BeforeDelete()
{
}

void FEquipmentChestItemEntitlementsUpdatedEvent::AfterRead()
{
}

void FEquipmentChestItemEntitlementsUpdatedEvent::BeforeDelete()
{
}

void FRequestEquipmentChestItemLoadoutEvent::AfterRead()
{
}

void FRequestEquipmentChestItemLoadoutEvent::BeforeDelete()
{
}

void FRequestEquipmentChestItemEntitlementsEvent::AfterRead()
{
}

void FRequestEquipmentChestItemEntitlementsEvent::BeforeDelete()
{
}

void FRequestEquipmentChestEquipItemEvent::AfterRead()
{
}

void FRequestEquipmentChestEquipItemEvent::BeforeDelete()
{
}

void FShowPendingInviteEvent::AfterRead()
{
}

void FShowPendingInviteEvent::BeforeDelete()
{
}

void FPromptsCounterModel::AfterRead()
{
}

void FPromptsCounterModel::BeforeDelete()
{
}

void FSeasonGoalCompletionMessage::AfterRead()
{
}

void FSeasonGoalCompletionMessage::BeforeDelete()
{
}

void FAthenaAnimationSwimmingSprintAnimData::AfterRead()
{
	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Loop, UAnimSequence);
	READ_PTR_FULL(IntoUnderwater, UAnimSequence);
	READ_PTR_FULL(LoopUnderwater, UAnimSequence);
}

void FAthenaAnimationSwimmingSprintAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Loop);
	DELE_PTR_FULL(IntoUnderwater);
	DELE_PTR_FULL(LoopUnderwater);
}

void FAthenaAnimationSwimmingAnimData::AfterRead()
{
	READ_PTR_FULL(SwimmingMovement, UBlendSpace);
	READ_PTR_FULL(SwimmingMovementUnderwater, UBlendSpace);
	READ_PTR_FULL(UnderwaterTreadwater, UBlendSpace1D);
}

void FAthenaAnimationSwimmingAnimData::BeforeDelete()
{
	DELE_PTR_FULL(SwimmingMovement);
	DELE_PTR_FULL(SwimmingMovementUnderwater);
	DELE_PTR_FULL(UnderwaterTreadwater);
}

void FAthenaAnimationSpawnAnimData::AfterRead()
{
}

void FAthenaAnimationSpawnAnimData::BeforeDelete()
{
}

void FAthenaAnimationCapstanAnimData::AfterRead()
{
	READ_PTR_FULL(Attach, UAnimSequence);
	READ_PTR_FULL(Detach, UAnimSequence);
	READ_PTR_FULL(PullToNeutral, UBlendSpace1D);
	READ_PTR_FULL(PushToPull, UBlendSpace1D);
	READ_PTR_FULL(PullToPush, UBlendSpace1D);
	READ_PTR_FULL(UpperIntent, UBlendSpace1D);
}

void FAthenaAnimationCapstanAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Attach);
	DELE_PTR_FULL(Detach);
	DELE_PTR_FULL(PullToNeutral);
	DELE_PTR_FULL(PushToPull);
	DELE_PTR_FULL(PullToPush);
	DELE_PTR_FULL(UpperIntent);
}

void FAthenaAnimationActionRelevancy::AfterRead()
{
}

void FAthenaAnimationActionRelevancy::BeforeDelete()
{
}

void FAthenaAnimationLadderTransitionsAnimData::AfterRead()
{
	READ_PTR_FULL(ClimbOnTop, UAnimSequence);
	READ_PTR_FULL(ClimbOffTop, UAnimSequence);
	READ_PTR_FULL(ClimbOnBottom, UAnimSequence);
	READ_PTR_FULL(ClimbOffBottom, UAnimSequence);
	READ_PTR_FULL(ClamberOffTop, UAnimSequence);
}

void FAthenaAnimationLadderTransitionsAnimData::BeforeDelete()
{
	DELE_PTR_FULL(ClimbOnTop);
	DELE_PTR_FULL(ClimbOffTop);
	DELE_PTR_FULL(ClimbOnBottom);
	DELE_PTR_FULL(ClimbOffBottom);
	DELE_PTR_FULL(ClamberOffTop);
}

void FAthenaAnimationLadderAnimData::AfterRead()
{
	READ_PTR_FULL(Climb, UAnimSequence);
	READ_PTR_FULL(Slide, UAnimSequence);
	READ_PTR_FULL(SlideStop, UBlendSpace1D);
}

void FAthenaAnimationLadderAnimData::BeforeDelete()
{
	DELE_PTR_FULL(Climb);
	DELE_PTR_FULL(Slide);
	DELE_PTR_FULL(SlideStop);
}

void FAthenaAnimationMapTable::AfterRead()
{
}

void FAthenaAnimationMapTable::BeforeDelete()
{
}

void FGameEventSchedulerConfigChangeTelemetryEvent::AfterRead()
{
}

void FGameEventSchedulerConfigChangeTelemetryEvent::BeforeDelete()
{
}

void FEventApplicationAccountLinkingEventRequest::AfterRead()
{
}

void FEventApplicationAccountLinkingEventRequest::BeforeDelete()
{
}

void FEventApplicationSignOutRequest::AfterRead()
{
}

void FEventApplicationSignOutRequest::BeforeDelete()
{
}

void FEventApplicationStartRequest::AfterRead()
{
}

void FEventApplicationStartRequest::BeforeDelete()
{
}

void FEventApplicationExitRequest::AfterRead()
{
}

void FEventApplicationExitRequest::BeforeDelete()
{
}

void FEventApplicationResumed::AfterRead()
{
}

void FEventApplicationResumed::BeforeDelete()
{
}

void FEventApplicationSuspended::AfterRead()
{
}

void FEventApplicationSuspended::BeforeDelete()
{
}

void FEventApplicationReactivated::AfterRead()
{
}

void FEventApplicationReactivated::BeforeDelete()
{
}

void FEventApplicationDeactivated::AfterRead()
{
}

void FEventApplicationDeactivated::BeforeDelete()
{
}

void FGameSessionIdTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FGameSessionIdTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FGameSessionIdTelemetryFragment::AfterRead()
{
}

void FGameSessionIdTelemetryFragment::BeforeDelete()
{
}

void FEventBuriedItemRevealed::AfterRead()
{
	READ_PTR_FULL(BuriedItem, AItemInfo);
}

void FEventBuriedItemRevealed::BeforeDelete()
{
	DELE_PTR_FULL(BuriedItem);
}

void FPlayerStartedDiggingEvent::AfterRead()
{
	READ_PTR_FULL(ActorBeingDugUp, AActor);
}

void FPlayerStartedDiggingEvent::BeforeDelete()
{
	DELE_PTR_FULL(ActorBeingDugUp);
}

void FEventDiggingStarted::AfterRead()
{
	READ_PTR_FULL(ActorBeingDugUp, AActor);
}

void FEventDiggingStarted::BeforeDelete()
{
	DELE_PTR_FULL(ActorBeingDugUp);
}

void FEncounterHandle::AfterRead()
{
}

void FEncounterHandle::BeforeDelete()
{
}

void FEncounterListener::AfterRead()
{
	READ_PTR_FULL(EncounterListenerActor, AActor);
}

void FEncounterListener::BeforeDelete()
{
	DELE_PTR_FULL(EncounterListenerActor);
}

void FEventEncounterBase::AfterRead()
{
	READ_PTR_FULL(EncounterActor, AActor);
}

void FEventEncounterBase::BeforeDelete()
{
	DELE_PTR_FULL(EncounterActor);
}

void FEventEncounterEnd::AfterRead()
{
	FEventEncounterBase::AfterRead();

}

void FEventEncounterEnd::BeforeDelete()
{
	FEventEncounterBase::BeforeDelete();

}

void FEventEncounterStart::AfterRead()
{
	FEventEncounterBase::AfterRead();

}

void FEventEncounterStart::BeforeDelete()
{
	FEventEncounterBase::BeforeDelete();

}

void FEventStarved::AfterRead()
{
}

void FEventStarved::BeforeDelete()
{
}

void FEventStarvingAmountChanged::AfterRead()
{
}

void FEventStarvingAmountChanged::BeforeDelete()
{
}

void FEventJustBeenFed::AfterRead()
{
	READ_PTR_FULL(FedBy, AActor);
}

void FEventJustBeenFed::BeforeDelete()
{
	DELE_PTR_FULL(FedBy);
}

void FEventStartedBeingFed::AfterRead()
{
	READ_PTR_FULL(FedBy, AActor);
}

void FEventStartedBeingFed::BeforeDelete()
{
	DELE_PTR_FULL(FedBy);
}

void FWeightedItemDescSpawnDataWithRandomQuantityResult::AfterRead()
{
	READ_PTR_FULL(ItemSpawnData, UItemSpawnData);
}

void FWeightedItemDescSpawnDataWithRandomQuantityResult::BeforeDelete()
{
	DELE_PTR_FULL(ItemSpawnData);
}

void FEventItemSpawnedFromSpawner::AfterRead()
{
}

void FEventItemSpawnedFromSpawner::BeforeDelete()
{
}

void FItemSpawnerFinishedSpawningEvent::AfterRead()
{
}

void FItemSpawnerFinishedSpawningEvent::BeforeDelete()
{
}

void FEventItemSpawnerOwnershipChanged::AfterRead()
{
}

void FEventItemSpawnerOwnershipChanged::BeforeDelete()
{
}

void FTreasureMapWidgetStreamedTexture::AfterRead()
{
	FTreasureMapWidget::AfterRead();

}

void FTreasureMapWidgetStreamedTexture::BeforeDelete()
{
	FTreasureMapWidget::BeforeDelete();

}

void FItemLoadoutSetEvent::AfterRead()
{
}

void FItemLoadoutSetEvent::BeforeDelete()
{
}

void FItemLoadoutSlotsUpdatedEvent::AfterRead()
{
}

void FItemLoadoutSlotsUpdatedEvent::BeforeDelete()
{
}

void FItemLoadoutItemCategoryRemovedEvent::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FItemLoadoutItemCategoryRemovedEvent::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FItemLoadoutItemRemovedEvent::AfterRead()
{
	READ_PTR_FULL(Item, AItemInfo);
}

void FItemLoadoutItemRemovedEvent::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FItemLoadoutItemCategoryAddedEvent::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FItemLoadoutItemCategoryAddedEvent::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FItemLoadoutItemAddedEvent::AfterRead()
{
	READ_PTR_FULL(Item, AItemInfo);
}

void FItemLoadoutItemAddedEvent::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FLoadoutCategory::AfterRead()
{
}

void FLoadoutCategory::BeforeDelete()
{
}

void FLoadoutPetCategory::AfterRead()
{
}

void FLoadoutPetCategory::BeforeDelete()
{
}

void FCategorisedLoadout::AfterRead()
{
}

void FCategorisedLoadout::BeforeDelete()
{
}

void FRewardRequestCrewGame::AfterRead()
{
}

void FRewardRequestCrewGame::BeforeDelete()
{
}

void FRewardGrantedEvent::AfterRead()
{
}

void FRewardGrantedEvent::BeforeDelete()
{
}

void FXPGrantedEvent::AfterRead()
{
}

void FXPGrantedEvent::BeforeDelete()
{
}

void FCurrencyGrantedEvent::AfterRead()
{
}

void FCurrencyGrantedEvent::BeforeDelete()
{
}

void FPenaltyRequestEvent::AfterRead()
{
}

void FPenaltyRequestEvent::BeforeDelete()
{
}

void FRewardRequestForPirateEvent::AfterRead()
{
}

void FRewardRequestForPirateEvent::BeforeDelete()
{
}

void FAllianceRewardRequestEvent::AfterRead()
{
}

void FAllianceRewardRequestEvent::BeforeDelete()
{
}

void FRewardRequestEvent::AfterRead()
{
}

void FRewardRequestEvent::BeforeDelete()
{
}

void FRewardRuntimeDefinition::AfterRead()
{
	READ_PTR_FULL(PopUp, UPopUpMessageDesc);
}

void FRewardRuntimeDefinition::BeforeDelete()
{
	DELE_PTR_FULL(PopUp);
}

void FInventoryInteractionUpdateEvent::AfterRead()
{
}

void FInventoryInteractionUpdateEvent::BeforeDelete()
{
}

void FInventoryInteractionTakeAllRequestEvent::AfterRead()
{
}

void FInventoryInteractionTakeAllRequestEvent::BeforeDelete()
{
}

void FInventoryInteractionTakeRequestEvent::AfterRead()
{
}

void FInventoryInteractionTakeRequestEvent::BeforeDelete()
{
}

void FInventoryInteractionStowAllRequestEvent::AfterRead()
{
}

void FInventoryInteractionStowAllRequestEvent::BeforeDelete()
{
}

void FInventoryInteractionStowRequestEvent::AfterRead()
{
}

void FInventoryInteractionStowRequestEvent::BeforeDelete()
{
}

void FInventoryInteractionClosedEvent::AfterRead()
{
}

void FInventoryInteractionClosedEvent::BeforeDelete()
{
}

void FCloseInventoryInteractionEvent::AfterRead()
{
}

void FCloseInventoryInteractionEvent::BeforeDelete()
{
}

void FOpenInventoryInteractionEvent::AfterRead()
{
}

void FOpenInventoryInteractionEvent::BeforeDelete()
{
}

void FEventStorageContainerContentsChanged::AfterRead()
{
	READ_PTR_FULL(Source, UStorageContainerComponent);
}

void FEventStorageContainerContentsChanged::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FEventReceiveStorageContainerComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UStorageContainerComponent);
}

void FEventReceiveStorageContainerComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FStorageContainerContentSpawnerOutput::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FStorageContainerContentSpawnerOutput::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FStorageContainerHealthChangedCloseInventoryRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FStorageContainerHealthChangedCloseInventoryRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FStorageContainerUnregisterServerEventsRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(InStorageContainerOwnerObject, UObject);
}

void FStorageContainerUnregisterServerEventsRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(InStorageContainerOwnerObject);
}

void FStowAllItemsToContainerRPC::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(ItemDescToStow, UClass);
}

void FStowAllItemsToContainerRPC::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(ItemDescToStow);
}

void FStowItemToContainerRPC::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(ItemDescToStow, UClass);
}

void FStowItemToContainerRPC::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(ItemDescToStow);
}

void FAmmoPouchGivenAmmoTelemetryEvent::AfterRead()
{
}

void FAmmoPouchGivenAmmoTelemetryEvent::BeforeDelete()
{
}

void FRewardPouchGivenRewardTelemetryEvent::AfterRead()
{
}

void FRewardPouchGivenRewardTelemetryEvent::BeforeDelete()
{
}

void FConsumedIngestibleTelemetryEvent::AfterRead()
{
}

void FConsumedIngestibleTelemetryEvent::BeforeDelete()
{
}

void FQuestBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FQuestBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FGhostPawnEntry::AfterRead()
{
	READ_PTR_FULL(Pawn, APawn);
}

void FGhostPawnEntry::BeforeDelete()
{
	DELE_PTR_FULL(Pawn);
}

void FGhostShipCoordinator::AfterRead()
{
	READ_PTR_FULL(Parent, UObject);
	READ_PTR_FULL(SpawnLocation, AGhostShipPlayerSpawnLocation);
	READ_PTR_FULL(GhostShipDoor, AGhostShipDoor);
}

void FGhostShipCoordinator::BeforeDelete()
{
	DELE_PTR_FULL(Parent);
	DELE_PTR_FULL(SpawnLocation);
	DELE_PTR_FULL(GhostShipDoor);
}

void FLiquidContents::AfterRead()
{
	READ_PTR_FULL(LiquidSource, AShip);
	READ_PTR_FULL(Container, AActor);
}

void FLiquidContents::BeforeDelete()
{
	DELE_PTR_FULL(LiquidSource);
	DELE_PTR_FULL(Container);
}

void FBucketContentsInfo::AfterRead()
{
	READ_PTR_FULL(ProjectileClassToSpawn, UClass);
	READ_PTR_FULL(ProjectileClassToSpawnAtWielder, UClass);
	READ_PTR_FULL(ThrowSfx, UWwiseEvent);
	READ_PTR_FULL(ThrowVfxFirstPerson, UObject);
	READ_PTR_FULL(ThrowVfxThirdPerson, UObject);
	READ_PTR_FULL(DrenchWielderVfxThirdPerson, UObject);
	READ_PTR_FULL(BucketContentsParticleSystemFirstPerson, UObject);
	READ_PTR_FULL(BucketContentsParticleSystemThirdPerson, UObject);
}

void FBucketContentsInfo::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileClassToSpawn);
	DELE_PTR_FULL(ProjectileClassToSpawnAtWielder);
	DELE_PTR_FULL(ThrowSfx);
	DELE_PTR_FULL(ThrowVfxFirstPerson);
	DELE_PTR_FULL(ThrowVfxThirdPerson);
	DELE_PTR_FULL(DrenchWielderVfxThirdPerson);
	DELE_PTR_FULL(BucketContentsParticleSystemFirstPerson);
	DELE_PTR_FULL(BucketContentsParticleSystemThirdPerson);
}

void FBuoyantObjectSpawnDistributionParams::AfterRead()
{
}

void FBuoyantObjectSpawnDistributionParams::BeforeDelete()
{
}

void FBuoyantObjectSpawnParams::AfterRead()
{
	READ_PTR_FULL(DefaultSpawnProfile, UBuoyantObjectSpawnProfileDataAsset);
	READ_PTR_FULL(ArenaSpawnProfile, UBuoyantObjectSpawnProfileDataAsset);
	READ_PTR_FULL(FloatingItemsWithBarrelsOfPlentySpawnProfile, UBuoyantObjectSpawnProfileDataAsset);
	READ_PTR_FULL(MerchantAllianceBarrelsOfPlentySpawnProfile, UBuoyantObjectSpawnProfileDataAsset);
}

void FBuoyantObjectSpawnParams::BeforeDelete()
{
	DELE_PTR_FULL(DefaultSpawnProfile);
	DELE_PTR_FULL(ArenaSpawnProfile);
	DELE_PTR_FULL(FloatingItemsWithBarrelsOfPlentySpawnProfile);
	DELE_PTR_FULL(MerchantAllianceBarrelsOfPlentySpawnProfile);
}

void FBuoyantObjectWeightedGroup::AfterRead()
{
	READ_PTR_FULL(Items, UItemSpawnDistributionAsset);
}

void FBuoyantObjectWeightedGroup::BeforeDelete()
{
	DELE_PTR_FULL(Items);
}

void FBuoyantObjectSpawnProfile::AfterRead()
{
	READ_PTR_FULL(WildlifeType, UClass);
	READ_PTR_FULL(BarrelType, UClass);
}

void FBuoyantObjectSpawnProfile::BeforeDelete()
{
	DELE_PTR_FULL(WildlifeType);
	DELE_PTR_FULL(BarrelType);
}

void FQuestVariableGuid::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableGuid::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariablePlayerActor::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariablePlayerActor::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FLocationGeneratorSample::AfterRead()
{
}

void FLocationGeneratorSample::BeforeDelete()
{
}

void FExplosionInfo::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(PlayerDamageCurve, UCurveFloat);
	READ_PTR_FULL(OtherPawnDamageCurve, UCurveFloat);
	READ_PTR_FULL(ShipDamageCurveInMetres, UCurveFloat);
	READ_PTR_FULL(IgnitionParameters, UFireGridCellSelectionParamsDataAsset);
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(ForceFeedbackEffectLower, UForceFeedbackEffect);
	READ_PTR_FULL(CameraShake, UClass);
}

void FExplosionInfo::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(PlayerDamageCurve);
	DELE_PTR_FULL(OtherPawnDamageCurve);
	DELE_PTR_FULL(ShipDamageCurveInMetres);
	DELE_PTR_FULL(IgnitionParameters);
	DELE_PTR_FULL(ForceFeedbackEffect);
	DELE_PTR_FULL(ForceFeedbackEffectLower);
	DELE_PTR_FULL(CameraShake);
}

void FCampaignPopUpNotificationInfo::AfterRead()
{
	READ_PTR_FULL(PopUp, UPopUpMessageDesc);
}

void FCampaignPopUpNotificationInfo::BeforeDelete()
{
	DELE_PTR_FULL(PopUp);
}

void FCanvasWorldMapShipIcons::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(ShipTexture, UTexture);
	READ_PTR_FULL(OffscreenTexture, UTexture);
}

void FCanvasWorldMapShipIcons::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(ShipTexture);
	DELE_PTR_FULL(OffscreenTexture);
}

void FCanvasWorldMapReaperTrackedBootItemIcon::AfterRead()
{
	READ_PTR_FULL(Texture, UTexture);
}

void FCanvasWorldMapReaperTrackedBootItemIcon::BeforeDelete()
{
	DELE_PTR_FULL(Texture);
}

void FCanvasWorldMapShipLocation::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(CrewLiveryOverlayIcon, UTexture);
}

void FCanvasWorldMapShipLocation::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(CrewLiveryOverlayIcon);
}

void FReapersMarkTrackedBootyItemInfo::AfterRead()
{
}

void FReapersMarkTrackedBootyItemInfo::BeforeDelete()
{
}

void FCapstanDesc::AfterRead()
{
	READ_PTR_FULL(CapstanBodyMesh, UStaticMesh);
	READ_PTR_FULL(CapstanArmMesh, UStaticMesh);
	READ_PTR_FULL(CapstanReleaseMesh, UStaticMesh);
	READ_PTR_FULL(CapstanRopeMesh, UStaticMesh);
}

void FCapstanDesc::BeforeDelete()
{
	DELE_PTR_FULL(CapstanBodyMesh);
	DELE_PTR_FULL(CapstanArmMesh);
	DELE_PTR_FULL(CapstanReleaseMesh);
	DELE_PTR_FULL(CapstanRopeMesh);
}

void FDamageableVulnerabilityPair::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FDamageableVulnerabilityPair::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FCapstanParams::AfterRead()
{
}

void FCapstanParams::BeforeDelete()
{
}

void FCapstanAudioParams::AfterRead()
{
	READ_PTR_FULL(CapstanStart, UWwiseEvent);
	READ_PTR_FULL(CapstanStop, UWwiseEvent);
	READ_PTR_FULL(CapstanDamagedStart, UWwiseEvent);
	READ_PTR_FULL(CapstanDamagedStop, UWwiseEvent);
	READ_PTR_FULL(CapstanStopFullyRaised, UWwiseEvent);
	READ_PTR_FULL(CapstanStopFullyLowered, UWwiseEvent);
	READ_PTR_FULL(CapstanEmitterPool, UWwiseObjectPoolWrapper);
}

void FCapstanAudioParams::BeforeDelete()
{
	DELE_PTR_FULL(CapstanStart);
	DELE_PTR_FULL(CapstanStop);
	DELE_PTR_FULL(CapstanDamagedStart);
	DELE_PTR_FULL(CapstanDamagedStop);
	DELE_PTR_FULL(CapstanStopFullyRaised);
	DELE_PTR_FULL(CapstanStopFullyLowered);
	DELE_PTR_FULL(CapstanEmitterPool);
}

void FCapstanNetState::AfterRead()
{
}

void FCapstanNetState::BeforeDelete()
{
}

void FRepairableAuthoritiveRepairState::AfterRead()
{
}

void FRepairableAuthoritiveRepairState::BeforeDelete()
{
}

void FWaterModifierZoneParameters::AfterRead()
{
}

void FWaterModifierZoneParameters::BeforeDelete()
{
}

void FWaterModifierZoneParametersAndLocation::AfterRead()
{
}

void FWaterModifierZoneParametersAndLocation::BeforeDelete()
{
}

void FLightningTarget::AfterRead()
{
}

void FLightningTarget::BeforeDelete()
{
}

void FLightningTargetSelector::AfterRead()
{
}

void FLightningTargetSelector::BeforeDelete()
{
}

void FLoadableComponentState::AfterRead()
{
	READ_PTR_FULL(LoadedItem, UObject);
}

void FLoadableComponentState::BeforeDelete()
{
	DELE_PTR_FULL(LoadedItem);
}

void FCanLoadItemCategoryEntry::AfterRead()
{
	READ_PTR_FULL(CanLoadItemCategory, UClass);
}

void FCanLoadItemCategoryEntry::BeforeDelete()
{
	DELE_PTR_FULL(CanLoadItemCategory);
}

void FLoadoutEntry::AfterRead()
{
}

void FLoadoutEntry::BeforeDelete()
{
}

void FSupplementalLoadout::AfterRead()
{
}

void FSupplementalLoadout::BeforeDelete()
{
}

void FLPVAdaptationState::AfterRead()
{
}

void FLPVAdaptationState::BeforeDelete()
{
}

void FWorldMapShipLocation::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(CrewLiveryOverlayIcon, UTexture);
}

void FWorldMapShipLocation::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(CrewLiveryOverlayIcon);
}

void FMapTableTutorialHandler::AfterRead()
{
	READ_PTR_FULL(CachedMapController, AActor);
	READ_PTR_FULL(CachedMapControllerTutorialComponent, UTutorial2019Component);
}

void FMapTableTutorialHandler::BeforeDelete()
{
	DELE_PTR_FULL(CachedMapController);
	DELE_PTR_FULL(CachedMapControllerTutorialComponent);
}

void FWorldMapSetLocation::AfterRead()
{
}

void FWorldMapSetLocation::BeforeDelete()
{
}

void FNPCCustomAnimationBlueprintData::AfterRead()
{
}

void FNPCCustomAnimationBlueprintData::BeforeDelete()
{
}

void FToggleableAIShipServiceDataAssetFileLocation::AfterRead()
{
}

void FToggleableAIShipServiceDataAssetFileLocation::BeforeDelete()
{
}

void FLoadoutSubstitution::AfterRead()
{
}

void FLoadoutSubstitution::BeforeDelete()
{
}

void FShipCurseSpawnedFXForCurse::AfterRead()
{
}

void FShipCurseSpawnedFXForCurse::BeforeDelete()
{
}

void FVotersByOption::AfterRead()
{
}

void FVotersByOption::BeforeDelete()
{
}

void FVoteSessionData::AfterRead()
{
}

void FVoteSessionData::BeforeDelete()
{
}

void FKrakenSpawnLocationExclusionZone::AfterRead()
{
}

void FKrakenSpawnLocationExclusionZone::BeforeDelete()
{
}

void FTransitionLadderBeginEvent::AfterRead()
{
}

void FTransitionLadderBeginEvent::BeforeDelete()
{
}

void FUseLadderUpdateIntentEvent::AfterRead()
{
}

void FUseLadderUpdateIntentEvent::BeforeDelete()
{
}

void FUseLadderUpdateHeightEvent::AfterRead()
{
}

void FUseLadderUpdateHeightEvent::BeforeDelete()
{
}

void FUseLadderEndEvent::AfterRead()
{
}

void FUseLadderEndEvent::BeforeDelete()
{
}

void FItemSpawnTelemetryEvent::AfterRead()
{
}

void FItemSpawnTelemetryEvent::BeforeDelete()
{
}

void FEventUINotification::AfterRead()
{
}

void FEventUINotification::BeforeDelete()
{
}

void FNPCChat::AfterRead()
{
}

void FNPCChat::BeforeDelete()
{
}

void FEventNPCChatUINotification::AfterRead()
{
	FEventUINotification::AfterRead();

}

void FEventNPCChatUINotification::BeforeDelete()
{
	FEventUINotification::BeforeDelete();

}

void FQuestVariableVectorArray::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableVectorArray::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableTextArray::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableTextArray::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableUObject::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableUObject::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FTaleResourceHandle::AfterRead()
{
}

void FTaleResourceHandle::BeforeDelete()
{
}

void FQuestVariableOrientedPoint::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableOrientedPoint::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FTaleQuestFailedTelemetryEvent::AfterRead()
{
}

void FTaleQuestFailedTelemetryEvent::BeforeDelete()
{
}

void FTunnelOfTheDamnedBaseTelemetryFragment::AfterRead()
{
}

void FTunnelOfTheDamnedBaseTelemetryFragment::BeforeDelete()
{
}

void FTunnelOfTheDamnedTransitionDynamicFogEvent::AfterRead()
{
}

void FTunnelOfTheDamnedTransitionDynamicFogEvent::BeforeDelete()
{
}

void FCrewEnteredTunnelOfTheDamnedPortalProximityEvent::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FCrewEnteredTunnelOfTheDamnedPortalProximityEvent::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FTunnelOfTheDamnedDestroyedEvent::AfterRead()
{
}

void FTunnelOfTheDamnedDestroyedEvent::BeforeDelete()
{
}

void FTunnelOfTheDamnedMigrationSucceededEvent::AfterRead()
{
}

void FTunnelOfTheDamnedMigrationSucceededEvent::BeforeDelete()
{
}

void FCrewEnteredTunnelOfTheDamnedEvent::AfterRead()
{
}

void FCrewEnteredTunnelOfTheDamnedEvent::BeforeDelete()
{
}

void FMermaidServiceParams::AfterRead()
{
}

void FMermaidServiceParams::BeforeDelete()
{
}

void FUseMountedWeaponActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

	READ_PTR_FULL(FireForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(FireCameraShake, UClass);
	READ_PTR_FULL(FireInputId, UClass);
}

void FUseMountedWeaponActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

	DELE_PTR_FULL(FireForceFeedbackEffect);
	DELE_PTR_FULL(FireCameraShake);
	DELE_PTR_FULL(FireInputId);
}

void FUseCannonActionStateParams::AfterRead()
{
}

void FUseCannonActionStateParams::BeforeDelete()
{
}

void FPLSectionBundleEntry::AfterRead()
{
	READ_PTR_FULL(Section, UPirateLegendSection);
}

void FPLSectionBundleEntry::BeforeDelete()
{
	DELE_PTR_FULL(Section);
}

void FRiddleActionLocation::AfterRead()
{
}

void FRiddleActionLocation::BeforeDelete()
{
}

void FValidRiddleOptions::AfterRead()
{
}

void FValidRiddleOptions::BeforeDelete()
{
}

void FServiceStatusNotification::AfterRead()
{
}

void FServiceStatusNotification::BeforeDelete()
{
}

void FStormScalingParameters::AfterRead()
{
	READ_PTR_FULL(RadiusCurve, UCurveFloat);
	READ_PTR_FULL(OuterRadiusCurve, UCurveFloat);
	READ_PTR_FULL(RainSheetOuterOpacityCurve, UCurveFloat);
	READ_PTR_FULL(RainSheetInnerOpacityCurve, UCurveFloat);
	READ_PTR_FULL(BaseCloudHeightCurve, UCurveFloat);
	READ_PTR_FULL(BaseCloudMaskCurve, UCurveFloat);
	READ_PTR_FULL(RingCloudHeightCurve, UCurveFloat);
	READ_PTR_FULL(RingCloudMaskCurve, UCurveFloat);
	READ_PTR_FULL(TopCloudHeightCurve, UCurveFloat);
	READ_PTR_FULL(TopCloudMaskCurve, UCurveFloat);
	READ_PTR_FULL(PressureZoneRadiusCurve, UCurveFloat);
	READ_PTR_FULL(PressureZoneTargetCurve, UCurveFloat);
	READ_PTR_FULL(PressureZonePushCurve, UCurveFloat);
	READ_PTR_FULL(PressureZoneWeightCurve, UCurveFloat);
	READ_PTR_FULL(RainStrengthCurve, UCurveFloat);
	READ_PTR_FULL(WindStrengthCurve, UCurveFloat);
	READ_PTR_FULL(WindInnerRadiusCurve, UCurveFloat);
	READ_PTR_FULL(WaterStrengthCurve, UCurveFloat);
	READ_PTR_FULL(RainSheetOuterScaleCurve, UCurveLinearColor);
	READ_PTR_FULL(RainSheetInnerScaleCurve, UCurveLinearColor);
	READ_PTR_FULL(BaseCloudScaleCurve, UCurveLinearColor);
	READ_PTR_FULL(RingCloudScaleCurve, UCurveLinearColor);
	READ_PTR_FULL(TopCloudScaleCurve, UCurveLinearColor);
}

void FStormScalingParameters::BeforeDelete()
{
	DELE_PTR_FULL(RadiusCurve);
	DELE_PTR_FULL(OuterRadiusCurve);
	DELE_PTR_FULL(RainSheetOuterOpacityCurve);
	DELE_PTR_FULL(RainSheetInnerOpacityCurve);
	DELE_PTR_FULL(BaseCloudHeightCurve);
	DELE_PTR_FULL(BaseCloudMaskCurve);
	DELE_PTR_FULL(RingCloudHeightCurve);
	DELE_PTR_FULL(RingCloudMaskCurve);
	DELE_PTR_FULL(TopCloudHeightCurve);
	DELE_PTR_FULL(TopCloudMaskCurve);
	DELE_PTR_FULL(PressureZoneRadiusCurve);
	DELE_PTR_FULL(PressureZoneTargetCurve);
	DELE_PTR_FULL(PressureZonePushCurve);
	DELE_PTR_FULL(PressureZoneWeightCurve);
	DELE_PTR_FULL(RainStrengthCurve);
	DELE_PTR_FULL(WindStrengthCurve);
	DELE_PTR_FULL(WindInnerRadiusCurve);
	DELE_PTR_FULL(WaterStrengthCurve);
	DELE_PTR_FULL(RainSheetOuterScaleCurve);
	DELE_PTR_FULL(RainSheetInnerScaleCurve);
	DELE_PTR_FULL(BaseCloudScaleCurve);
	DELE_PTR_FULL(RingCloudScaleCurve);
	DELE_PTR_FULL(TopCloudScaleCurve);
}

void FStormAvoidanceArea::AfterRead()
{
}

void FStormAvoidanceArea::BeforeDelete()
{
}

void FStrongholdKeyInfo::AfterRead()
{
	READ_PTR_FULL(SkellyFortEventType, UClass);
	READ_PTR_FULL(StrongholdKey, UClass);
}

void FStrongholdKeyInfo::BeforeDelete()
{
	DELE_PTR_FULL(SkellyFortEventType);
	DELE_PTR_FULL(StrongholdKey);
}

void FCargoRunItemDropOffData::AfterRead()
{
}

void FCargoRunItemDropOffData::BeforeDelete()
{
}

void FCompanySpecificCargoRunReward::AfterRead()
{
	READ_PTR_FULL(CompanyId, UClass);
}

void FCompanySpecificCargoRunReward::BeforeDelete()
{
	DELE_PTR_FULL(CompanyId);
}

void FContestZoneVendorShipData::AfterRead()
{
}

void FContestZoneVendorShipData::BeforeDelete()
{
}

void FAudioStingRelevantShips::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FAudioStingRelevantShips::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FAudioStingShipsSpotted::AfterRead()
{
	READ_PTR_FULL(SpottedShip, AActor);
}

void FAudioStingShipsSpotted::BeforeDelete()
{
	DELE_PTR_FULL(SpottedShip);
}

void FPlayerMusicController::AfterRead()
{
	READ_PTR_FULL(PlayerMusicParams, UPlayerMusicControllerParams);
	READ_PTR_FULL(LocalPlayerActor, AActor);
	READ_PTR_FULL(PlayerOceanAudioComponent, UPlayerOceanAudioComponent);
	READ_PTR_FULL(AtmosphericsAudioComponent, UPlayerAtmosphericsAudioComponent);
	READ_PTR_FULL(AthenaPlayerCharacter, AAthenaPlayerCharacter);
	READ_PTR_FULL(AthenaWorldSettings, AAthenaWorldSettings);
}

void FPlayerMusicController::BeforeDelete()
{
	DELE_PTR_FULL(PlayerMusicParams);
	DELE_PTR_FULL(LocalPlayerActor);
	DELE_PTR_FULL(PlayerOceanAudioComponent);
	DELE_PTR_FULL(AtmosphericsAudioComponent);
	DELE_PTR_FULL(AthenaPlayerCharacter);
	DELE_PTR_FULL(AthenaWorldSettings);
}

void FContestVoyageInfo::AfterRead()
{
}

void FContestVoyageInfo::BeforeDelete()
{
}

void FLevelOfDamageProperties::AfterRead()
{
	READ_PTR_FULL(HoleDecalMaterial, UMaterialInterface);
	READ_PTR_FULL(ParticleSystem_WaterLeakAboveWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_WaterLeakBelowWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_RepairLeakAboveWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_RepairLeakBelowWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_SplashOnInternalWaterSurface, UParticleSystem);
}

void FLevelOfDamageProperties::BeforeDelete()
{
	DELE_PTR_FULL(HoleDecalMaterial);
	DELE_PTR_FULL(ParticleSystem_WaterLeakAboveWater);
	DELE_PTR_FULL(ParticleSystem_WaterLeakBelowWater);
	DELE_PTR_FULL(ParticleSystem_RepairLeakAboveWater);
	DELE_PTR_FULL(ParticleSystem_RepairLeakBelowWater);
	DELE_PTR_FULL(ParticleSystem_SplashOnInternalWaterSurface);
}

void FAuthorityRepairableState::AfterRead()
{
}

void FAuthorityRepairableState::BeforeDelete()
{
}

void FItemDiggingAnimationOverride::AfterRead()
{
	READ_PTR_FULL(DiggingAnimationConfig, UItemDiggingAnimationConfig);
}

void FItemDiggingAnimationOverride::BeforeDelete()
{
	DELE_PTR_FULL(DiggingAnimationConfig);
}

void FItemDiggingAudioOverride::AfterRead()
{
	READ_PTR_FULL(DiggingAudioConfig, UItemDiggingAudioConfig);
}

void FItemDiggingAudioOverride::BeforeDelete()
{
	DELE_PTR_FULL(DiggingAudioConfig);
}

void FItemDiggingBaseOverride::AfterRead()
{
	READ_PTR_FULL(DiggingBaseConfig, UItemDiggingBaseConfig);
}

void FItemDiggingBaseOverride::BeforeDelete()
{
	DELE_PTR_FULL(DiggingBaseConfig);
}

void FItemDiggingMergedConfig::AfterRead()
{
	READ_PTR_FULL(BaseConfig, UItemDiggingBaseConfig);
	READ_PTR_FULL(AnimationConfig, UItemDiggingAnimationConfig);
	READ_PTR_FULL(EffectsConfig, UItemDiggingEffectsConfig);
	READ_PTR_FULL(AudioConfig, UItemDiggingAudioConfig);
}

void FItemDiggingMergedConfig::BeforeDelete()
{
	DELE_PTR_FULL(BaseConfig);
	DELE_PTR_FULL(AnimationConfig);
	DELE_PTR_FULL(EffectsConfig);
	DELE_PTR_FULL(AudioConfig);
}

void FItemDiggingEffectsOverride::AfterRead()
{
	READ_PTR_FULL(DiggingEffectsConfig, UItemDiggingEffectsConfig);
}

void FItemDiggingEffectsOverride::BeforeDelete()
{
	DELE_PTR_FULL(DiggingEffectsConfig);
}

void FDioramaDebugMenuEntry::AfterRead()
{
	READ_PTR_FULL(Spawner, UAISpawner);
	READ_PTR_FULL(DioramaDesc, UAIDioramaDesc);
}

void FDioramaDebugMenuEntry::BeforeDelete()
{
	DELE_PTR_FULL(Spawner);
	DELE_PTR_FULL(DioramaDesc);
}

void FDrunkennessSetupData::AfterRead()
{
}

void FDrunkennessSetupData::BeforeDelete()
{
}

void FMeleeWeaponSpecialAttackData::AfterRead()
{
	READ_PTR_FULL(NotificationInputId, UClass);
	READ_PTR_FULL(Asset, UMeleeAttackDataAsset);
}

void FMeleeWeaponSpecialAttackData::BeforeDelete()
{
	DELE_PTR_FULL(NotificationInputId);
	DELE_PTR_FULL(Asset);
}

void FItemBlockingParameters::AfterRead()
{
}

void FItemBlockingParameters::BeforeDelete()
{
}

void FMerchantMapContents::AfterRead()
{
}

void FMerchantMapContents::BeforeDelete()
{
}

void FMerchantQuestRequiredItemsGroup::AfterRead()
{
}

void FMerchantQuestRequiredItemsGroup::BeforeDelete()
{
}

void FNPCDialogRankGatedText::AfterRead()
{
}

void FNPCDialogRankGatedText::BeforeDelete()
{
}

void FPlayerStatOption::AfterRead()
{
}

void FPlayerStatOption::BeforeDelete()
{
}

void FNPCDialogData::AfterRead()
{
	READ_PTR_FULL(Header, UNPCDialogHeader);
}

void FNPCDialogData::BeforeDelete()
{
	DELE_PTR_FULL(Header);
}

void FNPCData::AfterRead()
{
}

void FNPCData::BeforeDelete()
{
}

void FWeaponProjectile::AfterRead()
{
}

void FWeaponProjectile::BeforeDelete()
{
}

void FProjectileAttackGroup::AfterRead()
{
}

void FProjectileAttackGroup::BeforeDelete()
{
}

void FTestProjectileWeaponParameters::AfterRead()
{
}

void FTestProjectileWeaponParameters::BeforeDelete()
{
}

void FServerWieldSet::AfterRead()
{
}

void FServerWieldSet::BeforeDelete()
{
}

void FMaterialAnimatorGroup::AfterRead()
{
}

void FMaterialAnimatorGroup::BeforeDelete()
{
}

void FActiveCampaignInfo::AfterRead()
{
}

void FActiveCampaignInfo::BeforeDelete()
{
}

void FAthenaAIEngageEnemyData::AfterRead()
{
	READ_PTR_FULL(EngageEnemyMethod, UClass);
}

void FAthenaAIEngageEnemyData::BeforeDelete()
{
	DELE_PTR_FULL(EngageEnemyMethod);
}

void FTreasureMapData::AfterRead()
{
	READ_PTR_FULL(Map, UTreasureMapDataAsset);
	READ_PTR_FULL(LocationSource, UGeneratedLocationsDataAsset);
}

void FTreasureMapData::BeforeDelete()
{
	DELE_PTR_FULL(Map);
	DELE_PTR_FULL(LocationSource);
}

void FTreasureMapDataCaptureParams::AfterRead()
{
}

void FTreasureMapDataCaptureParams::BeforeDelete()
{
}

void FCollectorsChestItemSlotDefinition::AfterRead()
{
}

void FCollectorsChestItemSlotDefinition::BeforeDelete()
{
}

void FTornMapTearingParams::AfterRead()
{
}

void FTornMapTearingParams::BeforeDelete()
{
}

void FFishAnimationSwimmingLoopAnimations::AfterRead()
{
	READ_PTR_FULL(IdleLoopEndingForwards, UAnimMontage);
	READ_PTR_FULL(IdleLoopEndingRight, UAnimMontage);
	READ_PTR_FULL(IdleLoopEndingLeft, UAnimMontage);
	READ_PTR_FULL(IdleLoopEndingBackwards, UAnimMontage);
}

void FFishAnimationSwimmingLoopAnimations::BeforeDelete()
{
	DELE_PTR_FULL(IdleLoopEndingForwards);
	DELE_PTR_FULL(IdleLoopEndingRight);
	DELE_PTR_FULL(IdleLoopEndingLeft);
	DELE_PTR_FULL(IdleLoopEndingBackwards);
}

void FFishAnimationSwimmingLoops::AfterRead()
{
}

void FFishAnimationSwimmingLoops::BeforeDelete()
{
}

void FCanvasWorldMapIslandData::AfterRead()
{
	READ_PTR_FULL(IslandTex, UTexture);
}

void FCanvasWorldMapIslandData::BeforeDelete()
{
	DELE_PTR_FULL(IslandTex);
}

void FCanvasWorldMapWorldData::AfterRead()
{
}

void FCanvasWorldMapWorldData::BeforeDelete()
{
}

void FEventUpdateIslandEventToggle::AfterRead()
{
}

void FEventUpdateIslandEventToggle::BeforeDelete()
{
}

void FEventRefreshIslandEventData::AfterRead()
{
}

void FEventRefreshIslandEventData::BeforeDelete()
{
}

void FEventUpdateIslandEventHighlight::AfterRead()
{
}

void FEventUpdateIslandEventHighlight::BeforeDelete()
{
}

void FIslandEventIconData::AfterRead()
{
}

void FIslandEventIconData::BeforeDelete()
{
}

void FContestShipSinkNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FContestShipSinkNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FScoreboardItems::AfterRead()
{
}

void FScoreboardItems::BeforeDelete()
{
}

void FContestEndEvent::AfterRead()
{
}

void FContestEndEvent::BeforeDelete()
{
}

void FContestStartEvent::AfterRead()
{
}

void FContestStartEvent::BeforeDelete()
{
}

void FContestNotificationNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FContestNotificationNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FContestRequestScoreBoardData::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FContestRequestScoreBoardData::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FRequestContestStateEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FRequestContestStateEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FContestStateChangedEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FContestStateChangedEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FLaunchedFromKrakenActionStateConstructionInfo::AfterRead()
{
	FFiredFromActorActionStateConstructionInfo::AfterRead();

}

void FLaunchedFromKrakenActionStateConstructionInfo::BeforeDelete()
{
	FFiredFromActorActionStateConstructionInfo::BeforeDelete();

}

void FMoveToLocationActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(RelativeToComponent, USceneComponent);
}

void FMoveToLocationActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(RelativeToComponent);
}

void FRepairObjectActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(InputID, UClass);
}

void FRepairObjectActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(InputID);
}

void FRepairObjectActionStateSerialisableData::AfterRead()
{
	FActionStateSerialisableData::AfterRead();

}

void FRepairObjectActionStateSerialisableData::BeforeDelete()
{
	FActionStateSerialisableData::BeforeDelete();

}

void FServerActionStateClientStartedAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FServerActionStateClientStartedAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEmblemUnlockedEvent::AfterRead()
{
}

void FEmblemUnlockedEvent::BeforeDelete()
{
}

void FRemoteLocalizationModel::AfterRead()
{
}

void FRemoteLocalizationModel::BeforeDelete()
{
}

void FServerMigrationClientFailedTelemetryEvent::AfterRead()
{
}

void FServerMigrationClientFailedTelemetryEvent::BeforeDelete()
{
}

void FServerMigrationFailedDevTelemetryEvent::AfterRead()
{
}

void FServerMigrationFailedDevTelemetryEvent::BeforeDelete()
{
}

void FServerMigrationCompletedTelemetryActorData::AfterRead()
{
}

void FServerMigrationCompletedTelemetryActorData::BeforeDelete()
{
}

void FServerMigrationCompletedDevTelemetryEvent::AfterRead()
{
}

void FServerMigrationCompletedDevTelemetryEvent::BeforeDelete()
{
}

void FPirateRemoteServiceModel::AfterRead()
{
}

void FPirateRemoteServiceModel::BeforeDelete()
{
}

void FPlayerActiveInWorldMessage::AfterRead()
{
}

void FPlayerActiveInWorldMessage::BeforeDelete()
{
}

void FPromptCountersModel::AfterRead()
{
}

void FPromptCountersModel::BeforeDelete()
{
}

void FKeyBindingRemote::AfterRead()
{
}

void FKeyBindingRemote::BeforeDelete()
{
}

void FRemotePreferences::AfterRead()
{
}

void FRemotePreferences::BeforeDelete()
{
}

void FPlayerJoinRefusedMessage::AfterRead()
{
}

void FPlayerJoinRefusedMessage::BeforeDelete()
{
}

void FServerMatchmakingFailedMessage::AfterRead()
{
}

void FServerMatchmakingFailedMessage::BeforeDelete()
{
}

void FPlayerServerAssignmentMessage::AfterRead()
{
}

void FPlayerServerAssignmentMessage::BeforeDelete()
{
}

void FPlayerJoinCrewInProgressRequestMessage::AfterRead()
{
}

void FPlayerJoinCrewInProgressRequestMessage::BeforeDelete()
{
}

void FPlayerCrewAssignmentMessage::AfterRead()
{
}

void FPlayerCrewAssignmentMessage::BeforeDelete()
{
}

void FCrewServerRequestMessage::AfterRead()
{
}

void FCrewServerRequestMessage::BeforeDelete()
{
}

void FFrontendCrewDefinition::AfterRead()
{
}

void FFrontendCrewDefinition::BeforeDelete()
{
}

void FCrewUpdateEvent::AfterRead()
{
}

void FCrewUpdateEvent::BeforeDelete()
{
}

void FSetContestShipTypes::AfterRead()
{
}

void FSetContestShipTypes::BeforeDelete()
{
}

void FSetFrontEndSelection::AfterRead()
{
}

void FSetFrontEndSelection::BeforeDelete()
{
}

void FNotifyFrontendOfCurrentPirateStatus::AfterRead()
{
}

void FNotifyFrontendOfCurrentPirateStatus::BeforeDelete()
{
}

void FNotifyFrontendOfPirateDeletionFailure::AfterRead()
{
}

void FNotifyFrontendOfPirateDeletionFailure::BeforeDelete()
{
}

void FFrontendRequestPirateDeletionEvent::AfterRead()
{
}

void FFrontendRequestPirateDeletionEvent::BeforeDelete()
{
}

void FPirateSelectedTelemetryEvent::AfterRead()
{
}

void FPirateSelectedTelemetryEvent::BeforeDelete()
{
}

void FCrosshairUI::AfterRead()
{
	READ_PTR_FULL(WieldedWeapon, AProjectileWeapon);
}

void FCrosshairUI::BeforeDelete()
{
	DELE_PTR_FULL(WieldedWeapon);
}

void FItemPreviewItemChanged::AfterRead()
{
}

void FItemPreviewItemChanged::BeforeDelete()
{
}

void FItemPreviewLoadingEvent::AfterRead()
{
}

void FItemPreviewLoadingEvent::BeforeDelete()
{
}

void FItemPreviewCreatedEvent::AfterRead()
{
}

void FItemPreviewCreatedEvent::BeforeDelete()
{
}

void FRequestDestroyItemPreviewEvent::AfterRead()
{
}

void FRequestDestroyItemPreviewEvent::BeforeDelete()
{
}

void FRequestCreateItemPreviewEvent::AfterRead()
{
}

void FRequestCreateItemPreviewEvent::BeforeDelete()
{
}

void FPirateProfileRTTGeneratedPNGEvent::AfterRead()
{
}

void FPirateProfileRTTGeneratedPNGEvent::BeforeDelete()
{
}

void FRequestPirateProfileRTTDestroyEvent::AfterRead()
{
}

void FRequestPirateProfileRTTDestroyEvent::BeforeDelete()
{
}

void FRequestPirateProfileRTTEvent::AfterRead()
{
}

void FRequestPirateProfileRTTEvent::BeforeDelete()
{
}

void FEmissaryDeactivatedNotificationUIEvent::AfterRead()
{
}

void FEmissaryDeactivatedNotificationUIEvent::BeforeDelete()
{
}

void FEmissaryProgressUpdatedNotificationUIEvent::AfterRead()
{
}

void FEmissaryProgressUpdatedNotificationUIEvent::BeforeDelete()
{
}

void FPopupQueueFinished::AfterRead()
{
}

void FPopupQueueFinished::BeforeDelete()
{
}

void FPopupQueueStarted::AfterRead()
{
}

void FPopupQueueStarted::BeforeDelete()
{
}

void FPopupQueuePlay::AfterRead()
{
}

void FPopupQueuePlay::BeforeDelete()
{
}

void FProgressPoint::AfterRead()
{
}

void FProgressPoint::BeforeDelete()
{
}

void FProgressUpdatedNotificationUIEvent::AfterRead()
{
}

void FProgressUpdatedNotificationUIEvent::BeforeDelete()
{
}

void FEmissaryValueChangeUIEvent::AfterRead()
{
}

void FEmissaryValueChangeUIEvent::BeforeDelete()
{
}

void FCurrencyGrantedNotificationUIEvent::AfterRead()
{
}

void FCurrencyGrantedNotificationUIEvent::BeforeDelete()
{
}

void FPopUpNotificationUIEvent::AfterRead()
{
}

void FPopUpNotificationUIEvent::BeforeDelete()
{
}

void FHideTutorialNotificationUIEvent::AfterRead()
{
}

void FHideTutorialNotificationUIEvent::BeforeDelete()
{
}

void FGenericPopupAudioDescriptor::AfterRead()
{
}

void FGenericPopupAudioDescriptor::BeforeDelete()
{
}

void FGenericNotificationUIEvent::AfterRead()
{
}

void FGenericNotificationUIEvent::BeforeDelete()
{
}

void FShowTutorialNotificationUIEvent::AfterRead()
{
	FGenericNotificationUIEvent::AfterRead();

}

void FShowTutorialNotificationUIEvent::BeforeDelete()
{
	FGenericNotificationUIEvent::BeforeDelete();

}

void FVoyageCompleteAnimationEvent::AfterRead()
{
}

void FVoyageCompleteAnimationEvent::BeforeDelete()
{
}

void FVoyageChapterBegunAnimationEvent::AfterRead()
{
}

void FVoyageChapterBegunAnimationEvent::BeforeDelete()
{
}

void FVoyageBegunAnimationEvent::AfterRead()
{
}

void FVoyageBegunAnimationEvent::BeforeDelete()
{
}

void FPlayerNameplateUIInfo::AfterRead()
{
}

void FPlayerNameplateUIInfo::BeforeDelete()
{
}

void FArmoryItemLoadoutUpdatedEvent::AfterRead()
{
}

void FArmoryItemLoadoutUpdatedEvent::BeforeDelete()
{
}

void FArmoryItemEntitlementsUpdatedEvent::AfterRead()
{
}

void FArmoryItemEntitlementsUpdatedEvent::BeforeDelete()
{
}

void FRequestArmoryItemLoadoutEvent::AfterRead()
{
}

void FRequestArmoryItemLoadoutEvent::BeforeDelete()
{
}

void FRequestArmoryItemEntitlementsEvent::AfterRead()
{
}

void FRequestArmoryItemEntitlementsEvent::BeforeDelete()
{
}

void FRequestArmoryEquipSlotEvent::AfterRead()
{
}

void FRequestArmoryEquipSlotEvent::BeforeDelete()
{
}

void FClothingChestClothingEntitlementsUpdatedEvent::AfterRead()
{
}

void FClothingChestClothingEntitlementsUpdatedEvent::BeforeDelete()
{
}

void FRequestEmoteSelectEquipEvent::AfterRead()
{
}

void FRequestEmoteSelectEquipEvent::BeforeDelete()
{
}

void FRequestClothingChestClothingLoadoutEvent::AfterRead()
{
}

void FRequestClothingChestClothingLoadoutEvent::BeforeDelete()
{
}

void FRequestClothingChestClothingEntitlementsEvent::AfterRead()
{
}

void FRequestClothingChestClothingEntitlementsEvent::BeforeDelete()
{
}

void FRequestClothingChestPreviewUpdateEvent::AfterRead()
{
}

void FRequestClothingChestPreviewUpdateEvent::BeforeDelete()
{
}

void FRequestClothingChestActionEvent::AfterRead()
{
}

void FRequestClothingChestActionEvent::BeforeDelete()
{
}

void FUICompanyProgress::AfterRead()
{
}

void FUICompanyProgress::BeforeDelete()
{
}

void FVoyageProposalsUpdatedEvent::AfterRead()
{
}

void FVoyageProposalsUpdatedEvent::BeforeDelete()
{
}

void FForceCloseVoyageInventoryEvent::AfterRead()
{
}

void FForceCloseVoyageInventoryEvent::BeforeDelete()
{
}

void FOpenVoyageInventoryEvent::AfterRead()
{
}

void FOpenVoyageInventoryEvent::BeforeDelete()
{
}

void FRequestVoyageProposalsEvent::AfterRead()
{
}

void FRequestVoyageProposalsEvent::BeforeDelete()
{
}

void FVoyageProposalDiscardEvent::AfterRead()
{
}

void FVoyageProposalDiscardEvent::BeforeDelete()
{
}

void FVoyageProposalSelectedEvent::AfterRead()
{
}

void FVoyageProposalSelectedEvent::BeforeDelete()
{
}

void FClientBannedHandlerRetrieveDataResponse::AfterRead()
{
}

void FClientBannedHandlerRetrieveDataResponse::BeforeDelete()
{
}

void FClientBannedHandlerRetrieveDataRequest::AfterRead()
{
}

void FClientBannedHandlerRetrieveDataRequest::BeforeDelete()
{
}

void FAthenaPlayerControllerEndingPlayInContestStage::AfterRead()
{
	READ_PTR_FULL(Controller, AAthenaPlayerController);
}

void FAthenaPlayerControllerEndingPlayInContestStage::BeforeDelete()
{
	DELE_PTR_FULL(Controller);
}

void FArenaSuspensionState::AfterRead()
{
}

void FArenaSuspensionState::BeforeDelete()
{
}

void FSuspensionStatusResponse::AfterRead()
{
}

void FSuspensionStatusResponse::BeforeDelete()
{
}

void FSuspensionStatusRequest::AfterRead()
{
}

void FSuspensionStatusRequest::BeforeDelete()
{
}

void FNoteDeletedMessage::AfterRead()
{
}

void FNoteDeletedMessage::BeforeDelete()
{
}

void FVoyageMembershipInfo::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FVoyageMembershipInfo::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FQuestCompleteTelemetryEvent::AfterRead()
{
}

void FQuestCompleteTelemetryEvent::BeforeDelete()
{
}

void FQuestAbortedTelemetryEvent::AfterRead()
{
}

void FQuestAbortedTelemetryEvent::BeforeDelete()
{
}

void FQuestStopTelemetryEvent::AfterRead()
{
}

void FQuestStopTelemetryEvent::BeforeDelete()
{
}

void FQuestStartTelemetryEvent::AfterRead()
{
}

void FQuestStartTelemetryEvent::BeforeDelete()
{
}

void FEventClearCrewProgressOverride::AfterRead()
{
}

void FEventClearCrewProgressOverride::BeforeDelete()
{
}

void FItemMetaBase::AfterRead()
{
}

void FItemMetaBase::BeforeDelete()
{
}

void FLockState::AfterRead()
{
	READ_PTR_FULL(RequiredKey, UClass);
	READ_PTR_FULL(KeyItem, AItemInfo);
	READ_PTR_FULL(TargetKeyMesh, UStaticMeshMemoryConstraintComponent);
	READ_PTR_FULL(RequiredSpecificKey, AItemInfo);
	READ_PTR_FULL(OwnerLockComponent, ULockComponent);
	READ_PTR_FULL(InterpolatingItem, AInterpolatingItem);
}

void FLockState::BeforeDelete()
{
	DELE_PTR_FULL(RequiredKey);
	DELE_PTR_FULL(KeyItem);
	DELE_PTR_FULL(TargetKeyMesh);
	DELE_PTR_FULL(RequiredSpecificKey);
	DELE_PTR_FULL(OwnerLockComponent);
	DELE_PTR_FULL(InterpolatingItem);
}

void FLockMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FLockMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FOpenableItemMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FOpenableItemMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FShroudBreakerSoftTearDownEvent::AfterRead()
{
}

void FShroudBreakerSoftTearDownEvent::BeforeDelete()
{
}

void FShroudBreakerDeactivateEffectsEvent::AfterRead()
{
}

void FShroudBreakerDeactivateEffectsEvent::BeforeDelete()
{
}

void FWreckMatch::AfterRead()
{
}

void FWreckMatch::BeforeDelete()
{
}

void FWreckSpawnBlockingObjectArrays::AfterRead()
{
}

void FWreckSpawnBlockingObjectArrays::BeforeDelete()
{
}

void FShipwreckDiscoveredRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(Wreck, AShipwreck);
}

void FShipwreckDiscoveredRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(Wreck);
}

void FEventShipwreckDiscoveredNotification::AfterRead()
{
}

void FEventShipwreckDiscoveredNotification::BeforeDelete()
{
}

void FWreckEvictionAfterMigrationFailedTelemetryEvent::AfterRead()
{
}

void FWreckEvictionAfterMigrationFailedTelemetryEvent::BeforeDelete()
{
}

void FDestroyingUnsafeWreckTelemetryEvent::AfterRead()
{
}

void FDestroyingUnsafeWreckTelemetryEvent::BeforeDelete()
{
}

void FNoValidWreckLocationFoundTelemetryEvent::AfterRead()
{
}

void FNoValidWreckLocationFoundTelemetryEvent::BeforeDelete()
{
}

void FDestroyingUnsafeExpiredWreckTelemetryEvent::AfterRead()
{
}

void FDestroyingUnsafeExpiredWreckTelemetryEvent::BeforeDelete()
{
}

void FTaleQuestSelectWreckLocationTelemetryEvent::AfterRead()
{
}

void FTaleQuestSelectWreckLocationTelemetryEvent::BeforeDelete()
{
}

void FDestroyingUnsafeWreckEvent::AfterRead()
{
}

void FDestroyingUnsafeWreckEvent::BeforeDelete()
{
}

void FShipPartConnections::AfterRead()
{
}

void FShipPartConnections::BeforeDelete()
{
}

void FShipConfigurationSettings::AfterRead()
{
}

void FShipConfigurationSettings::BeforeDelete()
{
}

void FAchievementSinkAnotherCrewsShip::AfterRead()
{
}

void FAchievementSinkAnotherCrewsShip::BeforeDelete()
{
}

void FAchievementSailThroughStormAtNightWithLightsOff::AfterRead()
{
	READ_PTR_FULL(Ship, AShip);
}

void FAchievementSailThroughStormAtNightWithLightsOff::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FAchievementSailCloseToShipWithoutFiring::AfterRead()
{
}

void FAchievementSailCloseToShipWithoutFiring::BeforeDelete()
{
}

void FAchievementSailFullyWithTheWind::AfterRead()
{
}

void FAchievementSailFullyWithTheWind::BeforeDelete()
{
}

void FShipDynamics::AfterRead()
{
}

void FShipDynamics::BeforeDelete()
{
}

void FEncounterParams::AfterRead()
{
}

void FEncounterParams::BeforeDelete()
{
}

void FDamageParamWeights::AfterRead()
{
}

void FDamageParamWeights::BeforeDelete()
{
}

void FStrainDamage::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FStrainDamage::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FScoreRewardShipPartData::AfterRead()
{
	READ_PTR_FULL(ShipPart, UClass);
}

void FScoreRewardShipPartData::BeforeDelete()
{
	DELE_PTR_FULL(ShipPart);
}

void FScoreRewardWieldableItemData::AfterRead()
{
	READ_PTR_FULL(WieldableItemClass, UClass);
}

void FScoreRewardWieldableItemData::BeforeDelete()
{
	DELE_PTR_FULL(WieldableItemClass);
}

void FScoreRewardData::AfterRead()
{
}

void FScoreRewardData::BeforeDelete()
{
}

void FQuestVariableContestIslandArchetype::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableContestIslandArchetype::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableInt::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableInt::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FContestShipLiverySet::AfterRead()
{
}

void FContestShipLiverySet::BeforeDelete()
{
}

void FTallTaleContestInfo::AfterRead()
{
}

void FTallTaleContestInfo::BeforeDelete()
{
}

void FContestVoyagesSelectorUnit::AfterRead()
{
	READ_PTR_FULL(ContestVoyages, UContestVoyagesDataAsset);
}

void FContestVoyagesSelectorUnit::BeforeDelete()
{
	DELE_PTR_FULL(ContestVoyages);
}

void FInitialShipSpawnLocations::AfterRead()
{
}

void FInitialShipSpawnLocations::BeforeDelete()
{
}

void FContextAction::AfterRead()
{
	READ_PTR_FULL(Context, URadialContextBase);
	READ_PTR_FULL(Radial, URadialCreationRuleAsset);
}

void FContextAction::BeforeDelete()
{
	DELE_PTR_FULL(Context);
	DELE_PTR_FULL(Radial);
}

void FShipCustomizationLoadout::AfterRead()
{
}

void FShipCustomizationLoadout::BeforeDelete()
{
}

void FQuestVariablePlayerStat::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariablePlayerStat::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FFlamesOfFateFlameInfo::AfterRead()
{
	READ_PTR_FULL(FlameTexture, UTexture);
}

void FFlamesOfFateFlameInfo::BeforeDelete()
{
	DELE_PTR_FULL(FlameTexture);
}

void FFlamesOfFateShipInfo::AfterRead()
{
	READ_PTR_FULL(ShipSize, UClass);
}

void FFlamesOfFateShipInfo::BeforeDelete()
{
	DELE_PTR_FULL(ShipSize);
}

void FSwitchMechanismTriggerPosition::AfterRead()
{
	READ_PTR_FULL(SwitchStartTransitionAudioEvent, UWwiseEvent);
	READ_PTR_FULL(SwitchStopTransitionAudioEvent, UWwiseEvent);
}

void FSwitchMechanismTriggerPosition::BeforeDelete()
{
	DELE_PTR_FULL(SwitchStartTransitionAudioEvent);
	DELE_PTR_FULL(SwitchStopTransitionAudioEvent);
}

void FClothingChestRandomFilter::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FClothingChestRandomFilter::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FShipCustomizationChestMutualExclusion::AfterRead()
{
	READ_PTR_FULL(A, UClass);
	READ_PTR_FULL(B, UClass);
}

void FShipCustomizationChestMutualExclusion::BeforeDelete()
{
	DELE_PTR_FULL(A);
	DELE_PTR_FULL(B);
}

void FRiddleTextRenderer::AfterRead()
{
	READ_PTR_FULL(Font, UFont);
}

void FRiddleTextRenderer::BeforeDelete()
{
	DELE_PTR_FULL(Font);
}

void FAISpawnActionStateParams::AfterRead()
{
}

void FAISpawnActionStateParams::BeforeDelete()
{
}

void FAIDeadActionStateParams::AfterRead()
{
}

void FAIDeadActionStateParams::BeforeDelete()
{
}

void FAISwimmingCreatureDeadActionStateEventMapItem::AfterRead()
{
}

void FAISwimmingCreatureDeadActionStateEventMapItem::BeforeDelete()
{
}

void FAISwimmingCreatureDeadActionStateParams::AfterRead()
{
	FAIDeadActionStateParams::AfterRead();

}

void FAISwimmingCreatureDeadActionStateParams::BeforeDelete()
{
	FAIDeadActionStateParams::BeforeDelete();

}

void FVfxSelectorRange::AfterRead()
{
}

void FVfxSelectorRange::BeforeDelete()
{
}

void FBuoyancyComponentSinkingParams::AfterRead()
{
}

void FBuoyancyComponentSinkingParams::BeforeDelete()
{
}

void FBuoyancyComponentLockToSurfaceParams::AfterRead()
{
}

void FBuoyancyComponentLockToSurfaceParams::BeforeDelete()
{
}

void FBuoyancyComponentExclusionParams::AfterRead()
{
}

void FBuoyancyComponentExclusionParams::BeforeDelete()
{
}

void FHealthRegenState::AfterRead()
{
}

void FHealthRegenState::BeforeDelete()
{
}

void FCharacterHitReactionDamagerTypeToAnimTypePair::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FCharacterHitReactionDamagerTypeToAnimTypePair::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FGhostPlayModeParameters::AfterRead()
{
}

void FGhostPlayModeParameters::BeforeDelete()
{
}

void FAthenaAnimationPulleyDataAssetEntry::AfterRead()
{
	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Idle, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Outof, UAnimSequence);
}

void FAthenaAnimationPulleyDataAssetEntry::BeforeDelete()
{
	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Idle);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Outof);
}

void FAthenaAIItemEngageEnemyMethods::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FAthenaAIItemEngageEnemyMethods::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FCauseOfDeathItemSpawnDistribution::AfterRead()
{
	READ_PTR_FULL(ItemSpawnDistributionAsset, UWeightedItemDescSpawnDataAsset);
	READ_PTR_FULL(ItemSpawnDistribution, UItemSpawnDistributionAsset);
}

void FCauseOfDeathItemSpawnDistribution::BeforeDelete()
{
	DELE_PTR_FULL(ItemSpawnDistributionAsset);
	DELE_PTR_FULL(ItemSpawnDistribution);
}

void FCollectorsChestStoredItemInfo::AfterRead()
{
	READ_PTR_FULL(ItemInfo, AItemInfo);
}

void FCollectorsChestStoredItemInfo::BeforeDelete()
{
	DELE_PTR_FULL(ItemInfo);
}

void FGoldInContainerData::AfterRead()
{
	READ_PTR_FULL(GoldMesh, UStaticMesh);
}

void FGoldInContainerData::BeforeDelete()
{
	DELE_PTR_FULL(GoldMesh);
}

void FAshenLordEncounterServiceDesc::AfterRead()
{
	FGameEventServiceDesc::AfterRead();

}

void FAshenLordEncounterServiceDesc::BeforeDelete()
{
	FGameEventServiceDesc::BeforeDelete();

}

void FActorInsideFlameInformation::AfterRead()
{
	READ_PTR_FULL(ActorWithFirePropagationInterface, AActor);
}

void FActorInsideFlameInformation::BeforeDelete()
{
	DELE_PTR_FULL(ActorWithFirePropagationInterface);
}

void FMarkerVariantDesc::AfterRead()
{
	READ_PTR_FULL(Variant, UClass);
	READ_PTR_FULL(MarkerType, UClass);
}

void FMarkerVariantDesc::BeforeDelete()
{
	DELE_PTR_FULL(Variant);
	DELE_PTR_FULL(MarkerType);
}

void FEmblemId::AfterRead()
{
}

void FEmblemId::BeforeDelete()
{
}

void FPetCustomizationPartMapping::AfterRead()
{
}

void FPetCustomizationPartMapping::BeforeDelete()
{
}

void FCampfireDamageLightingChance::AfterRead()
{
	READ_PTR_FULL(DamageType, UClass);
}

void FCampfireDamageLightingChance::BeforeDelete()
{
	DELE_PTR_FULL(DamageType);
}

void FDeepSeaRegionData::AfterRead()
{
}

void FDeepSeaRegionData::BeforeDelete()
{
}

void FActivePortal::AfterRead()
{
	READ_PTR_FULL(Portal, ATunnelOfTheDamnedPortal);
}

void FActivePortal::BeforeDelete()
{
	DELE_PTR_FULL(Portal);
}

void FServerNetworkDataTelemetryFragment::AfterRead()
{
}

void FServerNetworkDataTelemetryFragment::BeforeDelete()
{
}

void FNetworkDataTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FNetworkDataTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FNetworkDataTelemetryFragment::AfterRead()
{
}

void FNetworkDataTelemetryFragment::BeforeDelete()
{
}

void FPerformanceTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FPerformanceTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FMemoryTableData::AfterRead()
{
}

void FMemoryTableData::BeforeDelete()
{
}

void FMemoryDataTelemetryFragment::AfterRead()
{
}

void FMemoryDataTelemetryFragment::BeforeDelete()
{
}

void FOpenShopFrontEvent::AfterRead()
{
}

void FOpenShopFrontEvent::BeforeDelete()
{
}

void FRequestPremiumShopFrontOpenEvent::AfterRead()
{
}

void FRequestPremiumShopFrontOpenEvent::BeforeDelete()
{
}

void FProjectileQueuedEffect::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FProjectileQueuedEffect::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FCreativeCrewConfig::AfterRead()
{
}

void FCreativeCrewConfig::BeforeDelete()
{
}

void FCreativeCrewMember::AfterRead()
{
}

void FCreativeCrewMember::BeforeDelete()
{
}

void FCreativeSession::AfterRead()
{
}

void FCreativeSession::BeforeDelete()
{
}

void FSessionEvent::AfterRead()
{
}

void FSessionEvent::BeforeDelete()
{
}

void FRequestSessionEvent::AfterRead()
{
}

void FRequestSessionEvent::BeforeDelete()
{
}

void FJoinSessionFailedEvent::AfterRead()
{
}

void FJoinSessionFailedEvent::BeforeDelete()
{
}

void FJoinSessionSuccessEvent::AfterRead()
{
}

void FJoinSessionSuccessEvent::BeforeDelete()
{
}

void FCreateSessionFailedEvent::AfterRead()
{
}

void FCreateSessionFailedEvent::BeforeDelete()
{
}

void FCreateSessionSuccessEvent::AfterRead()
{
}

void FCreateSessionSuccessEvent::BeforeDelete()
{
}

void FRequestJoinSessionEvent::AfterRead()
{
}

void FRequestJoinSessionEvent::BeforeDelete()
{
}

void FRequestCreateSessionEvent::AfterRead()
{
}

void FRequestCreateSessionEvent::BeforeDelete()
{
}

void FEnableServerCreationEvent::AfterRead()
{
}

void FEnableServerCreationEvent::BeforeDelete()
{
}

void FBootFlowCreatorLobbyQuitEvent::AfterRead()
{
}

void FBootFlowCreatorLobbyQuitEvent::BeforeDelete()
{
}

void FBootFlowStartCreatorModeSessionStateEvent::AfterRead()
{
}

void FBootFlowStartCreatorModeSessionStateEvent::BeforeDelete()
{
}

void FPirateDeletionSucceededEvent::AfterRead()
{
}

void FPirateDeletionSucceededEvent::BeforeDelete()
{
}

void FPirateDeletionFailedEvent::AfterRead()
{
}

void FPirateDeletionFailedEvent::BeforeDelete()
{
}

void FContestMatchmakingClientResponseModel::AfterRead()
{
}

void FContestMatchmakingClientResponseModel::BeforeDelete()
{
}

void FContestMatchmakingCrewModel::AfterRead()
{
}

void FContestMatchmakingCrewModel::BeforeDelete()
{
}

void FServerMigrateFromTelemetryEvent::AfterRead()
{
}

void FServerMigrateFromTelemetryEvent::BeforeDelete()
{
}

void FPeriodObjectiveCompleteMessage::AfterRead()
{
}

void FPeriodObjectiveCompleteMessage::BeforeDelete()
{
}

void FEventCompanyProgressData::AfterRead()
{
}

void FEventCompanyProgressData::BeforeDelete()
{
}

void FDistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry::AfterRead()
{
}

void FDistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry::BeforeDelete()
{
}

void FDistanceThrottledRandomParticleSystemPickerEntry::AfterRead()
{
}

void FDistanceThrottledRandomParticleSystemPickerEntry::BeforeDelete()
{
}

void FDistanceThrottledRandomParticleSystemPicker::AfterRead()
{
}

void FDistanceThrottledRandomParticleSystemPicker::BeforeDelete()
{
}

void FBountyQuestDesc::AfterRead()
{
	FQuestDesc::AfterRead();

	READ_PTR_FULL(Spawner, UAIBountySpawner);
	READ_PTR_FULL(Layout, UBountyMapLayout);
	READ_PTR_FULL(Landmark, ALandmark);
	READ_PTR_FULL(OverrideTreasureMapItemDesc, UClass);
}

void FBountyQuestDesc::BeforeDelete()
{
	FQuestDesc::BeforeDelete();

	DELE_PTR_FULL(Spawner);
	DELE_PTR_FULL(Layout);
	DELE_PTR_FULL(Landmark);
	DELE_PTR_FULL(OverrideTreasureMapItemDesc);
}

void FBountyQuestTargetDefeatedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FBountyQuestTargetDefeatedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FBountyQuestApproachesLandmarkTelemetryEvent::AfterRead()
{
}

void FBountyQuestApproachesLandmarkTelemetryEvent::BeforeDelete()
{
}

void FPlayerBuriedItemsMapBundlePickedUpTelemetryEvent::AfterRead()
{
}

void FPlayerBuriedItemsMapBundlePickedUpTelemetryEvent::BeforeDelete()
{
}

void FTreasureSpawnedTelemetryEvent::AfterRead()
{
}

void FTreasureSpawnedTelemetryEvent::BeforeDelete()
{
}

void FTreasureSoldTelemetryEvent::AfterRead()
{
}

void FTreasureSoldTelemetryEvent::BeforeDelete()
{
}

void FTreasureDroppedTelemetryEvent::AfterRead()
{
}

void FTreasureDroppedTelemetryEvent::BeforeDelete()
{
}

void FTreasurePickedUpTelemetryEvent::AfterRead()
{
}

void FTreasurePickedUpTelemetryEvent::BeforeDelete()
{
}

void FTreasureSurfacedTelemetryEvent::AfterRead()
{
}

void FTreasureSurfacedTelemetryEvent::BeforeDelete()
{
}

void FTreasureFoundTelemetryEvent::AfterRead()
{
}

void FTreasureFoundTelemetryEvent::BeforeDelete()
{
}

void FTreasureChestSoldInContestNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FTreasureChestSoldInContestNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FShroudBreakerActivateEffectsEvent::AfterRead()
{
}

void FShroudBreakerActivateEffectsEvent::BeforeDelete()
{
}

void FShroudBreakerDeactivatedEvent::AfterRead()
{
}

void FShroudBreakerDeactivatedEvent::BeforeDelete()
{
}

void FShroudBreakerActivatedEvent::AfterRead()
{
}

void FShroudBreakerActivatedEvent::BeforeDelete()
{
}

void FEventGameNarrationClientNotificationMessage::AfterRead()
{
}

void FEventGameNarrationClientNotificationMessage::BeforeDelete()
{
}

void FEventPlayerSendOutDirectTextMessage::AfterRead()
{
	READ_PTR_FULL(Sender, APlayerState);
}

void FEventPlayerSendOutDirectTextMessage::BeforeDelete()
{
	DELE_PTR_FULL(Sender);
}

void FEventSendNewTextMessageToServer::AfterRead()
{
}

void FEventSendNewTextMessageToServer::BeforeDelete()
{
}

void FNotificationStickiness::AfterRead()
{
}

void FNotificationStickiness::BeforeDelete()
{
}

void FPlayerTextChatMessage::AfterRead()
{
}

void FPlayerTextChatMessage::BeforeDelete()
{
}

void FEventPlayerTextChatMessageUINotification::AfterRead()
{
	FEventUINotification::AfterRead();

}

void FEventPlayerTextChatMessageUINotification::BeforeDelete()
{
	FEventUINotification::BeforeDelete();

}

void FAthenaStreamedLevelItem::AfterRead()
{
	READ_PTR_FULL(DataAsset, UAthenaStreamedLevelDataAsset);
}

void FAthenaStreamedLevelItem::BeforeDelete()
{
	DELE_PTR_FULL(DataAsset);
}

void FEmissaryBootyItemStats::AfterRead()
{
	READ_PTR_FULL(EmissaryCompany, UClass);
}

void FEmissaryBootyItemStats::BeforeDelete()
{
	DELE_PTR_FULL(EmissaryCompany);
}

void FBootyItemStats::AfterRead()
{
}

void FBootyItemStats::BeforeDelete()
{
}

void FCompanyBootyStats::AfterRead()
{
	READ_PTR_FULL(CompanyId, UClass);
}

void FCompanyBootyStats::BeforeDelete()
{
	DELE_PTR_FULL(CompanyId);
}

void FCompanyBootyStatList::AfterRead()
{
}

void FCompanyBootyStatList::BeforeDelete()
{
}

void FDeadActionStateParams::AfterRead()
{
	READ_PTR_FULL(PlayerGhostDataAsset, UGhostDataAsset);
}

void FDeadActionStateParams::BeforeDelete()
{
	DELE_PTR_FULL(PlayerGhostDataAsset);
}

void FMaterialInformationVFXData::AfterRead()
{
	FTableRowBase::AfterRead();

}

void FMaterialInformationVFXData::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

}

void FMaterialInformationAudioData::AfterRead()
{
	FTableRowBase::AfterRead();

}

void FMaterialInformationAudioData::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

}

void FMeleeAttackHitResponses::AfterRead()
{
}

void FMeleeAttackHitResponses::BeforeDelete()
{
}

void FEventBlocked::AfterRead()
{
}

void FEventBlocked::BeforeDelete()
{
}

void FMeleeWeaponMovementSpeedPair::AfterRead()
{
}

void FMeleeWeaponMovementSpeedPair::BeforeDelete()
{
}

void FPlayerGameStartTelemetryEvent::AfterRead()
{
}

void FPlayerGameStartTelemetryEvent::BeforeDelete()
{
}

void FEmoteDataEntryFrontend::AfterRead()
{
}

void FEmoteDataEntryFrontend::BeforeDelete()
{
}

void FPremiumCatalogItemSet::AfterRead()
{
}

void FPremiumCatalogItemSet::BeforeDelete()
{
}

void FPremiumCatalogLandingPageTab::AfterRead()
{
}

void FPremiumCatalogLandingPageTab::BeforeDelete()
{
}

void FCatalogDescTab::AfterRead()
{
	READ_PTR_FULL(Catalog, UCatalogDataAsset);
}

void FCatalogDescTab::BeforeDelete()
{
	DELE_PTR_FULL(Catalog);
}

void FFeatureToggledPremiumCatalog::AfterRead()
{
	READ_PTR_FULL(PremiumCatalog, UPremiumCatalogDataAsset);
}

void FFeatureToggledPremiumCatalog::BeforeDelete()
{
	DELE_PTR_FULL(PremiumCatalog);
}

void FSkeletonAudioEvents::AfterRead()
{
	READ_PTR_FULL(PlayLoop, UWwiseEvent);
	READ_PTR_FULL(StopLoop, UWwiseEvent);
	READ_PTR_FULL(StartOneShot, UWwiseEvent);
	READ_PTR_FULL(LeaveOneShot, UWwiseEvent);
}

void FSkeletonAudioEvents::BeforeDelete()
{
	DELE_PTR_FULL(PlayLoop);
	DELE_PTR_FULL(StopLoop);
	DELE_PTR_FULL(StartOneShot);
	DELE_PTR_FULL(LeaveOneShot);
}

void FSkeletonAICharacterItemSpecificAudioEvents::AfterRead()
{
}

void FSkeletonAICharacterItemSpecificAudioEvents::BeforeDelete()
{
}

void FSkeletonAICharacterStrategyAudioEvents::AfterRead()
{
	READ_PTR_FULL(AIStrategy, UClass);
}

void FSkeletonAICharacterStrategyAudioEvents::BeforeDelete()
{
	DELE_PTR_FULL(AIStrategy);
}

void FFortTogglerUnit::AfterRead()
{
	READ_PTR_FULL(AIProxPlayerTracker, UAIProximityPlayerTracker);
}

void FFortTogglerUnit::BeforeDelete()
{
	DELE_PTR_FULL(AIProxPlayerTracker);
}

void FAdditionalCaptainTarget::AfterRead()
{
	READ_PTR_FULL(ClassId, UClass);
	READ_PTR_FULL(Form, UAthenaAIFormDataAsset);
	READ_PTR_FULL(Skillset, UAthenaAIControllerParamsDataAsset);
	READ_PTR_FULL(Loadout, ULoadoutAsset);
	READ_PTR_FULL(OverrideAICombatDialogue, UClass);
}

void FAdditionalCaptainTarget::BeforeDelete()
{
	DELE_PTR_FULL(ClassId);
	DELE_PTR_FULL(Form);
	DELE_PTR_FULL(Skillset);
	DELE_PTR_FULL(Loadout);
	DELE_PTR_FULL(OverrideAICombatDialogue);
}

void FAdditionalWave::AfterRead()
{
	READ_PTR_FULL(AICombatDialogue, UClass);
}

void FAdditionalWave::BeforeDelete()
{
	DELE_PTR_FULL(AICombatDialogue);
}

void FMapTextureRenderData::AfterRead()
{
	READ_PTR_FULL(RenderResource, UMapRenderResource);
	READ_PTR_FULL(Material, UMaterialInstance);
}

void FMapTextureRenderData::BeforeDelete()
{
	DELE_PTR_FULL(RenderResource);
	DELE_PTR_FULL(Material);
}

void FNPCReactionDualActorVOEntry::AfterRead()
{
}

void FNPCReactionDualActorVOEntry::BeforeDelete()
{
}

void FNPCOnSurfaceStateInfo::AfterRead()
{
}

void FNPCOnSurfaceStateInfo::BeforeDelete()
{
}

void FNPCOnSurfaceVOEntry::AfterRead()
{
	READ_PTR_FULL(DialogueData, USceneDialogueData);
	READ_PTR_FULL(VOEvent, UWwiseEvent);
}

void FNPCOnSurfaceVOEntry::BeforeDelete()
{
	DELE_PTR_FULL(DialogueData);
	DELE_PTR_FULL(VOEvent);
}

void FNPCOnSurfaceVOGroup::AfterRead()
{
}

void FNPCOnSurfaceVOGroup::BeforeDelete()
{
}

void FClueSiteTypeToMarkId::AfterRead()
{
	READ_PTR_FULL(ClueSiteType, UClass);
	READ_PTR_FULL(MapMarkId, UClass);
}

void FClueSiteTypeToMarkId::BeforeDelete()
{
	DELE_PTR_FULL(ClueSiteType);
	DELE_PTR_FULL(MapMarkId);
}

void FStandardHullDragDynamicsParameters::AfterRead()
{
}

void FStandardHullDragDynamicsParameters::BeforeDelete()
{
}

void FStandardRudderDynamicsParameters::AfterRead()
{
}

void FStandardRudderDynamicsParameters::BeforeDelete()
{
}

void FStandardSailDynamicsParameters::AfterRead()
{
}

void FStandardSailDynamicsParameters::BeforeDelete()
{
}

void FPlayerActivityIconInfo::AfterRead()
{
}

void FPlayerActivityIconInfo::BeforeDelete()
{
}

void FPlayerActivityLifetimeRule::AfterRead()
{
}

void FPlayerActivityLifetimeRule::BeforeDelete()
{
}

void FEncounterListenerData::AfterRead()
{
}

void FEncounterListenerData::BeforeDelete()
{
}

void FFeedStruct::AfterRead()
{
	READ_PTR_FULL(ActorToFeed, AActor);
}

void FFeedStruct::BeforeDelete()
{
	DELE_PTR_FULL(ActorToFeed);
}

void FLandmarkReaction::AfterRead()
{
	READ_PTR_FULL(GateCompletedAudioCue, UWwiseEvent);
	READ_PTR_FULL(GateCompletedMusicCue, UWwiseEvent);
}

void FLandmarkReaction::BeforeDelete()
{
	DELE_PTR_FULL(GateCompletedAudioCue);
	DELE_PTR_FULL(GateCompletedMusicCue);
}

void FAirGivingVolumeData::AfterRead()
{
}

void FAirGivingVolumeData::BeforeDelete()
{
}

void FAllowedInteractableTypes::AfterRead()
{
}

void FAllowedInteractableTypes::BeforeDelete()
{
}

void FCutScenePlayData::AfterRead()
{
	READ_PTR_FULL(DialogueData, USceneDialogueData);
}

void FCutScenePlayData::BeforeDelete()
{
	DELE_PTR_FULL(DialogueData);
}

void FDropItemParams::AfterRead()
{
}

void FDropItemParams::BeforeDelete()
{
}

void FCharacterSocketCollisionResult::AfterRead()
{
}

void FCharacterSocketCollisionResult::BeforeDelete()
{
}

void FProjectile::AfterRead()
{
}

void FProjectile::BeforeDelete()
{
}

void FSprintLogicHandler::AfterRead()
{
}

void FSprintLogicHandler::BeforeDelete()
{
}

void FWalkLogicHandler::AfterRead()
{
}

void FWalkLogicHandler::BeforeDelete()
{
}

void FFirstInteractableTelemetryEvent::AfterRead()
{
}

void FFirstInteractableTelemetryEvent::BeforeDelete()
{
}

void FOnlineAthenaGameModeConfigurationSettings::AfterRead()
{
}

void FOnlineAthenaGameModeConfigurationSettings::BeforeDelete()
{
}

void FServerLifetimeConfigurationSettings::AfterRead()
{
}

void FServerLifetimeConfigurationSettings::BeforeDelete()
{
}

void FServerTelemetryConfigurationSettings::AfterRead()
{
}

void FServerTelemetryConfigurationSettings::BeforeDelete()
{
}

void FEventApplyStatusShipCurse::AfterRead()
{
}

void FEventApplyStatusShipCurse::BeforeDelete()
{
}

void FEventShipPreventServerMigrationCurse::AfterRead()
{
}

void FEventShipPreventServerMigrationCurse::BeforeDelete()
{
}

void FEventCurseWheelLock::AfterRead()
{
}

void FEventCurseWheelLock::BeforeDelete()
{
}

void FEventCurseBallast::AfterRead()
{
}

void FEventCurseBallast::BeforeDelete()
{
}

void FEventShipCurseFX::AfterRead()
{
}

void FEventShipCurseFX::BeforeDelete()
{
}

void FCurseShipCannonsEvent::AfterRead()
{
}

void FCurseShipCannonsEvent::BeforeDelete()
{
}

void FEventDisableInteractionPoints::AfterRead()
{
}

void FEventDisableInteractionPoints::BeforeDelete()
{
}

void FEventCurseCapstan::AfterRead()
{
}

void FEventCurseCapstan::BeforeDelete()
{
}

void FEventCurseChangeSailHeight::AfterRead()
{
}

void FEventCurseChangeSailHeight::BeforeDelete()
{
}

void FTimedResponseAction::AfterRead()
{
}

void FTimedResponseAction::BeforeDelete()
{
}

void FCatalogOfferBundleDataAsset::AfterRead()
{
	READ_PTR_FULL(OwningBundle, UCatalogOfferDataAsset);
}

void FCatalogOfferBundleDataAsset::BeforeDelete()
{
	DELE_PTR_FULL(OwningBundle);
}

void FItemPreviewUpdateCameraEvent::AfterRead()
{
}

void FItemPreviewUpdateCameraEvent::BeforeDelete()
{
}

void FItemPreviewShutdownEvent::AfterRead()
{
}

void FItemPreviewShutdownEvent::BeforeDelete()
{
}

void FItemPreviewBusyEvent::AfterRead()
{
}

void FItemPreviewBusyEvent::BeforeDelete()
{
}

void FItemPreviewDataReadyEvent::AfterRead()
{
}

void FItemPreviewDataReadyEvent::BeforeDelete()
{
}

void FItemPreviewMoveCameraEvent::AfterRead()
{
}

void FItemPreviewMoveCameraEvent::BeforeDelete()
{
}

void FSetItemOnRadialInventorySlot::AfterRead()
{
}

void FSetItemOnRadialInventorySlot::BeforeDelete()
{
}

void FSetTotalItemsOnRadialInventorySlot::AfterRead()
{
}

void FSetTotalItemsOnRadialInventorySlot::BeforeDelete()
{
}

void FSetMapTypeOnRadialInventorySlot::AfterRead()
{
}

void FSetMapTypeOnRadialInventorySlot::BeforeDelete()
{
}

void FClientStartServerMatchmakingTelemetryEvent::AfterRead()
{
}

void FClientStartServerMatchmakingTelemetryEvent::BeforeDelete()
{
}

void FUpdatedEntitlementsAvailableEvent::AfterRead()
{
}

void FUpdatedEntitlementsAvailableEvent::BeforeDelete()
{
}

void FPurchaseConfigurationSettings::AfterRead()
{
}

void FPurchaseConfigurationSettings::BeforeDelete()
{
}

void FInitialisePiratePreviewInShop::AfterRead()
{
}

void FInitialisePiratePreviewInShop::BeforeDelete()
{
}

void FRankOffer::AfterRead()
{
}

void FRankOffer::BeforeDelete()
{
}

void FVoyageOffer::AfterRead()
{
}

void FVoyageOffer::BeforeDelete()
{
}

void FCompanyShopOffersEvent::AfterRead()
{
}

void FCompanyShopOffersEvent::BeforeDelete()
{
}

void FRequestCompanyShopOffersEvent::AfterRead()
{
}

void FRequestCompanyShopOffersEvent::BeforeDelete()
{
}

void FPurchaseShopOfferFailedEvent::AfterRead()
{
}

void FPurchaseShopOfferFailedEvent::BeforeDelete()
{
}

void FPurchaseShopOfferSucceededEvent::AfterRead()
{
}

void FPurchaseShopOfferSucceededEvent::BeforeDelete()
{
}

void FRequestPurchaseShopOfferEvent::AfterRead()
{
}

void FRequestPurchaseShopOfferEvent::BeforeDelete()
{
}

void FShopOffersEvent::AfterRead()
{
}

void FShopOffersEvent::BeforeDelete()
{
}

void FRequestShopOffersFailedEvent::AfterRead()
{
}

void FRequestShopOffersFailedEvent::BeforeDelete()
{
}

void FRequestShopOffersEvent::AfterRead()
{
}

void FRequestShopOffersEvent::BeforeDelete()
{
}

void FForceCloseShopEvent::AfterRead()
{
}

void FForceCloseShopEvent::BeforeDelete()
{
}

void FShopClosedEvent::AfterRead()
{
}

void FShopClosedEvent::BeforeDelete()
{
}

void FSpeechAccessibilityModel::AfterRead()
{
}

void FSpeechAccessibilityModel::BeforeDelete()
{
}

void FSpeechAccessibilityOptions::AfterRead()
{
}

void FSpeechAccessibilityOptions::BeforeDelete()
{
}

void FLocalGameChatStatusEvent::AfterRead()
{
}

void FLocalGameChatStatusEvent::BeforeDelete()
{
}

void FSignOutButtonVisibilityEvent::AfterRead()
{
}

void FSignOutButtonVisibilityEvent::BeforeDelete()
{
}

void FUpdateSignOutButtonVisibilityEvent::AfterRead()
{
}

void FUpdateSignOutButtonVisibilityEvent::BeforeDelete()
{
}

void FUseMaidenVoyageFlowEvent::AfterRead()
{
}

void FUseMaidenVoyageFlowEvent::BeforeDelete()
{
}

void FClientInputMatchmakingResult::AfterRead()
{
}

void FClientInputMatchmakingResult::BeforeDelete()
{
}

void FBootFlowCrossInputMatchmakingStateEvent::AfterRead()
{
}

void FBootFlowCrossInputMatchmakingStateEvent::BeforeDelete()
{
}

void FEventBackfillWeightingChange::AfterRead()
{
}

void FEventBackfillWeightingChange::BeforeDelete()
{
}

void FHideGenericModalContinueEvent::AfterRead()
{
}

void FHideGenericModalContinueEvent::BeforeDelete()
{
}

void FGenericModalContinueEvent::AfterRead()
{
}

void FGenericModalContinueEvent::BeforeDelete()
{
}

void FQueryGenericModalContinueEvent::AfterRead()
{
}

void FQueryGenericModalContinueEvent::BeforeDelete()
{
}

void FGenericModalContinueConfirmEvent::AfterRead()
{
}

void FGenericModalContinueConfirmEvent::BeforeDelete()
{
}

void FHideGenericConfirmationEvent::AfterRead()
{
}

void FHideGenericConfirmationEvent::BeforeDelete()
{
}

void FGenericConfirmationEvent::AfterRead()
{
}

void FGenericConfirmationEvent::BeforeDelete()
{
}

void FQueryGenericConfirmationEvent::AfterRead()
{
}

void FQueryGenericConfirmationEvent::BeforeDelete()
{
}

void FGenericConfirmEvent::AfterRead()
{
}

void FGenericConfirmEvent::BeforeDelete()
{
}

void FGenericRejectEvent::AfterRead()
{
}

void FGenericRejectEvent::BeforeDelete()
{
}

void FClientEndEngagementMessageEvent::AfterRead()
{
}

void FClientEndEngagementMessageEvent::BeforeDelete()
{
}

void FMapTableAnimationEvent_Advance::AfterRead()
{
}

void FMapTableAnimationEvent_Advance::BeforeDelete()
{
}

void FMapTableAnimationEvent_End::AfterRead()
{
}

void FMapTableAnimationEvent_End::BeforeDelete()
{
}

void FMapTableAnimationEvent_Start::AfterRead()
{
}

void FMapTableAnimationEvent_Start::BeforeDelete()
{
}

void FArenaTutorialFinishedEvent::AfterRead()
{
}

void FArenaTutorialFinishedEvent::BeforeDelete()
{
}

void FArenaTutorialEndEvent::AfterRead()
{
}

void FArenaTutorialEndEvent::BeforeDelete()
{
}

void FArenaTutorialAnimationStartEvent::AfterRead()
{
}

void FArenaTutorialAnimationStartEvent::BeforeDelete()
{
}

void FArenaTutorialStartEvent::AfterRead()
{
}

void FArenaTutorialStartEvent::BeforeDelete()
{
}

void FOptedIntoMarketingEvent::AfterRead()
{
}

void FOptedIntoMarketingEvent::BeforeDelete()
{
}

void FGameNarrationStateChangeEvent::AfterRead()
{
}

void FGameNarrationStateChangeEvent::BeforeDelete()
{
}

void FGamerTagUpdated::AfterRead()
{
}

void FGamerTagUpdated::BeforeDelete()
{
}

void FPirateRerollEvent_CancelRerollRequest::AfterRead()
{
}

void FPirateRerollEvent_CancelRerollRequest::BeforeDelete()
{
}

void FPirateRerollEvent_RestartClient::AfterRead()
{
}

void FPirateRerollEvent_RestartClient::BeforeDelete()
{
}

void FPirateRerollEvent_OpenReroll::AfterRead()
{
}

void FPirateRerollEvent_OpenReroll::BeforeDelete()
{
}

void FPirateRerollEvent_HideRequestRerollModal::AfterRead()
{
}

void FPirateRerollEvent_HideRequestRerollModal::BeforeDelete()
{
}

void FPirateRerollEvent_RequestReroll::AfterRead()
{
}

void FPirateRerollEvent_RequestReroll::BeforeDelete()
{
}

void FPirateRerollEvent_CancelReroll::AfterRead()
{
}

void FPirateRerollEvent_CancelReroll::BeforeDelete()
{
}

void FPirateRerollEvent_StartReroll::AfterRead()
{
}

void FPirateRerollEvent_StartReroll::BeforeDelete()
{
}

void FPirateCreationEvent_InitialModalRemoved::AfterRead()
{
}

void FPirateCreationEvent_InitialModalRemoved::BeforeDelete()
{
}

void FPirateCreationEvent_FavoriteButtonPressed::AfterRead()
{
}

void FPirateCreationEvent_FavoriteButtonPressed::BeforeDelete()
{
}

void FPirateCreationEvent_SelectButtonPressed::AfterRead()
{
}

void FPirateCreationEvent_SelectButtonPressed::BeforeDelete()
{
}

void FPirateCreationEvent_RefreshButtonPressed::AfterRead()
{
}

void FPirateCreationEvent_RefreshButtonPressed::BeforeDelete()
{
}

void FPirateCreationEvent_End::AfterRead()
{
}

void FPirateCreationEvent_End::BeforeDelete()
{
}

void FPirateCreationEvent_CelebrationEnded::AfterRead()
{
}

void FPirateCreationEvent_CelebrationEnded::BeforeDelete()
{
}

void FPirateCreationEvent_PirateSaved::AfterRead()
{
}

void FPirateCreationEvent_PirateSaved::BeforeDelete()
{
}

void FPirateCreationEvent_SavePirate::AfterRead()
{
}

void FPirateCreationEvent_SavePirate::BeforeDelete()
{
}

void FPirateCreationEvent_UserExitGameRequest::AfterRead()
{
}

void FPirateCreationEvent_UserExitGameRequest::BeforeDelete()
{
}

void FPirateCreationEvent_UserConfirmationResponse::AfterRead()
{
}

void FPirateCreationEvent_UserConfirmationResponse::BeforeDelete()
{
}

void FPirateCreationEvent_UserConfirmationRequest::AfterRead()
{
}

void FPirateCreationEvent_UserConfirmationRequest::BeforeDelete()
{
}

void FPirateCreationEvent_UserPirateGenerateRequest::AfterRead()
{
}

void FPirateCreationEvent_UserPirateGenerateRequest::BeforeDelete()
{
}

void FPirateCreationEvent_Begin::AfterRead()
{
}

void FPirateCreationEvent_Begin::BeforeDelete()
{
}

void FBootFlowWhatsNewArticle::AfterRead()
{
}

void FBootFlowWhatsNewArticle::BeforeDelete()
{
}

void FPlayerXpGrantedTelemetryEvent::AfterRead()
{
}

void FPlayerXpGrantedTelemetryEvent::BeforeDelete()
{
}

void FBuoyantObjectSpawnDesc::AfterRead()
{
	READ_PTR_FULL(Type, UClass);
}

void FBuoyantObjectSpawnDesc::BeforeDelete()
{
	DELE_PTR_FULL(Type);
}

void FCrewRequestedRivalChangeEvent::AfterRead()
{
}

void FCrewRequestedRivalChangeEvent::BeforeDelete()
{
}

void FContestCrewMemberModel::AfterRead()
{
}

void FContestCrewMemberModel::BeforeDelete()
{
}

void FContestCrewResultModel::AfterRead()
{
}

void FContestCrewResultModel::BeforeDelete()
{
}

void FUseLadderActionStateConstructionInfo::AfterRead()
{
	FDockToObjectActionStateConstructionInfo::AfterRead();

}

void FUseLadderActionStateConstructionInfo::BeforeDelete()
{
	FDockToObjectActionStateConstructionInfo::BeforeDelete();

}

void FWaitForDemoResetActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FWaitForDemoResetActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FWaitingToSpawnActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(StartSpot, AActor);
}

void FWaitingToSpawnActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(StartSpot);
}

void FEventWaitingToSpawnNetRelevantActorsCreated::AfterRead()
{
}

void FEventWaitingToSpawnNetRelevantActorsCreated::BeforeDelete()
{
}

void FEventRemoveStackableLocomotionActionState::AfterRead()
{
}

void FEventRemoveStackableLocomotionActionState::BeforeDelete()
{
}

void FEventAddStackableLocomotionActionState::AfterRead()
{
}

void FEventAddStackableLocomotionActionState::BeforeDelete()
{
}

void FStopUpdatingConstellationVisibility::AfterRead()
{
}

void FStopUpdatingConstellationVisibility::BeforeDelete()
{
}

void FStartUpdatingConstellationVisibility::AfterRead()
{
}

void FStartUpdatingConstellationVisibility::BeforeDelete()
{
}

void FConstellationSpawnedEvent::AfterRead()
{
}

void FConstellationSpawnedEvent::BeforeDelete()
{
}

void FUpdateWalletBalanceHUDEvent::AfterRead()
{
}

void FUpdateWalletBalanceHUDEvent::BeforeDelete()
{
}

void FArmoryChestEquipItemEvent::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FArmoryChestEquipItemEvent::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FPossessionsChestClosedEvent::AfterRead()
{
}

void FPossessionsChestClosedEvent::BeforeDelete()
{
}

void FRequestCompanyProgressFailedEvent::AfterRead()
{
}

void FRequestCompanyProgressFailedEvent::BeforeDelete()
{
}

void FCompanyReputationProgressModelCollection::AfterRead()
{
}

void FCompanyReputationProgressModelCollection::BeforeDelete()
{
}

void FRequestCompanyProgressSucceededEvent::AfterRead()
{
}

void FRequestCompanyProgressSucceededEvent::BeforeDelete()
{
}

void FEmblemCriteriaProgress::AfterRead()
{
}

void FEmblemCriteriaProgress::BeforeDelete()
{
}

void FEmblemProgress::AfterRead()
{
}

void FEmblemProgress::BeforeDelete()
{
}

void FRequestEmblemProgressSucceededEvent::AfterRead()
{
}

void FRequestEmblemProgressSucceededEvent::BeforeDelete()
{
}

void FRequestEmblemDefinitionsFailedEvent::AfterRead()
{
}

void FRequestEmblemDefinitionsFailedEvent::BeforeDelete()
{
}

void FRequestEmblemDefinitionsSucceededEvent::AfterRead()
{
}

void FRequestEmblemDefinitionsSucceededEvent::BeforeDelete()
{
}

void FRequestEmblemProgressEvent::AfterRead()
{
}

void FRequestEmblemProgressEvent::BeforeDelete()
{
}

void FPioneerProgressMessage::AfterRead()
{
}

void FPioneerProgressMessage::BeforeDelete()
{
}

void FRetrieveAllPiratesRequestSuccessEvent::AfterRead()
{
}

void FRetrieveAllPiratesRequestSuccessEvent::BeforeDelete()
{
}

void FRetrieveAllPiratesRequestFailedEvent::AfterRead()
{
}

void FRetrieveAllPiratesRequestFailedEvent::BeforeDelete()
{
}

void FRetrieveAllPiratesRequestEvent::AfterRead()
{
}

void FRetrieveAllPiratesRequestEvent::BeforeDelete()
{
}

void FCreatePirateRequestSuccessEvent::AfterRead()
{
}

void FCreatePirateRequestSuccessEvent::BeforeDelete()
{
}

void FContestCrewPositionTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FContestCrewPositionTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FContestCrewPositionTelemetryFragment::AfterRead()
{
}

void FContestCrewPositionTelemetryFragment::BeforeDelete()
{
}

void FContestBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FContestBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FContestBaseTelemetryFragment::AfterRead()
{
}

void FContestBaseTelemetryFragment::BeforeDelete()
{
}

void FContestParticipantTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FContestParticipantTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FContestParticipantData::AfterRead()
{
}

void FContestParticipantData::BeforeDelete()
{
}

void FContestScoreTelemetryFragment::AfterRead()
{
}

void FContestScoreTelemetryFragment::BeforeDelete()
{
}

void FServerTavernCrewMatchmakingVisibilityChangedTelemetryEvent::AfterRead()
{
}

void FServerTavernCrewMatchmakingVisibilityChangedTelemetryEvent::BeforeDelete()
{
}

void FServerTavernServerRecruitmentEndedTelemetryEvent::AfterRead()
{
}

void FServerTavernServerRecruitmentEndedTelemetryEvent::BeforeDelete()
{
}

void FServerTavernStagingCountdownStoppedTelemetryEvent::AfterRead()
{
}

void FServerTavernStagingCountdownStoppedTelemetryEvent::BeforeDelete()
{
}

void FServerTavernStagingCountdownStartedTelemetryEvent::AfterRead()
{
}

void FServerTavernStagingCountdownStartedTelemetryEvent::BeforeDelete()
{
}

void FServerTavernRecruitmentEndedTelemetryEvent::AfterRead()
{
}

void FServerTavernRecruitmentEndedTelemetryEvent::BeforeDelete()
{
}

void FServerTavernSinglePlayerSpawnedTelemetryEvent::AfterRead()
{
}

void FServerTavernSinglePlayerSpawnedTelemetryEvent::BeforeDelete()
{
}

void FServerTavernHeartbeatTelemetryEvent::AfterRead()
{
}

void FServerTavernHeartbeatTelemetryEvent::BeforeDelete()
{
}

void FRequestPlayerNameplateUIEventData::AfterRead()
{
}

void FRequestPlayerNameplateUIEventData::BeforeDelete()
{
}

void FUpdateRivalVoteCountUIEvent::AfterRead()
{
}

void FUpdateRivalVoteCountUIEvent::BeforeDelete()
{
}

void FSetRivalVotingUIEvent::AfterRead()
{
	READ_PTR_FULL(NotificationInputId, UClass);
}

void FSetRivalVotingUIEvent::BeforeDelete()
{
	DELE_PTR_FULL(NotificationInputId);
}

void FHideRivalVotingUIEvent::AfterRead()
{
}

void FHideRivalVotingUIEvent::BeforeDelete()
{
}

void FShowRivalVotingUIEvent::AfterRead()
{
}

void FShowRivalVotingUIEvent::BeforeDelete()
{
}

void FUISetAudioSwitchEvent::AfterRead()
{
}

void FUISetAudioSwitchEvent::BeforeDelete()
{
}

void FUIAudioCueEvent::AfterRead()
{
}

void FUIAudioCueEvent::BeforeDelete()
{
}

void FEventShipTopDeckBlocked::AfterRead()
{
}

void FEventShipTopDeckBlocked::BeforeDelete()
{
}

void FEventSinkingShipTeleportTime::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventSinkingShipTeleportTime::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventBeginningToSink::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
}

void FEventBeginningToSink::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
}

void FEventExitedShip::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
	READ_PTR_FULL(Actor, AActor);
}

void FEventExitedShip::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Actor);
}

void FEventEnteredShip::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
	READ_PTR_FULL(Actor, AActor);
}

void FEventEnteredShip::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Actor);
}

void FShipBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FShipBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FShipBaseTelemetryFragment::AfterRead()
{
}

void FShipBaseTelemetryFragment::BeforeDelete()
{
}

void FAthenaAnimationJumpingAnimData::AfterRead()
{
}

void FAthenaAnimationJumpingAnimData::BeforeDelete()
{
}

void FStorageContainerMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FStorageContainerMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FEventReceiveCollectorsChestItemSlotsState::AfterRead()
{
	READ_PTR_FULL(Source, UCollectorsChestItemSlotInteractable);
}

void FEventReceiveCollectorsChestItemSlotsState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FCollectorsChestMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FCollectorsChestMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FEventReceiveQuestBookPagesInContainerComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UQuestBookPagesInContainerComponent);
}

void FEventReceiveQuestBookPagesInContainerComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FItemStoredInChestEvent::AfterRead()
{
	READ_PTR_FULL(StoredItem, AItemInfo);
}

void FItemStoredInChestEvent::BeforeDelete()
{
	DELE_PTR_FULL(StoredItem);
}

void FPickedUpItemFromChestEvent::AfterRead()
{
	READ_PTR_FULL(PickupActor, AActor);
}

void FPickedUpItemFromChestEvent::BeforeDelete()
{
	DELE_PTR_FULL(PickupActor);
}

void FEventPagesInContainerTaken::AfterRead()
{
}

void FEventPagesInContainerTaken::BeforeDelete()
{
}

void FEventGoldInContainerTaken::AfterRead()
{
}

void FEventGoldInContainerTaken::BeforeDelete()
{
}

void FEventTeleportLocationCreated::AfterRead()
{
}

void FEventTeleportLocationCreated::BeforeDelete()
{
}

void FTunnelDestinationInfo::AfterRead()
{
}

void FTunnelDestinationInfo::BeforeDelete()
{
}

void FTunnelOfTheDamnedMigrationFailedTelemetryEvent::AfterRead()
{
}

void FTunnelOfTheDamnedMigrationFailedTelemetryEvent::BeforeDelete()
{
}

void FTunnelOfTheDamnedMigrationSucceededTelemetryEvent::AfterRead()
{
}

void FTunnelOfTheDamnedMigrationSucceededTelemetryEvent::BeforeDelete()
{
}

void FLastPlayerArrivedInTunnelOfTheDamnedTelemetryEvent::AfterRead()
{
}

void FLastPlayerArrivedInTunnelOfTheDamnedTelemetryEvent::BeforeDelete()
{
}

void FFirstPlayerArrivedInTunnelOfTheDamnedTelemetryEvent::AfterRead()
{
}

void FFirstPlayerArrivedInTunnelOfTheDamnedTelemetryEvent::BeforeDelete()
{
}

void FCrewMemberLeftTunnelOfTheDamnedTelemetryEvent::AfterRead()
{
}

void FCrewMemberLeftTunnelOfTheDamnedTelemetryEvent::BeforeDelete()
{
}

void FCrewMemberEnteredTunnelOfTheDamnedTelemetryEvent::AfterRead()
{
}

void FCrewMemberEnteredTunnelOfTheDamnedTelemetryEvent::BeforeDelete()
{
}

void FTunnelOfTheDamnedHandoverCompletedTelemetryEvent::AfterRead()
{
}

void FTunnelOfTheDamnedHandoverCompletedTelemetryEvent::BeforeDelete()
{
}

void FTunnelOfTheDamnedDestroyedTelemetryEvent::AfterRead()
{
}

void FTunnelOfTheDamnedDestroyedTelemetryEvent::BeforeDelete()
{
}

void FTunnelOfTheDamnedInitializedTelemetryEvent::AfterRead()
{
}

void FTunnelOfTheDamnedInitializedTelemetryEvent::BeforeDelete()
{
}

void FNoValidWreckLocationFoundEvent::AfterRead()
{
}

void FNoValidWreckLocationFoundEvent::BeforeDelete()
{
}

void FDestroyingUnsafeExpiredWreckEvent::AfterRead()
{
}

void FDestroyingUnsafeExpiredWreckEvent::BeforeDelete()
{
}

void FContestParticipantJoinedServerEvent::AfterRead()
{
}

void FContestParticipantJoinedServerEvent::BeforeDelete()
{
}

void FClientContestManagerServiceCurrentContestStateRepEvent::AfterRead()
{
}

void FClientContestManagerServiceCurrentContestStateRepEvent::BeforeDelete()
{
}

void FClientContestManagerServiceDestructionEvent::AfterRead()
{
}

void FClientContestManagerServiceDestructionEvent::BeforeDelete()
{
}

void FServerContestManagerServiceInitialisationCompleteEvent::AfterRead()
{
}

void FServerContestManagerServiceInitialisationCompleteEvent::BeforeDelete()
{
}

void FEmblemSetRuntimeDefinition::AfterRead()
{
}

void FEmblemSetRuntimeDefinition::BeforeDelete()
{
}

void FEmblemRuntimeDefinition::AfterRead()
{
	READ_PTR_FULL(UnlockPopUp, UPopUpMessageDesc);
	READ_PTR_FULL(UnlockPopUpAudioOverrides, UPopUpAudioDesc);
}

void FEmblemRuntimeDefinition::BeforeDelete()
{
	DELE_PTR_FULL(UnlockPopUp);
	DELE_PTR_FULL(UnlockPopUpAudioOverrides);
}

void FEmblemProgressRuntimeDefinition::AfterRead()
{
}

void FEmblemProgressRuntimeDefinition::BeforeDelete()
{
}

void FLaunchableProjectileCreator::AfterRead()
{
	READ_PTR_FULL(AimBase, UPrimitiveComponent);
}

void FLaunchableProjectileCreator::BeforeDelete()
{
	DELE_PTR_FULL(AimBase);
}

void FEventTavernStepsOpened::AfterRead()
{
}

void FEventTavernStepsOpened::BeforeDelete()
{
}

void FEventLocationMapChestFound::AfterRead()
{
}

void FEventLocationMapChestFound::BeforeDelete()
{
}

void FDetailAppearenceMaterialDesc::AfterRead()
{
}

void FDetailAppearenceMaterialDesc::BeforeDelete()
{
}

void FDetailAppearenceDesc::AfterRead()
{
}

void FDetailAppearenceDesc::BeforeDelete()
{
}

void FPageLayoutRepInfo::AfterRead()
{
}

void FPageLayoutRepInfo::BeforeDelete()
{
}

void FPlayerHideoutInfo::AfterRead()
{
	READ_PTR_FULL(PlayerState, APlayerState);
}

void FPlayerHideoutInfo::BeforeDelete()
{
	DELE_PTR_FULL(PlayerState);
}

void FHoleItemToSpawn::AfterRead()
{
	READ_PTR_FULL(ItemDesc, UClass);
}

void FHoleItemToSpawn::BeforeDelete()
{
	DELE_PTR_FULL(ItemDesc);
}

void FMaxHolePerIslandDataAsset::AfterRead()
{
}

void FMaxHolePerIslandDataAsset::BeforeDelete()
{
}

void FHoleContainer::AfterRead()
{
}

void FHoleContainer::BeforeDelete()
{
}

void FLeak::AfterRead()
{
	READ_PTR_FULL(WaterLeakParticleSystem, UParticleSystemComponent);
}

void FLeak::BeforeDelete()
{
	DELE_PTR_FULL(WaterLeakParticleSystem);
}

void FShipLeak::AfterRead()
{
	READ_PTR_FULL(SplashParticleSystem, UParticleSystemComponent);
}

void FShipLeak::BeforeDelete()
{
	DELE_PTR_FULL(SplashParticleSystem);
}

void FDebugSuperSailorActionStateParams::AfterRead()
{
}

void FDebugSuperSailorActionStateParams::BeforeDelete()
{
}

void FClamberActionStateParams::AfterRead()
{
	FDockToObjectActionStateParams::AfterRead();

}

void FClamberActionStateParams::BeforeDelete()
{
	FDockToObjectActionStateParams::BeforeDelete();

}

void FUseMapTableActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FUseMapTableActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FTransitionLadderActionStateParams::AfterRead()
{
	FDockToObjectActionStateParams::AfterRead();

}

void FTransitionLadderActionStateParams::BeforeDelete()
{
	FDockToObjectActionStateParams::BeforeDelete();

}

void FLinearTransitionLadderActionStateParams::AfterRead()
{
	FTransitionLadderActionStateParams::AfterRead();

}

void FLinearTransitionLadderActionStateParams::BeforeDelete()
{
	FTransitionLadderActionStateParams::BeforeDelete();

}

void FSplineTransitionLadderActionStateParams::AfterRead()
{
	FTransitionLadderActionStateParams::AfterRead();

}

void FSplineTransitionLadderActionStateParams::BeforeDelete()
{
	FTransitionLadderActionStateParams::BeforeDelete();

}

void FWaitingToSpawnActionStateParams::AfterRead()
{
}

void FWaitingToSpawnActionStateParams::BeforeDelete()
{
}

void FRepairObjectActionStateParams::AfterRead()
{
}

void FRepairObjectActionStateParams::BeforeDelete()
{
}

void FUseItemActionStateParams::AfterRead()
{
}

void FUseItemActionStateParams::BeforeDelete()
{
}

void FHideInObjectActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FHideInObjectActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FLeaveGhostShipActionStateParams::AfterRead()
{
}

void FLeaveGhostShipActionStateParams::BeforeDelete()
{
}

void FShovelDigActionStateParams::AfterRead()
{
	READ_PTR_FULL(SuccessfulPitchBlendCurve, UCurveFloat);
	READ_PTR_FULL(DeflectedPitchBlendCurve, UCurveFloat);
}

void FShovelDigActionStateParams::BeforeDelete()
{
	DELE_PTR_FULL(SuccessfulPitchBlendCurve);
	DELE_PTR_FULL(DeflectedPitchBlendCurve);
}

void FMigrationActionStateParams::AfterRead()
{
}

void FMigrationActionStateParams::BeforeDelete()
{
}

void FFiredFromActorActionStateParams::AfterRead()
{
}

void FFiredFromActorActionStateParams::BeforeDelete()
{
}

void FWaitForDemoResetActionStateParams::AfterRead()
{
}

void FWaitForDemoResetActionStateParams::BeforeDelete()
{
}

void FPlayDockableKeyedInstrumentActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FPlayDockableKeyedInstrumentActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FCapturedByKrakenActionStateParams::AfterRead()
{
	READ_PTR_FULL(MovementAlphaXY, UCurveFloat);
	READ_PTR_FULL(MovementAlphaZ, UCurveFloat);
	READ_PTR_FULL(MovementRotation, UCurveFloat);
}

void FCapturedByKrakenActionStateParams::BeforeDelete()
{
	DELE_PTR_FULL(MovementAlphaXY);
	DELE_PTR_FULL(MovementAlphaZ);
	DELE_PTR_FULL(MovementRotation);
}

void FIngestedByKrakenActionStateParams::AfterRead()
{
}

void FIngestedByKrakenActionStateParams::BeforeDelete()
{
}

void FSwallowedByKrakenActionStateParams::AfterRead()
{
}

void FSwallowedByKrakenActionStateParams::BeforeDelete()
{
}

void FLinearTransitionActionStateParams::AfterRead()
{
	FDockToObjectActionStateParams::AfterRead();

}

void FLinearTransitionActionStateParams::BeforeDelete()
{
	FDockToObjectActionStateParams::BeforeDelete();

}

void FEnterTunnelOfTheDamnedActionStateParams::AfterRead()
{
}

void FEnterTunnelOfTheDamnedActionStateParams::BeforeDelete()
{
}

void FEjectFromTunnelOfTheDamnedActionStateParams::AfterRead()
{
}

void FEjectFromTunnelOfTheDamnedActionStateParams::BeforeDelete()
{
}

void FExitTunnelOfTheDamnedActionStateParams::AfterRead()
{
}

void FExitTunnelOfTheDamnedActionStateParams::BeforeDelete()
{
}

void FImpactSurfaceData::AfterRead()
{
	READ_PTR_FULL(ImpactData, UImpactDataAsset);
}

void FImpactSurfaceData::BeforeDelete()
{
	DELE_PTR_FULL(ImpactData);
}

void FImpactProjectileData::AfterRead()
{
	READ_PTR_FULL(ProjectileId, UClass);
}

void FImpactProjectileData::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileId);
}

void FQuestVariableDataAsset::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableDataAsset::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FInteractableLightState::AfterRead()
{
}

void FInteractableLightState::BeforeDelete()
{
}

void FInteractableLightParams::AfterRead()
{
}

void FInteractableLightParams::BeforeDelete()
{
}

void FLightData::AfterRead()
{
}

void FLightData::BeforeDelete()
{
}

void FCategorySpec::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FCategorySpec::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FInventoryManipulatorAutoEquipPolicyEntry::AfterRead()
{
	READ_PTR_FULL(Category, UClass);
}

void FInventoryManipulatorAutoEquipPolicyEntry::BeforeDelete()
{
	DELE_PTR_FULL(Category);
}

void FIslandEventTooltipData::AfterRead()
{
}

void FIslandEventTooltipData::BeforeDelete()
{
}

void FFaunaTypeSettings::AfterRead()
{
}

void FFaunaTypeSettings::BeforeDelete()
{
}

void FIsland::AfterRead()
{
	READ_PTR_FULL(Sea, UClass);
	READ_PTR_FULL(PetMovementParamsData, UAICreatureMovementModifierParamsDataAsset);
}

void FIsland::BeforeDelete()
{
	DELE_PTR_FULL(Sea);
	DELE_PTR_FULL(PetMovementParamsData);
}

void FIslandLocationVerifierResult::AfterRead()
{
}

void FIslandLocationVerifierResult::BeforeDelete()
{
}

void FPetLoadoutContainer::AfterRead()
{
}

void FPetLoadoutContainer::BeforeDelete()
{
}

void FPetShopPetBreed::AfterRead()
{
}

void FPetShopPetBreed::BeforeDelete()
{
}

void FPetShopPetSpecies::AfterRead()
{
}

void FPetShopPetSpecies::BeforeDelete()
{
}

void FPoolDensityData::AfterRead()
{
	READ_PTR_FULL(WwiseObjectPoolDensityWrapper, UWwiseObjectPoolWrapper);
}

void FPoolDensityData::BeforeDelete()
{
	DELE_PTR_FULL(WwiseObjectPoolDensityWrapper);
}

void FNoiseMakerController::AfterRead()
{
	READ_PTR_FULL(NoiseMakerParams, UNoiseMakerControllerParams);
}

void FNoiseMakerController::BeforeDelete()
{
	DELE_PTR_FULL(NoiseMakerParams);
}

void FVaultReserved::AfterRead()
{
}

void FVaultReserved::BeforeDelete()
{
}

void FNumCrewsPercentageModel::AfterRead()
{
}

void FNumCrewsPercentageModel::BeforeDelete()
{
}

void FRelativePercentageRewardDistributionModel::AfterRead()
{
}

void FRelativePercentageRewardDistributionModel::BeforeDelete()
{
}

void FConsistentPercentageRewardDistributionModel::AfterRead()
{
}

void FConsistentPercentageRewardDistributionModel::BeforeDelete()
{
}

void FRewardDistributionModelData::AfterRead()
{
}

void FRewardDistributionModelData::BeforeDelete()
{
}

void FRewardPopUpNotificationInfo::AfterRead()
{
	READ_PTR_FULL(PopUp, UPopUpMessageDesc);
}

void FRewardPopUpNotificationInfo::BeforeDelete()
{
	DELE_PTR_FULL(PopUp);
}

void FShipwreckSiteRotation::AfterRead()
{
}

void FShipwreckSiteRotation::BeforeDelete()
{
}

void FNPCOnSurfaceCannonManagerCannon::AfterRead()
{
	READ_PTR_FULL(Cannon, ACannon);
}

void FNPCOnSurfaceCannonManagerCannon::BeforeDelete()
{
	DELE_PTR_FULL(Cannon);
}

void FOpenableItemMaterialAnimationReactionComponentAnimationNameAndSfxCueSet::AfterRead()
{
	READ_PTR_FULL(OpeningFirstTimeSfx, UWwiseEvent);
	READ_PTR_FULL(OpeningSfx, UWwiseEvent);
	READ_PTR_FULL(ClosingSfx, UWwiseEvent);
}

void FOpenableItemMaterialAnimationReactionComponentAnimationNameAndSfxCueSet::BeforeDelete()
{
	DELE_PTR_FULL(OpeningFirstTimeSfx);
	DELE_PTR_FULL(OpeningSfx);
	DELE_PTR_FULL(ClosingSfx);
}

void FOpenableItemMeshAnimationReactionComponentAnimationNameAndSfxCueSet::AfterRead()
{
	READ_PTR_FULL(OpeningFirstTimeSfx, UWwiseEvent);
	READ_PTR_FULL(OpeningSfx, UWwiseEvent);
	READ_PTR_FULL(ClosingSfx, UWwiseEvent);
}

void FOpenableItemMeshAnimationReactionComponentAnimationNameAndSfxCueSet::BeforeDelete()
{
	DELE_PTR_FULL(OpeningFirstTimeSfx);
	DELE_PTR_FULL(OpeningSfx);
	DELE_PTR_FULL(ClosingSfx);
}

void FTradeRouteMapTextData::AfterRead()
{
}

void FTradeRouteMapTextData::BeforeDelete()
{
}

void FTradeRouteMapTextLayout::AfterRead()
{
}

void FTradeRouteMapTextLayout::BeforeDelete()
{
}

void FEntitlementMapEntry::AfterRead()
{
}

void FEntitlementMapEntry::BeforeDelete()
{
}

void FMeshScoring::AfterRead()
{
}

void FMeshScoring::BeforeDelete()
{
}

void FConditionalStat::AfterRead()
{
}

void FConditionalStat::BeforeDelete()
{
}

void FConditionalStatsTriggerUnit::AfterRead()
{
	READ_PTR_FULL(TriggerType, UClass);
}

void FConditionalStatsTriggerUnit::BeforeDelete()
{
	DELE_PTR_FULL(TriggerType);
}

void FBowSplashProbe::AfterRead()
{
	FSplashProbe::AfterRead();

}

void FBowSplashProbe::BeforeDelete()
{
	FSplashProbe::BeforeDelete();

}

void FActionMappingKeyLookupFallback::AfterRead()
{
}

void FActionMappingKeyLookupFallback::BeforeDelete()
{
}

void FVirtualActionBindingDefinition::AfterRead()
{
}

void FVirtualActionBindingDefinition::BeforeDelete()
{
}

void FVirtualAxisBindingDefinition::AfterRead()
{
}

void FVirtualAxisBindingDefinition::BeforeDelete()
{
}

void FSingleStickMappingAxis::AfterRead()
{
}

void FSingleStickMappingAxis::BeforeDelete()
{
}

void FSingleStickMapping::AfterRead()
{
}

void FSingleStickMapping::BeforeDelete()
{
}

void FSingleStickMappingUserSettingsBoolean::AfterRead()
{
}

void FSingleStickMappingUserSettingsBoolean::BeforeDelete()
{
}

void FSingleStickMappingUserSettingsInteger::AfterRead()
{
}

void FSingleStickMappingUserSettingsInteger::BeforeDelete()
{
}

void FAimSensitivitySettingsEntry::AfterRead()
{
}

void FAimSensitivitySettingsEntry::BeforeDelete()
{
}

void FAimSensitivitySettingsDefaults::AfterRead()
{
}

void FAimSensitivitySettingsDefaults::BeforeDelete()
{
}

void FCameraSpringArmPlayModeParameters::AfterRead()
{
}

void FCameraSpringArmPlayModeParameters::BeforeDelete()
{
}

void FRewindComponentParameters::AfterRead()
{
}

void FRewindComponentParameters::BeforeDelete()
{
}

void FRewindPhysicsServiceEntry::AfterRead()
{
	READ_PTR_FULL(Rewindable, URewindComponent);
}

void FRewindPhysicsServiceEntry::BeforeDelete()
{
	DELE_PTR_FULL(Rewindable);
}

void FClientCargoRunCrewDataUnit::AfterRead()
{
}

void FClientCargoRunCrewDataUnit::BeforeDelete()
{
}

void FRewardDefinition::AfterRead()
{
	READ_PTR_FULL(PopUp, UPopUpMessageDesc);
}

void FRewardDefinition::BeforeDelete()
{
	DELE_PTR_FULL(PopUp);
}

void FWorldMapIslandDataCaptureParams::AfterRead()
{
}

void FWorldMapIslandDataCaptureParams::BeforeDelete()
{
}

void FAmmoChangeEffectParams::AfterRead()
{
	READ_PTR_FULL(LerpSpeedCurve, UCurveFloat);
}

void FAmmoChangeEffectParams::BeforeDelete()
{
	DELE_PTR_FULL(LerpSpeedCurve);
}

void FVaultLock::AfterRead()
{
	READ_PTR_FULL(MeshComponent, UStaticMeshMemoryConstraintComponent);
}

void FVaultLock::BeforeDelete()
{
	DELE_PTR_FULL(MeshComponent);
}

void FWeightedGoldReward::AfterRead()
{
}

void FWeightedGoldReward::BeforeDelete()
{
}

void FMechanismMaterialAnimationContext::AfterRead()
{
	READ_PTR_FULL(Mesh, UMeshComponent);
}

void FMechanismMaterialAnimationContext::BeforeDelete()
{
	DELE_PTR_FULL(Mesh);
}

void FSpikeMechanismMaterialAnimationContext::AfterRead()
{
	FMechanismMaterialAnimationContext::AfterRead();

}

void FSpikeMechanismMaterialAnimationContext::BeforeDelete()
{
	FMechanismMaterialAnimationContext::BeforeDelete();

}

void FSwingMechanismMaterialAnimationContext::AfterRead()
{
	FMechanismMaterialAnimationContext::AfterRead();

}

void FSwingMechanismMaterialAnimationContext::BeforeDelete()
{
	FMechanismMaterialAnimationContext::BeforeDelete();

}

void FPressurePlateAnimationComponent::AfterRead()
{
	READ_PTR_FULL(Component, USceneComponent);
	READ_PTR_FULL(Curve, UTransformBlendCurveComponent);
}

void FPressurePlateAnimationComponent::BeforeDelete()
{
	DELE_PTR_FULL(Component);
	DELE_PTR_FULL(Curve);
}

void FEmblemDefinitionActiveDuration::AfterRead()
{
}

void FEmblemDefinitionActiveDuration::BeforeDelete()
{
}

void FFishingMiniGameData::AfterRead()
{
	READ_PTR_FULL(SetupDataAsset, UFishingMiniGameSetupDataAsset);
	READ_PTR_FULL(FishDataAsset, UFishingMiniGameFishDataAsset);
}

void FFishingMiniGameData::BeforeDelete()
{
	DELE_PTR_FULL(SetupDataAsset);
	DELE_PTR_FULL(FishDataAsset);
}

void FFishingMiniGame::AfterRead()
{
}

void FFishingMiniGame::BeforeDelete()
{
}

void FSetRadialItemsAggregate::AfterRead()
{
	FRadialInventoryEvent::AfterRead();

}

void FSetRadialItemsAggregate::BeforeDelete()
{
	FRadialInventoryEvent::BeforeDelete();

}

void FMermaidSpawnedTelemetryEvent::AfterRead()
{
}

void FMermaidSpawnedTelemetryEvent::BeforeDelete()
{
}

void FMermaidDeactivatedLocally::AfterRead()
{
	READ_PTR_FULL(Mermaid, AMermaid);
}

void FMermaidDeactivatedLocally::BeforeDelete()
{
	DELE_PTR_FULL(Mermaid);
}

void FMermaidActivatedLocally::AfterRead()
{
	READ_PTR_FULL(Mermaid, AMermaid);
}

void FMermaidActivatedLocally::BeforeDelete()
{
	DELE_PTR_FULL(Mermaid);
}

void FMermaidUsedEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(Mermaid, AMermaid);
}

void FMermaidUsedEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(Mermaid);
}

void FPlayerObjectUsageTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FPlayerObjectUsageTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FPlayerObjectUsageBaseTelemetryFragment::AfterRead()
{
}

void FPlayerObjectUsageBaseTelemetryFragment::BeforeDelete()
{
}

void FPlayerActionBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FPlayerActionBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FPlayerActionBaseTelemetryFragment::AfterRead()
{
}

void FPlayerActionBaseTelemetryFragment::BeforeDelete()
{
}

void FPlayerItemUsageTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

	READ_PTR_FULL(InputID, UClass);
}

void FPlayerItemUsageTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

	DELE_PTR_FULL(InputID);
}

void FPlayerItemUsageBaseTelemetryFragment::AfterRead()
{
}

void FPlayerItemUsageBaseTelemetryFragment::BeforeDelete()
{
}

void FTeleportStageCompletedTelemetryEvent::AfterRead()
{
}

void FTeleportStageCompletedTelemetryEvent::BeforeDelete()
{
}

void FPlayerStatusEffectDeactivatedTelemetryEvent::AfterRead()
{
}

void FPlayerStatusEffectDeactivatedTelemetryEvent::BeforeDelete()
{
}

void FPlayerStatusEffectActivatedTelemetryEvent::AfterRead()
{
}

void FPlayerStatusEffectActivatedTelemetryEvent::BeforeDelete()
{
}

void FPlayerLeftGhostShipTelemetryEvent::AfterRead()
{
}

void FPlayerLeftGhostShipTelemetryEvent::BeforeDelete()
{
}

void FPlayerChangedShipLoadoutTelemetryEvent::AfterRead()
{
}

void FPlayerChangedShipLoadoutTelemetryEvent::BeforeDelete()
{
}

void FPlayerChangedLoadoutTelemetryEvent::AfterRead()
{
}

void FPlayerChangedLoadoutTelemetryEvent::BeforeDelete()
{
}

void FPlayerHeroStatUpdatedTelemetryEvent::AfterRead()
{
}

void FPlayerHeroStatUpdatedTelemetryEvent::BeforeDelete()
{
}

void FClientPlayerEmblemUnlockTelemetryEvent::AfterRead()
{
}

void FClientPlayerEmblemUnlockTelemetryEvent::BeforeDelete()
{
}

void FPlayerEmoteTelemetryEvent::AfterRead()
{
}

void FPlayerEmoteTelemetryEvent::BeforeDelete()
{
}

void FPlayerControllerTypeTelemetryEvent::AfterRead()
{
}

void FPlayerControllerTypeTelemetryEvent::BeforeDelete()
{
}

void FStoreCatalog::AfterRead()
{
}

void FStoreCatalog::BeforeDelete()
{
}

void FStoreTokenModel::AfterRead()
{
}

void FStoreTokenModel::BeforeDelete()
{
}

void FPlayerLeftPremiumStoreEvent::AfterRead()
{
}

void FPlayerLeftPremiumStoreEvent::BeforeDelete()
{
}

void FPlayerBrowsingPremiumStoreEvent::AfterRead()
{
}

void FPlayerBrowsingPremiumStoreEvent::BeforeDelete()
{
}

void FPremiumStoreClosedEvent::AfterRead()
{
}

void FPremiumStoreClosedEvent::BeforeDelete()
{
}

void FBootFlowSetWhatsNewArticleList::AfterRead()
{
}

void FBootFlowSetWhatsNewArticleList::BeforeDelete()
{
}

void FBootFlowSetContentEngagementMessage::AfterRead()
{
}

void FBootFlowSetContentEngagementMessage::BeforeDelete()
{
}

void FBootFlowSetEngagementMessage::AfterRead()
{
}

void FBootFlowSetEngagementMessage::BeforeDelete()
{
}

void FRequestSwitchAccountEvent::AfterRead()
{
}

void FRequestSwitchAccountEvent::BeforeDelete()
{
}

void FRequestLobbyUIEvent::AfterRead()
{
}

void FRequestLobbyUIEvent::BeforeDelete()
{
}

void FVisibleSessionTypeSelectionResponseEvent::AfterRead()
{
}

void FVisibleSessionTypeSelectionResponseEvent::BeforeDelete()
{
}

void FSessionTypeSelectionResponseEvent::AfterRead()
{
}

void FSessionTypeSelectionResponseEvent::BeforeDelete()
{
}

void FRequestSessionTypeSelectionEvent::AfterRead()
{
}

void FRequestSessionTypeSelectionEvent::BeforeDelete()
{
}

void FBootFlowQuitLobbyEvent::AfterRead()
{
}

void FBootFlowQuitLobbyEvent::BeforeDelete()
{
}

void FQuitMaidenVoyageEvent::AfterRead()
{
}

void FQuitMaidenVoyageEvent::BeforeDelete()
{
}

void FQuitGameEvent::AfterRead()
{
}

void FQuitGameEvent::BeforeDelete()
{
}

void FBootFlowUserDismissedErrorEvent::AfterRead()
{
}

void FBootFlowUserDismissedErrorEvent::BeforeDelete()
{
}

void FBootFlowErrorMessageQueryEvent::AfterRead()
{
}

void FBootFlowErrorMessageQueryEvent::BeforeDelete()
{
}

void FBootFlowStateQueryEvent::AfterRead()
{
}

void FBootFlowStateQueryEvent::BeforeDelete()
{
}

void FBootFlowUserSelectedStartServerMatchmakingEvent::AfterRead()
{
}

void FBootFlowUserSelectedStartServerMatchmakingEvent::BeforeDelete()
{
}

void FBootFlowUserSelectedStartCrewMatchmakingEvent::AfterRead()
{
}

void FBootFlowUserSelectedStartCrewMatchmakingEvent::BeforeDelete()
{
}

void FBootFlowUserSelectedEvent::AfterRead()
{
}

void FBootFlowUserSelectedEvent::BeforeDelete()
{
}

void FBootFlowEngagedViaControllerInputEvent::AfterRead()
{
}

void FBootFlowEngagedViaControllerInputEvent::BeforeDelete()
{
}

void FQueryConfirmInviteResponse::AfterRead()
{
}

void FQueryConfirmInviteResponse::BeforeDelete()
{
}

void FBootFlowSessionDetailsEvent::AfterRead()
{
}

void FBootFlowSessionDetailsEvent::BeforeDelete()
{
}

void FRejectInviteEvent::AfterRead()
{
}

void FRejectInviteEvent::BeforeDelete()
{
}

void FConfirmInviteEvent::AfterRead()
{
}

void FConfirmInviteEvent::BeforeDelete()
{
}

void FQueryConfirmInviteRequest::AfterRead()
{
}

void FQueryConfirmInviteRequest::BeforeDelete()
{
}

void FHideInviteModalEvent::AfterRead()
{
}

void FHideInviteModalEvent::BeforeDelete()
{
}

void FShowInviteErrorModalEvent::AfterRead()
{
}

void FShowInviteErrorModalEvent::BeforeDelete()
{
}

void FShowInviteConfirmationModalEvent::AfterRead()
{
}

void FShowInviteConfirmationModalEvent::BeforeDelete()
{
}

void FBootFlowInviteAcceptedEvent::AfterRead()
{
}

void FBootFlowInviteAcceptedEvent::BeforeDelete()
{
}

void FBootFlowUpdateTaskStatusEvent::AfterRead()
{
}

void FBootFlowUpdateTaskStatusEvent::BeforeDelete()
{
}

void FBootFlowStateQueryResponseEvent::AfterRead()
{
}

void FBootFlowStateQueryResponseEvent::BeforeDelete()
{
}

void FBootFlowErrorMessageQueryResponseEvent::AfterRead()
{
}

void FBootFlowErrorMessageQueryResponseEvent::BeforeDelete()
{
}

void FBootFlowErrorOccurredEvent::AfterRead()
{
}

void FBootFlowErrorOccurredEvent::BeforeDelete()
{
}

void FBootFlowStartHandleErrorStateEvent::AfterRead()
{
}

void FBootFlowStartHandleErrorStateEvent::BeforeDelete()
{
}

void FBootFlowEndInGameStateEvent::AfterRead()
{
}

void FBootFlowEndInGameStateEvent::BeforeDelete()
{
}

void FBootFlowStartInGameStateEvent::AfterRead()
{
}

void FBootFlowStartInGameStateEvent::BeforeDelete()
{
}

void FBootFlowStartLoadIntoGameEvent::AfterRead()
{
}

void FBootFlowStartLoadIntoGameEvent::BeforeDelete()
{
}

void FBootFlowEndContestMatchmakingStateEvent::AfterRead()
{
}

void FBootFlowEndContestMatchmakingStateEvent::BeforeDelete()
{
}

void FBootFlowStartContestMatchmakingStateEvent::AfterRead()
{
}

void FBootFlowStartContestMatchmakingStateEvent::BeforeDelete()
{
}

void FBootFlowStartCrewMatchmakingStateEvent::AfterRead()
{
}

void FBootFlowStartCrewMatchmakingStateEvent::BeforeDelete()
{
}

void FBootFlowStartLobbyStateEvent::AfterRead()
{
}

void FBootFlowStartLobbyStateEvent::BeforeDelete()
{
}

void FBootFlowStartSetupServerConfigurationStateEvent::AfterRead()
{
}

void FBootFlowStartSetupServerConfigurationStateEvent::BeforeDelete()
{
}

void FBootFlowStartSetupCrewSessionStateEvent::AfterRead()
{
}

void FBootFlowStartSetupCrewSessionStateEvent::BeforeDelete()
{
}

void FBootFlowStartEndMaidenVoyageStateEvent::AfterRead()
{
}

void FBootFlowStartEndMaidenVoyageStateEvent::BeforeDelete()
{
}

void FBootFlowStartCheckForExistingSessionsStateEvent::AfterRead()
{
}

void FBootFlowStartCheckForExistingSessionsStateEvent::BeforeDelete()
{
}

void FUpdateSelectedPirateEvent::AfterRead()
{
}

void FUpdateSelectedPirateEvent::BeforeDelete()
{
}

void FBootFlowStartAccessibilitySettingsStateEvent::AfterRead()
{
}

void FBootFlowStartAccessibilitySettingsStateEvent::BeforeDelete()
{
}

void FBootFlowStartMarketingOptInStateEvent::AfterRead()
{
}

void FBootFlowStartMarketingOptInStateEvent::BeforeDelete()
{
}

void FBootFlowStartSwapServicesStampStateEvent::AfterRead()
{
}

void FBootFlowStartSwapServicesStampStateEvent::BeforeDelete()
{
}

void FBootFlowStartSessionSelectStateEvent::AfterRead()
{
}

void FBootFlowStartSessionSelectStateEvent::BeforeDelete()
{
}

void FBootFlowEndPirateSelectionStateEvent::AfterRead()
{
}

void FBootFlowEndPirateSelectionStateEvent::BeforeDelete()
{
}

void FBootFlowStartPirateSelectionStateEvent::AfterRead()
{
}

void FBootFlowStartPirateSelectionStateEvent::BeforeDelete()
{
}

void FBootFlowWaitForLoadingScreenStateTransitionEvent::AfterRead()
{
}

void FBootFlowWaitForLoadingScreenStateTransitionEvent::BeforeDelete()
{
}

void FBootFlowStartSetupServiceBridgeStateEvent::AfterRead()
{
}

void FBootFlowStartSetupServiceBridgeStateEvent::BeforeDelete()
{
}

void FBootFlowStartEnumerateEntitlementsStateStateEvent::AfterRead()
{
}

void FBootFlowStartEnumerateEntitlementsStateStateEvent::BeforeDelete()
{
}

void FBootFlowStartSetupBannedHandlerStateEvent::AfterRead()
{
}

void FBootFlowStartSetupBannedHandlerStateEvent::BeforeDelete()
{
}

void FBootFlowStartSetupConfigurationServiceStateEvent::AfterRead()
{
}

void FBootFlowStartSetupConfigurationServiceStateEvent::BeforeDelete()
{
}

void FBootFlowStartLoginTokenExchangeStateEvent::AfterRead()
{
}

void FBootFlowStartLoginTokenExchangeStateEvent::BeforeDelete()
{
}

void FBootFlowStartLoadUserSettingsStateEvent::AfterRead()
{
}

void FBootFlowStartLoadUserSettingsStateEvent::BeforeDelete()
{
}

void FBootFlowStartStoreRedemptionStateEvent::AfterRead()
{
}

void FBootFlowStartStoreRedemptionStateEvent::BeforeDelete()
{
}

void FBootFlowStartEmblemDefinitionRetrievalStateEvent::AfterRead()
{
}

void FBootFlowStartEmblemDefinitionRetrievalStateEvent::BeforeDelete()
{
}

void FBootFlowStartWhatsNewArticleRetrievalStateEvent::AfterRead()
{
}

void FBootFlowStartWhatsNewArticleRetrievalStateEvent::BeforeDelete()
{
}

void FBootFlowStartEngagementMessageRetrievalStateEvent::AfterRead()
{
}

void FBootFlowStartEngagementMessageRetrievalStateEvent::BeforeDelete()
{
}

void FBootFlowStartLocalizationStateEvent::AfterRead()
{
}

void FBootFlowStartLocalizationStateEvent::BeforeDelete()
{
}

void FBootFlowStartWaitForLoadingScreenStateEvent::AfterRead()
{
}

void FBootFlowStartWaitForLoadingScreenStateEvent::BeforeDelete()
{
}

void FBootFlowStartServiceDiscoveryStateEvent::AfterRead()
{
}

void FBootFlowStartServiceDiscoveryStateEvent::BeforeDelete()
{
}

void FBootFlowStartSelectUserStateEvent::AfterRead()
{
}

void FBootFlowStartSelectUserStateEvent::BeforeDelete()
{
}

void FBootFlowStartEngageStateEvent_End::AfterRead()
{
}

void FBootFlowStartEngageStateEvent_End::BeforeDelete()
{
}

void FBootFlowStartEngageStateEvent::AfterRead()
{
}

void FBootFlowStartEngageStateEvent::BeforeDelete()
{
}

void FBootFlowStartWaitForEntryLevelEvent::AfterRead()
{
}

void FBootFlowStartWaitForEntryLevelEvent::BeforeDelete()
{
}

void FBootFlowStartCheckNarrationStateEvent::AfterRead()
{
}

void FBootFlowStartCheckNarrationStateEvent::BeforeDelete()
{
}

void FBootFlowAdvanceLegalSplashStateEvent::AfterRead()
{
}

void FBootFlowAdvanceLegalSplashStateEvent::BeforeDelete()
{
}

void FBootFlowEndLegalSplashStateEvent::AfterRead()
{
}

void FBootFlowEndLegalSplashStateEvent::BeforeDelete()
{
}

void FBootFlowStartLegalSplashStateEvent::AfterRead()
{
}

void FBootFlowStartLegalSplashStateEvent::BeforeDelete()
{
}

void FBootFlowPreLoadUserSettingStateEvent::AfterRead()
{
}

void FBootFlowPreLoadUserSettingStateEvent::BeforeDelete()
{
}

void FBootFlowStartEntryLevelStateEvent::AfterRead()
{
}

void FBootFlowStartEntryLevelStateEvent::BeforeDelete()
{
}

void FRejectRejoinEvent::AfterRead()
{
}

void FRejectRejoinEvent::BeforeDelete()
{
}

void FConfirmRejoinEvent::AfterRead()
{
}

void FConfirmRejoinEvent::BeforeDelete()
{
}

void FHideRejoinModalEvent::AfterRead()
{
}

void FHideRejoinModalEvent::BeforeDelete()
{
}

void FShowRejoinModalEvent::AfterRead()
{
}

void FShowRejoinModalEvent::BeforeDelete()
{
}

void FLobbyCrewMember::AfterRead()
{
}

void FLobbyCrewMember::BeforeDelete()
{
}

void FLobbyCrewInfo::AfterRead()
{
}

void FLobbyCrewInfo::BeforeDelete()
{
}

void FLobbySetupChangedEvent::AfterRead()
{
}

void FLobbySetupChangedEvent::BeforeDelete()
{
}

void FLobbySetup::AfterRead()
{
}

void FLobbySetup::BeforeDelete()
{
}

void FEventSessionCodeTextboxTextFromVirtualKeyboard::AfterRead()
{
}

void FEventSessionCodeTextboxTextFromVirtualKeyboard::BeforeDelete()
{
}

void FEventSessionCodeTextboxFocusRequest::AfterRead()
{
}

void FEventSessionCodeTextboxFocusRequest::BeforeDelete()
{
}

void FSessionLaunchedFailedEvent::AfterRead()
{
}

void FSessionLaunchedFailedEvent::BeforeDelete()
{
}

void FSessionLaunchedEvent::AfterRead()
{
}

void FSessionLaunchedEvent::BeforeDelete()
{
}

void FRequestLaunchSessionEvent::AfterRead()
{
}

void FRequestLaunchSessionEvent::BeforeDelete()
{
}

void FRequestLeaveCrewEvent::AfterRead()
{
}

void FRequestLeaveCrewEvent::BeforeDelete()
{
}

void FCrewChangeFailedEvent::AfterRead()
{
}

void FCrewChangeFailedEvent::BeforeDelete()
{
}

void FCrewMembershipUpdatedEvent::AfterRead()
{
}

void FCrewMembershipUpdatedEvent::BeforeDelete()
{
}

void FRequestJoinCrewEvent::AfterRead()
{
}

void FRequestJoinCrewEvent::BeforeDelete()
{
}

void FBuoyantObjectSpawnGroup::AfterRead()
{
}

void FBuoyantObjectSpawnGroup::BeforeDelete()
{
}

void FContestEventScoreUpdated::AfterRead()
{
}

void FContestEventScoreUpdated::BeforeDelete()
{
}

void FContestEventShipAssignmentsUpdated::AfterRead()
{
}

void FContestEventShipAssignmentsUpdated::BeforeDelete()
{
}

void FCrewMemberRivalVoteEvent::AfterRead()
{
	READ_PTR_FULL(CrewMemberPlayerState, APlayerState);
}

void FCrewMemberRivalVoteEvent::BeforeDelete()
{
	DELE_PTR_FULL(CrewMemberPlayerState);
}

void FContestResultMessage::AfterRead()
{
}

void FContestResultMessage::BeforeDelete()
{
}

void FContestCrewResult::AfterRead()
{
}

void FContestCrewResult::BeforeDelete()
{
}

void FSwallowedByKrakenActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FSwallowedByKrakenActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FTalkToNPCActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(NPCDialogComp, UNPCDialogComponent);
}

void FTalkToNPCActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(NPCDialogComp);
}

void FClientRequestTeleportCompleteAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(Base, USceneComponent);
}

void FClientRequestTeleportCompleteAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(Base);
}

void FServerAsyncLoadingCompleteAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FServerAsyncLoadingCompleteAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FServerTeleportCompleteAckNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FServerTeleportCompleteAckNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FTeleportStageCompletedEvent::AfterRead()
{
}

void FTeleportStageCompletedEvent::BeforeDelete()
{
}

void FTeleportActionStateSerialisableData::AfterRead()
{
	FActionStateSerialisableData::AfterRead();

}

void FTeleportActionStateSerialisableData::BeforeDelete()
{
	FActionStateSerialisableData::BeforeDelete();

}

void FRequestCompanyProgressEvent::AfterRead()
{
}

void FRequestCompanyProgressEvent::BeforeDelete()
{
}

void FRequestEmblemProgressFailedEvent::AfterRead()
{
}

void FRequestEmblemProgressFailedEvent::BeforeDelete()
{
}

void FEventSingleCompanyProgressUpdate::AfterRead()
{
}

void FEventSingleCompanyProgressUpdate::BeforeDelete()
{
}

void FEventCompanyProgressRequest::AfterRead()
{
}

void FEventCompanyProgressRequest::BeforeDelete()
{
}

void FEquipmentChestItemLoadoutUpdatedEvent::AfterRead()
{
}

void FEquipmentChestItemLoadoutUpdatedEvent::BeforeDelete()
{
}

void FFriendsListResponse::AfterRead()
{
}

void FFriendsListResponse::BeforeDelete()
{
}

void FFriendsListInvoked::AfterRead()
{
}

void FFriendsListInvoked::BeforeDelete()
{
}

void FPetChestPetNameUpdateSucceedEvent::AfterRead()
{
}

void FPetChestPetNameUpdateSucceedEvent::BeforeDelete()
{
}

void FPetChestPetNameUpdateFailedEvent::AfterRead()
{
}

void FPetChestPetNameUpdateFailedEvent::BeforeDelete()
{
}

void FPetChestPetNameUpdatedEvent::AfterRead()
{
}

void FPetChestPetNameUpdatedEvent::BeforeDelete()
{
}

void FEventReputationDisplayInformationResponse::AfterRead()
{
}

void FEventReputationDisplayInformationResponse::BeforeDelete()
{
}

void FEventReputationDisplayInformationRequest::AfterRead()
{
}

void FEventReputationDisplayInformationRequest::BeforeDelete()
{
}

void FSeasonRewardEarnedMessage::AfterRead()
{
}

void FSeasonRewardEarnedMessage::BeforeDelete()
{
}

void FLevelCompletionMessage::AfterRead()
{
}

void FLevelCompletionMessage::BeforeDelete()
{
}

void FIndividualMeshScoringToRemove::AfterRead()
{
}

void FIndividualMeshScoringToRemove::BeforeDelete()
{
}

void FMeshMemoryConstraintTelemetryBudgetFragment::AfterRead()
{
}

void FMeshMemoryConstraintTelemetryBudgetFragment::BeforeDelete()
{
}

void FMeshMemoryConstraintTelemetryFragment::AfterRead()
{
}

void FMeshMemoryConstraintTelemetryFragment::BeforeDelete()
{
}

void FMeshMemoryConstraintUnregistrationFailedTelemetryEvent::AfterRead()
{
}

void FMeshMemoryConstraintUnregistrationFailedTelemetryEvent::BeforeDelete()
{
}

void FMeshMemoryConstraintRegistrationFailedTelemetryEvent::AfterRead()
{
}

void FMeshMemoryConstraintRegistrationFailedTelemetryEvent::BeforeDelete()
{
}

void FMeshMemoryConstraintRegistrationDelayedTelemetryEvent::AfterRead()
{
}

void FMeshMemoryConstraintRegistrationDelayedTelemetryEvent::BeforeDelete()
{
}

void FDitherComponentFinishedApplyingMaterialsEvent::AfterRead()
{
}

void FDitherComponentFinishedApplyingMaterialsEvent::BeforeDelete()
{
}

void FDitherFadeOutEvent::AfterRead()
{
}

void FDitherFadeOutEvent::BeforeDelete()
{
}

void FDitherFadeInEvent::AfterRead()
{
}

void FDitherFadeInEvent::BeforeDelete()
{
}

void FEventDynamicMaterialMeshLoaded::AfterRead()
{
}

void FEventDynamicMaterialMeshLoaded::BeforeDelete()
{
}

void FRewardIdCount::AfterRead()
{
}

void FRewardIdCount::BeforeDelete()
{
}

void FVoyageCreatedTelemetryEvent::AfterRead()
{
}

void FVoyageCreatedTelemetryEvent::BeforeDelete()
{
}

void FCargoRunQuestRandomRequiredItemsEntry::AfterRead()
{
	READ_PTR_FULL(RequiredItem, UClass);
}

void FCargoRunQuestRandomRequiredItemsEntry::BeforeDelete()
{
	DELE_PTR_FULL(RequiredItem);
}

void FCargoRunQuestCategoryGroup::AfterRead()
{
}

void FCargoRunQuestCategoryGroup::BeforeDelete()
{
}

void FCarouselPirateDesc::AfterRead()
{
}

void FCarouselPirateDesc::BeforeDelete()
{
}

void FEmoteFlourishCategoryMapping::AfterRead()
{
	READ_PTR_FULL(ItemCategory, UClass);
}

void FEmoteFlourishCategoryMapping::BeforeDelete()
{
	DELE_PTR_FULL(ItemCategory);
}

void FClothingLoadoutContainer::AfterRead()
{
}

void FClothingLoadoutContainer::BeforeDelete()
{
}

void FCloudDomeParameters::AfterRead()
{
}

void FCloudDomeParameters::BeforeDelete()
{
}

void FCloudTileParameters::AfterRead()
{
}

void FCloudTileParameters::BeforeDelete()
{
}

void FCloudWeatherParameters::AfterRead()
{
	READ_PTR_FULL(AtmosphericMaterialParams, UMaterialParameterCollection);
}

void FCloudWeatherParameters::BeforeDelete()
{
	DELE_PTR_FULL(AtmosphericMaterialParams);
}

void FBlueprintableIntegerHandle::AfterRead()
{
}

void FBlueprintableIntegerHandle::BeforeDelete()
{
}

void FCoastObject::AfterRead()
{
	READ_PTR_FULL(CoastSplineInternal, USplineComponent);
	READ_PTR_FULL(InnerSplineInternal, USplineComponent);
}

void FCoastObject::BeforeDelete()
{
	DELE_PTR_FULL(CoastSplineInternal);
	DELE_PTR_FULL(InnerSplineInternal);
}

void FHUDBlur::AfterRead()
{
	READ_PTR_FULL(ScreenEffectsMaterialParameterCollectionInstance, UMaterialParameterCollectionInstance);
}

void FHUDBlur::BeforeDelete()
{
	DELE_PTR_FULL(ScreenEffectsMaterialParameterCollectionInstance);
}

void FCoherentToWwiseEventDataAssetEntry::AfterRead()
{
	READ_PTR_FULL(AudioEvent, UWwiseEvent);
}

void FCoherentToWwiseEventDataAssetEntry::BeforeDelete()
{
	DELE_PTR_FULL(AudioEvent);
}

void FHealthUI::AfterRead()
{
	READ_PTR_FULL(TargetPawn, APawn);
}

void FHealthUI::BeforeDelete()
{
	DELE_PTR_FULL(TargetPawn);
}

void FNameplateVisibilityFactors::AfterRead()
{
}

void FNameplateVisibilityFactors::BeforeDelete()
{
}

void FCompanySkin::AfterRead()
{
}

void FCompanySkin::BeforeDelete()
{
}

void FCompanyShopInfo::AfterRead()
{
}

void FCompanyShopInfo::BeforeDelete()
{
}

void FEventCompanyRankProgressUpdateNotification::AfterRead()
{
}

void FEventCompanyRankProgressUpdateNotification::BeforeDelete()
{
}

void FCompanyValidationAssetUnit::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FCompanyValidationAssetUnit::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FNameActiveStatePair::AfterRead()
{
}

void FNameActiveStatePair::BeforeDelete()
{
}

void FNamedStateSelector::AfterRead()
{
}

void FNamedStateSelector::BeforeDelete()
{
}

void FStateCategoryGroup::AfterRead()
{
	FNamedStateSelector::AfterRead();

}

void FStateCategoryGroup::BeforeDelete()
{
	FNamedStateSelector::BeforeDelete();

}

void FDamageTypeToAudio::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(StartAudioEvent, UWwiseEvent);
	READ_PTR_FULL(EndAudioEvent, UWwiseEvent);
}

void FDamageTypeToAudio::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(StartAudioEvent);
	DELE_PTR_FULL(EndAudioEvent);
}

void FHealthChangeAudio::AfterRead()
{
	READ_PTR_FULL(Sfx, UWwiseEvent);
}

void FHealthChangeAudio::BeforeDelete()
{
	DELE_PTR_FULL(Sfx);
}

void FCharacterSocketCollisionHandle::AfterRead()
{
}

void FCharacterSocketCollisionHandle::BeforeDelete()
{
}

void FCharacterSocketCollisionDesc::AfterRead()
{
	READ_PTR_FULL(SkeletalMeshComponent, USkeletalMeshComponent);
}

void FCharacterSocketCollisionDesc::BeforeDelete()
{
	DELE_PTR_FULL(SkeletalMeshComponent);
}

void FChestOfRageReplicatedData::AfterRead()
{
}

void FChestOfRageReplicatedData::BeforeDelete()
{
}

void FChestOfRageDamageTableEntry::AfterRead()
{
}

void FChestOfRageDamageTableEntry::BeforeDelete()
{
}

void FQuestVariableNameArray::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableNameArray::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVariableName::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableName::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FEmissaryDisplayInformation::AfterRead()
{
}

void FEmissaryDisplayInformation::BeforeDelete()
{
}

void FPlayerAttackTelemetryEvent::AfterRead()
{
}

void FPlayerAttackTelemetryEvent::BeforeDelete()
{
}

void FTutorialStepPlayIntroAnimatic::AfterRead()
{
	FTutorialStep::AfterRead();

	READ_PTR_FULL(AnimInstance, UFirstPersonAnimationInstance);
}

void FTutorialStepPlayIntroAnimatic::BeforeDelete()
{
	FTutorialStep::BeforeDelete();

	DELE_PTR_FULL(AnimInstance);
}

void FMainTutorialSequence::AfterRead()
{
	FTutorialSequence::AfterRead();

}

void FMainTutorialSequence::BeforeDelete()
{
	FTutorialSequence::BeforeDelete();

}

void FTutorialAnimationResult::AfterRead()
{
	READ_PTR_FULL(AnimInstance, UFirstPersonAnimationInstance);
}

void FTutorialAnimationResult::BeforeDelete()
{
	DELE_PTR_FULL(AnimInstance);
}

void FBlockDecalMaterials::AfterRead()
{
}

void FBlockDecalMaterials::BeforeDelete()
{
}

void FWeightedRewardDistribution::AfterRead()
{
}

void FWeightedRewardDistribution::BeforeDelete()
{
}

void FBountyMapLayoutTarget::AfterRead()
{
}

void FBountyMapLayoutTarget::BeforeDelete()
{
}

void FOneShotToggleCollisionAudioParams::AfterRead()
{
	READ_PTR_FULL(OverlapBeginAudioEvent, UWwiseEvent);
	READ_PTR_FULL(OverlapEndAudioEvent, UWwiseEvent);
	READ_PTR_FULL(OverlapEventAudioPool, UWwiseObjectPoolWrapper);
}

void FOneShotToggleCollisionAudioParams::BeforeDelete()
{
	DELE_PTR_FULL(OverlapBeginAudioEvent);
	DELE_PTR_FULL(OverlapEndAudioEvent);
	DELE_PTR_FULL(OverlapEventAudioPool);
}

void FActionVisualsOverride::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
}

void FActionVisualsOverride::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
}

void FHoldToUseInput::AfterRead()
{
	READ_PTR_FULL(StartUse, UClass);
	READ_PTR_FULL(StopUse, UClass);
	READ_PTR_FULL(WieldableVisualModifier, UHoldToUseInputVisualModifier);
}

void FHoldToUseInput::BeforeDelete()
{
	DELE_PTR_FULL(StartUse);
	DELE_PTR_FULL(StopUse);
	DELE_PTR_FULL(WieldableVisualModifier);
}

void FApplyBoundaryToWorldMapEvent::AfterRead()
{
}

void FApplyBoundaryToWorldMapEvent::BeforeDelete()
{
}

void FWorldMapSetMapLabelsRotation::AfterRead()
{
}

void FWorldMapSetMapLabelsRotation::BeforeDelete()
{
}

void FWorldMapSetShipLocation::AfterRead()
{
}

void FWorldMapSetShipLocation::BeforeDelete()
{
}

void FWorldMapIslandData::AfterRead()
{
}

void FWorldMapIslandData::BeforeDelete()
{
}

void FPlayerNewLevelEvent::AfterRead()
{
}

void FPlayerNewLevelEvent::BeforeDelete()
{
}

void FPlayerCompanyProgressUpdatedEvent::AfterRead()
{
}

void FPlayerCompanyProgressUpdatedEvent::BeforeDelete()
{
}

void FPlayerEncounterEndTelemetryEvent::AfterRead()
{
}

void FPlayerEncounterEndTelemetryEvent::BeforeDelete()
{
}

void FPlayerEncounterStartTelemetryEvent::AfterRead()
{
}

void FPlayerEncounterStartTelemetryEvent::BeforeDelete()
{
}

void FMoveSpeedValidationFailedTelemetryEvent::AfterRead()
{
}

void FMoveSpeedValidationFailedTelemetryEvent::BeforeDelete()
{
}

void FPlayerTamperedTelemetryEvent::AfterRead()
{
}

void FPlayerTamperedTelemetryEvent::BeforeDelete()
{
}

void FPlayerSetFootLocationTelemetryEvent::AfterRead()
{
}

void FPlayerSetFootLocationTelemetryEvent::BeforeDelete()
{
}

void FPlayerDepartLocationTelemetryEvent::AfterRead()
{
}

void FPlayerDepartLocationTelemetryEvent::BeforeDelete()
{
}

void FPlayerArriveLocationTelemetryEvent::AfterRead()
{
}

void FPlayerArriveLocationTelemetryEvent::BeforeDelete()
{
}

void FPlayerCheatTelemetryEvent::AfterRead()
{
}

void FPlayerCheatTelemetryEvent::BeforeDelete()
{
}

void FPlayerDeathTelemetryEvent::AfterRead()
{
}

void FPlayerDeathTelemetryEvent::BeforeDelete()
{
}

void FPlayerHeartbeatTelemetryEvent::AfterRead()
{
}

void FPlayerHeartbeatTelemetryEvent::BeforeDelete()
{
}

void FPlayerItemUsageEndTelemetryEvent::AfterRead()
{
}

void FPlayerItemUsageEndTelemetryEvent::BeforeDelete()
{
}

void FPlayerItemUsageStartTelemetryEvent::AfterRead()
{
}

void FPlayerItemUsageStartTelemetryEvent::BeforeDelete()
{
}

void FShipOnFireEndTelemetryEvent::AfterRead()
{
}

void FShipOnFireEndTelemetryEvent::BeforeDelete()
{
}

void FShipOnFireBeginTelemetryEvent::AfterRead()
{
}

void FShipOnFireBeginTelemetryEvent::BeforeDelete()
{
}

void FShipMastCollapseStateTelemetryEvent::AfterRead()
{
}

void FShipMastCollapseStateTelemetryEvent::BeforeDelete()
{
}

void FShipRepairTelemetryEvent::AfterRead()
{
}

void FShipRepairTelemetryEvent::BeforeDelete()
{
}

void FClientBootFlowStampSwapResultTelemetryEvent::AfterRead()
{
}

void FClientBootFlowStampSwapResultTelemetryEvent::BeforeDelete()
{
}

void FClientBootFlowExistingSessionTelemetry::AfterRead()
{
}

void FClientBootFlowExistingSessionTelemetry::BeforeDelete()
{
}

void FCreatePirateRequestFailedEvent::AfterRead()
{
}

void FCreatePirateRequestFailedEvent::BeforeDelete()
{
}

void FServerShutdownRequestFilter::AfterRead()
{
}

void FServerShutdownRequestFilter::BeforeDelete()
{
}

void FShutdownServerMessage::AfterRead()
{
}

void FShutdownServerMessage::BeforeDelete()
{
}

void FContestParticipantTelemetryFragment::AfterRead()
{
}

void FContestParticipantTelemetryFragment::BeforeDelete()
{
}

void FContestScoreTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FContestScoreTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FRivalChangeTelemetryEvent::AfterRead()
{
}

void FRivalChangeTelemetryEvent::BeforeDelete()
{
}

void FServerPlayerContestLeftTelemetryEvent::AfterRead()
{
}

void FServerPlayerContestLeftTelemetryEvent::BeforeDelete()
{
}

void FServerPlayerContestJoinedTelemetryEvent::AfterRead()
{
}

void FServerPlayerContestJoinedTelemetryEvent::BeforeDelete()
{
}

void FServerContestStateUpdateTelemetryEvent::AfterRead()
{
}

void FServerContestStateUpdateTelemetryEvent::BeforeDelete()
{
}

void FNotesManagementAddNoteScheduleResponseModel::AfterRead()
{
}

void FNotesManagementAddNoteScheduleResponseModel::BeforeDelete()
{
}

void FNotesManagementRemoteServiceAddNoteScheduleModel::AfterRead()
{
}

void FNotesManagementRemoteServiceAddNoteScheduleModel::BeforeDelete()
{
}

void FNotesManagementAddNoteResponseModel::AfterRead()
{
}

void FNotesManagementAddNoteResponseModel::BeforeDelete()
{
}

void FSeasonChallengeInfo::AfterRead()
{
}

void FSeasonChallengeInfo::BeforeDelete()
{
}

void FSeasonChallengeGroupInfo::AfterRead()
{
}

void FSeasonChallengeGroupInfo::BeforeDelete()
{
}

void FSeasonInfoModel::AfterRead()
{
}

void FSeasonInfoModel::BeforeDelete()
{
}

void FSeasonInfoModelContainer::AfterRead()
{
}

void FSeasonInfoModelContainer::BeforeDelete()
{
}

void FTakeAllItemsFromContainerRPC::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FTakeAllItemsFromContainerRPC::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FTakeItemFromContainerRPC::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FTakeItemFromContainerRPC::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FEventObtainedFromContainer::AfterRead()
{
}

void FEventObtainedFromContainer::BeforeDelete()
{
}

void FEventStorageContainerDestroyed::AfterRead()
{
	READ_PTR_FULL(Replenishable, UObject);
}

void FEventStorageContainerDestroyed::BeforeDelete()
{
	DELE_PTR_FULL(Replenishable);
}

void FEventStorageContainerCreated::AfterRead()
{
	READ_PTR_FULL(Replenishable, UObject);
}

void FEventStorageContainerCreated::BeforeDelete()
{
	DELE_PTR_FULL(Replenishable);
}

void FPlayerItemAddToContainerTelemetryEvent::AfterRead()
{
}

void FPlayerItemAddToContainerTelemetryEvent::BeforeDelete()
{
}

void FBootyItemShipDroppedInfo::AfterRead()
{
}

void FBootyItemShipDroppedInfo::BeforeDelete()
{
}

void FBootyItemDroppedOnShipEvent::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
	READ_PTR_FULL(ItemOnShip, AItemInfo);
}

void FBootyItemDroppedOnShipEvent::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(ItemOnShip);
}

void FBootyItemTransferredToVendor::AfterRead()
{
	READ_PTR_FULL(ItemInfo, ABootyItemInfo);
}

void FBootyItemTransferredToVendor::BeforeDelete()
{
	DELE_PTR_FULL(ItemInfo);
}

void FBootyItemOwnershipChangedParams::AfterRead()
{
}

void FBootyItemOwnershipChangedParams::BeforeDelete()
{
}

void FBootyItemShipOwnershipChangeEvent::AfterRead()
{
	READ_PTR_FULL(Ship, AActor);
	READ_PTR_FULL(ItemOnShip, AItemInfo);
}

void FBootyItemShipOwnershipChangeEvent::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(ItemOnShip);
}

void FEventCargoRunCrateDelivered::AfterRead()
{
	READ_PTR_FULL(ItemInfo, ABootyItemInfo);
}

void FEventCargoRunCrateDelivered::BeforeDelete()
{
	DELE_PTR_FULL(ItemInfo);
}

void FEventCargoRunCratePickedUp::AfterRead()
{
	READ_PTR_FULL(ItemInfo, ABootyItemInfo);
	READ_PTR_FULL(Item, AWieldableItem);
}

void FEventCargoRunCratePickedUp::BeforeDelete()
{
	DELE_PTR_FULL(ItemInfo);
	DELE_PTR_FULL(Item);
}

void FEventCargoRunCrateSetDropOff::AfterRead()
{
}

void FEventCargoRunCrateSetDropOff::BeforeDelete()
{
}

void FEventAttachedRetractableToItemProxy::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
}

void FEventAttachedRetractableToItemProxy::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FQuestBaseTelemetryFragment::AfterRead()
{
}

void FQuestBaseTelemetryFragment::BeforeDelete()
{
}

void FPlayerGameLeftVoyageTelemetryEvent::AfterRead()
{
}

void FPlayerGameLeftVoyageTelemetryEvent::BeforeDelete()
{
}

void FPlayerGameStartVoyageTelemetryEvent::AfterRead()
{
}

void FPlayerGameStartVoyageTelemetryEvent::BeforeDelete()
{
}

void FVoyageCompleteTelemetryEvent::AfterRead()
{
}

void FVoyageCompleteTelemetryEvent::BeforeDelete()
{
}

void FVoyageAbortedTelemetryEvent::AfterRead()
{
}

void FVoyageAbortedTelemetryEvent::BeforeDelete()
{
}

void FVoyageEndTelemetryEvent::AfterRead()
{
}

void FVoyageEndTelemetryEvent::BeforeDelete()
{
}

void FVoyageStartTelemetryEventPerQuest::AfterRead()
{
}

void FVoyageStartTelemetryEventPerQuest::BeforeDelete()
{
}

void FVoyageStartTelemetryEvent::AfterRead()
{
}

void FVoyageStartTelemetryEvent::BeforeDelete()
{
}

void FVoyageBaseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FVoyageBaseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FVoyageBaseTelemetryFragment::AfterRead()
{
}

void FVoyageBaseTelemetryFragment::BeforeDelete()
{
}

void FVoyageInfo::AfterRead()
{
	READ_PTR_FULL(Company, UClass);
}

void FVoyageInfo::BeforeDelete()
{
	DELE_PTR_FULL(Company);
}

void FSpawnLocationReservation::AfterRead()
{
	READ_PTR_FULL(LocationType, UClass);
}

void FSpawnLocationReservation::BeforeDelete()
{
	DELE_PTR_FULL(LocationType);
}

void FIslandDiscoveredRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FIslandDiscoveredRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FEventSpawnedAsSalvageItem::AfterRead()
{
}

void FEventSpawnedAsSalvageItem::BeforeDelete()
{
}

void FPlayerFinishedInteractingWithNPCDialog::AfterRead()
{
	READ_PTR_FULL(Interactee, AActor);
}

void FPlayerFinishedInteractingWithNPCDialog::BeforeDelete()
{
	DELE_PTR_FULL(Interactee);
}

void FPlayerStartedInteractingWithNPCDialog::AfterRead()
{
}

void FPlayerStartedInteractingWithNPCDialog::BeforeDelete()
{
}

void FInteractionClosedEvent::AfterRead()
{
}

void FInteractionClosedEvent::BeforeDelete()
{
}

void FInteractionOptionSelected::AfterRead()
{
}

void FInteractionOptionSelected::BeforeDelete()
{
}

void FRequestCloseInteractionEvent::AfterRead()
{
}

void FRequestCloseInteractionEvent::BeforeDelete()
{
}

void FStartInteractionEvent::AfterRead()
{
}

void FStartInteractionEvent::BeforeDelete()
{
}

void FNPCSubtitleEnd::AfterRead()
{
}

void FNPCSubtitleEnd::BeforeDelete()
{
}

void FNPCSubtitleBegin::AfterRead()
{
}

void FNPCSubtitleBegin::BeforeDelete()
{
}

void FEventSceneDialogueFinished::AfterRead()
{
	READ_PTR_FULL(Sender, ASceneDialogueCoordinator);
}

void FEventSceneDialogueFinished::BeforeDelete()
{
	DELE_PTR_FULL(Sender);
}

void FSceneDialogueBaseNetworkEvent::AfterRead()
{
	FBoxedRpc::AfterRead();

}

void FSceneDialogueBaseNetworkEvent::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

}

void FSceneDialogueEndNetworkEvent::AfterRead()
{
	FSceneDialogueBaseNetworkEvent::AfterRead();

}

void FSceneDialogueEndNetworkEvent::BeforeDelete()
{
	FSceneDialogueBaseNetworkEvent::BeforeDelete();

}

void FSceneDialogueStartNetworkEvent::AfterRead()
{
	FSceneDialogueBaseNetworkEvent::AfterRead();

}

void FSceneDialogueStartNetworkEvent::BeforeDelete()
{
	FSceneDialogueBaseNetworkEvent::BeforeDelete();

}

void FEventAIBountySpawnerAllTargetsKilled::AfterRead()
{
	READ_PTR_FULL(InstigatorOfFinalAIPawnDeath, AActor);
}

void FEventAIBountySpawnerAllTargetsKilled::BeforeDelete()
{
	DELE_PTR_FULL(InstigatorOfFinalAIPawnDeath);
}

void FEventReceiveAmmoEffectsComponentState::AfterRead()
{
}

void FEventReceiveAmmoEffectsComponentState::BeforeDelete()
{
}

void FEventReceiveAmmoStoreComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UAmmoStoreComponent);
}

void FEventReceiveAmmoStoreComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FEventReceiveAmmoTransferComponentState::AfterRead()
{
	READ_PTR_FULL(Source, UAmmoTransferComponent);
}

void FEventReceiveAmmoTransferComponentState::BeforeDelete()
{
	DELE_PTR_FULL(Source);
}

void FPuzzleVaultRewardItemSpawnedEvent::AfterRead()
{
}

void FPuzzleVaultRewardItemSpawnedEvent::BeforeDelete()
{
}

void FKeyTakenEvent::AfterRead()
{
	READ_PTR_FULL(KeyTaken, AItemInfo);
}

void FKeyTakenEvent::BeforeDelete()
{
	DELE_PTR_FULL(KeyTaken);
}

void FAmmoStoreMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FAmmoStoreMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FCargoRunCrateMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FCargoRunCrateMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FItemHealthMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FItemHealthMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FItemInfoHealthMetaWrapper::AfterRead()
{
	FItemMetaBase::AfterRead();

}

void FItemInfoHealthMetaWrapper::BeforeDelete()
{
	FItemMetaBase::BeforeDelete();

}

void FTaleQuestTaskStartedTelemetryEvent::AfterRead()
{
}

void FTaleQuestTaskStartedTelemetryEvent::BeforeDelete()
{
}

void FTaleQuestProgressTelemetryEvent::AfterRead()
{
}

void FTaleQuestProgressTelemetryEvent::BeforeDelete()
{
}

void FTaleQuestStateTelemetryEvent::AfterRead()
{
}

void FTaleQuestStateTelemetryEvent::BeforeDelete()
{
}

void FTaleQuestFailedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(FailureRunnable, UClass);
}

void FTaleQuestFailedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(FailureRunnable);
}

void FEventSwimmingCreatureUnderwaterStateChange::AfterRead()
{
}

void FEventSwimmingCreatureUnderwaterStateChange::BeforeDelete()
{
}

void FEventSwimmingCreatureDeathCustomEvent::AfterRead()
{
}

void FEventSwimmingCreatureDeathCustomEvent::BeforeDelete()
{
}

void FEventSwimmingCreatureCollided::AfterRead()
{
}

void FEventSwimmingCreatureCollided::BeforeDelete()
{
}

void FEventSwimmingCreatureCrested::AfterRead()
{
}

void FEventSwimmingCreatureCrested::BeforeDelete()
{
}

void FEventMastDamageLevelChanged::AfterRead()
{
	READ_PTR_FULL(Mast, AActor);
}

void FEventMastDamageLevelChanged::BeforeDelete()
{
	DELE_PTR_FULL(Mast);
}

void FMastDamageStateChangedEvent::AfterRead()
{
	READ_PTR_FULL(Mast, AActor);
}

void FMastDamageStateChangedEvent::BeforeDelete()
{
	DELE_PTR_FULL(Mast);
}

void FMastFallingProportionBecameStationaryEvent::AfterRead()
{
}

void FMastFallingProportionBecameStationaryEvent::BeforeDelete()
{
}

void FMastReachedFallenPositionEvent::AfterRead()
{
}

void FMastReachedFallenPositionEvent::BeforeDelete()
{
}

void FMastReachedUprightPositionEvent::AfterRead()
{
}

void FMastReachedUprightPositionEvent::BeforeDelete()
{
}

void FMastFallenAngleChangedEvent::AfterRead()
{
}

void FMastFallenAngleChangedEvent::BeforeDelete()
{
}

void FMastReceivedDamageEvent::AfterRead()
{
}

void FMastReceivedDamageEvent::BeforeDelete()
{
}

void FEventMastSailsUnbillowed::AfterRead()
{
}

void FEventMastSailsUnbillowed::BeforeDelete()
{
}

void FEventMastSailsBillowed::AfterRead()
{
	READ_PTR_FULL(ParentShip, AActor);
}

void FEventMastSailsBillowed::BeforeDelete()
{
	DELE_PTR_FULL(ParentShip);
}

void FMastSailLoweredProportionBecameStationaryEvent::AfterRead()
{
}

void FMastSailLoweredProportionBecameStationaryEvent::BeforeDelete()
{
}

void FMastSailLoweredProportionChangedEvent::AfterRead()
{
}

void FMastSailLoweredProportionChangedEvent::BeforeDelete()
{
}

void FMastSailAngleBecameStationaryEvent::AfterRead()
{
}

void FMastSailAngleBecameStationaryEvent::BeforeDelete()
{
}

void FMastSailAngleChangedEvent::AfterRead()
{
}

void FMastSailAngleChangedEvent::BeforeDelete()
{
}

void FEventMastGotPerfectWind::AfterRead()
{
}

void FEventMastGotPerfectWind::BeforeDelete()
{
}

void FTeleportActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FTeleportActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEventTeleportLocationDestroyed::AfterRead()
{
}

void FEventTeleportLocationDestroyed::BeforeDelete()
{
}

void FEjectFromTunnelOfTheDamnedActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FEjectFromTunnelOfTheDamnedActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FEjectFromTunnelOfTheDamnedFadeComplete::AfterRead()
{
}

void FEjectFromTunnelOfTheDamnedFadeComplete::BeforeDelete()
{
}

void FWieldingParamsAssetLookup::AfterRead()
{
	FTableRowBase::AfterRead();

	READ_PTR_FULL(Class, UClass);
}

void FWieldingParamsAssetLookup::BeforeDelete()
{
	FTableRowBase::BeforeDelete();

	DELE_PTR_FULL(Class);
}

void FPickupObjectActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FPickupObjectActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FUseItemActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

	READ_PTR_FULL(InputID, UClass);
}

void FUseItemActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

	DELE_PTR_FULL(InputID);
}

void FEventItemConsumed::AfterRead()
{
	READ_PTR_FULL(Consumer, AActor);
}

void FEventItemConsumed::BeforeDelete()
{
	DELE_PTR_FULL(Consumer);
}

void FContestBootyItemReleasedEvent::AfterRead()
{
}

void FContestBootyItemReleasedEvent::BeforeDelete()
{
}

void FEventItemWielded::AfterRead()
{
	READ_PTR_FULL(WieldedItem, AWieldableItem);
	READ_PTR_FULL(Wielder, AActor);
}

void FEventItemWielded::BeforeDelete()
{
	DELE_PTR_FULL(WieldedItem);
	DELE_PTR_FULL(Wielder);
}

void FEventRemoveItemFromSpawner::AfterRead()
{
}

void FEventRemoveItemFromSpawner::BeforeDelete()
{
}

void FEventTransferObjectState::AfterRead()
{
	READ_PTR_FULL(TargetActor, AActor);
}

void FEventTransferObjectState::BeforeDelete()
{
	DELE_PTR_FULL(TargetActor);
}

void FEventUnhideItem::AfterRead()
{
}

void FEventUnhideItem::BeforeDelete()
{
}

void FEventHideItem::AfterRead()
{
}

void FEventHideItem::BeforeDelete()
{
}

void FEventStowComplete::AfterRead()
{
}

void FEventStowComplete::BeforeDelete()
{
}

void FEventStartStow::AfterRead()
{
}

void FEventStartStow::BeforeDelete()
{
}

void FEventPreStartStow::AfterRead()
{
}

void FEventPreStartStow::BeforeDelete()
{
}

void FEventVisibleWield::AfterRead()
{
}

void FEventVisibleWield::BeforeDelete()
{
}

void FEventStartWield::AfterRead()
{
}

void FEventStartWield::BeforeDelete()
{
}

void FEventObjectWielded::AfterRead()
{
}

void FEventObjectWielded::BeforeDelete()
{
}

void FEventObjectStowed::AfterRead()
{
}

void FEventObjectStowed::BeforeDelete()
{
}

void FEventPickupableObjectPickedUp::AfterRead()
{
	READ_PTR_FULL(PickupableObject, APickupableObject);
	READ_PTR_FULL(InteractingPlayer, AActor);
}

void FEventPickupableObjectPickedUp::BeforeDelete()
{
	DELE_PTR_FULL(PickupableObject);
	DELE_PTR_FULL(InteractingPlayer);
}

void FEventPickupableObjectDropped::AfterRead()
{
}

void FEventPickupableObjectDropped::BeforeDelete()
{
}

void FEventPickupableObjectDestroyed::AfterRead()
{
}

void FEventPickupableObjectDestroyed::BeforeDelete()
{
}

void FUseItemNoParamsOnServerRpc::AfterRead()
{
	FUseItemOnServerRpc::AfterRead();

}

void FUseItemNoParamsOnServerRpc::BeforeDelete()
{
	FUseItemOnServerRpc::BeforeDelete();

}

void FEventItemTransmuted::AfterRead()
{
	READ_PTR_FULL(NewItem, AItemInfo);
}

void FEventItemTransmuted::BeforeDelete()
{
	DELE_PTR_FULL(NewItem);
}

void FEventUseItemStopped::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(ActionSource, AActor);
	READ_PTR_FULL(Usable, AActor);
}

void FEventUseItemStopped::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(ActionSource);
	DELE_PTR_FULL(Usable);
}

void FEventUseItemForceStop::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(ActionSource, AActor);
	READ_PTR_FULL(Usable, AActor);
}

void FEventUseItemForceStop::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(ActionSource);
	DELE_PTR_FULL(Usable);
}

void FTriggerStopUseEvent::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(ActionSource, AActor);
	READ_PTR_FULL(Usable, AActor);
}

void FTriggerStopUseEvent::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(ActionSource);
	DELE_PTR_FULL(Usable);
}

void FTriggerStartUseEvent::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(ActionSource, AActor);
	READ_PTR_FULL(Usable, AActor);
}

void FTriggerStartUseEvent::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(ActionSource);
	DELE_PTR_FULL(Usable);
}

void FEventCharacterStoppedContinuousUse::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
}

void FEventCharacterStoppedContinuousUse::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
}

void FEventCharacterStartedContinuousUse::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
}

void FEventCharacterStartedContinuousUse::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
}

void FEventCharacterStartedOneShotUse::AfterRead()
{
	READ_PTR_FULL(InputID, UClass);
}

void FEventCharacterStartedOneShotUse::BeforeDelete()
{
	DELE_PTR_FULL(InputID);
}

void FEventAthenaAnimationCurrentAnimationCanBeInterrupted::AfterRead()
{
}

void FEventAthenaAnimationCurrentAnimationCanBeInterrupted::BeforeDelete()
{
}

void FEventAnimationWieldedItemEquipStarted::AfterRead()
{
}

void FEventAnimationWieldedItemEquipStarted::BeforeDelete()
{
}

void FEventAnimationWieldedItemEquipBlendFinished::AfterRead()
{
}

void FEventAnimationWieldedItemEquipBlendFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemUnequipFinished::AfterRead()
{
}

void FEventAnimationWieldedItemUnequipFinished::BeforeDelete()
{
}

void FEventWieldedItemOutOfContinuousUseStateEntered::AfterRead()
{
}

void FEventWieldedItemOutOfContinuousUseStateEntered::BeforeDelete()
{
}

void FEventAnimationWieldedItemOutOfUseFinished::AfterRead()
{
}

void FEventAnimationWieldedItemOutOfUseFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemIntoContinuousUseFinished::AfterRead()
{
}

void FEventAnimationWieldedItemIntoContinuousUseFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemContinuousUseStateEntered::AfterRead()
{
}

void FEventAnimationWieldedItemContinuousUseStateEntered::BeforeDelete()
{
}

void FEventAnimationWieldedItemOneShotInitialised::AfterRead()
{
}

void FEventAnimationWieldedItemOneShotInitialised::BeforeDelete()
{
}

void FEventAnimationWieldedItemOneShotEntered::AfterRead()
{
}

void FEventAnimationWieldedItemOneShotEntered::BeforeDelete()
{
}

void FEventAnimationWieldedItemOneShotFinished::AfterRead()
{
}

void FEventAnimationWieldedItemOneShotFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemEquipFinished::AfterRead()
{
}

void FEventAnimationWieldedItemEquipFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemStateChanged::AfterRead()
{
}

void FEventAnimationWieldedItemStateChanged::BeforeDelete()
{
}

void FEventAnimationWieldedItemComplexOneShotFinished::AfterRead()
{
}

void FEventAnimationWieldedItemComplexOneShotFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemBlockingFeedbackFinished::AfterRead()
{
}

void FEventAnimationWieldedItemBlockingFeedbackFinished::BeforeDelete()
{
}

void FEventAnimationWieldedItemBlockingFinished::AfterRead()
{
}

void FEventAnimationWieldedItemBlockingFinished::BeforeDelete()
{
}

void FEventWieldableStashedToStashPoint::AfterRead()
{
	READ_PTR_FULL(StashPointAttachParent, UPrimitiveComponent);
}

void FEventWieldableStashedToStashPoint::BeforeDelete()
{
	DELE_PTR_FULL(StashPointAttachParent);
}

void FWieldableItemFirstTimeEquipRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(FirstTimeEquipSfx, UWwiseEvent);
}

void FWieldableItemFirstTimeEquipRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(FirstTimeEquipSfx);
}

void FCoordinatedKrakenTentacleSpawnInfo::AfterRead()
{
}

void FCoordinatedKrakenTentacleSpawnInfo::BeforeDelete()
{
}

void FShipCustomizationLoadoutPartCustomizations::AfterRead()
{
}

void FShipCustomizationLoadoutPartCustomizations::BeforeDelete()
{
}

void FControlWheelActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FControlWheelActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FWaterBarrelActionStateParams::AfterRead()
{
	FControlObjectActionStateParams::AfterRead();

}

void FWaterBarrelActionStateParams::BeforeDelete()
{
	FControlObjectActionStateParams::BeforeDelete();

}

void FMerchantQuestRequiredItemsGroupList::AfterRead()
{
}

void FMerchantQuestRequiredItemsGroupList::BeforeDelete()
{
}

void FMerchantQuestRequiredItemsRankEntry::AfterRead()
{
}

void FMerchantQuestRequiredItemsRankEntry::BeforeDelete()
{
}

void FMermaidAnimMapping::AfterRead()
{
}

void FMermaidAnimMapping::BeforeDelete()
{
}

void FMessageInABottleVoyageEntry::AfterRead()
{
	READ_PTR_FULL(VoyageRecipe, UVoyageRecipeDataAsset);
}

void FMessageInABottleVoyageEntry::BeforeDelete()
{
	DELE_PTR_FULL(VoyageRecipe);
}

void FMetalAIFormRustyDamageResponse::AfterRead()
{
	READ_PTR_FULL(DamagerType, UClass);
}

void FMetalAIFormRustyDamageResponse::BeforeDelete()
{
	DELE_PTR_FULL(DamagerType);
}

void FMigrationUIContentsDataAssetEntry::AfterRead()
{
}

void FMigrationUIContentsDataAssetEntry::BeforeDelete()
{
}

void FShipDamagedTelemetryEvent::AfterRead()
{
}

void FShipDamagedTelemetryEvent::BeforeDelete()
{
}

void FPirateLegendWeightedItemDescSpawnData::AfterRead()
{
	READ_PTR_FULL(ItemSpawnData, UItemSpawnData);
}

void FPirateLegendWeightedItemDescSpawnData::BeforeDelete()
{
	DELE_PTR_FULL(ItemSpawnData);
}

void FPlayerRelevancyRequest::AfterRead()
{
	READ_PTR_FULL(PlayerController, AAthenaPlayerController);
}

void FPlayerRelevancyRequest::BeforeDelete()
{
	DELE_PTR_FULL(PlayerController);
}

void FConfigurationComboAndTrigger::AfterRead()
{
	READ_PTR_FULL(TriggerToActivate, AActor);
}

void FConfigurationComboAndTrigger::BeforeDelete()
{
	DELE_PTR_FULL(TriggerToActivate);
}

void FReactionSequenceStateInfo::AfterRead()
{
}

void FReactionSequenceStateInfo::BeforeDelete()
{
}

void FPuzzleStatueConfigurationPosition::AfterRead()
{
	READ_PTR_FULL(PositionAudioEvent, UWwiseEvent);
}

void FPuzzleStatueConfigurationPosition::BeforeDelete()
{
	DELE_PTR_FULL(PositionAudioEvent);
}

void FVaultButtonData::AfterRead()
{
	READ_PTR_FULL(ButtonMesh, UStaticMeshComponent);
}

void FVaultButtonData::BeforeDelete()
{
	DELE_PTR_FULL(ButtonMesh);
}

void FRiddleActionInfo::AfterRead()
{
}

void FRiddleActionInfo::BeforeDelete()
{
}

void FRiddleTextPhrasebookEntry::AfterRead()
{
	READ_PTR_FULL(Phrase, URiddleTextPhraseDataAsset);
}

void FRiddleTextPhrasebookEntry::BeforeDelete()
{
	DELE_PTR_FULL(Phrase);
}

void FQuestVarPLSectionBundle::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVarPLSectionBundle::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FQuestVarPLSection::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVarPLSection::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FReapersMarkTrackedBootyItem::AfterRead()
{
	READ_PTR_FULL(Item, AActor);
}

void FReapersMarkTrackedBootyItem::BeforeDelete()
{
	DELE_PTR_FULL(Item);
}

void FHiddenActionStateParams::AfterRead()
{
}

void FHiddenActionStateParams::BeforeDelete()
{
}

void FSirenStatuesSelector_BasedOnShipSize_Entry::AfterRead()
{
}

void FSirenStatuesSelector_BasedOnShipSize_Entry::BeforeDelete()
{
}

void FStaggerModifiersEntry::AfterRead()
{
}

void FStaggerModifiersEntry::BeforeDelete()
{
}

void FQuestVariableText::AfterRead()
{
	FQuestVariable::AfterRead();

}

void FQuestVariableText::BeforeDelete()
{
	FQuestVariable::BeforeDelete();

}

void FTelemetryStepContext::AfterRead()
{
}

void FTelemetryStepContext::BeforeDelete()
{
}

void FWieldedItemData::AfterRead()
{
	READ_PTR_FULL(Wieldable, AActor);
	READ_PTR_FULL(ItemCategory, UClass);
}

void FWieldedItemData::BeforeDelete()
{
	DELE_PTR_FULL(Wieldable);
	DELE_PTR_FULL(ItemCategory);
}

void FAthenaAnimationPetSelectedArrayAnimations::AfterRead()
{
	READ_PTR_FULL(HeldBaseIdle_A, UAnimSequence);
	READ_PTR_FULL(HeldBaseIdle_B, UAnimSequence);
}

void FAthenaAnimationPetSelectedArrayAnimations::BeforeDelete()
{
	DELE_PTR_FULL(HeldBaseIdle_A);
	DELE_PTR_FULL(HeldBaseIdle_B);
}

void FAthenaAnimationPets::AfterRead()
{
	READ_PTR_FULL(PetAnimations, UPetsAnimationData);
}

void FAthenaAnimationPets::BeforeDelete()
{
	DELE_PTR_FULL(PetAnimations);
}

void FPetRoamingAnimationStateDefinitionWeightedDataAsset::AfterRead()
{
	READ_PTR_FULL(AnimationDefinitionData, UPetRoamingAnimationStateDefinitionDataAsset);
}

void FPetRoamingAnimationStateDefinitionWeightedDataAsset::BeforeDelete()
{
	DELE_PTR_FULL(AnimationDefinitionData);
}

void FPetRoamingAnimationStateDefinitionWrapper::AfterRead()
{
	READ_PTR_FULL(DefinitionAsset, UPetRoamingAnimationStateDefinitionDataAsset);
}

void FPetRoamingAnimationStateDefinitionWrapper::BeforeDelete()
{
	DELE_PTR_FULL(DefinitionAsset);
}

void FPetRoamingAnimationState::AfterRead()
{
	READ_PTR_FULL(MontageData, UAnimMontage);
}

void FPetRoamingAnimationState::BeforeDelete()
{
	DELE_PTR_FULL(MontageData);
}

void FAnimationInterruptData::AfterRead()
{
}

void FAnimationInterruptData::BeforeDelete()
{
}

void FSingleStickSettings::AfterRead()
{
}

void FSingleStickSettings::BeforeDelete()
{
}

void FChainLink::AfterRead()
{
	READ_PTR_FULL(Source, AActor);
	READ_PTR_FULL(Target, AActor);
}

void FChainLink::BeforeDelete()
{
	DELE_PTR_FULL(Source);
	DELE_PTR_FULL(Target);
}

void FChainData::AfterRead()
{
}

void FChainData::BeforeDelete()
{
}

void FChainLightningParameters::AfterRead()
{
}

void FChainLightningParameters::BeforeDelete()
{
}

void FInteractableMechanismIslandData::AfterRead()
{
}

void FInteractableMechanismIslandData::BeforeDelete()
{
}

void FActorsOverlappingMechanismData::AfterRead()
{
}

void FActorsOverlappingMechanismData::BeforeDelete()
{
}

void FAshenWindsSkullRewardLevel::AfterRead()
{
}

void FAshenWindsSkullRewardLevel::BeforeDelete()
{
}

void FClientMarkerRepresentation::AfterRead()
{
	READ_PTR_FULL(MarkerPtr, UBaseWorldMarker);
	READ_PTR_FULL(MarkerVisualObjectPtr, UObject);
}

void FClientMarkerRepresentation::BeforeDelete()
{
	DELE_PTR_FULL(MarkerPtr);
	DELE_PTR_FULL(MarkerVisualObjectPtr);
}

void FEnchantedCompassTarget::AfterRead()
{
}

void FEnchantedCompassTarget::BeforeDelete()
{
}

void FAggressiveGhostShipNameBucket::AfterRead()
{
}

void FAggressiveGhostShipNameBucket::BeforeDelete()
{
}

void FFishSizeAndType::AfterRead()
{
	READ_PTR_FULL(Type, UClass);
}

void FFishSizeAndType::BeforeDelete()
{
	DELE_PTR_FULL(Type);
}

void FFishAnimationParams::AfterRead()
{
}

void FFishAnimationParams::BeforeDelete()
{
}

void FFishAnimationSequences::AfterRead()
{
	READ_PTR_FULL(FishAnimationOnHookFighting, UAnimMontage);
	READ_PTR_FULL(FishAnimationOnHookTired, UAnimMontage);
	READ_PTR_FULL(FishAnimationOnHookCaught, UAnimMontage);
	READ_PTR_FULL(FishAnimationOnHookCaughtIdle, UAnimMontage);
	READ_PTR_FULL(FishAnimationEscaping, UAnimMontage);
}

void FFishAnimationSequences::BeforeDelete()
{
	DELE_PTR_FULL(FishAnimationOnHookFighting);
	DELE_PTR_FULL(FishAnimationOnHookTired);
	DELE_PTR_FULL(FishAnimationOnHookCaught);
	DELE_PTR_FULL(FishAnimationOnHookCaughtIdle);
	DELE_PTR_FULL(FishAnimationEscaping);
}

void FFishingFishSelector::AfterRead()
{
	READ_PTR_FULL(AvailableFish, UAvailableFishForSpawning);
	READ_PTR_FULL(Root, UObject);
	READ_PTR_FULL(GatheredConditions, UFishSpawnParamsDataAsset);
	READ_PTR_FULL(GatheredIsland, UVoyageLocationOnlyNamedIslandListDataAsset);
}

void FFishingFishSelector::BeforeDelete()
{
	DELE_PTR_FULL(AvailableFish);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(GatheredConditions);
	DELE_PTR_FULL(GatheredIsland);
}

void FFishingRodReplicatedFishState::AfterRead()
{
	READ_PTR_FULL(FishingFish, AFishingFish);
}

void FFishingRodReplicatedFishState::BeforeDelete()
{
	DELE_PTR_FULL(FishingFish);
}

void FFishingMiniGamePlayerInput::AfterRead()
{
}

void FFishingMiniGamePlayerInput::BeforeDelete()
{
}

void FFishingRodForceFeedbackLevel::AfterRead()
{
	READ_PTR_FULL(ForceFeedback, UForceFeedbackEffect);
}

void FFishingRodForceFeedbackLevel::BeforeDelete()
{
	DELE_PTR_FULL(ForceFeedback);
}

void FFishBaitInfo::AfterRead()
{
	READ_PTR_FULL(BaitItemDesc, UClass);
}

void FFishBaitInfo::BeforeDelete()
{
	DELE_PTR_FULL(BaitItemDesc);
}

void FInstrumentHandlePairedWithActor::AfterRead()
{
	READ_PTR_FULL(InstrumentActor, AActor);
}

void FInstrumentHandlePairedWithActor::BeforeDelete()
{
	DELE_PTR_FULL(InstrumentActor);
}

void FShantyInstrumentData::AfterRead()
{
	READ_PTR_FULL(PlayLead, UWwiseEvent);
	READ_PTR_FULL(PlayAccompaniment, UWwiseEvent);
	READ_PTR_FULL(StopLead, UWwiseEvent);
	READ_PTR_FULL(StopAccompaniment, UWwiseEvent);
}

void FShantyInstrumentData::BeforeDelete()
{
	DELE_PTR_FULL(PlayLead);
	DELE_PTR_FULL(PlayAccompaniment);
	DELE_PTR_FULL(StopLead);
	DELE_PTR_FULL(StopAccompaniment);
}

void FShantyData::AfterRead()
{
	READ_PTR_FULL(UnlockEntitlement, UClass);
}

void FShantyData::BeforeDelete()
{
	DELE_PTR_FULL(UnlockEntitlement);
}

void FShippingStatsTelemetryFragment::AfterRead()
{
}

void FShippingStatsTelemetryFragment::BeforeDelete()
{
}

void FAudioDataTelemetryFragment::AfterRead()
{
}

void FAudioDataTelemetryFragment::BeforeDelete()
{
}

void FFrameTypeTelemetryFragment::AfterRead()
{
}

void FFrameTypeTelemetryFragment::BeforeDelete()
{
}

void FRefreshRateTelemetryFragment::AfterRead()
{
}

void FRefreshRateTelemetryFragment::BeforeDelete()
{
}

void FHDRTelemetryFragment::AfterRead()
{
}

void FHDRTelemetryFragment::BeforeDelete()
{
}

void FUIFrameDurationDataTelemetryFragment::AfterRead()
{
}

void FUIFrameDurationDataTelemetryFragment::BeforeDelete()
{
}

void FFrameDurationDataTelemetryFragment::AfterRead()
{
}

void FFrameDurationDataTelemetryFragment::BeforeDelete()
{
}

void FGarbageCollectionFrametimeTelemetryFragment::AfterRead()
{
}

void FGarbageCollectionFrametimeTelemetryFragment::BeforeDelete()
{
}

void FHitchDataTelemetryFragment::AfterRead()
{
}

void FHitchDataTelemetryFragment::BeforeDelete()
{
}

void FStutterDataTelemetryFragment::AfterRead()
{
}

void FStutterDataTelemetryFragment::BeforeDelete()
{
}

void FWorldMapWorldData::AfterRead()
{
}

void FWorldMapWorldData::BeforeDelete()
{
}

void FWorldMapRequestWorldResponse::AfterRead()
{
}

void FWorldMapRequestWorldResponse::BeforeDelete()
{
}

void FWorldMapRequestWorld::AfterRead()
{
}

void FWorldMapRequestWorld::BeforeDelete()
{
}

void FEventCapstanDamageLevelChanged::AfterRead()
{
	READ_PTR_FULL(Capstan, AActor);
}

void FEventCapstanDamageLevelChanged::BeforeDelete()
{
	DELE_PTR_FULL(Capstan);
}

void FEventPlayerCapstanUsageEnd::AfterRead()
{
}

void FEventPlayerCapstanUsageEnd::BeforeDelete()
{
}

void FEventPlayerCapstanUsageStart::AfterRead()
{
}

void FEventPlayerCapstanUsageStart::BeforeDelete()
{
}

void FEventCapstanObjectDestroyed::AfterRead()
{
}

void FEventCapstanObjectDestroyed::BeforeDelete()
{
}

void FEventCrewReleasedCapstan::AfterRead()
{
}

void FEventCrewReleasedCapstan::BeforeDelete()
{
}

void FEventCapstanReleased::AfterRead()
{
}

void FEventCapstanReleased::BeforeDelete()
{
}

void FEventCapstanFullyLowered::AfterRead()
{
}

void FEventCapstanFullyLowered::BeforeDelete()
{
}

void FEventCapstanFullyRaised::AfterRead()
{
}

void FEventCapstanFullyRaised::BeforeDelete()
{
}

void FEventCapstanStoppedMoving::AfterRead()
{
}

void FEventCapstanStoppedMoving::BeforeDelete()
{
}

void FEventCapstanStartedMoving::AfterRead()
{
}

void FEventCapstanStartedMoving::BeforeDelete()
{
}

void FCatalogOfferCommodity::AfterRead()
{
	READ_PTR_FULL(RequiredEmissary, UClass);
}

void FCatalogOfferCommodity::BeforeDelete()
{
	DELE_PTR_FULL(RequiredEmissary);
}

void FStagingPlayerWelcomingPopup::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FStagingPlayerWelcomingPopup::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FEventPlayerPinnedMapTable::AfterRead()
{
}

void FEventPlayerPinnedMapTable::BeforeDelete()
{
}

void FEventMeleeAttackUpdateRecoverDuration::AfterRead()
{
}

void FEventMeleeAttackUpdateRecoverDuration::BeforeDelete()
{
}

void FEventMeleeAttackProcessorStrikeEnded::AfterRead()
{
}

void FEventMeleeAttackProcessorStrikeEnded::BeforeDelete()
{
}

void FEventMeleeAttackProcessorStrikeStarted::AfterRead()
{
}

void FEventMeleeAttackProcessorStrikeStarted::BeforeDelete()
{
}

void FEventMeleeAttackProcessorComplete::AfterRead()
{
}

void FEventMeleeAttackProcessorComplete::BeforeDelete()
{
}

void FEventMeleeAttackPredictedHit::AfterRead()
{
	READ_PTR_FULL(HitActor, AActor);
}

void FEventMeleeAttackPredictedHit::BeforeDelete()
{
	DELE_PTR_FULL(HitActor);
}

void FEventMeleeAttackHit::AfterRead()
{
}

void FEventMeleeAttackHit::BeforeDelete()
{
}

void FEventMeleeWeaponAttackTriggered::AfterRead()
{
}

void FEventMeleeWeaponAttackTriggered::BeforeDelete()
{
}

void FEventStopBlocking::AfterRead()
{
}

void FEventStopBlocking::BeforeDelete()
{
}

void FEventStartBlocking::AfterRead()
{
}

void FEventStartBlocking::BeforeDelete()
{
}

void FMermaidUsedTelemetryEvent::AfterRead()
{
}

void FMermaidUsedTelemetryEvent::BeforeDelete()
{
}

void FPlayerDoesNotRequireMermaidTelemetryEvent::AfterRead()
{
}

void FPlayerDoesNotRequireMermaidTelemetryEvent::BeforeDelete()
{
}

void FPlayerRequiresMermaidTelemetryEvent::AfterRead()
{
}

void FPlayerRequiresMermaidTelemetryEvent::BeforeDelete()
{
}

void FClientBootFlowExistingSessionsRetrievedTelemetryEvent::AfterRead()
{
}

void FClientBootFlowExistingSessionsRetrievedTelemetryEvent::BeforeDelete()
{
}

void FInvalidDependencyRootPackageEncounteredTelemetryEvent::AfterRead()
{
}

void FInvalidDependencyRootPackageEncounteredTelemetryEvent::BeforeDelete()
{
}

void FServerPlayerBannedTelemetryEvent::AfterRead()
{
}

void FServerPlayerBannedTelemetryEvent::BeforeDelete()
{
}

void FClientInputMatchmakingNotificationResultTelemetryEvent::AfterRead()
{
}

void FClientInputMatchmakingNotificationResultTelemetryEvent::BeforeDelete()
{
}

void FClientEndEngagementMessageTelemetryEvent::AfterRead()
{
}

void FClientEndEngagementMessageTelemetryEvent::BeforeDelete()
{
}

void FClientBootFlowErrorOccurredTelemetryEvent::AfterRead()
{
}

void FClientBootFlowErrorOccurredTelemetryEvent::BeforeDelete()
{
}

void FClientPirateDeleteTelemetryEvent::AfterRead()
{
}

void FClientPirateDeleteTelemetryEvent::BeforeDelete()
{
}

void FClientOptedIntoMarketingTelemetryEvent::AfterRead()
{
}

void FClientOptedIntoMarketingTelemetryEvent::BeforeDelete()
{
}

void FSyncLoadPackageTelemetryEvent::AfterRead()
{
}

void FSyncLoadPackageTelemetryEvent::BeforeDelete()
{
}

void FContestMatchmakingClientRequestModel::AfterRead()
{
}

void FContestMatchmakingClientRequestModel::BeforeDelete()
{
}

void FShovelDigActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FShovelDigActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FSplineTransitionLadderActionFinishedMessage::AfterRead()
{
	FActionStateMessage::AfterRead();

}

void FSplineTransitionLadderActionFinishedMessage::BeforeDelete()
{
	FActionStateMessage::BeforeDelete();

}

void FSplineTransitionLadderActionStateConstructionInfo::AfterRead()
{
	FTransitionLadderActionStateConstructionInfo::AfterRead();

}

void FSplineTransitionLadderActionStateConstructionInfo::BeforeDelete()
{
	FTransitionLadderActionStateConstructionInfo::BeforeDelete();

}

void FStunnedEvent::AfterRead()
{
}

void FStunnedEvent::BeforeDelete()
{
}

void FPetChestCloseRequestEvent::AfterRead()
{
}

void FPetChestCloseRequestEvent::BeforeDelete()
{
}

void FPetChestOpenRequestEvent::AfterRead()
{
	READ_PTR_FULL(Interaction, AActor);
}

void FPetChestOpenRequestEvent::BeforeDelete()
{
	DELE_PTR_FULL(Interaction);
}

void FPetChestRemovePetEvent::AfterRead()
{
}

void FPetChestRemovePetEvent::BeforeDelete()
{
}

void FPetChestUnequipPetEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FPetChestUnequipPetEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FPetChestEquipPetEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FPetChestEquipPetEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FPetChestSuccessfulNameChangeTelemetryEvent::AfterRead()
{
}

void FPetChestSuccessfulNameChangeTelemetryEvent::BeforeDelete()
{
}

void FShipCustomizationChestLoadoutUpdatedEvent::AfterRead()
{
}

void FShipCustomizationChestLoadoutUpdatedEvent::BeforeDelete()
{
}

void FShipCustomizationChestUnequipShipCustomizationEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FShipCustomizationChestUnequipShipCustomizationEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FShipCustomizationChestEquipShipCustomizationEvent::AfterRead()
{
	READ_PTR_FULL(Desc, UClass);
}

void FShipCustomizationChestEquipShipCustomizationEvent::BeforeDelete()
{
	DELE_PTR_FULL(Desc);
}

void FShipFlagCustomizationChestEndedInteractionEvent::AfterRead()
{
}

void FShipFlagCustomizationChestEndedInteractionEvent::BeforeDelete()
{
}

void FClientProjectileImpactHitRegInfoTelemetryEvent::AfterRead()
{
}

void FClientProjectileImpactHitRegInfoTelemetryEvent::BeforeDelete()
{
}

void FServerProjectileImpactHitRegInfoTelemetryEvent::AfterRead()
{
}

void FServerProjectileImpactHitRegInfoTelemetryEvent::BeforeDelete()
{
}

void FProjectileImpactTelemetryEvent::AfterRead()
{
}

void FProjectileImpactTelemetryEvent::BeforeDelete()
{
}

void FServerProjectileHitRegInfoTelemetryEvent::AfterRead()
{
}

void FServerProjectileHitRegInfoTelemetryEvent::BeforeDelete()
{
}

void FProjectileHitTelemetryEvent::AfterRead()
{
}

void FProjectileHitTelemetryEvent::BeforeDelete()
{
}

void FOnLiquidProjectileImpactEvent::AfterRead()
{
}

void FOnLiquidProjectileImpactEvent::BeforeDelete()
{
}

void FLiquidProjectileImpactEvent::AfterRead()
{
	READ_PTR_FULL(ProjectileType, UClass);
}

void FLiquidProjectileImpactEvent::BeforeDelete()
{
	DELE_PTR_FULL(ProjectileType);
}

void FPuzzleVaultKeyUsedTelemetryEvent::AfterRead()
{
}

void FPuzzleVaultKeyUsedTelemetryEvent::BeforeDelete()
{
}

void FPuzzleVaultStartedTelemetryEvent::AfterRead()
{
}

void FPuzzleVaultStartedTelemetryEvent::BeforeDelete()
{
}

void FPuzzleVaultCompletedTelemetryEvent::AfterRead()
{
}

void FPuzzleVaultCompletedTelemetryEvent::BeforeDelete()
{
}

void FCannonProjectileHitShipWithStatusEffectsEvent::AfterRead()
{
	READ_PTR_FULL(Ship, AShip);
	READ_PTR_FULL(Instigator, AActor);
}

void FCannonProjectileHitShipWithStatusEffectsEvent::BeforeDelete()
{
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(Instigator);
}

void FEventCrewShipManifestCurrentActiveTaleUpdated::AfterRead()
{
}

void FEventCrewShipManifestCurrentActiveTaleUpdated::BeforeDelete()
{
}

void FFailedToFindPlayerSpawnLocationTelemetryEvent::AfterRead()
{
}

void FFailedToFindPlayerSpawnLocationTelemetryEvent::BeforeDelete()
{
}

void FHideoutRevealedEvent::AfterRead()
{
}

void FHideoutRevealedEvent::BeforeDelete()
{
}

void FPlayerExitedHideoutEvent::AfterRead()
{
}

void FPlayerExitedHideoutEvent::BeforeDelete()
{
}

void FPlayerEnteredHideoutEvent::AfterRead()
{
}

void FPlayerEnteredHideoutEvent::BeforeDelete()
{
}

void FPiratePurchaseClaims::AfterRead()
{
}

void FPiratePurchaseClaims::BeforeDelete()
{
}

void FCommerceRemoteServicePurchaseRequest::AfterRead()
{
}

void FCommerceRemoteServicePurchaseRequest::BeforeDelete()
{
}

void FRemoteEntitlementsModel::AfterRead()
{
}

void FRemoteEntitlementsModel::BeforeDelete()
{
}

void FRemotePreferencesModel::AfterRead()
{
}

void FRemotePreferencesModel::BeforeDelete()
{
}

void FHttpResponseTelemetryFragmentInput::AfterRead()
{
	FTelemetryFragmentInput::AfterRead();

}

void FHttpResponseTelemetryFragmentInput::BeforeDelete()
{
	FTelemetryFragmentInput::BeforeDelete();

}

void FHttpResponseTelemetryFragment::AfterRead()
{
}

void FHttpResponseTelemetryFragment::BeforeDelete()
{
}

void FPlayerClientHttpRequestTelemetryEvent::AfterRead()
{
}

void FPlayerClientHttpRequestTelemetryEvent::BeforeDelete()
{
}

void FPlayerServerHttpRequestTelemetryEvent::AfterRead()
{
}

void FPlayerServerHttpRequestTelemetryEvent::BeforeDelete()
{
}

void FRemoteRewardRequestModel::AfterRead()
{
}

void FRemoteRewardRequestModel::BeforeDelete()
{
}

void FShipCustomizationChestShipCustomizationLoadoutUpdatedEvent::AfterRead()
{
}

void FShipCustomizationChestShipCustomizationLoadoutUpdatedEvent::BeforeDelete()
{
}

void FTaleQuestNotificationStepEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

	READ_PTR_FULL(PopUpDesc, UPopUpMessageDesc);
}

void FTaleQuestNotificationStepEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

	DELE_PTR_FULL(PopUpDesc);
}

void FVaultAssignedAutomationEvent::AfterRead()
{
	READ_PTR_FULL(Vault, AActor);
	READ_PTR_FULL(Key, UClass);
}

void FVaultAssignedAutomationEvent::BeforeDelete()
{
	DELE_PTR_FULL(Vault);
	DELE_PTR_FULL(Key);
}

void FVoyageProposalCompletedNetworkEvent::AfterRead()
{
	FNetworkEventStruct::AfterRead();

}

void FVoyageProposalCompletedNetworkEvent::BeforeDelete()
{
	FNetworkEventStruct::BeforeDelete();

}

void FTaleAvailableForCancel::AfterRead()
{
	READ_PTR_FULL(TaleData, UVoyageDescDataAsset);
}

void FTaleAvailableForCancel::BeforeDelete()
{
	DELE_PTR_FULL(TaleData);
}

void FVoyageAvailableForCancel::AfterRead()
{
	READ_PTR_FULL(ProposalDesc, UVoyageProposalDesc);
}

void FVoyageAvailableForCancel::BeforeDelete()
{
	DELE_PTR_FULL(ProposalDesc);
}

void FVoyageWithdrawnEvent::AfterRead()
{
	READ_PTR_FULL(Proposer, APlayerState);
}

void FVoyageWithdrawnEvent::BeforeDelete()
{
	DELE_PTR_FULL(Proposer);
}

void FEventShipTopDeckUnblocked::AfterRead()
{
}

void FEventShipTopDeckUnblocked::BeforeDelete()
{
}

void FWaterModifierDrowningParams::AfterRead()
{
}

void FWaterModifierDrowningParams::BeforeDelete()
{
}

void FEventWaterAmountChanged::AfterRead()
{
}

void FEventWaterAmountChanged::BeforeDelete()
{
}

void FEventSubmergedStateChanged::AfterRead()
{
}

void FEventSubmergedStateChanged::BeforeDelete()
{
}

void FEventLocalPlayerSuperheatedWaterZoneChanged::AfterRead()
{
}

void FEventLocalPlayerSuperheatedWaterZoneChanged::BeforeDelete()
{
}

void FEventPlayerViewUnderWaterStateChanged::AfterRead()
{
}

void FEventPlayerViewUnderWaterStateChanged::BeforeDelete()
{
}

void FLocomotionActionStateConstructionInfo::AfterRead()
{
	FActorActionStateConstructionInfo::AfterRead();

}

void FLocomotionActionStateConstructionInfo::BeforeDelete()
{
	FActorActionStateConstructionInfo::BeforeDelete();

}

void FLocalisationChangedEvent::AfterRead()
{
}

void FLocalisationChangedEvent::BeforeDelete()
{
}

void FEventUserGameSettingsRadialMappings::AfterRead()
{
}

void FEventUserGameSettingsRadialMappings::BeforeDelete()
{
}

void FEventUserGameSettingsRadialMappingsRequest::AfterRead()
{
}

void FEventUserGameSettingsRadialMappingsRequest::BeforeDelete()
{
}

void FEventUserGameSettingsFloatChanged::AfterRead()
{
}

void FEventUserGameSettingsFloatChanged::BeforeDelete()
{
}

void FEventUserGameSettingsIntegerChanged::AfterRead()
{
}

void FEventUserGameSettingsIntegerChanged::BeforeDelete()
{
}

void FEventUserGameSettingsBooleanChanged::AfterRead()
{
}

void FEventUserGameSettingsBooleanChanged::BeforeDelete()
{
}

void FEventUserGameSettingsResetToDefaultBindings::AfterRead()
{
}

void FEventUserGameSettingsResetToDefaultBindings::BeforeDelete()
{
}

void FEventUserGameSettingsSetKeyBindingToInvalid::AfterRead()
{
}

void FEventUserGameSettingsSetKeyBindingToInvalid::BeforeDelete()
{
}

void FEventUserGameSettingsSetKeyBinding::AfterRead()
{
}

void FEventUserGameSettingsSetKeyBinding::BeforeDelete()
{
}

void FEventUserGameSettingsSetInteger::AfterRead()
{
}

void FEventUserGameSettingsSetInteger::BeforeDelete()
{
}

void FEventUserGameSettingsSetFloat::AfterRead()
{
}

void FEventUserGameSettingsSetFloat::BeforeDelete()
{
}

void FEventUserGameSettingsSetBoolean::AfterRead()
{
}

void FEventUserGameSettingsSetBoolean::BeforeDelete()
{
}

void FKeyBinding::AfterRead()
{
}

void FKeyBinding::BeforeDelete()
{
}

void FEventGetAllKeybindingsResponse::AfterRead()
{
}

void FEventGetAllKeybindingsResponse::BeforeDelete()
{
}

void FEventGetAllKeybindingsRequest::AfterRead()
{
}

void FEventGetAllKeybindingsRequest::BeforeDelete()
{
}

void FEventHdrSettingsVisible::AfterRead()
{
}

void FEventHdrSettingsVisible::BeforeDelete()
{
}

void FEventsRequestAccessibilitySettingsReset::AfterRead()
{
}

void FEventsRequestAccessibilitySettingsReset::BeforeDelete()
{
}

void FEventSaveUserGameSettingsRequest::AfterRead()
{
}

void FEventSaveUserGameSettingsRequest::BeforeDelete()
{
}

void FPersistentUserGameSettings::AfterRead()
{
}

void FPersistentUserGameSettings::BeforeDelete()
{
}

void FEventUserGameSettingsResponse::AfterRead()
{
}

void FEventUserGameSettingsResponse::BeforeDelete()
{
}

void FEventUserGameSettingsRequest::AfterRead()
{
}

void FEventUserGameSettingsRequest::BeforeDelete()
{
}

void FEventUserGameSettingsSingleChange::AfterRead()
{
}

void FEventUserGameSettingsSingleChange::BeforeDelete()
{
}

void FEventUserGameSettingsAllChanged::AfterRead()
{
}

void FEventUserGameSettingsAllChanged::BeforeDelete()
{
}

void FUIKeyBindingOptionSelectedTelemetryEvent::AfterRead()
{
}

void FUIKeyBindingOptionSelectedTelemetryEvent::BeforeDelete()
{
}

void FUIIntegerOptionSelectedTelemetryEvent::AfterRead()
{
}

void FUIIntegerOptionSelectedTelemetryEvent::BeforeDelete()
{
}

void FUIFloatOptionSelectedTelemetryEvent::AfterRead()
{
}

void FUIFloatOptionSelectedTelemetryEvent::BeforeDelete()
{
}

void FUIBooleanOptionSelectedTelemetryEvent::AfterRead()
{
}

void FUIBooleanOptionSelectedTelemetryEvent::BeforeDelete()
{
}

void FUseSingleStickCameraToggleModeChangedEvent::AfterRead()
{
}

void FUseSingleStickCameraToggleModeChangedEvent::BeforeDelete()
{
}

void FUseSingleStickChangedEvent::AfterRead()
{
}

void FUseSingleStickChangedEvent::BeforeDelete()
{
}

void FPushToTalkModeChangedEvent::AfterRead()
{
}

void FPushToTalkModeChangedEvent::BeforeDelete()
{
}

void FResetAutoCentreLookEvent::AfterRead()
{
}

void FResetAutoCentreLookEvent::BeforeDelete()
{
}

void FInteractOnServerRpc::AfterRead()
{
	FBoxedRpc::AfterRead();

	READ_PTR_FULL(NotificationInputId, UClass);
}

void FInteractOnServerRpc::BeforeDelete()
{
	FBoxedRpc::BeforeDelete();

	DELE_PTR_FULL(NotificationInputId);
}

void FAthenaAnimationLocomotionAnimData::AfterRead()
{
	READ_PTR_FULL(MainMovement, UBlendSpace);
	READ_PTR_FULL(MovementOutOf, UAnimSequence);
	READ_PTR_FULL(TurnOut, UAnimSequence);
	READ_PTR_FULL(RunStop, UBlendSpace);
}

void FAthenaAnimationLocomotionAnimData::BeforeDelete()
{
	DELE_PTR_FULL(MainMovement);
	DELE_PTR_FULL(MovementOutOf);
	DELE_PTR_FULL(TurnOut);
	DELE_PTR_FULL(RunStop);
}

void FAthenaAnimationLocomotionTurningAnimDataPitchOverride::AfterRead()
{
	READ_PTR_FULL(Turn90, UBlendSpace1D);
}

void FAthenaAnimationLocomotionTurningAnimDataPitchOverride::BeforeDelete()
{
	DELE_PTR_FULL(Turn90);
}

// Function Athena.MetalAIFormComponent.OnRep_IsWet
// (Final, Native, Private)
void UMetalAIFormComponent::OnRep_IsWet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MetalAIFormComponent.OnRep_IsWet");

	UMetalAIFormComponent_OnRep_IsWet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMetalAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

	READ_PTR_FULL(RustyParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(DefaultFootfallParams, USkeletonAudioFootfallControllerParams);
	READ_PTR_FULL(RustyFootfallParams, USkeletonAudioFootfallControllerParams);
	READ_PTR_FULL(RustyParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(DefaultVulnerabilityLayer, UDamageableVulnerabilityLayer);
	READ_PTR_FULL(RustyVulnerabilityLayer, UDamageableVulnerabilityLayer);
	READ_PTR_FULL(RustyHitReactionsLayer, UCharacterHitReactionDamagerTypeToAnimTypeLayer);
	READ_PTR_FULL(MetalDynamicMaterialInstance, UMaterialInstanceDynamic);
}

void UMetalAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

	DELE_PTR_FULL(RustyParticlesTemplate);
	DELE_PTR_FULL(DefaultFootfallParams);
	DELE_PTR_FULL(RustyFootfallParams);
	DELE_PTR_FULL(RustyParticleSystemComponent);
	DELE_PTR_FULL(DefaultVulnerabilityLayer);
	DELE_PTR_FULL(RustyVulnerabilityLayer);
	DELE_PTR_FULL(RustyHitReactionsLayer);
	DELE_PTR_FULL(MetalDynamicMaterialInstance);
}

// Function Athena.PlantAIFormComponent.OnRep_IsWet
// (Final, Native, Private)
void UPlantAIFormComponent::OnRep_IsWet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlantAIFormComponent.OnRep_IsWet");

	UPlantAIFormComponent_OnRep_IsWet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlantAIFormComponent.OnRep_IsWeak
// (Final, Native, Private)
void UPlantAIFormComponent::OnRep_IsWeak()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlantAIFormComponent.OnRep_IsWeak");

	UPlantAIFormComponent_OnRep_IsWeak_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlantAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

	READ_PTR_FULL(HealingParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(StartHealingAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopHealingAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(WeakParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(HealingParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(WeakParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(PlantDynamicMaterialInstance, UMaterialInstanceDynamic);
}

void UPlantAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

	DELE_PTR_FULL(HealingParticlesTemplate);
	DELE_PTR_FULL(StartHealingAudioLoopEvent);
	DELE_PTR_FULL(StopHealingAudioLoopEvent);
	DELE_PTR_FULL(WeakParticlesTemplate);
	DELE_PTR_FULL(HealingParticleSystemComponent);
	DELE_PTR_FULL(WeakParticleSystemComponent);
	DELE_PTR_FULL(PlantDynamicMaterialInstance);
}

void UCompanyValidationAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCompanyValidationAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.WieldableReplica.OnMeshInitialised
// (Native, Event, Protected, BlueprintEvent)
void AWieldableReplica::OnMeshInitialised()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableReplica.OnMeshInitialised");

	AWieldableReplica_OnMeshInitialised_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AWieldableReplica::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MeshComponent, UPrimitiveComponent);
	READ_PTR_FULL(CachedAnimationSet, UCosmeticItemAnimationSetDataAsset);
	READ_PTR_FULL(ReplicaCategory, UClass);
}

void AWieldableReplica::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(CachedAnimationSet);
	DELE_PTR_FULL(ReplicaCategory);
}

void APoseableMeshWieldableReplica::AfterRead()
{
	AWieldableReplica::AfterRead();

}

void APoseableMeshWieldableReplica::BeforeDelete()
{
	AWieldableReplica::BeforeDelete();

}

void ACompassWieldableReplica::AfterRead()
{
	APoseableMeshWieldableReplica::AfterRead();

	READ_PTR_FULL(SpinComponent, UCompassSpinComponent);
}

void ACompassWieldableReplica::BeforeDelete()
{
	APoseableMeshWieldableReplica::BeforeDelete();

	DELE_PTR_FULL(SpinComponent);
}

void UCompositeQuickSwitchWeaponSecondaryInteractNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UCompositeQuickSwitchWeaponSecondaryInteractNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UCompositeQuickSwitchWeaponSecondaryInteractReleasedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UCompositeQuickSwitchWeaponSecondaryInteractReleasedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UContentEngagementMessageParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContentEngagementMessageParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UContentTypeSelectionConditional::AfterRead()
{
	UObject::AfterRead();

}

void UContentTypeSelectionConditional::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UStorageContrainerAllowedAdventure::AfterRead()
{
	UContentTypeSelectionConditional::AfterRead();

}

void UStorageContrainerAllowedAdventure::BeforeDelete()
{
	UContentTypeSelectionConditional::BeforeDelete();

}

void UStorageContrainerAllowedContest::AfterRead()
{
	UContentTypeSelectionConditional::AfterRead();

}

void UStorageContrainerAllowedContest::BeforeDelete()
{
	UContentTypeSelectionConditional::BeforeDelete();

}

void UContestAwardScoreForItemDugUpStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UContestAwardScoreForItemDugUpStepDesc);
}

void UContestAwardScoreForItemDugUpStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.LaunchableProjectile.TrailSfxIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALaunchableProjectile::TrailSfxIsActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.TrailSfxIsActive");

	ALaunchableProjectile_TrailSfxIsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LaunchableProjectile.TrailIsActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALaunchableProjectile::TrailIsActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.TrailIsActive");

	ALaunchableProjectile_TrailIsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LaunchableProjectile.StopTrailEffects
// (Final, Native, Public, BlueprintCallable)
void ALaunchableProjectile::StopTrailEffects()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.StopTrailEffects");

	ALaunchableProjectile_StopTrailEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.OnStop
// (Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult              Result                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ALaunchableProjectile::OnStop(const struct FHitResult& Result)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.OnStop");

	ALaunchableProjectile_OnStop_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.OnReachedTooDeepToExist
// (Native, Protected)
void ALaunchableProjectile::OnReachedTooDeepToExist()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.OnReachedTooDeepToExist");

	ALaunchableProjectile_OnReachedTooDeepToExist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.OnImpactEffects
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Result                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ALaunchableProjectile::OnImpactEffects(const struct FHitResult& Result)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.OnImpactEffects");

	ALaunchableProjectile_OnImpactEffects_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.OnImpact
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              Result                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ALaunchableProjectile::OnImpact(const struct FHitResult& Result)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.OnImpact");

	ALaunchableProjectile_OnImpact_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.OnExitWater
// (Native, Protected)
void ALaunchableProjectile::OnExitWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.OnExitWater");

	ALaunchableProjectile_OnExitWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.OnEnterWater
// (Native, Protected)
void ALaunchableProjectile::OnEnterWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.OnEnterWater");

	ALaunchableProjectile_OnEnterWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.LaunchWithOffset
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 SpawnLaunchOffset              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void ALaunchableProjectile::LaunchWithOffset(const struct FVector& LaunchVelocity, const struct FVector& SpawnLaunchOffset)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.LaunchWithOffset");

	ALaunchableProjectile_LaunchWithOffset_Params params;
	params.LaunchVelocity = LaunchVelocity;
	params.SpawnLaunchOffset = SpawnLaunchOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableProjectile.IsInWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALaunchableProjectile::IsInWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableProjectile.IsInWater");

	ALaunchableProjectile_IsInWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ALaunchableProjectile::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(WaterSplashComponent, UWaterSplashComponent);
	READ_PTR_FULL(ProjectileComponent, UProjectileMovementComponent);
	READ_PTR_FULL(ImpactProjectileId, UClass);
	READ_PTR_FULL(TrailEffectAboveWater, UObject);
	READ_PTR_FULL(TrailEffectBelowWater, UObject);
	READ_PTR_FULL(TrailSfxPlay, UWwiseEvent);
	READ_PTR_FULL(TrailSfxStop, UWwiseEvent);
	READ_PTR_FULL(TrailSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CannonFireSfx, UWwiseEvent);
	READ_PTR_FULL(CannonFireSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(TrailEffect, UParticleSystemComponent);
}

void ALaunchableProjectile::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(WaterSplashComponent);
	DELE_PTR_FULL(ProjectileComponent);
	DELE_PTR_FULL(ImpactProjectileId);
	DELE_PTR_FULL(TrailEffectAboveWater);
	DELE_PTR_FULL(TrailEffectBelowWater);
	DELE_PTR_FULL(TrailSfxPlay);
	DELE_PTR_FULL(TrailSfxStop);
	DELE_PTR_FULL(TrailSfxPool);
	DELE_PTR_FULL(CannonFireSfx);
	DELE_PTR_FULL(CannonFireSfxPool);
	DELE_PTR_FULL(StaticMeshComponent);
	DELE_PTR_FULL(TrailEffect);
}

void ACannonProjectile::AfterRead()
{
	ALaunchableProjectile::AfterRead();

	READ_PTR_FULL(ExplosionComponent, UExplosionComponent);
	READ_PTR_FULL(ImpactDamagerType, UClass);
	READ_PTR_FULL(StatTriggerForCannonballsHittingShips, UClass);
	READ_PTR_FULL(StatTriggerForCannonballsHittingPlayers, UClass);
}

void ACannonProjectile::BeforeDelete()
{
	ALaunchableProjectile::BeforeDelete();

	DELE_PTR_FULL(ExplosionComponent);
	DELE_PTR_FULL(ImpactDamagerType);
	DELE_PTR_FULL(StatTriggerForCannonballsHittingShips);
	DELE_PTR_FULL(StatTriggerForCannonballsHittingPlayers);
}

void ADamageableCannonProjectile::AfterRead()
{
	ACannonProjectile::AfterRead();

}

void ADamageableCannonProjectile::BeforeDelete()
{
	ACannonProjectile::BeforeDelete();

}

// Function Athena.SirenTridentProjectile.OnStop
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult              Result                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ASirenTridentProjectile::OnStop(const struct FHitResult& Result)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenTridentProjectile.OnStop");

	ASirenTridentProjectile_OnStop_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASirenTridentProjectile::AfterRead()
{
	ADamageableCannonProjectile::AfterRead();

	READ_PTR_FULL(DynamicMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(CurrentProjectileParameters, USirenTridentProjectileParams);
	READ_PTR_FULL(CollisionSphere, USphereComponent);
	READ_PTR_FULL(RewindComponent, URewindComponent);
}

void ASirenTridentProjectile::BeforeDelete()
{
	ADamageableCannonProjectile::BeforeDelete();

	DELE_PTR_FULL(DynamicMaterialInstance);
	DELE_PTR_FULL(CurrentProjectileParameters);
	DELE_PTR_FULL(CollisionSphere);
	DELE_PTR_FULL(RewindComponent);
}

void AVolcanicRock::AfterRead()
{
	ACannonProjectile::AfterRead();

}

void AVolcanicRock::BeforeDelete()
{
	ACannonProjectile::BeforeDelete();

}

// Function Athena.HarpoonProjectile.OnRep_ReplicatedTransformState
// (Final, Native, Private)
void AHarpoonProjectile::OnRep_ReplicatedTransformState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonProjectile.OnRep_ReplicatedTransformState");

	AHarpoonProjectile_OnRep_ReplicatedTransformState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonProjectile.OnRep_ProjectileState
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EHarpoonProjectileState> PrevState                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHarpoonProjectile::OnRep_ProjectileState(TEnumAsByte<Athena_EHarpoonProjectileState> PrevState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonProjectile.OnRep_ProjectileState");

	AHarpoonProjectile_OnRep_ProjectileState_Params params;
	params.PrevState = PrevState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonProjectile.Multicast_ProjectileHit
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// struct FHitResult              Result                         (ConstParm, Parm, ReferenceParm, ContainsInstancedReference)
// struct FImpactDamageEvent      InImpactDamageEvent            (ConstParm, Parm, ReferenceParm)
void AHarpoonProjectile::Multicast_ProjectileHit(const struct FHitResult& Result, const struct FImpactDamageEvent& InImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonProjectile.Multicast_ProjectileHit");

	AHarpoonProjectile_Multicast_ProjectileHit_Params params;
	params.Result = Result;
	params.InImpactDamageEvent = InImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHarpoonProjectile::AfterRead()
{
	ALaunchableProjectile::AfterRead();

	READ_PTR_FULL(CollisionComponent, UShapeComponent);
	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(HarpoonRenderComponent, UHarpoonRenderComponent);
	READ_PTR_FULL(MovementBase, USceneComponent);
}

void AHarpoonProjectile::BeforeDelete()
{
	ALaunchableProjectile::BeforeDelete();

	DELE_PTR_FULL(CollisionComponent);
	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(HarpoonRenderComponent);
	DELE_PTR_FULL(MovementBase);
}

void ALiquidProjectile::AfterRead()
{
	ALaunchableProjectile::AfterRead();

	READ_PTR_FULL(DousingParameters, UFireGridCellSelectionParamsDataAsset);
}

void ALiquidProjectile::BeforeDelete()
{
	ALaunchableProjectile::BeforeDelete();

	DELE_PTR_FULL(DousingParameters);
}

// Function Athena.VomitProjectile.SetImpactCallback
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate         Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
void AVomitProjectile::SetImpactCallback(const struct FScriptDelegate& Callback)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitProjectile.SetImpactCallback");

	AVomitProjectile_SetImpactCallback_Params params;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VomitProjectile.SetChannelToIgnoreInShip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Engine_ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVomitProjectile::STATIC_SetChannelToIgnoreInShip(TEnumAsByte<Engine_ECollisionChannel> Channel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitProjectile.SetChannelToIgnoreInShip");

	AVomitProjectile_SetChannelToIgnoreInShip_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VomitProjectile.LaunchVomitProjectile
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Vomiter                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  VomitProjectileClass           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FName                   LaunchSocketName               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          AdditionalLiftAngle            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AVomitProjectile*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AVomitProjectile* AVomitProjectile::STATIC_LaunchVomitProjectile(class AActor* Vomiter, class UClass* VomitProjectileClass, const struct FName& LaunchSocketName, float Speed, float AdditionalLiftAngle, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitProjectile.LaunchVomitProjectile");

	AVomitProjectile_LaunchVomitProjectile_Params params;
	params.Vomiter = Vomiter;
	params.VomitProjectileClass = VomitProjectileClass;
	params.LaunchSocketName = LaunchSocketName;
	params.Speed = Speed;
	params.AdditionalLiftAngle = AdditionalLiftAngle;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AVomitProjectile::AfterRead()
{
	ALiquidProjectile::AfterRead();

}

void AVomitProjectile::BeforeDelete()
{
	ALiquidProjectile::BeforeDelete();

}

// Function Athena.ItemActionComponent.OnRep_ActionState
// (Final, Native, Protected)
void UItemActionComponent::OnRep_ActionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemActionComponent.OnRep_ActionState");

	UItemActionComponent_OnRep_ActionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UItemActionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Wielder, APawn);
	READ_PTR_FULL(ItemOwner, AWieldableItem);
	READ_PTR_FULL(StartInputId, UClass);
	READ_PTR_FULL(StopInputId, UClass);
	READ_PTR_FULL(ItemActionAudio, UItemActionComponentAudioParams);
	READ_PTR_FULL(ActionForceFeedback, UForceFeedbackEffect);
}

void UItemActionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Wielder);
	DELE_PTR_FULL(ItemOwner);
	DELE_PTR_FULL(StartInputId);
	DELE_PTR_FULL(StopInputId);
	DELE_PTR_FULL(ItemActionAudio);
	DELE_PTR_FULL(ActionForceFeedback);
}

// Function Athena.LaunchableShotActionComponent.OnRep_LaunchableProjectileState
// (Final, Native, Public)
void ULaunchableShotActionComponent::OnRep_LaunchableProjectileState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableShotActionComponent.OnRep_LaunchableProjectileState");

	ULaunchableShotActionComponent_OnRep_LaunchableProjectileState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableShotActionComponent.Multicast_SpawnProjectile
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FTransform              SpawnTransform                 (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor)
void ULaunchableShotActionComponent::Multicast_SpawnProjectile(const struct FTransform& SpawnTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableShotActionComponent.Multicast_SpawnProjectile");

	ULaunchableShotActionComponent_Multicast_SpawnProjectile_Params params;
	params.SpawnTransform = SpawnTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchableShotActionComponent.Multicast_ReceiveFire
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FFireBroadcast          Broadcast                      (ConstParm, Parm, ReferenceParm, ContainsInstancedReference)
// struct FVector                 WielderVelocity                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// double                         RequestTimestamp               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   AttackId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ULaunchableShotActionComponent::Multicast_ReceiveFire(const struct FFireBroadcast& Broadcast, const struct FVector& WielderVelocity, double RequestTimestamp, const struct FGuid& AttackId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchableShotActionComponent.Multicast_ReceiveFire");

	ULaunchableShotActionComponent_Multicast_ReceiveFire_Params params;
	params.Broadcast = Broadcast;
	params.WielderVelocity = WielderVelocity;
	params.RequestTimestamp = RequestTimestamp;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULaunchableShotActionComponent::AfterRead()
{
	UItemActionComponent::AfterRead();

	READ_PTR_FULL(CurrentProjectile, ALaunchableProjectile);
	READ_PTR_FULL(ProjectileType, UClass);
	READ_PTR_FULL(LaunchableAudioParams, ULaunchableShotComponentAudioParams);
	READ_PTR_FULL(MuzzleFireVfxFirst, UObject);
	READ_PTR_FULL(MuzzleFireVfxThird, UObject);
	READ_PTR_FULL(MuzzleFireVfxLocal, UObject);
	READ_PTR_FULL(ActionFireForceFeedback, UForceFeedbackEffect);
}

void ULaunchableShotActionComponent::BeforeDelete()
{
	UItemActionComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentProjectile);
	DELE_PTR_FULL(ProjectileType);
	DELE_PTR_FULL(LaunchableAudioParams);
	DELE_PTR_FULL(MuzzleFireVfxFirst);
	DELE_PTR_FULL(MuzzleFireVfxThird);
	DELE_PTR_FULL(MuzzleFireVfxLocal);
	DELE_PTR_FULL(ActionFireForceFeedback);
}

// Function Athena.SirenTridentShotActionComponent.OnRep_CurrentShotState
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TEnumAsByte<Athena_ESirenTridentProjectileState> PreviousState                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USirenTridentShotActionComponent::OnRep_CurrentShotState(TEnumAsByte<Athena_ESirenTridentProjectileState> PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenTridentShotActionComponent.OnRep_CurrentShotState");

	USirenTridentShotActionComponent_OnRep_CurrentShotState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USirenTridentShotActionComponent::AfterRead()
{
	ULaunchableShotActionComponent::AfterRead();

	READ_PTR_FULL(CurrentProjectileParameters, USirenTridentProjectileParams);
	READ_PTR_FULL(TridentProjectile, ASirenTridentProjectile);
	READ_PTR_FULL(SirenShotActionAudio, USirenTridentShotComponentAudioParams);
}

void USirenTridentShotActionComponent::BeforeDelete()
{
	ULaunchableShotActionComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentProjectileParameters);
	DELE_PTR_FULL(TridentProjectile);
	DELE_PTR_FULL(SirenShotActionAudio);
}

// Function Athena.LaunchedFromGeyserActionStateId.PushCharacterIntoLaunchedFromGeyserActionState
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  FiringActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void ULaunchedFromGeyserActionStateId::STATIC_PushCharacterIntoLaunchedFromGeyserActionState(class AActor* Character, class AActor* FiringActor, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchedFromGeyserActionStateId.PushCharacterIntoLaunchedFromGeyserActionState");

	ULaunchedFromGeyserActionStateId_PushCharacterIntoLaunchedFromGeyserActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchedFromGeyserActionStateId.PopCharacterOutOfLaunchedFromGeyserActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULaunchedFromGeyserActionStateId::STATIC_PopCharacterOutOfLaunchedFromGeyserActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchedFromGeyserActionStateId.PopCharacterOutOfLaunchedFromGeyserActionState");

	ULaunchedFromGeyserActionStateId_PopCharacterOutOfLaunchedFromGeyserActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULaunchedFromGeyserActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULaunchedFromGeyserActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.LaunchedFromKrakenActionStateId.PushCharacterIntoLaunchedFromKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  FiringActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AKrakenAnimatedTentacle* Tentacle                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULaunchedFromKrakenActionStateId::STATIC_PushCharacterIntoLaunchedFromKrakenActionState(class AActor* Character, class AActor* FiringActor, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchedFromKrakenActionStateId.PushCharacterIntoLaunchedFromKrakenActionState");

	ULaunchedFromKrakenActionStateId_PushCharacterIntoLaunchedFromKrakenActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LaunchedFromKrakenActionStateId.PopCharacterOutOfLaunchedFromKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULaunchedFromKrakenActionStateId::STATIC_PopCharacterOutOfLaunchedFromKrakenActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LaunchedFromKrakenActionStateId.PopCharacterOutOfLaunchedFromKrakenActionState");

	ULaunchedFromKrakenActionStateId_PopCharacterOutOfLaunchedFromKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULaunchedFromKrakenActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULaunchedFromKrakenActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void ALauncherParentMock::AfterRead()
{
	AActor::AfterRead();

}

void ALauncherParentMock::BeforeDelete()
{
	AActor::BeforeDelete();

}

void ULeaderboardComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void ULeaderboardComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.LeakerComponent.SetLeakState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InLeakId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELeakState> InState                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULeakerComponent::SetLeakState(int InLeakId, TEnumAsByte<Athena_ELeakState> InState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LeakerComponent.SetLeakState");

	ULeakerComponent_SetLeakState_Params params;
	params.InLeakId = InLeakId;
	params.InState = InState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LeakerComponent.RemoveLeak
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InLeakId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULeakerComponent::RemoveLeak(int InLeakId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LeakerComponent.RemoveLeak");

	ULeakerComponent_RemoveLeak_Params params;
	params.InLeakId = InLeakId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LeakerComponent.GetLeakAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ULeakerComponent::GetLeakAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LeakerComponent.GetLeakAmount");

	ULeakerComponent_GetLeakAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULeakerComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(ParticleSystem_WaterLeakAboveWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_WaterLeakBelowWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_RepairLeakAboveWater, UParticleSystem);
	READ_PTR_FULL(ParticleSystem_RepairLeakBelowWater, UParticleSystem);
	READ_PTR_FULL(WaterLeakSfx_Play, UWwiseEvent);
	READ_PTR_FULL(WaterLeakSfx_Stop, UWwiseEvent);
	READ_PTR_FULL(WaterLeakRepairSfx_Play, UWwiseEvent);
	READ_PTR_FULL(WaterLeakRepairSfx_Stop, UWwiseEvent);
	READ_PTR_FULL(WaterLeakWisePool, UWwiseObjectPoolWrapper);
}

void ULeakerComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(ParticleSystem_WaterLeakAboveWater);
	DELE_PTR_FULL(ParticleSystem_WaterLeakBelowWater);
	DELE_PTR_FULL(ParticleSystem_RepairLeakAboveWater);
	DELE_PTR_FULL(ParticleSystem_RepairLeakBelowWater);
	DELE_PTR_FULL(WaterLeakSfx_Play);
	DELE_PTR_FULL(WaterLeakSfx_Stop);
	DELE_PTR_FULL(WaterLeakRepairSfx_Play);
	DELE_PTR_FULL(WaterLeakRepairSfx_Stop);
	DELE_PTR_FULL(WaterLeakWisePool);
}

// Function Athena.SimpleLeakerComponent.AddLeak
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int USimpleLeakerComponent::AddLeak(const struct FTransform& InWhere, float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SimpleLeakerComponent.AddLeak");

	USimpleLeakerComponent_AddLeak_Params params;
	params.InWhere = InWhere;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USimpleLeakerComponent::AfterRead()
{
	ULeakerComponent::AfterRead();

}

void USimpleLeakerComponent::BeforeDelete()
{
	ULeakerComponent::BeforeDelete();

}

// Function Athena.LeaveGhostShipActionStateId.PushCharacterIntoLeaveGhostShipActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            GhostShipLevelId               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULeaveGhostShipActionStateId::STATIC_PushCharacterIntoLeaveGhostShipActionState(class AActor* Character, int GhostShipLevelId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LeaveGhostShipActionStateId.PushCharacterIntoLeaveGhostShipActionState");

	ULeaveGhostShipActionStateId_PushCharacterIntoLeaveGhostShipActionState_Params params;
	params.Character = Character;
	params.GhostShipLevelId = GhostShipLevelId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULeaveGhostShipActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULeaveGhostShipActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.LightingControllerSettings.GetOutput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULightingControllerSettings* Settings                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Input                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLightingControllerSettingsOutput ReturnValue                    (Parm, OutParm, ReturnParm)
struct FLightingControllerSettingsOutput ULightingControllerSettings::STATIC_GetOutput(class ULightingControllerSettings* Settings, float Input)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingControllerSettings.GetOutput");

	ULightingControllerSettings_GetOutput_Params params;
	params.Settings = Settings;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULightingControllerSettings::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(FogDensityCurve, UCurveFloat);
	READ_PTR_FULL(FogStartDistanceCurve, UCurveFloat);
	READ_PTR_FULL(LightIntensityCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeMoonVisibilityCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeStarBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeSunBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(PostLPVIntensityCurve, UCurveFloat);
	READ_PTR_FULL(PostExposureBiasCurve, UCurveFloat);
	READ_PTR_FULL(PostLPVOcclusionIntensityCurve, UCurveFloat);
	READ_PTR_FULL(SkyLightIntensityCurve, UCurveFloat);
	READ_PTR_FULL(FogBrightnessNearCurve, UCurveFloat);
	READ_PTR_FULL(FogBrightnessFarCurve, UCurveFloat);
	READ_PTR_FULL(PostBloomIntensityCurve, UCurveFloat);
	READ_PTR_FULL(PostBloomThresholdCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeAuraBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(PostReflectionProbeBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(PostReflectionProbeShadowBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(VfxControllerCurve, UCurveFloat);
	READ_PTR_FULL(FogMaxOpacityCurve, UCurveFloat);
	READ_PTR_FULL(FogScatterExpCurve, UCurveFloat);
	READ_PTR_FULL(FogUnderwaterDensityCurve, UCurveFloat);
	READ_PTR_FULL(PostLensFlareIntensityCurve, UCurveFloat);
	READ_PTR_FULL(EmissiveFoliageCurve, UCurveFloat);
	READ_PTR_FULL(EmissiveLightsCurve, UCurveFloat);
	READ_PTR_FULL(PostExposureMinBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(PostExposureMaxBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeMoonBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeHorizonCloudBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(SkyDomeGreenFlashStrengthCurve, UCurveFloat);
	READ_PTR_FULL(PostSaturationCurve, UCurveFloat);
	READ_PTR_FULL(PostContrastCurve, UCurveFloat);
	READ_PTR_FULL(CloudRimlightScaleCurve, UCurveFloat);
	READ_PTR_FULL(CloudSkylightScaleCurve, UCurveFloat);
	READ_PTR_FULL(CloudSunlightScaleCurve, UCurveFloat);
	READ_PTR_FULL(CloudGlobalPressureCurve, UCurveFloat);
	READ_PTR_FULL(PostUnderWaterBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(VfxCloudBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(LightGodRayIntensityCurve, UCurveFloat);
	READ_PTR_FULL(CloudBottomBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(CloudSunlightShadowingCurve, UCurveFloat);
	READ_PTR_FULL(SunDiscScaleCurve, UCurveFloat);
	READ_PTR_FULL(WaterSpecularBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(VfxAmbientScaleCurve, UCurveFloat);
	READ_PTR_FULL(CloudShadowBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(StormCloudShadowBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(StormPostBloomIntensityCurve, UCurveFloat);
	READ_PTR_FULL(StormPostBloomThresholdCurve, UCurveFloat);
	READ_PTR_FULL(DirectionalLightShadowSteppingRateCurve, UCurveFloat);
	READ_PTR_FULL(SkullBrightnessCurve, UCurveFloat);
	READ_PTR_FULL(FogColourAwayCurve, UCurveLinearColor);
	READ_PTR_FULL(FogColourTowardsCurve, UCurveLinearColor);
	READ_PTR_FULL(LightSunColourCurve, UCurveLinearColor);
	READ_PTR_FULL(SkyDomeHorizonColourCurve, UCurveLinearColor);
	READ_PTR_FULL(SkyDomeZenithColourCurve, UCurveLinearColor);
	READ_PTR_FULL(SkyLightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(PostAmbientShadowColourCurve, UCurveLinearColor);
	READ_PTR_FULL(FogColourAwayFarCurve, UCurveLinearColor);
	READ_PTR_FULL(FogColourUnderwaterCurve, UCurveLinearColor);
	READ_PTR_FULL(FogColourAwayUnderwaterCurve, UCurveLinearColor);
	READ_PTR_FULL(WaterColourCurve, UCurveLinearColor);
	READ_PTR_FULL(WaterColourShallowCurve, UCurveLinearColor);
	READ_PTR_FULL(WaterBackLitColourCurve, UCurveLinearColor);
	READ_PTR_FULL(WaterFoamColourCurve, UCurveLinearColor);
	READ_PTR_FULL(WaterFoamHighlightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(WaterAmbientColourCurve, UCurveLinearColor);
	READ_PTR_FULL(PostReflectionProbeTintCurve, UCurveLinearColor);
	READ_PTR_FULL(CloudRimlightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(CloudSkylightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(CloudSunlightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(PostUnderWaterTintCurve, UCurveLinearColor);
	READ_PTR_FULL(SkyDomeMoonColourCurve, UCurveLinearColor);
	READ_PTR_FULL(PostGammaCurve, UCurveLinearColor);
	READ_PTR_FULL(SkyDomeSunColourCurve, UCurveLinearColor);
	READ_PTR_FULL(VFXFoamColourCurve, UCurveLinearColor);
	READ_PTR_FULL(VFXWindColourCurve, UCurveLinearColor);
	READ_PTR_FULL(VFXUnderwaterTintCurve, UCurveLinearColor);
	READ_PTR_FULL(StormRainColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormSkyLightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormPostGammaCurve, UCurveLinearColor);
	READ_PTR_FULL(StormFogColourUnderwaterCurve, UCurveLinearColor);
	READ_PTR_FULL(StormFogColourAwayUnderwaterCurve, UCurveLinearColor);
	READ_PTR_FULL(StormWaterColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormWaterColourShallowCurve, UCurveLinearColor);
	READ_PTR_FULL(StormWaterBackLitColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormWaterFoamColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormWaterFoamHighlightColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormWaterAmbientColourCurve, UCurveLinearColor);
	READ_PTR_FULL(StormPostReflectionProbeTintCurve, UCurveLinearColor);
	READ_PTR_FULL(SkullEyeColourCurve, UCurveLinearColor);
}

void ULightingControllerSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(FogDensityCurve);
	DELE_PTR_FULL(FogStartDistanceCurve);
	DELE_PTR_FULL(LightIntensityCurve);
	DELE_PTR_FULL(SkyDomeBrightnessCurve);
	DELE_PTR_FULL(SkyDomeMoonVisibilityCurve);
	DELE_PTR_FULL(SkyDomeStarBrightnessCurve);
	DELE_PTR_FULL(SkyDomeSunBrightnessCurve);
	DELE_PTR_FULL(PostLPVIntensityCurve);
	DELE_PTR_FULL(PostExposureBiasCurve);
	DELE_PTR_FULL(PostLPVOcclusionIntensityCurve);
	DELE_PTR_FULL(SkyLightIntensityCurve);
	DELE_PTR_FULL(FogBrightnessNearCurve);
	DELE_PTR_FULL(FogBrightnessFarCurve);
	DELE_PTR_FULL(PostBloomIntensityCurve);
	DELE_PTR_FULL(PostBloomThresholdCurve);
	DELE_PTR_FULL(SkyDomeAuraBrightnessCurve);
	DELE_PTR_FULL(PostReflectionProbeBrightnessCurve);
	DELE_PTR_FULL(PostReflectionProbeShadowBrightnessCurve);
	DELE_PTR_FULL(VfxControllerCurve);
	DELE_PTR_FULL(FogMaxOpacityCurve);
	DELE_PTR_FULL(FogScatterExpCurve);
	DELE_PTR_FULL(FogUnderwaterDensityCurve);
	DELE_PTR_FULL(PostLensFlareIntensityCurve);
	DELE_PTR_FULL(EmissiveFoliageCurve);
	DELE_PTR_FULL(EmissiveLightsCurve);
	DELE_PTR_FULL(PostExposureMinBrightnessCurve);
	DELE_PTR_FULL(PostExposureMaxBrightnessCurve);
	DELE_PTR_FULL(SkyDomeMoonBrightnessCurve);
	DELE_PTR_FULL(SkyDomeHorizonCloudBrightnessCurve);
	DELE_PTR_FULL(SkyDomeGreenFlashStrengthCurve);
	DELE_PTR_FULL(PostSaturationCurve);
	DELE_PTR_FULL(PostContrastCurve);
	DELE_PTR_FULL(CloudRimlightScaleCurve);
	DELE_PTR_FULL(CloudSkylightScaleCurve);
	DELE_PTR_FULL(CloudSunlightScaleCurve);
	DELE_PTR_FULL(CloudGlobalPressureCurve);
	DELE_PTR_FULL(PostUnderWaterBrightnessCurve);
	DELE_PTR_FULL(VfxCloudBrightnessCurve);
	DELE_PTR_FULL(LightGodRayIntensityCurve);
	DELE_PTR_FULL(CloudBottomBrightnessCurve);
	DELE_PTR_FULL(CloudSunlightShadowingCurve);
	DELE_PTR_FULL(SunDiscScaleCurve);
	DELE_PTR_FULL(WaterSpecularBrightnessCurve);
	DELE_PTR_FULL(VfxAmbientScaleCurve);
	DELE_PTR_FULL(CloudShadowBrightnessCurve);
	DELE_PTR_FULL(StormCloudShadowBrightnessCurve);
	DELE_PTR_FULL(StormPostBloomIntensityCurve);
	DELE_PTR_FULL(StormPostBloomThresholdCurve);
	DELE_PTR_FULL(DirectionalLightShadowSteppingRateCurve);
	DELE_PTR_FULL(SkullBrightnessCurve);
	DELE_PTR_FULL(FogColourAwayCurve);
	DELE_PTR_FULL(FogColourTowardsCurve);
	DELE_PTR_FULL(LightSunColourCurve);
	DELE_PTR_FULL(SkyDomeHorizonColourCurve);
	DELE_PTR_FULL(SkyDomeZenithColourCurve);
	DELE_PTR_FULL(SkyLightColourCurve);
	DELE_PTR_FULL(PostAmbientShadowColourCurve);
	DELE_PTR_FULL(FogColourAwayFarCurve);
	DELE_PTR_FULL(FogColourUnderwaterCurve);
	DELE_PTR_FULL(FogColourAwayUnderwaterCurve);
	DELE_PTR_FULL(WaterColourCurve);
	DELE_PTR_FULL(WaterColourShallowCurve);
	DELE_PTR_FULL(WaterBackLitColourCurve);
	DELE_PTR_FULL(WaterFoamColourCurve);
	DELE_PTR_FULL(WaterFoamHighlightColourCurve);
	DELE_PTR_FULL(WaterAmbientColourCurve);
	DELE_PTR_FULL(PostReflectionProbeTintCurve);
	DELE_PTR_FULL(CloudRimlightColourCurve);
	DELE_PTR_FULL(CloudSkylightColourCurve);
	DELE_PTR_FULL(CloudSunlightColourCurve);
	DELE_PTR_FULL(PostUnderWaterTintCurve);
	DELE_PTR_FULL(SkyDomeMoonColourCurve);
	DELE_PTR_FULL(PostGammaCurve);
	DELE_PTR_FULL(SkyDomeSunColourCurve);
	DELE_PTR_FULL(VFXFoamColourCurve);
	DELE_PTR_FULL(VFXWindColourCurve);
	DELE_PTR_FULL(VFXUnderwaterTintCurve);
	DELE_PTR_FULL(StormRainColourCurve);
	DELE_PTR_FULL(StormSkyLightColourCurve);
	DELE_PTR_FULL(StormPostGammaCurve);
	DELE_PTR_FULL(StormFogColourUnderwaterCurve);
	DELE_PTR_FULL(StormFogColourAwayUnderwaterCurve);
	DELE_PTR_FULL(StormWaterColourCurve);
	DELE_PTR_FULL(StormWaterColourShallowCurve);
	DELE_PTR_FULL(StormWaterBackLitColourCurve);
	DELE_PTR_FULL(StormWaterFoamColourCurve);
	DELE_PTR_FULL(StormWaterFoamHighlightColourCurve);
	DELE_PTR_FULL(StormWaterAmbientColourCurve);
	DELE_PTR_FULL(StormPostReflectionProbeTintCurve);
	DELE_PTR_FULL(SkullEyeColourCurve);
}

void UPlayerCompanyComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerCompanyComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UProgressSpawnLocationProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProgressSpawnLocationProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PlayerCrewComponent.Server_VoteOnSendPlayerToBrig
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           SendIn                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UPlayerCrewComponent::Server_VoteOnSendPlayerToBrig(class APlayerState* PlayerState, bool SendIn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.Server_VoteOnSendPlayerToBrig");

	UPlayerCrewComponent_Server_VoteOnSendPlayerToBrig_Params params;
	params.PlayerState = PlayerState;
	params.SendIn = SendIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.Server_VoteOnScuttleShip
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Scuttle                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UPlayerCrewComponent::Server_VoteOnScuttleShip(bool Scuttle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.Server_VoteOnScuttleShip");

	UPlayerCrewComponent_Server_VoteOnScuttleShip_Params params;
	params.Scuttle = Scuttle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.Server_VoteOnReleasePlayerFromBrig
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class APlayerState*            PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Release                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UPlayerCrewComponent::Server_VoteOnReleasePlayerFromBrig(class APlayerState* PlayerState, bool Release)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.Server_VoteOnReleasePlayerFromBrig");

	UPlayerCrewComponent_Server_VoteOnReleasePlayerFromBrig_Params params;
	params.PlayerState = PlayerState;
	params.Release = Release;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.Server_VoteOnChangingTavernLobby
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class APlayerState*            InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InIsInFavour                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UPlayerCrewComponent::Server_VoteOnChangingTavernLobby(class APlayerState* InPlayerState, bool InIsInFavour)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.Server_VoteOnChangingTavernLobby");

	UPlayerCrewComponent_Server_VoteOnChangingTavernLobby_Params params;
	params.InPlayerState = InPlayerState;
	params.InIsInFavour = InIsInFavour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.Server_VoteOnChangeMatchmakingVisibility
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Change                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UPlayerCrewComponent::Server_VoteOnChangeMatchmakingVisibility(bool Change)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.Server_VoteOnChangeMatchmakingVisibility");

	UPlayerCrewComponent_Server_VoteOnChangeMatchmakingVisibility_Params params;
	params.Change = Change;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.OnRep_TaleProgressLevel
// (Final, Native, Private)
// Parameters:
// int                            PreviousTaleProgressLevel      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerCrewComponent::OnRep_TaleProgressLevel(int PreviousTaleProgressLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.OnRep_TaleProgressLevel");

	UPlayerCrewComponent_OnRep_TaleProgressLevel_Params params;
	params.PreviousTaleProgressLevel = PreviousTaleProgressLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.OnRep_CrewShip
// (Final, Native, Private)
void UPlayerCrewComponent::OnRep_CrewShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.OnRep_CrewShip");

	UPlayerCrewComponent_OnRep_CrewShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.OnRep_CrewRivalVotingData
// (Final, Native, Private)
void UPlayerCrewComponent::OnRep_CrewRivalVotingData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.OnRep_CrewRivalVotingData");

	UPlayerCrewComponent_OnRep_CrewRivalVotingData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.OnRep_CrewMembers
// (Final, Native, Private)
void UPlayerCrewComponent::OnRep_CrewMembers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.OnRep_CrewMembers");

	UPlayerCrewComponent_OnRep_CrewMembers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCrewComponent.OnRep_CrewMatchmakingVisibility
// (Final, Native, Private)
void UPlayerCrewComponent::OnRep_CrewMatchmakingVisibility()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCrewComponent.OnRep_CrewMatchmakingVisibility");

	UPlayerCrewComponent_OnRep_CrewMatchmakingVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerCrewComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerCrewComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.PlayerCurseComponent.OnRep_ActiveCurseForFX
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EPlayerCurseTag> PreviousValue                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerCurseComponent::OnRep_ActiveCurseForFX(TEnumAsByte<Athena_EPlayerCurseTag> PreviousValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCurseComponent.OnRep_ActiveCurseForFX");

	UPlayerCurseComponent_OnRep_ActiveCurseForFX_Params params;
	params.PreviousValue = PreviousValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerCurseComponent.OnMovementModeChanged
// (Final, Native, Private)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EMovementMode> PrevMovementMode               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  PreviousCustomMode             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerCurseComponent::OnMovementModeChanged(class ACharacter* Character, TEnumAsByte<Engine_EMovementMode> PrevMovementMode, unsigned char PreviousCustomMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCurseComponent.OnMovementModeChanged");

	UPlayerCurseComponent_OnMovementModeChanged_Params params;
	params.Character = Character;
	params.PrevMovementMode = PrevMovementMode;
	params.PreviousCustomMode = PreviousCustomMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerCurseComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TemplateVFX, UParticleSystem);
	READ_PTR_FULL(AudioComponentClass, UClass);
	READ_PTR_FULL(PlayCurseActiveAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopCurseActiveAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(CurseVFX, UParticleSystemComponent);
}

void UPlayerCurseComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TemplateVFX);
	DELE_PTR_FULL(AudioComponentClass);
	DELE_PTR_FULL(PlayCurseActiveAudioLoopEvent);
	DELE_PTR_FULL(StopCurseActiveAudioLoopEvent);
	DELE_PTR_FULL(CurseVFX);
}

// Function Athena.PlayerEntitlementBlueprintFunctionLibrary.HasCompletedTale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaPlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  TaleRankDesc                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerEntitlementBlueprintFunctionLibrary::STATIC_HasCompletedTale(class AAthenaPlayerController* PlayerController, class UClass* TaleRankDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerEntitlementBlueprintFunctionLibrary.HasCompletedTale");

	UPlayerEntitlementBlueprintFunctionLibrary_HasCompletedTale_Params params;
	params.PlayerController = PlayerController;
	params.TaleRankDesc = TaleRankDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerEntitlementBlueprintFunctionLibrary.HasCompanyRank
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaPlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  RankDesc                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerEntitlementBlueprintFunctionLibrary::STATIC_HasCompanyRank(class AAthenaPlayerController* PlayerController, class UClass* RankDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerEntitlementBlueprintFunctionLibrary.HasCompanyRank");

	UPlayerEntitlementBlueprintFunctionLibrary_HasCompanyRank_Params params;
	params.PlayerController = PlayerController;
	params.RankDesc = RankDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerEntitlementBlueprintFunctionLibrary.HasBoughtVoyage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaPlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  VoyageProposalDesc             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerEntitlementBlueprintFunctionLibrary::STATIC_HasBoughtVoyage(class AAthenaPlayerController* PlayerController, class UClass* VoyageProposalDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerEntitlementBlueprintFunctionLibrary.HasBoughtVoyage");

	UPlayerEntitlementBlueprintFunctionLibrary_HasBoughtVoyage_Params params;
	params.PlayerController = PlayerController;
	params.VoyageProposalDesc = VoyageProposalDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerEntitlementBlueprintFunctionLibrary.GetEntitlements
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  InEntitlementType              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UPlayerEntitlementBlueprintFunctionLibrary::STATIC_GetEntitlements(class UClass* InEntitlementType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerEntitlementBlueprintFunctionLibrary.GetEntitlements");

	UPlayerEntitlementBlueprintFunctionLibrary_GetEntitlements_Params params;
	params.InEntitlementType = InEntitlementType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerEntitlementBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPlayerEntitlementBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.PlayerEntitlementComponent.ServerRequestEntitlements
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<Athena_ERequestEntitlementBehaviour> InBehaviour                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerEntitlementComponent::ServerRequestEntitlements(TEnumAsByte<Athena_ERequestEntitlementBehaviour> InBehaviour)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerEntitlementComponent.ServerRequestEntitlements");

	UPlayerEntitlementComponent_ServerRequestEntitlements_Params params;
	params.InBehaviour = InBehaviour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerEntitlementComponent.OnRep_Entitlements
// (Final, Native, Private)
void UPlayerEntitlementComponent::OnRep_Entitlements()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerEntitlementComponent.OnRep_Entitlements");

	UPlayerEntitlementComponent_OnRep_Entitlements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerEntitlementComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerEntitlementComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.PlayerFunctionLibrary.DebugRemoveLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ControllerId                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerFunctionLibrary::STATIC_DebugRemoveLocalPlayer(class UObject* WorldContextObject, int ControllerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerFunctionLibrary.DebugRemoveLocalPlayer");

	UPlayerFunctionLibrary_DebugRemoveLocalPlayer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ControllerId = ControllerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPlayerFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.PlayerHeroStatsComponent.OnRep_ServerValues
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<int64_t>                PreviousServerValues           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UPlayerHeroStatsComponent::OnRep_ServerValues(TArray<int64_t> PreviousServerValues)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerHeroStatsComponent.OnRep_ServerValues");

	UPlayerHeroStatsComponent_OnRep_ServerValues_Params params;
	params.PreviousServerValues = PreviousServerValues;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerHeroStatsComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerHeroStatsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void AInteractableBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
}

void AInteractableBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ActionRulesComponent);
}

// Function Athena.ControllableObject.TakenControlImpl
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AControllableObject::TakenControlImpl(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObject.TakenControlImpl");

	AControllableObject_TakenControlImpl_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllableObject.RelinquishedControlImpl
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AControllableObject::RelinquishedControlImpl(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObject.RelinquishedControlImpl");

	AControllableObject_RelinquishedControlImpl_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllableObject.GetControllingActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AControllableObject::GetControllingActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObject.GetControllingActor");

	AControllableObject_GetControllingActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ControllableObject.CanInteractImpl
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                  InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AControllableObject::CanInteractImpl(class AActor* InCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObject.CanInteractImpl");

	AControllableObject_CanInteractImpl_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AControllableObject::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(Phrases, UPhrasesRadialDataAsset);
}

void AControllableObject::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(Phrases);
}

// Function Athena.PlayerLoadingInteractionPoint.Server_NotifyInteractionPointUsed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                  UsingActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlayerLoadingInteractionPoint::Server_NotifyInteractionPointUsed(class AActor* UsingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerLoadingInteractionPoint.Server_NotifyInteractionPointUsed");

	APlayerLoadingInteractionPoint_Server_NotifyInteractionPointUsed_Params params;
	params.UsingActor = UsingActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APlayerLoadingInteractionPoint::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(LoadingPointComponent, ULoadingPointComponent);
	READ_PTR_FULL(InteractionRegion, UInteractableComponent);
	READ_PTR_FULL(SceneComponent, USceneComponent);
	READ_PTR_FULL(PlayerNameplateLocationOverrideComponent, UPlayerNameplateLocationOverrideComponent);
}

void APlayerLoadingInteractionPoint::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(LoadingPointComponent);
	DELE_PTR_FULL(InteractionRegion);
	DELE_PTR_FULL(SceneComponent);
	DELE_PTR_FULL(PlayerNameplateLocationOverrideComponent);
}

// Function Athena.AnimatedMechanismAction.OnRep_State
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FAnimatedMechanismActionState PreviousState                  (ConstParm, Parm, OutParm, ReferenceParm)
void AAnimatedMechanismAction::OnRep_State(const struct FAnimatedMechanismActionState& PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.OnRep_State");

	AAnimatedMechanismAction_OnRep_State_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAnimatedMechanismAction::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.OnMechanismActionStateChanged");

	AAnimatedMechanismAction_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.OnMechanismActionReset
// (Final, Native, Private)
void AAnimatedMechanismAction::OnMechanismActionReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.OnMechanismActionReset");

	AAnimatedMechanismAction_OnMechanismActionReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.OnLastActorLeftSimpleCollisionShape
// (Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAnimatedMechanismAction::OnLastActorLeftSimpleCollisionShape(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.OnLastActorLeftSimpleCollisionShape");

	AAnimatedMechanismAction_OnLastActorLeftSimpleCollisionShape_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.OnFirstActorEnteredSimpleCollisionShape
// (Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAnimatedMechanismAction::OnFirstActorEnteredSimpleCollisionShape(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.OnFirstActorEnteredSimpleCollisionShape");

	AAnimatedMechanismAction_OnFirstActorEnteredSimpleCollisionShape_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.Blueprint_OnStopped
// (Event, Protected, BlueprintEvent)
void AAnimatedMechanismAction::Blueprint_OnStopped()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.Blueprint_OnStopped");

	AAnimatedMechanismAction_Blueprint_OnStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.Blueprint_OnStarted
// (Event, Protected, BlueprintEvent)
void AAnimatedMechanismAction::Blueprint_OnStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.Blueprint_OnStarted");

	AAnimatedMechanismAction_Blueprint_OnStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedMechanismAction.Blueprint_OnReset
// (Event, Protected, BlueprintEvent)
void AAnimatedMechanismAction::Blueprint_OnReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismAction.Blueprint_OnReset");

	AAnimatedMechanismAction_Blueprint_OnReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAnimatedMechanismAction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
	READ_PTR_FULL(MaterialGroup, UClass);
}

void AAnimatedMechanismAction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismActionComponent);
	DELE_PTR_FULL(MaterialGroup);
}

void ABaseToggleAnimatedMechanismAction::AfterRead()
{
	AAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(Pivot, USceneComponent);
	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
}

void ABaseToggleAnimatedMechanismAction::BeforeDelete()
{
	AAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Pivot);
	DELE_PTR_FULL(AudioEmitterPool);
}

void AToggleAnimatedMechanismAction::AfterRead()
{
	ABaseToggleAnimatedMechanismAction::AfterRead();

}

void AToggleAnimatedMechanismAction::BeforeDelete()
{
	ABaseToggleAnimatedMechanismAction::BeforeDelete();

}

// Function Athena.PlinthMechanismAction.OnFortOfTheDamnedEventEnd
// (RequiredAPI, Net, NetReliable, Native, Event, NetMulticast, Protected)
void APlinthMechanismAction::OnFortOfTheDamnedEventEnd()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.OnFortOfTheDamnedEventEnd");

	APlinthMechanismAction_OnFortOfTheDamnedEventEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlinthMechanismAction.OnFortEventEndClientCallback
// (Event, Protected, BlueprintEvent)
void APlinthMechanismAction::OnFortEventEndClientCallback()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.OnFortEventEndClientCallback");

	APlinthMechanismAction_OnFortEventEndClientCallback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlinthMechanismAction.OnFortEventBeginClientCallback
// (Event, Protected, BlueprintEvent)
void APlinthMechanismAction::OnFortEventBeginClientCallback()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.OnFortEventBeginClientCallback");

	APlinthMechanismAction_OnFortEventBeginClientCallback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlinthMechanismAction.OnFortEventBegin
// (RequiredAPI, Net, NetReliable, Native, Event, NetMulticast, Protected)
void APlinthMechanismAction::OnFortEventBegin()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.OnFortEventBegin");

	APlinthMechanismAction_OnFortEventBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlinthMechanismAction.OnAllBraziersUnActive
// (Event, Protected, BlueprintEvent)
void APlinthMechanismAction::OnAllBraziersUnActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.OnAllBraziersUnActive");

	APlinthMechanismAction_OnAllBraziersUnActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlinthMechanismAction.OnAllBraziersActive
// (Event, Protected, BlueprintEvent)
void APlinthMechanismAction::OnAllBraziersActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.OnAllBraziersActive");

	APlinthMechanismAction_OnAllBraziersActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlinthMechanismAction.LockComponentActivated
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Interactor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlinthMechanismAction::LockComponentActivated(class AActor* Interactor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlinthMechanismAction.LockComponentActivated");

	APlinthMechanismAction_LockComponentActivated_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APlinthMechanismAction::AfterRead()
{
	AToggleAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(MechanismTrigger, UMechanismTriggerComponent);
	READ_PTR_FULL(LockComponent, ULockComponent);
	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(InteractableComponent, UPlinthInteractableComponent);
}

void APlinthMechanismAction::BeforeDelete()
{
	AToggleAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(MechanismTrigger);
	DELE_PTR_FULL(LockComponent);
	DELE_PTR_FULL(ActionRulesComponent);
	DELE_PTR_FULL(InteractableComponent);
}

// Function Athena.WieldableItem.SetItemWwiseSwitch
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   SwitchGroup                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SwitchOption                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWieldableItem::SetItemWwiseSwitch(const struct FName& SwitchGroup, const struct FName& SwitchOption)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.SetItemWwiseSwitch");

	AWieldableItem_SetItemWwiseSwitch_Params params;
	params.SwitchGroup = SwitchGroup;
	params.SwitchOption = SwitchOption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItem.SetItemWwiseRTPC
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   RTPCName                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWieldableItem::SetItemWwiseRTPC(struct FName* RTPCName, float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.SetItemWwiseRTPC");

	AWieldableItem_SetItemWwiseRTPC_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (RTPCName != nullptr)
		*RTPCName = params.RTPCName;

}


// Function Athena.WieldableItem.PostItemWwiseEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseEvent*             Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWieldableItem::PostItemWwiseEvent(class UWwiseEvent* Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.PostItemWwiseEvent");

	AWieldableItem_PostItemWwiseEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItem.OnWielderHasLandedFromJumpBPImpl
// (Event, Public, BlueprintEvent)
void AWieldableItem::OnWielderHasLandedFromJumpBPImpl()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.OnWielderHasLandedFromJumpBPImpl");

	AWieldableItem_OnWielderHasLandedFromJumpBPImpl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItem.OnRep_ItemInfo
// (Native, Protected)
void AWieldableItem::OnRep_ItemInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.OnRep_ItemInfo");

	AWieldableItem_OnRep_ItemInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItem.IsUnderwater
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AWieldableItem::IsUnderwater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.IsUnderwater");

	AWieldableItem_IsUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetWielder
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AWieldableItem::GetWielder()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.GetWielder");

	AWieldableItem_GetWielder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetWieldedItemAnimationOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform AWieldableItem::GetWieldedItemAnimationOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.GetWieldedItemAnimationOffset");

	AWieldableItem_GetWieldedItemAnimationOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetWieldableItemSize
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EWieldableItemSize> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldableItemSize> AWieldableItem::GetWieldableItemSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.GetWieldableItemSize");

	AWieldableItem_GetWieldableItemSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetLastKnownWielder
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AWieldableItem::GetLastKnownWielder()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.GetLastKnownWielder");

	AWieldableItem_GetLastKnownWielder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetIsFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AWieldableItem::GetIsFirstPerson()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItem.GetIsFirstPerson");

	AWieldableItem_GetIsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AWieldableItem::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(FirstPersonMesh, UPrimitiveComponent);
	READ_PTR_FULL(ThirdPersonMesh, UPrimitiveComponent);
	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(AnimationKey, UClass);
	READ_PTR_FULL(EquipSfx, UWwiseEvent);
	READ_PTR_FULL(UnequipSfx, UWwiseEvent);
	READ_PTR_FULL(WielderLandedJumpSfx, UWwiseEvent);
	READ_PTR_FULL(WielderFootstepLayerOneshot, UWwiseEvent);
	READ_PTR_FULL(FirstTimeEquipSfx, UWwiseEvent);
	READ_PTR_FULL(StashedMeshComponent, UMeshComponent);
	READ_PTR_FULL(Phrases, UPhrasesRadialDataAsset);
	READ_PTR_FULL(CachedFirstPersonProxyMesh, UObject);
	READ_PTR_FULL(CachedThirdPersonProxyMesh, UObject);
	READ_PTR_FULL(ItemCategory, UClass);
	READ_PTR_FULL(ItemInfo, AItemInfo);
	READ_PTR_FULL(InterpolatingItem, AInterpolatingItem);
	READ_PTR_FULL(WieldableItemVfxComponent, UWieldableItemVfxComponent);
}

void AWieldableItem::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(FirstPersonMesh);
	DELE_PTR_FULL(ThirdPersonMesh);
	DELE_PTR_FULL(ActionRulesComponent);
	DELE_PTR_FULL(AnimationKey);
	DELE_PTR_FULL(EquipSfx);
	DELE_PTR_FULL(UnequipSfx);
	DELE_PTR_FULL(WielderLandedJumpSfx);
	DELE_PTR_FULL(WielderFootstepLayerOneshot);
	DELE_PTR_FULL(FirstTimeEquipSfx);
	DELE_PTR_FULL(StashedMeshComponent);
	DELE_PTR_FULL(Phrases);
	DELE_PTR_FULL(CachedFirstPersonProxyMesh);
	DELE_PTR_FULL(CachedThirdPersonProxyMesh);
	DELE_PTR_FULL(ItemCategory);
	DELE_PTR_FULL(ItemInfo);
	DELE_PTR_FULL(InterpolatingItem);
	DELE_PTR_FULL(WieldableItemVfxComponent);
}

void ASkeletalMeshWieldableItem::AfterRead()
{
	AWieldableItem::AfterRead();

}

void ASkeletalMeshWieldableItem::BeforeDelete()
{
	AWieldableItem::BeforeDelete();

}

void APocketWatch::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
	READ_PTR_FULL(AudioEmitter, UWwiseEmitterComponent);
	READ_PTR_FULL(FirstPersonMeshDynamicMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(ThirdPersonMeshDynamicMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(DateSwitchSFX, UWwiseEvent);
	READ_PTR_FULL(MinuteHandTickSFX, UWwiseEvent);
	READ_PTR_FULL(FirstPersonMeshAnimator, UPocketWatchAnimationInstance);
	READ_PTR_FULL(ThirdPersonMeshAnimator, UPocketWatchAnimationInstance);
	READ_PTR_FULL(CurrentMeshAnimator, UPocketWatchAnimationInstance);
}

void APocketWatch::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
	DELE_PTR_FULL(AudioEmitter);
	DELE_PTR_FULL(FirstPersonMeshDynamicMaterialInstance);
	DELE_PTR_FULL(ThirdPersonMeshDynamicMaterialInstance);
	DELE_PTR_FULL(DateSwitchSFX);
	DELE_PTR_FULL(MinuteHandTickSFX);
	DELE_PTR_FULL(FirstPersonMeshAnimator);
	DELE_PTR_FULL(ThirdPersonMeshAnimator);
	DELE_PTR_FULL(CurrentMeshAnimator);
}

// Function Athena.WieldableItemAnimationInstance.OnUseStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UWieldableItemAnimationInstance::OnUseStopped(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInstance.OnUseStopped");

	UWieldableItemAnimationInstance_OnUseStopped_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInstance.OnUseStarted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FWieldableItemActionVisuals ActionVisuals                  (ConstParm, Parm, OutParm, ReferenceParm)
void UWieldableItemAnimationInstance::OnUseStarted(class UClass* InputID, const struct FWieldableItemActionVisuals& ActionVisuals)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInstance.OnUseStarted");

	UWieldableItemAnimationInstance_OnUseStarted_Params params;
	params.InputID = InputID;
	params.ActionVisuals = ActionVisuals;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInstance.OnOneShotUseTriggered
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FWieldableItemActionVisuals ActionVisuals                  (ConstParm, Parm, OutParm, ReferenceParm)
void UWieldableItemAnimationInstance::OnOneShotUseTriggered(class UClass* InputID, const struct FWieldableItemActionVisuals& ActionVisuals)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInstance.OnOneShotUseTriggered");

	UWieldableItemAnimationInstance_OnOneShotUseTriggered_Params params;
	params.InputID = InputID;
	params.ActionVisuals = ActionVisuals;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWieldableItemAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(EquipItemAnimationSequence, UAnimSequenceBase);
	READ_PTR_FULL(UnequipItemAnimationSequence, UAnimSequenceBase);
	READ_PTR_FULL(CurrentMontage, UAnimMontage);
}

void UWieldableItemAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(EquipItemAnimationSequence);
	DELE_PTR_FULL(UnequipItemAnimationSequence);
	DELE_PTR_FULL(CurrentMontage);
}

void UPocketWatchAnimationInstance::AfterRead()
{
	UWieldableItemAnimationInstance::AfterRead();

}

void UPocketWatchAnimationInstance::BeforeDelete()
{
	UWieldableItemAnimationInstance::BeforeDelete();

}

// Function Athena.PopUpNotificationComponent.OnRep_EmissaryProgressUpdated
// (Final, Native, Protected)
void UPopUpNotificationComponent::OnRep_EmissaryProgressUpdated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PopUpNotificationComponent.OnRep_EmissaryProgressUpdated");

	UPopUpNotificationComponent_OnRep_EmissaryProgressUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPopUpNotificationComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PeriodicObjectiveCompletePopUp, UPopUpMessageDesc);
	READ_PTR_FULL(PeriodicObjectiveIncompletePopUp, UPopUpMessageDesc);
	READ_PTR_FULL(NPCOnBeachFlowPopUpNoTaleCheckpointVoyage, UPopUpMessageDesc);
	READ_PTR_FULL(NPCOnBeachFlowPopUpHasTaleCheckpointVoyage, UPopUpMessageDesc);
	READ_PTR_FULL(CrewNotificationDataAsset, UCrewNotificationSettings);
	READ_PTR_FULL(NewTitlesAvailableToBuyPopUp, UPopUpMessageDesc);
	READ_PTR_FULL(PrioritisedPrompts, UPrioritisedPromptsManager);
	READ_PTR_FULL(EmissaryLevelSettings, UEmissaryLevelSettingsAsset);
}

void UPopUpNotificationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PeriodicObjectiveCompletePopUp);
	DELE_PTR_FULL(PeriodicObjectiveIncompletePopUp);
	DELE_PTR_FULL(NPCOnBeachFlowPopUpNoTaleCheckpointVoyage);
	DELE_PTR_FULL(NPCOnBeachFlowPopUpHasTaleCheckpointVoyage);
	DELE_PTR_FULL(CrewNotificationDataAsset);
	DELE_PTR_FULL(NewTitlesAvailableToBuyPopUp);
	DELE_PTR_FULL(PrioritisedPrompts);
	DELE_PTR_FULL(EmissaryLevelSettings);
}

// Function Athena.PosablePirate.OnSignalSpawnIn
// (Event, Protected, BlueprintEvent)
void APosablePirate::OnSignalSpawnIn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.OnSignalSpawnIn");

	APosablePirate_OnSignalSpawnIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PosablePirate.OnEndGeneratingPirate
// (Event, Protected, BlueprintEvent)
void APosablePirate::OnEndGeneratingPirate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.OnEndGeneratingPirate");

	APosablePirate_OnEndGeneratingPirate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PosablePirate.OnBeginGeneratingPirate
// (Event, Protected, BlueprintEvent)
void APosablePirate::OnBeginGeneratingPirate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.OnBeginGeneratingPirate");

	APosablePirate_OnBeginGeneratingPirate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PosablePirate.IsPirateLoaded
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool APosablePirate::IsPirateLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.IsPirateLoaded");

	APosablePirate_IsPirateLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PosablePirate.GetCurrentOutfit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> APosablePirate::GetCurrentOutfit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.GetCurrentOutfit");

	APosablePirate_GetCurrentOutfit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PosablePirate.GetCurrentDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPirateDescription      ReturnValue                    (Parm, OutParm, ReturnParm)
struct FPirateDescription APosablePirate::GetCurrentDescription()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.GetCurrentDescription");

	APosablePirate_GetCurrentDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PosablePirate.BeginGeneratingPirate
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPirateDescription      Desc                           (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>          Outfit                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper)
void APosablePirate::BeginGeneratingPirate(const struct FPirateDescription& Desc, TArray<class UClass*> Outfit)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PosablePirate.BeginGeneratingPirate");

	APosablePirate_BeginGeneratingPirate_Params params;
	params.Desc = Desc;
	params.Outfit = Outfit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APosablePirate::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(PirateMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(GeneratorServiceActor, APirateGeneratorService);
}

void APosablePirate::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(PirateMeshComponent);
	DELE_PTR_FULL(GeneratorServiceActor);
}

void UViewModelComponentBase::AfterRead()
{
	UActorComponent::AfterRead();

}

void UViewModelComponentBase::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPremiumShopSettings::AfterRead()
{
	UObject::AfterRead();

}

void UPremiumShopSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UPremiumShopViewModelComponentBase::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PetShopDataAsset, UPetShopDataAsset);
}

void UPremiumShopViewModelComponentBase::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PetShopDataAsset);
}

void UFrontendPremiumShopViewModelComponent::AfterRead()
{
	UPremiumShopViewModelComponentBase::AfterRead();

}

void UFrontendPremiumShopViewModelComponent::BeforeDelete()
{
	UPremiumShopViewModelComponentBase::BeforeDelete();

}

void UInGamePremiumShopViewModelComponent::AfterRead()
{
	UPremiumShopViewModelComponentBase::AfterRead();

}

void UInGamePremiumShopViewModelComponent::BeforeDelete()
{
	UPremiumShopViewModelComponentBase::BeforeDelete();

}

void UPreSpawnMusicZoneSpawnerStrategy::AfterRead()
{
	USpawnerBehaviourStrategy::AfterRead();

	READ_PTR_FULL(PreSpawnMusicZoneActor, UClass);
	READ_PTR_FULL(PostSpawnMusicZoneActor, UClass);
	READ_PTR_FULL(SpawnedActor, AActor);
	READ_PTR_FULL(MusicZoneComponent, UMusicZoneComponent);
}

void UPreSpawnMusicZoneSpawnerStrategy::BeforeDelete()
{
	USpawnerBehaviourStrategy::BeforeDelete();

	DELE_PTR_FULL(PreSpawnMusicZoneActor);
	DELE_PTR_FULL(PostSpawnMusicZoneActor);
	DELE_PTR_FULL(SpawnedActor);
	DELE_PTR_FULL(MusicZoneComponent);
}

// Function Athena.PrimitiveComponentTestFunctionLibrary.CheckWeldParentMatches
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     TestComponent                  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     ExpectedParentComponent        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPrimitiveComponentTestFunctionLibrary::STATIC_CheckWeldParentMatches(class UPrimitiveComponent* TestComponent, class UPrimitiveComponent* ExpectedParentComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PrimitiveComponentTestFunctionLibrary.CheckWeldParentMatches");

	UPrimitiveComponentTestFunctionLibrary_CheckWeldParentMatches_Params params;
	params.TestComponent = TestComponent;
	params.ExpectedParentComponent = ExpectedParentComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPrimitiveComponentTestFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPrimitiveComponentTestFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AShipSpawnLocation::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ShipSize, UClass);
	READ_PTR_FULL(BoxComponent, UBoxComponent);
}

void AShipSpawnLocation::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ShipSize);
	DELE_PTR_FULL(BoxComponent);
}

void AProgressShipSpawnLocation::AfterRead()
{
	AShipSpawnLocation::AfterRead();

}

void AProgressShipSpawnLocation::BeforeDelete()
{
	AShipSpawnLocation::BeforeDelete();

}

void UProjectileLauncherMechanismInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProjectileLauncherMechanismInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ProjectileLauncherMechanismAction.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActionInstigator               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AProjectileLauncherMechanismAction::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* ActionInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileLauncherMechanismAction.OnMechanismActionStateChanged");

	AProjectileLauncherMechanismAction_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.ActionInstigator = ActionInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileLauncherMechanismAction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
}

void AProjectileLauncherMechanismAction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismActionComponent);
}

void UProjectileLauncherMechanismSourceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProjectileLauncherMechanismSourceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ProjectileLauncherMechanismSourceComponent.Client_FireProjectile
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector                 ProjectileSpawnLocation        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UProjectileLauncherMechanismSourceComponent::Client_FireProjectile(const struct FVector& ProjectileSpawnLocation, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileLauncherMechanismSourceComponent.Client_FireProjectile");

	UProjectileLauncherMechanismSourceComponent_Client_FireProjectile_Params params;
	params.ProjectileSpawnLocation = ProjectileSpawnLocation;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UProjectileLauncherMechanismSourceComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(ProjectileType, UClass);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(LaunchSFX, UWwiseEvent);
	READ_PTR_FULL(LaunchVFX, UObject);
}

void UProjectileLauncherMechanismSourceComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(ProjectileType);
	DELE_PTR_FULL(SfxPool);
	DELE_PTR_FULL(LaunchSFX);
	DELE_PTR_FULL(LaunchVFX);
}

void UProjectileServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProjectileServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UReapersMarkSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ReapersMarkFlag, UClass);
}

void UReapersMarkSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ReapersMarkFlag);
}

void UReapersMarkTrackedItemComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UReapersMarkTrackedItemComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UReceiverPuzzleStatueAudioParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ReceiverChangingPosition, UWwiseEvent);
	READ_PTR_FULL(GrindingStart, UWwiseEvent);
	READ_PTR_FULL(GrindingStop, UWwiseEvent);
}

void UReceiverPuzzleStatueAudioParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ReceiverChangingPosition);
	DELE_PTR_FULL(GrindingStart);
	DELE_PTR_FULL(GrindingStop);
}

void URegenerationStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void URegenerationStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void URegistrablePartTestInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URegistrablePartTestInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URegistrablePartTestObject::AfterRead()
{
	UObject::AfterRead();

}

void URegistrablePartTestObject::BeforeDelete()
{
	UObject::BeforeDelete();

}

void URegistrablePartTestObjectWithInterface::AfterRead()
{
	UObject::AfterRead();

}

void URegistrablePartTestObjectWithInterface::BeforeDelete()
{
	UObject::BeforeDelete();

}

void URemoveCriticalActorStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, URemoveCriticalActorStepDesc);
}

void URemoveCriticalActorStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USetSpawnProgressStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USetSpawnProgressStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USetTaleProgressStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, USetTaleProgressStepDesc);
}

void USetTaleProgressStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

// Function Athena.ShipTelemetryComponent.SetShipHeartbeatInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Interval                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShipTelemetryComponent::SetShipHeartbeatInterval(float Interval)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipTelemetryComponent.SetShipHeartbeatInterval");

	UShipTelemetryComponent_SetShipHeartbeatInterval_Params params;
	params.Interval = Interval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipTelemetryComponent.GetShipIdForWebServices
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UShipTelemetryComponent::GetShipIdForWebServices()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipTelemetryComponent.GetShipIdForWebServices");

	UShipTelemetryComponent_GetShipIdForWebServices_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipTelemetryComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShipTelemetryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ShipTrackerComponent.OnShipDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  ShipActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShipTrackerComponent::OnShipDestroyed(class AActor* ShipActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipTrackerComponent.OnShipDestroyed");

	UShipTrackerComponent_OnShipDestroyed_Params params;
	params.ShipActor = ShipActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipTrackerComponent.IsPlayerAbandoned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipTrackerComponent::IsPlayerAbandoned()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipTrackerComponent.IsPlayerAbandoned");

	UShipTrackerComponent_IsPlayerAbandoned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShipTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UShipwreckNameGeneratorAbstract::AfterRead()
{
	UObject::AfterRead();

}

void UShipwreckNameGeneratorAbstract::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipwreckNameGeneratorDefault::AfterRead()
{
	UShipwreckNameGeneratorAbstract::AfterRead();

}

void UShipwreckNameGeneratorDefault::BeforeDelete()
{
	UShipwreckNameGeneratorAbstract::BeforeDelete();

}

void UShipwreckSiteGeneratorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShipwreckSiteGeneratorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UTaleRankRequirements::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTaleRankRequirements::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTaleSettings::AfterRead()
{
	UObject::AfterRead();

}

void UTaleSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTaleShroudBreakerService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UTaleShroudBreakerService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UTaleShroudBreakerServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleShroudBreakerServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UTaleVaultService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Vault, APuzzleVault);
	READ_PTR_FULL(SolutionAsset, UVaultPuzzleDataAsset);
}

void UTaleVaultService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Vault);
	DELE_PTR_FULL(SolutionAsset);
}

void UTaleVaultServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleVaultServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

// Function Athena.InteractableObject.ServerInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InInteractor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AInteractableObject::ServerInteract(class AActor* InInteractor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableObject.ServerInteract");

	AInteractableObject_ServerInteract_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InteractableObject.Blueprint_OnInteract_Server
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  InInteractor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AInteractableObject::Blueprint_OnInteract_Server(class AActor* InInteractor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableObject.Blueprint_OnInteract_Server");

	AInteractableObject_Blueprint_OnInteract_Server_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InteractableObject.Blueprint_OnInteract_Client
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  InInteractor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AInteractableObject::Blueprint_OnInteract_Client(class AActor* InInteractor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableObject.Blueprint_OnInteract_Client");

	AInteractableObject_Blueprint_OnInteract_Client_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AInteractableObject::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(FilterDesc, UOneShotInteractableFilterDesc);
}

void AInteractableObject::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(FilterDesc);
}

void AWellOfFates::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(SkeletalMesh, USkeletalMeshComponent);
	READ_PTR_FULL(StaticMesh, UStaticMeshComponent);
	READ_PTR_FULL(LanternParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(WellOfFatesParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(PointLight, UPointLightComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
}

void AWellOfFates::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(SkeletalMesh);
	DELE_PTR_FULL(StaticMesh);
	DELE_PTR_FULL(LanternParticleSystem);
	DELE_PTR_FULL(WellOfFatesParticleSystem);
	DELE_PTR_FULL(PointLight);
	DELE_PTR_FULL(InteractableComponent);
}

// Function Athena.WetnessComponent.SetWet
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 WorldSpaceWaterPos             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           FullyWet                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UWetnessComponent::SetWet(const struct FVector& WorldSpaceWaterPos, bool FullyWet)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WetnessComponent.SetWet");

	UWetnessComponent_SetWet_Params params;
	params.WorldSpaceWaterPos = WorldSpaceWaterPos;
	params.FullyWet = FullyWet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WetnessComponent.OnRep_WetData
// (Final, Native, Private)
void UWetnessComponent::OnRep_WetData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WetnessComponent.OnRep_WetData");

	UWetnessComponent_OnRep_WetData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WetnessComponent.GetWet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWetnessComponent::GetWet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WetnessComponent.GetWet");

	UWetnessComponent_GetWet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWetnessComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWetnessComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UShipPartDescAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShipPartDescAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UShipLiveryDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UShipLiveryDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void USoakableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void USoakableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void USoakedStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USoakedStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void USplashedStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USplashedStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UStatusResponseSoak::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseSoak::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UWaterBarrelInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWaterBarrelInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WaterExposureComponent.OnRep_SubmergedState
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_ESubmergedState> OriginalSubmergedState         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWaterExposureComponent::OnRep_SubmergedState(TEnumAsByte<Athena_ESubmergedState> OriginalSubmergedState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterExposureComponent.OnRep_SubmergedState");

	UWaterExposureComponent_OnRep_SubmergedState_Params params;
	params.OriginalSubmergedState = OriginalSubmergedState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterExposureComponent.OnRep_InRain
// (Final, Native, Private)
// Parameters:
// bool                           OriginalInRain                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UWaterExposureComponent::OnRep_InRain(bool OriginalInRain)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterExposureComponent.OnRep_InRain");

	UWaterExposureComponent_OnRep_InRain_Params params;
	params.OriginalInRain = OriginalInRain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaterExposureComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWaterExposureComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UAthenaInputSettings::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaInputSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAutoMoveNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UAutoMoveNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UJumpNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UJumpNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.LocomotionActionStateId.PushCharacterIntoLocomotionActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULocomotionActionStateId::STATIC_PushCharacterIntoLocomotionActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionActionStateId.PushCharacterIntoLocomotionActionState");

	ULocomotionActionStateId_PushCharacterIntoLocomotionActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULocomotionActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULocomotionActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void ULookUpAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void ULookUpAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void ULookUpRateWithFixedSensitivityAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void ULookUpRateWithFixedSensitivityAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMoveForwardAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMoveForwardAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMoveRightAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMoveRightAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMoveUpAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMoveUpAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void USprintActivationNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void USprintActivationNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UStackableLocomotionActionStateInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStackableLocomotionActionStateInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UToggleSingleStickToCameraControlPressedInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UToggleSingleStickToCameraControlPressedInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UToggleSingleStickToCameraControlReleasedInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UToggleSingleStickToCameraControlReleasedInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UTurnAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UTurnAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UTurnRateWithFixedSensitivityAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UTurnRateWithFixedSensitivityAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UWalkActivationNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UWalkActivationNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UNonVerbalRadialDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNonVerbalRadialDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UStorageContainerContentSpawner::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStorageContainerContentSpawner::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UApplyStatusToConsumerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UApplyStatusToConsumerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UAthenaItemsSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UAthenaItemsSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UQuickCycleToBucketNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToBucketNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToCompassNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToCompassNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToPocketWatchNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToPocketWatchNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToSpeakingTrumpetNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToSpeakingTrumpetNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToInstrumentNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToInstrumentNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToLanternNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToLanternNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToTankardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToTankardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToFishingRodNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToFishingRodNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToFoodNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToFoodNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToThrowablesNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToThrowablesNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToCannonballNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToCannonballNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToWoodPlankNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToWoodPlankNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToSpyglassNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToSpyglassNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickCycleToShovelNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickCycleToShovelNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UCategoryBase::AfterRead()
{
	UObject::AfterRead();

}

void UCategoryBase::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UItemCategory::AfterRead()
{
	UCategoryBase::AfterRead();

	READ_PTR_FULL(NotificationInputId, UClass);
}

void UItemCategory::BeforeDelete()
{
	UCategoryBase::BeforeDelete();

	DELE_PTR_FULL(NotificationInputId);
}

void UWeaponItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UWeaponItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void USwordItemCategory::AfterRead()
{
	UWeaponItemCategory::AfterRead();

}

void USwordItemCategory::BeforeDelete()
{
	UWeaponItemCategory::BeforeDelete();

}

void UBlunderbussItemCategory::AfterRead()
{
	UWeaponItemCategory::AfterRead();

}

void UBlunderbussItemCategory::BeforeDelete()
{
	UWeaponItemCategory::BeforeDelete();

}

void UEyeOfReachItemCategory::AfterRead()
{
	UWeaponItemCategory::AfterRead();

}

void UEyeOfReachItemCategory::BeforeDelete()
{
	UWeaponItemCategory::BeforeDelete();

}

void UFlintlockItemCategory::AfterRead()
{
	UWeaponItemCategory::AfterRead();

}

void UFlintlockItemCategory::BeforeDelete()
{
	UWeaponItemCategory::BeforeDelete();

}

void UUnarmedCombatItemCategory::AfterRead()
{
	UWeaponItemCategory::AfterRead();

}

void UUnarmedCombatItemCategory::BeforeDelete()
{
	UWeaponItemCategory::BeforeDelete();

}

void USirenTridentItemCategory::AfterRead()
{
	UWeaponItemCategory::AfterRead();

}

void USirenTridentItemCategory::BeforeDelete()
{
	UWeaponItemCategory::BeforeDelete();

}

void UInstrumentItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UInstrumentItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UConcertinaItemCategory::AfterRead()
{
	UInstrumentItemCategory::AfterRead();

}

void UConcertinaItemCategory::BeforeDelete()
{
	UInstrumentItemCategory::BeforeDelete();

}

void UDrumItemCategory::AfterRead()
{
	UInstrumentItemCategory::AfterRead();

}

void UDrumItemCategory::BeforeDelete()
{
	UInstrumentItemCategory::BeforeDelete();

}

void UHurdyGurdyItemCategory::AfterRead()
{
	UInstrumentItemCategory::AfterRead();

}

void UHurdyGurdyItemCategory::BeforeDelete()
{
	UInstrumentItemCategory::BeforeDelete();

}

void UEquipmentItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UEquipmentItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UBucketItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void UBucketItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void UCompassItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void UCompassItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void ULanternItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void ULanternItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void UPocketWatchItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void UPocketWatchItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void USpeakingTrumpetItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void USpeakingTrumpetItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void UShovelItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void UShovelItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void USpyglassItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void USpyglassItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void UTankardItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void UTankardItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void UFishingRodItemCategory::AfterRead()
{
	UEquipmentItemCategory::AfterRead();

}

void UFishingRodItemCategory::BeforeDelete()
{
	UEquipmentItemCategory::BeforeDelete();

}

void UConsumableItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UConsumableItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UWoodPlankItemCategory::AfterRead()
{
	UConsumableItemCategory::AfterRead();

}

void UWoodPlankItemCategory::BeforeDelete()
{
	UConsumableItemCategory::BeforeDelete();

}

void UCannonballItemCategory::AfterRead()
{
	UConsumableItemCategory::AfterRead();

}

void UCannonballItemCategory::BeforeDelete()
{
	UConsumableItemCategory::BeforeDelete();

}

void UBaseFoodItemCategory::AfterRead()
{
	UConsumableItemCategory::AfterRead();

}

void UBaseFoodItemCategory::BeforeDelete()
{
	UConsumableItemCategory::BeforeDelete();

}

void UDefaultItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UDefaultItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UBootyCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UBootyCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UMysteriousNoteCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UMysteriousNoteCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UQuestItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UQuestItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UEntitlementDesc::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Category, UClass);
	READ_PTR_FULL(Company, UClass);
}

void UEntitlementDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Category);
	DELE_PTR_FULL(Company);
}

void UItemDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UItemDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UItemWithoutIconsDesc::AfterRead()
{
	UItemDesc::AfterRead();

}

void UItemWithoutIconsDesc::BeforeDelete()
{
	UItemDesc::BeforeDelete();

}

void UBootyItemDesc::AfterRead()
{
	UItemWithoutIconsDesc::AfterRead();

}

void UBootyItemDesc::BeforeDelete()
{
	UItemWithoutIconsDesc::BeforeDelete();

}

void UCargoRunItemDesc::AfterRead()
{
	UBootyItemDesc::AfterRead();

}

void UCargoRunItemDesc::BeforeDelete()
{
	UBootyItemDesc::BeforeDelete();

}

// Function Athena.ItemInfo.SwitchNetworkClusterToLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULevel*                  Level                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AItemInfo::SwitchNetworkClusterToLevel(class ULevel* Level)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.SwitchNetworkClusterToLevel");

	AItemInfo_SwitchNetworkClusterToLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemInfo.SwitchNetworkClusterToGlobal
// (Final, Native, Public, BlueprintCallable)
void AItemInfo::SwitchNetworkClusterToGlobal()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.SwitchNetworkClusterToGlobal");

	AItemInfo_SwitchNetworkClusterToGlobal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemInfo.SwitchNetworkClusterToActorOrItsLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewOwner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AItemInfo::SwitchNetworkClusterToActorOrItsLevel(class AActor* NewOwner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.SwitchNetworkClusterToActorOrItsLevel");

	AItemInfo_SwitchNetworkClusterToActorOrItsLevel_Params params;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemInfo.SwitchNetworkClusterTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewOwner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AItemInfo::SwitchNetworkClusterTo(class AActor* NewOwner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.SwitchNetworkClusterTo");

	AItemInfo_SwitchNetworkClusterTo_Params params;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemInfo.OnRep_CurrentRepresentationInstance
// (Native, Protected)
void AItemInfo::OnRep_CurrentRepresentationInstance()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.OnRep_CurrentRepresentationInstance");

	AItemInfo_OnRep_CurrentRepresentationInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemInfo.GetItemType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* AItemInfo::GetItemType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.GetItemType");

	AItemInfo_GetItemType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetItemCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* AItemInfo::GetItemCategory()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.GetItemCategory");

	AItemInfo_GetItemCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AItemInfo::GetItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.GetItem");

	AItemInfo_GetItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetAsWieldable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWieldableItem*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AWieldableItem* AItemInfo::GetAsWieldable()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.GetAsWieldable");

	AItemInfo_GetAsWieldable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemInfo.CreateWieldableItem
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  InNewOwner                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class AWieldableItem*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AWieldableItem* AItemInfo::CreateWieldableItem(class AActor* InNewOwner, const struct FTransform& InTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.CreateWieldableItem");

	AItemInfo_CreateWieldableItem_Params params;
	params.InNewOwner = InNewOwner;
	params.InTransform = InTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemInfo.CreateProxyItem
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EItemLifetimeManagement> LifetimeManagement             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AItemInfo::CreateProxyItem(const struct FTransform& InTransform, TEnumAsByte<Athena_EItemLifetimeManagement> LifetimeManagement)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInfo.CreateProxyItem");

	AItemInfo_CreateProxyItem_Params params;
	params.InTransform = InTransform;
	params.LifetimeManagement = LifetimeManagement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AItemInfo::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(WieldableType, UClass);
	READ_PTR_FULL(ProxyType, UClass);
	READ_PTR_FULL(ProjectileType, UClass);
	READ_PTR_FULL(LoadedItemParticleTemplate, UParticleSystem);
	READ_PTR_FULL(WieldableItemPersistenceCooldownComponent, UWieldableItemPersistentCooldownComponent);
	READ_PTR_FULL(Desc, UItemDesc);
	READ_PTR_FULL(CurrentRepresentationInstance, AActor);
	READ_PTR_FULL(CurrentOwner, AActor);
	READ_PTR_FULL(TutorialOwner, AActor);
}

void AItemInfo::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(WieldableType);
	DELE_PTR_FULL(ProxyType);
	DELE_PTR_FULL(ProjectileType);
	DELE_PTR_FULL(LoadedItemParticleTemplate);
	DELE_PTR_FULL(WieldableItemPersistenceCooldownComponent);
	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(CurrentRepresentationInstance);
	DELE_PTR_FULL(CurrentOwner);
	DELE_PTR_FULL(TutorialOwner);
}

void ANonStorableItemInfo::AfterRead()
{
	AItemInfo::AfterRead();

}

void ANonStorableItemInfo::BeforeDelete()
{
	AItemInfo::BeforeDelete();

}

void ABootyItemInfo::AfterRead()
{
	ANonStorableItemInfo::AfterRead();

	READ_PTR_FULL(DiscoveredPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TrackedOwnerComponent, UTrackedOwnerComponent);
	READ_PTR_FULL(ItemQualityComponent, UItemQualityComponent);
	READ_PTR_FULL(DeliverableComponent, UDeliverableComponent);
	READ_PTR_FULL(CrewOwnershipTrackingComponent, UCrewOwnershipTrackingComponent);
	READ_PTR_FULL(BootyItemShipOwnershipComponent, UBootyItemShipOwnershipComponent);
}

void ABootyItemInfo::BeforeDelete()
{
	ANonStorableItemInfo::BeforeDelete();

	DELE_PTR_FULL(DiscoveredPopupDesc);
	DELE_PTR_FULL(TrackedOwnerComponent);
	DELE_PTR_FULL(ItemQualityComponent);
	DELE_PTR_FULL(DeliverableComponent);
	DELE_PTR_FULL(CrewOwnershipTrackingComponent);
	DELE_PTR_FULL(BootyItemShipOwnershipComponent);
}

void AAlwaysCashInItemInfo::AfterRead()
{
	ABootyItemInfo::AfterRead();

}

void AAlwaysCashInItemInfo::BeforeDelete()
{
	ABootyItemInfo::BeforeDelete();

}

void ATreasureChestItemInfo::AfterRead()
{
	ABootyItemInfo::AfterRead();

}

void ATreasureChestItemInfo::BeforeDelete()
{
	ABootyItemInfo::BeforeDelete();

}

void AWeepingChestItemInfo::AfterRead()
{
	ATreasureChestItemInfo::AfterRead();

}

void AWeepingChestItemInfo::BeforeDelete()
{
	ATreasureChestItemInfo::BeforeDelete();

}

// Function Athena.BootyItemShipOwnershipComponent.OnItemProxyDestroyed
// (Final, Native, Private)
void UBootyItemShipOwnershipComponent::OnItemProxyDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BootyItemShipOwnershipComponent.OnItemProxyDestroyed");

	UBootyItemShipOwnershipComponent_OnItemProxyDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBootyItemShipOwnershipComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UBootyItemShipOwnershipComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void APoseableMeshWieldableItem::AfterRead()
{
	AWieldableItem::AfterRead();

}

void APoseableMeshWieldableItem::BeforeDelete()
{
	AWieldableItem::BeforeDelete();

}

void ACompass::AfterRead()
{
	APoseableMeshWieldableItem::AfterRead();

	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
	READ_PTR_FULL(SpinComponent, UCompassSpinComponent);
	READ_PTR_FULL(NarratedCompassDirectionComponent, UNarratedCompassDirectionComponent);
	READ_PTR_FULL(MeshToUse, UPoseableMeshComponent);
}

void ACompass::BeforeDelete()
{
	APoseableMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
	DELE_PTR_FULL(SpinComponent);
	DELE_PTR_FULL(NarratedCompassDirectionComponent);
	DELE_PTR_FULL(MeshToUse);
}

void UConditionalStatsTriggerType::AfterRead()
{
	UObject::AfterRead();

}

void UConditionalStatsTriggerType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UEatItemConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UEatItemConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UItemProxyShipTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemProxyShipTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ItemProxyShipTrackerComponent.OnRep_CurrentShip
// (Final, Native, Private)
// Parameters:
// class AActor*                  PrevShip                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UItemProxyShipTrackerComponent::OnRep_CurrentShip(class AActor* PrevShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxyShipTrackerComponent.OnRep_CurrentShip");

	UItemProxyShipTrackerComponent_OnRep_CurrentShip_Params params;
	params.PrevShip = PrevShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemProxyShipTrackerComponent.OnCurrentShipDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedShip                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UItemProxyShipTrackerComponent::OnCurrentShipDestroyed(class AActor* DestroyedShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxyShipTrackerComponent.OnCurrentShipDestroyed");

	UItemProxyShipTrackerComponent_OnCurrentShipDestroyed_Params params;
	params.DestroyedShip = DestroyedShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UItemProxyShipTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ShipTrackingData, UItemProxyShipTrackerComponentDataAsset);
	READ_PTR_FULL(CurrentShip, AActor);
}

void UItemProxyShipTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ShipTrackingData);
	DELE_PTR_FULL(CurrentShip);
}

void APickupableObject::AfterRead()
{
	AInteractableBase::AfterRead();

}

void APickupableObject::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

}

// Function Athena.ItemProxy.SetActorItemProxyDroppedOn
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InActorItemProxyDroppedOn      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AItemProxy::SetActorItemProxyDroppedOn(class AActor* InActorItemProxyDroppedOn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxy.SetActorItemProxyDroppedOn");

	AItemProxy_SetActorItemProxyDroppedOn_Params params;
	params.InActorItemProxyDroppedOn = InActorItemProxyDroppedOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemProxy.PerformDropOnSurfaceFx
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TEnumAsByte<Engine_EPhysicalSurface> ServerSurfaceType              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           AttachVFXToItem                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 OverrideVFXPos                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  ActorToParentVfxTo             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AItemProxy::PerformDropOnSurfaceFx(TEnumAsByte<Engine_EPhysicalSurface> ServerSurfaceType, bool AttachVFXToItem, const struct FVector& OverrideVFXPos, class AActor* ActorToParentVfxTo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxy.PerformDropOnSurfaceFx");

	AItemProxy_PerformDropOnSurfaceFx_Params params;
	params.ServerSurfaceType = ServerSurfaceType;
	params.AttachVFXToItem = AttachVFXToItem;
	params.OverrideVFXPos = OverrideVFXPos;
	params.ActorToParentVfxTo = ActorToParentVfxTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemProxy.OnRep_ItemInfo
// (Final, Native, Private)
void AItemProxy::OnRep_ItemInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxy.OnRep_ItemInfo");

	AItemProxy_OnRep_ItemInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemProxy.Multicast_DropOnSurfaceRPC
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// TEnumAsByte<Engine_EPhysicalSurface> SurfaceType                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           AttachVFXToItem                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 OverrideVFXPos                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  ActorToParentVfxTo             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AItemProxy::Multicast_DropOnSurfaceRPC(TEnumAsByte<Engine_EPhysicalSurface> SurfaceType, bool AttachVFXToItem, const struct FVector& OverrideVFXPos, class AActor* ActorToParentVfxTo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxy.Multicast_DropOnSurfaceRPC");

	AItemProxy_Multicast_DropOnSurfaceRPC_Params params;
	params.SurfaceType = SurfaceType;
	params.AttachVFXToItem = AttachVFXToItem;
	params.OverrideVFXPos = OverrideVFXPos;
	params.ActorToParentVfxTo = ActorToParentVfxTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemProxy.GetItemInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* AItemProxy::GetItemInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxy.GetItemInfo");

	AItemProxy_GetItemInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemProxy.DestroyWholeItem
// (Final, Native, Public, BlueprintCallable)
void AItemProxy::DestroyWholeItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemProxy.DestroyWholeItem");

	AItemProxy_DestroyWholeItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemProxy::AfterRead()
{
	APickupableObject::AfterRead();

	READ_PTR_FULL(GroundImpactSfx, UWwiseEvent);
	READ_PTR_FULL(ThirdPersonMesh, UPrimitiveComponent);
	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
	READ_PTR_FULL(BuoyancyComponent, UBuoyancyComponent);
	READ_PTR_FULL(ItemInfo, AItemInfo);
}

void AItemProxy::BeforeDelete()
{
	APickupableObject::BeforeDelete();

	DELE_PTR_FULL(GroundImpactSfx);
	DELE_PTR_FULL(ThirdPersonMesh);
	DELE_PTR_FULL(WaterInteractionComponent);
	DELE_PTR_FULL(BuoyancyComponent);
	DELE_PTR_FULL(ItemInfo);
}

// Function Athena.FloatingItemProxy.OnRep_PhysicsState
// (Final, Native, Protected)
void AFloatingItemProxy::OnRep_PhysicsState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FloatingItemProxy.OnRep_PhysicsState");

	AFloatingItemProxy_OnRep_PhysicsState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFloatingItemProxy::AfterRead()
{
	AItemProxy::AfterRead();

	READ_PTR_FULL(BaseComponent, UBoxComponent);
	READ_PTR_FULL(TutorialOwner, AActor);
}

void AFloatingItemProxy::BeforeDelete()
{
	AItemProxy::BeforeDelete();

	DELE_PTR_FULL(BaseComponent);
	DELE_PTR_FULL(TutorialOwner);
}

void ABootyProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

	READ_PTR_FULL(RetractableComponent, URetractableComponent);
	READ_PTR_FULL(ItemProxyShipTrackerComponent, UItemProxyShipTrackerComponent);
}

void ABootyProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

	DELE_PTR_FULL(RetractableComponent);
	DELE_PTR_FULL(ItemProxyShipTrackerComponent);
}

void ABaseSimpleBootyItemProxy::AfterRead()
{
	ABootyProxy::AfterRead();

}

void ABaseSimpleBootyItemProxy::BeforeDelete()
{
	ABootyProxy::BeforeDelete();

}

void AStaticSimpleBootyItemProxy::AfterRead()
{
	ABaseSimpleBootyItemProxy::AfterRead();

}

void AStaticSimpleBootyItemProxy::BeforeDelete()
{
	ABaseSimpleBootyItemProxy::BeforeDelete();

}

void ARewardableItemInfo::AfterRead()
{
	AItemInfo::AfterRead();

	READ_PTR_FULL(PopUpMessageDesc, UPopUpMessageDesc);
	READ_PTR_FULL(PopUpAudioOverrides, UPopUpAudioDesc);
}

void ARewardableItemInfo::BeforeDelete()
{
	AItemInfo::BeforeDelete();

	DELE_PTR_FULL(PopUpMessageDesc);
	DELE_PTR_FULL(PopUpAudioOverrides);
}

void ANonStorableRewardableItemInfo::AfterRead()
{
	ARewardableItemInfo::AfterRead();

}

void ANonStorableRewardableItemInfo::BeforeDelete()
{
	ARewardableItemInfo::BeforeDelete();

}

void AStaticMeshWieldableItem::AfterRead()
{
	AWieldableItem::AfterRead();

}

void AStaticMeshWieldableItem::BeforeDelete()
{
	AWieldableItem::BeforeDelete();

}

void ALargeStaticMeshWieldableItem::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

}

void ALargeStaticMeshWieldableItem::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

}

void AStaticSimpleBootyWieldableItem::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

}

void AStaticSimpleBootyWieldableItem::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

}

// Function Athena.PortalBlueprintFunctions.SpawnPortalForPlayersCrew
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UPortalDesc*             PortalDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                   Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UPortalBlueprintFunctions::STATIC_SpawnPortalForPlayersCrew(class UPortalDesc* PortalDesc, class APawn* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PortalBlueprintFunctions.SpawnPortalForPlayersCrew");

	UPortalBlueprintFunctions_SpawnPortalForPlayersCrew_Params params;
	params.PortalDesc = PortalDesc;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PortalBlueprintFunctions.SpawnPortalAtSpecificLocationForPlayersCrew
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UPortalDesc*             PortalDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APortalLocatorActor*     PortalLocator                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                   Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UPortalBlueprintFunctions::STATIC_SpawnPortalAtSpecificLocationForPlayersCrew(class UPortalDesc* PortalDesc, class APortalLocatorActor* PortalLocator, class APawn* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PortalBlueprintFunctions.SpawnPortalAtSpecificLocationForPlayersCrew");

	UPortalBlueprintFunctions_SpawnPortalAtSpecificLocationForPlayersCrew_Params params;
	params.PortalDesc = PortalDesc;
	params.PortalLocator = PortalLocator;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPortalBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPortalBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UPortalDesc::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TunnelDesc, UTunnelDesc);
}

void UPortalDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TunnelDesc);
}

void UPortalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPortalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SequencerCutSceneActor.SetSequenceToPlay
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FStringAssetReference   LevelSequenceToPlay            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void ASequencerCutSceneActor::SetSequenceToPlay(const struct FStringAssetReference& LevelSequenceToPlay)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequencerCutSceneActor.SetSequenceToPlay");

	ASequencerCutSceneActor_SetSequenceToPlay_Params params;
	params.LevelSequenceToPlay = LevelSequenceToPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SequencerCutSceneActor.PlaySequenceCutsceneActor
// (Final, Native, Public, BlueprintCallable)
void ASequencerCutSceneActor::PlaySequenceCutsceneActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequencerCutSceneActor.PlaySequenceCutsceneActor");

	ASequencerCutSceneActor_PlaySequenceCutsceneActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SequencerCutSceneActor.OnRep_CutScenePlayData
// (Final, Native, Private)
void ASequencerCutSceneActor::OnRep_CutScenePlayData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequencerCutSceneActor.OnRep_CutScenePlayData");

	ASequencerCutSceneActor_OnRep_CutScenePlayData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SequencerCutSceneActor.OnRep_CutSceneDataSet
// (Final, Native, Private)
void ASequencerCutSceneActor::OnRep_CutSceneDataSet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequencerCutSceneActor.OnRep_CutSceneDataSet");

	ASequencerCutSceneActor_OnRep_CutSceneDataSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASequencerCutSceneActor::AfterRead()
{
	ALevelSequenceActor::AfterRead();

	READ_PTR_FULL(CutsceneSubtitleComponent, UCutSceneSubtitlesComponent);
	READ_PTR_FULL(InteractingPlayerPawn, APawn);
	READ_PTR_FULL(LevelSequenceToPlay, ULevelSequence);
}

void ASequencerCutSceneActor::BeforeDelete()
{
	ALevelSequenceActor::BeforeDelete();

	DELE_PTR_FULL(CutsceneSubtitleComponent);
	DELE_PTR_FULL(InteractingPlayerPawn);
	DELE_PTR_FULL(LevelSequenceToPlay);
}

void APortalSignalCutSceneActor::AfterRead()
{
	ASequencerCutSceneActor::AfterRead();

}

void APortalSignalCutSceneActor::BeforeDelete()
{
	ASequencerCutSceneActor::BeforeDelete();

}

void APortalSignalCutSceneAnchor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
}

void APortalSignalCutSceneAnchor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
}

void UPortalServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPortalServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TunnelOfTheDamnedPortal.Multicast_PlayPortalEntrySFX
// (Net, Native, Event, NetMulticast, Public)
void ATunnelOfTheDamnedPortal::Multicast_PlayPortalEntrySFX()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamnedPortal.Multicast_PlayPortalEntrySFX");

	ATunnelOfTheDamnedPortal_Multicast_PlayPortalEntrySFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamnedPortal.DeactivateSignal
// (Final, Native, Public, BlueprintCallable)
void ATunnelOfTheDamnedPortal::DeactivateSignal()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamnedPortal.DeactivateSignal");

	ATunnelOfTheDamnedPortal_DeactivateSignal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamnedPortal.ActivateSignal
// (Final, Native, Public, BlueprintCallable)
void ATunnelOfTheDamnedPortal::ActivateSignal()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamnedPortal.ActivateSignal");

	ATunnelOfTheDamnedPortal_ActivateSignal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATunnelOfTheDamnedPortal::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(TriggerVolume, UBoxComponent);
	READ_PTR_FULL(ProximityTriggerVolume, USphereComponent);
	READ_PTR_FULL(AudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(StartPortalAmbianceEvent, UWwiseEvent);
	READ_PTR_FULL(StopPortalAmbianceEvent, UWwiseEvent);
	READ_PTR_FULL(PortalEntryEvent, UWwiseEvent);
	READ_PTR_FULL(Desc, UPortalDesc);
	READ_PTR_FULL(PortalSignalCutSceneActor, APortalSignalCutSceneActor);
	READ_PTR_FULL(PortalSignalCutSceneAnchorActor, AActor);
}

void ATunnelOfTheDamnedPortal::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(TriggerVolume);
	DELE_PTR_FULL(ProximityTriggerVolume);
	DELE_PTR_FULL(AudioPool);
	DELE_PTR_FULL(StartPortalAmbianceEvent);
	DELE_PTR_FULL(StopPortalAmbianceEvent);
	DELE_PTR_FULL(PortalEntryEvent);
	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(PortalSignalCutSceneActor);
	DELE_PTR_FULL(PortalSignalCutSceneAnchorActor);
}

void APortalLocatorActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(ContendedResourceComponent, UContendedResourceComponent);
	READ_PTR_FULL(ActivePortalClass, UClass);
}

void APortalLocatorActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(ContendedResourceComponent);
	DELE_PTR_FULL(ActivePortalClass);
}

void UPortalServiceParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPortalServiceParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.ShadowAIFormComponent.OnRep_FlameSpecificPhobia
// (Final, RequiredAPI, Native, Private, HasOutParms)
// Parameters:
// TEnumAsByte<Athena_EFlameOfFateType> PreviousType                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShadowAIFormComponent::OnRep_FlameSpecificPhobia(TEnumAsByte<Athena_EFlameOfFateType> PreviousType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShadowAIFormComponent.OnRep_FlameSpecificPhobia");

	UShadowAIFormComponent_OnRep_FlameSpecificPhobia_Params params;
	params.PreviousType = PreviousType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShadowAIFormComponent.OnRep_CurrentState
// (Final, RequiredAPI, Native, Private, HasOutParms)
// Parameters:
// TEnumAsByte<Athena_EShadowAIFormState> PreviousState                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShadowAIFormComponent::OnRep_CurrentState(TEnumAsByte<Athena_EShadowAIFormState> PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShadowAIFormComponent.OnRep_CurrentState");

	UShadowAIFormComponent_OnRep_CurrentState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShadowAIFormComponent.Multicast_ChangedToState
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// TEnumAsByte<Athena_EShadowAIFormState> InState                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShadowAIFormComponent::Multicast_ChangedToState(TEnumAsByte<Athena_EShadowAIFormState> InState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShadowAIFormComponent.Multicast_ChangedToState");

	UShadowAIFormComponent_Multicast_ChangedToState_Params params;
	params.InState = InState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShadowAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

	READ_PTR_FULL(LightStateConstantParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(DarkStateConstantParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(ToLightTransitionParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(ToDarkTransitionParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(ClientLightStatePhysMaterialOverride, UPhysicalMaterial);
	READ_PTR_FULL(ClientDarkStatePhysMaterialOverride, UPhysicalMaterial);
	READ_PTR_FULL(StartDarkStateAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopDarkStateAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(LightStateConstantParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(DarkStateConstantParticleSystemComponent, UParticleSystemComponent);
}

void UShadowAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

	DELE_PTR_FULL(LightStateConstantParticlesTemplate);
	DELE_PTR_FULL(DarkStateConstantParticlesTemplate);
	DELE_PTR_FULL(ToLightTransitionParticlesTemplate);
	DELE_PTR_FULL(ToDarkTransitionParticlesTemplate);
	DELE_PTR_FULL(ClientLightStatePhysMaterialOverride);
	DELE_PTR_FULL(ClientDarkStatePhysMaterialOverride);
	DELE_PTR_FULL(StartDarkStateAudioLoopEvent);
	DELE_PTR_FULL(StopDarkStateAudioLoopEvent);
	DELE_PTR_FULL(LightStateConstantParticleSystemComponent);
	DELE_PTR_FULL(DarkStateConstantParticleSystemComponent);
}

void UPrimaryItemUsePressedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPrimaryItemUsePressedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void USecondaryItemUsePressedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void USecondaryItemUsePressedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void AControllablePulley::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(IntentComponent, UControllableIntentComponent);
}

void AControllablePulley::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(IntentComponent);
}

// Function Athena.SailManipulator.SetMastSocketId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSocketId               InMastSocketId                 (Parm)
void ASailManipulator::SetMastSocketId(const struct FSocketId& InMastSocketId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.SetMastSocketId");

	ASailManipulator_SetMastSocketId_Params params;
	params.InMastSocketId = InMastSocketId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.SetMast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMast*                   InMast                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASailManipulator::SetMast(class AMast* InMast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.SetMast");

	ASailManipulator_SetMast_Params params;
	params.InMast = InMast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.SetLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsLocked                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ASailManipulator::SetLocked(bool IsLocked)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.SetLocked");

	ASailManipulator_SetLocked_Params params;
	params.IsLocked = IsLocked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.RotateTowardsLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 TargetLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void ASailManipulator::RotateTowardsLocation(const struct FVector& TargetLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.RotateTowardsLocation");

	ASailManipulator_RotateTowardsLocation_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.OnRep_PendingBoundMast
// (Final, Native, Private)
void ASailManipulator::OnRep_PendingBoundMast()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.OnRep_PendingBoundMast");

	ASailManipulator_OnRep_PendingBoundMast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ASailManipulator::IsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.IsLocked");

	ASailManipulator_IsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SailManipulator.HandleBoundMastEndPlay
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Engine_EEndPlayReason> EndPlayReason                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASailManipulator::HandleBoundMastEndPlay(TEnumAsByte<Engine_EEndPlayReason> EndPlayReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.HandleBoundMastEndPlay");

	ASailManipulator_HandleBoundMastEndPlay_Params params;
	params.EndPlayReason = EndPlayReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.HandleBoundMastDestroyed
// (Final, Native, Private)
void ASailManipulator::HandleBoundMastDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.HandleBoundMastDestroyed");

	ASailManipulator_HandleBoundMastDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulator.GetRopeUVOffset
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASailManipulator::GetRopeUVOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.GetRopeUVOffset");

	ASailManipulator_GetRopeUVOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SailManipulator.GetMast
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMast*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AMast* ASailManipulator::GetMast()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulator.GetMast");

	ASailManipulator_GetMast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASailManipulator::AfterRead()
{
	AControllablePulley::AfterRead();

	READ_PTR_FULL(BaseMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(TopMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(CurseIntentComponent, UFixedIntentComponent);
	READ_PTR_FULL(ManipulatorAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(AudioParams, USailManipulatorAudioParams);
	READ_PTR_FULL(MastSocketSceneComponent, USceneComponent);
	READ_PTR_FULL(BoundMast, AMast);
	READ_PTR_FULL(PendingBoundMast, AMast);
	READ_PTR_FULL(TopMeshInstanceComponent, UMobileInstancedStaticMeshComponent);
}

void ASailManipulator::BeforeDelete()
{
	AControllablePulley::BeforeDelete();

	DELE_PTR_FULL(BaseMeshComponent);
	DELE_PTR_FULL(TopMeshComponent);
	DELE_PTR_FULL(CurseIntentComponent);
	DELE_PTR_FULL(ManipulatorAudioPool);
	DELE_PTR_FULL(AudioParams);
	DELE_PTR_FULL(MastSocketSceneComponent);
	DELE_PTR_FULL(BoundMast);
	DELE_PTR_FULL(PendingBoundMast);
	DELE_PTR_FULL(TopMeshInstanceComponent);
}

void ASailHoist::AfterRead()
{
	ASailManipulator::AfterRead();

	READ_PTR_FULL(Rigging, URiggingSystemComponent);
}

void ASailHoist::BeforeDelete()
{
	ASailManipulator::BeforeDelete();

	DELE_PTR_FULL(Rigging);
}

// Function Athena.Mast.UpdateSailsLoweredBasedOnIntent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          LoweredIntent                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::UpdateSailsLoweredBasedOnIntent(float LoweredIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.UpdateSailsLoweredBasedOnIntent");

	AMast_UpdateSailsLoweredBasedOnIntent_Params params;
	params.LoweredIntent = LoweredIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.UpdateSailsBasedOnIntent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          AngleIntent                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          LoweredIntent                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::UpdateSailsBasedOnIntent(float AngleIntent, float LoweredIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.UpdateSailsBasedOnIntent");

	AMast_UpdateSailsBasedOnIntent_Params params;
	params.AngleIntent = AngleIntent;
	params.LoweredIntent = LoweredIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.UpdateSailsAngleBasedOnIntent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          AngleIntent                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::UpdateSailsAngleBasedOnIntent(float AngleIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.UpdateSailsAngleBasedOnIntent");

	AMast_UpdateSailsAngleBasedOnIntent_Params params;
	params.AngleIntent = AngleIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.UpdateHingeTransform
// (Final, Native, Public, BlueprintCallable)
void AMast::UpdateHingeTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.UpdateHingeTransform");

	AMast_UpdateHingeTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ToggleRepairPlankVisibility
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class URepairableComponent*    InRepairableComponent          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ShouldBeVisible                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMast::ToggleRepairPlankVisibility(class URepairableComponent* InRepairableComponent, bool ShouldBeVisible)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ToggleRepairPlankVisibility");

	AMast_ToggleRepairPlankVisibility_Params params;
	params.InRepairableComponent = InRepairableComponent;
	params.ShouldBeVisible = ShouldBeVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.SetMastPhysicsFromDamageState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EMastDamageState> MastDamageState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::SetMastPhysicsFromDamageState(TEnumAsByte<Athena_EMastDamageState> MastDamageState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.SetMastPhysicsFromDamageState");

	AMast_SetMastPhysicsFromDamageState_Params params;
	params.MastDamageState = MastDamageState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.SetMastFallingProportion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InProportion                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::SetMastFallingProportion(float InProportion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.SetMastFallingProportion");

	AMast_SetMastFallingProportion_Params params;
	params.InProportion = InProportion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.SetFullyRepaired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InRepairer                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::SetFullyRepaired(class AActor* InRepairer)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.SetFullyRepaired");

	AMast_SetFullyRepaired_Params params;
	params.InRepairer = InRepairer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.SetFullyDamaged
// (Final, Native, Public, BlueprintCallable)
void AMast::SetFullyDamaged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.SetFullyDamaged");

	AMast_SetFullyDamaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ReactToDamageLevelChangedThird
// (Final, Native, Private)
// Parameters:
// int                            DamageLevel                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::ReactToDamageLevelChangedThird(int DamageLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ReactToDamageLevelChangedThird");

	AMast_ReactToDamageLevelChangedThird_Params params;
	params.DamageLevel = DamageLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ReactToDamageLevelChangedSecond
// (Final, Native, Private)
// Parameters:
// int                            DamageLevel                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::ReactToDamageLevelChangedSecond(int DamageLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ReactToDamageLevelChangedSecond");

	AMast_ReactToDamageLevelChangedSecond_Params params;
	params.DamageLevel = DamageLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ReactToDamageLevelChangedFirst
// (Final, Native, Private)
// Parameters:
// int                            DamageLevel                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::ReactToDamageLevelChangedFirst(int DamageLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ReactToDamageLevelChangedFirst");

	AMast_ReactToDamageLevelChangedFirst_Params params;
	params.DamageLevel = DamageLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ReactToDamage
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void AMast::ReactToDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ReactToDamage");

	AMast_ReactToDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.OnRep_IsCursed
// (Final, Native, Private)
void AMast::OnRep_IsCursed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.OnRep_IsCursed");

	AMast_OnRep_IsCursed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.OnMastMeshSwapRequested
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UStaticMesh*             NewMeshBottom                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*             NewMeshTop                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::OnMastMeshSwapRequested(class UStaticMesh* NewMeshBottom, class UStaticMesh* NewMeshTop)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.OnMastMeshSwapRequested");

	AMast_OnMastMeshSwapRequested_Params params;
	params.NewMeshBottom = NewMeshBottom;
	params.NewMeshTop = NewMeshTop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.OnMastDescLoaded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UMastDescAsset*          MastDesc                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::OnMastDescLoaded(class UMastDescAsset* MastDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.OnMastDescLoaded");

	AMast_OnMastDescLoaded_Params params;
	params.MastDesc = MastDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.OnLoweredProportionChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          LoweredProportion              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::OnLoweredProportionChange(float LoweredProportion, float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.OnLoweredProportionChange");

	AMast_OnLoweredProportionChange_Params params;
	params.LoweredProportion = LoweredProportion;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.OnAngleChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::OnAngleChanged(float Angle, float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.OnAngleChanged");

	AMast_OnAngleChanged_Params params;
	params.Angle = Angle;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.Multicast_PlayMastDamageEffectsRPC
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// TArray<int>                    RepairableComponentIndices     (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int                            NewDamageLevel                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::Multicast_PlayMastDamageEffectsRPC(TArray<int> RepairableComponentIndices, int NewDamageLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.Multicast_PlayMastDamageEffectsRPC");

	AMast_Multicast_PlayMastDamageEffectsRPC_Params params;
	params.RepairableComponentIndices = RepairableComponentIndices;
	params.NewDamageLevel = NewDamageLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.IsMastVisuallyFractured
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AMast::IsMastVisuallyFractured()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.IsMastVisuallyFractured");

	AMast_IsMastVisuallyFractured_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.IsMastFullyDamaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AMast::IsMastFullyDamaged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.IsMastFullyDamaged");

	AMast_IsMastFullyDamaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.HingeTransformChanged
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FTransform              NewTransform                   (Parm, IsPlainOldData, NoDestructor)
void AMast::HingeTransformChanged(const struct FTransform& NewTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.HingeTransformChanged");

	AMast_HingeTransformChanged_Params params;
	params.NewTransform = NewTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.GetSailTurnRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AMast::GetSailTurnRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetSailTurnRate");

	AMast_GetSailTurnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetSails
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ASail*>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ASail*> AMast::GetSails()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetSails");

	AMast_GetSails_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetSailMovementRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AMast::GetSailMovementRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetSailMovementRate");

	AMast_GetSailMovementRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetSailLoweredProportion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AMast::GetSailLoweredProportion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetSailLoweredProportion");

	AMast_GetSailLoweredProportion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetSailAngleRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AMast::GetSailAngleRatio()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetSailAngleRatio");

	AMast_GetSailAngleRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetMaxDamageLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AMast::GetMaxDamageLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetMaxDamageLevel");

	AMast_GetMaxDamageLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetMastHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AMast::GetMastHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetMastHeight");

	AMast_GetMastHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetMastDamageState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EMastDamageState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EMastDamageState> AMast::GetMastDamageState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetMastDamageState");

	AMast_GetMastDamageState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetMastAngleBoneTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform AMast::GetMastAngleBoneTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetMastAngleBoneTransform");

	AMast_GetMastAngleBoneTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetLookAtPos
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AMast::GetLookAtPos()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetLookAtPos");

	AMast_GetLookAtPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetHingeWorldTransform
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform AMast::GetHingeWorldTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetHingeWorldTransform");

	AMast_GetHingeWorldTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetFallingImpactLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AMast::GetFallingImpactLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetFallingImpactLocation");

	AMast_GetFallingImpactLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.GetDamageLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AMast::GetDamageLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.GetDamageLevel");

	AMast_GetDamageLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mast.FinaliseSails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UChildActorComponent*> InSails                        (Parm, ZeroConstructor, ContainsInstancedReference)
void AMast::FinaliseSails(TArray<class UChildActorComponent*> InSails)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.FinaliseSails");

	AMast_FinaliseSails_Params params;
	params.InSails = InSails;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ApplyMastFallingAngle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          InAngle                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMast::ApplyMastFallingAngle(float InAngle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ApplyMastFallingAngle");

	AMast_ApplyMastFallingAngle_Params params;
	params.InAngle = InAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mast.ApplyDamage
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void AMast::ApplyDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mast.ApplyDamage");

	AMast_ApplyDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMast::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MastAudioParams, UMastAudioParams);
	READ_PTR_FULL(SceneRootComponent, USceneComponent);
	READ_PTR_FULL(AngleCombinerComponent, UIntentCombinerComponent);
	READ_PTR_FULL(SailHoistIntentCombinerComponent, UIntentCombinerComponent);
	READ_PTR_FULL(MastHoistIntentCombinerComponent, UIntentCombinerComponent);
	READ_PTR_FULL(MastMovingAttachComponent, USceneComponent);
	READ_PTR_FULL(SailAnglePivotComponent, USceneComponent);
	READ_PTR_FULL(CustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(RepairableComponentFirst, URepairableComponent);
	READ_PTR_FULL(RepairableComponentSecond, URepairableComponent);
	READ_PTR_FULL(RepairableComponentThird, URepairableComponent);
	READ_PTR_FULL(DamageableComponent, UShipDamageableComponent);
	READ_PTR_FULL(MastFlammableComponent, UMastFlammableComponent);
	READ_PTR_FULL(SailAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(AmbientSailFlapsSfx, UWwiseEvent);
	READ_PTR_FULL(AmbientSailFlapsStopSfx, UWwiseEvent);
	READ_PTR_FULL(PerfectSailInflationOneShot, UWwiseEvent);
	READ_PTR_FULL(MastIntactMesh, UStaticMesh);
	READ_PTR_FULL(MastFractureMeshBottom, UStaticMesh);
	READ_PTR_FULL(MastFractureMeshTop, UStaticMesh);
	READ_PTR_FULL(DamageParticleSystem, UParticleSystem);
	READ_PTR_FULL(Hinge, UMastHinge);
	READ_PTR_FULL(CameraShake, UClass);
	READ_PTR_FULL(TetherCustomisationComponent, UTetherCustomisationComponent);
}

void AMast::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MastAudioParams);
	DELE_PTR_FULL(SceneRootComponent);
	DELE_PTR_FULL(AngleCombinerComponent);
	DELE_PTR_FULL(SailHoistIntentCombinerComponent);
	DELE_PTR_FULL(MastHoistIntentCombinerComponent);
	DELE_PTR_FULL(MastMovingAttachComponent);
	DELE_PTR_FULL(SailAnglePivotComponent);
	DELE_PTR_FULL(CustomizationComponent);
	DELE_PTR_FULL(RepairableComponentFirst);
	DELE_PTR_FULL(RepairableComponentSecond);
	DELE_PTR_FULL(RepairableComponentThird);
	DELE_PTR_FULL(DamageableComponent);
	DELE_PTR_FULL(MastFlammableComponent);
	DELE_PTR_FULL(SailAudioPool);
	DELE_PTR_FULL(AmbientSailFlapsSfx);
	DELE_PTR_FULL(AmbientSailFlapsStopSfx);
	DELE_PTR_FULL(PerfectSailInflationOneShot);
	DELE_PTR_FULL(MastIntactMesh);
	DELE_PTR_FULL(MastFractureMeshBottom);
	DELE_PTR_FULL(MastFractureMeshTop);
	DELE_PTR_FULL(DamageParticleSystem);
	DELE_PTR_FULL(Hinge);
	DELE_PTR_FULL(CameraShake);
	DELE_PTR_FULL(TetherCustomisationComponent);
}

void ASailAngle::AfterRead()
{
	ASailManipulator::AfterRead();

	READ_PTR_FULL(Rigging, URiggingSystemComponent);
}

void ASailAngle::BeforeDelete()
{
	ASailManipulator::BeforeDelete();

	DELE_PTR_FULL(Rigging);
}

void USecondaryInteractNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void USecondaryInteractNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void USecondaryInteractReleasedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void USecondaryInteractReleasedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPrimaryInteractNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPrimaryInteractNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPrimaryInteractReleasedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPrimaryInteractReleasedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPrimaryItemUseReleasedNotificationInputId::AfterRead()
{
	UPrimaryItemUsePressedNotificationInputId::AfterRead();

}

void UPrimaryItemUseReleasedNotificationInputId::BeforeDelete()
{
	UPrimaryItemUsePressedNotificationInputId::BeforeDelete();

}

void USecondaryItemUseReleasedNotificationInputId::AfterRead()
{
	USecondaryItemUsePressedNotificationInputId::AfterRead();

}

void USecondaryItemUseReleasedNotificationInputId::BeforeDelete()
{
	USecondaryItemUsePressedNotificationInputId::BeforeDelete();

}

void UAbsorbsLiquidInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAbsorbsLiquidInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAbsorbsLiquidComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAbsorbsLiquidComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UAchievementDefinitionDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAchievementDefinitionDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.ActionRulesBlueprintFunctionLibrary.ExecuteActionRule
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InInputId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UActionRulesComponent*   InActionRulesComponent         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UActionRulesBlueprintFunctionLibrary::STATIC_ExecuteActionRule(class UClass* InInputId, class UActionRulesComponent* InActionRulesComponent, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActionRulesBlueprintFunctionLibrary.ExecuteActionRule");

	UActionRulesBlueprintFunctionLibrary_ExecuteActionRule_Params params;
	params.InInputId = InInputId;
	params.InActionRulesComponent = InActionRulesComponent;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ActionRulesBlueprintFunctionLibrary.AddTakeLockKeyActionRule
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InInputId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UActionRulesComponent*   InActionRulesComponent         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UActionRulesBlueprintFunctionLibrary::STATIC_AddTakeLockKeyActionRule(class UClass* InInputId, class UActionRulesComponent* InActionRulesComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActionRulesBlueprintFunctionLibrary.AddTakeLockKeyActionRule");

	UActionRulesBlueprintFunctionLibrary_AddTakeLockKeyActionRule_Params params;
	params.InInputId = InInputId;
	params.InActionRulesComponent = InActionRulesComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UActionRulesBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UActionRulesBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AActionRuleTestActor::AfterRead()
{
	AActor::AfterRead();

}

void AActionRuleTestActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void URadialContextBase::AfterRead()
{
	UObject::AfterRead();

}

void URadialContextBase::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UActionStateRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UActionStateRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

// Function Athena.ActorCoherentViewComponent.ReadyForBindingsEventReceived
// (Final, Native, Private)
void UActorCoherentViewComponent::ReadyForBindingsEventReceived()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorCoherentViewComponent.ReadyForBindingsEventReceived");

	UActorCoherentViewComponent_ReadyForBindingsEventReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UActorCoherentViewComponent::AfterRead()
{
	UCoherentUIGTComponent::AfterRead();

}

void UActorCoherentViewComponent::BeforeDelete()
{
	UCoherentUIGTComponent::BeforeDelete();

}

// Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ClientId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            SplitScreenIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UActorRelevancyTestFunctions::STATIC_WaitForActorToBeAckedForPlayerId(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AActor* Actor, int ClientId, int SplitScreenIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerId");

	UActorRelevancyTestFunctions_WaitForActorToBeAckedForPlayerId_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.Actor = Actor;
	params.ClientId = ClientId;
	params.SplitScreenIndex = SplitScreenIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UActorRelevancyTestFunctions::STATIC_WaitForActorToBeAckedForPlayerController(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AActor* Actor, class APlayerController* PlayerController)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerController");

	UActorRelevancyTestFunctions_WaitForActorToBeAckedForPlayerController_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.Actor = Actor;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ActorRelevancyTestFunctions.IsActorAckedForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UActorRelevancyTestFunctions::STATIC_IsActorAckedForPlayer(class APlayerController* PlayerController, class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorRelevancyTestFunctions.IsActorAckedForPlayer");

	UActorRelevancyTestFunctions_IsActorAckedForPlayer_Params params;
	params.PlayerController = PlayerController;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UActorRelevancyTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UActorRelevancyTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UAddFogBankAvoidanceAreaStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UAddFogBankAvoidanceAreaStepDesc);
}

void UAddFogBankAvoidanceAreaStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void AFogBankManager::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(FogBankManagerDataAsset, UFogBankManagerDataAsset);
}

void AFogBankManager::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(FogBankManagerDataAsset);
}

void UFogBankTaleService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UFogBankTaleServiceDesc);
}

void UFogBankTaleService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UFogBankTaleServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UFogBankTaleServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UAddFogBankAvoidanceAreaStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UAddFogBankAvoidanceAreaStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UAddMechanismTriggerStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UAddMechanismTriggerStepDesc);
}

void UAddMechanismTriggerStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UAddMechanismTriggerStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UAddMechanismTriggerStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UAddOpenContainerActionRuleComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(NotificationInputId, UClass);
}

void UAddOpenContainerActionRuleComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(NotificationInputId);
}

void UAddReloadAmmoActionRuleComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(NotificationInputId, UClass);
}

void UAddReloadAmmoActionRuleComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(NotificationInputId);
}

// Function Athena.AdjustableWaterLevelPuzzle.OnRep_ReppedData
// (Final, Native, Protected)
void AAdjustableWaterLevelPuzzle::OnRep_ReppedData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AdjustableWaterLevelPuzzle.OnRep_ReppedData");

	AAdjustableWaterLevelPuzzle_OnRep_ReppedData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAdjustableWaterLevelPuzzle::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RootComp, USceneComponent);
	READ_PTR_FULL(WaterVolumeComponent, UChildActorComponent);
	READ_PTR_FULL(WaterVolumeActor, AVariableFillRateWaterVolume);
	READ_PTR_FULL(FillCurve, UCurveFloat);
	READ_PTR_FULL(DrainCurve, UCurveFloat);
	READ_PTR_FULL(ResetCurve, UCurveFloat);
}

void AAdjustableWaterLevelPuzzle::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RootComp);
	DELE_PTR_FULL(WaterVolumeComponent);
	DELE_PTR_FULL(WaterVolumeActor);
	DELE_PTR_FULL(FillCurve);
	DELE_PTR_FULL(DrainCurve);
	DELE_PTR_FULL(ResetCurve);
}

void UAdjustableWaterLevelPuzzleAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(WaterLevelPuzzlePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PuzzleWaterRiseStartEvent, UWwiseEvent);
	READ_PTR_FULL(PuzzleWaterRiseEndEvent, UWwiseEvent);
	READ_PTR_FULL(PuzzleWaterFallStartEvent, UWwiseEvent);
	READ_PTR_FULL(PuzzleWaterFallEndEvent, UWwiseEvent);
}

void UAdjustableWaterLevelPuzzleAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(WaterLevelPuzzlePool);
	DELE_PTR_FULL(PuzzleWaterRiseStartEvent);
	DELE_PTR_FULL(PuzzleWaterRiseEndEvent);
	DELE_PTR_FULL(PuzzleWaterFallStartEvent);
	DELE_PTR_FULL(PuzzleWaterFallEndEvent);
}

void UAgitatedAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UAgitatedAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UAIBuffStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UAIBuffStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void AAIDockableObject::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(InteractableType, UClass);
}

void AAIDockableObject::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(InteractableType);
}

void AAIDockableWheel::AfterRead()
{
	AAIDockableObject::AfterRead();

}

void AAIDockableWheel::BeforeDelete()
{
	AAIDockableObject::BeforeDelete();

}

void UAIEmergentCaptainSpawner::AfterRead()
{
	UAIPerCrewSpawner::AfterRead();

	READ_PTR_FULL(NamedAIDataAsset, UNamedAIDataAsset);
}

void UAIEmergentCaptainSpawner::BeforeDelete()
{
	UAIPerCrewSpawner::BeforeDelete();

	DELE_PTR_FULL(NamedAIDataAsset);
}

void UAIFormWithVFXComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

	READ_PTR_FULL(ParticlesTemplate, UParticleSystem);
	READ_PTR_FULL(ParticleSystemComponent, UParticleSystemComponent);
}

void UAIFormWithVFXComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

	DELE_PTR_FULL(ParticlesTemplate);
	DELE_PTR_FULL(ParticleSystemComponent);
}

void UAIFormWithVFXDataAsset::AfterRead()
{
	UAthenaAIFormDataAsset::AfterRead();

	READ_PTR_FULL(ParticlesTemplate, UParticleSystem);
}

void UAIFormWithVFXDataAsset::BeforeDelete()
{
	UAthenaAIFormDataAsset::BeforeDelete();

	DELE_PTR_FULL(ParticlesTemplate);
}

void UAIKnockbackActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UAIKnockbackActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void ULoadoutAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void ULoadoutAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAILoadoutWithNonStoreableAsset::AfterRead()
{
	ULoadoutAsset::AfterRead();

	READ_PTR_FULL(NonStoreableItem, UClass);
}

void UAILoadoutWithNonStoreableAsset::BeforeDelete()
{
	ULoadoutAsset::BeforeDelete();

	DELE_PTR_FULL(NonStoreableItem);
}

// Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchWeapon
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UAILocomotionCompositeInputHandler::OnQuickSwitchWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchWeapon");

	UAILocomotionCompositeInputHandler_OnQuickSwitchWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UAILocomotionCompositeInputHandler::OnQuickSwitchSecondaryWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon");

	UAILocomotionCompositeInputHandler_OnQuickSwitchSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UAILocomotionCompositeInputHandler::OnQuickSwitchPrimaryWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon");

	UAILocomotionCompositeInputHandler_OnQuickSwitchPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAILocomotionCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UAILocomotionCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UAimSensitivityComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAimSensitivityComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UProjectileWeaponFiringIntentionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProjectileWeaponFiringIntentionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAIProjectileWeaponFiringIntentionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PawnOwner, APawn);
	READ_PTR_FULL(AIController, AAthenaAIControllerBase);
}

void UAIProjectileWeaponFiringIntentionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PawnOwner);
	DELE_PTR_FULL(AIController);
}

void UAIQuickDeathInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAIQuickDeathInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AIShipCaptainActionStateId.PushCharacterIntoAIShipCaptainActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAIShipCaptainActionStateId::STATIC_PushCharacterIntoAIShipCaptainActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AIShipCaptainActionStateId.PushCharacterIntoAIShipCaptainActionState");

	UAIShipCaptainActionStateId_PushCharacterIntoAIShipCaptainActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAIShipCaptainActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UAIShipCaptainActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UItemSpawnComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(ReferencedSpawnDistributionAsset, UWeightedItemDescSpawnDataAsset);
	READ_PTR_FULL(ReferencedSpawnDistribution, UItemSpawnDistributionAsset);
}

void UItemSpawnComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(ReferencedSpawnDistributionAsset);
	DELE_PTR_FULL(ReferencedSpawnDistribution);
}

void UAIShipItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

}

void UAIShipItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

}

void UEmotesInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEmotesInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.LookAtOffsetComponent.GetLookAtOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLookAtOffset           ReturnValue                    (Parm, OutParm, ReturnParm)
struct FLookAtOffset ULookAtOffsetComponent::GetLookAtOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LookAtOffsetComponent.GetLookAtOffset");

	ULookAtOffsetComponent_GetLookAtOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULookAtOffsetComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void ULookAtOffsetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCharacterMeshInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterMeshInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CharacterInterface.GetMouthPosition
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UCharacterInterface::GetMouthPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterInterface.GetMouthPosition");

	UCharacterInterface_GetMouthPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterInterface::AfterRead()
{
	UCharacterMeshInterface::AfterRead();

}

void UCharacterInterface::BeforeDelete()
{
	UCharacterMeshInterface::BeforeDelete();

}

void UFireSettingsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFireSettingsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCharacterFlammableComponent::AfterRead()
{
	UActorFlammableComponent::AfterRead();

	READ_PTR_FULL(CachedWorld, UWorld);
	READ_PTR_FULL(FireSettingsAsset, UFireSettingsDataAsset);
}

void UCharacterFlammableComponent::BeforeDelete()
{
	UActorFlammableComponent::BeforeDelete();

	DELE_PTR_FULL(CachedWorld);
	DELE_PTR_FULL(FireSettingsAsset);
}

// Function Athena.CharacterFootImpactMeshInterface.GetFootImpactSkeletonMeshComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USkeletalMeshComponent* UCharacterFootImpactMeshInterface::GetFootImpactSkeletonMeshComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterFootImpactMeshInterface.GetFootImpactSkeletonMeshComponent");

	UCharacterFootImpactMeshInterface_GetFootImpactSkeletonMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterFootImpactMeshInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterFootImpactMeshInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UObscuredVisionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UObscuredVisionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerPrivilegeInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerPrivilegeInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CloudDomeInterface.UpdateCloudMeshes
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCloudVisualParameters  CloudVisualParametersIn        (Parm, OutParm)
// TArray<struct FTiledCloudProperties> CloudTileIn                    (Parm, OutParm, ZeroConstructor)
// TArray<struct FRenderedCloudProperties> RenderedCloudsIn               (Parm, OutParm, ZeroConstructor)
// TArray<struct FCloudTypeDefinition> CloudMeshesIn                  (Parm, OutParm, ZeroConstructor)
// TArray<struct FCloudTypeNormalizedWeight> NormalizedCloudWeightsIn       (Parm, OutParm, ZeroConstructor)
void UCloudDomeInterface::UpdateCloudMeshes(struct FCloudVisualParameters* CloudVisualParametersIn, TArray<struct FTiledCloudProperties>* CloudTileIn, TArray<struct FRenderedCloudProperties>* RenderedCloudsIn, TArray<struct FCloudTypeDefinition>* CloudMeshesIn, TArray<struct FCloudTypeNormalizedWeight>* NormalizedCloudWeightsIn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeInterface.UpdateCloudMeshes");

	UCloudDomeInterface_UpdateCloudMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (CloudVisualParametersIn != nullptr)
		*CloudVisualParametersIn = params.CloudVisualParametersIn;
	if (CloudTileIn != nullptr)
		*CloudTileIn = params.CloudTileIn;
	if (RenderedCloudsIn != nullptr)
		*RenderedCloudsIn = params.RenderedCloudsIn;
	if (CloudMeshesIn != nullptr)
		*CloudMeshesIn = params.CloudMeshesIn;
	if (NormalizedCloudWeightsIn != nullptr)
		*NormalizedCloudWeightsIn = params.NormalizedCloudWeightsIn;

}


// Function Athena.CloudDomeInterface.GetCloudDomePosition
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UCloudDomeInterface::GetCloudDomePosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeInterface.GetCloudDomePosition");

	UCloudDomeInterface_GetCloudDomePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCloudDomeInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCloudDomeInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ACloudDome::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(LocalPlayer, ULocalPlayer);
}

void ACloudDome::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(LocalPlayer);
}

// Function Athena.AthenaCharacter.WieldItem
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Fast                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> AAthenaCharacter::WieldItem(bool Fast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.WieldItem");

	AAthenaCharacter_WieldItem_Params params;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.UseItem
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NotificationInputId            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::UseItem(class UClass* NotificationInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.UseItem");

	AAthenaCharacter_UseItem_Params params;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.UpdateWaterServiceInterface
// (Final, Native, Public, BlueprintCallable)
void AAthenaCharacter::UpdateWaterServiceInterface()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.UpdateWaterServiceInterface");

	AAthenaCharacter_UpdateWaterServiceInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.UnforceWaterHeight
// (Final, Native, Public, BlueprintCallable)
void AAthenaCharacter::UnforceWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.UnforceWaterHeight");

	AAthenaCharacter_UnforceWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.SetIgnoreReplicationRotationOnly
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InIgnoreReplicationRotationOnly (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaCharacter::SetIgnoreReplicationRotationOnly(bool InIgnoreReplicationRotationOnly)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.SetIgnoreReplicationRotationOnly");

	AAthenaCharacter_SetIgnoreReplicationRotationOnly_Params params;
	params.InIgnoreReplicationRotationOnly = InIgnoreReplicationRotationOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.ReceiveRestart
// (Event, Protected, BlueprintEvent)
void AAthenaCharacter::ReceiveRestart()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.ReceiveRestart");

	AAthenaCharacter_ReceiveRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.PickUpItem
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               ItemInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           AndWield                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaCharacter::PickUpItem(class AItemInfo* ItemInfo, bool AndWield)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.PickUpItem");

	AAthenaCharacter_PickUpItem_Params params;
	params.ItemInfo = ItemInfo;
	params.AndWield = AndWield;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.Kill
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ECharacterDeathType> DeathType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaCharacter::Kill(TEnumAsByte<Athena_ECharacterDeathType> DeathType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.Kill");

	AAthenaCharacter_Kill_Params params;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.IsInWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::IsInWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.IsInWater");

	AAthenaCharacter_IsInWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.IsInteractionValid
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::IsInteractionValid(class UObject* InInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.IsInteractionValid");

	AAthenaCharacter_IsInteractionValid_Params params;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.IsDead
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::IsDead()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.IsDead");

	AAthenaCharacter_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.InteractWith
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  NotificationInputId            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAthenaCharacter::InteractWith(class UObject* InInteractable, class UClass* NotificationInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.InteractWith");

	AAthenaCharacter_InteractWith_Params params;
	params.InInteractable = InInteractable;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.Interact
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaCharacter::Interact(class UObject* InInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.Interact");

	AAthenaCharacter_Interact_Params params;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.HasValidWaterHeight
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::HasValidWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.HasValidWaterHeight");

	AAthenaCharacter_HasValidWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.HasMovementBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::HasMovementBase()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.HasMovementBase");

	AAthenaCharacter_HasMovementBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.HandleCharacterMovementUpdated
// (Final, Native, Private, HasDefaults)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 OldLocation                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 OldVelocity                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaCharacter::HandleCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.HandleCharacterMovementUpdated");

	AAthenaCharacter_HandleCharacterMovementUpdated_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.OldLocation = OldLocation;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.GetYawOnMovingBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AAthenaCharacter::GetYawOnMovingBase()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetYawOnMovingBase");

	AAthenaCharacter_GetYawOnMovingBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetWaterLevelRelativeToCharacterBasePosition
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AAthenaCharacter::GetWaterLevelRelativeToCharacterBasePosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetWaterLevelRelativeToCharacterBasePosition");

	AAthenaCharacter_GetWaterLevelRelativeToCharacterBasePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetWaterHeight
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AAthenaCharacter::GetWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetWaterHeight");

	AAthenaCharacter_GetWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetViewPitch
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AAthenaCharacter::GetViewPitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetViewPitch");

	AAthenaCharacter_GetViewPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetValidWaterHeightAtomic
// (RequiredAPI, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutWaterHeight                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::GetValidWaterHeightAtomic(float* OutWaterHeight)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetValidWaterHeightAtomic");

	AAthenaCharacter_GetValidWaterHeightAtomic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutWaterHeight != nullptr)
		*OutWaterHeight = params.OutWaterHeight;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetThirdPersonMeshComponent
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USkeletalMeshComponent* AAthenaCharacter::GetThirdPersonMeshComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetThirdPersonMeshComponent");

	AAthenaCharacter_GetThirdPersonMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetInputBinder
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCharacterInputBinder*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UCharacterInputBinder* AAthenaCharacter::GetInputBinder()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetInputBinder");

	AAthenaCharacter_GetInputBinder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetIgnoreReplicationRotationOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::GetIgnoreReplicationRotationOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetIgnoreReplicationRotationOnly");

	AAthenaCharacter_GetIgnoreReplicationRotationOnly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetFocusedInteractable
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UObject* AAthenaCharacter::GetFocusedInteractable()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetFocusedInteractable");

	AAthenaCharacter_GetFocusedInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetFloorSweepCollisionResponseContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCollisionResponseContainer ReturnValue                    (Parm, OutParm, ReturnParm)
struct FCollisionResponseContainer AAthenaCharacter::GetFloorSweepCollisionResponseContainer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetFloorSweepCollisionResponseContainer");

	AAthenaCharacter_GetFloorSweepCollisionResponseContainer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetFirstPersonMeshComponent
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USkeletalMeshComponent* AAthenaCharacter::GetFirstPersonMeshComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetFirstPersonMeshComponent");

	AAthenaCharacter_GetFirstPersonMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCurrentShip
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AAthenaCharacter::GetCurrentShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetCurrentShip");

	AAthenaCharacter_GetCurrentShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCharacterTransform
// (RequiredAPI, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform AAthenaCharacter::GetCharacterTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetCharacterTransform");

	AAthenaCharacter_GetCharacterTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCharacterRotation
// (RequiredAPI, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FRotator AAthenaCharacter::GetCharacterRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GetCharacterRotation");

	AAthenaCharacter_GetCharacterRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GenerateNewRandomBool
// (Final, Native, Public, BlueprintCallable)
void AAthenaCharacter::GenerateNewRandomBool()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GenerateNewRandomBool");

	AAthenaCharacter_GenerateNewRandomBool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.GenerateNewRandomAnimationSeed
// (RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaCharacter::GenerateNewRandomAnimationSeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.GenerateNewRandomAnimationSeed");

	AAthenaCharacter_GenerateNewRandomAnimationSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.ForceWaterHeight
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                          WaterHeight                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  WaterId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAthenaCharacter::ForceWaterHeight(float WaterHeight, class UClass* WaterId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.ForceWaterHeight");

	AAthenaCharacter_ForceWaterHeight_Params params;
	params.WaterHeight = WaterHeight;
	params.WaterId = WaterId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.CureAllAilings
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaCharacter::CureAllAilings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.CureAllAilings");

	AAthenaCharacter_CureAllAilings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.CreateProjectileTraceHitVolume
// (RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaCharacter::CreateProjectileTraceHitVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.CreateProjectileTraceHitVolume");

	AAthenaCharacter_CreateProjectileTraceHitVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.CanInteractWith
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  NotificationInputId            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::CanInteractWith(class UObject* InInteractable, class UClass* NotificationInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.CanInteractWith");

	AAthenaCharacter_CanInteractWith_Params params;
	params.InInteractable = InInteractable;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.CalculateWaterHeight
// (RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaCharacter::CalculateWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.CalculateWaterHeight");

	AAthenaCharacter_CalculateWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacter.AllAnimationsLoaded
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaCharacter::AllAnimationsLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacter.AllAnimationsLoaded");

	AAthenaCharacter_AllAnimationsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAthenaCharacter::AfterRead()
{
	ACharacter::AfterRead();

	READ_PTR_FULL(LookAtOffsetComponent, ULookAtOffsetComponent);
	READ_PTR_FULL(AnimationDataStoreAsset, UAnimationDataStoreAsset);
	READ_PTR_FULL(AthenaCharacterMovementComponent, UAthenaCharacterMovementComponent);
	READ_PTR_FULL(ActionStateMachineComponent, UActionStateMachineComponent);
	READ_PTR_FULL(ActionStatePriorityTableData, UActionStatePriorityTableData);
	READ_PTR_FULL(ActionStateCreatorDefinition, UClass);
	READ_PTR_FULL(WieldableItemSetComponent, UWieldableItemSetComponent);
	READ_PTR_FULL(WieldedItemComponent, UWieldedItemComponent);
	READ_PTR_FULL(MeshAdjustmentComponent, USceneComponent);
	READ_PTR_FULL(InventoryManipulatorComponent, UInventoryManipulatorComponent);
	READ_PTR_FULL(LoadoutComponent, ULoadoutComponent);
	READ_PTR_FULL(ItemLoadoutComponent, UItemLoadoutComponent);
	READ_PTR_FULL(HealthComponent, UHealthComponent);
	READ_PTR_FULL(StateManagerComponent, UAthenaCharacterStateManagerComponent);
	READ_PTR_FULL(RewindComponent, URewindComponent);
	READ_PTR_FULL(ActorDamageableComponent, UActorDamageableComponent);
	READ_PTR_FULL(CharacterHitReactionComponent, UCharacterHitReactionComponent);
	READ_PTR_FULL(AnimNotifyWwiseEmitterComponent, UAnimNotifyWwiseEmitterComponent);
	READ_PTR_FULL(MeleeAttackProcessor, UMeleeAttackProcessorComponent);
	READ_PTR_FULL(HitDetectionComponent, UHitDetectionComponent);
	READ_PTR_FULL(KnockBackComponent, UAthenaCharacterKnockbackComponent);
	READ_PTR_FULL(DodgeComponent, UAthenaCharacterDodgeComponent);
	READ_PTR_FULL(CharacterAINoiseEventComponent, UCharacterAINoiseEventComponent);
	READ_PTR_FULL(PrivateActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(ShipTrackerComponent, UShipTrackerComponent);
	READ_PTR_FULL(WatercraftTrackerComponent, UWatercraftTrackerComponent);
	READ_PTR_FULL(ItemLoaderComponent, UItemLoaderComponent);
	READ_PTR_FULL(RetractableCharacterComponent, URetractableCharacterComponent);
	READ_PTR_FULL(ResourceProviderComponent, UResourceProviderComponent);
	READ_PTR_FULL(CharacterFlammableComponent, UCharacterFlammableComponent);
	READ_PTR_FULL(SoakableComponent, USoakableComponent);
	READ_PTR_FULL(WaterExposureComponent, UWaterExposureComponent);
	READ_PTR_FULL(ShelteredComponent, UShelteredComponent);
	READ_PTR_FULL(BoxedRpcDispatcherComponent, UBoxedRpcDispatcherComponent);
	READ_PTR_FULL(CosmeticItemAnimationComponent, UCosmeticItemAnimationComponent);
	READ_PTR_FULL(InputBinder, UCharacterInputBinder);
	READ_PTR_FULL(InterferenceComponent, UMovementInterferenceComponent);
	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
	READ_PTR_FULL(ThirdPersonAnimSetDataId, UClass);
	READ_PTR_FULL(AnimationDataStore, UAnimationDataStore);
	READ_PTR_FULL(OldPlayerState, APlayerState);
	READ_PTR_FULL(CameraSocket, USkeletalMeshSocket);
}

void AAthenaCharacter::BeforeDelete()
{
	ACharacter::BeforeDelete();

	DELE_PTR_FULL(LookAtOffsetComponent);
	DELE_PTR_FULL(AnimationDataStoreAsset);
	DELE_PTR_FULL(AthenaCharacterMovementComponent);
	DELE_PTR_FULL(ActionStateMachineComponent);
	DELE_PTR_FULL(ActionStatePriorityTableData);
	DELE_PTR_FULL(ActionStateCreatorDefinition);
	DELE_PTR_FULL(WieldableItemSetComponent);
	DELE_PTR_FULL(WieldedItemComponent);
	DELE_PTR_FULL(MeshAdjustmentComponent);
	DELE_PTR_FULL(InventoryManipulatorComponent);
	DELE_PTR_FULL(LoadoutComponent);
	DELE_PTR_FULL(ItemLoadoutComponent);
	DELE_PTR_FULL(HealthComponent);
	DELE_PTR_FULL(StateManagerComponent);
	DELE_PTR_FULL(RewindComponent);
	DELE_PTR_FULL(ActorDamageableComponent);
	DELE_PTR_FULL(CharacterHitReactionComponent);
	DELE_PTR_FULL(AnimNotifyWwiseEmitterComponent);
	DELE_PTR_FULL(MeleeAttackProcessor);
	DELE_PTR_FULL(HitDetectionComponent);
	DELE_PTR_FULL(KnockBackComponent);
	DELE_PTR_FULL(DodgeComponent);
	DELE_PTR_FULL(CharacterAINoiseEventComponent);
	DELE_PTR_FULL(PrivateActionRulesComponent);
	DELE_PTR_FULL(ShipTrackerComponent);
	DELE_PTR_FULL(WatercraftTrackerComponent);
	DELE_PTR_FULL(ItemLoaderComponent);
	DELE_PTR_FULL(RetractableCharacterComponent);
	DELE_PTR_FULL(ResourceProviderComponent);
	DELE_PTR_FULL(CharacterFlammableComponent);
	DELE_PTR_FULL(SoakableComponent);
	DELE_PTR_FULL(WaterExposureComponent);
	DELE_PTR_FULL(ShelteredComponent);
	DELE_PTR_FULL(BoxedRpcDispatcherComponent);
	DELE_PTR_FULL(CosmeticItemAnimationComponent);
	DELE_PTR_FULL(InputBinder);
	DELE_PTR_FULL(InterferenceComponent);
	DELE_PTR_FULL(WaterInteractionComponent);
	DELE_PTR_FULL(ThirdPersonAnimSetDataId);
	DELE_PTR_FULL(AnimationDataStore);
	DELE_PTR_FULL(OldPlayerState);
	DELE_PTR_FULL(CameraSocket);
}

void UBriggableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UBriggableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PlayerCharacterInterface.GetFirstPersonWwiseEmitterOwner
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USceneComponent* UPlayerCharacterInterface::GetFirstPersonWwiseEmitterOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCharacterInterface.GetFirstPersonWwiseEmitterOwner");

	UPlayerCharacterInterface_GetFirstPersonWwiseEmitterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerCharacterInterface.ExecuteRumbleProfile
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FName                   RumbleTag                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerCharacterInterface::ExecuteRumbleProfile(const struct FName& RumbleTag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerCharacterInterface.ExecuteRumbleProfile");

	UPlayerCharacterInterface_ExecuteRumbleProfile_Params params;
	params.RumbleTag = RumbleTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerCharacterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerCharacterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USwimAttackableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USwimAttackableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PlayerManagerServiceInterface.GetPlayerCharacterFromPlayerState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            PlayerState                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaPlayerCharacter*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaPlayerCharacter* UPlayerManagerServiceInterface::GetPlayerCharacterFromPlayerState(class APlayerState* PlayerState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetPlayerCharacterFromPlayerState");

	UPlayerManagerServiceInterface_GetPlayerCharacterFromPlayerState_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetNumPlayers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UPlayerManagerServiceInterface::GetNumPlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetNumPlayers");

	UPlayerManagerServiceInterface_GetNumPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetNumActiveLocalPlayers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UPlayerManagerServiceInterface::GetNumActiveLocalPlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetNumActiveLocalPlayers");

	UPlayerManagerServiceInterface_GetNumActiveLocalPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetFirstLocalPlayerController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAthenaPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaPlayerController* UPlayerManagerServiceInterface::GetFirstLocalPlayerController()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetFirstLocalPlayerController");

	UPlayerManagerServiceInterface_GetFirstLocalPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetFirstLocalPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAthenaPlayerCharacter*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaPlayerCharacter* UPlayerManagerServiceInterface::GetFirstLocalPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetFirstLocalPlayer");

	UPlayerManagerServiceInterface_GetFirstLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetAllPlayerControllersWeakActorHandle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FWeakActorHandle> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
TArray<struct FWeakActorHandle> UPlayerManagerServiceInterface::GetAllPlayerControllersWeakActorHandle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetAllPlayerControllersWeakActorHandle");

	UPlayerManagerServiceInterface_GetAllPlayerControllersWeakActorHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetAllActivePlayers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AAthenaPlayerCharacter*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AAthenaPlayerCharacter*> UPlayerManagerServiceInterface::GetAllActivePlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetAllActivePlayers");

	UPlayerManagerServiceInterface_GetAllActivePlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetActiveLocalPlayers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AAthenaPlayerCharacter*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AAthenaPlayerCharacter*> UPlayerManagerServiceInterface::GetActiveLocalPlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerManagerServiceInterface.GetActiveLocalPlayers");

	UPlayerManagerServiceInterface_GetActiveLocalPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerManagerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerManagerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CloudDomeServiceInterface.UnregisterCloudDomeFromService
// (Native, Public, BlueprintCallable)
void UCloudDomeServiceInterface::UnregisterCloudDomeFromService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeServiceInterface.UnregisterCloudDomeFromService");

	UCloudDomeServiceInterface_UnregisterCloudDomeFromService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CloudDomeServiceInterface.RegisterCloudDomeWithService
// (Native, Public, BlueprintCallable)
void UCloudDomeServiceInterface::RegisterCloudDomeWithService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeServiceInterface.RegisterCloudDomeWithService");

	UCloudDomeServiceInterface_RegisterCloudDomeWithService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CloudDomeServiceInterface.GetNumberOfCloudDomes
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCloudDomeServiceInterface::GetNumberOfCloudDomes()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeServiceInterface.GetNumberOfCloudDomes");

	UCloudDomeServiceInterface_GetNumberOfCloudDomes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CloudDomeServiceInterface.GetCloudDome
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            CloudDomeIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCloudDomeServiceInterface::GetCloudDome(int CloudDomeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeServiceInterface.GetCloudDome");

	UCloudDomeServiceInterface_GetCloudDome_Params params;
	params.CloudDomeIndex = CloudDomeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CloudDomeServiceInterface.GetActualCloudDome
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            CloudDomeIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACloudDome*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ACloudDome* UCloudDomeServiceInterface::GetActualCloudDome(int CloudDomeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudDomeServiceInterface.GetActualCloudDome");

	UCloudDomeServiceInterface_GetActualCloudDome_Params params;
	params.CloudDomeIndex = CloudDomeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCloudDomeServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCloudDomeServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AthenaPlayerCharacter.WalkActivate
// (RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaPlayerCharacter::WalkActivate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.WalkActivate");

	AAthenaPlayerCharacter_WalkActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.UseItem
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NotificationInputId            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::UseItem(class UClass* NotificationInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.UseItem");

	AAthenaPlayerCharacter_UseItem_Params params;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.TriggerTattooGlow
// (Event, Public, BlueprintEvent)
void AAthenaPlayerCharacter::TriggerTattooGlow()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.TriggerTattooGlow");

	AAthenaPlayerCharacter_TriggerTattooGlow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.TattooGlowClient
// (RequiredAPI, Net, Native, Event, NetMulticast, Public, NetClient)
void AAthenaPlayerCharacter::TattooGlowClient()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.TattooGlowClient");

	AAthenaPlayerCharacter_TattooGlowClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.TattooGlow
// (Final, Native, Public, BlueprintCallable)
void AAthenaPlayerCharacter::TattooGlow()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.TattooGlow");

	AAthenaPlayerCharacter_TattooGlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.SprintActivate
// (RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaPlayerCharacter::SprintActivate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.SprintActivate");

	AAthenaPlayerCharacter_SprintActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.ServerWantsSprint
// (Final, RequiredAPI, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           WantsSprint                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaPlayerCharacter::ServerWantsSprint(bool WantsSprint)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.ServerWantsSprint");

	AAthenaPlayerCharacter_ServerWantsSprint_Params params;
	params.WantsSprint = WantsSprint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.ServerSetAutoFloatInWater
// (Final, RequiredAPI, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           AutoFloatInWater               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaPlayerCharacter::ServerSetAutoFloatInWater(bool AutoFloatInWater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.ServerSetAutoFloatInWater");

	AAthenaPlayerCharacter_ServerSetAutoFloatInWater_Params params;
	params.AutoFloatInWater = AutoFloatInWater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.Server_IPGLoadStatus
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<uint32_t>               InData                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void AAthenaPlayerCharacter::Server_IPGLoadStatus(TArray<uint32_t> InData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.Server_IPGLoadStatus");

	AAthenaPlayerCharacter_Server_IPGLoadStatus_Params params;
	params.InData = InData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnWieldedItem
// (RequiredAPI, Native, Public, BlueprintCallable)
void AAthenaPlayerCharacter::OnWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnWieldedItem");

	AAthenaPlayerCharacter_OnWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnRep_ReplicatedIsSprinting
// (Final, Native, Private)
void AAthenaPlayerCharacter::OnRep_ReplicatedIsSprinting()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnRep_ReplicatedIsSprinting");

	AAthenaPlayerCharacter_OnRep_ReplicatedIsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnRep_OverridePirateDescSeed
// (Final, Native, Public)
void AAthenaPlayerCharacter::OnRep_OverridePirateDescSeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnRep_OverridePirateDescSeed");

	AAthenaPlayerCharacter_OnRep_OverridePirateDescSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnRep_OverrideAnimationEntry
// (Final, Native, Public)
void AAthenaPlayerCharacter::OnRep_OverrideAnimationEntry()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnRep_OverrideAnimationEntry");

	AAthenaPlayerCharacter_OnRep_OverrideAnimationEntry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnRep_AutoFloatInWater
// (Final, Native, Private)
void AAthenaPlayerCharacter::OnRep_AutoFloatInWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnRep_AutoFloatInWater");

	AAthenaPlayerCharacter_OnRep_AutoFloatInWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnMeshSet
// (Event, Public, BlueprintEvent)
void AAthenaPlayerCharacter::OnMeshSet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnMeshSet");

	AAthenaPlayerCharacter_OnMeshSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.OnImpactDamageEventReceived
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      InImpactEvent                  (ConstParm, Parm, OutParm, ReferenceParm)
void AAthenaPlayerCharacter::OnImpactDamageEventReceived(const struct FImpactDamageEvent& InImpactEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.OnImpactDamageEventReceived");

	AAthenaPlayerCharacter_OnImpactDamageEventReceived_Params params;
	params.InImpactEvent = InImpactEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.Multicast_OnKrakenTentacleDeath
// (RequiredAPI, Net, Native, Event, NetMulticast, Public)
// Parameters:
// int                            RemainingTentacles             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaPlayerCharacter::Multicast_OnKrakenTentacleDeath(int RemainingTentacles)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.Multicast_OnKrakenTentacleDeath");

	AAthenaPlayerCharacter_Multicast_OnKrakenTentacleDeath_Params params;
	params.RemainingTentacles = RemainingTentacles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.IsSprintEnabled
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::IsSprintEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.IsSprintEnabled");

	AAthenaPlayerCharacter_IsSprintEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.IsInteractionValid
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::IsInteractionValid(class UObject* InInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.IsInteractionValid");

	AAthenaPlayerCharacter_IsInteractionValid_Params params;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.HasMeshSet
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::HasMeshSet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.HasMeshSet");

	AAthenaPlayerCharacter_HasMeshSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.HasFinishedSpawning
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::HasFinishedSpawning()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.HasFinishedSpawning");

	AAthenaPlayerCharacter_HasFinishedSpawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetTaleVoyageParticipantComponent
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVoyageParticipantComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UVoyageParticipantComponent* AAthenaPlayerCharacter::GetTaleVoyageParticipantComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetTaleVoyageParticipantComponent");

	AAthenaPlayerCharacter_GetTaleVoyageParticipantComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetPrimaryVoyageParticipantComponent
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVoyageParticipantComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UVoyageParticipantComponent* AAthenaPlayerCharacter::GetPrimaryVoyageParticipantComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetPrimaryVoyageParticipantComponent");

	AAthenaPlayerCharacter_GetPrimaryVoyageParticipantComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetPetLoadoutComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPetLoadoutComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UPetLoadoutComponent* AAthenaPlayerCharacter::GetPetLoadoutComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetPetLoadoutComponent");

	AAthenaPlayerCharacter_GetPetLoadoutComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetPawnViewLocation
// (RequiredAPI, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AAthenaPlayerCharacter::GetPawnViewLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetPawnViewLocation");

	AAthenaPlayerCharacter_GetPawnViewLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetLocalPlayerWorldRegionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName AAthenaPlayerCharacter::GetLocalPlayerWorldRegionName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetLocalPlayerWorldRegionName");

	AAthenaPlayerCharacter_GetLocalPlayerWorldRegionName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetIsSprinting
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::GetIsSprinting()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetIsSprinting");

	AAthenaPlayerCharacter_GetIsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetIsDigitallyWalking
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::GetIsDigitallyWalking()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetIsDigitallyWalking");

	AAthenaPlayerCharacter_GetIsDigitallyWalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetFocusedInteractable
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UObject* AAthenaPlayerCharacter::GetFocusedInteractable()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetFocusedInteractable");

	AAthenaPlayerCharacter_GetFocusedInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetFirstPersonMeshOffset
// (Final, RequiredAPI, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AAthenaPlayerCharacter::GetFirstPersonMeshOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetFirstPersonMeshOffset");

	AAthenaPlayerCharacter_GetFirstPersonMeshOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetEmergentVoyageParticipantComponent
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVoyageParticipantComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UVoyageParticipantComponent* AAthenaPlayerCharacter::GetEmergentVoyageParticipantComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetEmergentVoyageParticipantComponent");

	AAthenaPlayerCharacter_GetEmergentVoyageParticipantComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetCurrentShipRegion
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EShipRegion> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EShipRegion> AAthenaPlayerCharacter::GetCurrentShipRegion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetCurrentShipRegion");

	AAthenaPlayerCharacter_GetCurrentShipRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetClothingLoadoutComponent
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClothingLoadoutComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UClothingLoadoutComponent* AAthenaPlayerCharacter::GetClothingLoadoutComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.GetClothingLoadoutComponent");

	AAthenaPlayerCharacter_GetClothingLoadoutComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.ClientAddPlayerAsFriend
// (RequiredAPI, Net, NetReliable, Native, Event, Public, NetClient, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToAddAsFriend            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaPlayerCharacter::ClientAddPlayerAsFriend(class AAthenaPlayerCharacter* PlayerToAddAsFriend)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.ClientAddPlayerAsFriend");

	AAthenaPlayerCharacter_ClientAddPlayerAsFriend_Params params;
	params.PlayerToAddAsFriend = PlayerToAddAsFriend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacter.AllAnimationsLoaded
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerCharacter::AllAnimationsLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacter.AllAnimationsLoaded");

	AAthenaPlayerCharacter_AllAnimationsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAthenaPlayerCharacter::AfterRead()
{
	AAthenaCharacter::AfterRead();

	READ_PTR_FULL(FirstPersonMeshOffsetComponent, USceneComponent);
	READ_PTR_FULL(FirstPersonMesh, USkeletalMeshComponent);
	READ_PTR_FULL(FirstPersonCamera, UAthenaCameraComponent);
	READ_PTR_FULL(ThirdPersonCamera, UAthenaCameraComponent);
	READ_PTR_FULL(SpringArmCamera, UAthenaCameraComponent);
	READ_PTR_FULL(SpringArm, UAthenaSpringArmComponent);
	READ_PTR_FULL(LocalCloudDome, UChildActorComponent);
	READ_PTR_FULL(InteractionComponent, UCharacterInteractionComponent);
	READ_PTR_FULL(ClimbingComponent, UClimbingComponent);
	READ_PTR_FULL(DrunkennessComponent, UDrunkennessComponent);
	READ_PTR_FULL(StaggerComponent, UStaggerComponent);
	READ_PTR_FULL(DrowningComponent, UDrowningComponent);
	READ_PTR_FULL(RumbleHandlerComponent, URumbleHandlerComponent);
	READ_PTR_FULL(ScreenSpaceVfxComponent, UScreenSpaceVfxComponent);
	READ_PTR_FULL(TreasureMapCollectionComponent, UTreasureMapCollectionComponent);
	READ_PTR_FULL(PhrasesRadialComponent, UPhrasesRadialComponent);
	READ_PTR_FULL(QuickInventoryComponent, UQuickInventoryComponent);
	READ_PTR_FULL(PointOfInterestTrackerComponent, UPointOfInterestTrackerComponent);
	READ_PTR_FULL(LimpingComponent, ULimpingComponent);
	READ_PTR_FULL(PacingComponent, UPacingComponent);
	READ_PTR_FULL(BurpComponent, UBurpComponent);
	READ_PTR_FULL(MeleeLockOnComponent, UMeleeAttackLockOnComponent);
	READ_PTR_FULL(DeathSelfInteractionComponent, UDeathSelfInteractionComponent);
	READ_PTR_FULL(WaterSlidePlayerComponent, UWaterSlidePlayerComponent);
	READ_PTR_FULL(ReviveDebugComponent, UReviveDebugComponent);
	READ_PTR_FULL(MeleeAttackLockOnSettings, UMeleeAttackLockOnComponentSettings);
	READ_PTR_FULL(StatusEffectManagerComponent, UStatusEffectManagerComponent);
	READ_PTR_FULL(StatusEffectPersistenceComponent, UStatusEffectPersistenceComponent);
	READ_PTR_FULL(PlayerCurseComponent, UPlayerCurseComponent);
	READ_PTR_FULL(MaterialStatusSusceptibilityComponent, UMaterialStatusSusceptibilityComponent);
	READ_PTR_FULL(HealthRegenerationPoolComponent, UHealthRegenerationPoolComponent);
	READ_PTR_FULL(SicknessComponent, USicknessComponent);
	READ_PTR_FULL(PlayerViewRewindComponent, URewindComponent);
	READ_PTR_FULL(ProjectileTraceHitVolume, UCapsuleComponent);
	READ_PTR_FULL(PlayerMerchantContractsComponent, UPlayerMerchantContractsComponent);
	READ_PTR_FULL(PlayerShroudBreakerTrackerComponent, UPlayerShroudBreakerTrackerComponent);
	READ_PTR_FULL(PetOwnerComponent, UPetOwnerComponent);
	READ_PTR_FULL(SpawnContextContainerComponent, UAISpawnContextContainerComponent);
	READ_PTR_FULL(RadialManager, URadialManagerComponent);
	READ_PTR_FULL(ApproximateCamPitchToLocalCamOffsetCurve, UCurveVector);
	READ_PTR_FULL(EmoteSpringArmParameters, UAthenaSpringArmComponentParams);
	READ_PTR_FULL(DeathSpringArmParameters, UAthenaSpringArmComponentParams);
	READ_PTR_FULL(EmotesRadialDataAsset, UEmotesRadialDataAsset);
	READ_PTR_FULL(ConditionalStatsTriggerForKillingAnotherPlayer, UClass);
	READ_PTR_FULL(PirateLegendHideoutPetMovementData, UAICreatureMovementModifierParamsDataAsset);
	READ_PTR_FULL(OnShipPetMovementData, UAICreatureMovementModifierParamsDataAsset);
	READ_PTR_FULL(RepairComponent, UAsyncLoadoutRepairComponent);
	READ_PTR_FULL(SeasonUIComponent, USeasonProgressionUIComponent);
	READ_PTR_FULL(FirstPersonAnimSetDataId, UClass);
	READ_PTR_FULL(FirstPersonAnimationDataStoreWeakReferencesAsset, UAnimationDataStoreWeakReferenceAsset);
	READ_PTR_FULL(ClothingLoadoutComponent, UClothingLoadoutComponent);
	READ_PTR_FULL(PetLoadoutComponent, UPetLoadoutComponent);
	READ_PTR_FULL(PrimaryVoyageParticipantComponent, UVoyageParticipantComponent);
	READ_PTR_FULL(TaleVoyageParticipantComponent, UVoyageParticipantComponent);
	READ_PTR_FULL(EmergentVoyageParticipantComponent, UVoyageParticipantComponent);
	READ_PTR_FULL(PlayerWorldLocationComponent, UPlayerWorldLocationComponent);
	READ_PTR_FULL(ChainLightningReceiverComponent, UChainLightningReceiverComponent);
	READ_PTR_FULL(DropItemsOnDeathComponent, UDropItemsOnDeathComponent);
}

void AAthenaPlayerCharacter::BeforeDelete()
{
	AAthenaCharacter::BeforeDelete();

	DELE_PTR_FULL(FirstPersonMeshOffsetComponent);
	DELE_PTR_FULL(FirstPersonMesh);
	DELE_PTR_FULL(FirstPersonCamera);
	DELE_PTR_FULL(ThirdPersonCamera);
	DELE_PTR_FULL(SpringArmCamera);
	DELE_PTR_FULL(SpringArm);
	DELE_PTR_FULL(LocalCloudDome);
	DELE_PTR_FULL(InteractionComponent);
	DELE_PTR_FULL(ClimbingComponent);
	DELE_PTR_FULL(DrunkennessComponent);
	DELE_PTR_FULL(StaggerComponent);
	DELE_PTR_FULL(DrowningComponent);
	DELE_PTR_FULL(RumbleHandlerComponent);
	DELE_PTR_FULL(ScreenSpaceVfxComponent);
	DELE_PTR_FULL(TreasureMapCollectionComponent);
	DELE_PTR_FULL(PhrasesRadialComponent);
	DELE_PTR_FULL(QuickInventoryComponent);
	DELE_PTR_FULL(PointOfInterestTrackerComponent);
	DELE_PTR_FULL(LimpingComponent);
	DELE_PTR_FULL(PacingComponent);
	DELE_PTR_FULL(BurpComponent);
	DELE_PTR_FULL(MeleeLockOnComponent);
	DELE_PTR_FULL(DeathSelfInteractionComponent);
	DELE_PTR_FULL(WaterSlidePlayerComponent);
	DELE_PTR_FULL(ReviveDebugComponent);
	DELE_PTR_FULL(MeleeAttackLockOnSettings);
	DELE_PTR_FULL(StatusEffectManagerComponent);
	DELE_PTR_FULL(StatusEffectPersistenceComponent);
	DELE_PTR_FULL(PlayerCurseComponent);
	DELE_PTR_FULL(MaterialStatusSusceptibilityComponent);
	DELE_PTR_FULL(HealthRegenerationPoolComponent);
	DELE_PTR_FULL(SicknessComponent);
	DELE_PTR_FULL(PlayerViewRewindComponent);
	DELE_PTR_FULL(ProjectileTraceHitVolume);
	DELE_PTR_FULL(PlayerMerchantContractsComponent);
	DELE_PTR_FULL(PlayerShroudBreakerTrackerComponent);
	DELE_PTR_FULL(PetOwnerComponent);
	DELE_PTR_FULL(SpawnContextContainerComponent);
	DELE_PTR_FULL(RadialManager);
	DELE_PTR_FULL(ApproximateCamPitchToLocalCamOffsetCurve);
	DELE_PTR_FULL(EmoteSpringArmParameters);
	DELE_PTR_FULL(DeathSpringArmParameters);
	DELE_PTR_FULL(EmotesRadialDataAsset);
	DELE_PTR_FULL(ConditionalStatsTriggerForKillingAnotherPlayer);
	DELE_PTR_FULL(PirateLegendHideoutPetMovementData);
	DELE_PTR_FULL(OnShipPetMovementData);
	DELE_PTR_FULL(RepairComponent);
	DELE_PTR_FULL(SeasonUIComponent);
	DELE_PTR_FULL(FirstPersonAnimSetDataId);
	DELE_PTR_FULL(FirstPersonAnimationDataStoreWeakReferencesAsset);
	DELE_PTR_FULL(ClothingLoadoutComponent);
	DELE_PTR_FULL(PetLoadoutComponent);
	DELE_PTR_FULL(PrimaryVoyageParticipantComponent);
	DELE_PTR_FULL(TaleVoyageParticipantComponent);
	DELE_PTR_FULL(EmergentVoyageParticipantComponent);
	DELE_PTR_FULL(PlayerWorldLocationComponent);
	DELE_PTR_FULL(ChainLightningReceiverComponent);
	DELE_PTR_FULL(DropItemsOnDeathComponent);
}

void UAIShipPlayerTracker::AfterRead()
{
	UAISpawnerPlayerTracker::AfterRead();

}

void UAIShipPlayerTracker::BeforeDelete()
{
	UAISpawnerPlayerTracker::BeforeDelete();

}

void UAIShipRegionPlayerTracker::AfterRead()
{
	UAISpawnerPlayerTracker::AfterRead();

}

void UAIShipRegionPlayerTracker::BeforeDelete()
{
	UAISpawnerPlayerTracker::BeforeDelete();

}

void UAIShipWheelAIInteractableType::AfterRead()
{
	UAIInteractableType::AfterRead();

}

void UAIShipWheelAIInteractableType::BeforeDelete()
{
	UAIInteractableType::BeforeDelete();

}

void UAISpawnContextTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UAISpawnContextTaleQuestServiceDesc);
}

void UAISpawnContextTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UAISpawnContextTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UAISpawnContextTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UAlcoholStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UAlcoholStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.AllianceBlueprintLibrary.IsCrewInAlliance
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAllianceBlueprintLibrary::STATIC_IsCrewInAlliance(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AllianceBlueprintLibrary.IsCrewInAlliance");

	UAllianceBlueprintLibrary_IsCrewInAlliance_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AllianceBlueprintLibrary.AreCrewsInSameAlliance
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId1                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FGuid                   CrewId2                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAllianceBlueprintLibrary::STATIC_AreCrewsInSameAlliance(class UObject* WorldContext, const struct FGuid& CrewId1, const struct FGuid& CrewId2)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AllianceBlueprintLibrary.AreCrewsInSameAlliance");

	UAllianceBlueprintLibrary_AreCrewsInSameAlliance_Params params;
	params.WorldContext = WorldContext;
	params.CrewId1 = CrewId1;
	params.CrewId2 = CrewId2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAllianceBlueprintLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAllianceBlueprintLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AllianceService.OnRep_CrewAllianceJoinStatuses
// (Final, Native, Public)
void AAllianceService::OnRep_CrewAllianceJoinStatuses()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AllianceService.OnRep_CrewAllianceJoinStatuses");

	AAllianceService_OnRep_CrewAllianceJoinStatuses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAllianceService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Settings, UAllianceSettingsAsset);
	READ_PTR_FULL(TelemetryComponent, UAllianceServiceTelemetryComponent);
}

void AAllianceService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Settings);
	DELE_PTR_FULL(TelemetryComponent);
}

void UAllianceServiceTelemetryComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAllianceServiceTelemetryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UAllianceSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(OfferFlag, UClass);
	READ_PTR_FULL(AcceptFlag, UClass);
	READ_PTR_FULL(LeaveFlag, UClass);
	READ_PTR_FULL(AlliancePennantAsset, UAlliancePennantAsset);
}

void UAllianceSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(OfferFlag);
	DELE_PTR_FULL(AcceptFlag);
	DELE_PTR_FULL(LeaveFlag);
	DELE_PTR_FULL(AlliancePennantAsset);
}

// Function Athena.AlwaysRelevantLightweightActor.OnRep_OwningActor
// (Final, Native, Private)
void AAlwaysRelevantLightweightActor::OnRep_OwningActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AlwaysRelevantLightweightActor.OnRep_OwningActor");

	AAlwaysRelevantLightweightActor_OnRep_OwningActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AlwaysRelevantLightweightActor.OnOwningActorDestroyed
// (Native, Protected)
void AAlwaysRelevantLightweightActor::OnOwningActorDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AlwaysRelevantLightweightActor.OnOwningActorDestroyed");

	AAlwaysRelevantLightweightActor_OnOwningActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAlwaysRelevantLightweightActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(OwningActor, AActor);
}

void AAlwaysRelevantLightweightActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(OwningActor);
}

void UHideoutServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHideoutServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.NameplateComponent.GetWorldPosition
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UNameplateComponent::GetWorldPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NameplateComponent.GetWorldPosition");

	UNameplateComponent_GetWorldPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNameplateComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(NameplateSocket, USkeletalMeshSocket);
}

void UNameplateComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(NameplateSocket);
}

void UPlayerNameplateComponent::AfterRead()
{
	UNameplateComponent::AfterRead();

	READ_PTR_FULL(PlayerCharacter, AAthenaPlayerCharacter);
}

void UPlayerNameplateComponent::BeforeDelete()
{
	UNameplateComponent::BeforeDelete();

	DELE_PTR_FULL(PlayerCharacter);
}

void UAlwaysRelevantPlayerNameplateComponent::AfterRead()
{
	UPlayerNameplateComponent::AfterRead();

	READ_PTR_FULL(PlayerStatePtr, AAthenaPlayerState);
}

void UAlwaysRelevantPlayerNameplateComponent::BeforeDelete()
{
	UPlayerNameplateComponent::BeforeDelete();

	DELE_PTR_FULL(PlayerStatePtr);
}

// Function Athena.AlwaysRelevantLightweightPlayerNameplate.OnRep_PlayerStatePtr
// (Final, Native, Private)
void AAlwaysRelevantLightweightPlayerNameplate::OnRep_PlayerStatePtr()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AlwaysRelevantLightweightPlayerNameplate.OnRep_PlayerStatePtr");

	AAlwaysRelevantLightweightPlayerNameplate_OnRep_PlayerStatePtr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AlwaysRelevantLightweightPlayerNameplate.OnRep_IsOwnerInert
// (Final, RequiredAPI, Native, Private)
void AAlwaysRelevantLightweightPlayerNameplate::OnRep_IsOwnerInert()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AlwaysRelevantLightweightPlayerNameplate.OnRep_IsOwnerInert");

	AAlwaysRelevantLightweightPlayerNameplate_OnRep_IsOwnerInert_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AlwaysRelevantLightweightPlayerNameplate.OnOwningActorDestroyed
// (Native, Protected)
void AAlwaysRelevantLightweightPlayerNameplate::OnOwningActorDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AlwaysRelevantLightweightPlayerNameplate.OnOwningActorDestroyed");

	AAlwaysRelevantLightweightPlayerNameplate_OnOwningActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAlwaysRelevantLightweightPlayerNameplate::AfterRead()
{
	AAlwaysRelevantLightweightActor::AfterRead();

	READ_PTR_FULL(PlayerNameplateComponent, UAlwaysRelevantPlayerNameplateComponent);
	READ_PTR_FULL(PlayerStatePtr, AAthenaPlayerState);
}

void AAlwaysRelevantLightweightPlayerNameplate::BeforeDelete()
{
	AAlwaysRelevantLightweightActor::BeforeDelete();

	DELE_PTR_FULL(PlayerNameplateComponent);
	DELE_PTR_FULL(PlayerStatePtr);
}

void AAmmoChest::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(StaticMesh, UStaticMeshComponent);
}

void AAmmoChest::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(StaticMesh);
}

// Function Athena.Anchor.SetAnchorLoweredProportion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InLoweredProportion            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAnchor::SetAnchorLoweredProportion(float InLoweredProportion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Anchor.SetAnchorLoweredProportion");

	AAnchor_SetAnchorLoweredProportion_Params params;
	params.InLoweredProportion = InLoweredProportion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAnchor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AnchorDynamicsDesc, UBaseAnchorDynamicsDesc);
}

void AAnchor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AnchorDynamicsDesc);
}

void UAncientAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

}

void UAncientAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

}

void UAncientAIFormDataAsset::AfterRead()
{
	UAthenaAIFormDataAsset::AfterRead();

	READ_PTR_FULL(AwardableComponentType, UClass);
}

void UAncientAIFormDataAsset::BeforeDelete()
{
	UAthenaAIFormDataAsset::BeforeDelete();

	DELE_PTR_FULL(AwardableComponentType);
}

void UNPCHeldObjectData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Object1, UClass);
	READ_PTR_FULL(Object2, UClass);
	READ_PTR_FULL(Object3, UClass);
	READ_PTR_FULL(Object4, UClass);
	READ_PTR_FULL(Object5, UClass);
	READ_PTR_FULL(Object6, UClass);
	READ_PTR_FULL(Object7, UClass);
	READ_PTR_FULL(Object8, UClass);
	READ_PTR_FULL(Object9, UClass);
	READ_PTR_FULL(Object10, UClass);
}

void UNPCHeldObjectData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Object1);
	DELE_PTR_FULL(Object2);
	DELE_PTR_FULL(Object3);
	DELE_PTR_FULL(Object4);
	DELE_PTR_FULL(Object5);
	DELE_PTR_FULL(Object6);
	DELE_PTR_FULL(Object7);
	DELE_PTR_FULL(Object8);
	DELE_PTR_FULL(Object9);
	DELE_PTR_FULL(Object10);
}

void UAnimatedCosmeticItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAnimatedCosmeticItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAnimatedCosmeticItemAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(ParentCharacterAnimationInstance, UAnimInstance);
	READ_PTR_FULL(CurrentPlayingMontage, UAnimMontage);
	READ_PTR_FULL(OneShot, UAnimSequenceBase);
	READ_PTR_FULL(ContinuousIn, UAnimSequenceBase);
	READ_PTR_FULL(ContinuousLoopA, UAnimSequenceBase);
	READ_PTR_FULL(ContinuousLoopB, UAnimSequenceBase);
	READ_PTR_FULL(ContinuousOut, UAnimSequenceBase);
}

void UAnimatedCosmeticItemAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(ParentCharacterAnimationInstance);
	DELE_PTR_FULL(CurrentPlayingMontage);
	DELE_PTR_FULL(OneShot);
	DELE_PTR_FULL(ContinuousIn);
	DELE_PTR_FULL(ContinuousLoopA);
	DELE_PTR_FULL(ContinuousLoopB);
	DELE_PTR_FULL(ContinuousOut);
}

// Function Athena.AnimatedStepsComponent.StartOpening
// (Event, Public, BlueprintEvent)
void UAnimatedStepsComponent::StartOpening()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedStepsComponent.StartOpening");

	UAnimatedStepsComponent_StartOpening_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedStepsComponent.OpenImmediate
// (Event, Public, BlueprintCallable, BlueprintEvent)
void UAnimatedStepsComponent::OpenImmediate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedStepsComponent.OpenImmediate");

	UAnimatedStepsComponent_OpenImmediate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AnimatedStepsComponent.Close
// (Event, Public, BlueprintCallable, BlueprintEvent)
void UAnimatedStepsComponent::Close()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedStepsComponent.Close");

	UAnimatedStepsComponent_Close_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAnimatedStepsComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Mesh, UPoseableSkeletalMeshComponent);
}

void UAnimatedStepsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Mesh);
}

// Function Athena.AnimationDataOverriderComponent.OnRep_AnimationDataStoreAssetReference
// (Final, Native, Private)
void UAnimationDataOverriderComponent::OnRep_AnimationDataStoreAssetReference()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimationDataOverriderComponent.OnRep_AnimationDataStoreAssetReference");

	UAnimationDataOverriderComponent_OnRep_AnimationDataStoreAssetReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAnimationDataOverriderComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(AnimationDataStoreAsset, UAnimationDataStoreAsset);
}

void UAnimationDataOverriderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(AnimationDataStoreAsset);
}

void UAnimNotify_AthenaPlayParticleEffect::AfterRead()
{
	UAnimNotify::AfterRead();

	READ_PTR_FULL(PSTemplate, UObject);
}

void UAnimNotify_AthenaPlayParticleEffect::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

	DELE_PTR_FULL(PSTemplate);
}

void UAnimNotify_AthenaPlayParticleEffectWithOwnerCustomisation::AfterRead()
{
	UAnimNotify_AthenaPlayParticleEffect::AfterRead();

	READ_PTR_FULL(VfxCustomisationType, UClass);
}

void UAnimNotify_AthenaPlayParticleEffectWithOwnerCustomisation::BeforeDelete()
{
	UAnimNotify_AthenaPlayParticleEffect::BeforeDelete();

	DELE_PTR_FULL(VfxCustomisationType);
}

void UAnimNotify_CutSceneSubtitle::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_CutSceneSubtitle::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotify_DockableCutscene::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_DockableCutscene::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotify_RumbleController::AfterRead()
{
	UAnimNotify::AfterRead();

	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(ForceFeedbackCondition, UForceFeedbackCondition);
}

void UAnimNotify_RumbleController::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

	DELE_PTR_FULL(ForceFeedbackEffect);
	DELE_PTR_FULL(ForceFeedbackCondition);
}

void UAnimNotifyAdditionalEventsWwiseEmitterComponent::AfterRead()
{
	UAnimNotifyWwiseEmitterComponent::AfterRead();

}

void UAnimNotifyAdditionalEventsWwiseEmitterComponent::BeforeDelete()
{
	UAnimNotifyWwiseEmitterComponent::BeforeDelete();

}

void UAnimNotifyQuestBookForcePageRedraw::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotifyQuestBookForcePageRedraw::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UAnimNotifyState_AthenaTimedParticleEffect::AfterRead()
{
	UAnimNotifyState_TimedParticleEffect::AfterRead();

}

void UAnimNotifyState_AthenaTimedParticleEffect::BeforeDelete()
{
	UAnimNotifyState_TimedParticleEffect::BeforeDelete();

}

void UAnimNotifyStateQuestBookRenderingModeRequest::AfterRead()
{
	UAnimNotifyState::AfterRead();

}

void UAnimNotifyStateQuestBookRenderingModeRequest::BeforeDelete()
{
	UAnimNotifyState::BeforeDelete();

}

void UAnimNotifyStateQuestBookLeftSpreadCurrentRightSpreadNext::AfterRead()
{
	UAnimNotifyStateQuestBookRenderingModeRequest::AfterRead();

}

void UAnimNotifyStateQuestBookLeftSpreadCurrentRightSpreadNext::BeforeDelete()
{
	UAnimNotifyStateQuestBookRenderingModeRequest::BeforeDelete();

}

void UAnimNotifyStateQuestBookLeftSpreadPreviousRightSpreadCurrent::AfterRead()
{
	UAnimNotifyStateQuestBookRenderingModeRequest::AfterRead();

}

void UAnimNotifyStateQuestBookLeftSpreadPreviousRightSpreadCurrent::BeforeDelete()
{
	UAnimNotifyStateQuestBookRenderingModeRequest::BeforeDelete();

}

void UAnimNotifyTriggerPlaceableReaction::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotifyTriggerPlaceableReaction::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

void UApplicationSettings::AfterRead()
{
	UObject::AfterRead();

}

void UApplicationSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void AArenaVendorShip::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ArenaVendorShipRootComponent, USceneComponent);
	READ_PTR_FULL(ContestMerchantSpawnerComponent, UContestMerchantSpawnerComponent);
	READ_PTR_FULL(VendorShipWorldMarkerComponent, UGenericWorldMapMarker);
	READ_PTR_FULL(VendorDeadZoneComponent, USphereComponent);
}

void AArenaVendorShip::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ArenaVendorShipRootComponent);
	DELE_PTR_FULL(ContestMerchantSpawnerComponent);
	DELE_PTR_FULL(VendorShipWorldMarkerComponent);
	DELE_PTR_FULL(VendorDeadZoneComponent);
}

void UAshCloudAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UAshCloudAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UAshCloudAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UAshCloudAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UAshCloudAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

	READ_PTR_FULL(Owner, APawn);
	READ_PTR_FULL(SetupAbilityParams, UAshCloudAIAbilityParams);
	READ_PTR_FULL(AshCloudInstance, AAshenLordAshCloud);
}

void UAshCloudAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

	DELE_PTR_FULL(Owner);
	DELE_PTR_FULL(SetupAbilityParams);
	DELE_PTR_FULL(AshCloudInstance);
}

void UAshCloudAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

	READ_PTR_FULL(AshCloudClass, UClass);
}

void UAshCloudAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

	DELE_PTR_FULL(AshCloudClass);
}

// Function Athena.AshenLordAIFormComponent.OnRep_CachedNormalisedHealthScalar
// (Final, Native, Private)
void UAshenLordAIFormComponent::OnRep_CachedNormalisedHealthScalar()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AshenLordAIFormComponent.OnRep_CachedNormalisedHealthScalar");

	UAshenLordAIFormComponent_OnRep_CachedNormalisedHealthScalar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAshenLordAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

	READ_PTR_FULL(AshenLordVulnerabilityDamageAudioEvent, UWwiseEvent);
	READ_PTR_FULL(CameraShake, UClass);
	READ_PTR_FULL(AshenLordDynamicMaterialInstance, UMaterialInstanceDynamic);
}

void UAshenLordAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

	DELE_PTR_FULL(AshenLordVulnerabilityDamageAudioEvent);
	DELE_PTR_FULL(CameraShake);
	DELE_PTR_FULL(AshenLordDynamicMaterialInstance);
}

void UAssetListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAssetListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAssignItemStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UAssignItemStepDesc);
}

void UAssignItemStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UAssignItemStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(TypeValue, UClass);
}

void UAssignItemStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(TypeValue);
}

void ULoadoutRepairerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoadoutRepairerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAsyncLoadoutRepairComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAsyncLoadoutRepairComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.AthenaAIInteractableComponent.SetOwnerAITeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaAITeam> InOwner                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAIInteractableComponent::SetOwnerAITeam(TEnumAsByte<Athena_EAthenaAITeam> InOwner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAIInteractableComponent.SetOwnerAITeam");

	UAthenaAIInteractableComponent_SetOwnerAITeam_Params params;
	params.InOwner = InOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAIInteractableComponent.GetTriggerRegionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAIInteractableComponent::GetTriggerRegionRadius()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAIInteractableComponent.GetTriggerRegionRadius");

	UAthenaAIInteractableComponent_GetTriggerRegionRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAIInteractableComponent.GetTriggerRegionCenterPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UAthenaAIInteractableComponent::GetTriggerRegionCenterPoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAIInteractableComponent.GetTriggerRegionCenterPoint");

	UAthenaAIInteractableComponent_GetTriggerRegionCenterPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAIInteractableComponent.GetOwnerAITeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EAthenaAITeam> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAthenaAITeam> UAthenaAIInteractableComponent::GetOwnerAITeam()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAIInteractableComponent.GetOwnerAITeam");

	UAthenaAIInteractableComponent_GetOwnerAITeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAIInteractableComponent::AfterRead()
{
	UAIInteractableComponent::AfterRead();

}

void UAthenaAIInteractableComponent::BeforeDelete()
{
	UAIInteractableComponent::BeforeDelete();

}

// Function Athena.AthenaAITeamsServiceInterface.SetAITeamAttitude
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGenericTeamId          A                              (Parm)
// struct FGenericTeamId          B                              (Parm)
// TEnumAsByte<AIModule_ETeamAttitude> Attitude                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAITeamsServiceInterface::SetAITeamAttitude(const struct FGenericTeamId& A, const struct FGenericTeamId& B, TEnumAsByte<AIModule_ETeamAttitude> Attitude)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAITeamsServiceInterface.SetAITeamAttitude");

	UAthenaAITeamsServiceInterface_SetAITeamAttitude_Params params;
	params.A = A;
	params.B = B;
	params.Attitude = Attitude;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAITeamsServiceInterface.ResetAITeamAttitudes
// (Native, Public, BlueprintCallable)
void UAthenaAITeamsServiceInterface::ResetAITeamAttitudes()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAITeamsServiceInterface.ResetAITeamAttitudes");

	UAthenaAITeamsServiceInterface_ResetAITeamAttitudes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaAITeamsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaAITeamsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaAITeamsService::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaAITeamsService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaAnimationCustomSkeletonAnimationData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaAnimationCustomSkeletonAnimationData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.CharacterAnimationInterface.UnbindFromCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCharacterAnimationInterface::UnbindFromCharacter(class AAthenaCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAnimationInterface.UnbindFromCharacter");

	UCharacterAnimationInterface_UnbindFromCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterAnimationInterface.OnImpact
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ImpactLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 ImpactNormal                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_ECharacterHitReactionAnimType> HitReactionAnimType            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCharacterAnimationInterface::OnImpact(const struct FVector& ImpactLocation, const struct FVector& ImpactNormal, const struct FVector& ImpactVelocity, TEnumAsByte<Athena_ECharacterHitReactionAnimType> HitReactionAnimType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAnimationInterface.OnImpact");

	UCharacterAnimationInterface_OnImpact_Params params;
	params.ImpactLocation = ImpactLocation;
	params.ImpactNormal = ImpactNormal;
	params.ImpactVelocity = ImpactVelocity;
	params.HitReactionAnimType = HitReactionAnimType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterAnimationInterface.LoadCharacterAnimations
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  AnimDataId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UCharacterAnimationInterface::LoadCharacterAnimations(class UClass* AnimDataId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAnimationInterface.LoadCharacterAnimations");

	UCharacterAnimationInterface_LoadCharacterAnimations_Params params;
	params.AnimDataId = AnimDataId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterAnimationInterface.BindThirdPersonToCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  AnimDataId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UCharacterAnimationInterface::BindThirdPersonToCharacter(class AAthenaCharacter* Character, class UClass* AnimDataId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAnimationInterface.BindThirdPersonToCharacter");

	UCharacterAnimationInterface_BindThirdPersonToCharacter_Params params;
	params.Character = Character;
	params.AnimDataId = AnimDataId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterAnimationInterface.BindFirstPersonToCharacter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  AnimDataId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UCharacterAnimationInterface::BindFirstPersonToCharacter(class AAthenaCharacter* Character, class UClass* AnimDataId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAnimationInterface.BindFirstPersonToCharacter");

	UCharacterAnimationInterface_BindFirstPersonToCharacter_Params params;
	params.Character = Character;
	params.AnimDataId = AnimDataId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCharacterAnimationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterAnimationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AthenaAnimationLocomotionComponentFunctions.MarkRunStopComplete
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (Parm, OutParm, ReferenceParm)
void UAthenaAnimationLocomotionComponentFunctions::STATIC_MarkRunStopComplete(struct FAthenaAnimationLocomotion* Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.MarkRunStopComplete");

	UAthenaAnimationLocomotionComponentFunctions_MarkRunStopComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Locomotion != nullptr)
		*Locomotion = params.Locomotion;

}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetWantedMovementSpeed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationLocomotionComponentFunctions::STATIC_GetWantedMovementSpeed(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetWantedMovementSpeed");

	UAthenaAnimationLocomotionComponentFunctions_GetWantedMovementSpeed_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetVelocity
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UAthenaAnimationLocomotionComponentFunctions::STATIC_GetVelocity(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetVelocity");

	UAthenaAnimationLocomotionComponentFunctions_GetVelocity_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningLeft
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetTurningLeft(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningLeft");

	UAthenaAnimationLocomotionComponentFunctions_GetTurningLeft_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningActive
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetTurningActive(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningActive");

	UAthenaAnimationLocomotionComponentFunctions_GetTurningActive_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetRunStopWanted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetRunStopWanted(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetRunStopWanted");

	UAthenaAnimationLocomotionComponentFunctions_GetRunStopWanted_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsUnderwaterSwimming
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetIsUnderwaterSwimming(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsUnderwaterSwimming");

	UAthenaAnimationLocomotionComponentFunctions_GetIsUnderwaterSwimming_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsSwimming
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetIsSwimming(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsSwimming");

	UAthenaAnimationLocomotionComponentFunctions_GetIsSwimming_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsInAITurn
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetIsInAITurn(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsInAITurn");

	UAthenaAnimationLocomotionComponentFunctions_GetIsInAITurn_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentYaw
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationLocomotionComponentFunctions::STATIC_GetCurrentYaw(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentYaw");

	UAthenaAnimationLocomotionComponentFunctions_GetCurrentYaw_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentDirection
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationLocomotionComponentFunctions::STATIC_GetCurrentDirection(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentDirection");

	UAthenaAnimationLocomotionComponentFunctions_GetCurrentDirection_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCharacterMoving
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationLocomotionComponentFunctions::STATIC_GetCharacterMoving(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCharacterMoving");

	UAthenaAnimationLocomotionComponentFunctions_GetCharacterMoving_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetBlendedTurnRate
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationLocomotionComponentFunctions::STATIC_GetBlendedTurnRate(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetBlendedTurnRate");

	UAthenaAnimationLocomotionComponentFunctions_GetBlendedTurnRate_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationLocomotionComponentFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationLocomotionComponentFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaAnimationInstance.UpdateLoadedAnimations
// (Native, Public, BlueprintCallable)
void UAthenaAnimationInstance::UpdateLoadedAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.UpdateLoadedAnimations");

	UAthenaAnimationInstance_UpdateLoadedAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.UpdateItemComplexOneShotStructurePlaySpeeds
// (Final, Native, Public, BlueprintCallable)
void UAthenaAnimationInstance::UpdateItemComplexOneShotStructurePlaySpeeds()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.UpdateItemComplexOneShotStructurePlaySpeeds");

	UAthenaAnimationInstance_UpdateItemComplexOneShotStructurePlaySpeeds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.SetWieldedItemContinuousIsAlternate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaAnimationInstance::SetWieldedItemContinuousIsAlternate(bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.SetWieldedItemContinuousIsAlternate");

	UAthenaAnimationInstance_SetWieldedItemContinuousIsAlternate_Params params;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.SetUsePrimaryOneShotAnimationsFlag
// (Final, Native, Public)
// Parameters:
// bool                           InUsePrimary                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaAnimationInstance::SetUsePrimaryOneShotAnimationsFlag(bool InUsePrimary)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.SetUsePrimaryOneShotAnimationsFlag");

	UAthenaAnimationInstance_SetUsePrimaryOneShotAnimationsFlag_Params params;
	params.InUsePrimary = InUsePrimary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.SetUsePrimaryContinuousAnimationsFlag
// (Final, Native, Public)
// Parameters:
// bool                           InUsePrimary                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaAnimationInstance::SetUsePrimaryContinuousAnimationsFlag(bool InUsePrimary)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.SetUsePrimaryContinuousAnimationsFlag");

	UAthenaAnimationInstance_SetUsePrimaryContinuousAnimationsFlag_Params params;
	params.InUsePrimary = InUsePrimary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.SetLoadedItemAllAnimations
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationCoreObjectAnimations AllAnimationSet                (ConstParm, Parm, OutParm, ReferenceParm)
void UAthenaAnimationInstance::SetLoadedItemAllAnimations(const struct FAthenaAnimationCoreObjectAnimations& AllAnimationSet)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.SetLoadedItemAllAnimations");

	UAthenaAnimationInstance_SetLoadedItemAllAnimations_Params params;
	params.AllAnimationSet = AllAnimationSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.SetControllableSocketGroupCharacterSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Animation_EAthenaAnimationSocketGroupCharacterSize> InGroup                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationInstance::SetControllableSocketGroupCharacterSize(TEnumAsByte<Animation_EAthenaAnimationSocketGroupCharacterSize> InGroup)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.SetControllableSocketGroupCharacterSize");

	UAthenaAnimationInstance_SetControllableSocketGroupCharacterSize_Params params;
	params.InGroup = InGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.SetControllableSocketGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Animation_EAthenaAnimationSocketGroup> InGroup                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationInstance::SetControllableSocketGroup(TEnumAsByte<Animation_EAthenaAnimationSocketGroup> InGroup)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.SetControllableSocketGroup");

	UAthenaAnimationInstance_SetControllableSocketGroup_Params params;
	params.InGroup = InGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.PickItemOneShotSequencePitchOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UAthenaAnimationInstance::PickItemOneShotSequencePitchOverride()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.PickItemOneShotSequencePitchOverride");

	UAthenaAnimationInstance_PickItemOneShotSequencePitchOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.PickItemOneShotSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UAthenaAnimationInstance::PickItemOneShotSequence()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.PickItemOneShotSequence");

	UAthenaAnimationInstance_PickItemOneShotSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.NotRunningOnServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::NotRunningOnServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.NotRunningOnServer");

	UAthenaAnimationInstance_NotRunningOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.LoadAllItemAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UScriptStruct*           DestinationStruct              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  CharacterType                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<struct FAthenaAnimationLoadObjectsWrapper> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FAthenaAnimationLoadObjectsWrapper> UAthenaAnimationInstance::LoadAllItemAnimations(class AAthenaCharacter* Owner, class UScriptStruct* DestinationStruct, class UClass* CharacterType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.LoadAllItemAnimations");

	UAthenaAnimationInstance_LoadAllItemAnimations_Params params;
	params.Owner = Owner;
	params.DestinationStruct = DestinationStruct;
	params.CharacterType = CharacterType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.LeftItemBlockingFeedbackState
// (Final, Native, Public, BlueprintCallable)
void UAthenaAnimationInstance::LeftItemBlockingFeedbackState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.LeftItemBlockingFeedbackState");

	UAthenaAnimationInstance_LeftItemBlockingFeedbackState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.IsWieldedItemAPet
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::IsWieldedItemAPet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.IsWieldedItemAPet");

	UAthenaAnimationInstance_IsWieldedItemAPet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.InMeleeBlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::InMeleeBlock()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.InMeleeBlock");

	UAthenaAnimationInstance_InMeleeBlock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.InMeleeAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::InMeleeAttack()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.InMeleeAttack");

	UAthenaAnimationInstance_InMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.InitialiseCharacterAnimations
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  CharacterType                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UAthenaAnimationInstance::InitialiseCharacterAnimations(class AActor* Owner, class UClass* CharacterType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.InitialiseCharacterAnimations");

	UAthenaAnimationInstance_InitialiseCharacterAnimations_Params params;
	params.Owner = Owner;
	params.CharacterType = CharacterType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.GetWantsToReenterItemBlockingFeedback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::GetWantsToReenterItemBlockingFeedback()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetWantsToReenterItemBlockingFeedback");

	UAthenaAnimationInstance_GetWantsToReenterItemBlockingFeedback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetMeleeStrikeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EWieldableItemComplexOneShotAnimType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldableItemComplexOneShotAnimType> UAthenaAnimationInstance::GetMeleeStrikeType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetMeleeStrikeType");

	UAthenaAnimationInstance_GetMeleeStrikeType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLocomotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationLocomotion ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationLocomotion UAthenaAnimationInstance::GetLocomotion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLocomotion");

	UAthenaAnimationInstance_GetLocomotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemWieldedParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWieldAnimationParams   ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWieldAnimationParams UAthenaAnimationInstance::GetLoadedItemWieldedParams()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemWieldedParams");

	UAthenaAnimationInstance_GetLoadedItemWieldedParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryPitchOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::GetLoadedItemSecondaryPitchOverride()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryPitchOverride");

	UAthenaAnimationInstance_GetLoadedItemSecondaryPitchOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryContinuousAnimationsMain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           UseAlternate                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAthenaAnimationObjectActionContinuousStruct ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectActionContinuousStruct UAthenaAnimationInstance::GetLoadedItemSecondaryContinuousAnimationsMain(bool UseAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryContinuousAnimationsMain");

	UAthenaAnimationInstance_GetLoadedItemSecondaryContinuousAnimationsMain_Params params;
	params.UseAlternate = UseAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemRightHandOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform UAthenaAnimationInstance::GetLoadedItemRightHandOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemRightHandOffset");

	UAthenaAnimationInstance_GetLoadedItemRightHandOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryPitchOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::GetLoadedItemPrimaryPitchOverride()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryPitchOverride");

	UAthenaAnimationInstance_GetLoadedItemPrimaryPitchOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryContinuousAnimationsMain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           UseAlternate                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAthenaAnimationObjectActionContinuousStruct ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectActionContinuousStruct UAthenaAnimationInstance::GetLoadedItemPrimaryContinuousAnimationsMain(bool UseAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryContinuousAnimationsMain");

	UAthenaAnimationInstance_GetLoadedItemPrimaryContinuousAnimationsMain_Params params;
	params.UseAlternate = UseAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemLocomotionAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectLocomotionAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectLocomotionAnimations UAthenaAnimationInstance::GetLoadedItemLocomotionAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemLocomotionAnimations");

	UAthenaAnimationInstance_GetLoadedItemLocomotionAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemLeftHandOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform UAthenaAnimationInstance::GetLoadedItemLeftHandOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemLeftHandOffset");

	UAthenaAnimationInstance_GetLoadedItemLeftHandOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemJumpingAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectJumpingAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectJumpingAnimations UAthenaAnimationInstance::GetLoadedItemJumpingAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemJumpingAnimations");

	UAthenaAnimationInstance_GetLoadedItemJumpingAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemIsRangedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::GetLoadedItemIsRangedWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemIsRangedWeapon");

	UAthenaAnimationInstance_GetLoadedItemIsRangedWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemIdleAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectIdleAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectIdleAnimations UAthenaAnimationInstance::GetLoadedItemIdleAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemIdleAnimations");

	UAthenaAnimationInstance_GetLoadedItemIdleAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemHandAdditiveOverlayAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UAthenaAnimationInstance::GetLoadedItemHandAdditiveOverlayAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemHandAdditiveOverlayAnimation");

	UAthenaAnimationInstance_GetLoadedItemHandAdditiveOverlayAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemFishingAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationFishingAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationFishingAnimations UAthenaAnimationInstance::GetLoadedItemFishingAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemFishingAnimations");

	UAthenaAnimationInstance_GetLoadedItemFishingAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemFacialAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectFacial ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectFacial UAthenaAnimationInstance::GetLoadedItemFacialAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemFacialAnimations");

	UAthenaAnimationInstance_GetLoadedItemFacialAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemEquippingAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectEquipAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectEquipAnimations UAthenaAnimationInstance::GetLoadedItemEquippingAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemEquippingAnimations");

	UAthenaAnimationInstance_GetLoadedItemEquippingAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemAlternateLocomotionAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectLocomotionAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectLocomotionAnimations UAthenaAnimationInstance::GetLoadedItemAlternateLocomotionAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemAlternateLocomotionAnimations");

	UAthenaAnimationInstance_GetLoadedItemAlternateLocomotionAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemAlternateIdleAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectIdleAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectIdleAnimations UAthenaAnimationInstance::GetLoadedItemAlternateIdleAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemAlternateIdleAnimations");

	UAthenaAnimationInstance_GetLoadedItemAlternateIdleAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemAllAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationCoreObjectAnimations ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationCoreObjectAnimations UAthenaAnimationInstance::GetLoadedItemAllAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetLoadedItemAllAnimations");

	UAthenaAnimationInstance_GetLoadedItemAllAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetJumpingAnimationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EAthenaAnimationJumpingState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAthenaAnimationJumpingState> UAthenaAnimationInstance::GetJumpingAnimationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetJumpingAnimationState");

	UAthenaAnimationInstance_GetJumpingAnimationState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemUsePitchOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::GetItemUsePitchOverride()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemUsePitchOverride");

	UAthenaAnimationInstance_GetItemUsePitchOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemOneShotStructure
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           IsPrimary                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAthenaAnimationObjectActionOneShotPlayingStruct ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectActionOneShotPlayingStruct UAthenaAnimationInstance::GetItemOneShotStructure(bool IsPrimary, bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemOneShotStructure");

	UAthenaAnimationInstance_GetItemOneShotStructure_Params params;
	params.IsPrimary = IsPrimary;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemMeleeDodgeBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpace*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace* UAthenaAnimationInstance::GetItemMeleeDodgeBlendspace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemMeleeDodgeBlendspace");

	UAthenaAnimationInstance_GetItemMeleeDodgeBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemMeleeBlockingAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAthenaAnimationObjectMeleeBlocking ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectMeleeBlocking UAthenaAnimationInstance::GetItemMeleeBlockingAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemMeleeBlockingAnimations");

	UAthenaAnimationInstance_GetItemMeleeBlockingAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemContinuousStructure
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           IsPrimary                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAthenaAnimationObjectActionContinuousStruct ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectActionContinuousStruct UAthenaAnimationInstance::GetItemContinuousStructure(bool IsPrimary, bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemContinuousStructure");

	UAthenaAnimationInstance_GetItemContinuousStructure_Params params;
	params.IsPrimary = IsPrimary;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemComplexOneShotStructure
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EWieldableItemComplexOneShotLookUpType> ComplexOneShotLookUpType       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsSwimming                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           IsMoving                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int                            OneShotIndex                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAthenaAnimationObjectComplexOneShot ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectComplexOneShot UAthenaAnimationInstance::GetItemComplexOneShotStructure(TEnumAsByte<Athena_EWieldableItemComplexOneShotLookUpType> ComplexOneShotLookUpType, bool IsSwimming, bool IsMoving, int OneShotIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemComplexOneShotStructure");

	UAthenaAnimationInstance_GetItemComplexOneShotStructure_Params params;
	params.ComplexOneShotLookUpType = ComplexOneShotLookUpType;
	params.IsSwimming = IsSwimming;
	params.IsMoving = IsMoving;
	params.OneShotIndex = OneShotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemComplexOneShotSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EComplexOneShotSubState> ComplexOneShotSubState         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OneShotIndex                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequence*           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UAthenaAnimationInstance::GetItemComplexOneShotSequence(TEnumAsByte<Athena_EComplexOneShotSubState> ComplexOneShotSubState, int OneShotIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemComplexOneShotSequence");

	UAthenaAnimationInstance_GetItemComplexOneShotSequence_Params params;
	params.ComplexOneShotSubState = ComplexOneShotSubState;
	params.OneShotIndex = OneShotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemComplexOneShotPlaySpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           AnimSequence                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EComplexOneShotSubState> ComplexOneShotSubState         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationInstance::GetItemComplexOneShotPlaySpeed(class UAnimSequence* AnimSequence, TEnumAsByte<Athena_EComplexOneShotSubState> ComplexOneShotSubState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemComplexOneShotPlaySpeed");

	UAthenaAnimationInstance_GetItemComplexOneShotPlaySpeed_Params params;
	params.AnimSequence = AnimSequence;
	params.ComplexOneShotSubState = ComplexOneShotSubState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingSubState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EItemBlockingSubState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EItemBlockingSubState> UAthenaAnimationInstance::GetItemBlockingSubState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemBlockingSubState");

	UAthenaAnimationInstance_GetItemBlockingSubState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingMainOutOfAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UAthenaAnimationInstance::GetItemBlockingMainOutOfAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemBlockingMainOutOfAnimation");

	UAthenaAnimationInstance_GetItemBlockingMainOutOfAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingMainIntoAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UAthenaAnimationInstance::GetItemBlockingMainIntoAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemBlockingMainIntoAnimation");

	UAthenaAnimationInstance_GetItemBlockingMainIntoAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingMainBlendspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpace*             ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace* UAthenaAnimationInstance::GetItemBlockingMainBlendspace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemBlockingMainBlendspace");

	UAthenaAnimationInstance_GetItemBlockingMainBlendspace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingFeedbackSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UAthenaAnimationInstance::GetItemBlockingFeedbackSequence()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetItemBlockingFeedbackSequence");

	UAthenaAnimationInstance_GetItemBlockingFeedbackSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetInDockingTransition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstance::GetInDockingTransition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetInDockingTransition");

	UAthenaAnimationInstance_GetInDockingTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetCurrentEqippedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UAthenaAnimationInstance::GetCurrentEqippedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetCurrentEqippedItem");

	UAthenaAnimationInstance_GetCurrentEqippedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetControllableSocketGroupCharacterSize
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Animation_EAthenaAnimationSocketGroupCharacterSize> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Animation_EAthenaAnimationSocketGroupCharacterSize> UAthenaAnimationInstance::GetControllableSocketGroupCharacterSize()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetControllableSocketGroupCharacterSize");

	UAthenaAnimationInstance_GetControllableSocketGroupCharacterSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetControllableSocketGroup
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Animation_EAthenaAnimationSocketGroup> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Animation_EAthenaAnimationSocketGroup> UAthenaAnimationInstance::GetControllableSocketGroup()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetControllableSocketGroup");

	UAthenaAnimationInstance_GetControllableSocketGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetAnimationLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           Animation                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationInstance::GetAnimationLength(class UAnimSequence* Animation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.GetAnimationLength");

	UAthenaAnimationInstance_GetAnimationLength_Params params;
	params.Animation = Animation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.EnteredItemBlockingFeedbackState
// (Final, Native, Public, BlueprintCallable)
void UAthenaAnimationInstance::EnteredItemBlockingFeedbackState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.EnteredItemBlockingFeedbackState");

	UAthenaAnimationInstance_EnteredItemBlockingFeedbackState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationInstance.AdjustIdleTransition
// (Final, Native, Public, BlueprintCallable)
void UAthenaAnimationInstance::AdjustIdleTransition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstance.AdjustIdleTransition");

	UAthenaAnimationInstance_AdjustIdleTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaAnimationInstance::AfterRead()
{
	UCharacterAnimationInstance::AfterRead();

	READ_PTR_FULL(AthenaCharacter, AAthenaCharacter);
	READ_PTR_FULL(CurrentWieldedItemALK, UClass);
	READ_PTR_FULL(FishingRodAnimStoreID, UClass);
	READ_PTR_FULL(QuestBookAnimStoreID, UClass);
	READ_PTR_FULL(WoodenPlankAnimStoreID, UClass);
}

void UAthenaAnimationInstance::BeforeDelete()
{
	UCharacterAnimationInstance::BeforeDelete();

	DELE_PTR_FULL(AthenaCharacter);
	DELE_PTR_FULL(CurrentWieldedItemALK);
	DELE_PTR_FULL(FishingRodAnimStoreID);
	DELE_PTR_FULL(QuestBookAnimStoreID);
	DELE_PTR_FULL(WoodenPlankAnimStoreID);
}

// Function Athena.FirstPersonAnimationInstance.UpdateLoadedAnimations
// (Native, Public, BlueprintCallable)
void UFirstPersonAnimationInstance::UpdateLoadedAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FirstPersonAnimationInstance.UpdateLoadedAnimations");

	UFirstPersonAnimationInstance_UpdateLoadedAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FirstPersonAnimationInstance.SetFirstPersonAnimToPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequence*           AnimSequenceToPlay             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFirstPersonAnimationInstance::SetFirstPersonAnimToPlay(class UAnimSequence* AnimSequenceToPlay)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FirstPersonAnimationInstance.SetFirstPersonAnimToPlay");

	UFirstPersonAnimationInstance_SetFirstPersonAnimToPlay_Params params;
	params.AnimSequenceToPlay = AnimSequenceToPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FirstPersonAnimationInstance.LoadSpecificItemAnimations
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData                    (Parm, ZeroConstructor)
// class UClass*                  ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UFirstPersonAnimationInstance::LoadSpecificItemAnimations(TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData, class UClass* ItemId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FirstPersonAnimationInstance.LoadSpecificItemAnimations");

	UFirstPersonAnimationInstance_LoadSpecificItemAnimations_Params params;
	params.AllItemData = AllItemData;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FirstPersonAnimationInstance.FirstPersonAnimaticFinished
// (Final, Native, Public, BlueprintCallable)
void UFirstPersonAnimationInstance::FirstPersonAnimaticFinished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FirstPersonAnimationInstance.FirstPersonAnimaticFinished");

	UFirstPersonAnimationInstance_FirstPersonAnimaticFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFirstPersonAnimationInstance::AfterRead()
{
	UAthenaAnimationInstance::AfterRead();

}

void UFirstPersonAnimationInstance::BeforeDelete()
{
	UAthenaAnimationInstance::BeforeDelete();

}

// Function Athena.ThirdPersonAnimationInstance.UpdateSkeletonFleeingAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ObjectId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UThirdPersonAnimationInstance::UpdateSkeletonFleeingAnimations(class UClass* ObjectId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.UpdateSkeletonFleeingAnimations");

	UThirdPersonAnimationInstance_UpdateSkeletonFleeingAnimations_Params params;
	params.ObjectId = ObjectId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.UpdatePitchOverrideAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsPrimary                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UThirdPersonAnimationInstance::UpdatePitchOverrideAnimation(bool IsPrimary)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.UpdatePitchOverrideAnimation");

	UThirdPersonAnimationInstance_UpdatePitchOverrideAnimation_Params params;
	params.IsPrimary = IsPrimary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.UpdateLoadedAnimations
// (Native, Public, BlueprintCallable)
void UThirdPersonAnimationInstance::UpdateLoadedAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.UpdateLoadedAnimations");

	UThirdPersonAnimationInstance_UpdateLoadedAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.UpdateAISpawnAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Owner                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ObjectId                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<AthenaAI_EAthenaAISpawnType> SpawnType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           QuickSpawn                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UThirdPersonAnimationInstance::UpdateAISpawnAnimation(class AAthenaCharacter* Owner, class UClass* ObjectId, TEnumAsByte<AthenaAI_EAthenaAISpawnType> SpawnType, bool QuickSpawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.UpdateAISpawnAnimation");

	UThirdPersonAnimationInstance_UpdateAISpawnAnimation_Params params;
	params.Owner = Owner;
	params.ObjectId = ObjectId;
	params.SpawnType = SpawnType;
	params.QuickSpawn = QuickSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.TriggerSensingAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ESkeletonSensingState> NewSensingState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UThirdPersonAnimationInstance::TriggerSensingAnimation(TEnumAsByte<Athena_ESkeletonSensingState> NewSensingState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.TriggerSensingAnimation");

	UThirdPersonAnimationInstance_TriggerSensingAnimation_Params params;
	params.NewSensingState = NewSensingState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.TriggerEmoteActionAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ESkeletonEmoteActionState> EmoteActionState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UThirdPersonAnimationInstance::TriggerEmoteActionAnimation(TEnumAsByte<Athena_ESkeletonEmoteActionState> EmoteActionState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.TriggerEmoteActionAnimation");

	UThirdPersonAnimationInstance_TriggerEmoteActionAnimation_Params params;
	params.EmoteActionState = EmoteActionState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.StopMeleeStanceChange
// (Final, Native, Public, BlueprintCallable)
void UThirdPersonAnimationInstance::StopMeleeStanceChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.StopMeleeStanceChange");

	UThirdPersonAnimationInstance_StopMeleeStanceChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.StartMeleeStanceChange
// (Final, Native, Public, BlueprintCallable)
void UThirdPersonAnimationInstance::StartMeleeStanceChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.StartMeleeStanceChange");

	UThirdPersonAnimationInstance_StartMeleeStanceChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.SetLocomotionTypeActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ELocomotionType> LocomotionType                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Active                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UThirdPersonAnimationInstance::SetLocomotionTypeActive(TEnumAsByte<Athena_ELocomotionType> LocomotionType, bool Active)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.SetLocomotionTypeActive");

	UThirdPersonAnimationInstance_SetLocomotionTypeActive_Params params;
	params.LocomotionType = LocomotionType;
	params.Active = Active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.SetFullBodyOverlayPoseDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsDisabled                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UThirdPersonAnimationInstance::SetFullBodyOverlayPoseDisabled(bool IsDisabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.SetFullBodyOverlayPoseDisabled");

	UThirdPersonAnimationInstance_SetFullBodyOverlayPoseDisabled_Params params;
	params.IsDisabled = IsDisabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.SetEmoteStateActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsActive                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UThirdPersonAnimationInstance::SetEmoteStateActive(bool IsActive)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.SetEmoteStateActive");

	UThirdPersonAnimationInstance_SetEmoteStateActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.SelectSkeletonFleeingVariationAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UThirdPersonAnimationInstance::SelectSkeletonFleeingVariationAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.SelectSkeletonFleeingVariationAnimation");

	UThirdPersonAnimationInstance_SelectSkeletonFleeingVariationAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.RemoveActiveEmote
// (Final, Native, Public, BlueprintCallable)
void UThirdPersonAnimationInstance::RemoveActiveEmote()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.RemoveActiveEmote");

	UThirdPersonAnimationInstance_RemoveActiveEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.OnEventAllocateShopInteractionAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Owner                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Active                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Interaction_EInteractionObject> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UThirdPersonAnimationInstance::OnEventAllocateShopInteractionAnimations(class AAthenaCharacter* Owner, bool Active, TEnumAsByte<Interaction_EInteractionObject> Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.OnEventAllocateShopInteractionAnimations");

	UThirdPersonAnimationInstance_OnEventAllocateShopInteractionAnimations_Params params;
	params.Owner = Owner;
	params.Active = Active;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.LoadSpecificItemAnimations
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData                    (Parm, ZeroConstructor)
// class UClass*                  ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UThirdPersonAnimationInstance::LoadSpecificItemAnimations(TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData, class UClass* ItemId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.LoadSpecificItemAnimations");

	UThirdPersonAnimationInstance_LoadSpecificItemAnimations_Params params;
	params.AllItemData = AllItemData;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.GetTargetingPitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UThirdPersonAnimationInstance::GetTargetingPitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetTargetingPitch");

	UThirdPersonAnimationInstance_GetTargetingPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_LungeWarmupLocomotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace* UThirdPersonAnimationInstance::GetLoadedItemMeleeAnimations_LungeWarmupLocomotion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_LungeWarmupLocomotion");

	UThirdPersonAnimationInstance_GetLoadedItemMeleeAnimations_LungeWarmupLocomotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotionTurnOut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UThirdPersonAnimationInstance::GetLoadedItemMeleeAnimations_CombatLocomotionTurnOut()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotionTurnOut");

	UThirdPersonAnimationInstance_GetLoadedItemMeleeAnimations_CombatLocomotionTurnOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotionTurningRight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UThirdPersonAnimationInstance::GetLoadedItemMeleeAnimations_CombatLocomotionTurningRight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotionTurningRight");

	UThirdPersonAnimationInstance_GetLoadedItemMeleeAnimations_CombatLocomotionTurningRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotionTurningLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UThirdPersonAnimationInstance::GetLoadedItemMeleeAnimations_CombatLocomotionTurningLeft()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotionTurningLeft");

	UThirdPersonAnimationInstance_GetLoadedItemMeleeAnimations_CombatLocomotionTurningLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace* UThirdPersonAnimationInstance::GetLoadedItemMeleeAnimations_CombatLocomotion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetLoadedItemMeleeAnimations_CombatLocomotion");

	UThirdPersonAnimationInstance_GetLoadedItemMeleeAnimations_CombatLocomotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetItemOneShotStructurePitchOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           IsPrimary                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAthenaAnimationObjectActionOneShotPlayingStructPitchOverride ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectActionOneShotPlayingStructPitchOverride UThirdPersonAnimationInstance::GetItemOneShotStructurePitchOverride(bool IsPrimary, bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetItemOneShotStructurePitchOverride");

	UThirdPersonAnimationInstance_GetItemOneShotStructurePitchOverride_Params params;
	params.IsPrimary = IsPrimary;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetItemContinuousStructurePitchOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           IsPrimary                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FAthenaAnimationObjectActionContinuousStructPitchOverride ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAthenaAnimationObjectActionContinuousStructPitchOverride UThirdPersonAnimationInstance::GetItemContinuousStructurePitchOverride(bool IsPrimary, bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetItemContinuousStructurePitchOverride");

	UThirdPersonAnimationInstance_GetItemContinuousStructurePitchOverride_Params params;
	params.IsPrimary = IsPrimary;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetCurrentLocomotionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_ELocomotionType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_ELocomotionType> UThirdPersonAnimationInstance::GetCurrentLocomotionType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetCurrentLocomotionType");

	UThirdPersonAnimationInstance_GetCurrentLocomotionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetCharacterPitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UThirdPersonAnimationInstance::GetCharacterPitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetCharacterPitch");

	UThirdPersonAnimationInstance_GetCharacterPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetAIKnockbackAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UThirdPersonAnimationInstance::GetAIKnockbackAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.GetAIKnockbackAnimation");

	UThirdPersonAnimationInstance_GetAIKnockbackAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.AllocateNewTauntCheerVariant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsPrimary                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_ESkeletonEmoteActionState> EmoteActionState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UThirdPersonAnimationInstance::AllocateNewTauntCheerVariant(bool IsPrimary, TEnumAsByte<Athena_ESkeletonEmoteActionState> EmoteActionState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.AllocateNewTauntCheerVariant");

	UThirdPersonAnimationInstance_AllocateNewTauntCheerVariant_Params params;
	params.IsPrimary = IsPrimary;
	params.EmoteActionState = EmoteActionState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.AllocateNewShipCaptainIdleVariant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsIdleStateA                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UThirdPersonAnimationInstance::AllocateNewShipCaptainIdleVariant(bool IsIdleStateA)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.AllocateNewShipCaptainIdleVariant");

	UThirdPersonAnimationInstance_AllocateNewShipCaptainIdleVariant_Params params;
	params.IsIdleStateA = IsIdleStateA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ThirdPersonAnimationInstance.AllocateNewRandomContinuousEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsSlotA                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UThirdPersonAnimationInstance::AllocateNewRandomContinuousEmote(bool IsSlotA)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ThirdPersonAnimationInstance.AllocateNewRandomContinuousEmote");

	UThirdPersonAnimationInstance_AllocateNewRandomContinuousEmote_Params params;
	params.IsSlotA = IsSlotA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UThirdPersonAnimationInstance::AfterRead()
{
	UAthenaAnimationInstance::AfterRead();

	READ_PTR_FULL(PitchAnimationToPlay, UBlendSpace1D);
	READ_PTR_FULL(HitReactItem, UBlendSpace1D);
}

void UThirdPersonAnimationInstance::BeforeDelete()
{
	UAthenaAnimationInstance::BeforeDelete();

	DELE_PTR_FULL(PitchAnimationToPlay);
	DELE_PTR_FULL(HitReactItem);
}

// Function Athena.SkeletonAnimationInstance.UseHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EAthenaNPCObjectSlot> ObjectSlot                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USkeletonAnimationInstance::UseHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand, TEnumAsByte<Athena_EAthenaNPCObjectSlot> ObjectSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.UseHeldObject");

	USkeletonAnimationInstance_UseHeldObject_Params params;
	params.SpawnHand = SpawnHand;
	params.ObjectSlot = ObjectSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkeletonAnimationInstance.StopAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          BlendOutTime                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USkeletonAnimationInstance::StopAnimation(float BlendOutTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.StopAnimation");

	USkeletonAnimationInstance_StopAnimation_Params params;
	params.BlendOutTime = BlendOutTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkeletonAnimationInstance.SetNewCustomAnimationLoopingSequence
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsLoopA                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FName                   SequenceName                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool USkeletonAnimationInstance::SetNewCustomAnimationLoopingSequence(bool IsLoopA, const struct FName& SequenceName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.SetNewCustomAnimationLoopingSequence");

	USkeletonAnimationInstance_SetNewCustomAnimationLoopingSequence_Params params;
	params.IsLoopA = IsLoopA;
	params.SequenceName = SequenceName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SkeletonAnimationInstance.GetCurrentMontagePosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USkeletonAnimationInstance::GetCurrentMontagePosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.GetCurrentMontagePosition");

	USkeletonAnimationInstance_GetCurrentMontagePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SkeletonAnimationInstance.DetachHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USkeletonAnimationInstance::DetachHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.DetachHeldObject");

	USkeletonAnimationInstance_DetachHeldObject_Params params;
	params.SpawnHand = SpawnHand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkeletonAnimationInstance.DestroyHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USkeletonAnimationInstance::DestroyHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.DestroyHeldObject");

	USkeletonAnimationInstance_DestroyHeldObject_Params params;
	params.SpawnHand = SpawnHand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkeletonAnimationInstance.AttachHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USkeletonAnimationInstance::AttachHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonAnimationInstance.AttachHeldObject");

	USkeletonAnimationInstance_AttachHeldObject_Params params;
	params.SpawnHand = SpawnHand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USkeletonAnimationInstance::AfterRead()
{
	UThirdPersonAnimationInstance::AfterRead();

	READ_PTR_FULL(HeldObjectList, UNPCHeldObjectData);
	READ_PTR_FULL(LeftHandObject, AActor);
	READ_PTR_FULL(RightHandObject, AActor);
	READ_PTR_FULL(CustomAnimationData, UAthenaAnimationCustomSkeletonAnimationData);
	READ_PTR_FULL(CustomAnimationCurrentMontage, UAnimMontage);
}

void USkeletonAnimationInstance::BeforeDelete()
{
	UThirdPersonAnimationInstance::BeforeDelete();

	DELE_PTR_FULL(HeldObjectList);
	DELE_PTR_FULL(LeftHandObject);
	DELE_PTR_FULL(RightHandObject);
	DELE_PTR_FULL(CustomAnimationData);
	DELE_PTR_FULL(CustomAnimationCurrentMontage);
}

// Function Athena.AthenaAnimationInstanceTestFunctions.IsStateActiveOnAnimationInstance
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* AnimationInstance              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InStatePathName                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationInstanceTestFunctions::STATIC_IsStateActiveOnAnimationInstance(class UAthenaAnimationInstance* AnimationInstance, const struct FName& InStatePathName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstanceTestFunctions.IsStateActiveOnAnimationInstance");

	UAthenaAnimationInstanceTestFunctions_IsStateActiveOnAnimationInstance_Params params;
	params.AnimationInstance = AnimationInstance;
	params.InStatePathName = InStatePathName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstanceTestFunctions.GetActiveStatesOnAnimationInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* AnimationInstance              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FName> UAthenaAnimationInstanceTestFunctions::STATIC_GetActiveStatesOnAnimationInstance(class UAthenaAnimationInstance* AnimationInstance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationInstanceTestFunctions.GetActiveStatesOnAnimationInstance");

	UAthenaAnimationInstanceTestFunctions_GetActiveStatesOnAnimationInstance_Params params;
	params.AnimationInstance = AnimationInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationInstanceTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationInstanceTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaAnimationMountedWeaponBlueprintFunctions.SetFireFinished
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationMountedWeapon MountedWeapon                  (Parm, OutParm, ReferenceParm)
void UAthenaAnimationMountedWeaponBlueprintFunctions::STATIC_SetFireFinished(struct FAthenaAnimationMountedWeapon* MountedWeapon)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationMountedWeaponBlueprintFunctions.SetFireFinished");

	UAthenaAnimationMountedWeaponBlueprintFunctions_SetFireFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MountedWeapon != nullptr)
		*MountedWeapon = params.MountedWeapon;

}


void UAthenaAnimationMountedWeaponBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationMountedWeaponBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateThirdPersonArmOverlayFlags
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 SourceString                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
void UAthenaAnimationWieldedItemAnimationOverlayFunctions::STATIC_UpdateThirdPersonArmOverlayFlags(class UAthenaAnimationInstance* Owner, const struct FString& SourceString, const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateThirdPersonArmOverlayFlags");

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_UpdateThirdPersonArmOverlayFlags_Params params;
	params.Owner = Owner;
	params.SourceString = SourceString;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateFirstPersonArmOverlayFlags
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 SourceString                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FAthenaAnimationLocomotion Locomotion                     (ConstParm, Parm, OutParm, ReferenceParm)
void UAthenaAnimationWieldedItemAnimationOverlayFunctions::STATIC_UpdateFirstPersonArmOverlayFlags(class UAthenaAnimationInstance* Owner, const struct FString& SourceString, const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateFirstPersonArmOverlayFlags");

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_UpdateFirstPersonArmOverlayFlags_Params params;
	params.Owner = Owner;
	params.SourceString = SourceString;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateAnimOverlayParameters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EArmOverlayState> ArmOverlayState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ThirdPersonAnimgraph           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaAnimationWieldedItemAnimationOverlayFunctions::STATIC_UpdateAnimOverlayParameters(class UAthenaAnimationInstance* Owner, TEnumAsByte<Athena_EArmOverlayState> ArmOverlayState, bool ThirdPersonAnimgraph)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateAnimOverlayParameters");

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_UpdateAnimOverlayParameters_Params params;
	params.Owner = Owner;
	params.ArmOverlayState = ArmOverlayState;
	params.ThirdPersonAnimgraph = ThirdPersonAnimgraph;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.StopFacialAnimationMontage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*            MontageToStop                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          BlendTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EFacialPriority> Priority                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationWieldedItemAnimationOverlayFunctions::STATIC_StopFacialAnimationMontage(class UAthenaAnimationInstance* Owner, class UAnimMontage* MontageToStop, float BlendTime, TEnumAsByte<Athena_EFacialPriority> Priority)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.StopFacialAnimationMontage");

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_StopFacialAnimationMontage_Params params;
	params.Owner = Owner;
	params.MontageToStop = MontageToStop;
	params.BlendTime = BlendTime;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.PlayNewFacialAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*            MontageToPlay                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MontagePlayRate                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EFacialPriority> Priority                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationWieldedItemAnimationOverlayFunctions::STATIC_PlayNewFacialAnimation(class UAthenaAnimationInstance* Owner, class UAnimMontage* MontageToPlay, float MontagePlayRate, TEnumAsByte<Athena_EFacialPriority> Priority)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.PlayNewFacialAnimation");

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_PlayNewFacialAnimation_Params params;
	params.Owner = Owner;
	params.MontageToPlay = MontageToPlay;
	params.MontagePlayRate = MontagePlayRate;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.JumpToFacialAnimationMontageSection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*            PlayingMontage                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   MontageSection                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EFacialPriority> Priority                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationWieldedItemAnimationOverlayFunctions::STATIC_JumpToFacialAnimationMontageSection(class UAthenaAnimationInstance* Owner, class UAnimMontage* PlayingMontage, const struct FName& MontageSection, TEnumAsByte<Athena_EFacialPriority> Priority)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.JumpToFacialAnimationMontageSection");

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_JumpToFacialAnimationMontageSection_Params params;
	params.Owner = Owner;
	params.PlayingMontage = PlayingMontage;
	params.MontageSection = MontageSection;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationWieldedItemAnimationOverlayFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationWieldedItemAnimationOverlayFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseSwimmingAnimationBlendSpace
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAthenaAnimationInstance* AnimInstance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EContinuousUseOverride> Override                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBlendSpace*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace* UAthenaAnimationWieldedItemFunctions::STATIC_GetIntoContinuousUseSwimmingAnimationBlendSpace(class UAthenaAnimationInstance* AnimInstance, TEnumAsByte<Athena_EContinuousUseOverride> Override, bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseSwimmingAnimationBlendSpace");

	UAthenaAnimationWieldedItemFunctions_GetIntoContinuousUseSwimmingAnimationBlendSpace_Params params;
	params.AnimInstance = AnimInstance;
	params.Override = Override;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseAnimationSequence
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAthenaAnimationInstance* AnimInstance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EContinuousUseOverride> Override                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsAlternate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimSequenceBase*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequenceBase* UAthenaAnimationWieldedItemFunctions::STATIC_GetIntoContinuousUseAnimationSequence(class UAthenaAnimationInstance* AnimInstance, TEnumAsByte<Athena_EContinuousUseOverride> Override, bool IsAlternate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseAnimationSequence");

	UAthenaAnimationWieldedItemFunctions_GetIntoContinuousUseAnimationSequence_Params params;
	params.AnimInstance = AnimInstance;
	params.Override = Override;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationWieldedItemFunctions::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaAnimationWieldedItemFunctions::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaAssetSettings::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaAssetSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.AthenaCameraComponent.GetIsUnderwater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCameraComponent::GetIsUnderwater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCameraComponent.GetIsUnderwater");

	UAthenaCameraComponent_GetIsUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCameraComponent.Activate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bReset                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaCameraComponent::Activate(bool bReset)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCameraComponent.Activate");

	UAthenaCameraComponent_Activate_Params params;
	params.bReset = bReset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaCameraComponent::AfterRead()
{
	UCameraComponent::AfterRead();

}

void UAthenaCameraComponent::BeforeDelete()
{
	UCameraComponent::BeforeDelete();

}

// Function Athena.CustomAnimationHandlerComponent.OnRep_RequestedLoopingAnim
// (Final, Native, Private)
void UCustomAnimationHandlerComponent::OnRep_RequestedLoopingAnim()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomAnimationHandlerComponent.OnRep_RequestedLoopingAnim");

	UCustomAnimationHandlerComponent_OnRep_RequestedLoopingAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomAnimationHandlerComponent.OnRep_CurrentCustomAnimationDataAssetReferences
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TArray<struct FStringAssetReference> PrevCurrentCustomAnimationDataAssetReferences (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UCustomAnimationHandlerComponent::OnRep_CurrentCustomAnimationDataAssetReferences(TArray<struct FStringAssetReference> PrevCurrentCustomAnimationDataAssetReferences)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomAnimationHandlerComponent.OnRep_CurrentCustomAnimationDataAssetReferences");

	UCustomAnimationHandlerComponent_OnRep_CurrentCustomAnimationDataAssetReferences_Params params;
	params.PrevCurrentCustomAnimationDataAssetReferences = PrevCurrentCustomAnimationDataAssetReferences;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomAnimationHandlerComponent.Multicast_StopCurrentAudio
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void UCustomAnimationHandlerComponent::Multicast_StopCurrentAudio()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomAnimationHandlerComponent.Multicast_StopCurrentAudio");

	UCustomAnimationHandlerComponent_Multicast_StopCurrentAudio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomAnimationHandlerComponent.Multicast_PlayOneShotAnim
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FName                   AnimName                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           StopCurrentLoopingAnimation    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCustomAnimationHandlerComponent::Multicast_PlayOneShotAnim(const struct FName& AnimName, bool StopCurrentLoopingAnimation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomAnimationHandlerComponent.Multicast_PlayOneShotAnim");

	UCustomAnimationHandlerComponent_Multicast_PlayOneShotAnim_Params params;
	params.AnimName = AnimName;
	params.StopCurrentLoopingAnimation = StopCurrentLoopingAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomAnimationHandlerComponent.Multicast_PlayAudio
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int                            AudioEventIdx                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCustomAnimationHandlerComponent::Multicast_PlayAudio(int AudioEventIdx)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomAnimationHandlerComponent.Multicast_PlayAudio");

	UCustomAnimationHandlerComponent_Multicast_PlayAudio_Params params;
	params.AudioEventIdx = AudioEventIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomAnimationHandlerComponent.AddLoadedCustomAnimationDataAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaAnimationCustomSkeletonAnimationData* InCurrentCustomAnimationData   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCustomAnimationHandlerComponent::AddLoadedCustomAnimationDataAsset(class UAthenaAnimationCustomSkeletonAnimationData* InCurrentCustomAnimationData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomAnimationHandlerComponent.AddLoadedCustomAnimationDataAsset");

	UCustomAnimationHandlerComponent_AddLoadedCustomAnimationDataAsset_Params params;
	params.InCurrentCustomAnimationData = InCurrentCustomAnimationData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCustomAnimationHandlerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MergedCustomAnimationData, UAthenaAnimationCustomSkeletonAnimationData);
}

void UCustomAnimationHandlerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MergedCustomAnimationData);
}

void UHitDetectionVisualisationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHitDetectionVisualisationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UVenomSource::AfterRead()
{
	UObject::AfterRead();

}

void UVenomSource::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UVenomableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVenomableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ATutorialEventControlledObject::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ActivationSfx, UWwiseEvent);
	READ_PTR_FULL(FullyActivatedSfx, UWwiseEvent);
	READ_PTR_FULL(DeactivationSfx, UWwiseEvent);
	READ_PTR_FULL(FullyDeactivatedSfx, UWwiseEvent);
	READ_PTR_FULL(RegisteredController, AAthenaPlayerController);
}

void ATutorialEventControlledObject::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ActivationSfx);
	DELE_PTR_FULL(FullyActivatedSfx);
	DELE_PTR_FULL(DeactivationSfx);
	DELE_PTR_FULL(FullyDeactivatedSfx);
	DELE_PTR_FULL(RegisteredController);
}

void ATutorialFootsteps::AfterRead()
{
	ATutorialEventControlledObject::AfterRead();

	READ_PTR_FULL(LeftFootprint, UMaterialInstance);
	READ_PTR_FULL(RightFootprint, UMaterialInstance);
	READ_PTR_FULL(FootstepDataID, UFootstepIDAsset);
	READ_PTR_FULL(SplineComponent, USplineComponent);
	READ_PTR_FULL(DecalComponentLeft, UDecalComponent);
	READ_PTR_FULL(DecalComponentRight, UDecalComponent);
}

void ATutorialFootsteps::BeforeDelete()
{
	ATutorialEventControlledObject::BeforeDelete();

	DELE_PTR_FULL(LeftFootprint);
	DELE_PTR_FULL(RightFootprint);
	DELE_PTR_FULL(FootstepDataID);
	DELE_PTR_FULL(SplineComponent);
	DELE_PTR_FULL(DecalComponentLeft);
	DELE_PTR_FULL(DecalComponentRight);
}

void UFortItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

}

void UFortItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

}

// Function Athena.FOVHandlerFunctions.SetTargetFOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          TargetFOV                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFOVHandlerFunctions::STATIC_SetTargetFOV(class AAthenaPlayerCharacter* Character, float TargetFOV)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.SetTargetFOV");

	UFOVHandlerFunctions_SetTargetFOV_Params params;
	params.Character = Character;
	params.TargetFOV = TargetFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FOVHandlerFunctions.SetBlendSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          BlendSpeed                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFOVHandlerFunctions::STATIC_SetBlendSpeed(class AAthenaPlayerCharacter* Character, float BlendSpeed)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.SetBlendSpeed");

	UFOVHandlerFunctions_SetBlendSpeed_Params params;
	params.Character = Character;
	params.BlendSpeed = BlendSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FOVHandlerFunctions.ResetToDefault
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFOVHandlerFunctions::STATIC_ResetToDefault(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.ResetToDefault");

	UFOVHandlerFunctions_ResetToDefault_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FOVHandlerFunctions.GetTargetFOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UFOVHandlerFunctions::STATIC_GetTargetFOV(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.GetTargetFOV");

	UFOVHandlerFunctions_GetTargetFOV_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FOVHandlerFunctions.GetDefaultTargetFOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UFOVHandlerFunctions::STATIC_GetDefaultTargetFOV(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.GetDefaultTargetFOV");

	UFOVHandlerFunctions_GetDefaultTargetFOV_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FOVHandlerFunctions.GetDefaultFOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UFOVHandlerFunctions::STATIC_GetDefaultFOV(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.GetDefaultFOV");

	UFOVHandlerFunctions_GetDefaultFOV_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FOVHandlerFunctions.GetBlendSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UFOVHandlerFunctions::STATIC_GetBlendSpeed(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FOVHandlerFunctions.GetBlendSpeed");

	UFOVHandlerFunctions_GetBlendSpeed_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFOVHandlerFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UFOVHandlerFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UItemActionEffect::AfterRead()
{
	UObject::AfterRead();

}

void UItemActionEffect::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFOVHandlerItemActionEffect::AfterRead()
{
	UItemActionEffect::AfterRead();

}

void UFOVHandlerItemActionEffect::BeforeDelete()
{
	UItemActionEffect::BeforeDelete();

}

void UFragileComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(FragileComponentDataAsset, UFragileComponentDataAsset);
}

void UFragileComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(FragileComponentDataAsset);
}

void UFragileComponentDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DropDistanceToDamageCurve, UCurveFloat);
	READ_PTR_FULL(FallSpeedToDamageCurve, UCurveFloat);
	READ_PTR_FULL(DamageSound, UWwiseEvent);
	READ_PTR_FULL(DamageVfx, UObject);
}

void UFragileComponentDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DropDistanceToDamageCurve);
	DELE_PTR_FULL(FallSpeedToDamageCurve);
	DELE_PTR_FULL(DamageSound);
	DELE_PTR_FULL(DamageVfx);
}

// Function Athena.FrontendCameraComponent.SetMapTablePlaybackRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InPlaybackRate                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFrontendCameraComponent::SetMapTablePlaybackRate(float InPlaybackRate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendCameraComponent.SetMapTablePlaybackRate");

	UFrontendCameraComponent_SetMapTablePlaybackRate_Params params;
	params.InPlaybackRate = InPlaybackRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FrontendCameraComponent.RequestAdvanceBootflow
// (Final, Native, Public, BlueprintCallable, Const)
void UFrontendCameraComponent::RequestAdvanceBootflow()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendCameraComponent.RequestAdvanceBootflow");

	UFrontendCameraComponent_RequestAdvanceBootflow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FrontendCameraComponent.ArenaTutorialAnimationFinished
// (Final, Native, Public, BlueprintCallable, Const)
void UFrontendCameraComponent::ArenaTutorialAnimationFinished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendCameraComponent.ArenaTutorialAnimationFinished");

	UFrontendCameraComponent_ArenaTutorialAnimationFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFrontendCameraComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UFrontendCameraComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.FrontendGameMode.BeginPreloading
// (Final, Native, Public, BlueprintCallable)
void AFrontendGameMode::BeginPreloading()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendGameMode.BeginPreloading");

	AFrontendGameMode_BeginPreloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFrontendGameMode::AfterRead()
{
	AGameMode::AfterRead();

}

void AFrontendGameMode::BeforeDelete()
{
	AGameMode::BeforeDelete();

}

// Function Athena.FuseComponent.TriggerFuse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Ignite                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFuseComponent::TriggerFuse(bool Ignite, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FuseComponent.TriggerFuse");

	UFuseComponent_TriggerFuse_Params params;
	params.Ignite = Ignite;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FuseComponent.Server_RequestEnableFuse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFuseComponent::Server_RequestEnableFuse(bool Enabled, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FuseComponent.Server_RequestEnableFuse");

	UFuseComponent_Server_RequestEnableFuse_Params params;
	params.Enabled = Enabled;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FuseComponent.OnRep_FuseEnabled
// (Final, Native, Private)
void UFuseComponent::OnRep_FuseEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FuseComponent.OnRep_FuseEnabled");

	UFuseComponent_OnRep_FuseEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FuseComponent.GetIsActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UFuseComponent::GetIsActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FuseComponent.GetIsActive");

	UFuseComponent_GetIsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFuseComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(EnableInputNotification, UClass);
	READ_PTR_FULL(DisableInputNotification, UClass);
	READ_PTR_FULL(FuseSoundWisePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(FuseActivateSoundPlayEvent, UWwiseEvent);
	READ_PTR_FULL(FuseSoundPlayEvent, UWwiseEvent);
	READ_PTR_FULL(FuseSoundStopEvent, UWwiseEvent);
	READ_PTR_FULL(FuseParticleSystem, UObject);
	READ_PTR_FULL(FuseInstigator, AActor);
	READ_PTR_FULL(FuseParticleSystemComponent, UParticleSystemComponent);
}

void UFuseComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(EnableInputNotification);
	DELE_PTR_FULL(DisableInputNotification);
	DELE_PTR_FULL(FuseSoundWisePool);
	DELE_PTR_FULL(FuseActivateSoundPlayEvent);
	DELE_PTR_FULL(FuseSoundPlayEvent);
	DELE_PTR_FULL(FuseSoundStopEvent);
	DELE_PTR_FULL(FuseParticleSystem);
	DELE_PTR_FULL(FuseInstigator);
	DELE_PTR_FULL(FuseParticleSystemComponent);
}

// Function Athena.GameAudioInterface.UnregisterShip
// (Native, Public, BlueprintCallable)
// Parameters:
// class AShip*                   Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameAudioInterface::UnregisterShip(class AShip* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameAudioInterface.UnregisterShip");

	UGameAudioInterface_UnregisterShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameAudioInterface.RegisterShip
// (Native, Public, BlueprintCallable)
// Parameters:
// class AShip*                   Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameAudioInterface::RegisterShip(class AShip* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameAudioInterface.RegisterShip");

	UGameAudioInterface_RegisterShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameAudioInterface.GetClosestNonCrewShipDistance
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AShip*                   PlayerShip                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UGameAudioInterface::GetClosestNonCrewShipDistance(class AShip* PlayerShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameAudioInterface.GetClosestNonCrewShipDistance");

	UGameAudioInterface_GetClosestNonCrewShipDistance_Params params;
	params.PlayerShip = PlayerShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGameAudioInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGameAudioInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UGameAudioService::AfterRead()
{
	UObject::AfterRead();

}

void UGameAudioService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.GameCustomizationInterface.SetTime
// (Native, Public)
// Parameters:
// int                            Hours                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationInterface::SetTime(int Hours)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.SetTime");

	UGameCustomizationInterface_SetTime_Params params;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.SetShouldUseRevivalFlow
// (Native, Public, HasOutParms)
// Parameters:
// struct FSetShouldUseRevivalFlowData SetShouldUseRevivalFlowData    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::SetShouldUseRevivalFlow(const struct FSetShouldUseRevivalFlowData& SetShouldUseRevivalFlowData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.SetShouldUseRevivalFlow");

	UGameCustomizationInterface_SetShouldUseRevivalFlow_Params params;
	params.SetShouldUseRevivalFlowData = SetShouldUseRevivalFlowData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.SetShouldSkipFerryOfTheDamned
// (Native, Public, HasOutParms)
// Parameters:
// struct FSetShouldSkipFerryOfTheDamnedData SetShouldSkipFerryOfTheDamnedData (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::SetShouldSkipFerryOfTheDamned(const struct FSetShouldSkipFerryOfTheDamnedData& SetShouldSkipFerryOfTheDamnedData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.SetShouldSkipFerryOfTheDamned");

	UGameCustomizationInterface_SetShouldSkipFerryOfTheDamned_Params params;
	params.SetShouldSkipFerryOfTheDamnedData = SetShouldSkipFerryOfTheDamnedData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.SetGameModeDeathPenaltyRespawnTimer
// (Native, Public, HasOutParms)
// Parameters:
// struct FGameModeDeathPenaltyRespawnTimerData GameModeDeathPenaltyRespawnTimerData (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::SetGameModeDeathPenaltyRespawnTimer(const struct FGameModeDeathPenaltyRespawnTimerData& GameModeDeathPenaltyRespawnTimerData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.SetGameModeDeathPenaltyRespawnTimer");

	UGameCustomizationInterface_SetGameModeDeathPenaltyRespawnTimer_Params params;
	params.GameModeDeathPenaltyRespawnTimerData = GameModeDeathPenaltyRespawnTimerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.SetCustomPlayerStart
// (Native, Public, HasOutParms)
// Parameters:
// struct FSetCustomPlayerStartData SetCustomPlayerStartData       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::SetCustomPlayerStart(const struct FSetCustomPlayerStartData& SetCustomPlayerStartData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.SetCustomPlayerStart");

	UGameCustomizationInterface_SetCustomPlayerStart_Params params;
	params.SetCustomPlayerStartData = SetCustomPlayerStartData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.ResetCustomConfigForPlayer
// (Native, Public, HasOutParms)
// Parameters:
// struct FResetCustomConfigForPlayerData ResetCustomConfigForPlayerData (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::ResetCustomConfigForPlayer(const struct FResetCustomConfigForPlayerData& ResetCustomConfigForPlayerData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.ResetCustomConfigForPlayer");

	UGameCustomizationInterface_ResetCustomConfigForPlayer_Params params;
	params.ResetCustomConfigForPlayerData = ResetCustomConfigForPlayerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.ReplenishShips
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::ReplenishShips(const struct FGuid& InCrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.ReplenishShips");

	UGameCustomizationInterface_ReplenishShips_Params params;
	params.InCrewId = InCrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.RemoveTrigger
// (Native, Public)
// Parameters:
// int                            TriggerId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UGameCustomizationInterface::RemoveTrigger(int TriggerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.RemoveTrigger");

	UGameCustomizationInterface_RemoveTrigger_Params params;
	params.TriggerId = TriggerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationInterface.LoadShipsCannons
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FString                 InItemDescString               (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InCannonNum                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationInterface::LoadShipsCannons(const struct FString& InItemDescString, const struct FGuid& InCrewId, int InCannonNum)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.LoadShipsCannons");

	UGameCustomizationInterface_LoadShipsCannons_Params params;
	params.InItemDescString = InItemDescString;
	params.InCrewId = InCrewId;
	params.InCannonNum = InCannonNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.KillPlayer
// (Native, Public, HasOutParms)
// Parameters:
// struct FKillPlayerData         KillPlayerData                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::KillPlayer(const struct FKillPlayerData& KillPlayerData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.KillPlayer");

	UGameCustomizationInterface_KillPlayer_Params params;
	params.KillPlayerData = KillPlayerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.KillCrew
// (Native, Public, HasOutParms)
// Parameters:
// struct FKillCrewData           KillCrewData                   (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationInterface::KillCrew(const struct FKillCrewData& KillCrewData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.KillCrew");

	UGameCustomizationInterface_KillCrew_Params params;
	params.KillCrewData = KillCrewData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.GetTime
// (Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UGameCustomizationInterface::GetTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.GetTime");

	UGameCustomizationInterface_GetTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationInterface.ForcePlayerRespawn
// (Native, Public, HasOutParms)
// Parameters:
// struct FForcePlayerRespawnData ForcePlayerRespawnData         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::ForcePlayerRespawn(const struct FForcePlayerRespawnData& ForcePlayerRespawnData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.ForcePlayerRespawn");

	UGameCustomizationInterface_ForcePlayerRespawn_Params params;
	params.ForcePlayerRespawnData = ForcePlayerRespawnData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.DestroyCustomPlayerStart
// (Native, Public, HasOutParms)
// Parameters:
// struct FDestroyCustomPlayerStartData DestroyCustomPlayerStartData   (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationInterface::DestroyCustomPlayerStart(const struct FDestroyCustomPlayerStartData& DestroyCustomPlayerStartData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.DestroyCustomPlayerStart");

	UGameCustomizationInterface_DestroyCustomPlayerStart_Params params;
	params.DestroyCustomPlayerStartData = DestroyCustomPlayerStartData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.DestroyAllExistingActorsByClass
// (Native, Public, HasOutParms)
// Parameters:
// struct FDestroyAllExistingActorsByClassData DestroyAllExistingActorsByClassData (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationInterface::DestroyAllExistingActorsByClass(const struct FDestroyAllExistingActorsByClassData& DestroyAllExistingActorsByClassData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.DestroyAllExistingActorsByClass");

	UGameCustomizationInterface_DestroyAllExistingActorsByClass_Params params;
	params.DestroyAllExistingActorsByClassData = DestroyAllExistingActorsByClassData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.DestroyActor
// (Native, Public, HasOutParms)
// Parameters:
// struct FDestroyActorData       DestroyActorData               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationInterface::DestroyActor(const struct FDestroyActorData& DestroyActorData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.DestroyActor");

	UGameCustomizationInterface_DestroyActor_Params params;
	params.DestroyActorData = DestroyActorData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.CreateSphereTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UGameCustomizationInterface::CreateSphereTrigger(class UWorld* World, const struct FVector& Location, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.CreateSphereTrigger");

	UGameCustomizationInterface_CreateSphereTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationInterface.CreateNewCustomPlayerStart
// (Native, Public, HasOutParms)
// Parameters:
// struct FCustomPlayerStartConfigData CustomPlayerStartConfigData    (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationInterface::CreateNewCustomPlayerStart(const struct FCustomPlayerStartConfigData& CustomPlayerStartConfigData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.CreateNewCustomPlayerStart");

	UGameCustomizationInterface_CreateNewCustomPlayerStart_Params params;
	params.CustomPlayerStartConfigData = CustomPlayerStartConfigData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationInterface.CreateBoxTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 Extent                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UGameCustomizationInterface::CreateBoxTrigger(class UWorld* World, const struct FVector& Location, const struct FVector& Extent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.CreateBoxTrigger");

	UGameCustomizationInterface_CreateBoxTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Extent = Extent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationInterface.AddItemToShips
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FString                 InItemDescString               (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InQuantity                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationInterface::AddItemToShips(const struct FString& InItemDescString, const struct FGuid& InCrewId, int InQuantity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationInterface.AddItemToShips");

	UGameCustomizationInterface_AddItemToShips_Params params;
	params.InItemDescString = InItemDescString;
	params.InCrewId = InCrewId;
	params.InQuantity = InQuantity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGameCustomizationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGameCustomizationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.GameCustomizationService.SetTimeHoursAndMinutes
// (Final, Native, Public)
// Parameters:
// int                            Hours                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Minutes                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationService::SetTimeHoursAndMinutes(int Hours, int Minutes)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.SetTimeHoursAndMinutes");

	UGameCustomizationService_SetTimeHoursAndMinutes_Params params;
	params.Hours = Hours;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.SetTime
// (Native, Public)
// Parameters:
// int                            Hours                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationService::SetTime(int Hours)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.SetTime");

	UGameCustomizationService_SetTime_Params params;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.SetShouldUseRevivalFlow
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FSetShouldUseRevivalFlowData SetShouldUseRevivalFlowData    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::SetShouldUseRevivalFlow(const struct FSetShouldUseRevivalFlowData& SetShouldUseRevivalFlowData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.SetShouldUseRevivalFlow");

	UGameCustomizationService_SetShouldUseRevivalFlow_Params params;
	params.SetShouldUseRevivalFlowData = SetShouldUseRevivalFlowData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.SetShouldSkipFerryOfTheDamned
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FSetShouldSkipFerryOfTheDamnedData SetShouldSkipFerryOfTheDamnedData (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::SetShouldSkipFerryOfTheDamned(const struct FSetShouldSkipFerryOfTheDamnedData& SetShouldSkipFerryOfTheDamnedData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.SetShouldSkipFerryOfTheDamned");

	UGameCustomizationService_SetShouldSkipFerryOfTheDamned_Params params;
	params.SetShouldSkipFerryOfTheDamnedData = SetShouldSkipFerryOfTheDamnedData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.SetGameModeDeathPenaltyRespawnTimer
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FGameModeDeathPenaltyRespawnTimerData GameModeDeathPenaltyRespawnTimerData (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::SetGameModeDeathPenaltyRespawnTimer(const struct FGameModeDeathPenaltyRespawnTimerData& GameModeDeathPenaltyRespawnTimerData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.SetGameModeDeathPenaltyRespawnTimer");

	UGameCustomizationService_SetGameModeDeathPenaltyRespawnTimer_Params params;
	params.GameModeDeathPenaltyRespawnTimerData = GameModeDeathPenaltyRespawnTimerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.SetCustomPlayerStart
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FSetCustomPlayerStartData SetCustomPlayerStartData       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::SetCustomPlayerStart(const struct FSetCustomPlayerStartData& SetCustomPlayerStartData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.SetCustomPlayerStart");

	UGameCustomizationService_SetCustomPlayerStart_Params params;
	params.SetCustomPlayerStartData = SetCustomPlayerStartData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.ResetCustomConfigForPlayer
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FResetCustomConfigForPlayerData ResetCustomConfigForPlayerData (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::ResetCustomConfigForPlayer(const struct FResetCustomConfigForPlayerData& ResetCustomConfigForPlayerData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.ResetCustomConfigForPlayer");

	UGameCustomizationService_ResetCustomConfigForPlayer_Params params;
	params.ResetCustomConfigForPlayerData = ResetCustomConfigForPlayerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.ReplenishShips
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::ReplenishShips(const struct FGuid& InCrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.ReplenishShips");

	UGameCustomizationService_ReplenishShips_Params params;
	params.InCrewId = InCrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.RemoveTrigger
// (Native, Public)
// Parameters:
// int                            TriggerId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UGameCustomizationService::RemoveTrigger(int TriggerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.RemoveTrigger");

	UGameCustomizationService_RemoveTrigger_Params params;
	params.TriggerId = TriggerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationService.LoadShipsCannons
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FString                 InItemDescString               (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InCannonNum                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationService::LoadShipsCannons(const struct FString& InItemDescString, const struct FGuid& InCrewId, int InCannonNum)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.LoadShipsCannons");

	UGameCustomizationService_LoadShipsCannons_Params params;
	params.InItemDescString = InItemDescString;
	params.InCrewId = InCrewId;
	params.InCannonNum = InCannonNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.KillPlayer
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FKillPlayerData         KillPlayerData                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::KillPlayer(const struct FKillPlayerData& KillPlayerData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.KillPlayer");

	UGameCustomizationService_KillPlayer_Params params;
	params.KillPlayerData = KillPlayerData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.KillCrew
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FKillCrewData           KillCrewData                   (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationService::KillCrew(const struct FKillCrewData& KillCrewData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.KillCrew");

	UGameCustomizationService_KillCrew_Params params;
	params.KillCrewData = KillCrewData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.GetTime
// (Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UGameCustomizationService::GetTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.GetTime");

	UGameCustomizationService_GetTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationService.ForcePlayerRespawn
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FForcePlayerRespawnData ForcePlayerRespawnData         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::ForcePlayerRespawn(const struct FForcePlayerRespawnData& ForcePlayerRespawnData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.ForcePlayerRespawn");

	UGameCustomizationService_ForcePlayerRespawn_Params params;
	params.ForcePlayerRespawnData = ForcePlayerRespawnData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.DestroyCustomPlayerStart
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FDestroyCustomPlayerStartData DestroyCustomPlayerStartData   (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationService::DestroyCustomPlayerStart(const struct FDestroyCustomPlayerStartData& DestroyCustomPlayerStartData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.DestroyCustomPlayerStart");

	UGameCustomizationService_DestroyCustomPlayerStart_Params params;
	params.DestroyCustomPlayerStartData = DestroyCustomPlayerStartData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.DestroyAllExistingActorsByClass
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FDestroyAllExistingActorsByClassData DestroyAllExistingActorsByClassData (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationService::DestroyAllExistingActorsByClass(const struct FDestroyAllExistingActorsByClassData& DestroyAllExistingActorsByClassData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.DestroyAllExistingActorsByClass");

	UGameCustomizationService_DestroyAllExistingActorsByClass_Params params;
	params.DestroyAllExistingActorsByClassData = DestroyAllExistingActorsByClassData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.DestroyActor
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FDestroyActorData       DestroyActorData               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UGameCustomizationService::DestroyActor(const struct FDestroyActorData& DestroyActorData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.DestroyActor");

	UGameCustomizationService_DestroyActor_Params params;
	params.DestroyActorData = DestroyActorData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.CreateSphereTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UGameCustomizationService::CreateSphereTrigger(class UWorld* World, const struct FVector& Location, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.CreateSphereTrigger");

	UGameCustomizationService_CreateSphereTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationService.CreateNewCustomPlayerStart
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FCustomPlayerStartConfigData CustomPlayerStartConfigData    (ConstParm, Parm, OutParm, ReferenceParm)
void UGameCustomizationService::CreateNewCustomPlayerStart(const struct FCustomPlayerStartConfigData& CustomPlayerStartConfigData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.CreateNewCustomPlayerStart");

	UGameCustomizationService_CreateNewCustomPlayerStart_Params params;
	params.CustomPlayerStartConfigData = CustomPlayerStartConfigData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameCustomizationService.CreateBoxTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 Extent                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UGameCustomizationService::CreateBoxTrigger(class UWorld* World, const struct FVector& Location, const struct FVector& Extent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.CreateBoxTrigger");

	UGameCustomizationService_CreateBoxTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Extent = Extent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameCustomizationService.AddItemToShips
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FString                 InItemDescString               (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InQuantity                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGameCustomizationService::AddItemToShips(const struct FString& InItemDescString, const struct FGuid& InCrewId, int InQuantity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameCustomizationService.AddItemToShips");

	UGameCustomizationService_AddItemToShips_Params params;
	params.InItemDescString = InItemDescString;
	params.InCrewId = InCrewId;
	params.InQuantity = InQuantity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGameCustomizationService::AfterRead()
{
	UObject::AfterRead();

}

void UGameCustomizationService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UResourceCache::AfterRead()
{
	UObject::AfterRead();

}

void UResourceCache::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UResourceProviderComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UResourceProviderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCachedResourceProviderComponent::AfterRead()
{
	UResourceProviderComponent::AfterRead();

	READ_PTR_FULL(Cache, UResourceCache);
}

void UCachedResourceProviderComponent::BeforeDelete()
{
	UResourceProviderComponent::BeforeDelete();

	DELE_PTR_FULL(Cache);
}

void UUncachedResourceProviderComponent::AfterRead()
{
	UResourceProviderComponent::AfterRead();

}

void UUncachedResourceProviderComponent::BeforeDelete()
{
	UResourceProviderComponent::BeforeDelete();

}

// Function Athena.RespawnAndTaleProgressComponent.OnActorEnteredVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void URespawnAndTaleProgressComponent::OnActorEnteredVolume(class AActor* Other)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RespawnAndTaleProgressComponent.OnActorEnteredVolume");

	URespawnAndTaleProgressComponent_OnActorEnteredVolume_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URespawnAndTaleProgressComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URespawnAndTaleProgressComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void ARespawnAndTaleProgressTriggerVolume::AfterRead()
{
	APhysicsVolume::AfterRead();

	READ_PTR_FULL(Progress, URespawnAndTaleProgressComponent);
}

void ARespawnAndTaleProgressTriggerVolume::BeforeDelete()
{
	APhysicsVolume::BeforeDelete();

	DELE_PTR_FULL(Progress);
}

void ARespawnStatue::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
}

void ARespawnStatue::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(StaticMeshComponent);
}

void ATeleportStatue::AfterRead()
{
	ARespawnStatue::AfterRead();

}

void ATeleportStatue::BeforeDelete()
{
	ARespawnStatue::BeforeDelete();

}

void URetractableCharacterComponent::AfterRead()
{
	URetractableComponent::AfterRead();

}

void URetractableCharacterComponent::BeforeDelete()
{
	URetractableComponent::BeforeDelete();

}

void UReturnToCirclingAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UReturnToCirclingAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void URevealerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URevealerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URevealableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URevealableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URevealableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetGameStateObject, UObject);
}

void URevealableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetGameStateObject);
}

void URevealableServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URevealableServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ARevealableService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(TargetGameStateObject, UObject);
}

void ARevealableService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(TargetGameStateObject);
}

// Function Athena.RevealerComponent.StopRevealing
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void URevealerComponent::StopRevealing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RevealerComponent.StopRevealing");

	URevealerComponent_StopRevealing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RevealerComponent.StartRevealing
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void URevealerComponent::StartRevealing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RevealerComponent.StartRevealing");

	URevealerComponent_StartRevealing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URevealerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetGameStateObject, UObject);
}

void URevealerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetGameStateObject);
}

void URewardPopUpNotificationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URewardPopUpNotificationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ATreasureMap::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(WieldableCanvasRenderingComponent, UWieldableItemCanvasRenderingComponent);
	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
}

void ATreasureMap::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(WieldableCanvasRenderingComponent);
	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
}

// Function Athena.RiddleMap.TriggerMagicGlow_RPC
// (Net, NetReliable, Native, Event, Public, NetClient)
void ARiddleMap::TriggerMagicGlow_RPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.TriggerMagicGlow_RPC");

	ARiddleMap_TriggerMagicGlow_RPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RiddleMap.StartMagicGlowEffect
// (Final, Native, Public, BlueprintCallable)
void ARiddleMap::StartMagicGlowEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.StartMagicGlowEffect");

	ARiddleMap_StartMagicGlowEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RiddleMap.RefreshContents
// (Final, Native, Public, BlueprintCallable)
void ARiddleMap::RefreshContents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.RefreshContents");

	ARiddleMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RiddleMap.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ARiddleMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.OnTextCanvasUpdate");

	ARiddleMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RiddleMap.OnRep_MapInventoryTexturePath
// (Final, Native, Private)
void ARiddleMap::OnRep_MapInventoryTexturePath()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.OnRep_MapInventoryTexturePath");

	ARiddleMap_OnRep_MapInventoryTexturePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RiddleMap.OnRep_Contents
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FRiddleMapContents      InPreviousContents             (ConstParm, Parm, OutParm, ReferenceParm)
void ARiddleMap::OnRep_Contents(const struct FRiddleMapContents& InPreviousContents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.OnRep_Contents");

	ARiddleMap_OnRep_Contents_Params params;
	params.InPreviousContents = InPreviousContents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RiddleMap.OnMaskCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ARiddleMap::OnMaskCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RiddleMap.OnMaskCanvasUpdate");

	ARiddleMap_OnMaskCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARiddleMap::AfterRead()
{
	ATreasureMap::AfterRead();

}

void ARiddleMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

}

void URiddleTextPhraseDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URiddleTextPhraseDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URightTriggerAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void URightTriggerAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void URivalVoteButtonNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URivalVoteButtonNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.RivalVotingInputHandler.OnVoteButtonPressed
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URivalVotingInputHandler::OnVoteButtonPressed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RivalVotingInputHandler.OnVoteButtonPressed");

	URivalVotingInputHandler_OnVoteButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URivalVotingInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void URivalVotingInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void UMeshRotatorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMeshRotatorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void URotatingAudioSourceComponent::AfterRead()
{
	UMeshRotatorComponent::AfterRead();

	READ_PTR_FULL(RotatingObjectPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PlayWwiseEvent, UWwiseEvent);
	READ_PTR_FULL(StopWwiseEvent, UWwiseEvent);
}

void URotatingAudioSourceComponent::BeforeDelete()
{
	UMeshRotatorComponent::BeforeDelete();

	DELE_PTR_FULL(RotatingObjectPool);
	DELE_PTR_FULL(PlayWwiseEvent);
	DELE_PTR_FULL(StopWwiseEvent);
}

// Function Athena.Rudder.SetRudderAngleRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InRudderAngleRatio             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ARudder::SetRudderAngleRatio(float InRudderAngleRatio)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Rudder.SetRudderAngleRatio");

	ARudder_SetRudderAngleRatio_Params params;
	params.InRudderAngleRatio = InRudderAngleRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Rudder.GetServerAngleRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ARudder::GetServerAngleRatio()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Rudder.GetServerAngleRatio");

	ARudder_GetServerAngleRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ARudder::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RudderDynamicsDesc, UBaseRudderDynamicsDesc);
}

void ARudder::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RudderDynamicsDesc);
}

// Function Athena.RumbleHandlerComponent.EventFired
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InTag                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void URumbleHandlerComponent::EventFired(const struct FName& InTag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RumbleHandlerComponent.EventFired");

	URumbleHandlerComponent_EventFired_Params params;
	params.InTag = InTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URumbleHandlerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URumbleHandlerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.Sail.SetTurbulence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InTurbulence                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASail::SetTurbulence(float InTurbulence)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.SetTurbulence");

	ASail_SetTurbulence_Params params;
	params.InTurbulence = InTurbulence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Sail.SetSailLoweredProportion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Proportion                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASail::SetSailLoweredProportion(float Proportion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.SetSailLoweredProportion");

	ASail_SetSailLoweredProportion_Params params;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Sail.SetSailAngleRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          AngleRatio                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASail::SetSailAngleRatio(float AngleRatio)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.SetSailAngleRatio");

	ASail_SetSailAngleRatio_Params params;
	params.AngleRatio = AngleRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Sail.SetForceScalarFromBPParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Scalar                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASail::SetForceScalarFromBPParams(float Scalar)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.SetForceScalarFromBPParams");

	ASail_SetForceScalarFromBPParams_Params params;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Sail.SetDamageScalar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Scalar                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASail::SetDamageScalar(float Scalar)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.SetDamageScalar");

	ASail_SetDamageScalar_Params params;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Sail.SetBillowAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InBillowingAmount              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASail::SetBillowAmount(float InBillowingAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.SetBillowAmount");

	ASail_SetBillowAmount_Params params;
	params.InBillowingAmount = InBillowingAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Sail.GetVisualBillowAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::GetVisualBillowAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.GetVisualBillowAmount");

	ASail_GetVisualBillowAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Sail.GetSailLoweredProportion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::GetSailLoweredProportion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.GetSailLoweredProportion");

	ASail_GetSailLoweredProportion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Sail.GetSailAngleRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::GetSailAngleRatio()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.GetSailAngleRatio");

	ASail_GetSailAngleRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Sail.GetSailAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::GetSailAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.GetSailAngle");

	ASail_GetSailAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Sail.GetMaxRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::GetMaxRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.GetMaxRotation");

	ASail_GetMaxRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Sail.GetBillowAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::GetBillowAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.GetBillowAmount");

	ASail_GetBillowAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Sail.CalculateFurlValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASail::CalculateFurlValue()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Sail.CalculateFurlValue");

	ASail_CalculateFurlValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASail::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Mesh, USkeletalMeshComponent);
	READ_PTR_FULL(SailDynamicsDesc, UBaseSailDynamicsDesc);
	READ_PTR_FULL(WindToSailAngleEfficiencyCurve, UCurveFloat);
}

void ASail::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(SailDynamicsDesc);
	DELE_PTR_FULL(WindToSailAngleEfficiencyCurve);
}

// Function Athena.SailAnimInterface.UpdateParameters
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Turning                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Billow                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          WindStrength                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          SailHeight                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Falling                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            FallingAnimation               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USailAnimInterface::UpdateParameters(float Turning, float Billow, float WindStrength, float SailHeight, float Falling, int FallingAnimation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailAnimInterface.UpdateParameters");

	USailAnimInterface_UpdateParameters_Params params;
	params.Turning = Turning;
	params.Billow = Billow;
	params.WindStrength = WindStrength;
	params.SailHeight = SailHeight;
	params.Falling = Falling;
	params.FallingAnimation = FallingAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailAnimInterface.InitialiseSail
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          PlayRateMultiplier             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           MainSail                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void USailAnimInterface::InitialiseSail(float PlayRateMultiplier, bool MainSail)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailAnimInterface.InitialiseSail");

	USailAnimInterface_InitialiseSail_Params params;
	params.PlayRateMultiplier = PlayRateMultiplier;
	params.MainSail = MainSail;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailAnimInterface.InitialiseMast
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          MastFallingLimit               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USailAnimInterface::InitialiseMast(float MastFallingLimit)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailAnimInterface.InitialiseMast");

	USailAnimInterface_InitialiseMast_Params params;
	params.MastFallingLimit = MastFallingLimit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USailAnimInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USailAnimInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USailAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

}

void USailAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

}

void USailHeightStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USailHeightStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.SailHoistTestFunctions.SetupSailHoistServerSide
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                  SailHoistClass                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)
// class ASailHoist*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ASailHoist* USailHoistTestFunctions::STATIC_SetupSailHoistServerSide(class UObject* WorldContextObject, const struct FVector& SpawnLocation, class UClass* SailHoistClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailHoistTestFunctions.SetupSailHoistServerSide");

	USailHoistTestFunctions_SetupSailHoistServerSide_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SpawnLocation = SpawnLocation;
	params.SailHoistClass = SailHoistClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SailHoistTestFunctions.SetupSailHoistClientSideWithProvidedHoist
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASailHoist*              Hoist                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USailHoistTestFunctions::STATIC_SetupSailHoistClientSideWithProvidedHoist(class UObject* WorldContextObject, class ASailHoist* Hoist)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailHoistTestFunctions.SetupSailHoistClientSideWithProvidedHoist");

	USailHoistTestFunctions_SetupSailHoistClientSideWithProvidedHoist_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Hoist = Hoist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailHoistTestFunctions.SetupSailHoistClientSide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASailHoist*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ASailHoist* USailHoistTestFunctions::STATIC_SetupSailHoistClientSide(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailHoistTestFunctions.SetupSailHoistClientSide");

	USailHoistTestFunctions_SetupSailHoistClientSide_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USailHoistTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void USailHoistTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.SailManipulatorBlueprintFunctions.SetupHoistControl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASailHoist*              Hoist                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 MastLookatPath                 (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FName                   MastLookatScoket               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URiggingSystemComponent* Rigging                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   RiggingLineGroup               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            RiggingRopeIndex               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USailManipulatorBlueprintFunctions::STATIC_SetupHoistControl(class ASailHoist* Hoist, const struct FString& MastLookatPath, const struct FName& MastLookatScoket, class URiggingSystemComponent* Rigging, const struct FName& RiggingLineGroup, int RiggingRopeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulatorBlueprintFunctions.SetupHoistControl");

	USailManipulatorBlueprintFunctions_SetupHoistControl_Params params;
	params.Hoist = Hoist;
	params.MastLookatPath = MastLookatPath;
	params.MastLookatScoket = MastLookatScoket;
	params.Rigging = Rigging;
	params.RiggingLineGroup = RiggingLineGroup;
	params.RiggingRopeIndex = RiggingRopeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SailManipulatorBlueprintFunctions.SetupAngleControl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASailAngle*              Angle                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 MastLookatPath                 (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FName                   MastLookatScoket               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URiggingSystemComponent* Rigging                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   RiggingLineGroup               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            RiggingLeftRopeIndex           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            RiggingRightRopeIndex          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USailManipulatorBlueprintFunctions::STATIC_SetupAngleControl(class ASailAngle* Angle, const struct FString& MastLookatPath, const struct FName& MastLookatScoket, class URiggingSystemComponent* Rigging, const struct FName& RiggingLineGroup, int RiggingLeftRopeIndex, int RiggingRightRopeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailManipulatorBlueprintFunctions.SetupAngleControl");

	USailManipulatorBlueprintFunctions_SetupAngleControl_Params params;
	params.Angle = Angle;
	params.MastLookatPath = MastLookatPath;
	params.MastLookatScoket = MastLookatScoket;
	params.Rigging = Rigging;
	params.RiggingLineGroup = RiggingLineGroup;
	params.RiggingLeftRopeIndex = RiggingLeftRopeIndex;
	params.RiggingRightRopeIndex = RiggingRightRopeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USailManipulatorBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void USailManipulatorBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UIslandItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

	READ_PTR_FULL(IslandData, AIslandData);
}

void UIslandItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

	DELE_PTR_FULL(IslandData);
}

void USalvageItemSpawnComponent::AfterRead()
{
	UIslandItemSpawnComponent::AfterRead();

	READ_PTR_FULL(SpawnLocationType, UClass);
}

void USalvageItemSpawnComponent::BeforeDelete()
{
	UIslandItemSpawnComponent::BeforeDelete();

	DELE_PTR_FULL(SpawnLocationType);
}

void USalvageItemSpawnComponentMock::AfterRead()
{
	USalvageItemSpawnComponent::AfterRead();

}

void USalvageItemSpawnComponentMock::BeforeDelete()
{
	USalvageItemSpawnComponent::BeforeDelete();

}

void USatiatedStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USatiatedStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UScaldedStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UScaldedStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UScreenSpaceVFXComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(EffectStrengthOverTimeCurve, UCurveFloat);
	READ_PTR_FULL(ContinuousDamageTimeCurve, UCurveFloat);
	READ_PTR_FULL(DrowningEffectStrengthOverTimeCurve, UCurveFloat);
}

void UScreenSpaceVFXComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(EffectStrengthOverTimeCurve);
	DELE_PTR_FULL(ContinuousDamageTimeCurve);
	DELE_PTR_FULL(DrowningEffectStrengthOverTimeCurve);
}

void UScreenSpaceVfxComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Params, UScreenSpaceVFXComponentParams);
}

void UScreenSpaceVfxComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Params);
}

void UDamagerType::AfterRead()
{
	UObject::AfterRead();

}

void UDamagerType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UScuttleDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UScuttleDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.Seagulls.Multicast_DismissSeagulls
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void ASeagulls::Multicast_DismissSeagulls()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Seagulls.Multicast_DismissSeagulls");

	ASeagulls_Multicast_DismissSeagulls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Seagulls.FadeOut
// (Native, Event, Protected, BlueprintEvent)
void ASeagulls::FadeOut()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Seagulls.FadeOut");

	ASeagulls_FadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Seagulls.FadeIn
// (Native, Event, Protected, BlueprintEvent)
void ASeagulls::FadeIn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Seagulls.FadeIn");

	ASeagulls_FadeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASeagulls::AfterRead()
{
	AShortRangeMarker::AfterRead();

}

void ASeagulls::BeforeDelete()
{
	AShortRangeMarker::BeforeDelete();

}

void USeaIdValidationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void USeaIdValidationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.SelectionOfSirenStatues.Take
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TAssetPtr<class UClass>        ReturnValue                    (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)
TAssetPtr<class UClass> USelectionOfSirenStatues::Take()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SelectionOfSirenStatues.Take");

	USelectionOfSirenStatues_Take_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USelectionOfSirenStatues::AfterRead()
{
	UObject::AfterRead();

}

void USelectionOfSirenStatues::BeforeDelete()
{
	UObject::BeforeDelete();

}

void USelectRewardStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USelectRewardStepDesc);
}

void USelectRewardStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USelectRewardStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USelectRewardStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USenseInitialReactionAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void USenseInitialReactionAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void USenseSearchingAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void USenseSearchingAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void AServerIslandPerfTestGameState::AfterRead()
{
	AServiceProviderGameState::AfterRead();

	READ_PTR_FULL(IslandService, APerfTestIslandService);
	READ_PTR_FULL(WaterService, AFFTWaterService);
}

void AServerIslandPerfTestGameState::BeforeDelete()
{
	AServiceProviderGameState::BeforeDelete();

	DELE_PTR_FULL(IslandService);
	DELE_PTR_FULL(WaterService);
}

void UNetworkedEventsWhitelistDefinition::AfterRead()
{
	UObject::AfterRead();

}

void UNetworkedEventsWhitelistDefinition::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UServerNetworkedEventsWhitelistDefinition::AfterRead()
{
	UNetworkedEventsWhitelistDefinition::AfterRead();

}

void UServerNetworkedEventsWhitelistDefinition::BeforeDelete()
{
	UNetworkedEventsWhitelistDefinition::BeforeDelete();

}

// Function Athena.ServerPerformanceReplicator.OnRep_ServerAverageMS
// (Final, Native, Private)
void AServerPerformanceReplicator::OnRep_ServerAverageMS()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ServerPerformanceReplicator.OnRep_ServerAverageMS");

	AServerPerformanceReplicator_OnRep_ServerAverageMS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ServerPerformanceReplicator.OnRep_ServerAverageFPS
// (Final, Native, Private)
void AServerPerformanceReplicator::OnRep_ServerAverageFPS()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ServerPerformanceReplicator.OnRep_ServerAverageFPS");

	AServerPerformanceReplicator_OnRep_ServerAverageFPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AServerPerformanceReplicator::AfterRead()
{
	AActor::AfterRead();

}

void AServerPerformanceReplicator::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UServerUpdateReportingServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UServerUpdateReportingServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UServerUpdateReportingService::AfterRead()
{
	UObject::AfterRead();

}

void UServerUpdateReportingService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.ServiceProviderInterfaceTestFunctions.TestRegisterAndGetService
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UServiceProviderInterfaceTestFunctions::STATIC_TestRegisterAndGetService(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ServiceProviderInterfaceTestFunctions.TestRegisterAndGetService");

	UServiceProviderInterfaceTestFunctions_TestRegisterAndGetService_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ServiceProviderInterfaceTestFunctions.TestGetServiceUnregistered
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UServiceProviderInterfaceTestFunctions::STATIC_TestGetServiceUnregistered(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ServiceProviderInterfaceTestFunctions.TestGetServiceUnregistered");

	UServiceProviderInterfaceTestFunctions_TestGetServiceUnregistered_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UServiceProviderInterfaceTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UServiceProviderInterfaceTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UServiceStatusNotificationsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UServiceStatusNotificationsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipPartsCatalogueDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShipPartsCatalogueDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UShipPointParticleComponent::AfterRead()
{
	UParticleSystemComponent::AfterRead();

}

void UShipPointParticleComponent::BeforeDelete()
{
	UParticleSystemComponent::BeforeDelete();

}

void UShipRolloverCorrector::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TimeRolledOverVSCorrectiveTorque, UCurveFloat);
}

void UShipRolloverCorrector::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TimeRolledOverVSCorrectiveTorque);
}

// Function Athena.ShipService.IsWorldPosInsideHull
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AShip*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AShip* AShipService::IsWorldPosInsideHull(const struct FVector& Pos)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipService.IsWorldPosInsideHull");

	AShipService_IsWorldPosInsideHull_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipService.IsWorldPosInsideCabin
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AShip*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AShip* AShipService::IsWorldPosInsideCabin(const struct FVector& Pos)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipService.IsWorldPosInsideCabin");

	AShipService_IsWorldPosInsideCabin_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipService.GetNumShips
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AShipService::GetNumShips()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipService.GetNumShips");

	AShipService_GetNumShips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AShipService::AfterRead()
{
	AActor::AfterRead();

}

void AShipService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void ACustomizableShipService::AfterRead()
{
	AShipService::AfterRead();

}

void ACustomizableShipService::BeforeDelete()
{
	AShipService::BeforeDelete();

}

// Function Athena.ShipStuckDetectionComponent.GetDoesShipAppearCurrentlyStuck
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipStuckDetectionComponent::GetDoesShipAppearCurrentlyStuck()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipStuckDetectionComponent.GetDoesShipAppearCurrentlyStuck");

	UShipStuckDetectionComponent_GetDoesShipAppearCurrentlyStuck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipStuckDetectionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Ship, AShip);
}

void UShipStuckDetectionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Ship);
}

void UDamageableVulnerabilityLayer::AfterRead()
{
	UObject::AfterRead();

}

void UDamageableVulnerabilityLayer::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UDamageableVulnerabilityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDamageableVulnerabilityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DamageableComponent.OnDamageableImpact
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDamageableComponent::OnDamageableImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageableComponent.OnDamageableImpact");

	UDamageableComponent_OnDamageableImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDamageableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(AddedVulnerabilityLayer, UDamageableVulnerabilityLayer);
}

void UDamageableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(AddedVulnerabilityLayer);
}

void UActorDamageableComponent::AfterRead()
{
	UDamageableComponent::AfterRead();

	READ_PTR_FULL(HealthComp, UHealthComponent);
}

void UActorDamageableComponent::BeforeDelete()
{
	UDamageableComponent::BeforeDelete();

	DELE_PTR_FULL(HealthComp);
}

// Function Athena.DamageInstigatorInterface.CanDamageActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  DamageRecipient                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InAllowFriendlyFire            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDamageInstigatorInterface::CanDamageActor(class AActor* DamageRecipient, TEnumAsByte<Athena_EHealthChangedReason> Reason, bool InAllowFriendlyFire)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageInstigatorInterface.CanDamageActor");

	UDamageInstigatorInterface_CanDamageActor_Params params;
	params.DamageRecipient = DamageRecipient;
	params.Reason = Reason;
	params.InAllowFriendlyFire = InAllowFriendlyFire;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDamageInstigatorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDamageInstigatorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TaleQuestToolService.RemoveToolsFromAllParticipants
// (Final, Native, Public, BlueprintCallable)
void UTaleQuestToolService::RemoveToolsFromAllParticipants()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestToolService.RemoveToolsFromAllParticipants");

	UTaleQuestToolService_RemoveToolsFromAllParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TaleQuestToolService.GiveToolsToAllParticipants
// (Final, Native, Public, BlueprintCallable)
void UTaleQuestToolService::GiveToolsToAllParticipants()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestToolService.GiveToolsToAllParticipants");

	UTaleQuestToolService_GiveToolsToAllParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTaleQuestToolService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(ServiceDesc, UTaleQuestToolServiceDesc);
}

void UTaleQuestToolService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(ServiceDesc);
}

void UTaleQuestCompassService::AfterRead()
{
	UTaleQuestToolService::AfterRead();

}

void UTaleQuestCompassService::BeforeDelete()
{
	UTaleQuestToolService::BeforeDelete();

}

void UTaleQuestToolServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleQuestToolServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UTaleQuestCompassServiceDesc::AfterRead()
{
	UTaleQuestToolServiceDesc::AfterRead();

	READ_PTR_FULL(CompassDesc, UClass);
}

void UTaleQuestCompassServiceDesc::BeforeDelete()
{
	UTaleQuestToolServiceDesc::BeforeDelete();

	DELE_PTR_FULL(CompassDesc);
}

void ULaunchableProjectileServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULaunchableProjectileServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULaunchableProjectileService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void ULaunchableProjectileService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UAggressiveGhostShipRewardsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(RewardMarker, UClass);
}

void UAggressiveGhostShipRewardsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(RewardMarker);
}

// Function Athena.AggressiveGhostShip.SetShipHiddenBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           IsHidden                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAggressiveGhostShip::SetShipHiddenBP(bool IsHidden)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.SetShipHiddenBP");

	AAggressiveGhostShip_SetShipHiddenBP_Params params;
	params.IsHidden = IsHidden;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.SetShipDeadBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void AAggressiveGhostShip::SetShipDeadBP()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.SetShipDeadBP");

	AAggressiveGhostShip_SetShipDeadBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.SetPersistentDamageScaleBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          PersistentDamageScale          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShip::SetPersistentDamageScaleBP(float PersistentDamageScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.SetPersistentDamageScaleBP");

	AAggressiveGhostShip_SetPersistentDamageScaleBP_Params params;
	params.PersistentDamageScale = PersistentDamageScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.ResetVisualEffects
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void AAggressiveGhostShip::ResetVisualEffects()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.ResetVisualEffects");

	AAggressiveGhostShip_ResetVisualEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_VisualsDataAsset
// (Final, Native, Protected)
// Parameters:
// class UAggressiveGhostShipVisualsDataAsset* PreviousVisualsDataAsset       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShip::OnRep_VisualsDataAsset(class UAggressiveGhostShipVisualsDataAsset* PreviousVisualsDataAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_VisualsDataAsset");

	AAggressiveGhostShip_OnRep_VisualsDataAsset_Params params;
	params.PreviousVisualsDataAsset = PreviousVisualsDataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_SplineData
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_SplineData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_SplineData");

	AAggressiveGhostShip_OnRep_SplineData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_ShipState
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FAggressiveGhostShipState PreviousState                  (ConstParm, Parm, OutParm, ReferenceParm)
void AAggressiveGhostShip::OnRep_ShipState(const struct FAggressiveGhostShipState& PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_ShipState");

	AAggressiveGhostShip_OnRep_ShipState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_PoolingResource
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_PoolingResource()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_PoolingResource");

	AAggressiveGhostShip_OnRep_PoolingResource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_NumShotsLeftToKill
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_NumShotsLeftToKill()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_NumShotsLeftToKill");

	AAggressiveGhostShip_OnRep_NumShotsLeftToKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_IsOverlappingShip
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_IsOverlappingShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_IsOverlappingShip");

	AAggressiveGhostShip_OnRep_IsOverlappingShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_IsInert
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_IsInert()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_IsInert");

	AAggressiveGhostShip_OnRep_IsInert_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_HasMadeShipAppear
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_HasMadeShipAppear()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_HasMadeShipAppear");

	AAggressiveGhostShip_OnRep_HasMadeShipAppear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnRep_DifficultyDataAsset
// (Final, Native, Protected)
void AAggressiveGhostShip::OnRep_DifficultyDataAsset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnRep_DifficultyDataAsset");

	AAggressiveGhostShip_OnRep_DifficultyDataAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.AggressiveGhostShip.OnPreparingToAnchorDropDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void AAggressiveGhostShip::OnPreparingToAnchorDropDelegate__DelegateSignature()
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.AggressiveGhostShip.OnPreparingToAnchorDropDelegate__DelegateSignature");

	AAggressiveGhostShip_OnPreparingToAnchorDropDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.OnImpactBP
// (Event, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 SurfaceNormal                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void AAggressiveGhostShip::OnImpactBP(const struct FVector& HitLocation, const struct FVector& SurfaceNormal)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.OnImpactBP");

	AAggressiveGhostShip_OnImpactBP_Params params;
	params.HitLocation = HitLocation;
	params.SurfaceNormal = SurfaceNormal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Multi_AddImpulse
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 SourceLocation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          MaxDeflectionAngle             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShip::Multi_AddImpulse(float Duration, const struct FVector& SourceLocation, float MaxDeflectionAngle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Multi_AddImpulse");

	AAggressiveGhostShip_Multi_AddImpulse_Params params;
	params.Duration = Duration;
	params.SourceLocation = SourceLocation;
	params.MaxDeflectionAngle = MaxDeflectionAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.IsDamagingOverlappingShipBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           IsOverlapping                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAggressiveGhostShip::IsDamagingOverlappingShipBP(bool IsOverlapping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.IsDamagingOverlappingShipBP");

	AAggressiveGhostShip_IsDamagingOverlappingShipBP_Params params;
	params.IsOverlapping = IsOverlapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.HideAllMeshesBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void AAggressiveGhostShip::HideAllMeshesBP()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.HideAllMeshesBP");

	AAggressiveGhostShip_HideAllMeshesBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.GetShipType
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EAggressiveGhostShipType> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAggressiveGhostShipType> AAggressiveGhostShip::GetShipType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.GetShipType");

	AAggressiveGhostShip_GetShipType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShip.GetShipPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AAggressiveGhostShip::GetShipPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.GetShipPosition");

	AAggressiveGhostShip_GetShipPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShip.GetNumShotsLeftToKill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AAggressiveGhostShip::GetNumShotsLeftToKill()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.GetNumShotsLeftToKill");

	AAggressiveGhostShip_GetNumShotsLeftToKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShip.GetAllMeshesBP
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
TArray<class UMeshComponent*> AAggressiveGhostShip::GetAllMeshesBP()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.GetAllMeshesBP");

	AAggressiveGhostShip_GetAllMeshesBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShip.GetAllMaterialsBP
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class UMaterialInstanceDynamic*> AAggressiveGhostShip::GetAllMaterialsBP()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.GetAllMaterialsBP");

	AAggressiveGhostShip_GetAllMaterialsBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShip.EnablePortalClipPlaneBP
// (Event, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform              PortalTransform                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
void AAggressiveGhostShip::EnablePortalClipPlaneBP(const struct FTransform& PortalTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.EnablePortalClipPlaneBP");

	AAggressiveGhostShip_EnablePortalClipPlaneBP_Params params;
	params.PortalTransform = PortalTransform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.DisablePortalClipPlaneBP
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void AAggressiveGhostShip::DisablePortalClipPlaneBP()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.DisablePortalClipPlaneBP");

	AAggressiveGhostShip_DisablePortalClipPlaneBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_StopCapstanSfx
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AAggressiveGhostShip::Client_StopCapstanSfx()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_StopCapstanSfx");

	AAggressiveGhostShip_Client_StopCapstanSfx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_StartCapstanSfx
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AAggressiveGhostShip::Client_StartCapstanSfx()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_StartCapstanSfx");

	AAggressiveGhostShip_Client_StartCapstanSfx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_OnMinesSpawned
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void AAggressiveGhostShip::Client_OnMinesSpawned()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_OnMinesSpawned");

	AAggressiveGhostShip_Client_OnMinesSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_FireProjectile
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 AuthoritySpawnLocation         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EAggressiveGhostShipCannonFacingDirection> CannonFacingDirection          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            CannonIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ProjectileClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAggressiveGhostShip::Client_FireProjectile(const struct FVector& AuthoritySpawnLocation, const struct FVector& LaunchVelocity, TEnumAsByte<Athena_EAggressiveGhostShipCannonFacingDirection> CannonFacingDirection, int CannonIndex, class UClass* ProjectileClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_FireProjectile");

	AAggressiveGhostShip_Client_FireProjectile_Params params;
	params.AuthoritySpawnLocation = AuthoritySpawnLocation;
	params.LaunchVelocity = LaunchVelocity;
	params.CannonFacingDirection = CannonFacingDirection;
	params.CannonIndex = CannonIndex;
	params.ProjectileClass = ProjectileClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_Debug_StartSinkingAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AAggressiveGhostShip::Client_Debug_StartSinkingAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_Debug_StartSinkingAnimation");

	AAggressiveGhostShip_Client_Debug_StartSinkingAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_Debug_StartDisappearAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AAggressiveGhostShip::Client_Debug_StartDisappearAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_Debug_StartDisappearAnimation");

	AAggressiveGhostShip_Client_Debug_StartDisappearAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.Client_Debug_StartAppearAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AAggressiveGhostShip::Client_Debug_StartAppearAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.Client_Debug_StartAppearAnimation");

	AAggressiveGhostShip_Client_Debug_StartAppearAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShip.CheckIsHellishMermaid
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAggressiveGhostShip::CheckIsHellishMermaid()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.CheckIsHellishMermaid");

	AAggressiveGhostShip_CheckIsHellishMermaid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShip.CheckIsBurningBlade
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAggressiveGhostShip::CheckIsBurningBlade()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShip.CheckIsBurningBlade");

	AAggressiveGhostShip_CheckIsBurningBlade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAggressiveGhostShip::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(DataAsset, UAggressiveGhostShipDataAsset);
	READ_PTR_FULL(DifficultyDataAsset, UAggressiveGhostShipDifficultyDataAsset);
	READ_PTR_FULL(MineFormationsDataAsset, UAggressiveGhostShipMineFormationsDataAsset);
	READ_PTR_FULL(LocationDataAsset, UAggressiveGhostShipLocationDataAsset);
	READ_PTR_FULL(ShotSelectionDataAsset, UAggressiveGhostShipShotSelectionDataAsset);
	READ_PTR_FULL(RewardMarker, UClass);
	READ_PTR_FULL(HitDetectionVolume, UBoxComponent);
	READ_PTR_FULL(ShipDamageExplosionComponent, UExplosionComponent);
	READ_PTR_FULL(OnDeathPushBackExplosionComponent, UExplosionComponent);
	READ_PTR_FULL(ShipDamageableComponent, UShipDamageableComponent);
	READ_PTR_FULL(NamedPointsComponent, UNamedPointsComponent);
	READ_PTR_FULL(SplineComponent, USplineComponent);
	READ_PTR_FULL(ImpulseCurve, UCurveFloat);
	READ_PTR_FULL(PoolingResource, AAggressiveGhostShipPoolResource);
	READ_PTR_FULL(VisualsDataAsset, UAggressiveGhostShipVisualsDataAsset);
	READ_PTR_FULL(VisibleMesh, UStaticMeshComponent);
	READ_PTR_FULL(HealthIndicatorEffect, UParticleSystemComponent);
}

void AAggressiveGhostShip::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(DataAsset);
	DELE_PTR_FULL(DifficultyDataAsset);
	DELE_PTR_FULL(MineFormationsDataAsset);
	DELE_PTR_FULL(LocationDataAsset);
	DELE_PTR_FULL(ShotSelectionDataAsset);
	DELE_PTR_FULL(RewardMarker);
	DELE_PTR_FULL(HitDetectionVolume);
	DELE_PTR_FULL(ShipDamageExplosionComponent);
	DELE_PTR_FULL(OnDeathPushBackExplosionComponent);
	DELE_PTR_FULL(ShipDamageableComponent);
	DELE_PTR_FULL(NamedPointsComponent);
	DELE_PTR_FULL(SplineComponent);
	DELE_PTR_FULL(ImpulseCurve);
	DELE_PTR_FULL(PoolingResource);
	DELE_PTR_FULL(VisualsDataAsset);
	DELE_PTR_FULL(VisibleMesh);
	DELE_PTR_FULL(HealthIndicatorEffect);
}

// Function Athena.AggressiveGhostShipAnchorDrop.DestroyAnchorDrop
// (Final, Native, Public, BlueprintCallable)
void AAggressiveGhostShipAnchorDrop::DestroyAnchorDrop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipAnchorDrop.DestroyAnchorDrop");

	AAggressiveGhostShipAnchorDrop_DestroyAnchorDrop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAggressiveGhostShipAnchorDrop::AfterRead()
{
	AActor::AfterRead();

}

void AAggressiveGhostShipAnchorDrop::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UAggressiveGhostShipNamesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipNamesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipBannerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Header, UAggressiveGhostShipNamesDataAsset);
	READ_PTR_FULL(Footer, UAggressiveGhostShipNamesDataAsset);
}

void UAggressiveGhostShipBannerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Header);
	DELE_PTR_FULL(Footer);
}

void UAggressiveGhostShipDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UAggressiveGhostShipDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UAggressiveGhostShipDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(CannonFireSfx, UWwiseEvent);
	READ_PTR_FULL(SpawnSFX, UWwiseEvent);
	READ_PTR_FULL(DespawnSFX, UWwiseEvent);
	READ_PTR_FULL(DeathSfx, UWwiseEvent);
	READ_PTR_FULL(StartAmbientSfx, UWwiseEvent);
	READ_PTR_FULL(StopAmbientSfx, UWwiseEvent);
	READ_PTR_FULL(BeginOverlapOneShotSfx, UWwiseEvent);
	READ_PTR_FULL(EndOverlapOneShotSfx, UWwiseEvent);
	READ_PTR_FULL(OnMinesSpawnedSfx, UWwiseEvent);
	READ_PTR_FULL(OnBreakingSurfaceSfx, UWwiseEvent);
	READ_PTR_FULL(OnDisappearingBelowSurfaceSfx, UWwiseEvent);
	READ_PTR_FULL(OnSinkingSfx, UWwiseEvent);
	READ_PTR_FULL(CapstanDropLoopStart, UWwiseEvent);
	READ_PTR_FULL(CapstanDropLoopStop, UWwiseEvent);
	READ_PTR_FULL(CapstanHitWater, UWwiseEvent);
	READ_PTR_FULL(AmbientSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CannonSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CapstanSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CannonFireEffect, UObject);
	READ_PTR_FULL(HealthIndicatorEffect, UObject);
	READ_PTR_FULL(DeathEffect, UObject);
	READ_PTR_FULL(WraithballProjectileType, UClass);
}

void UAggressiveGhostShipDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(CannonFireSfx);
	DELE_PTR_FULL(SpawnSFX);
	DELE_PTR_FULL(DespawnSFX);
	DELE_PTR_FULL(DeathSfx);
	DELE_PTR_FULL(StartAmbientSfx);
	DELE_PTR_FULL(StopAmbientSfx);
	DELE_PTR_FULL(BeginOverlapOneShotSfx);
	DELE_PTR_FULL(EndOverlapOneShotSfx);
	DELE_PTR_FULL(OnMinesSpawnedSfx);
	DELE_PTR_FULL(OnBreakingSurfaceSfx);
	DELE_PTR_FULL(OnDisappearingBelowSurfaceSfx);
	DELE_PTR_FULL(OnSinkingSfx);
	DELE_PTR_FULL(CapstanDropLoopStart);
	DELE_PTR_FULL(CapstanDropLoopStop);
	DELE_PTR_FULL(CapstanHitWater);
	DELE_PTR_FULL(AmbientSfxPool);
	DELE_PTR_FULL(CannonSfxPool);
	DELE_PTR_FULL(CapstanSfxPool);
	DELE_PTR_FULL(CannonFireEffect);
	DELE_PTR_FULL(HealthIndicatorEffect);
	DELE_PTR_FULL(DeathEffect);
	DELE_PTR_FULL(WraithballProjectileType);
}

void UAggressiveGhostShipDifficultyDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipDifficultyDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipEncounterDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(BarrelsOfPlentySpawnProfileOverride, UBuoyantObjectSpawnProfileDataAsset);
	READ_PTR_FULL(Ship, UClass);
	READ_PTR_FULL(MineActorClass, UClass);
	READ_PTR_FULL(AnchorDropActorClass, UClass);
}

void UAggressiveGhostShipEncounterDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(BarrelsOfPlentySpawnProfileOverride);
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(MineActorClass);
	DELE_PTR_FULL(AnchorDropActorClass);
}

void UMeleeChargeAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

}

void UMeleeChargeAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

}

void UMeleeChargeAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

}

void UMeleeChargeAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

}

void UMeleeSpinAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UMeleeSpinAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UMeleeSpinAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UMeleeSpinAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UCutsceneDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCutsceneDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCutsceneResponsePlayerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneResponsePlayerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CutsceneComponent.TryPlayingCutsceneWithCallback
// (RequiredAPI, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   CutsceneName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScriptDelegate         CutsceneCompletedCallback      (Parm, ZeroConstructor, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCutsceneComponent::TryPlayingCutsceneWithCallback(const struct FName& CutsceneName, const struct FScriptDelegate& CutsceneCompletedCallback)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneComponent.TryPlayingCutsceneWithCallback");

	UCutsceneComponent_TryPlayingCutsceneWithCallback_Params params;
	params.CutsceneName = CutsceneName;
	params.CutsceneCompletedCallback = CutsceneCompletedCallback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CutsceneComponent.TryPlayingCutscene
// (RequiredAPI, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   CutsceneName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCutsceneComponent::TryPlayingCutscene(const struct FName& CutsceneName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneComponent.TryPlayingCutscene");

	UCutsceneComponent_TryPlayingCutscene_Params params;
	params.CutsceneName = CutsceneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CutsceneComponent.RemoveIfQueued
// (RequiredAPI, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   CutsceneName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCutsceneComponent::RemoveIfQueued(const struct FName& CutsceneName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneComponent.RemoveIfQueued");

	UCutsceneComponent_RemoveIfQueued_Params params;
	params.CutsceneName = CutsceneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCutsceneComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CutsceneAsset, UCutsceneDataAsset);
	READ_PTR_FULL(CutSceneActor, AActor);
	READ_PTR_FULL(CutsceneActorType, UClass);
}

void UCutsceneComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CutsceneAsset);
	DELE_PTR_FULL(CutSceneActor);
	DELE_PTR_FULL(CutsceneActorType);
}

// Function Athena.CrewSpecificCutsceneComponent.TryPlayingCutsceneForCrewWithCallback
// (Final, RequiredAPI, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FName                   CutsceneName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScriptDelegate         CutsceneCompletedCallback      (Parm, ZeroConstructor, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewSpecificCutsceneComponent::TryPlayingCutsceneForCrewWithCallback(const struct FGuid& CrewId, const struct FName& CutsceneName, const struct FScriptDelegate& CutsceneCompletedCallback)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewSpecificCutsceneComponent.TryPlayingCutsceneForCrewWithCallback");

	UCrewSpecificCutsceneComponent_TryPlayingCutsceneForCrewWithCallback_Params params;
	params.CrewId = CrewId;
	params.CutsceneName = CutsceneName;
	params.CutsceneCompletedCallback = CutsceneCompletedCallback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewSpecificCutsceneComponent.TryPlayingCutsceneForCrew
// (Final, RequiredAPI, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FName                   CutsceneName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewSpecificCutsceneComponent::TryPlayingCutsceneForCrew(const struct FGuid& CrewId, const struct FName& CutsceneName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewSpecificCutsceneComponent.TryPlayingCutsceneForCrew");

	UCrewSpecificCutsceneComponent_TryPlayingCutsceneForCrew_Params params;
	params.CrewId = CrewId;
	params.CutsceneName = CutsceneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCrewSpecificCutsceneComponent::AfterRead()
{
	UCutsceneComponent::AfterRead();

}

void UCrewSpecificCutsceneComponent::BeforeDelete()
{
	UCutsceneComponent::BeforeDelete();

}

void UCutscenePoolType::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCutscenePoolType::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCutscenePoolTypeSingleUseRandom::AfterRead()
{
	UCutscenePoolType::AfterRead();

}

void UCutscenePoolTypeSingleUseRandom::BeforeDelete()
{
	UCutscenePoolType::BeforeDelete();

}

void UCutscenePoolTypeResettable::AfterRead()
{
	UCutscenePoolType::AfterRead();

}

void UCutscenePoolTypeResettable::BeforeDelete()
{
	UCutscenePoolType::BeforeDelete();

}

void UCutscenePoolTypeExhaustible::AfterRead()
{
	UCutscenePoolType::AfterRead();

}

void UCutscenePoolTypeExhaustible::BeforeDelete()
{
	UCutscenePoolType::BeforeDelete();

}

// Function Athena.CutsceneResponseComponent.FindSheet
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ResponseSheetClass             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UCutsceneResponseSheet*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UCutsceneResponseSheet* UCutsceneResponseComponent::FindSheet(class UClass* ResponseSheetClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseComponent.FindSheet");

	UCutsceneResponseComponent_FindSheet_Params params;
	params.ResponseSheetClass = ResponseSheetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CutsceneResponseComponent.AddResponseSheet
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  ResponseSheetClass             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UCutsceneResponseSheet*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UCutsceneResponseSheet* UCutsceneResponseComponent::AddResponseSheet(class UClass* ResponseSheetClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseComponent.AddResponseSheet");

	UCutsceneResponseComponent_AddResponseSheet_Params params;
	params.ResponseSheetClass = ResponseSheetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCutsceneResponseComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCutsceneResponseComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.CutsceneResponseCoordinator.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InWorldContextObject           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCutsceneResponseCoordinator::Initialize(class UObject* InWorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseCoordinator.Initialize");

	UCutsceneResponseCoordinator_Initialize_Params params;
	params.InWorldContextObject = InWorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCutsceneResponseCoordinator::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(WorldContextObject, UObject);
}

void UCutsceneResponseCoordinator::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(WorldContextObject);
}

// Function Athena.CutsceneTriggerVolume.OnTriggerVolumeBeginOverlap
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ACutsceneTriggerVolume::OnTriggerVolumeBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneTriggerVolume.OnTriggerVolumeBeginOverlap");

	ACutsceneTriggerVolume_OnTriggerVolumeBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACutsceneTriggerVolume::AfterRead()
{
	AVolume::AfterRead();

}

void ACutsceneTriggerVolume::BeforeDelete()
{
	AVolume::BeforeDelete();

}

// Function Athena.PeriodicResponseBlueprintLibrary.UnregisterPeriodicResponse
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPeriodicResponse       PeriodicResponse               (Parm, OutParm, ReferenceParm)
void UPeriodicResponseBlueprintLibrary::STATIC_UnregisterPeriodicResponse(struct FPeriodicResponse* PeriodicResponse)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PeriodicResponseBlueprintLibrary.UnregisterPeriodicResponse");

	UPeriodicResponseBlueprintLibrary_UnregisterPeriodicResponse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PeriodicResponse != nullptr)
		*PeriodicResponse = params.PeriodicResponse;

}


// Function Athena.PeriodicResponseBlueprintLibrary.RegisterPeriodicResponse
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPeriodicResponse       PeriodicResponse               (Parm, OutParm, ReferenceParm)
// struct FScriptDelegate         OnResponseTrigger              (Parm, ZeroConstructor, NoDestructor)
void UPeriodicResponseBlueprintLibrary::STATIC_RegisterPeriodicResponse(class UObject* WorldContext, struct FPeriodicResponse* PeriodicResponse, const struct FScriptDelegate& OnResponseTrigger)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PeriodicResponseBlueprintLibrary.RegisterPeriodicResponse");

	UPeriodicResponseBlueprintLibrary_RegisterPeriodicResponse_Params params;
	params.WorldContext = WorldContext;
	params.OnResponseTrigger = OnResponseTrigger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PeriodicResponse != nullptr)
		*PeriodicResponse = params.PeriodicResponse;

}


void UPeriodicResponseBlueprintLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPeriodicResponseBlueprintLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.SequencerVisibilityResetInterface.ResetVisibility
// (Event, Public, BlueprintEvent)
void USequencerVisibilityResetInterface::ResetVisibility()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequencerVisibilityResetInterface.ResetVisibility");

	USequencerVisibilityResetInterface_ResetVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USequencerVisibilityResetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USequencerVisibilityResetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.VenomableComponent.OnRep_DamageOverTimeDurationTimer
// (Final, Native, Private)
void UVenomableComponent::OnRep_DamageOverTimeDurationTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VenomableComponent.OnRep_DamageOverTimeDurationTimer");

	UVenomableComponent_OnRep_DamageOverTimeDurationTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVenomableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CameraShake, UClass);
	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(AudioCue, UWwiseEvent);
	READ_PTR_FULL(VenomSource, UClass);
}

void UVenomableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CameraShake);
	DELE_PTR_FULL(ForceFeedbackEffect);
	DELE_PTR_FULL(AudioCue);
	DELE_PTR_FULL(VenomSource);
}

// Function Athena.AthenaAICharacter.SetTargetActorToFace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaAICharacter::SetTargetActorToFace(class AActor* InActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.SetTargetActorToFace");

	AAthenaAICharacter_SetTargetActorToFace_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.SetRegion
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InRegion                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaAICharacter::SetRegion(const struct FName& InRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.SetRegion");

	AAthenaAICharacter_SetRegion_Params params;
	params.InRegion = InRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.SetOverrideCannonShotHitChance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          HitChance                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaAICharacter::SetOverrideCannonShotHitChance(bool Enabled, float HitChance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.SetOverrideCannonShotHitChance");

	AAthenaAICharacter_SetOverrideCannonShotHitChance_Params params;
	params.Enabled = Enabled;
	params.HitChance = HitChance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.SetLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TAssetPtr<class ULoadoutAsset> InLoadout                      (Parm, UObjectWrapper, HasGetValueTypeHash)
void AAthenaAICharacter::SetLoadout(TAssetPtr<class ULoadoutAsset> InLoadout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.SetLoadout");

	AAthenaAICharacter_SetLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.SetAIStrategy
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InStrategy                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAthenaAICharacter::SetAIStrategy(class UClass* InStrategy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.SetAIStrategy");

	AAthenaAICharacter_SetAIStrategy_Params params;
	params.InStrategy = InStrategy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.SetAIAnimationState
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InAnimationState               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAthenaAICharacter::SetAIAnimationState(class UClass* InAnimationState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.SetAIAnimationState");

	AAthenaAICharacter_SetAIAnimationState_Params params;
	params.InAnimationState = InAnimationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.ResetMaxHealthTo
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          InMaxHealth                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaAICharacter::ResetMaxHealthTo(float InMaxHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.ResetMaxHealthTo");

	AAthenaAICharacter_ResetMaxHealthTo_Params params;
	params.InMaxHealth = InMaxHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.OnRep_MeshScale
// (Final, Native, Public)
// Parameters:
// float                          OldMeshScale                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaAICharacter::OnRep_MeshScale(float OldMeshScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.OnRep_MeshScale");

	AAthenaAICharacter_OnRep_MeshScale_Params params;
	params.OldMeshScale = OldMeshScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.OnRep_DamageResponsesDisabled
// (Final, Native, Public)
// Parameters:
// bool                           OldDamageResponsesDisabled     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaAICharacter::OnRep_DamageResponsesDisabled(bool OldDamageResponsesDisabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.OnRep_DamageResponsesDisabled");

	AAthenaAICharacter_OnRep_DamageResponsesDisabled_Params params;
	params.OldDamageResponsesDisabled = OldDamageResponsesDisabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.OnRep_CurrentAnimationState
// (Final, Native, Public)
// Parameters:
// class UClass*                  OldAnimationState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAthenaAICharacter::OnRep_CurrentAnimationState(class UClass* OldAnimationState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.OnRep_CurrentAnimationState");

	AAthenaAICharacter_OnRep_CurrentAnimationState_Params params;
	params.OldAnimationState = OldAnimationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.OnRep_CurrentAIStrategy
// (Final, Native, Public)
// Parameters:
// class UClass*                  OldAIStrategy                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AAthenaAICharacter::OnRep_CurrentAIStrategy(class UClass* OldAIStrategy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.OnRep_CurrentAIStrategy");

	AAthenaAICharacter_OnRep_CurrentAIStrategy_Params params;
	params.OldAIStrategy = OldAIStrategy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAICharacter.GetRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName AAthenaAICharacter::GetRegion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.GetRegion");

	AAthenaAICharacter_GetRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAICharacter.GetAIStrategy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* AAthenaAICharacter::GetAIStrategy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.GetAIStrategy");

	AAthenaAICharacter_GetAIStrategy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAICharacter.GetAIEncounterSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAIEncounterSpecification ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)
struct FAIEncounterSpecification AAthenaAICharacter::GetAIEncounterSpec()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.GetAIEncounterSpec");

	AAthenaAICharacter_GetAIEncounterSpec_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAICharacter.GetAIAnimationState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* AAthenaAICharacter::GetAIAnimationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAICharacter.GetAIAnimationState");

	AAthenaAICharacter_GetAIAnimationState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAthenaAICharacter::AfterRead()
{
	AAthenaCharacter::AfterRead();

	READ_PTR_FULL(DefaultAmmoItemDescType, UClass);
	READ_PTR_FULL(DefaultInteractableAmmoItemDescType, UClass);
	READ_PTR_FULL(DistanceInMToCannonShotHitChanceCurve, UCurveFloat);
	READ_PTR_FULL(FaceTargetComponent, UFaceTargetComponent);
	READ_PTR_FULL(AIPartsRetrievalComponent, UAIPartsRetrievalComponent);
	READ_PTR_FULL(FormComponent, UAthenaAIFormComponent);
	READ_PTR_FULL(AICharacterAudioComponent, UAICharacterAudioComponent);
	READ_PTR_FULL(StatusEffectManagerComponent, UStatusEffectManagerComponent);
	READ_PTR_FULL(StatusEffectPersistenceComponent, UStatusEffectPersistenceComponent);
	READ_PTR_FULL(PlayerCurseComponent, UPlayerCurseComponent);
	READ_PTR_FULL(VenomableComponent, UVenomableComponent);
	READ_PTR_FULL(VulnerabilityDuringAIStrategyComponent, UVulnerabilityDuringAIStrategyComponent);
	READ_PTR_FULL(ProjectileTraceHitVolume, UCapsuleComponent);
	READ_PTR_FULL(AnimationDataOverriderComponent, UAnimationDataOverriderComponent);
	READ_PTR_FULL(CustomAnimationHandlerComponent, UCustomAnimationHandlerComponent);
	READ_PTR_FULL(FiringIntentionComponent, UAIProjectileWeaponFiringIntentionComponent);
	READ_PTR_FULL(KilledVfxTemplate, UObject);
	READ_PTR_FULL(PartSpecificKilledVfxTemplate, UObject);
	READ_PTR_FULL(MeleeAttackStrategyId, UClass);
	READ_PTR_FULL(GunpowderKegAnimationStoreId, UClass);
	READ_PTR_FULL(AssignedMesh, USkeletalMesh);
	READ_PTR_FULL(TeamColorTexture, UColorTexture);
	READ_PTR_FULL(CurrentShip, AActor);
	READ_PTR_FULL(CurrentAIStrategy, UClass);
	READ_PTR_FULL(CurrentAnimationState, UClass);
	READ_PTR_FULL(AlternateLocomotionItemType, UClass);
	READ_PTR_FULL(Ammo, UAthenaAIAmmoDataAsset);
}

void AAthenaAICharacter::BeforeDelete()
{
	AAthenaCharacter::BeforeDelete();

	DELE_PTR_FULL(DefaultAmmoItemDescType);
	DELE_PTR_FULL(DefaultInteractableAmmoItemDescType);
	DELE_PTR_FULL(DistanceInMToCannonShotHitChanceCurve);
	DELE_PTR_FULL(FaceTargetComponent);
	DELE_PTR_FULL(AIPartsRetrievalComponent);
	DELE_PTR_FULL(FormComponent);
	DELE_PTR_FULL(AICharacterAudioComponent);
	DELE_PTR_FULL(StatusEffectManagerComponent);
	DELE_PTR_FULL(StatusEffectPersistenceComponent);
	DELE_PTR_FULL(PlayerCurseComponent);
	DELE_PTR_FULL(VenomableComponent);
	DELE_PTR_FULL(VulnerabilityDuringAIStrategyComponent);
	DELE_PTR_FULL(ProjectileTraceHitVolume);
	DELE_PTR_FULL(AnimationDataOverriderComponent);
	DELE_PTR_FULL(CustomAnimationHandlerComponent);
	DELE_PTR_FULL(FiringIntentionComponent);
	DELE_PTR_FULL(KilledVfxTemplate);
	DELE_PTR_FULL(PartSpecificKilledVfxTemplate);
	DELE_PTR_FULL(MeleeAttackStrategyId);
	DELE_PTR_FULL(GunpowderKegAnimationStoreId);
	DELE_PTR_FULL(AssignedMesh);
	DELE_PTR_FULL(TeamColorTexture);
	DELE_PTR_FULL(CurrentShip);
	DELE_PTR_FULL(CurrentAIStrategy);
	DELE_PTR_FULL(CurrentAnimationState);
	DELE_PTR_FULL(AlternateLocomotionItemType);
	DELE_PTR_FULL(Ammo);
}

// Function Athena.OceanCrawlerAICharacter.OnRep_SporeBreathActive
// (Final, Native, Private)
void AOceanCrawlerAICharacter::OnRep_SporeBreathActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OceanCrawlerAICharacter.OnRep_SporeBreathActive");

	AOceanCrawlerAICharacter_OnRep_SporeBreathActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AOceanCrawlerAICharacter::AfterRead()
{
	AAthenaAICharacter::AfterRead();

	READ_PTR_FULL(HealthGemComponent, UHealthGemComponent);
	READ_PTR_FULL(BuffReceiver, UBuffReceiverComponent);
	READ_PTR_FULL(MontageComponent, UCustomAnimationMontageComponent);
	READ_PTR_FULL(OceanCrawlerAnimationServerData, UAnimationServerData);
}

void AOceanCrawlerAICharacter::BeforeDelete()
{
	AAthenaAICharacter::BeforeDelete();

	DELE_PTR_FULL(HealthGemComponent);
	DELE_PTR_FULL(BuffReceiver);
	DELE_PTR_FULL(MontageComponent);
	DELE_PTR_FULL(OceanCrawlerAnimationServerData);
}

void AAthenaGhostPlayerCharacter::AfterRead()
{
	AAthenaPlayerCharacter::AfterRead();

	READ_PTR_FULL(StreamingLocationComponent, UStreamingLocationComponent);
	READ_PTR_FULL(GhostShipTickManager, AGhostShipTickManager);
}

void AAthenaGhostPlayerCharacter::BeforeDelete()
{
	AAthenaPlayerCharacter::BeforeDelete();

	DELE_PTR_FULL(StreamingLocationComponent);
	DELE_PTR_FULL(GhostShipTickManager);
}

void AAthenaGhostPlayerCharacterMock::AfterRead()
{
	AAthenaGhostPlayerCharacter::AfterRead();

}

void AAthenaGhostPlayerCharacterMock::BeforeDelete()
{
	AAthenaGhostPlayerCharacter::BeforeDelete();

}

// Function Athena.VoyageParticipantComponent.OnRep_View
// (Final, Native, Private)
void UVoyageParticipantComponent::OnRep_View()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageParticipantComponent.OnRep_View");

	UVoyageParticipantComponent_OnRep_View_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVoyageParticipantComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OwningPlayer, AActor);
}

void UVoyageParticipantComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OwningPlayer);
}

void AAthenaPlayerCharacterMock::AfterRead()
{
	AAthenaPlayerCharacter::AfterRead();

	READ_PTR_FULL(PetMovementParamsDataAsset, UAICreatureMovementModifierParamsDataAsset);
}

void AAthenaPlayerCharacterMock::BeforeDelete()
{
	AAthenaPlayerCharacter::BeforeDelete();

	DELE_PTR_FULL(PetMovementParamsDataAsset);
}

void AAthenaPlayerCharacterUnitTestMock::AfterRead()
{
	AAthenaPlayerCharacterMock::AfterRead();

	READ_PTR_FULL(ExpectedActionStateId, UClass);
}

void AAthenaPlayerCharacterUnitTestMock::BeforeDelete()
{
	AAthenaPlayerCharacterMock::BeforeDelete();

	DELE_PTR_FULL(ExpectedActionStateId);
}

void AAthenaPlayerCharacterMockWithAnimSeq::AfterRead()
{
	AAthenaPlayerCharacterMock::AfterRead();

}

void AAthenaPlayerCharacterMockWithAnimSeq::BeforeDelete()
{
	AAthenaPlayerCharacterMock::BeforeDelete();

}

void UAthenaCharacterMovementUnderwater::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(VelocityToAngle, UCurveFloat);
}

void UAthenaCharacterMovementUnderwater::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(VelocityToAngle);
}

// Function Athena.LocalDisturbanceFunctionLibrary.SetWindowSize
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D               WindowSize                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ULocalDisturbanceFunctionLibrary::STATIC_SetWindowSize(class UObject* WorldContextObject, const struct FVector2D& WindowSize)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocalDisturbanceFunctionLibrary.SetWindowSize");

	ULocalDisturbanceFunctionLibrary_SetWindowSize_Params params;
	params.WorldContextObject = WorldContextObject;
	params.WindowSize = WindowSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LocalDisturbanceFunctionLibrary.SetBlendValues
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector4                BlendValues                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ULocalDisturbanceFunctionLibrary::STATIC_SetBlendValues(class UObject* WorldContextObject, const struct FVector4& BlendValues)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocalDisturbanceFunctionLibrary.SetBlendValues");

	ULocalDisturbanceFunctionLibrary_SetBlendValues_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BlendValues = BlendValues;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LocalDisturbanceFunctionLibrary.AddDisturbance
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 Velocity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          Size                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          GrassCutScale                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULocalDisturbanceFunctionLibrary::STATIC_AddDisturbance(class UObject* WorldContextObject, const struct FVector& Position, const struct FVector& Velocity, float Size, float GrassCutScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocalDisturbanceFunctionLibrary.AddDisturbance");

	ULocalDisturbanceFunctionLibrary_AddDisturbance_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.Velocity = Velocity;
	params.Size = Size;
	params.GrassCutScale = GrassCutScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULocalDisturbanceFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void ULocalDisturbanceFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaCharacterMovementComponent.UnforceSwimmingClientTrustThreshold
// (Final, Native, Public, BlueprintCallable)
void UAthenaCharacterMovementComponent::UnforceSwimmingClientTrustThreshold()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.UnforceSwimmingClientTrustThreshold");

	UAthenaCharacterMovementComponent_UnforceSwimmingClientTrustThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterMovementComponent.SetMovementMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Engine_EMovementMode> NewMovementMode                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterMovementComponent::SetMovementMode(TEnumAsByte<Engine_EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.SetMovementMode");

	UAthenaCharacterMovementComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterMovementComponent.SetErrorOnResolvePenetration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ErrorOnResolve                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaCharacterMovementComponent::SetErrorOnResolvePenetration(bool ErrorOnResolve)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.SetErrorOnResolvePenetration");

	UAthenaCharacterMovementComponent_SetErrorOnResolvePenetration_Params params;
	params.ErrorOnResolve = ErrorOnResolve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterMovementComponent.HasValidAckedMoveClientOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCharacterMovementComponent::HasValidAckedMoveClientOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.HasValidAckedMoveClientOnly");

	UAthenaCharacterMovementComponent_HasValidAckedMoveClientOnly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetTimestampOfMostRecentPredictedMoveClientOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaCharacterMovementComponent::GetTimestampOfMostRecentPredictedMoveClientOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.GetTimestampOfMostRecentPredictedMoveClientOnly");

	UAthenaCharacterMovementComponent_GetTimestampOfMostRecentPredictedMoveClientOnly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetTimestampOfLastAckedMoveClientOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaCharacterMovementComponent::GetTimestampOfLastAckedMoveClientOnly()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.GetTimestampOfLastAckedMoveClientOnly");

	UAthenaCharacterMovementComponent_GetTimestampOfLastAckedMoveClientOnly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetTerminalVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaCharacterMovementComponent::GetTerminalVelocity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.GetTerminalVelocity");

	UAthenaCharacterMovementComponent_GetTerminalVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetMovementMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Engine_EMovementMode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Engine_EMovementMode> UAthenaCharacterMovementComponent::GetMovementMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.GetMovementMode");

	UAthenaCharacterMovementComponent_GetMovementMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetMaxSprintSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaCharacterMovementComponent::GetMaxSprintSpeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.GetMaxSprintSpeed");

	UAthenaCharacterMovementComponent_GetMaxSprintSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetMaxMoveSpeedScalar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaCharacterMovementComponent::GetMaxMoveSpeedScalar()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.GetMaxMoveSpeedScalar");

	UAthenaCharacterMovementComponent_GetMaxMoveSpeedScalar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.ForceSwimmingClientTrustThreshold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewSwimmingClientTrustThreshold (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterMovementComponent::ForceSwimmingClientTrustThreshold(float NewSwimmingClientTrustThreshold)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.ForceSwimmingClientTrustThreshold");

	UAthenaCharacterMovementComponent_ForceSwimmingClientTrustThreshold_Params params;
	params.NewSwimmingClientTrustThreshold = NewSwimmingClientTrustThreshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterMovementComponent.FindCurrentFloor
// (Final, Native, Public, BlueprintCallable)
void UAthenaCharacterMovementComponent::FindCurrentFloor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterMovementComponent.FindCurrentFloor");

	UAthenaCharacterMovementComponent_FindCurrentFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaCharacterMovementComponent::AfterRead()
{
	UCharacterMovementComponent::AfterRead();

	READ_PTR_FULL(UnderwaterMovement, UAthenaCharacterMovementUnderwater);
	READ_PTR_FULL(UnderwaterVelocityToAnglePitchProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(UnderwaterVelocityToAngleRollProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(UnderwaterVelocityToZOffsetProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(OnLandVelocityToAnglePitchProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(OnLandVelocityToXOffsetProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(OnLandVelocityToYOffsetProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(OnLandVelocityToZOffsetProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(FallingVelocityToAnglePitchProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(FallingVelocityToXOffsetProjectileHitVolume, UCurveFloat);
	READ_PTR_FULL(FallingVelocityToZOffsetProjectileHitVolume, UCurveFloat);
}

void UAthenaCharacterMovementComponent::BeforeDelete()
{
	UCharacterMovementComponent::BeforeDelete();

	DELE_PTR_FULL(UnderwaterMovement);
	DELE_PTR_FULL(UnderwaterVelocityToAnglePitchProjectileHitVolume);
	DELE_PTR_FULL(UnderwaterVelocityToAngleRollProjectileHitVolume);
	DELE_PTR_FULL(UnderwaterVelocityToZOffsetProjectileHitVolume);
	DELE_PTR_FULL(OnLandVelocityToAnglePitchProjectileHitVolume);
	DELE_PTR_FULL(OnLandVelocityToXOffsetProjectileHitVolume);
	DELE_PTR_FULL(OnLandVelocityToYOffsetProjectileHitVolume);
	DELE_PTR_FULL(OnLandVelocityToZOffsetProjectileHitVolume);
	DELE_PTR_FULL(FallingVelocityToAnglePitchProjectileHitVolume);
	DELE_PTR_FULL(FallingVelocityToXOffsetProjectileHitVolume);
	DELE_PTR_FULL(FallingVelocityToZOffsetProjectileHitVolume);
}

// Function Athena.AthenaPlayerCharacterMovementComponent.SetFallDamageLimpStatusIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Intensity                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaPlayerCharacterMovementComponent::SetFallDamageLimpStatusIntensity(float Intensity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacterMovementComponent.SetFallDamageLimpStatusIntensity");

	UAthenaPlayerCharacterMovementComponent_SetFallDamageLimpStatusIntensity_Params params;
	params.Intensity = Intensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacterMovementComponent.RestoreAudioStateAfterFallDamage
// (Final, Native, Private)
void UAthenaPlayerCharacterMovementComponent::RestoreAudioStateAfterFallDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacterMovementComponent.RestoreAudioStateAfterFallDamage");

	UAthenaPlayerCharacterMovementComponent_RestoreAudioStateAfterFallDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacterMovementComponent.CheckForExcessiveVelocity
// (Final, Native, Private)
// Parameters:
// float                          DeltaTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaPlayerCharacterMovementComponent::CheckForExcessiveVelocity(float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacterMovementComponent.CheckForExcessiveVelocity");

	UAthenaPlayerCharacterMovementComponent_CheckForExcessiveVelocity_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaPlayerCharacterMovementComponent::AfterRead()
{
	UAthenaCharacterMovementComponent::AfterRead();

	READ_PTR_FULL(LandingSpeedToFallDamageCurve, UCurveFloat);
}

void UAthenaPlayerCharacterMovementComponent::BeforeDelete()
{
	UAthenaCharacterMovementComponent::BeforeDelete();

	DELE_PTR_FULL(LandingSpeedToFallDamageCurve);
}

void UMockAthenaPlayerCharacterMovementComponent::AfterRead()
{
	UAthenaPlayerCharacterMovementComponent::AfterRead();

}

void UMockAthenaPlayerCharacterMovementComponent::BeforeDelete()
{
	UAthenaPlayerCharacterMovementComponent::BeforeDelete();

}

void AMockAthenaPlayerCharacterWithAthenaPlayerCharacterMovementComponent::AfterRead()
{
	AAthenaPlayerCharacterMock::AfterRead();

}

void AMockAthenaPlayerCharacterWithAthenaPlayerCharacterMovementComponent::BeforeDelete()
{
	AAthenaPlayerCharacterMock::BeforeDelete();

}

void AAthenaPlayerCharacterWithTestInputHandler::AfterRead()
{
	AAthenaPlayerCharacter::AfterRead();

	READ_PTR_FULL(TestInputBinder, UAthenaPlayerCharacterTestInputBinder);
}

void AAthenaPlayerCharacterWithTestInputHandler::BeforeDelete()
{
	AAthenaPlayerCharacter::BeforeDelete();

	DELE_PTR_FULL(TestInputBinder);
}

void UStreamingLocationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStreamingLocationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStreamingLocationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UStreamingLocationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.AthenaTavernPlayerCharacter.OnRep_VoteForRivalsHasPassed
// (Final, Native, Private)
void AAthenaTavernPlayerCharacter::OnRep_VoteForRivalsHasPassed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaTavernPlayerCharacter.OnRep_VoteForRivalsHasPassed");

	AAthenaTavernPlayerCharacter_OnRep_VoteForRivalsHasPassed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAthenaTavernPlayerCharacter::AfterRead()
{
	AAthenaPlayerCharacter::AfterRead();

	READ_PTR_FULL(StreamingLocationComponent, UStreamingLocationComponent);
	READ_PTR_FULL(ArenaTavernPetMovementData, UAICreatureMovementModifierParamsDataAsset);
	READ_PTR_FULL(PlayerController, AAthenaPlayerController);
}

void AAthenaTavernPlayerCharacter::BeforeDelete()
{
	AAthenaPlayerCharacter::BeforeDelete();

	DELE_PTR_FULL(StreamingLocationComponent);
	DELE_PTR_FULL(ArenaTavernPetMovementData);
	DELE_PTR_FULL(PlayerController);
}

void AAthenaTavernPlayerCharacterMock::AfterRead()
{
	AAthenaTavernPlayerCharacter::AfterRead();

}

void AAthenaTavernPlayerCharacterMock::BeforeDelete()
{
	AAthenaTavernPlayerCharacter::BeforeDelete();

}

// Function Athena.AthenaCharacterDockingFunctions.StartDockingCharacterWithActor
// (Final, RequiredAPI, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDocker                 Docker                         (Parm, OutParm, ReferenceParm)
// class AAthenaCharacter*        Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DockDuration                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DelayAfterDockDuration         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterDockingFunctions::STATIC_StartDockingCharacterWithActor(struct FDocker* Docker, class AAthenaCharacter* Owner, class AActor* Target, float DockDuration, float DelayAfterDockDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterDockingFunctions.StartDockingCharacterWithActor");

	UAthenaCharacterDockingFunctions_StartDockingCharacterWithActor_Params params;
	params.Owner = Owner;
	params.Target = Target;
	params.DockDuration = DockDuration;
	params.DelayAfterDockDuration = DelayAfterDockDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Docker != nullptr)
		*Docker = params.Docker;

}


void UAthenaCharacterDockingFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaCharacterDockingFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaCharacterDodgeComponent.Server_RequestDodge
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Direction                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UAthenaCharacterDodgeComponent::Server_RequestDodge(const struct FVector& Direction)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterDodgeComponent.Server_RequestDodge");

	UAthenaCharacterDodgeComponent_Server_RequestDodge_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterDodgeComponent.Multicast_CharacterDodge
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector                 Direction                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UAthenaCharacterDodgeComponent::Multicast_CharacterDodge(const struct FVector& Direction)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterDodgeComponent.Multicast_CharacterDodge");

	UAthenaCharacterDodgeComponent_Multicast_CharacterDodge_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaCharacterDodgeComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(BunnyHoppingScalarCurve, UCurveFloat);
	READ_PTR_FULL(Character, AAthenaCharacter);
}

void UAthenaCharacterDodgeComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(BunnyHoppingScalarCurve);
	DELE_PTR_FULL(Character);
}

// Function Athena.AthenaCharacterFunctions.TeleportPlayerToLocationDuringSpawning
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       Where                          (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCharacterFunctions::STATIC_TeleportPlayerToLocationDuringSpawning(class AAthenaCharacter* Character, const struct FTeleportLocation& Where)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.TeleportPlayerToLocationDuringSpawning");

	UAthenaCharacterFunctions_TeleportPlayerToLocationDuringSpawning_Params params;
	params.Character = Character;
	params.Where = Where;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterFunctions.TeleportPlayerToLocation
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       Where                          (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCharacterFunctions::STATIC_TeleportPlayerToLocation(class AAthenaCharacter* Character, const struct FTeleportLocation& Where)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.TeleportPlayerToLocation");

	UAthenaCharacterFunctions_TeleportPlayerToLocation_Params params;
	params.Character = Character;
	params.Where = Where;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterFunctions.SetItemMovementSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EItemUseSpeed> InItemUseSpeed                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FItemUseSpeedParams     Params                         (Parm)
void UAthenaCharacterFunctions::STATIC_SetItemMovementSpeed(class AAthenaCharacter* Character, TEnumAsByte<Athena_EItemUseSpeed> InItemUseSpeed, const struct FItemUseSpeedParams& Params)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.SetItemMovementSpeed");

	UAthenaCharacterFunctions_SetItemMovementSpeed_Params params;
	params.Character = Character;
	params.InItemUseSpeed = InItemUseSpeed;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterFunctions.ResetItemMovementSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterFunctions::STATIC_ResetItemMovementSpeed(class AAthenaCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.ResetItemMovementSpeed");

	UAthenaCharacterFunctions_ResetItemMovementSpeed_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterFunctions.IsActionStateMachineActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCharacterFunctions::STATIC_IsActionStateMachineActive(class AAthenaCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.IsActionStateMachineActive");

	UAthenaCharacterFunctions_IsActionStateMachineActive_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterFunctions.GetTeleportLocationForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportTransformSpace> Space                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference)
struct FTeleportLocation UAthenaCharacterFunctions::STATIC_GetTeleportLocationForPlayer(class AAthenaCharacter* Player, TEnumAsByte<Athena_ETeleportTransformSpace> Space)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.GetTeleportLocationForPlayer");

	UAthenaCharacterFunctions_GetTeleportLocationForPlayer_Params params;
	params.Player = Player;
	params.Space = Space;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterFunctions.AllAnimationsLoadedForCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCharacterFunctions::STATIC_AllAnimationsLoadedForCharacter(class AAthenaCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterFunctions.AllAnimationsLoadedForCharacter");

	UAthenaCharacterFunctions_AllAnimationsLoadedForCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaCharacterFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaCharacterFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCampaignPopUpNotificationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCampaignPopUpNotificationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UOneShotInteractableFilterDesc::AfterRead()
{
	UObject::AfterRead();

}

void UOneShotInteractableFilterDesc::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UCanBeReloadedOneShotInteractableFilterDesc::AfterRead()
{
	UOneShotInteractableFilterDesc::AfterRead();

}

void UCanBeReloadedOneShotInteractableFilterDesc::BeforeDelete()
{
	UOneShotInteractableFilterDesc::BeforeDelete();

}

// Function Athena.CannonAnimInterface.SetCannonFiring
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           CannonFiring                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCannonAnimInterface::SetCannonFiring(bool CannonFiring)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CannonAnimInterface.SetCannonFiring");

	UCannonAnimInterface_SetCannonFiring_Params params;
	params.CannonFiring = CannonFiring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CannonAnimInterface.GetCannonFiring
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCannonAnimInterface::GetCannonFiring()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CannonAnimInterface.GetCannonFiring");

	UCannonAnimInterface_GetCannonFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCannonAnimInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCannonAnimInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CannonAnimInstance.GetCannonFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCannonAnimInstance::GetCannonFiring()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CannonAnimInstance.GetCannonFiring");

	UCannonAnimInstance_GetCannonFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCannonAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

}

void UCannonAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

}

void ACannonBall::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(ConsumableWieldable, UConsumableWieldableComponent);
}

void ACannonBall::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(ConsumableWieldable);
}

void AGrenade::AfterRead()
{
	ACannonBall::AfterRead();

	READ_PTR_FULL(GrenadeSetupDataAsset, UGrenadeSetupDataAsset);
	READ_PTR_FULL(ThrownProjectileType, UClass);
}

void AGrenade::BeforeDelete()
{
	ACannonBall::BeforeDelete();

	DELE_PTR_FULL(GrenadeSetupDataAsset);
	DELE_PTR_FULL(ThrownProjectileType);
}

void UCannonballStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UCannonballStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void ACarvedWoodenPlank::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
}

void ACarvedWoodenPlank::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(UsableWieldableComponent);
}

void UCatalogOfferDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCatalogOfferDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCatalogDiscountDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCatalogDiscountDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCatalogDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCatalogDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCatalogListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCatalogListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEmissaryRewardMultiplierModelDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEmissaryRewardMultiplierModelDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTooltipDetailedEventProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTooltipDetailedEventProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AReapersMarkService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Settings, UReapersMarkSettingsAsset);
}

void AReapersMarkService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Settings);
}

void UStrongholdKeyData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStrongholdKeyData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void AStrongholdKeyItemInfo::AfterRead()
{
	ANonStorableItemInfo::AfterRead();

}

void AStrongholdKeyItemInfo::BeforeDelete()
{
	ANonStorableItemInfo::BeforeDelete();

}

void AStrongholdKeyProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

}

void AStrongholdKeyProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

}

// Function Athena.StunnedActionStateId.PushCharacterIntoStunnedActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStunnedActionStateParams Params                         (ConstParm, Parm, OutParm, ReferenceParm)
void UStunnedActionStateId::STATIC_PushCharacterIntoStunnedActionState(class AAthenaCharacter* Character, const struct FStunnedActionStateParams& Params)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StunnedActionStateId.PushCharacterIntoStunnedActionState");

	UStunnedActionStateId_PushCharacterIntoStunnedActionState_Params params;
	params.Character = Character;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.StunnedActionStateId.PushActorIntoStunnedActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStunnedActionStateParams InStunnedActionStateParameters (ConstParm, Parm, OutParm, ReferenceParm)
void UStunnedActionStateId::STATIC_PushActorIntoStunnedActionState(class AActor* InActor, const struct FStunnedActionStateParams& InStunnedActionStateParameters)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StunnedActionStateId.PushActorIntoStunnedActionState");

	UStunnedActionStateId_PushActorIntoStunnedActionState_Params params;
	params.InActor = InActor;
	params.InStunnedActionStateParameters = InStunnedActionStateParameters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStunnedActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UStunnedActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void USummonAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void USummonAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void USummonAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void USummonAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void USummonAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

	READ_PTR_FULL(SummonSpawner, UAIIncrementalWaveSpawner);
}

void USummonAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

	DELE_PTR_FULL(SummonSpawner);
}

void UTaleQuestReleaseContendedResourceStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestReleaseContendedResourceStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestReleaseVaultStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleQuestReleaseVaultStepDesc);
}

void UTaleQuestReleaseVaultStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UAddNPCOnSurfaceStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(NPCOnSurfaceDataAsset, UNPCOnSurfaceDataAsset);
}

void UAddNPCOnSurfaceStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(NPCOnSurfaceDataAsset);
}

void UNPCOnShipSimpleAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(Into, UAnimSequenceBase);
	READ_PTR_FULL(Loop, UAnimSequenceBase);
	READ_PTR_FULL(ActiveLoop, UAnimSequenceBase);
	READ_PTR_FULL(Outof, UAnimSequenceBase);
	READ_PTR_FULL(OutOfAlternate, UAnimSequenceBase);
	READ_PTR_FULL(CustomAnimationMontageDefinitionListingDataAsset, UCustomAnimationMontageDefinitionListingDataAsset);
	READ_PTR_FULL(FacialCustomAnimationMontageDefinitionListingDataAsset, UCustomAnimationMontageDefinitionListingDataAsset);
	READ_PTR_FULL(LoadOnDemandInactive, UWeightedAnimSequenceLoadOnDemand);
	READ_PTR_FULL(LoadOnDemandActive, UWeightedAnimSequenceLoadOnDemand);
	READ_PTR_FULL(LoadOnDemandActiveData, UWeightedAnimationLoadOnDemandDataAsset);
	READ_PTR_FULL(LoadOnDemandInactiveData, UWeightedAnimationLoadOnDemandDataAsset);
}

void UNPCOnShipSimpleAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Loop);
	DELE_PTR_FULL(ActiveLoop);
	DELE_PTR_FULL(Outof);
	DELE_PTR_FULL(OutOfAlternate);
	DELE_PTR_FULL(CustomAnimationMontageDefinitionListingDataAsset);
	DELE_PTR_FULL(FacialCustomAnimationMontageDefinitionListingDataAsset);
	DELE_PTR_FULL(LoadOnDemandInactive);
	DELE_PTR_FULL(LoadOnDemandActive);
	DELE_PTR_FULL(LoadOnDemandActiveData);
	DELE_PTR_FULL(LoadOnDemandInactiveData);
}

void UEntitlementsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEntitlementsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UMeshMemoryConstraintServiceBudgetData::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(MeshMemoryConstraintFallbackAsset, UMeshMemoryConstraintFallbackDataAsset);
	READ_PTR_FULL(World, UWorld);
}

void UMeshMemoryConstraintServiceBudgetData::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(MeshMemoryConstraintFallbackAsset);
	DELE_PTR_FULL(World);
}

void UMeshMemoryConstraintService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void UMeshMemoryConstraintService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UEffectBlendObjectBase::AfterRead()
{
	UObject::AfterRead();

}

void UEffectBlendObjectBase::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMaterialParameterBlendBase::AfterRead()
{
	UEffectBlendObjectBase::AfterRead();

	READ_PTR_FULL(DynamicMaterial, UMaterialInstanceDynamic);
}

void UMaterialParameterBlendBase::BeforeDelete()
{
	UEffectBlendObjectBase::BeforeDelete();

	DELE_PTR_FULL(DynamicMaterial);
}

void UMaterialVectorParameterBlend::AfterRead()
{
	UMaterialParameterBlendBase::AfterRead();

}

void UMaterialVectorParameterBlend::BeforeDelete()
{
	UMaterialParameterBlendBase::BeforeDelete();

}

// Function Athena.NetworkTriggeredVFXComponent.Multicast_PlayVFXRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// int                            VFXIndex                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNetworkTriggeredVFXComponent::Multicast_PlayVFXRPC(int VFXIndex, const struct FVector& Location, const struct FRotator& Rotation, class AActor* Owner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NetworkTriggeredVFXComponent.Multicast_PlayVFXRPC");

	UNetworkTriggeredVFXComponent_Multicast_PlayVFXRPC_Params params;
	params.VFXIndex = VFXIndex;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UNetworkTriggeredVFXComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CurrentlyPlayingParticleSystem, UParticleSystemComponent);
}

void UNetworkTriggeredVFXComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentlyPlayingParticleSystem);
}

// Function Athena.RainZoneInterface.GetRainZoneParametersAtTime
// (Native, Public, Const)
// Parameters:
// double                         InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRainZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FRainZoneParametersAndLocation URainZoneInterface::GetRainZoneParametersAtTime(double InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneInterface.GetRainZoneParametersAtTime");

	URainZoneInterface_GetRainZoneParametersAtTime_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RainZoneInterface.GetRainZoneParameters
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRainZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FRainZoneParametersAndLocation URainZoneInterface::GetRainZoneParameters()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneInterface.GetRainZoneParameters");

	URainZoneInterface_GetRainZoneParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URainZoneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URainZoneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URainZoneComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void URainZoneComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Athena.RainZoneServiceInterface.UnregisterRainZoneFromService
// (Native, Public, BlueprintCallable)
void URainZoneServiceInterface::UnregisterRainZoneFromService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.UnregisterRainZoneFromService");

	URainZoneServiceInterface_UnregisterRainZoneFromService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RainZoneServiceInterface.RegisterRainZoneWithService
// (Native, Public, BlueprintCallable)
void URainZoneServiceInterface::RegisterRainZoneWithService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.RegisterRainZoneWithService");

	URainZoneServiceInterface_RegisterRainZoneWithService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RainZoneServiceInterface.GetRainZone
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            RainZoneIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRainZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FRainZoneParametersAndLocation URainZoneServiceInterface::GetRainZone(int RainZoneIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.GetRainZone");

	URainZoneServiceInterface_GetRainZone_Params params;
	params.RainZoneIndex = RainZoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetRainStrengthAtTime
// (Native, Public, HasOutParms, HasDefaults, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// double                         InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float URainZoneServiceInterface::GetRainStrengthAtTime(const struct FVector& Position, double InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.GetRainStrengthAtTime");

	URainZoneServiceInterface_GetRainStrengthAtTime_Params params;
	params.Position = Position;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetRainStrength
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float URainZoneServiceInterface::GetRainStrength(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.GetRainStrength");

	URainZoneServiceInterface_GetRainStrength_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetNumberOfRainZones
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int URainZoneServiceInterface::GetNumberOfRainZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.GetNumberOfRainZones");

	URainZoneServiceInterface_GetNumberOfRainZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetAllRainZones
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FRainZoneParametersAndLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FRainZoneParametersAndLocation> URainZoneServiceInterface::GetAllRainZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RainZoneServiceInterface.GetAllRainZones");

	URainZoneServiceInterface_GetAllRainZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URainZoneServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URainZoneServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URainZoneService::AfterRead()
{
	UObject::AfterRead();

}

void URainZoneService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShelteredInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShelteredInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShelteredComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShelteredComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UStatusResponseRain::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseRain::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UBowSplashContainer::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBowSplashContainer::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UDeckSurfaceWaterProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDeckSurfaceWaterProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIdentifiedAsShipInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIdentifiedAsShipInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UOnboardCharacterTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UOnboardCharacterTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipBlueprintFunctionLibrary.FindShipPartByType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  PartType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UShipBlueprintFunctionLibrary::STATIC_FindShipPartByType(class AActor* Ship, class UClass* PartType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipBlueprintFunctionLibrary.FindShipPartByType");

	UShipBlueprintFunctionLibrary_FindShipPartByType_Params params;
	params.Ship = Ship;
	params.PartType = PartType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UShipBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UShipCategory::AfterRead()
{
	UObject::AfterRead();

}

void UShipCategory::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipCategoryA::AfterRead()
{
	UShipCategory::AfterRead();

}

void UShipCategoryA::BeforeDelete()
{
	UShipCategory::BeforeDelete();

}

void UShipCategoryB::AfterRead()
{
	UShipCategory::AfterRead();

}

void UShipCategoryB::BeforeDelete()
{
	UShipCategory::BeforeDelete();

}

void UShipCategoryC::AfterRead()
{
	UShipCategory::AfterRead();

}

void UShipCategoryC::BeforeDelete()
{
	UShipCategory::BeforeDelete();

}

void UShipCategoryD::AfterRead()
{
	UShipCategory::AfterRead();

}

void UShipCategoryD::BeforeDelete()
{
	UShipCategory::BeforeDelete();

}

void UShipCategoryS::AfterRead()
{
	UShipCategory::AfterRead();

}

void UShipCategoryS::BeforeDelete()
{
	UShipCategory::BeforeDelete();

}

void UShipCustomizationCategory::AfterRead()
{
	UCategoryBase::AfterRead();

}

void UShipCustomizationCategory::BeforeDelete()
{
	UCategoryBase::BeforeDelete();

}

void UInvalidShipCustomizationCategory::AfterRead()
{
	UShipCustomizationCategory::AfterRead();

}

void UInvalidShipCustomizationCategory::BeforeDelete()
{
	UShipCustomizationCategory::BeforeDelete();

}

void UShipDescAsset::AfterRead()
{
	UObject::AfterRead();

}

void UShipDescAsset::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipDynamicsProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipDynamicsProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipDynamicsTargetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipDynamicsTargetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipGetterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipGetterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipPartCustomizationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShipPartCustomizationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ReplicatedShipPartCustomizationComponent.OnReplicate_PartDesc
// (Final, Native, Private)
void UReplicatedShipPartCustomizationComponent::OnReplicate_PartDesc()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplicatedShipPartCustomizationComponent.OnReplicate_PartDesc");

	UReplicatedShipPartCustomizationComponent_OnReplicate_PartDesc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UReplicatedShipPartCustomizationComponent::AfterRead()
{
	UShipPartCustomizationComponent::AfterRead();

}

void UReplicatedShipPartCustomizationComponent::BeforeDelete()
{
	UShipPartCustomizationComponent::BeforeDelete();

}

void UShipLiveryComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DefaultLivery, UShipLiveryDescAsset);
}

void UShipLiveryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DefaultLivery);
}

void UShipNosediveBrake::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SubmersionVsBrakeFactorCurve, UCurveFloat);
}

void UShipNosediveBrake::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SubmersionVsBrakeFactorCurve);
}

void UShipRegionLocatorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipRegionLocatorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipSpeedBand::AfterRead()
{
	UObject::AfterRead();

}

void UShipSpeedBand::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipTelemetryDescriptorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipTelemetryDescriptorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipType::AfterRead()
{
	UObject::AfterRead();

}

void UShipType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipTypeAI::AfterRead()
{
	UShipType::AfterRead();

}

void UShipTypeAI::BeforeDelete()
{
	UShipType::BeforeDelete();

}

void UShipTypeAIAggressive::AfterRead()
{
	UShipType::AfterRead();

}

void UShipTypeAIAggressive::BeforeDelete()
{
	UShipType::BeforeDelete();

}

void UShipTypeAIPassive::AfterRead()
{
	UShipType::AfterRead();

}

void UShipTypeAIPassive::BeforeDelete()
{
	UShipType::BeforeDelete();

}

void UStatConditionTargetSelector::AfterRead()
{
	UObject::AfterRead();

}

void UStatConditionTargetSelector::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UStatConditionTrackedShipTargetSelector::AfterRead()
{
	UStatConditionTargetSelector::AfterRead();

}

void UStatConditionTrackedShipTargetSelector::BeforeDelete()
{
	UStatConditionTargetSelector::BeforeDelete();

}

// Function Athena.WaterHeightInterestInterface.UpdateWaterHeight
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          InWaterHeight                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWaterInformation       InWaterInformation             (ConstParm, Parm, OutParm, ReferenceParm)
void UWaterHeightInterestInterface::UpdateWaterHeight(float InWaterHeight, const struct FWaterInformation& InWaterInformation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightInterestInterface.UpdateWaterHeight");

	UWaterHeightInterestInterface_UpdateWaterHeight_Params params;
	params.InWaterHeight = InWaterHeight;
	params.InWaterInformation = InWaterInformation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterHeightInterestInterface.ShouldUpdateWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWaterHeightInterestInterface::ShouldUpdateWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightInterestInterface.ShouldUpdateWaterHeight");

	UWaterHeightInterestInterface_ShouldUpdateWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWaterHeightInterestInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWaterHeightInterestInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWaterHeightInterestServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWaterHeightInterestServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWaterHeightInterestService::AfterRead()
{
	UObject::AfterRead();

}

void UWaterHeightInterestService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.WaterHeightProviderInterface.HasValidWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWaterHeightProviderInterface::HasValidWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightProviderInterface.HasValidWaterHeight");

	UWaterHeightProviderInterface_HasValidWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderInterface.GetWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWaterHeightProviderInterface::GetWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightProviderInterface.GetWaterHeight");

	UWaterHeightProviderInterface_GetWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderInterface.GetValidWaterHeightAtomic
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutWaterHeight                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWaterHeightProviderInterface::GetValidWaterHeightAtomic(float* OutWaterHeight)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightProviderInterface.GetValidWaterHeightAtomic");

	UWaterHeightProviderInterface_GetValidWaterHeightAtomic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutWaterHeight != nullptr)
		*OutWaterHeight = params.OutWaterHeight;


	return params.ReturnValue;
}


void UWaterHeightProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWaterHeightProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WaterHeightProviderComponent.HasValidWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWaterHeightProviderComponent::HasValidWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightProviderComponent.HasValidWaterHeight");

	UWaterHeightProviderComponent_HasValidWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderComponent.GetWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWaterHeightProviderComponent::GetWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightProviderComponent.GetWaterHeight");

	UWaterHeightProviderComponent_GetWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderComponent.GetValidWaterHeightAtomic
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutWaterHeight                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWaterHeightProviderComponent::GetValidWaterHeightAtomic(float* OutWaterHeight)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterHeightProviderComponent.GetValidWaterHeightAtomic");

	UWaterHeightProviderComponent_GetValidWaterHeightAtomic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutWaterHeight != nullptr)
		*OutWaterHeight = params.OutWaterHeight;


	return params.ReturnValue;
}


void UWaterHeightProviderComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWaterHeightProviderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UWaterHeightProviderServerOnlyComponent::AfterRead()
{
	UWaterHeightProviderComponent::AfterRead();

}

void UWaterHeightProviderServerOnlyComponent::BeforeDelete()
{
	UWaterHeightProviderComponent::BeforeDelete();

}

void UActorInWaterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UActorInWaterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DeepSeaHelpers.IsInTheDeepSea
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InWorldPosition                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDeepSeaHelpers::STATIC_IsInTheDeepSea(const struct FVector& InWorldPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DeepSeaHelpers.IsInTheDeepSea");

	UDeepSeaHelpers_IsInTheDeepSea_Params params;
	params.InWorldPosition = InWorldPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DeepSeaHelpers.GetDeepSeaStartDepth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UDeepSeaHelpers::STATIC_GetDeepSeaStartDepth()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DeepSeaHelpers.GetDeepSeaStartDepth");

	UDeepSeaHelpers_GetDeepSeaStartDepth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDeepSeaHelpers::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UDeepSeaHelpers::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UDeepSeaSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UDeepSeaSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UDrowningComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DrowningEmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(StartDrowningSfx, UWwiseEvent);
	READ_PTR_FULL(StopDrowningSfx, UWwiseEvent);
	READ_PTR_FULL(StartDrowningSfxRemotePlayer, UWwiseEvent);
	READ_PTR_FULL(StopDrowningSfxRemotePlayer, UWwiseEvent);
	READ_PTR_FULL(SurfaceBreathSfxSoft, UWwiseEvent);
	READ_PTR_FULL(SurfaceBreathSfxMed, UWwiseEvent);
	READ_PTR_FULL(SurfaceBreathSfxHard, UWwiseEvent);
	READ_PTR_FULL(BubblesSfx, UWwiseEvent);
	READ_PTR_FULL(BubblesFirstPerson, UObject);
	READ_PTR_FULL(BubblesThirdPerson, UObject);
	READ_PTR_FULL(BubbleRateTimeCurve, UCurveFloat);
}

void UDrowningComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DrowningEmitterPool);
	DELE_PTR_FULL(StartDrowningSfx);
	DELE_PTR_FULL(StopDrowningSfx);
	DELE_PTR_FULL(StartDrowningSfxRemotePlayer);
	DELE_PTR_FULL(StopDrowningSfxRemotePlayer);
	DELE_PTR_FULL(SurfaceBreathSfxSoft);
	DELE_PTR_FULL(SurfaceBreathSfxMed);
	DELE_PTR_FULL(SurfaceBreathSfxHard);
	DELE_PTR_FULL(BubblesSfx);
	DELE_PTR_FULL(BubblesFirstPerson);
	DELE_PTR_FULL(BubblesThirdPerson);
	DELE_PTR_FULL(BubbleRateTimeCurve);
}

void UShipInternalWaterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipInternalWaterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipInternalWater.TryGetIntersectionPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 StartPosition                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 EndPosition                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 IntersectionPosition           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShipInternalWater::TryGetIntersectionPosition(const struct FVector& StartPosition, const struct FVector& EndPosition, struct FVector* IntersectionPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.TryGetIntersectionPosition");

	AShipInternalWater_TryGetIntersectionPosition_Params params;
	params.StartPosition = StartPosition;
	params.EndPosition = EndPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (IntersectionPosition != nullptr)
		*IntersectionPosition = params.IntersectionPosition;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.ShrinkWaterOcclusionVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipInternalWater::ShrinkWaterOcclusionVolume(float Time)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.ShrinkWaterOcclusionVolume");

	AShipInternalWater_ShrinkWaterOcclusionVolume_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipInternalWater.SetNormalizedWaterAmountLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NormalizedWaterAmount          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipInternalWater::SetNormalizedWaterAmountLimit(float NormalizedWaterAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.SetNormalizedWaterAmountLimit");

	AShipInternalWater_SetNormalizedWaterAmountLimit_Params params;
	params.NormalizedWaterAmount = NormalizedWaterAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipInternalWater.SetNormalizedWaterAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NoramlisedWaterAmount          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipInternalWater::SetNormalizedWaterAmount(float NoramlisedWaterAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.SetNormalizedWaterAmount");

	AShipInternalWater_SetNormalizedWaterAmount_Params params;
	params.NoramlisedWaterAmount = NoramlisedWaterAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipInternalWater.RegisterComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat*             CurveFloat                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipInternalWater::RegisterComponents(class UCurveFloat* CurveFloat)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.RegisterComponents");

	AShipInternalWater_RegisterComponents_Params params;
	params.CurveFloat = CurveFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipInternalWater.OnRep_ServerWaterAmount
// (Final, Native, Private)
void AShipInternalWater::OnRep_ServerWaterAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.OnRep_ServerWaterAmount");

	AShipInternalWater_OnRep_ServerWaterAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipInternalWater.IsWaterMeshVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShipInternalWater::IsWaterMeshVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.IsWaterMeshVisible");

	AShipInternalWater_IsWaterMeshVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.IsOcclusionZoneFullyReduced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShipInternalWater::IsOcclusionZoneFullyReduced()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.IsOcclusionZoneFullyReduced");

	AShipInternalWater_IsOcclusionZoneFullyReduced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetWaterAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShipInternalWater::GetWaterAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.GetWaterAmount");

	AShipInternalWater_GetWaterAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetRelativeWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShipInternalWater::GetRelativeWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.GetRelativeWaterHeight");

	AShipInternalWater_GetRelativeWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetNormalizedWaterAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShipInternalWater::GetNormalizedWaterAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.GetNormalizedWaterAmount");

	AShipInternalWater_GetNormalizedWaterAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetNormalizedVisualWaterAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShipInternalWater::GetNormalizedVisualWaterAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.GetNormalizedVisualWaterAmount");

	AShipInternalWater_GetNormalizedVisualWaterAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetDistanceFromPosition
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShipInternalWater::GetDistanceFromPosition(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.GetDistanceFromPosition");

	AShipInternalWater_GetDistanceFromPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.AddWaterAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          WaterToAdd                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipInternalWater::AddWaterAmount(float WaterToAdd)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipInternalWater.AddWaterAmount");

	AShipInternalWater_AddWaterAmount_Params params;
	params.WaterToAdd = WaterToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShipInternalWater::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SceneRootComponent, USceneComponent);
	READ_PTR_FULL(WaterPlaneActivationVolume, UStaticMeshComponent);
	READ_PTR_FULL(WaterOcclusionVolume, UStaticMeshComponent);
	READ_PTR_FULL(WaterMeshComponent, UFlatWaterMeshComponent);
	READ_PTR_FULL(WaterPlaneComponent, UFlatWaterPlaneComponent);
	READ_PTR_FULL(WaterOcclusionZoneReductionCurve, UCurveFloat);
}

void AShipInternalWater::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SceneRootComponent);
	DELE_PTR_FULL(WaterPlaneActivationVolume);
	DELE_PTR_FULL(WaterOcclusionVolume);
	DELE_PTR_FULL(WaterMeshComponent);
	DELE_PTR_FULL(WaterPlaneComponent);
	DELE_PTR_FULL(WaterOcclusionZoneReductionCurve);
}

void UShipInternalWaterContainerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipInternalWaterContainerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USoakableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USoakableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemSpawnDistributionAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UItemSpawnDistributionAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UItemSpawnData::AfterRead()
{
	UObject::AfterRead();

}

void UItemSpawnData::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UActorSpawnData::AfterRead()
{
	UItemSpawnData::AfterRead();

}

void UActorSpawnData::BeforeDelete()
{
	UItemSpawnData::BeforeDelete();

}

void UClusterSpawnData::AfterRead()
{
	UItemSpawnData::AfterRead();

}

void UClusterSpawnData::BeforeDelete()
{
	UItemSpawnData::BeforeDelete();

}

// Function Athena.ItemSpawningBlueprintFunctions.SelectItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWeightedItemDescSpawnDataAsset* WeightedList                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            NumItemsToSelect               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UItemSpawningBlueprintFunctions::STATIC_SelectItems(class UWeightedItemDescSpawnDataAsset* WeightedList, int NumItemsToSelect)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemSpawningBlueprintFunctions.SelectItems");

	UItemSpawningBlueprintFunctions_SelectItems_Params params;
	params.WeightedList = WeightedList;
	params.NumItemsToSelect = NumItemsToSelect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemSpawningBlueprintFunctions.SelectItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWeightedItemDescSpawnDataAsset* WeightedList                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UItemSpawningBlueprintFunctions::STATIC_SelectItem(class UWeightedItemDescSpawnDataAsset* WeightedList)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemSpawningBlueprintFunctions.SelectItem");

	UItemSpawningBlueprintFunctions_SelectItem_Params params;
	params.WeightedList = WeightedList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UItemSpawningBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UItemSpawningBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void USpawnableItemMetadataInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USpawnableItemMetadataInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWeightedItemDescSpawnDataAssetWithRandomQuantity::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeightedItemDescSpawnDataAssetWithRandomQuantity::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCanvasLODControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCanvasLODControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCanvasLODServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCanvasLODServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCanvasLODService::AfterRead()
{
	UObject::AfterRead();

}

void UCanvasLODService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWieldableItemCanvasRenderingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldableItemCanvasRenderingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WieldableItemCanvasRenderingComponent.OnPrimaryCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldableItemCanvasRenderingComponent::OnPrimaryCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemCanvasRenderingComponent.OnPrimaryCanvasUpdate");

	UWieldableItemCanvasRenderingComponent_OnPrimaryCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWieldableItemCanvasRenderingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PrimaryRenderTarget, UMaybeCompressedCanvasRenderTarget2D);
}

void UWieldableItemCanvasRenderingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PrimaryRenderTarget);
}

void UCargoRunCrateInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCargoRunCrateInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCargoRunMapLayout::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCargoRunMapLayout::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URewardDefinitionAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URewardDefinitionAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URewardDefinitionAssetList::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(WeightRewardTable, UWeightedRewardTableAsset);
}

void URewardDefinitionAssetList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(WeightRewardTable);
}

void URewardServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URewardServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URewardService::AfterRead()
{
	UObject::AfterRead();

}

void URewardService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWeightedRewardTableAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeightedRewardTableAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UContainerAllowedItemsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContainerAllowedItemsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UInteractableStorageContainer::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(Aggregator, UObject);
	READ_PTR_FULL(InteractInput, UClass);
}

void UInteractableStorageContainer::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(Aggregator);
	DELE_PTR_FULL(InteractInput);
}

// Function Athena.ReplenishableInterface.SetShouldRefresh
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           InShouldRefresh                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UReplenishableInterface::SetShouldRefresh(bool InShouldRefresh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.SetShouldRefresh");

	UReplenishableInterface_SetShouldRefresh_Params params;
	params.InShouldRefresh = InShouldRefresh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableInterface.ReplenishFromDebugSpawner
// (Native, Public, BlueprintCallable)
void UReplenishableInterface::ReplenishFromDebugSpawner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.ReplenishFromDebugSpawner");

	UReplenishableInterface_ReplenishFromDebugSpawner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableInterface.Replenish
// (Native, Public, BlueprintCallable)
void UReplenishableInterface::Replenish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.Replenish");

	UReplenishableInterface_Replenish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableInterface.RefreshFromSpawner
// (Native, Public, BlueprintCallable)
void UReplenishableInterface::RefreshFromSpawner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.RefreshFromSpawner");

	UReplenishableInterface_RefreshFromSpawner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableInterface.IsAtMaxCapacity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UReplenishableInterface::IsAtMaxCapacity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.IsAtMaxCapacity");

	UReplenishableInterface_IsAtMaxCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ReplenishableInterface.GetShouldRefresh
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UReplenishableInterface::GetShouldRefresh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.GetShouldRefresh");

	UReplenishableInterface_GetShouldRefresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ReplenishableInterface.FillWithDefaultDesc
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FStorageContainerNode> Nodes                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UReplenishableInterface::FillWithDefaultDesc(TArray<struct FStorageContainerNode> Nodes)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.FillWithDefaultDesc");

	UReplenishableInterface_FillWithDefaultDesc_Params params;
	params.Nodes = Nodes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableInterface.Deplete
// (Native, Public, BlueprintCallable)
void UReplenishableInterface::Deplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.Deplete");

	UReplenishableInterface_Deplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableInterface.CanBeReplenished
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UReplenishableInterface::CanBeReplenished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.CanBeReplenished");

	UReplenishableInterface_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ReplenishableInterface.AddDefaultStockLevel
// (Native, Public, BlueprintCallable)
void UReplenishableInterface::AddDefaultStockLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableInterface.AddDefaultStockLevel");

	UReplenishableInterface_AddDefaultStockLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UReplenishableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UReplenishableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.StorageContainerInterface.TakeItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            NodeIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UStorageContainerInterface::TakeItem(class AActor* Player, int NodeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerInterface.TakeItem");

	UStorageContainerInterface_TakeItem_Params params;
	params.Player = Player;
	params.NodeIndex = NodeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.StorageContainerInterface.GetContainerDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FText UStorageContainerInterface::GetContainerDisplayName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerInterface.GetContainerDisplayName");

	UStorageContainerInterface_GetContainerDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.StorageContainerInterface.AddItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InItemDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UStorageContainerInterface::AddItem(class AActor* Player, class UClass* InItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerInterface.AddItem");

	UStorageContainerInterface_AddItem_Params params;
	params.Player = Player;
	params.InItemDesc = InItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStorageContainerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStorageContainerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.StorageContainerComponent.TakeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            NodeIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UStorageContainerComponent::TakeItem(class AActor* Player, int NodeIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerComponent.TakeItem");

	UStorageContainerComponent_TakeItem_Params params;
	params.Player = Player;
	params.NodeIndex = NodeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.StorageContainerComponent.OnRep_ContentsChanged
// (Final, Native, Private)
// Parameters:
// struct FStorageContainerBackingStore InOldItemCount                 (Parm)
void UStorageContainerComponent::OnRep_ContentsChanged(const struct FStorageContainerBackingStore& InOldItemCount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerComponent.OnRep_ContentsChanged");

	UStorageContainerComponent_OnRep_ContentsChanged_Params params;
	params.InOldItemCount = InOldItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.StorageContainerComponent.Multicast_DetachAllPlayersRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void UStorageContainerComponent::Multicast_DetachAllPlayersRPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerComponent.Multicast_DetachAllPlayersRPC");

	UStorageContainerComponent_Multicast_DetachAllPlayersRPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.StorageContainerComponent.GetContainerDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FText UStorageContainerComponent::GetContainerDisplayName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerComponent.GetContainerDisplayName");

	UStorageContainerComponent_GetContainerDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.StorageContainerComponent.AddItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InItemDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UStorageContainerComponent::AddItem(class AActor* Player, class UClass* InItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StorageContainerComponent.AddItem");

	UStorageContainerComponent_AddItem_Params params;
	params.Player = Player;
	params.InItemDesc = InItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStorageContainerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(AddItemSFX, UWwiseEvent);
	READ_PTR_FULL(TakeItemSFX, UWwiseEvent);
	READ_PTR_FULL(OpenContainerSFX, UWwiseEvent);
	READ_PTR_FULL(StorageContainerSelector, UStorageContainerContentTypeSelector);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(Aggregator, UObject);
}

void UStorageContainerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(AddItemSFX);
	DELE_PTR_FULL(TakeItemSFX);
	DELE_PTR_FULL(OpenContainerSFX);
	DELE_PTR_FULL(StorageContainerSelector);
	DELE_PTR_FULL(SfxPool);
	DELE_PTR_FULL(Aggregator);
}

void UStorageContainerComponentData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStorageContainerComponentData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UStorageContainerSpawnerItemListBase::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStorageContainerSpawnerItemListBase::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UStorageContainerSpawnerWeightedItemList::AfterRead()
{
	UStorageContainerSpawnerItemListBase::AfterRead();

}

void UStorageContainerSpawnerWeightedItemList::BeforeDelete()
{
	UStorageContainerSpawnerItemListBase::BeforeDelete();

}

void UStorageContainerSpawnerItemFeatureBasedWeightedItemList::AfterRead()
{
	UStorageContainerSpawnerWeightedItemList::AfterRead();

}

void UStorageContainerSpawnerItemFeatureBasedWeightedItemList::BeforeDelete()
{
	UStorageContainerSpawnerWeightedItemList::BeforeDelete();

}

void ULandmarkReactionTriggerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void ULandmarkReactionTriggerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void ULandmarkRegistryInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULandmarkRegistryInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCutSceneSubtitlesExecutableAnimMetaData::AfterRead()
{
	UAnimMetaData::AfterRead();

}

void UCutSceneSubtitlesExecutableAnimMetaData::BeforeDelete()
{
	UAnimMetaData::BeforeDelete();

}

void UCutSceneSubtitlesInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutSceneSubtitlesInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNPCDialogComponentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCDialogComponentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNPCDialogConditional::AfterRead()
{
	UObject::AfterRead();

}

void UNPCDialogConditional::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UHasRanksNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UHasRanksNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UHasEntitlementsNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UHasEntitlementsNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UFiniteUseNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UFiniteUseNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void USectionFullyExhaustedConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void USectionFullyExhaustedConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UFeatureToggleNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UFeatureToggleNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UNPCDialogConditionalExpression::AfterRead()
{
	UNPCDialogConditional::AfterRead();

	READ_PTR_FULL(Expression, UNPCDialogExpression);
}

void UNPCDialogConditionalExpression::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

	DELE_PTR_FULL(Expression);
}

void UNPCDialogExpression::AfterRead()
{
	UObject::AfterRead();

}

void UNPCDialogExpression::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UNPCDialogUnaryExpression::AfterRead()
{
	UNPCDialogExpression::AfterRead();

	READ_PTR_FULL(Child, UNPCDialogExpression);
}

void UNPCDialogUnaryExpression::BeforeDelete()
{
	UNPCDialogExpression::BeforeDelete();

	DELE_PTR_FULL(Child);
}

void UNPCDialogBinaryExpression::AfterRead()
{
	UNPCDialogExpression::AfterRead();

	READ_PTR_FULL(Left, UNPCDialogExpression);
	READ_PTR_FULL(Right, UNPCDialogExpression);
}

void UNPCDialogBinaryExpression::BeforeDelete()
{
	UNPCDialogExpression::BeforeDelete();

	DELE_PTR_FULL(Left);
	DELE_PTR_FULL(Right);
}

void UNPCDialogNotExpression::AfterRead()
{
	UNPCDialogUnaryExpression::AfterRead();

}

void UNPCDialogNotExpression::BeforeDelete()
{
	UNPCDialogUnaryExpression::BeforeDelete();

}

void UNPCDialogAndExpression::AfterRead()
{
	UNPCDialogBinaryExpression::AfterRead();

}

void UNPCDialogAndExpression::BeforeDelete()
{
	UNPCDialogBinaryExpression::BeforeDelete();

}

void UNPCDialogOrExpression::AfterRead()
{
	UNPCDialogBinaryExpression::AfterRead();

}

void UNPCDialogOrExpression::BeforeDelete()
{
	UNPCDialogBinaryExpression::BeforeDelete();

}

void UNPCDialogPredicate::AfterRead()
{
	UNPCDialogExpression::AfterRead();

}

void UNPCDialogPredicate::BeforeDelete()
{
	UNPCDialogExpression::BeforeDelete();

}

void UNPCDialogPredicateAIState::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateAIState::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateGroupAIState::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateGroupAIState::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateAtDamageTaken::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateAtDamageTaken::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateAtHealthStage::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateAtHealthStage::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateInAIDialogueState::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateInAIDialogueState::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogInteractionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCDialogInteractionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SceneDialogueAudioInterface.TriggerAudioEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UWwiseEvent*             AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USceneDialogueAudioInterface::TriggerAudioEvent(class UWwiseEvent* AudioEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SceneDialogueAudioInterface.TriggerAudioEvent");

	USceneDialogueAudioInterface_TriggerAudioEvent_Params params;
	params.AudioEvent = AudioEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SceneDialogueAudioInterface.StopCurrentAudioEvent
// (Native, Event, Public, BlueprintEvent)
void USceneDialogueAudioInterface::StopCurrentAudioEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SceneDialogueAudioInterface.StopCurrentAudioEvent");

	USceneDialogueAudioInterface_StopCurrentAudioEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USceneDialogueAudioInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USceneDialogueAudioInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SceneDialogueCoordinator.Start
// (Final, Native, Public, BlueprintCallable)
void ASceneDialogueCoordinator::Start()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SceneDialogueCoordinator.Start");

	ASceneDialogueCoordinator_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SceneDialogueCoordinator.SetDialogueStateProvider
// (Final, Native, Public, BlueprintCallable)
void ASceneDialogueCoordinator::SetDialogueStateProvider()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SceneDialogueCoordinator.SetDialogueStateProvider");

	ASceneDialogueCoordinator_SetDialogueStateProvider_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASceneDialogueCoordinator::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(DialogueData, USceneDialogueData);
}

void ASceneDialogueCoordinator::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(DialogueData);
}

void UServerNPCNotificationsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UServerNPCNotificationsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMapMarkMappingDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMapMarkMappingDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UMapMarkProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMapMarkProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMapRenderResource::AfterRead()
{
	UObject::AfterRead();

}

void UMapRenderResource::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMapIslandRenderResource::AfterRead()
{
	UMapRenderResource::AfterRead();

}

void UMapIslandRenderResource::BeforeDelete()
{
	UMapRenderResource::BeforeDelete();

}

void UMapMarkRenderResource::AfterRead()
{
	UMapRenderResource::AfterRead();

	READ_PTR_FULL(MarkTypeId, UClass);
}

void UMapMarkRenderResource::BeforeDelete()
{
	UMapRenderResource::BeforeDelete();

	DELE_PTR_FULL(MarkTypeId);
}

void UUserSettingsMapMarkProviderComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UUserSettingsMapMarkProviderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UWorldSettingsViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldSettingsViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MerchantCrateProviderInterface.CollectCrate
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  CrateDesc                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UMerchantCrateProviderInterface::CollectCrate(class AActor* Player, class UClass* CrateDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MerchantCrateProviderInterface.CollectCrate");

	UMerchantCrateProviderInterface_CollectCrate_Params params;
	params.Player = Player;
	params.CrateDesc = CrateDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMerchantCrateProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMerchantCrateProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMerchantMapLayout::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMerchantMapLayout::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoteVisualiserInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoteVisualiserInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStaticMeshVoteVisualiserInterface::AfterRead()
{
	UVoteVisualiserInterface::AfterRead();

}

void UStaticMeshVoteVisualiserInterface::BeforeDelete()
{
	UVoteVisualiserInterface::BeforeDelete();

}

void UStaticMeshVoteVisualiserComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UStaticMeshVoteVisualiserComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UVoteAudioInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoteAudioInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UVoteAudioComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(VoteCastAudioEvent, UWwiseEvent);
	READ_PTR_FULL(VoteRemovedAudioEvent, UWwiseEvent);
	READ_PTR_FULL(AudioPool, UWwiseObjectPoolWrapper);
}

void UVoteAudioComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(VoteCastAudioEvent);
	DELE_PTR_FULL(VoteRemovedAudioEvent);
	DELE_PTR_FULL(AudioPool);
}

void UVoteConsumerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoteConsumerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UVoteConsumerInlineBase::AfterRead()
{
	UObject::AfterRead();

}

void UVoteConsumerInlineBase::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UVoterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UVoteValidatorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoteValidatorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UVoteValidatorInlineBase::AfterRead()
{
	UObject::AfterRead();

}

void UVoteValidatorInlineBase::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UActionRulesInteractableComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
}

void UActionRulesInteractableComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(ActionRulesComponent);
}

void UVotingInteractionComponentBase::AfterRead()
{
	UActionRulesInteractableComponent::AfterRead();

	READ_PTR_FULL(HoldInputId, UClass);
	READ_PTR_FULL(ReleaseInputId, UClass);
}

void UVotingInteractionComponentBase::BeforeDelete()
{
	UActionRulesInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(HoldInputId);
	DELE_PTR_FULL(ReleaseInputId);
}

void UGetVoyageDifficultyFromRankStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UGetVoyageDifficultyFromRankStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USpawnActorStepDescBase::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USpawnActorStepDescBase::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USpawnActorStepDesc::AfterRead()
{
	USpawnActorStepDescBase::AfterRead();

}

void USpawnActorStepDesc::BeforeDelete()
{
	USpawnActorStepDescBase::BeforeDelete();

}

void USpawnPhasedActorStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USpawnPhasedActorStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USpawnPhasedActorFromInputPinStepDesc::AfterRead()
{
	USpawnPhasedActorStepDesc::AfterRead();

}

void USpawnPhasedActorFromInputPinStepDesc::BeforeDelete()
{
	USpawnPhasedActorStepDesc::BeforeDelete();

}

// Function Athena.SwimmingCreatureMovementComponent.SetSwimmingMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ESwimmingMode> InSwimmingMode                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USwimmingCreatureMovementComponent::SetSwimmingMode(TEnumAsByte<Athena_ESwimmingMode> InSwimmingMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.SetSwimmingMode");

	USwimmingCreatureMovementComponent_SetSwimmingMode_Params params;
	params.InSwimmingMode = InSwimmingMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwimmingCreatureMovementComponent.OnRep_ReplicatedSwimmingMode
// (Final, Native, Protected)
void USwimmingCreatureMovementComponent::OnRep_ReplicatedSwimmingMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.OnRep_ReplicatedSwimmingMode");

	USwimmingCreatureMovementComponent_OnRep_ReplicatedSwimmingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwimmingCreatureMovementComponent.OnHasSolidHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void USwimmingCreatureMovementComponent::OnHasSolidHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.OnHasSolidHit");

	USwimmingCreatureMovementComponent_OnHasSolidHit_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwimmingCreatureMovementComponent.GetSwimmingMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_ESwimmingMode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_ESwimmingMode> USwimmingCreatureMovementComponent::GetSwimmingMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.GetSwimmingMode");

	USwimmingCreatureMovementComponent_GetSwimmingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetMovementPropertiesForAIStrategy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  AIStrategy                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FSwimmingCreatureAIStrategyMovementProperties ReturnValue                    (Parm, OutParm, ReturnParm)
struct FSwimmingCreatureAIStrategyMovementProperties USwimmingCreatureMovementComponent::GetMovementPropertiesForAIStrategy(class UClass* AIStrategy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.GetMovementPropertiesForAIStrategy");

	USwimmingCreatureMovementComponent_GetMovementPropertiesForAIStrategy_Params params;
	params.AIStrategy = AIStrategy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetCurrentYawTurnRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USwimmingCreatureMovementComponent::GetCurrentYawTurnRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.GetCurrentYawTurnRate");

	USwimmingCreatureMovementComponent_GetCurrentYawTurnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetCurrentSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USwimmingCreatureMovementComponent::GetCurrentSpeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.GetCurrentSpeed");

	USwimmingCreatureMovementComponent_GetCurrentSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetComponentOffsetFromWaterHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USwimmingCreatureMovementComponent::GetComponentOffsetFromWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureMovementComponent.GetComponentOffsetFromWaterHeight");

	USwimmingCreatureMovementComponent_GetComponentOffsetFromWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USwimmingCreatureMovementComponent::AfterRead()
{
	UFloatingPawnMovement::AfterRead();

	READ_PTR_FULL(SinkingAccelerationOverTime, UCurveFloat);
}

void USwimmingCreatureMovementComponent::BeforeDelete()
{
	UFloatingPawnMovement::BeforeDelete();

	DELE_PTR_FULL(SinkingAccelerationOverTime);
}

// Function Athena.SwimmingCreatureAnimationInstance.RunningOnServer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool USwimmingCreatureAnimationInstance::RunningOnServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreatureAnimationInstance.RunningOnServer");

	USwimmingCreatureAnimationInstance_RunningOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USwimmingCreatureAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(DeathMontage, UAnimMontage);
	READ_PTR_FULL(SinkingMontage, UAnimMontage);
	READ_PTR_FULL(DefaultImpactAnim, UAnimSequenceBase);
	READ_PTR_FULL(CurrentlyPlayingNetworkMontage, UAnimMontage);
	READ_PTR_FULL(MovementComponent, USwimmingCreatureMovementComponent);
	READ_PTR_FULL(NetworkSyncedAnimationComponent, UNetworkSyncedAnimationComponent);
}

void USwimmingCreatureAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(DeathMontage);
	DELE_PTR_FULL(SinkingMontage);
	DELE_PTR_FULL(DefaultImpactAnim);
	DELE_PTR_FULL(CurrentlyPlayingNetworkMontage);
	DELE_PTR_FULL(MovementComponent);
	DELE_PTR_FULL(NetworkSyncedAnimationComponent);
}

void USwimmingCreatureMovementInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USwimmingCreatureMovementInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMastAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlaySailLength, UWwiseEvent);
	READ_PTR_FULL(StopSailLength, UWwiseEvent);
	READ_PTR_FULL(PlaySailLengthStopTop, UWwiseEvent);
	READ_PTR_FULL(PlaySailLengthStopBottom, UWwiseEvent);
	READ_PTR_FULL(PlaySailAngle, UWwiseEvent);
	READ_PTR_FULL(StopSailAngle, UWwiseEvent);
	READ_PTR_FULL(PlaySailAngleStopLimit, UWwiseEvent);
}

void UMastAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlaySailLength);
	DELE_PTR_FULL(StopSailLength);
	DELE_PTR_FULL(PlaySailLengthStopTop);
	DELE_PTR_FULL(PlaySailLengthStopBottom);
	DELE_PTR_FULL(PlaySailAngle);
	DELE_PTR_FULL(StopSailAngle);
	DELE_PTR_FULL(PlaySailAngleStopLimit);
}

// Function Athena.Shipwreck.OnResetTo
// (Event, Public, BlueprintEvent)
void AShipwreck::OnResetTo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shipwreck.OnResetTo");

	AShipwreck_OnResetTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Shipwreck.OnOverlapEnd
// (Final, RequiredAPI, Native, Public)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipwreck::OnOverlapEnd(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shipwreck.OnOverlapEnd");

	AShipwreck_OnOverlapEnd_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Shipwreck.OnOverlapBegin
// (RequiredAPI, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              OverlapInfo                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AShipwreck::OnOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shipwreck.OnOverlapBegin");

	AShipwreck_OnOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShipwreck::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MeshParentComponent, USceneComponent);
	READ_PTR_FULL(RevealTriggerVolume, UPrimitiveComponent);
	READ_PTR_FULL(CalmZone, UCalmWaterComponent);
	READ_PTR_FULL(ProxyClass, UClass);
}

void AShipwreck::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MeshParentComponent);
	DELE_PTR_FULL(RevealTriggerVolume);
	DELE_PTR_FULL(CalmZone);
	DELE_PTR_FULL(ProxyClass);
}

void ACustomShipwreck::AfterRead()
{
	AShipwreck::AfterRead();

	READ_PTR_FULL(WreckIndicatorActorClass, UClass);
	READ_PTR_FULL(SpawnedWreckIndicatorActor, AActor);
}

void ACustomShipwreck::BeforeDelete()
{
	AShipwreck::BeforeDelete();

	DELE_PTR_FULL(WreckIndicatorActorClass);
	DELE_PTR_FULL(SpawnedWreckIndicatorActor);
}

void UShipwreckServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipwreckServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipwreckTrackerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipwreckTrackerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USpawnShipwreckTaleStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, USpawnShipwreckTaleStepDesc);
}

void USpawnShipwreckTaleStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UTaleQuestShipwreckService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(ActiveWreck, ACustomShipwreck);
	READ_PTR_FULL(Desc, UTaleQuestShipwreckServiceDesc);
}

void UTaleQuestShipwreckService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(ActiveWreck);
	DELE_PTR_FULL(Desc);
}

void UTaleQuestShipwreckServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleQuestShipwreckServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void USpawnShipwreckTaleStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USpawnShipwreckTaleStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestLockCaptainCabinDoorStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

}

void UTaleQuestLockCaptainCabinDoorStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

}

// Function Athena.FlamethrowerComponent.Stop
// (Native, Public, BlueprintCallable)
void UFlamethrowerComponent::Stop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerComponent.Stop");

	UFlamethrowerComponent_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FlamethrowerComponent.Start
// (Native, Public, BlueprintCallable)
void UFlamethrowerComponent::Start()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerComponent.Start");

	UFlamethrowerComponent_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FlamethrowerComponent.SetAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMechanismAnimationCurve_Flamethrower* InAnimation                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFlamethrowerComponent::SetAnimation(class UMechanismAnimationCurve_Flamethrower* InAnimation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerComponent.SetAnimation");

	UFlamethrowerComponent_SetAnimation_Params params;
	params.InAnimation = InAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FlamethrowerComponent.Reset
// (Native, Public, BlueprintCallable)
void UFlamethrowerComponent::Reset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerComponent.Reset");

	UFlamethrowerComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FlamethrowerComponent.OnFlamethrowerEndOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFlamethrowerComponent::OnFlamethrowerEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerComponent.OnFlamethrowerEndOverlap");

	UFlamethrowerComponent_OnFlamethrowerEndOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FlamethrowerComponent.OnFlamethrowerBeginOverlap
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           FromSweep                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UFlamethrowerComponent::OnFlamethrowerBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerComponent.OnFlamethrowerBeginOverlap");

	UFlamethrowerComponent_OnFlamethrowerBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.FromSweep = FromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFlamethrowerComponent::AfterRead()
{
	UCapsuleComponent::AfterRead();

	READ_PTR_FULL(Animation, UMechanismAnimationCurve_Flamethrower);
	READ_PTR_FULL(ParticleSystem, UParticleSystem);
	READ_PTR_FULL(CachedParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(SimpleCollisionShape, UPrimitiveComponent);
}

void UFlamethrowerComponent::BeforeDelete()
{
	UCapsuleComponent::BeforeDelete();

	DELE_PTR_FULL(Animation);
	DELE_PTR_FULL(ParticleSystem);
	DELE_PTR_FULL(CachedParticleSystem);
	DELE_PTR_FULL(SimpleCollisionShape);
}

void UMechanismAnimationDurationProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismAnimationDurationProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.FlamethrowerCoordinatorComponent.OnLastActorLeftSimpleCollisionShape
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFlamethrowerCoordinatorComponent::OnLastActorLeftSimpleCollisionShape(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerCoordinatorComponent.OnLastActorLeftSimpleCollisionShape");

	UFlamethrowerCoordinatorComponent_OnLastActorLeftSimpleCollisionShape_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FlamethrowerCoordinatorComponent.OnFirstActorEnteredSimpleCollisionShape
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFlamethrowerCoordinatorComponent::OnFirstActorEnteredSimpleCollisionShape(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamethrowerCoordinatorComponent.OnFirstActorEnteredSimpleCollisionShape");

	UFlamethrowerCoordinatorComponent_OnFirstActorEnteredSimpleCollisionShape_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFlamethrowerCoordinatorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UFlamethrowerCoordinatorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.IgnitableMechanismTrigger.OnMechanismTriggerReset
// (Final, Native, Private)
void AIgnitableMechanismTrigger::OnMechanismTriggerReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IgnitableMechanismTrigger.OnMechanismTriggerReset");

	AIgnitableMechanismTrigger_OnMechanismTriggerReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AIgnitableMechanismTrigger::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(FlammableComponent, UTimedFlammableComponent);
	READ_PTR_FULL(StatusEffectManagerComponent, ULightWeightStatusEffectManagerComponent);
	READ_PTR_FULL(MechanismTriggerComponent, UMechanismTriggerComponent);
}

void AIgnitableMechanismTrigger::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(FlammableComponent);
	DELE_PTR_FULL(StatusEffectManagerComponent);
	DELE_PTR_FULL(MechanismTriggerComponent);
}

// Function Athena.MechanismElementProxyInterface.ApplyInstanceProperties
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  Instance                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismElementProxyInterface::ApplyInstanceProperties(class AActor* Instance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismElementProxyInterface.ApplyInstanceProperties");

	UMechanismElementProxyInterface_ApplyInstanceProperties_Params params;
	params.Instance = Instance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismElementProxyInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismElementProxyInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MechanismElementProxy.GetInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* AMechanismElementProxy::GetInstance()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismElementProxy.GetInstance");

	AMechanismElementProxy_GetInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AMechanismElementProxy::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ElementClass, UClass);
	READ_PTR_FULL(Instance, AActor);
}

void AMechanismElementProxy::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ElementClass);
	DELE_PTR_FULL(Instance);
}

void UMechanismInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AMechanism::AfterRead()
{
	AActor::AfterRead();

}

void AMechanism::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UMechanismGroupInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismGroupInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AMechanismGroup::AfterRead()
{
	AActor::AfterRead();

}

void AMechanismGroup::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UIslandMechanismSelectionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandMechanismSelectionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.MechanismActionComponent.OnTriggerStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismTriggerState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismActionComponent::OnTriggerStateChanged(TEnumAsByte<Athena_EMechanismTriggerState> PreviousState, TEnumAsByte<Athena_EMechanismTriggerState> NewState, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionComponent.OnTriggerStateChanged");

	UMechanismActionComponent_OnTriggerStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismActionComponent.OnRep_TriggerActors
// (Final, Native, Private)
// Parameters:
// TArray<class AActor*>          PreviousTriggerActors          (Parm, ZeroConstructor)
void UMechanismActionComponent::OnRep_TriggerActors(TArray<class AActor*> PreviousTriggerActors)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionComponent.OnRep_TriggerActors");

	UMechanismActionComponent_OnRep_TriggerActors_Params params;
	params.PreviousTriggerActors = PreviousTriggerActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismActionComponent.OnRep_ActionState
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismActionComponent::OnRep_ActionState(TEnumAsByte<Athena_EMechanismActionState> PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionComponent.OnRep_ActionState");

	UMechanismActionComponent_OnRep_ActionState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismActionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMechanismActionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCutsceneMechanismActionComponent::AfterRead()
{
	UMechanismActionComponent::AfterRead();

	READ_PTR_FULL(CutSceneActor, AActor);
}

void UCutsceneMechanismActionComponent::BeforeDelete()
{
	UMechanismActionComponent::BeforeDelete();

	DELE_PTR_FULL(CutSceneActor);
}

// Function Athena.IntentBasedMechanismActionComponent.SetActionProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewActionProgress              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIntentBasedMechanismActionComponent::SetActionProgress(float NewActionProgress)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentBasedMechanismActionComponent.SetActionProgress");

	UIntentBasedMechanismActionComponent_SetActionProgress_Params params;
	params.NewActionProgress = NewActionProgress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentBasedMechanismActionComponent.RegisterIntentCombiner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UIntentCombinerComponent* InIntentCombiner               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIntentBasedMechanismActionComponent::RegisterIntentCombiner(class UIntentCombinerComponent* InIntentCombiner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentBasedMechanismActionComponent.RegisterIntentCombiner");

	UIntentBasedMechanismActionComponent_RegisterIntentCombiner_Params params;
	params.InIntentCombiner = InIntentCombiner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentBasedMechanismActionComponent.OnRep_ServerActionProgressIsLocked
// (Final, Native, Private)
void UIntentBasedMechanismActionComponent::OnRep_ServerActionProgressIsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentBasedMechanismActionComponent.OnRep_ServerActionProgressIsLocked");

	UIntentBasedMechanismActionComponent_OnRep_ServerActionProgressIsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentBasedMechanismActionComponent.OnRep_ServerActionProgress
// (Final, Native, Private)
void UIntentBasedMechanismActionComponent::OnRep_ServerActionProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentBasedMechanismActionComponent.OnRep_ServerActionProgress");

	UIntentBasedMechanismActionComponent_OnRep_ServerActionProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentBasedMechanismActionComponent.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIntentBasedMechanismActionComponent::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentBasedMechanismActionComponent.OnMechanismActionStateChanged");

	UIntentBasedMechanismActionComponent_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UIntentBasedMechanismActionComponent::AfterRead()
{
	UMechanismActionComponent::AfterRead();

}

void UIntentBasedMechanismActionComponent::BeforeDelete()
{
	UMechanismActionComponent::BeforeDelete();

}

void UInteractableToggleMechanismActionComponent::AfterRead()
{
	UMechanismActionComponent::AfterRead();

}

void UInteractableToggleMechanismActionComponent::BeforeDelete()
{
	UMechanismActionComponent::BeforeDelete();

}

void AAnimatedMechanismActionProxy::AfterRead()
{
	AMechanismElementProxy::AfterRead();

	READ_PTR_FULL(MaterialGroup, UClass);
}

void AAnimatedMechanismActionProxy::BeforeDelete()
{
	AMechanismElementProxy::BeforeDelete();

	DELE_PTR_FULL(MaterialGroup);
}

void ABaseToggleAnimatedMechanismActionProxy::AfterRead()
{
	AAnimatedMechanismActionProxy::AfterRead();

	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
}

void ABaseToggleAnimatedMechanismActionProxy::BeforeDelete()
{
	AAnimatedMechanismActionProxy::BeforeDelete();

	DELE_PTR_FULL(AudioEmitterPool);
}

void AToggleAnimatedMechanismActionProxy::AfterRead()
{
	ABaseToggleAnimatedMechanismActionProxy::AfterRead();

}

void AToggleAnimatedMechanismActionProxy::BeforeDelete()
{
	ABaseToggleAnimatedMechanismActionProxy::BeforeDelete();

}

void AWaterPuzzleAlterationMechanismActionProxy::AfterRead()
{
	AToggleAnimatedMechanismActionProxy::AfterRead();

	READ_PTR_FULL(PuzzleActor, AActor);
}

void AWaterPuzzleAlterationMechanismActionProxy::BeforeDelete()
{
	AToggleAnimatedMechanismActionProxy::BeforeDelete();

	DELE_PTR_FULL(PuzzleActor);
}

void ASimpleAnimatedMechanismActionProxy::AfterRead()
{
	AAnimatedMechanismActionProxy::AfterRead();

	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
}

void ASimpleAnimatedMechanismActionProxy::BeforeDelete()
{
	AAnimatedMechanismActionProxy::BeforeDelete();

	DELE_PTR_FULL(AudioEmitterPool);
}

void APressurePlateMechanismProgressTriggerProxy::AfterRead()
{
	AMechanismElementProxy::AfterRead();

}

void APressurePlateMechanismProgressTriggerProxy::BeforeDelete()
{
	AMechanismElementProxy::BeforeDelete();

}

// Function Athena.PressurePlateMechanismTriggerBase.OnTriggerStateChanged
// (Native, Protected)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismTriggerState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTriggerBase::OnTriggerStateChanged(TEnumAsByte<Athena_EMechanismTriggerState> PreviousState, TEnumAsByte<Athena_EMechanismTriggerState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTriggerBase.OnTriggerStateChanged");

	APressurePlateMechanismTriggerBase_OnTriggerStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PressurePlateMechanismTriggerBase.OnMechanismTriggerChangedMechanismActionStates
// (Native, Protected)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> State                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTriggerBase::OnMechanismTriggerChangedMechanismActionStates(TEnumAsByte<Athena_EMechanismActionState> State)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTriggerBase.OnMechanismTriggerChangedMechanismActionStates");

	APressurePlateMechanismTriggerBase_OnMechanismTriggerChangedMechanismActionStates_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PressurePlateMechanismTriggerBase.OnComplexCollisionShapeEndOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTriggerBase::OnComplexCollisionShapeEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTriggerBase.OnComplexCollisionShapeEndOverlap");

	APressurePlateMechanismTriggerBase_OnComplexCollisionShapeEndOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PressurePlateMechanismTriggerBase.OnComplexCollisionShapeBeginOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTriggerBase::OnComplexCollisionShapeBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTriggerBase.OnComplexCollisionShapeBeginOverlap");

	APressurePlateMechanismTriggerBase_OnComplexCollisionShapeBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PressurePlateMechanismTriggerBase.AddAnimationComponent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USceneComponent*         Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTransformBlendCurveComponent* Curve                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTriggerBase::AddAnimationComponent(class USceneComponent* Component, class UTransformBlendCurveComponent* Curve)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTriggerBase.AddAnimationComponent");

	APressurePlateMechanismTriggerBase_AddAnimationComponent_Params params;
	params.Component = Component;
	params.Curve = Curve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APressurePlateMechanismTriggerBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismTriggerComponent, UMechanismTriggerComponent);
	READ_PTR_FULL(SteppedOnVFX, UParticleSystem);
	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(MechanismInteractionComponent, UMechanismInteractionComponent);
	READ_PTR_FULL(TriggerBox, UBoxComponent);
}

void APressurePlateMechanismTriggerBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismTriggerComponent);
	DELE_PTR_FULL(SteppedOnVFX);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(MechanismInteractionComponent);
	DELE_PTR_FULL(TriggerBox);
}

// Function Athena.PressurePlateMechanismTrigger.OnTriggerStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismTriggerState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTrigger::OnTriggerStateChanged(TEnumAsByte<Athena_EMechanismTriggerState> PreviousState, TEnumAsByte<Athena_EMechanismTriggerState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTrigger.OnTriggerStateChanged");

	APressurePlateMechanismTrigger_OnTriggerStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PressurePlateMechanismTrigger.OnMechanismTriggerChangedMechanismActionStates
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> State                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APressurePlateMechanismTrigger::OnMechanismTriggerChangedMechanismActionStates(TEnumAsByte<Athena_EMechanismActionState> State)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PressurePlateMechanismTrigger.OnMechanismTriggerChangedMechanismActionStates");

	APressurePlateMechanismTrigger_OnMechanismTriggerChangedMechanismActionStates_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APressurePlateMechanismTrigger::AfterRead()
{
	APressurePlateMechanismTriggerBase::AfterRead();

}

void APressurePlateMechanismTrigger::BeforeDelete()
{
	APressurePlateMechanismTriggerBase::BeforeDelete();

}

// Function Athena.AthenaCharacterKnockbackComponent.SetDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsDisabled                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaCharacterKnockbackComponent::SetDisabled(bool IsDisabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterKnockbackComponent.SetDisabled");

	UAthenaCharacterKnockbackComponent_SetDisabled_Params params;
	params.IsDisabled = IsDisabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterKnockbackComponent.KnockBack
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FKnockBackInfo          KnockBackInfo                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          NoWaterDragDuration            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  DamagerType                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UAthenaCharacterKnockbackComponent::KnockBack(const struct FKnockBackInfo& KnockBackInfo, const struct FVector& Direction, float NoWaterDragDuration, class UClass* DamagerType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterKnockbackComponent.KnockBack");

	UAthenaCharacterKnockbackComponent_KnockBack_Params params;
	params.KnockBackInfo = KnockBackInfo;
	params.Direction = Direction;
	params.NoWaterDragDuration = NoWaterDragDuration;
	params.DamagerType = DamagerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterKnockbackComponent.Client_PlayerKnockBackRPC
// (Final, Net, NetReliable, Native, Event, Private, HasDefaults, NetClient)
// Parameters:
// struct FKnockBackInfo          KnockBackInfo                  (ConstParm, Parm, ReferenceParm)
// struct FVector                 Direction                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          NoWaterDragDuration            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterKnockbackComponent::Client_PlayerKnockBackRPC(const struct FKnockBackInfo& KnockBackInfo, const struct FVector& Direction, float NoWaterDragDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterKnockbackComponent.Client_PlayerKnockBackRPC");

	UAthenaCharacterKnockbackComponent_Client_PlayerKnockBackRPC_Params params;
	params.KnockBackInfo = KnockBackInfo;
	params.Direction = Direction;
	params.NoWaterDragDuration = NoWaterDragDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaCharacterKnockbackComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Character, AAthenaCharacter);
}

void UAthenaCharacterKnockbackComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Character);
}

void UAthenaCharacterKnockbackComponentMock::AfterRead()
{
	UAthenaCharacterKnockbackComponent::AfterRead();

}

void UAthenaCharacterKnockbackComponentMock::BeforeDelete()
{
	UAthenaCharacterKnockbackComponent::BeforeDelete();

}

void UAthenaCharacterMovementCheatDetectionSettings::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaCharacterMovementCheatDetectionSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UCargoRunCrateCustomData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCargoRunCrateCustomData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCargoRunCrateData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCargoRunCrateData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEventTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UEventTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UEventTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UEventTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UEventBroadcastStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UEventBroadcastStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.EventCatchStep.OnCatchEvent
// (Final, Native, Private)
void UEventCatchStep::OnCatchEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventCatchStep.OnCatchEvent");

	UEventCatchStep_OnCatchEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEventCatchStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UEventCatchStepDesc);
}

void UEventCatchStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UEventCatchStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UEventCatchStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UExitOnAllCrewsDestroyedStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UExitOnAllCrewsDestroyedStepDesc);
}

void UExitOnAllCrewsDestroyedStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UExitOnAllCrewsDestroyedStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UExitOnAllCrewsDestroyedStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UExplosionDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UExplosionDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UFuseTargetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFuseTargetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ExplosiveComponent.Multicast_Explode
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void UExplosiveComponent::Multicast_Explode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ExplosiveComponent.Multicast_Explode");

	UExplosiveComponent_Multicast_Explode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UExplosiveComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ExplosionParticleSystem, UObject);
	READ_PTR_FULL(ExplosionOnSandParticleSystem, UObject);
	READ_PTR_FULL(ExplosionOnWaterSurfaceParticleSystem, UObject);
	READ_PTR_FULL(ExplosionUnderWaterParticleSystem, UObject);
	READ_PTR_FULL(SplashParticles, UObject);
	READ_PTR_FULL(ExplosionSoundCue, UWwiseEvent);
	READ_PTR_FULL(ExplosionSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(HitReactParticleSystem, UParticleSystem);
	READ_PTR_FULL(HitReactSoundCue, UWwiseEvent);
	READ_PTR_FULL(RootExplosionInstigator, AActor);
	READ_PTR_FULL(HealthComponent, UHealthComponent);
}

void UExplosiveComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ExplosionParticleSystem);
	DELE_PTR_FULL(ExplosionOnSandParticleSystem);
	DELE_PTR_FULL(ExplosionOnWaterSurfaceParticleSystem);
	DELE_PTR_FULL(ExplosionUnderWaterParticleSystem);
	DELE_PTR_FULL(SplashParticles);
	DELE_PTR_FULL(ExplosionSoundCue);
	DELE_PTR_FULL(ExplosionSfxPool);
	DELE_PTR_FULL(HitReactParticleSystem);
	DELE_PTR_FULL(HitReactSoundCue);
	DELE_PTR_FULL(RootExplosionInstigator);
	DELE_PTR_FULL(HealthComponent);
}

void UFaunaAnimationData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFaunaAnimationData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFaunaAnimationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFaunaAnimationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.FaunaAnimationInstance.GetTurnRightAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetTurnRightAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetTurnRightAnimation");

	UFaunaAnimationInstance_GetTurnRightAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetTurnRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UFaunaAnimationInstance::GetTurnRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetTurnRate");

	UFaunaAnimationInstance_GetTurnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetTurnLeftAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetTurnLeftAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetTurnLeftAnimation");

	UFaunaAnimationInstance_GetTurnLeftAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledLowUnderwaterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetStartledLowUnderwaterAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetStartledLowUnderwaterAnimation");

	UFaunaAnimationInstance_GetStartledLowUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledLowOnSeaAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetStartledLowOnSeaAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetStartledLowOnSeaAnimation");

	UFaunaAnimationInstance_GetStartledLowOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledLowOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetStartledLowOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetStartledLowOnLandAnimation");

	UFaunaAnimationInstance_GetStartledLowOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledHighUnderwaterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetStartledHighUnderwaterAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetStartledHighUnderwaterAnimation");

	UFaunaAnimationInstance_GetStartledHighUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledHighOnSeaAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetStartledHighOnSeaAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetStartledHighOnSeaAnimation");

	UFaunaAnimationInstance_GetStartledHighOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledHighOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetStartledHighOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetStartledHighOnLandAnimation");

	UFaunaAnimationInstance_GetStartledHighOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSpecialUnderwaterAnimation
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           LoopSpecial                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSpecialUnderwaterAnimation(bool* LoopSpecial)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSpecialUnderwaterAnimation");

	UFaunaAnimationInstance_GetSpecialUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (LoopSpecial != nullptr)
		*LoopSpecial = params.LoopSpecial;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSpecialSeaAnimation
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           LoopSpecial                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSpecialSeaAnimation(bool* LoopSpecial)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSpecialSeaAnimation");

	UFaunaAnimationInstance_GetSpecialSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (LoopSpecial != nullptr)
		*LoopSpecial = params.LoopSpecial;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSpecialLandAnimation
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           LoopSpecial                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSpecialLandAnimation(bool* LoopSpecial)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSpecialLandAnimation");

	UFaunaAnimationInstance_GetSpecialLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (LoopSpecial != nullptr)
		*LoopSpecial = params.LoopSpecial;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeStrikeOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeStrikeOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeStrikeOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeStrikeOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceOutOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeCharmStanceOutOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceOutOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeCharmStanceOutOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceLoopOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeCharmStanceLoopOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceLoopOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeCharmStanceLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceInOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeCharmStanceInOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceInOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeCharmStanceInOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceOutOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeAttackStanceOutOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceOutOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeAttackStanceOutOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceLoopOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeAttackStanceLoopOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceLoopOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeAttackStanceLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceInOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetSnakeAttackStanceInOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceInOnLandAnimation");

	UFaunaAnimationInstance_GetSnakeAttackStanceInOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveStartledLowOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigStarveStartledLowOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigStarveStartledLowOnLandAnimation");

	UFaunaAnimationInstance_GetPigStarveStartledLowOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveStartledHighOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigStarveStartledHighOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigStarveStartledHighOnLandAnimation");

	UFaunaAnimationInstance_GetPigStarveStartledHighOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveOutOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigStarveOutOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigStarveOutOnLandAnimation");

	UFaunaAnimationInstance_GetPigStarveOutOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveLoopOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigStarveLoopOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigStarveLoopOnLandAnimation");

	UFaunaAnimationInstance_GetPigStarveLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveInOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigStarveInOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigStarveInOnLandAnimation");

	UFaunaAnimationInstance_GetPigStarveInOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveDeathOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigStarveDeathOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigStarveDeathOnLandAnimation");

	UFaunaAnimationInstance_GetPigStarveDeathOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigEatingUnderwaterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigEatingUnderwaterAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigEatingUnderwaterAnimation");

	UFaunaAnimationInstance_GetPigEatingUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigEatingOnSeaAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigEatingOnSeaAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigEatingOnSeaAnimation");

	UFaunaAnimationInstance_GetPigEatingOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigEatingOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetPigEatingOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetPigEatingOnLandAnimation");

	UFaunaAnimationInstance_GetPigEatingOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionUnderwaterAnimationB()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationB");

	UFaunaAnimationInstance_GetLocomotionUnderwaterAnimationB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionUnderwaterAnimationA()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationA");

	UFaunaAnimationInstance_GetLocomotionUnderwaterAnimationA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionSeaAnimationB()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationB");

	UFaunaAnimationInstance_GetLocomotionSeaAnimationB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionSeaAnimationA()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationA");

	UFaunaAnimationInstance_GetLocomotionSeaAnimationA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionLandAnimationB()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationB");

	UFaunaAnimationInstance_GetLocomotionLandAnimationB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionLandAnimationA()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationA");

	UFaunaAnimationInstance_GetLocomotionLandAnimationA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetImpactUnderwaterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetImpactUnderwaterAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetImpactUnderwaterAnimation");

	UFaunaAnimationInstance_GetImpactUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetImpactOnSeaAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetImpactOnSeaAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetImpactOnSeaAnimation");

	UFaunaAnimationInstance_GetImpactOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetImpactOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBlendSpace1D* UFaunaAnimationInstance::GetImpactOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetImpactOnLandAnimation");

	UFaunaAnimationInstance_GetImpactOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetIdleUnderwaterAnimationB()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationB");

	UFaunaAnimationInstance_GetIdleUnderwaterAnimationB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetIdleUnderwaterAnimationA()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationA");

	UFaunaAnimationInstance_GetIdleUnderwaterAnimationA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetIdleSeaAnimationB()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationB");

	UFaunaAnimationInstance_GetIdleSeaAnimationB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetIdleSeaAnimationA()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationA");

	UFaunaAnimationInstance_GetIdleSeaAnimationA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleLandAnimationB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetIdleLandAnimationB()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetIdleLandAnimationB");

	UFaunaAnimationInstance_GetIdleLandAnimationB_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleLandAnimationA
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetIdleLandAnimationA()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetIdleLandAnimationA");

	UFaunaAnimationInstance_GetIdleLandAnimationA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDyingLoopUnderwaterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetDyingLoopUnderwaterAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetDyingLoopUnderwaterAnimation");

	UFaunaAnimationInstance_GetDyingLoopUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDyingLoopOnSeaAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetDyingLoopOnSeaAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetDyingLoopOnSeaAnimation");

	UFaunaAnimationInstance_GetDyingLoopOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDyingLoopOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetDyingLoopOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetDyingLoopOnLandAnimation");

	UFaunaAnimationInstance_GetDyingLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDeathUnderwaterAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetDeathUnderwaterAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetDeathUnderwaterAnimation");

	UFaunaAnimationInstance_GetDeathUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDeathOnSeaAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetDeathOnSeaAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetDeathOnSeaAnimation");

	UFaunaAnimationInstance_GetDeathOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDeathOnLandAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAnimSequence* UFaunaAnimationInstance::GetDeathOnLandAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GetDeathOnLandAnimation");

	UFaunaAnimationInstance_GetDeathOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GenerateNewValidAnimationIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EFaunaAnimationLocation> InLocation                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EFaunaAnimationState> InState                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsIdleStateA                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UFaunaAnimationInstance::GenerateNewValidAnimationIndex(class AActor* Owner, TEnumAsByte<Athena_EFaunaAnimationLocation> InLocation, TEnumAsByte<Athena_EFaunaAnimationState> InState, bool IsIdleStateA)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.GenerateNewValidAnimationIndex");

	UFaunaAnimationInstance_GenerateNewValidAnimationIndex_Params params;
	params.Owner = Owner;
	params.InLocation = InLocation;
	params.InState = InState;
	params.IsIdleStateA = IsIdleStateA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FaunaAnimationInstance.AssetArrayValidationCheck
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UFaunaAnimationInstance::AssetArrayValidationCheck()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaunaAnimationInstance.AssetArrayValidationCheck");

	UFaunaAnimationInstance_AssetArrayValidationCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFaunaAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(Fauna, AActor);
	READ_PTR_FULL(FaunaCharacter, AFauna);
}

void UFaunaAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(Fauna);
	DELE_PTR_FULL(FaunaCharacter);
}

void UFaunaBreed::AfterRead()
{
	UObject::AfterRead();

}

void UFaunaBreed::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFaunaSpecies::AfterRead()
{
	UObject::AfterRead();

}

void UFaunaSpecies::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UStatCondition::AfterRead()
{
	UObject::AfterRead();

}

void UStatCondition::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFeatureToggleStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UFeatureToggleStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UFireBreathAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UFireBreathAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UFireBreathAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UFireBreathAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UFireBreathAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

	READ_PTR_FULL(Owner, APawn);
	READ_PTR_FULL(SetupAbilityParams, UFireBreathAIAbilityParams);
	READ_PTR_FULL(FireBreathEmitter, AStatusEffectOverlapZone);
	READ_PTR_FULL(FireVFX, UVFXSpawnerComponent);
}

void UFireBreathAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

	DELE_PTR_FULL(Owner);
	DELE_PTR_FULL(SetupAbilityParams);
	DELE_PTR_FULL(FireBreathEmitter);
	DELE_PTR_FULL(FireVFX);
}

void UMigrationUIContentsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Font, UFont);
}

void UMigrationUIContentsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Font);
}

// Function Athena.MigrationUIComponent.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMigrationUIComponent::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MigrationUIComponent.OnTextCanvasUpdate");

	UMigrationUIComponent_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMigrationUIComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(UIContentsDataAsset, UMigrationUIContentsDataAsset);
	READ_PTR_FULL(TextRenderTarget, UCanvasRenderTarget2D);
	READ_PTR_FULL(DynamicMaterial, UMaterialInstanceDynamic);
}

void UMigrationUIComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(UIContentsDataAsset);
	DELE_PTR_FULL(TextRenderTarget);
	DELE_PTR_FULL(DynamicMaterial);
}

void USpawnRequirement::AfterRead()
{
	UObject::AfterRead();

}

void USpawnRequirement::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMinimumCrewCountSpawnRequirement::AfterRead()
{
	USpawnRequirement::AfterRead();

}

void UMinimumCrewCountSpawnRequirement::BeforeDelete()
{
	USpawnRequirement::BeforeDelete();

}

void AMockCharacterWithAthenaPlayerCharacterMovementComponent::AfterRead()
{
	ACharacter::AfterRead();

}

void AMockCharacterWithAthenaPlayerCharacterMovementComponent::BeforeDelete()
{
	ACharacter::BeforeDelete();

}

void AMockControllerWithSubjectInterface::AfterRead()
{
	AController::AfterRead();

}

void AMockControllerWithSubjectInterface::BeforeDelete()
{
	AController::BeforeDelete();

}

void AMockInventoryItem::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void AMockInventoryItem::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
}

void UMockObjectWithSubjectInterface::AfterRead()
{
	UObject::AfterRead();

}

void UMockObjectWithSubjectInterface::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMockTelemetryDescriptorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMockTelemetryDescriptorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.Shovel.Server_RequestDigRPC
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           WasBuryRequested               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AShovel::Server_RequestDigRPC(bool WasBuryRequested)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shovel.Server_RequestDigRPC");

	AShovel_Server_RequestDigRPC_Params params;
	params.WasBuryRequested = WasBuryRequested;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Shovel.Multicast_DigRPC
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TEnumAsByte<Athena_EShovelDigType> NewDigType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  DigUnearthingClass             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AShovel::Multicast_DigRPC(TEnumAsByte<Athena_EShovelDigType> NewDigType, class UClass* DigUnearthingClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shovel.Multicast_DigRPC");

	AShovel_Multicast_DigRPC_Params params;
	params.NewDigType = NewDigType;
	params.DigUnearthingClass = DigUnearthingClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Shovel.GetShouldWielderBeLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShovel::GetShouldWielderBeLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shovel.GetShouldWielderBeLocked");

	AShovel_GetShouldWielderBeLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Shovel.GetLastKnownDigTypeOnServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EShovelDigType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EShovelDigType> AShovel::GetLastKnownDigTypeOnServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shovel.GetLastKnownDigTypeOnServer");

	AShovel_GetLastKnownDigTypeOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Shovel.GetCurrentDigType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EShovelDigType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EShovelDigType> AShovel::GetCurrentDigType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Shovel.GetCurrentDigType");

	AShovel_GetCurrentDigType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AShovel::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(ShovelHoleParams, UShovelSurfaceHoleDataAsset);
	READ_PTR_FULL(ShovelHoleFx, UShovelSurfaceFxDataAsset);
	READ_PTR_FULL(ShovelEnterSurfaceSfx, UWwiseEvent);
	READ_PTR_FULL(ShovelExitSurfaceSfx, UWwiseEvent);
	READ_PTR_FULL(HitBuriedChestSfx, UWwiseEvent);
	READ_PTR_FULL(ShovelDigCooldownType, UClass);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(ActorBeingDugClass, UClass);
}

void AShovel::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(ShovelHoleParams);
	DELE_PTR_FULL(ShovelHoleFx);
	DELE_PTR_FULL(ShovelEnterSurfaceSfx);
	DELE_PTR_FULL(ShovelExitSurfaceSfx);
	DELE_PTR_FULL(HitBuriedChestSfx);
	DELE_PTR_FULL(ShovelDigCooldownType);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(ActorBeingDugClass);
}

// Function Athena.MockTelemetryDispatcher.ValidateGameEndTelemetryEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPlayerGameEndTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            MinIdleDuration                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            MinActiveDuration              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            MinVoiceChatDuration           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMockTelemetryDispatcher::STATIC_ValidateGameEndTelemetryEvent(const struct FPlayerGameEndTelemetryEvent& Event, int MinIdleDuration, int MinActiveDuration, int MinVoiceChatDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.ValidateGameEndTelemetryEvent");

	UMockTelemetryDispatcher_ValidateGameEndTelemetryEvent_Params params;
	params.Event = Event;
	params.MinIdleDuration = MinIdleDuration;
	params.MinActiveDuration = MinActiveDuration;
	params.MinVoiceChatDuration = MinVoiceChatDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MockTelemetryDispatcher.SeamlessTravelTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMockTelemetryDispatcher::SeamlessTravelTo(class AAthenaPlayerController* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.SeamlessTravelTo");

	UMockTelemetryDispatcher_SeamlessTravelTo_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnUIScreenTransitionTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FUIScreenTransitionTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnUIScreenTransitionTelemetryEvent(const struct FUIScreenTransitionTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnUIScreenTransitionTelemetryEvent");

	UMockTelemetryDispatcher_OnUIScreenTransitionTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnShovelTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FShovelTelemetryEvent   Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnShovelTelemetryEvent(const struct FShovelTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnShovelTelemetryEvent");

	UMockTelemetryDispatcher_OnShovelTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnShipSpawnedTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FShipSpawnedTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnShipSpawnedTelemetryEvent(const struct FShipSpawnedTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnShipSpawnedTelemetryEvent");

	UMockTelemetryDispatcher_OnShipSpawnedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnShipHeartbeatTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FShipHeartbeatTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnShipHeartbeatTelemetryEvent(const struct FShipHeartbeatTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnShipHeartbeatTelemetryEvent");

	UMockTelemetryDispatcher_OnShipHeartbeatTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnShipDestroyedTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FShipDestroyedTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnShipDestroyedTelemetryEvent(const struct FShipDestroyedTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnShipDestroyedTelemetryEvent");

	UMockTelemetryDispatcher_OnShipDestroyedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnShipDamagedTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FShipDamagedTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnShipDamagedTelemetryEvent(const struct FShipDamagedTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnShipDamagedTelemetryEvent");

	UMockTelemetryDispatcher_OnShipDamagedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerSpawnTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerSpawnTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerSpawnTelemetryEvent(const struct FPlayerSpawnTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerSpawnTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerSpawnTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageStartTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerObjectUsageStartTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnPlayerObjectUsageStartTelemetryEvent(const struct FPlayerObjectUsageStartTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageStartTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerObjectUsageStartTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageEndTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerObjectUsageEndTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnPlayerObjectUsageEndTelemetryEvent(const struct FPlayerObjectUsageEndTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageEndTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerObjectUsageEndTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerItemRetrievalFromContainerTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerItemRetrievalFromContainerTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerItemRetrievalFromContainerTelemetryEvent(const struct FPlayerItemRetrievalFromContainerTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerItemRetrievalFromContainerTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerItemRetrievalFromContainerTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerItemEquipTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerItemEquipTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerItemEquipTelemetryEvent(const struct FPlayerItemEquipTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerItemEquipTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerItemEquipTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerHealthChangeTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerHealthChangeTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerHealthChangeTelemetryEvent(const struct FPlayerHealthChangeTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerHealthChangeTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerHealthChangeTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerGameStartTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerGameStartTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerGameStartTelemetryEvent(const struct FPlayerGameStartTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerGameStartTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerGameStartTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerGameEndTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerGameEndTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerGameEndTelemetryEvent(const struct FPlayerGameEndTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerGameEndTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerGameEndTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageStartTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerCapstanUsageStartTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerCapstanUsageStartTelemetryEvent(const struct FPlayerCapstanUsageStartTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageStartTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerCapstanUsageStartTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageEndTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerCapstanUsageEndTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerCapstanUsageEndTelemetryEvent(const struct FPlayerCapstanUsageEndTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageEndTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerCapstanUsageEndTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerAttackTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerAttackTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerAttackTelemetryEvent(const struct FPlayerAttackTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerAttackTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerAttackTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerActionTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerActionTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnPlayerActionTelemetryEvent(const struct FPlayerActionTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerActionTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerActionTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnPlayerActionCannonTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FPlayerActionCannonTelemetryEvent Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnPlayerActionCannonTelemetryEvent(const struct FPlayerActionCannonTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnPlayerActionCannonTelemetryEvent");

	UMockTelemetryDispatcher_OnPlayerActionCannonTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnLoadingTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FLoadingTelemetryEvent  Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UMockTelemetryDispatcher::OnLoadingTelemetryEvent(const struct FLoadingTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnLoadingTelemetryEvent");

	UMockTelemetryDispatcher_OnLoadingTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnCrewPlayerLeftTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FCrewPlayerLeftTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnCrewPlayerLeftTelemetryEvent(const struct FCrewPlayerLeftTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnCrewPlayerLeftTelemetryEvent");

	UMockTelemetryDispatcher_OnCrewPlayerLeftTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnCrewPlayerJoinedTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FCrewPlayerJoinedTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnCrewPlayerJoinedTelemetryEvent(const struct FCrewPlayerJoinedTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnCrewPlayerJoinedTelemetryEvent");

	UMockTelemetryDispatcher_OnCrewPlayerJoinedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnCrewDestroyedTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FCrewDestroyedTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnCrewDestroyedTelemetryEvent(const struct FCrewDestroyedTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnCrewDestroyedTelemetryEvent");

	UMockTelemetryDispatcher_OnCrewDestroyedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.OnCrewCreatedTelemetryEvent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FCrewCreatedTelemetryEvent Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMockTelemetryDispatcher::OnCrewCreatedTelemetryEvent(const struct FCrewCreatedTelemetryEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.OnCrewCreatedTelemetryEvent");

	UMockTelemetryDispatcher_OnCrewCreatedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockTelemetryDispatcher.IsHeartbeatValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMockTelemetryDispatcher::IsHeartbeatValid(class AAthenaPlayerController* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.IsHeartbeatValid");

	UMockTelemetryDispatcher_IsHeartbeatValid_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MockTelemetryDispatcher.Initialise
// (Final, Native, Public, BlueprintCallable)
void UMockTelemetryDispatcher::Initialise()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockTelemetryDispatcher.Initialise");

	UMockTelemetryDispatcher_Initialise_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMockTelemetryDispatcher::AfterRead()
{
	UObject::AfterRead();

}

void UMockTelemetryDispatcher::BeforeDelete()
{
	UObject::BeforeDelete();

}

void AModalInteraction::AfterRead()
{
	AActor::AfterRead();

}

void AModalInteraction::BeforeDelete()
{
	AActor::BeforeDelete();

}

void APossessionsChestInteraction::AfterRead()
{
	AModalInteraction::AfterRead();

}

void APossessionsChestInteraction::BeforeDelete()
{
	AModalInteraction::BeforeDelete();

}

// Function Athena.ArmoryChestInteraction.Server_ArmoryChestEquipWeapon
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InItemDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            InIndex                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AArmoryChestInteraction::Server_ArmoryChestEquipWeapon(class UClass* InItemDesc, int InIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ArmoryChestInteraction.Server_ArmoryChestEquipWeapon");

	AArmoryChestInteraction_Server_ArmoryChestEquipWeapon_Params params;
	params.InItemDesc = InItemDesc;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AArmoryChestInteraction::AfterRead()
{
	APossessionsChestInteraction::AfterRead();

}

void AArmoryChestInteraction::BeforeDelete()
{
	APossessionsChestInteraction::BeforeDelete();

}

// Function Athena.ClothingChestInteraction.Server_ClothingChestUnequipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AClothingChestInteraction::Server_ClothingChestUnequipItem(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingChestInteraction.Server_ClothingChestUnequipItem");

	AClothingChestInteraction_Server_ClothingChestUnequipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClothingChestInteraction.Server_ClothingChestUnequipEmote
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AClothingChestInteraction::Server_ClothingChestUnequipEmote(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingChestInteraction.Server_ClothingChestUnequipEmote");

	AClothingChestInteraction_Server_ClothingChestUnequipEmote_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClothingChestInteraction.Server_ClothingChestEquipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AClothingChestInteraction::Server_ClothingChestEquipItem(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingChestInteraction.Server_ClothingChestEquipItem");

	AClothingChestInteraction_Server_ClothingChestEquipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClothingChestInteraction.Server_ClothingChestEquipEmote
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            InIndex                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AClothingChestInteraction::Server_ClothingChestEquipEmote(class UClass* InDesc, int InIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingChestInteraction.Server_ClothingChestEquipEmote");

	AClothingChestInteraction_Server_ClothingChestEquipEmote_Params params;
	params.InDesc = InDesc;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClothingChestInteraction.Server_ClothingChestChangeClothing
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<class UClass*>          InAdds                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper)
// TArray<class UClass*>          InRemoves                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper)
void AClothingChestInteraction::Server_ClothingChestChangeClothing(TArray<class UClass*> InAdds, TArray<class UClass*> InRemoves)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingChestInteraction.Server_ClothingChestChangeClothing");

	AClothingChestInteraction_Server_ClothingChestChangeClothing_Params params;
	params.InAdds = InAdds;
	params.InRemoves = InRemoves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClothingChestInteraction.OnRep_Loadout
// (Final, Native, Private)
void AClothingChestInteraction::OnRep_Loadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingChestInteraction.OnRep_Loadout");

	AClothingChestInteraction_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AClothingChestInteraction::AfterRead()
{
	APossessionsChestInteraction::AfterRead();

}

void AClothingChestInteraction::BeforeDelete()
{
	APossessionsChestInteraction::BeforeDelete();

}

// Function Athena.EquipmentChestInteraction.Server_EquipmentChestEquipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InItemDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AEquipmentChestInteraction::Server_EquipmentChestEquipItem(class UClass* InItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EquipmentChestInteraction.Server_EquipmentChestEquipItem");

	AEquipmentChestInteraction_Server_EquipmentChestEquipItem_Params params;
	params.InItemDesc = InItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AEquipmentChestInteraction::AfterRead()
{
	APossessionsChestInteraction::AfterRead();

}

void AEquipmentChestInteraction::BeforeDelete()
{
	APossessionsChestInteraction::BeforeDelete();

}

// Function Athena.PetLoadoutViewInterface.GetPetLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPetLoadout             ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FPetLoadout UPetLoadoutViewInterface::GetPetLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetLoadoutViewInterface.GetPetLoadout");

	UPetLoadoutViewInterface_GetPetLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPetLoadoutViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPetLoadoutViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PetChestInteraction.Server_PetChestUnequipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void APetChestInteraction::Server_PetChestUnequipItem(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetChestInteraction.Server_PetChestUnequipItem");

	APetChestInteraction_Server_PetChestUnequipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PetChestInteraction.Server_PetChestRemovePet
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<class UClass*>          InRemoves                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper)
void APetChestInteraction::Server_PetChestRemovePet(TArray<class UClass*> InRemoves)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetChestInteraction.Server_PetChestRemovePet");

	APetChestInteraction_Server_PetChestRemovePet_Params params;
	params.InRemoves = InRemoves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PetChestInteraction.Server_PetChestNamePet
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 PetName                        (Parm, ZeroConstructor, HasGetValueTypeHash)
void APetChestInteraction::Server_PetChestNamePet(const struct FString& PetName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetChestInteraction.Server_PetChestNamePet");

	APetChestInteraction_Server_PetChestNamePet_Params params;
	params.PetName = PetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PetChestInteraction.Server_PetChestEquipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FString                 LocalisedDefaultPetName        (Parm, ZeroConstructor, HasGetValueTypeHash)
void APetChestInteraction::Server_PetChestEquipItem(class UClass* InDesc, const struct FString& LocalisedDefaultPetName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetChestInteraction.Server_PetChestEquipItem");

	APetChestInteraction_Server_PetChestEquipItem_Params params;
	params.InDesc = InDesc;
	params.LocalisedDefaultPetName = LocalisedDefaultPetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PetChestInteraction.OnRep_Loadout
// (Final, Native, Private)
void APetChestInteraction::OnRep_Loadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetChestInteraction.OnRep_Loadout");

	APetChestInteraction_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PetChestInteraction.Client_PetChestNamePetFeedback
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void APetChestInteraction::Client_PetChestNamePetFeedback(bool bSuccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetChestInteraction.Client_PetChestNamePetFeedback");

	APetChestInteraction_Client_PetChestNamePetFeedback_Params params;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APetChestInteraction::AfterRead()
{
	APossessionsChestInteraction::AfterRead();

}

void APetChestInteraction::BeforeDelete()
{
	APossessionsChestInteraction::BeforeDelete();

}

// Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestUnequipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AShipCustomizationChestInteraction::Server_ShipCustomizationChestUnequipItem(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestUnequipItem");

	AShipCustomizationChestInteraction_Server_ShipCustomizationChestUnequipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestEquipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AShipCustomizationChestInteraction::Server_ShipCustomizationChestEquipItem(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestEquipItem");

	AShipCustomizationChestInteraction_Server_ShipCustomizationChestEquipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShipCustomizationChestInteraction::AfterRead()
{
	APossessionsChestInteraction::AfterRead();

}

void AShipCustomizationChestInteraction::BeforeDelete()
{
	APossessionsChestInteraction::BeforeDelete();

}

void AShipwrightInteractionProxy::AfterRead()
{
	AModalInteraction::AfterRead();

}

void AShipwrightInteractionProxy::BeforeDelete()
{
	AModalInteraction::BeforeDelete();

}

void AShopkeeperInteractionProxy::AfterRead()
{
	AModalInteraction::AfterRead();

	READ_PTR_FULL(ShopDesc, UShopDesc);
}

void AShopkeeperInteractionProxy::BeforeDelete()
{
	AModalInteraction::BeforeDelete();

	DELE_PTR_FULL(ShopDesc);
}

// Function Athena.VoyageProposalContainerInteraction.Server_VoyageProposalSelected
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 ProposalDescName               (Parm, ZeroConstructor, HasGetValueTypeHash)
void AVoyageProposalContainerInteraction::Server_VoyageProposalSelected(const struct FString& ProposalDescName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageProposalContainerInteraction.Server_VoyageProposalSelected");

	AVoyageProposalContainerInteraction_Server_VoyageProposalSelected_Params params;
	params.ProposalDescName = ProposalDescName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVoyageProposalContainerInteraction::AfterRead()
{
	AModalInteraction::AfterRead();

}

void AVoyageProposalContainerInteraction::BeforeDelete()
{
	AModalInteraction::BeforeDelete();

}

// Function Athena.ModalInteractionActionStateId.PushCharacterIntoModalInteractionActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AModalInteractionProxy*  InInteractionProxy             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UModalInteractionActionStateId::STATIC_PushCharacterIntoModalInteractionActionState(class AActor* Character, class AModalInteractionProxy* InInteractionProxy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ModalInteractionActionStateId.PushCharacterIntoModalInteractionActionState");

	UModalInteractionActionStateId_PushCharacterIntoModalInteractionActionState_Params params;
	params.Character = Character;
	params.InInteractionProxy = InInteractionProxy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UModalInteractionActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UModalInteractionActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.ModalInteractionCompositeInputHandler.OnDisengage
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UModalInteractionCompositeInputHandler::OnDisengage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ModalInteractionCompositeInputHandler.OnDisengage");

	UModalInteractionCompositeInputHandler_OnDisengage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UModalInteractionCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UModalInteractionCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void AModalInteractionProxy::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(Mesh, UPrimitiveComponent);
	READ_PTR_FULL(InteractionRegion, UInteractableComponent);
	READ_PTR_FULL(InteractionType, UClass);
	READ_PTR_FULL(NotificationInputId, UClass);
}

void AModalInteractionProxy::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(InteractionRegion);
	DELE_PTR_FULL(InteractionType);
	DELE_PTR_FULL(NotificationInputId);
}

void AMermaidInteractionProxy::AfterRead()
{
	AModalInteractionProxy::AfterRead();

}

void AMermaidInteractionProxy::BeforeDelete()
{
	AModalInteractionProxy::BeforeDelete();

}

// Function Athena.NPC.GetSkeletalMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USkeletalMeshComponent* ANPC::GetSkeletalMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPC.GetSkeletalMesh");

	ANPC_GetSkeletalMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ANPC::AfterRead()
{
	AModalInteractionProxy::AfterRead();

	READ_PTR_FULL(CosmeticItemAnimationComponent, UCosmeticItemAnimationComponent);
}

void ANPC::BeforeDelete()
{
	AModalInteractionProxy::BeforeDelete();

	DELE_PTR_FULL(CosmeticItemAnimationComponent);
}

void ACompanyShopkeeper::AfterRead()
{
	ANPC::AfterRead();

	READ_PTR_FULL(CompanyNPCComponent, UCompanyNPCComponent);
}

void ACompanyShopkeeper::BeforeDelete()
{
	ANPC::BeforeDelete();

	DELE_PTR_FULL(CompanyNPCComponent);
}

void ATavernStrangerNPC::AfterRead()
{
	ACompanyShopkeeper::AfterRead();

	READ_PTR_FULL(OwnedBarrelMeshActor, ATavernStrangersBarrel);
	READ_PTR_FULL(RegisteredController, AAthenaPlayerController);
}

void ATavernStrangerNPC::BeforeDelete()
{
	ACompanyShopkeeper::BeforeDelete();

	DELE_PTR_FULL(OwnedBarrelMeshActor);
	DELE_PTR_FULL(RegisteredController);
}

// Function Athena.TutorialTavernStrangerNPC.OnAnimationsLoaded
// (Event, Protected, BlueprintEvent)
void ATutorialTavernStrangerNPC::OnAnimationsLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TutorialTavernStrangerNPC.OnAnimationsLoaded");

	ATutorialTavernStrangerNPC_OnAnimationsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TutorialTavernStrangerNPC.CleanTutorialCutScene
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void ATutorialTavernStrangerNPC::CleanTutorialCutScene()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TutorialTavernStrangerNPC.CleanTutorialCutScene");

	ATutorialTavernStrangerNPC_CleanTutorialCutScene_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATutorialTavernStrangerNPC::AfterRead()
{
	ATavernStrangerNPC::AfterRead();

	READ_PTR_FULL(SummonSFXPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(SummonSFX, UWwiseEvent);
}

void ATutorialTavernStrangerNPC::BeforeDelete()
{
	ATavernStrangerNPC::BeforeDelete();

	DELE_PTR_FULL(SummonSFXPool);
	DELE_PTR_FULL(SummonSFX);
}

// Function Athena.CutsceneLockNPC.OnRep_KeyTaken
// (Final, Native, Private)
void ACutsceneLockNPC::OnRep_KeyTaken()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneLockNPC.OnRep_KeyTaken");

	ACutsceneLockNPC_OnRep_KeyTaken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneLockNPC.OnLockOpened
// (Final, Native, Private)
// Parameters:
// class AActor*                  Interactor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACutsceneLockNPC::OnLockOpened(class AActor* Interactor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneLockNPC.OnLockOpened");

	ACutsceneLockNPC_OnLockOpened_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACutsceneLockNPC::AfterRead()
{
	ANPC::AfterRead();

	READ_PTR_FULL(LockComponent, ULockComponent);
	READ_PTR_FULL(CutsceneComponent, UCutsceneComponent);
	READ_PTR_FULL(AnimNotifyWwiseEmitterComponent, UAnimNotifyWwiseEmitterComponent);
}

void ACutsceneLockNPC::BeforeDelete()
{
	ANPC::BeforeDelete();

	DELE_PTR_FULL(LockComponent);
	DELE_PTR_FULL(CutsceneComponent);
	DELE_PTR_FULL(AnimNotifyWwiseEmitterComponent);
}

void AShipwright::AfterRead()
{
	ANPC::AfterRead();

}

void AShipwright::BeforeDelete()
{
	ANPC::BeforeDelete();

}

void AShopkeeper::AfterRead()
{
	ANPC::AfterRead();

}

void AShopkeeper::BeforeDelete()
{
	ANPC::BeforeDelete();

}

void APossessionsChest::AfterRead()
{
	AModalInteractionProxy::AfterRead();

	READ_PTR_FULL(BeginInteractionSfx, UWwiseEvent);
	READ_PTR_FULL(EndInteractionSfx, UWwiseEvent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
}

void APossessionsChest::BeforeDelete()
{
	AModalInteractionProxy::BeforeDelete();

	DELE_PTR_FULL(BeginInteractionSfx);
	DELE_PTR_FULL(EndInteractionSfx);
	DELE_PTR_FULL(SfxPool);
}

void AShipCustomizationChest::AfterRead()
{
	APossessionsChest::AfterRead();

	READ_PTR_FULL(ShipInteractionRadius, USphereComponent);
}

void AShipCustomizationChest::BeforeDelete()
{
	APossessionsChest::BeforeDelete();

	DELE_PTR_FULL(ShipInteractionRadius);
}

void AShipFlagCustomizationChest::AfterRead()
{
	AShipCustomizationChest::AfterRead();

	READ_PTR_FULL(ParentActor, AActor);
}

void AShipFlagCustomizationChest::BeforeDelete()
{
	AShipCustomizationChest::BeforeDelete();

	DELE_PTR_FULL(ParentActor);
}

void UVoyageProposalContainerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoyageProposalContainerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.VoyageProposalContainer.SetTaleManifest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACrewShipManifest*       Manifest                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVoyageProposalContainer::SetTaleManifest(class ACrewShipManifest* Manifest)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageProposalContainer.SetTaleManifest");

	AVoyageProposalContainer_SetTaleManifest_Params params;
	params.Manifest = Manifest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VoyageProposalContainer.SetManifest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACrewShipManifest*       Manifest                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVoyageProposalContainer::SetManifest(class ACrewShipManifest* Manifest)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageProposalContainer.SetManifest");

	AVoyageProposalContainer_SetManifest_Params params;
	params.Manifest = Manifest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVoyageProposalContainer::AfterRead()
{
	AModalInteractionProxy::AfterRead();

	READ_PTR_FULL(VoyageDescAsset, UVoyageDescDataAsset);
	READ_PTR_FULL(IslandEventComponent, UIslandEventComponent);
	READ_PTR_FULL(CrewShipManifest, ACrewShipManifest);
	READ_PTR_FULL(VoyageCancelVotableObjectView, AActor);
	READ_PTR_FULL(TaleCancelVotableObjectView, AActor);
	READ_PTR_FULL(ParentShip, AShip);
}

void AVoyageProposalContainer::BeforeDelete()
{
	AModalInteractionProxy::BeforeDelete();

	DELE_PTR_FULL(VoyageDescAsset);
	DELE_PTR_FULL(IslandEventComponent);
	DELE_PTR_FULL(CrewShipManifest);
	DELE_PTR_FULL(VoyageCancelVotableObjectView);
	DELE_PTR_FULL(TaleCancelVotableObjectView);
	DELE_PTR_FULL(ParentShip);
}

void AModifyPlayerMovementOverlapActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MeshOverlapVolume, UStaticMeshComponent);
	READ_PTR_FULL(BoxOverlapVolume, UBoxComponent);
	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(OverlapVolume, UPrimitiveComponent);
}

void AModifyPlayerMovementOverlapActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MeshOverlapVolume);
	DELE_PTR_FULL(BoxOverlapVolume);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(OverlapVolume);
}

void UMountedWeaponAimAndFireInputComponent::AfterRead()
{
	UAthenaCharacterBaseMovementComponentWithInterference::AfterRead();

}

void UMountedWeaponAimAndFireInputComponent::BeforeDelete()
{
	UAthenaCharacterBaseMovementComponentWithInterference::BeforeDelete();

}

void UCannonInputComponent::AfterRead()
{
	UMountedWeaponAimAndFireInputComponent::AfterRead();

}

void UCannonInputComponent::BeforeDelete()
{
	UMountedWeaponAimAndFireInputComponent::BeforeDelete();

}

void UHarpoonInputComponent::AfterRead()
{
	UMountedWeaponAimAndFireInputComponent::AfterRead();

	READ_PTR_FULL(HarpoonLauncher, AHarpoonLauncher);
}

void UHarpoonInputComponent::BeforeDelete()
{
	UMountedWeaponAimAndFireInputComponent::BeforeDelete();

	DELE_PTR_FULL(HarpoonLauncher);
}

void AMountpointActor::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(MountpointComponent, UInterpolatingMountpointComponent);
	READ_PTR_FULL(OverlapBroadcasterShapeComponent, UCapsuleComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(MountedMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(PressedNotificationInputId, UClass);
	READ_PTR_FULL(ReleasedNotificationInputId, UClass);
}

void AMountpointActor::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(MountpointComponent);
	DELE_PTR_FULL(OverlapBroadcasterShapeComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(MountedMeshComponent);
	DELE_PTR_FULL(PressedNotificationInputId);
	DELE_PTR_FULL(ReleasedNotificationInputId);
}

void UMoveToLocationActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UMoveToLocationActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.MusicalInstrument.TriggerMagicGlow_Multicast_RPC
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AMusicalInstrument::TriggerMagicGlow_Multicast_RPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MusicalInstrument.TriggerMagicGlow_Multicast_RPC");

	AMusicalInstrument_TriggerMagicGlow_Multicast_RPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MusicalInstrument.StartMagicGlowEffect
// (Final, Native, Public, BlueprintCallable)
void AMusicalInstrument::StartMagicGlowEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MusicalInstrument.StartMagicGlowEffect");

	AMusicalInstrument_StartMagicGlowEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MusicalInstrument.IsEmitterPlaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AMusicalInstrument::IsEmitterPlaying()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MusicalInstrument.IsEmitterPlaying");

	AMusicalInstrument_IsEmitterPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AMusicalInstrument::AfterRead()
{
	AWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(TriggerEffectActor, UClass);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(AthenaPlayerCharacter, AAthenaPlayerCharacter);
}

void AMusicalInstrument::BeforeDelete()
{
	AWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(TriggerEffectActor);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(AthenaPlayerCharacter);
}

void AMusicalInstrumentStaticMesh::AfterRead()
{
	AMusicalInstrument::AfterRead();

}

void AMusicalInstrumentStaticMesh::BeforeDelete()
{
	AMusicalInstrument::BeforeDelete();

}

void AMusicalInstrumentSkeletalMesh::AfterRead()
{
	AMusicalInstrument::AfterRead();

}

void AMusicalInstrumentSkeletalMesh::BeforeDelete()
{
	AMusicalInstrument::BeforeDelete();

}

// Function Athena.MusicBox.OnRep_OnIsPlayingChanged
// (Final, Native, Private)
// Parameters:
// bool                           WasPlaying                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMusicBox::OnRep_OnIsPlayingChanged(bool WasPlaying)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MusicBox.OnRep_OnIsPlayingChanged");

	AMusicBox_OnRep_OnIsPlayingChanged_Params params;
	params.WasPlaying = WasPlaying;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMusicBox::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(MeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(SfxMusic, UWwiseEvent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
}

void AMusicBox::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(SfxMusic);
	DELE_PTR_FULL(SfxPool);
}

void UMutateCollectorsChestStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

}

void UMutateCollectorsChestStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

}

void UAddItemsToCollectorsChestStep::AfterRead()
{
	UMutateCollectorsChestStep::AfterRead();

	READ_PTR_FULL(Desc, UMutateCollectorsChestStepDesc);
	READ_PTR_FULL(ItemData, UFillCollectorsChestWithItemsDataAsset);
}

void UAddItemsToCollectorsChestStep::BeforeDelete()
{
	UMutateCollectorsChestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(ItemData);
}

void UAddItemToCollectorsChestStep::AfterRead()
{
	UMutateCollectorsChestStep::AfterRead();

	READ_PTR_FULL(Desc, UAddItemToCollectorsChestStepDesc);
}

void UAddItemToCollectorsChestStep::BeforeDelete()
{
	UMutateCollectorsChestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UWaitForCrewToCollectCollectorsChestPagesStep::AfterRead()
{
	UMutateCollectorsChestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UWaitForCrewToCollectCollectorsChestPagesStepDesc);
}

void UWaitForCrewToCollectCollectorsChestPagesStep::BeforeDelete()
{
	UMutateCollectorsChestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UMutateCollectorsChestStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UMutateCollectorsChestStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UAddItemsFromDataToCollectorsChestStepBaseDesc::AfterRead()
{
	UMutateCollectorsChestStepDesc::AfterRead();

}

void UAddItemsFromDataToCollectorsChestStepBaseDesc::BeforeDelete()
{
	UMutateCollectorsChestStepDesc::BeforeDelete();

}

void UAddItemsFromDataToCollectorsChestStepDesc::AfterRead()
{
	UAddItemsFromDataToCollectorsChestStepBaseDesc::AfterRead();

}

void UAddItemsFromDataToCollectorsChestStepDesc::BeforeDelete()
{
	UAddItemsFromDataToCollectorsChestStepBaseDesc::BeforeDelete();

}

void UAddItemToCollectorsChestStepDesc::AfterRead()
{
	UMutateCollectorsChestStepDesc::AfterRead();

}

void UAddItemToCollectorsChestStepDesc::BeforeDelete()
{
	UMutateCollectorsChestStepDesc::BeforeDelete();

}

void UWaitForCrewToCollectCollectorsChestPagesStepDesc::AfterRead()
{
	UMutateCollectorsChestStepDesc::AfterRead();

}

void UWaitForCrewToCollectCollectorsChestPagesStepDesc::BeforeDelete()
{
	UMutateCollectorsChestStepDesc::BeforeDelete();

}

void URadialContentRule::AfterRead()
{
	UObject::AfterRead();

}

void URadialContentRule::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMysteriousNotesRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

}

void UMysteriousNotesRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

}

void URadialAction::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(InputID, UClass);
}

void URadialAction::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(InputID);
}

void UOpenRadialAction::AfterRead()
{
	URadialAction::AfterRead();

	READ_PTR_FULL(CanExecuteRadial, URadialCreationRuleAsset);
}

void UOpenRadialAction::BeforeDelete()
{
	URadialAction::BeforeDelete();

	DELE_PTR_FULL(CanExecuteRadial);
}

void UNamedContextualOpenRadialAction::AfterRead()
{
	UOpenRadialAction::AfterRead();

}

void UNamedContextualOpenRadialAction::BeforeDelete()
{
	UOpenRadialAction::BeforeDelete();

}

void UNervousAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UNervousAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UNoiseMakerComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(LocalNoiseMakerFoliagePlay, UWwiseEvent);
	READ_PTR_FULL(LocalNoiseMakerFoliageStop, UWwiseEvent);
	READ_PTR_FULL(SimulatedCharacterFoliagePlay, UWwiseEvent);
	READ_PTR_FULL(SimulatedCharacterFoliageStop, UWwiseEvent);
}

void UNoiseMakerComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(LocalNoiseMakerFoliagePlay);
	DELE_PTR_FULL(LocalNoiseMakerFoliageStop);
	DELE_PTR_FULL(SimulatedCharacterFoliagePlay);
	DELE_PTR_FULL(SimulatedCharacterFoliageStop);
}

void UNoiseMakerComponent::AfterRead()
{
	UWwiseEmitterComponent::AfterRead();

	READ_PTR_FULL(NoiseMakerComponentParams, UNoiseMakerComponentParams);
}

void UNoiseMakerComponent::BeforeDelete()
{
	UWwiseEmitterComponent::BeforeDelete();

	DELE_PTR_FULL(NoiseMakerComponentParams);
}

void UNoiseMakerControllerParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNoiseMakerControllerParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UNonCrewVoiceMuteStateToggleNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UNonCrewVoiceMuteStateToggleNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UNonVerbalRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

	READ_PTR_FULL(PrimaryActionSlot, URadialAction);
	READ_PTR_FULL(SecondaryActionSlot, URadialAction);
	READ_PTR_FULL(TertiaryActionSlot, URadialAction);
	READ_PTR_FULL(QuaternaryActionSlot, URadialAction);
}

void UNonVerbalRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

	DELE_PTR_FULL(PrimaryActionSlot);
	DELE_PTR_FULL(SecondaryActionSlot);
	DELE_PTR_FULL(TertiaryActionSlot);
	DELE_PTR_FULL(QuaternaryActionSlot);
}

void UControllableObjectNonVerbalContentRule::AfterRead()
{
	UNonVerbalRadialContentRule::AfterRead();

	READ_PTR_FULL(CurrentPhrases, UPhrasesRadialDataAsset);
	READ_PTR_FULL(ControlledObject, AActor);
}

void UControllableObjectNonVerbalContentRule::BeforeDelete()
{
	UNonVerbalRadialContentRule::BeforeDelete();

	DELE_PTR_FULL(CurrentPhrases);
	DELE_PTR_FULL(ControlledObject);
}

void UQuickAccessNonVerbalRadialContentRule::AfterRead()
{
	UNonVerbalRadialContentRule::AfterRead();

	READ_PTR_FULL(CurrentPhrases, UNonVerbalRadialDataAsset);
}

void UQuickAccessNonVerbalRadialContentRule::BeforeDelete()
{
	UNonVerbalRadialContentRule::BeforeDelete();

	DELE_PTR_FULL(CurrentPhrases);
}

void UStrategyNonVerbalRadialContentRule::AfterRead()
{
	UNonVerbalRadialContentRule::AfterRead();

	READ_PTR_FULL(CurrentPhrases, UNonVerbalRadialDataAsset);
}

void UStrategyNonVerbalRadialContentRule::BeforeDelete()
{
	UNonVerbalRadialContentRule::BeforeDelete();

	DELE_PTR_FULL(CurrentPhrases);
}

void UWieldedItemNonVerbalRadialContentRule::AfterRead()
{
	UNonVerbalRadialContentRule::AfterRead();

	READ_PTR_FULL(CurrentPhrases, UPhrasesRadialDataAsset);
}

void UWieldedItemNonVerbalRadialContentRule::BeforeDelete()
{
	UNonVerbalRadialContentRule::BeforeDelete();

	DELE_PTR_FULL(CurrentPhrases);
}

void UNotificationMessagesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNotificationMessagesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UNotInActionStateRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UNotInActionStateRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

void UNPCCustomAnimationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCCustomAnimationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.NPCAnimInstance.UseHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EAthenaNPCObjectSlot> ObjectSlot                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCAnimInstance::UseHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand, TEnumAsByte<Athena_EAthenaNPCObjectSlot> ObjectSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.UseHeldObject");

	UNPCAnimInstance_UseHeldObject_Params params;
	params.SpawnHand = SpawnHand;
	params.ObjectSlot = ObjectSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.TriggerNPCCustomAnimationSequence
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   SequenceName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCAnimInstance::TriggerNPCCustomAnimationSequence(const struct FName& SequenceName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.TriggerNPCCustomAnimationSequence");

	UNPCAnimInstance_TriggerNPCCustomAnimationSequence_Params params;
	params.SequenceName = SequenceName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCAnimInstance.TriggerCustomAnimation
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   SequenceName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCAnimInstance::TriggerCustomAnimation(const struct FName& SequenceName, float StartTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.TriggerCustomAnimation");

	UNPCAnimInstance_TriggerCustomAnimation_Params params;
	params.SequenceName = SequenceName;
	params.StartTime = StartTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCAnimInstance.StopFacialAnimation
// (Final, Native, Public, BlueprintCallable)
void UNPCAnimInstance::StopFacialAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.StopFacialAnimation");

	UNPCAnimInstance_StopFacialAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.StopCustomAnimation
// (Native, Public, BlueprintCallable)
void UNPCAnimInstance::StopCustomAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.StopCustomAnimation");

	UNPCAnimInstance_StopCustomAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.StopAnimation
// (Final, Native, Public, BlueprintCallable)
void UNPCAnimInstance::StopAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.StopAnimation");

	UNPCAnimInstance_StopAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.SpawnInitialCosmeticItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCAnimInstance::SpawnInitialCosmeticItems()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.SpawnInitialCosmeticItems");

	UNPCAnimInstance_SpawnInitialCosmeticItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCAnimInstance.SetNewNPCCustomAnimationLoopingSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsLoopA                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FName                   SequenceName                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCAnimInstance::SetNewNPCCustomAnimationLoopingSequence(bool IsLoopA, const struct FName& SequenceName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.SetNewNPCCustomAnimationLoopingSequence");

	UNPCAnimInstance_SetNewNPCCustomAnimationLoopingSequence_Params params;
	params.IsLoopA = IsLoopA;
	params.SequenceName = SequenceName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCAnimInstance.OnSequenceStarted
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName                   SequenceName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          StartTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCAnimInstance::OnSequenceStarted(const struct FName& SequenceName, float StartTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.OnSequenceStarted");

	UNPCAnimInstance_OnSequenceStarted_Params params;
	params.SequenceName = SequenceName;
	params.StartTime = StartTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.GetNPCInitialSpawnedCosmeticItemArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UNPCAnimInstance::GetNPCInitialSpawnedCosmeticItemArray()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.GetNPCInitialSpawnedCosmeticItemArray");

	UNPCAnimInstance_GetNPCInitialSpawnedCosmeticItemArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCAnimInstance.GetCurrentMontagePosition
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UNPCAnimInstance::GetCurrentMontagePosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.GetCurrentMontagePosition");

	UNPCAnimInstance_GetCurrentMontagePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCAnimInstance.DetachHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           UseDetachSocketA               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           UseDetachSocketB               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UNPCAnimInstance::DetachHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand, bool UseDetachSocketA, bool UseDetachSocketB)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.DetachHeldObject");

	UNPCAnimInstance_DetachHeldObject_Params params;
	params.SpawnHand = SpawnHand;
	params.UseDetachSocketA = UseDetachSocketA;
	params.UseDetachSocketB = UseDetachSocketB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.DestroyHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCAnimInstance::DestroyHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.DestroyHeldObject");

	UNPCAnimInstance_DestroyHeldObject_Params params;
	params.SpawnHand = SpawnHand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.CleanUpNPCCustomAnimationInitialCosmeticItems
// (Final, Native, Public, BlueprintCallable)
void UNPCAnimInstance::CleanUpNPCCustomAnimationInitialCosmeticItems()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.CleanUpNPCCustomAnimationInitialCosmeticItems");

	UNPCAnimInstance_CleanUpNPCCustomAnimationInitialCosmeticItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.AttachHeldObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCAnimInstance::AttachHeldObject(TEnumAsByte<Athena_EAthenaNPCSpawnHand> SpawnHand)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.AttachHeldObject");

	UNPCAnimInstance_AttachHeldObject_Params params;
	params.SpawnHand = SpawnHand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.AllocateNPCIdleVariantAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ENPCIdleVariantType> IdleVariantType                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCAnimInstance::AllocateNPCIdleVariantAnimation(TEnumAsByte<Athena_ENPCIdleVariantType> IdleVariantType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.AllocateNPCIdleVariantAnimation");

	UNPCAnimInstance_AllocateNPCIdleVariantAnimation_Params params;
	params.IdleVariantType = IdleVariantType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCAnimInstance.AllocateNPCCustomAnimationSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNPCCustomAnimationDataAsset* AnimationData                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCAnimInstance::AllocateNPCCustomAnimationSet(class UNPCCustomAnimationDataAsset* AnimationData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCAnimInstance.AllocateNPCCustomAnimationSet");

	UNPCAnimInstance_AllocateNPCCustomAnimationSet_Params params;
	params.AnimationData = AnimationData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNPCAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(LeftHandObject, AActor);
	READ_PTR_FULL(RightHandObject, AActor);
	READ_PTR_FULL(HeldObjectList, UNPCHeldObjectData);
	READ_PTR_FULL(NPCSkeletalMesh, USkeletalMeshComponent);
	READ_PTR_FULL(NPCCustomAnimationData, UNPCCustomAnimationDataAsset);
	READ_PTR_FULL(NPCCustomAnimationCurrentMontage, UAnimMontage);
	READ_PTR_FULL(NPCCustomAnimationCurrentFacialAdditiveMontage, UAnimMontage);
	READ_PTR_FULL(PlayerCharacter, ACharacter);
}

void UNPCAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(LeftHandObject);
	DELE_PTR_FULL(RightHandObject);
	DELE_PTR_FULL(HeldObjectList);
	DELE_PTR_FULL(NPCSkeletalMesh);
	DELE_PTR_FULL(NPCCustomAnimationData);
	DELE_PTR_FULL(NPCCustomAnimationCurrentMontage);
	DELE_PTR_FULL(NPCCustomAnimationCurrentFacialAdditiveMontage);
	DELE_PTR_FULL(PlayerCharacter);
}

// Function Athena.NPCDialogComponent.SetParameterFromString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 Value                          (Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCDialogComponent::SetParameterFromString(const struct FName& Parameter, const struct FString& Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.SetParameterFromString");

	UNPCDialogComponent_SetParameterFromString_Params params;
	params.Parameter = Parameter;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCDialogComponent.SetIntegerParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCDialogComponent::SetIntegerParameter(const struct FName& Parameter, int Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.SetIntegerParameter");

	UNPCDialogComponent_SetIntegerParameter_Params params;
	params.Parameter = Parameter;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCDialogComponent.SetBooleanParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCDialogComponent::SetBooleanParameter(const struct FName& Parameter, bool Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.SetBooleanParameter");

	UNPCDialogComponent_SetBooleanParameter_Params params;
	params.Parameter = Parameter;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCDialogComponent.OnRep_Disabled
// (Final, Native, Private)
void UNPCDialogComponent::OnRep_Disabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.OnRep_Disabled");

	UNPCDialogComponent_OnRep_Disabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCDialogComponent.OnRep_DialogBlackboard
// (Final, Native, Private)
void UNPCDialogComponent::OnRep_DialogBlackboard()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.OnRep_DialogBlackboard");

	UNPCDialogComponent_OnRep_DialogBlackboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCDialogComponent.GetParameterAsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UNPCDialogComponent::GetParameterAsString(const struct FName& Parameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.GetParameterAsString");

	UNPCDialogComponent_GetParameterAsString_Params params;
	params.Parameter = Parameter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCDialogComponent.GetIntegerParameter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UNPCDialogComponent::GetIntegerParameter(const struct FName& Parameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.GetIntegerParameter");

	UNPCDialogComponent_GetIntegerParameter_Params params;
	params.Parameter = Parameter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCDialogComponent.GetBooleanParameter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   Parameter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCDialogComponent::GetBooleanParameter(const struct FName& Parameter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCDialogComponent.GetBooleanParameter");

	UNPCDialogComponent_GetBooleanParameter_Params params;
	params.Parameter = Parameter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNPCDialogComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Data, UNPCDialogTreeData);
	READ_PTR_FULL(DialogBlackboardSchema, UScriptStruct);
	READ_PTR_FULL(InputID, UClass);
	READ_PTR_FULL(NpcDialoguePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(NpcDialogueWelcome, UWwiseEvent);
	READ_PTR_FULL(NpcDialogueBridge, UWwiseEvent);
	READ_PTR_FULL(NpcDialogueGoodbye, UWwiseEvent);
	READ_PTR_FULL(InteractingController, AController);
}

void UNPCDialogComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Data);
	DELE_PTR_FULL(DialogBlackboardSchema);
	DELE_PTR_FULL(InputID);
	DELE_PTR_FULL(NpcDialoguePool);
	DELE_PTR_FULL(NpcDialogueWelcome);
	DELE_PTR_FULL(NpcDialogueBridge);
	DELE_PTR_FULL(NpcDialogueGoodbye);
	DELE_PTR_FULL(InteractingController);
}

void UNPCDialogHeader::AfterRead()
{
	UObject::AfterRead();

}

void UNPCDialogHeader::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UNPCDialogHeaderSimple::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogHeaderSimple::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UNPCDialogConditionalText::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Expression, UNPCDialogExpression);
}

void UNPCDialogConditionalText::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Expression);
}

void UNPCDialogConditionalTextHeader::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogConditionalTextHeader::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UNPCDialogFormattedHeaderByCondition::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogFormattedHeaderByCondition::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UPetShopDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPetShopDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPhotoModeToggleInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhotoModeToggleInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhrasesRadialComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DefaultPhrasesRadialDataAsset, UPhrasesRadialDataAsset);
	READ_PTR_FULL(DockablePhrasesRadialDataAsset, UPhrasesRadialDataAsset);
	READ_PTR_FULL(WieldedItemPhrasesRadialDataAsset, UPhrasesRadialDataAsset);
}

void UPhrasesRadialComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DefaultPhrasesRadialDataAsset);
	DELE_PTR_FULL(DockablePhrasesRadialDataAsset);
	DELE_PTR_FULL(WieldedItemPhrasesRadialDataAsset);
}

void APickupActorMock::AfterRead()
{
	ACharacter::AfterRead();

}

void APickupActorMock::BeforeDelete()
{
	ACharacter::BeforeDelete();

}

void UPioneerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPioneerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.PirateGeneratorServiceInterface.BakeFromDescriptionAsync
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPirateDescription      Desc                           (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<PirateGenerator_EPirateBakeFlags> Flags                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   Guid                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FScriptDelegate         AsyncResult                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
void UPirateGeneratorServiceInterface::BakeFromDescriptionAsync(const struct FPirateDescription& Desc, TEnumAsByte<PirateGenerator_EPirateBakeFlags> Flags, const struct FGuid& Guid, const struct FScriptDelegate& AsyncResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateGeneratorServiceInterface.BakeFromDescriptionAsync");

	UPirateGeneratorServiceInterface_BakeFromDescriptionAsync_Params params;
	params.Desc = Desc;
	params.Flags = Flags;
	params.Guid = Guid;
	params.AsyncResult = AsyncResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPirateGeneratorServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPirateGeneratorServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void APirateGeneratorService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RandomOutfitDataAsset, UWardrobeOutfitDataAsset);
}

void APirateGeneratorService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RandomOutfitDataAsset);
}

// Function Athena.PlayerWalletComponent.ServerRequestBalance
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
void UPlayerWalletComponent::ServerRequestBalance()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerWalletComponent.ServerRequestBalance");

	UPlayerWalletComponent_ServerRequestBalance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerWalletComponent.OnRep_BalanceUpdated
// (Final, Native, Private)
void UPlayerWalletComponent::OnRep_BalanceUpdated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerWalletComponent.OnRep_BalanceUpdated");

	UPlayerWalletComponent_OnRep_BalanceUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerWalletComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerWalletComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlayerWorldLocationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerWorldLocationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlayNpcAnimationResource::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DialogueData, USceneDialogueData);
	READ_PTR_FULL(LocalMusicZone, UClass);
}

void UPlayNpcAnimationResource::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DialogueData);
	DELE_PTR_FULL(LocalMusicZone);
}

void UPlayNpcAnimationResourceStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UPlayNpcAnimationResourceStepDesc);
	READ_PTR_FULL(NPCDialogComponent, UNPCDialogComponent);
	READ_PTR_FULL(CutSceneActor, ACutSceneActor);
}

void UPlayNpcAnimationResourceStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
	DELE_PTR_FULL(NPCDialogComponent);
	DELE_PTR_FULL(CutSceneActor);
}

void UPlayNpcAnimationResourceStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(PlayNpcAnimationResource, UPlayNpcAnimationResource);
}

void UPlayNpcAnimationResourceStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(PlayNpcAnimationResource);
}

void UPlinthInteractableComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
}

void UPlinthInteractableComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(ActionRulesComponent);
}

// Function Athena.ProjectileWeapon.SetRadialBlurOff
// (Final, Native, Public, BlueprintCallable)
void AProjectileWeapon::SetRadialBlurOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.SetRadialBlurOff");

	AProjectileWeapon_SetRadialBlurOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.SetAmmoUIVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InVisibility                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AProjectileWeapon::SetAmmoUIVisibility(bool InVisibility)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.SetAmmoUIVisibility");

	AProjectileWeapon_SetAmmoUIVisibility_Params params;
	params.InVisibility = InVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.ScopeTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AProjectileWeapon::ScopeTick(float DeltaSeconds)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.ScopeTick");

	AProjectileWeapon_ScopeTick_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.ScopeOn
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::ScopeOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.ScopeOn");

	AProjectileWeapon_ScopeOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.ScopeOffImmediate
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::ScopeOffImmediate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.ScopeOffImmediate");

	AProjectileWeapon_ScopeOffImmediate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.ScopeOff
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::ScopeOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.ScopeOff");

	AProjectileWeapon_ScopeOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.ResetAimingEffect
// (Final, Native, Public, BlueprintCallable)
void AProjectileWeapon::ResetAimingEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.ResetAimingEffect");

	AProjectileWeapon_ResetAimingEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.RadialBlurOn
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::RadialBlurOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.RadialBlurOn");

	AProjectileWeapon_RadialBlurOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.RadialBlurOff
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::RadialBlurOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.RadialBlurOff");

	AProjectileWeapon_RadialBlurOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.OnWeaponFired
// (Native, Event, Protected, BlueprintEvent)
void AProjectileWeapon::OnWeaponFired()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.OnWeaponFired");

	AProjectileWeapon_OnWeaponFired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.OnRep_State
// (Final, Native, Protected)
void AProjectileWeapon::OnRep_State()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.OnRep_State");

	AProjectileWeapon_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.OnRep_AmmoLeft
// (Final, Native, Protected)
// Parameters:
// int                            PreviousAmmo                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AProjectileWeapon::OnRep_AmmoLeft(int PreviousAmmo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.OnRep_AmmoLeft");

	AProjectileWeapon_OnRep_AmmoLeft_Params params;
	params.PreviousAmmo = PreviousAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.Multicast_ReceiveFire
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FFireBroadcast          Broadcast                      (Parm, ContainsInstancedReference)
void AProjectileWeapon::Multicast_ReceiveFire(const struct FFireBroadcast& Broadcast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.Multicast_ReceiveFire");

	AProjectileWeapon_Multicast_ReceiveFire_Params params;
	params.Broadcast = Broadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.Multicast_ReceiveDryFire
// (Net, Native, Event, NetMulticast, Protected)
void AProjectileWeapon::Multicast_ReceiveDryFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.Multicast_ReceiveDryFire");

	AProjectileWeapon_Multicast_ReceiveDryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.GlintOn
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::GlintOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.GlintOn");

	AProjectileWeapon_GlintOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.GlintOff
// (Event, Protected, BlueprintEvent)
void AProjectileWeapon::GlintOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.GlintOff");

	AProjectileWeapon_GlintOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.GetNumShotsLeftInClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AProjectileWeapon::GetNumShotsLeftInClip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.GetNumShotsLeftInClip");

	AProjectileWeapon_GetNumShotsLeftInClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ProjectileWeapon.GetLastAttackId
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid AProjectileWeapon::GetLastAttackId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.GetLastAttackId");

	AProjectileWeapon_GetLastAttackId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ProjectileWeapon.Client_RequestDenied
// (Net, NetReliable, Native, Event, Protected, NetClient)
void AProjectileWeapon::Client_RequestDenied()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.Client_RequestDenied");

	AProjectileWeapon_Client_RequestDenied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.Client_CorrectPredictedMiss
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// TArray<struct FHitResult>      CorrectedServerHits            (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
void AProjectileWeapon::Client_CorrectPredictedMiss(TArray<struct FHitResult> CorrectedServerHits)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.Client_CorrectPredictedMiss");

	AProjectileWeapon_Client_CorrectPredictedMiss_Params params;
	params.CorrectedServerHits = CorrectedServerHits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ProjectileWeapon.CanFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AProjectileWeapon::CanFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.CanFire");

	AProjectileWeapon_CanFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ProjectileWeapon.AddBulletsToClip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            NumBullets                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           DoClipSizeCheck                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AProjectileWeapon::AddBulletsToClip(int NumBullets, bool DoClipSizeCheck)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeapon.AddBulletsToClip");

	AProjectileWeapon_AddBulletsToClip_Params params;
	params.NumBullets = NumBullets;
	params.DoClipSizeCheck = DoClipSizeCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileWeapon::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(AimSensitivityComponent, UAimSensitivityComponent);
}

void AProjectileWeapon::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(AimSensitivityComponent);
}

// Function Athena.TestProjectileWeapon.TestGetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EProjectileWeaponState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EProjectileWeaponState> ATestProjectileWeapon::TestGetState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestProjectileWeapon.TestGetState");

	ATestProjectileWeapon_TestGetState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TestProjectileWeapon.SpoofFireRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFireRequest            Request                        (Parm, ContainsInstancedReference)
void ATestProjectileWeapon::SpoofFireRequest(const struct FFireRequest& Request)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestProjectileWeapon.SpoofFireRequest");

	ATestProjectileWeapon_SpoofFireRequest_Params params;
	params.Request = Request;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestProjectileWeapon.RegisterAndWield
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  TargetOwner                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATestProjectileWeapon::RegisterAndWield(class AActor* TargetOwner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestProjectileWeapon.RegisterAndWield");

	ATestProjectileWeapon_RegisterAndWield_Params params;
	params.TargetOwner = TargetOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestProjectileWeapon.GenerateAndFireProjectiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FHitResult>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
TArray<struct FHitResult> ATestProjectileWeapon::GenerateAndFireProjectiles()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestProjectileWeapon.GenerateAndFireProjectiles");

	ATestProjectileWeapon_GenerateAndFireProjectiles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TestProjectileWeapon.FireInstantly
// (Final, Native, Public, BlueprintCallable)
void ATestProjectileWeapon::FireInstantly()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestProjectileWeapon.FireInstantly");

	ATestProjectileWeapon_FireInstantly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATestProjectileWeapon::AfterRead()
{
	AProjectileWeapon::AfterRead();

}

void ATestProjectileWeapon::BeforeDelete()
{
	AProjectileWeapon::BeforeDelete();

}

void UProjectileWeaponFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UProjectileWeaponFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void URemoveCriticalActorStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void URemoveCriticalActorStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void URemoveFogBankAvoidanceAreaStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, URemoveFogBankAvoidanceAreaStepDesc);
}

void URemoveFogBankAvoidanceAreaStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void URemoveMechanismTriggerStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void URemoveMechanismTriggerStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.RendererSettingsFunctionLibrary.UpdateRendererSettings
// (Final, Native, Static, Public, BlueprintCallable)
void URendererSettingsFunctionLibrary::STATIC_UpdateRendererSettings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RendererSettingsFunctionLibrary.UpdateRendererSettings");

	URendererSettingsFunctionLibrary_UpdateRendererSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URendererSettingsFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void URendererSettingsFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void URentalShip::AfterRead()
{
	UShipType::AfterRead();

}

void URentalShip::BeforeDelete()
{
	UShipType::BeforeDelete();

}

// Function Athena.RepairObjectActionStateId.PushCharacterIntoRepairObjectActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FNetSubObjectPtr        Repairable                     (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void URepairObjectActionStateId::STATIC_PushCharacterIntoRepairObjectActionState(const struct FNetSubObjectPtr& Repairable, class AActor* Character, class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RepairObjectActionStateId.PushCharacterIntoRepairObjectActionState");

	URepairObjectActionStateId_PushCharacterIntoRepairObjectActionState_Params params;
	params.Repairable = Repairable;
	params.Character = Character;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RepairObjectActionStateId.PopCharacterOutOfRepairObjectActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void URepairObjectActionStateId::STATIC_PopCharacterOutOfRepairObjectActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RepairObjectActionStateId.PopCharacterOutOfRepairObjectActionState");

	URepairObjectActionStateId_PopCharacterOutOfRepairObjectActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URepairObjectActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void URepairObjectActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.ReplenishableComponent.TestReplenish
// (Final, Native, Public, BlueprintCallable)
void UReplenishableComponent::TestReplenish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.TestReplenish");

	UReplenishableComponent_TestReplenish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.SetShouldRefresh
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           InShouldRefresh                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UReplenishableComponent::SetShouldRefresh(bool InShouldRefresh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.SetShouldRefresh");

	UReplenishableComponent_SetShouldRefresh_Params params;
	params.InShouldRefresh = InShouldRefresh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.ReplenishFromDebugSpawner
// (Native, Public, BlueprintCallable)
void UReplenishableComponent::ReplenishFromDebugSpawner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.ReplenishFromDebugSpawner");

	UReplenishableComponent_ReplenishFromDebugSpawner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.Replenish
// (Native, Public, BlueprintCallable)
void UReplenishableComponent::Replenish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.Replenish");

	UReplenishableComponent_Replenish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.RefreshFromSpawner
// (Native, Public, BlueprintCallable)
void UReplenishableComponent::RefreshFromSpawner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.RefreshFromSpawner");

	UReplenishableComponent_RefreshFromSpawner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.IsAtMaxCapacity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UReplenishableComponent::IsAtMaxCapacity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.IsAtMaxCapacity");

	UReplenishableComponent_IsAtMaxCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ReplenishableComponent.GetShouldRefresh
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UReplenishableComponent::GetShouldRefresh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.GetShouldRefresh");

	UReplenishableComponent_GetShouldRefresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ReplenishableComponent.FillWithDefaultDesc
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FStorageContainerNode> Nodes                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UReplenishableComponent::FillWithDefaultDesc(TArray<struct FStorageContainerNode> Nodes)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.FillWithDefaultDesc");

	UReplenishableComponent_FillWithDefaultDesc_Params params;
	params.Nodes = Nodes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.Deplete
// (Native, Public, BlueprintCallable)
void UReplenishableComponent::Deplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.Deplete");

	UReplenishableComponent_Deplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReplenishableComponent.CanBeReplenished
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UReplenishableComponent::CanBeReplenished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.CanBeReplenished");

	UReplenishableComponent_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ReplenishableComponent.AddDefaultStockLevel
// (Native, Public, BlueprintCallable)
void UReplenishableComponent::AddDefaultStockLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReplenishableComponent.AddDefaultStockLevel");

	UReplenishableComponent_AddDefaultStockLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UReplenishableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ContentTypeSelector, UStorageContainerContentTypeSelector);
	READ_PTR_FULL(Aggregator, UObject);
}

void UReplenishableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ContentTypeSelector);
	DELE_PTR_FULL(Aggregator);
}

void UResolveActorStringReferenceStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UResolveActorStringReferenceStepDesc);
}

void UResolveActorStringReferenceStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.SirenStatuesSelector.GenerateSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Outer                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 Context                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USelectionOfSirenStatues* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USelectionOfSirenStatues* USirenStatuesSelector::GenerateSelection(class UObject* Outer, class UObject* Context)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenStatuesSelector.GenerateSelection");

	USirenStatuesSelector_GenerateSelection_Params params;
	params.Outer = Outer;
	params.Context = Context;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USirenStatuesSelector::AfterRead()
{
	UObject::AfterRead();

}

void USirenStatuesSelector::BeforeDelete()
{
	UObject::BeforeDelete();

}

void USirenStatuesSelector_BasedOnShipSize::AfterRead()
{
	USirenStatuesSelector::AfterRead();

}

void USirenStatuesSelector_BasedOnShipSize::BeforeDelete()
{
	USirenStatuesSelector::BeforeDelete();

}

void UItemActionComponentAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ItemActionAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ActionStartEvent, UWwiseEvent);
	READ_PTR_FULL(ActionStopEvent, UWwiseEvent);
}

void UItemActionComponentAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ItemActionAudioPool);
	DELE_PTR_FULL(ActionStartEvent);
	DELE_PTR_FULL(ActionStopEvent);
}

void ULaunchableShotComponentAudioParams::AfterRead()
{
	UItemActionComponentAudioParams::AfterRead();

	READ_PTR_FULL(FireProjectileEvent, UWwiseEvent);
}

void ULaunchableShotComponentAudioParams::BeforeDelete()
{
	UItemActionComponentAudioParams::BeforeDelete();

	DELE_PTR_FULL(FireProjectileEvent);
}

void USirenTridentShotComponentAudioParams::AfterRead()
{
	ULaunchableShotComponentAudioParams::AfterRead();

	READ_PTR_FULL(ChangeProjectileTierEvent, UWwiseEvent);
}

void USirenTridentShotComponentAudioParams::BeforeDelete()
{
	ULaunchableShotComponentAudioParams::BeforeDelete();

	DELE_PTR_FULL(ChangeProjectileTierEvent);
}

void ASkellyFortService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SkellyFortListDataAsset, USkellyFortListDataAsset);
	READ_PTR_FULL(FortAIToggler, USkeletonFortAIToggler);
}

void ASkellyFortService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SkellyFortListDataAsset);
	DELE_PTR_FULL(FortAIToggler);
}

void USleepStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USleepStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void USnakeVenomStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USnakeVenomStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void USoberStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USoberStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void USoloShip::AfterRead()
{
	UShipType::AfterRead();

}

void USoloShip::BeforeDelete()
{
	UShipType::BeforeDelete();

}

void USpawnCollectableQuestObjectStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, USpawnCollectableQuestObjectStepDesc);
}

void USpawnCollectableQuestObjectStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void USpawnCollectableQuestObjectStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(CollectableQuestBookPageToSpawn, UClass);
}

void USpawnCollectableQuestObjectStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(CollectableQuestBookPageToSpawn);
}

void USpawnCollectableQuestObjectStepFromLocationDesc::AfterRead()
{
	USpawnCollectableQuestObjectStepDesc::AfterRead();

}

void USpawnCollectableQuestObjectStepFromLocationDesc::BeforeDelete()
{
	USpawnCollectableQuestObjectStepDesc::BeforeDelete();

}

void USpawnCollectableQuestObjectStepFromActorDesc::AfterRead()
{
	USpawnCollectableQuestObjectStepDesc::AfterRead();

}

void USpawnCollectableQuestObjectStepFromActorDesc::BeforeDelete()
{
	USpawnCollectableQuestObjectStepDesc::BeforeDelete();

}

void USpawnItemStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USpawnItemStepDesc);
}

void USpawnItemStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USpawnItemStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(Item, UClass);
}

void USpawnItemStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(Item);
}

void USpawnLocationKeywordPriorityListAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void USpawnLocationKeywordPriorityListAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.SpawnProgressTriggerVolume.Enable
// (Final, Native, Public, BlueprintCallable)
void ASpawnProgressTriggerVolume::Enable()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpawnProgressTriggerVolume.Enable");

	ASpawnProgressTriggerVolume_Enable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SpawnProgressTriggerVolume.Disable
// (Final, Native, Public, BlueprintCallable)
void ASpawnProgressTriggerVolume::Disable()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpawnProgressTriggerVolume.Disable");

	ASpawnProgressTriggerVolume_Disable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASpawnProgressTriggerVolume::AfterRead()
{
	APhysicsVolume::AfterRead();

}

void ASpawnProgressTriggerVolume::BeforeDelete()
{
	APhysicsVolume::BeforeDelete();

}

void ASpeakingTrumpet::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
}

void ASpeakingTrumpet::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
}

void USpitStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USpitStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void USplineWithEmitterComponent::AfterRead()
{
	USplineComponent::AfterRead();

	READ_PTR_FULL(SplineAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(LoopingSoundPlayEvent, UWwiseEvent);
	READ_PTR_FULL(LoopingSoundStopEvent, UWwiseEvent);
	READ_PTR_FULL(WwiseEmitterComponent, UWwiseEmitterComponent);
}

void USplineWithEmitterComponent::BeforeDelete()
{
	USplineComponent::BeforeDelete();

	DELE_PTR_FULL(SplineAudioPool);
	DELE_PTR_FULL(LoopingSoundPlayEvent);
	DELE_PTR_FULL(LoopingSoundStopEvent);
	DELE_PTR_FULL(WwiseEmitterComponent);
}

void USplutterStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USplutterStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.Spyglass.SpyGlassRaisedFirstPerson
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           IsRaised                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ASpyglass::SpyGlassRaisedFirstPerson(bool IsRaised)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Spyglass.SpyGlassRaisedFirstPerson");

	ASpyglass_SpyGlassRaisedFirstPerson_Params params;
	params.IsRaised = IsRaised;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Spyglass.SetGlintOff
// (Native, Public, BlueprintCallable)
void ASpyglass::SetGlintOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Spyglass.SetGlintOff");

	ASpyglass_SetGlintOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Spyglass.ResetSpyglassEffects
// (Final, Native, Public, BlueprintCallable)
void ASpyglass::ResetSpyglassEffects()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Spyglass.ResetSpyglassEffects");

	ASpyglass_ResetSpyglassEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASpyglass::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
	READ_PTR_FULL(AimSensitivityComponent, UAimSensitivityComponent);
	READ_PTR_FULL(PostProcessComponent, UPostProcessComponent);
	READ_PTR_FULL(BlurCurve, UCurveFloat);
	READ_PTR_FULL(DynamicMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(Glint, UStaticMeshComponent);
	READ_PTR_FULL(MaterialParent, UMaterial);
	READ_PTR_FULL(LensNormal, UTexture2D);
	READ_PTR_FULL(LensMask, UTexture2D);
}

void ASpyglass::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
	DELE_PTR_FULL(AimSensitivityComponent);
	DELE_PTR_FULL(PostProcessComponent);
	DELE_PTR_FULL(BlurCurve);
	DELE_PTR_FULL(DynamicMaterial);
	DELE_PTR_FULL(Glint);
	DELE_PTR_FULL(MaterialParent);
	DELE_PTR_FULL(LensNormal);
	DELE_PTR_FULL(LensMask);
}

void AEnchantedSpyglass::AfterRead()
{
	ASpyglass::AfterRead();

	READ_PTR_FULL(EnchantedInventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(ConstellationVisibilityEventActor, AActor);
}

void AEnchantedSpyglass::BeforeDelete()
{
	ASpyglass::BeforeDelete();

	DELE_PTR_FULL(EnchantedInventoryItem);
	DELE_PTR_FULL(ConstellationVisibilityEventActor);
}

void ATestableEnchantedSpyglass::AfterRead()
{
	AEnchantedSpyglass::AfterRead();

}

void ATestableEnchantedSpyglass::BeforeDelete()
{
	AEnchantedSpyglass::BeforeDelete();

}

void USquirtStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USquirtStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UStatProgressStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UStatProgressStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.StatueThreatBase.Multicast_WasDefeated
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InDirectInstigator             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AStatueThreatBase::Multicast_WasDefeated(class AActor* InInstigator, class AActor* InDirectInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StatueThreatBase.Multicast_WasDefeated");

	AStatueThreatBase_Multicast_WasDefeated_Params params;
	params.InInstigator = InInstigator;
	params.InDirectInstigator = InDirectInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AStatueThreatBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(HealthComponent, UHealthComponent);
	READ_PTR_FULL(RadialDamageComponent, URadialDamagerComponent);
	READ_PTR_FULL(AudioComponent, USunkenCurseArtefactAudioComponent);
	READ_PTR_FULL(VFXComponent, USunkenCurseArtefactVfxComponent);
	READ_PTR_FULL(DamageMaterialComponent, USunkenCurseArtefactDynamicMaterialComponent);
	READ_PTR_FULL(DamageableComponent, UActorDamageableComponent);
}

void AStatueThreatBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(HealthComponent);
	DELE_PTR_FULL(RadialDamageComponent);
	DELE_PTR_FULL(AudioComponent);
	DELE_PTR_FULL(VFXComponent);
	DELE_PTR_FULL(DamageMaterialComponent);
	DELE_PTR_FULL(DamageableComponent);
}

void ASirenStatue::AfterRead()
{
	AStatueThreatBase::AfterRead();

}

void ASirenStatue::BeforeDelete()
{
	AStatueThreatBase::BeforeDelete();

}

void ASunkenCurseArtefact::AfterRead()
{
	AStatueThreatBase::AfterRead();

	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
}

void ASunkenCurseArtefact::BeforeDelete()
{
	AStatueThreatBase::BeforeDelete();

	DELE_PTR_FULL(StaticMeshComponent);
}

void UStatusResponseActivateAudioState::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseActivateAudioState::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseAINamedControllerParamHealthChange::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseAINamedControllerParamHealthChange::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseAIShipClampMaxTurnAngle::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseAIShipClampMaxTurnAngle::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseAIShipSetMaxSpeedMultiplier::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseAIShipSetMaxSpeedMultiplier::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseApplyAlcohol::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseApplyAlcohol::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseApplyStatusPlayerCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseApplyStatusPlayerCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseApplyStatusShipCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseApplyStatusShipCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseBallast::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseBallast::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseBoogieCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseBoogieCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseBurpingGasChange::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseBurpingGasChange::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseCameraShake::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(CameraShake, UClass);
}

void UStatusResponseCameraShake::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(CameraShake);
}

void UStatusResponseChangeCannonRotation::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseChangeCannonRotation::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseChangeSailHeight::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseChangeSailHeight::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseDrunkCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseDrunkCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseEmote::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseEmote::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseForceFeedback::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(ForceFeedbackEffect, UForceFeedbackEffect);
}

void UStatusResponseForceFeedback::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(ForceFeedbackEffect);
}

void UStatusResponseHealthChange::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseHealthChange::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseHealthChangeOverTime::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseHealthChangeOverTime::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseLimping::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseLimping::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseLimpingCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseLimpingCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseOCReceiveBuffAudio::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseOCReceiveBuffAudio::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponsePlayAudioLoopOnAllClients::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(StartLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopLoopEvent, UWwiseEvent);
}

void UStatusResponsePlayAudioLoopOnAllClients::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(StartLoopEvent);
	DELE_PTR_FULL(StopLoopEvent);
}

void UStatusResponsePlayAudioLoopOnLocalClient::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(StartLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopLoopEvent, UWwiseEvent);
}

void UStatusResponsePlayAudioLoopOnLocalClient::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(StartLoopEvent);
	DELE_PTR_FULL(StopLoopEvent);
}

void UStatusResponsePlayAudioOneShotOnLocalClient::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(OneShotAudioEvent, UWwiseEvent);
}

void UStatusResponsePlayAudioOneShotOnLocalClient::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(OneShotAudioEvent);
}

void UStatusResponsePostProcess::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(MaterialInstance, UMaterialInterface);
	READ_PTR_FULL(PostProcessComponentClass, UClass);
	READ_PTR_FULL(PostProcessComponent, UPostProcessComponent);
}

void UStatusResponsePostProcess::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(MaterialInstance);
	DELE_PTR_FULL(PostProcessComponentClass);
	DELE_PTR_FULL(PostProcessComponent);
}

void UStatusResponseScreenSpaceParticles::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(ParticleSystem, UObject);
}

void UStatusResponseScreenSpaceParticles::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(ParticleSystem);
}

void UStatusResponseScreenSpaceVFX::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseScreenSpaceVFX::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseSendBrokenLegEvent::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseSendBrokenLegEvent::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseSetAICharacterMoveSpeedModifier::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseSetAICharacterMoveSpeedModifier::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UTaleQuestImportStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(Asset, UTaleQuestDescAsset);
}

void UTaleQuestImportStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(Asset);
}

void UTaleQuestLanternService::AfterRead()
{
	UTaleQuestToolService::AfterRead();

}

void UTaleQuestLanternService::BeforeDelete()
{
	UTaleQuestToolService::BeforeDelete();

}

void UTaleQuestLanternServiceDesc::AfterRead()
{
	UTaleQuestToolServiceDesc::AfterRead();

	READ_PTR_FULL(LanternDesc, UClass);
}

void UTaleQuestLanternServiceDesc::BeforeDelete()
{
	UTaleQuestToolServiceDesc::BeforeDelete();

	DELE_PTR_FULL(LanternDesc);
}

void UTaleQuestLoopStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestLoopStepDesc);
	READ_PTR_FULL(CurrentStep, UTaleQuestStep);
}

void UTaleQuestLoopStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(CurrentStep);
}

// Function Athena.TextureFeedbackComponent.SetInputTexture1
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                InRenderTargetTexture          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTextureFeedbackComponent::SetInputTexture1(class UTexture* InRenderTargetTexture)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TextureFeedbackComponent.SetInputTexture1");

	UTextureFeedbackComponent_SetInputTexture1_Params params;
	params.InRenderTargetTexture = InRenderTargetTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TextureFeedbackComponent.SetEffectActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsActive                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTextureFeedbackComponent::SetEffectActive(bool IsActive)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TextureFeedbackComponent.SetEffectActive");

	UTextureFeedbackComponent_SetEffectActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TextureFeedbackComponent.GetTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* UTextureFeedbackComponent::GetTexture()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TextureFeedbackComponent.GetTexture");

	UTextureFeedbackComponent_GetTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TextureFeedbackComponent.ClearTexture
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            ClearColor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTextureFeedbackComponent::ClearTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TextureFeedbackComponent.ClearTexture");

	UTextureFeedbackComponent_ClearTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTextureFeedbackComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(InputTexture1, UTexture);
	READ_PTR_FULL(InputTexture2, UTexture2D);
	READ_PTR_FULL(FeedbackTexture, UTextureRenderTarget2D);
	READ_PTR_FULL(FeedbackTexturePingPong, UTextureRenderTarget2D);
}

void UTextureFeedbackComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(InputTexture1);
	DELE_PTR_FULL(InputTexture2);
	DELE_PTR_FULL(FeedbackTexture);
	DELE_PTR_FULL(FeedbackTexturePingPong);
}

void UTinySharkDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UTinySharkDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.TinySharkDebugFunctionLibrary.OverrideTinySharkExperienceRepositionTimerParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATinySharkExperience*    TinySharkExperience            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTinySharkDebugFunctionLibrary::STATIC_OverrideTinySharkExperienceRepositionTimerParam(class ATinySharkExperience* TinySharkExperience, float InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TinySharkDebugFunctionLibrary.OverrideTinySharkExperienceRepositionTimerParam");

	UTinySharkDebugFunctionLibrary_OverrideTinySharkExperienceRepositionTimerParam_Params params;
	params.TinySharkExperience = TinySharkExperience;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTinySharkDebugFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UTinySharkDebugFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UToggleCapstanStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UToggleCapstanStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UToggleItemNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UToggleItemNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.TrackedActorService.UnregisterActor
// (Final, Native, Private)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTrackedActorService::UnregisterActor(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TrackedActorService.UnregisterActor");

	UTrackedActorService_UnregisterActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTrackedActorService::AfterRead()
{
	UObject::AfterRead();

}

void UTrackedActorService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void ALargeSkeletalMeshWieldableItem::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

}

void ALargeSkeletalMeshWieldableItem::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

}

void ATreasureChest::AfterRead()
{
	ALargeSkeletalMeshWieldableItem::AfterRead();

}

void ATreasureChest::BeforeDelete()
{
	ALargeSkeletalMeshWieldableItem::BeforeDelete();

}

void ATreasureChestStatic::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

}

void ATreasureChestStatic::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

}

void UTreasureMapCollectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTreasureMapCollectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.XMarksTheSpotMap.SetMapData
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class UTexture>      InMapTextureAsset              (Parm, UObjectWrapper, HasGetValueTypeHash)
// TAssetPtr<class UTexture>      InMapInventoryTextureAsset     (Parm, UObjectWrapper, HasGetValueTypeHash)
// TArray<struct FXMarksTheSpotMapMark> InMarks                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          InRotation                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AXMarksTheSpotMap::SetMapData(TAssetPtr<class UTexture> InMapTextureAsset, TAssetPtr<class UTexture> InMapInventoryTextureAsset, TArray<struct FXMarksTheSpotMapMark> InMarks, float InRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.SetMapData");

	AXMarksTheSpotMap_SetMapData_Params params;
	params.InMapTextureAsset = InMapTextureAsset;
	params.InMapInventoryTextureAsset = InMapInventoryTextureAsset;
	params.InMarks = InMarks;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.XMarksTheSpotMap.OnRep_Marks
// (Final, Native, Private)
void AXMarksTheSpotMap::OnRep_Marks()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.OnRep_Marks");

	AXMarksTheSpotMap_OnRep_Marks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.XMarksTheSpotMap.OnRep_MapTexturePath
// (Final, Native, Private)
void AXMarksTheSpotMap::OnRep_MapTexturePath()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.OnRep_MapTexturePath");

	AXMarksTheSpotMap_OnRep_MapTexturePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.XMarksTheSpotMap.OnRep_MapInventoryTexturePath
// (Final, Native, Private)
void AXMarksTheSpotMap::OnRep_MapInventoryTexturePath()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.OnRep_MapInventoryTexturePath");

	AXMarksTheSpotMap_OnRep_MapInventoryTexturePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.XMarksTheSpotMap.OnCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AXMarksTheSpotMap::OnCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.OnCanvasUpdate");

	AXMarksTheSpotMap_OnCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.XMarksTheSpotMap.IsMapTextureLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AXMarksTheSpotMap::IsMapTextureLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.IsMapTextureLoaded");

	AXMarksTheSpotMap_IsMapTextureLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetVisibleDynamicMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UMaterialInstanceDynamic* AXMarksTheSpotMap::GetVisibleDynamicMaterial()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.GetVisibleDynamicMaterial");

	AXMarksTheSpotMap_GetVisibleDynamicMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCanvasRenderTarget2D*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UCanvasRenderTarget2D* AXMarksTheSpotMap::GetRenderTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.GetRenderTarget");

	AXMarksTheSpotMap_GetRenderTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetMarks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FXMarksTheSpotMapMark> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FXMarksTheSpotMapMark> AXMarksTheSpotMap::GetMarks()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.GetMarks");

	AXMarksTheSpotMap_GetMarks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetMapTextureAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TAssetPtr<class UTexture>      ReturnValue                    (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash)
TAssetPtr<class UTexture> AXMarksTheSpotMap::GetMapTextureAsset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.XMarksTheSpotMap.GetMapTextureAsset");

	AXMarksTheSpotMap_GetMapTextureAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AXMarksTheSpotMap::AfterRead()
{
	ATreasureMap::AfterRead();

	READ_PTR_FULL(MarkTexture, UTexture);
	READ_PTR_FULL(AltMarkTexture, UTexture);
}

void AXMarksTheSpotMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

	DELE_PTR_FULL(MarkTexture);
	DELE_PTR_FULL(AltMarkTexture);
}

void UTreasureMapCollectionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(XMarksTheSpotMapType, UClass);
	READ_PTR_FULL(RiddleMapType, UClass);
	READ_PTR_FULL(BountyMapType, UClass);
	READ_PTR_FULL(MerchantMapType, UClass);
	READ_PTR_FULL(CargoRunMapType, UClass);
	READ_PTR_FULL(ContestMapType, UClass);
	READ_PTR_FULL(TornMapType, UClass);
	READ_PTR_FULL(LocationMapType, UClass);
}

void UTreasureMapCollectionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(XMarksTheSpotMapType);
	DELE_PTR_FULL(RiddleMapType);
	DELE_PTR_FULL(BountyMapType);
	DELE_PTR_FULL(MerchantMapType);
	DELE_PTR_FULL(CargoRunMapType);
	DELE_PTR_FULL(ContestMapType);
	DELE_PTR_FULL(TornMapType);
	DELE_PTR_FULL(LocationMapType);
}

// Function Athena.TreasureRoom.SpawnDroppedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   InWho                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InWhat                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* ATreasureRoom::SpawnDroppedItem(class APawn* InWho, class UClass* InWhat)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.SpawnDroppedItem");

	ATreasureRoom_SpawnDroppedItem_Params params;
	params.InWho = InWho;
	params.InWhat = InWhat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TreasureRoom.SignalFail
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ATreasureRoom::SignalFail()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.SignalFail");

	ATreasureRoom_SignalFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.SignalComplete
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ATreasureRoom::SignalComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.SignalComplete");

	ATreasureRoom_SignalComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.RemoveLock
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ATreasureRoom::RemoveLock()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.RemoveLock");

	ATreasureRoom_RemoveLock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.PushAISpawner
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UAISpawner*              AISpawner                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATreasureRoom::PushAISpawner(class UAISpawner* AISpawner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.PushAISpawner");

	ATreasureRoom_PushAISpawner_Params params;
	params.AISpawner = AISpawner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.OnSpawn
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATreasureRoom::OnSpawn(class APawn* Pawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.OnSpawn");

	ATreasureRoom_OnSpawn_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.OnSetState
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<Athena_ETreasureRoomState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETreasureRoomState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATreasureRoom::OnSetState(TEnumAsByte<Athena_ETreasureRoomState> OldState, TEnumAsByte<Athena_ETreasureRoomState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.OnSetState");

	ATreasureRoom_OnSetState_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.OnDespawn
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ECharacterDeathType> DeathType                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATreasureRoom::OnDespawn(class APawn* Pawn, TEnumAsByte<Athena_ECharacterDeathType> DeathType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.OnDespawn");

	ATreasureRoom_OnDespawn_Params params;
	params.Pawn = Pawn;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.KillGoldHoarder
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ATreasureRoom::KillGoldHoarder()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.KillGoldHoarder");

	ATreasureRoom_KillGoldHoarder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TreasureRoom.GetNumPlayersWithCrewMembersInRoom
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ATreasureRoom::GetNumPlayersWithCrewMembersInRoom()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.GetNumPlayersWithCrewMembersInRoom");

	ATreasureRoom_GetNumPlayersWithCrewMembersInRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TreasureRoom.AddLock
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ATreasureRoom::AddLock()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureRoom.AddLock");

	ATreasureRoom_AddLock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATreasureRoom::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RoomAreaComponent, UBoxComponent);
	READ_PTR_FULL(GoldHoarderSpawner, UAISpawner);
	READ_PTR_FULL(SourceLocationActor, AActor);
	READ_PTR_FULL(AIDioramaDesc, UAIDioramaDesc);
	READ_PTR_FULL(MusicZoneComponent, UAISpawnerMusicZoneComponent);
	READ_PTR_FULL(ProximityPlayerTracker, UAIProximityPlayerTracker);
	READ_PTR_FULL(ActiveSpawner, UAISpawner);
	READ_PTR_FULL(AIDioramaController, UAIDioramaController);
}

void ATreasureRoom::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RoomAreaComponent);
	DELE_PTR_FULL(GoldHoarderSpawner);
	DELE_PTR_FULL(SourceLocationActor);
	DELE_PTR_FULL(AIDioramaDesc);
	DELE_PTR_FULL(MusicZoneComponent);
	DELE_PTR_FULL(ProximityPlayerTracker);
	DELE_PTR_FULL(ActiveSpawner);
	DELE_PTR_FULL(AIDioramaController);
}

void UWaitOnCollectableQuestObjectStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitOnCollectableQuestObjectStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void AWallClock::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ClockMesh, UPoseableMeshComponent);
	READ_PTR_FULL(ClockMeshDynamicMaterialInstance, UMaterialInstanceDynamic);
}

void AWallClock::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ClockMesh);
	DELE_PTR_FULL(ClockMeshDynamicMaterialInstance);
}

// Function Athena.WaterBarrel.SetLiquidLevel
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                          Level                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWaterBarrel::SetLiquidLevel(float Level)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.SetLiquidLevel");

	AWaterBarrel_SetLiquidLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterBarrel.Server_SetPumpingWater
// (RequiredAPI, Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           InIsPumpingWater               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AWaterBarrel::Server_SetPumpingWater(bool InIsPumpingWater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.Server_SetPumpingWater");

	AWaterBarrel_Server_SetPumpingWater_Params params;
	params.InIsPumpingWater = InIsPumpingWater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterBarrel.OnRep_IsPumpingWater
// (Final, Native, Public)
void AWaterBarrel::OnRep_IsPumpingWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.OnRep_IsPumpingWater");

	AWaterBarrel_OnRep_IsPumpingWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterBarrel.OnRep_CurrentCapacity
// (Final, Native, Public)
void AWaterBarrel::OnRep_CurrentCapacity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.OnRep_CurrentCapacity");

	AWaterBarrel_OnRep_CurrentCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterBarrel.GetWantedLiquidLevel
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AWaterBarrel::GetWantedLiquidLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.GetWantedLiquidLevel");

	AWaterBarrel_GetWantedLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterBarrel.GetMaxLiquidCollectionAmount
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AWaterBarrel::GetMaxLiquidCollectionAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.GetMaxLiquidCollectionAmount");

	AWaterBarrel_GetMaxLiquidCollectionAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterBarrel.GetLiquidLevel
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AWaterBarrel::GetLiquidLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.GetLiquidLevel");

	AWaterBarrel_GetLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterBarrel.CollectLiquidAmount
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                          DesiredAmount                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AWaterBarrel::CollectLiquidAmount(float DesiredAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrel.CollectLiquidAmount");

	AWaterBarrel_CollectLiquidAmount_Params params;
	params.DesiredAmount = DesiredAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AWaterBarrel::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(WaterBarrelSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(WaterBarrelStartLeakingSfx, UWwiseEvent);
	READ_PTR_FULL(WaterBarrelStopLeakingSfx, UWwiseEvent);
	READ_PTR_FULL(WaterBarrelStartPumpingSfx, UWwiseEvent);
	READ_PTR_FULL(WaterBarrelStopPumpingSfx, UWwiseEvent);
	READ_PTR_FULL(WaterBarrelLetStartPumpingSfx, UWwiseEvent);
	READ_PTR_FULL(WaterBarrelLetStopPumpingSfx, UWwiseEvent);
	READ_PTR_FULL(BarrelMesh, UStaticMeshComponent);
	READ_PTR_FULL(HandleMesh, UStaticMeshComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(LiquidContainerComponent, ULiquidContainerComponent);
	READ_PTR_FULL(HandleRotationCurve, UCurveFloat);
	READ_PTR_FULL(WaterFlowCurve, UCurveFloat);
	READ_PTR_FULL(WaterSurfaceVFXTemplate, UObject);
	READ_PTR_FULL(WaterPumpVFXTemplate, UObject);
	READ_PTR_FULL(WaterPumpParticleComponent, UParticleSystemComponent);
	READ_PTR_FULL(WaterSurfaceParticleComponent, UParticleSystemComponent);
}

void AWaterBarrel::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(WaterBarrelSfxPool);
	DELE_PTR_FULL(WaterBarrelStartLeakingSfx);
	DELE_PTR_FULL(WaterBarrelStopLeakingSfx);
	DELE_PTR_FULL(WaterBarrelStartPumpingSfx);
	DELE_PTR_FULL(WaterBarrelStopPumpingSfx);
	DELE_PTR_FULL(WaterBarrelLetStartPumpingSfx);
	DELE_PTR_FULL(WaterBarrelLetStopPumpingSfx);
	DELE_PTR_FULL(BarrelMesh);
	DELE_PTR_FULL(HandleMesh);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(LiquidContainerComponent);
	DELE_PTR_FULL(HandleRotationCurve);
	DELE_PTR_FULL(WaterFlowCurve);
	DELE_PTR_FULL(WaterSurfaceVFXTemplate);
	DELE_PTR_FULL(WaterPumpVFXTemplate);
	DELE_PTR_FULL(WaterPumpParticleComponent);
	DELE_PTR_FULL(WaterSurfaceParticleComponent);
}

// Function Athena.WaterBarrelActionStateId.PushCharacterIntoWaterBarrelActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWaterBarrel*            ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWaterBarrelActionStateId::STATIC_PushCharacterIntoWaterBarrelActionState(class AWaterBarrel* ControlledObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterBarrelActionStateId.PushCharacterIntoWaterBarrelActionState");

	UWaterBarrelActionStateId_PushCharacterIntoWaterBarrelActionState_Params params;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaterBarrelActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UWaterBarrelActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void ULookAtOffsetInputComponent::AfterRead()
{
	UAthenaCharacterBaseMovementComponentWithInterference::AfterRead();

}

void ULookAtOffsetInputComponent::BeforeDelete()
{
	UAthenaCharacterBaseMovementComponentWithInterference::BeforeDelete();

}

void UWaterBarrelInputComponent::AfterRead()
{
	ULookAtOffsetInputComponent::AfterRead();

	READ_PTR_FULL(WaterBarrel, AWaterBarrel);
}

void UWaterBarrelInputComponent::BeforeDelete()
{
	ULookAtOffsetInputComponent::BeforeDelete();

	DELE_PTR_FULL(WaterBarrel);
}

void UWaterBarrelLeverNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UWaterBarrelLeverNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UWaterBarrelLeverDeactivatedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UWaterBarrelLeverDeactivatedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UWatermarkComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWatermarkComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UWaterModifierZoneComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UWaterModifierZoneComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Athena.MurkWaterModifierZoneComponent.OnRep_State
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMurkWaterModifierZoneState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMurkWaterModifierZoneComponent::OnRep_State(TEnumAsByte<Athena_EMurkWaterModifierZoneState> PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MurkWaterModifierZoneComponent.OnRep_State");

	UMurkWaterModifierZoneComponent_OnRep_State_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMurkWaterModifierZoneComponent::AfterRead()
{
	UWaterModifierZoneComponent::AfterRead();

	READ_PTR_FULL(ActivationCurve, UCurveFloat);
	READ_PTR_FULL(DeactivationCurve, UCurveFloat);
}

void UMurkWaterModifierZoneComponent::BeforeDelete()
{
	UWaterModifierZoneComponent::BeforeDelete();

	DELE_PTR_FULL(ActivationCurve);
	DELE_PTR_FULL(DeactivationCurve);
}

void UWaterModifierZoneService::AfterRead()
{
	UObject::AfterRead();

}

void UWaterModifierZoneService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWaterModifierZoneType::AfterRead()
{
	UObject::AfterRead();

}

void UWaterModifierZoneType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWaterModifierZoneType_Default::AfterRead()
{
	UWaterModifierZoneType::AfterRead();

}

void UWaterModifierZoneType_Default::BeforeDelete()
{
	UWaterModifierZoneType::BeforeDelete();

}

void UWaterModifierZoneType_Murk::AfterRead()
{
	UWaterModifierZoneType::AfterRead();

}

void UWaterModifierZoneType_Murk::BeforeDelete()
{
	UWaterModifierZoneType::BeforeDelete();

}

void UWaterSensitiveComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(WaterSensitiveData, UWaterSensitiveComponentDataAsset);
}

void UWaterSensitiveComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(WaterSensitiveData);
}

void UAddNPCOnShipStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(NPCOnShipDataAsset, UNPCOnShipDataAsset);
}

void UAddNPCOnShipStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(NPCOnShipDataAsset);
}

void UAddNPCOnSurfaceStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UAddNPCOnSurfaceStepDesc);
}

void UAddNPCOnSurfaceStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

// Function Athena.TaleNPCOnSurfaceService.GetManager
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   ManagerId                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UNPCOnSurfaceManager*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UNPCOnSurfaceManager* UTaleNPCOnSurfaceService::GetManager(const struct FGuid& ManagerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleNPCOnSurfaceService.GetManager");

	UTaleNPCOnSurfaceService_GetManager_Params params;
	params.ManagerId = ManagerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTaleNPCOnSurfaceService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UTaleNPCOnSurfaceService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UTaleNPCOnSurfaceServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleNPCOnSurfaceServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

// Function Athena.LightingZoneInterface.GetLightingZoneParameters
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FLightingZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FLightingZoneParametersAndLocation ULightingZoneInterface::GetLightingZoneParameters()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingZoneInterface.GetLightingZoneParameters");

	ULightingZoneInterface_GetLightingZoneParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULightingZoneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULightingZoneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.LightingZoneServiceInterface.UnregisterLightingZoneFromService
// (Native, Public, BlueprintCallable)
void ULightingZoneServiceInterface::UnregisterLightingZoneFromService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingZoneServiceInterface.UnregisterLightingZoneFromService");

	ULightingZoneServiceInterface_UnregisterLightingZoneFromService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightingZoneServiceInterface.RegisterLightingZoneWithService
// (Native, Public, BlueprintCallable)
void ULightingZoneServiceInterface::RegisterLightingZoneWithService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingZoneServiceInterface.RegisterLightingZoneWithService");

	ULightingZoneServiceInterface_RegisterLightingZoneWithService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightingZoneServiceInterface.GetNumberOfLightingZones
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ULightingZoneServiceInterface::GetNumberOfLightingZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingZoneServiceInterface.GetNumberOfLightingZones");

	ULightingZoneServiceInterface_GetNumberOfLightingZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LightingZoneServiceInterface.GetLightingZone
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            LightingZoneIndex              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLightingZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FLightingZoneParametersAndLocation ULightingZoneServiceInterface::GetLightingZone(int LightingZoneIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingZoneServiceInterface.GetLightingZone");

	ULightingZoneServiceInterface_GetLightingZone_Params params;
	params.LightingZoneIndex = LightingZoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LightingZoneServiceInterface.GetAllLightingZones
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FLightingZoneParametersAndLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FLightingZoneParametersAndLocation> ULightingZoneServiceInterface::GetAllLightingZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingZoneServiceInterface.GetAllLightingZones");

	ULightingZoneServiceInterface_GetAllLightingZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULightingZoneServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULightingZoneServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URewardSettings::AfterRead()
{
	UObject::AfterRead();

}

void URewardSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWeightedAwardableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWeightedAwardableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UChainLightningSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UChainLightningSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UChainLightningSourceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UChainLightningSourceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UChainLightningSourceComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CachedChainLightningSettingsAsset, UChainLightningSettingsAsset);
}

void UChainLightningSourceComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CachedChainLightningSettingsAsset);
}

void AChainLightningVisualActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SettingsAsset, UChainLightningVisualActorSettingsAsset);
	READ_PTR_FULL(RootSceneComponent, USceneComponent);
}

void AChainLightningVisualActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SettingsAsset);
	DELE_PTR_FULL(RootSceneComponent);
}

void UChainLightningVisualActorSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(MeshAsset, UStaticMesh);
	READ_PTR_FULL(MaterialAsset, UMaterialInterface);
	READ_PTR_FULL(ChainLightningCreatedOneShot, UWwiseEvent);
	READ_PTR_FULL(ChainLightningVisualActorPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PropogationVfx, UObject);
}

void UChainLightningVisualActorSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(MeshAsset);
	DELE_PTR_FULL(MaterialAsset);
	DELE_PTR_FULL(ChainLightningCreatedOneShot);
	DELE_PTR_FULL(ChainLightningVisualActorPool);
	DELE_PTR_FULL(PropogationVfx);
}

void UShockStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UShockStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UNameplateServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNameplateServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNameplateService::AfterRead()
{
	UObject::AfterRead();

}

void UNameplateService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UNameplateSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UNameplateSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UNameplateVisibilityInfluencerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNameplateVisibilityInfluencerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNameplateVisibilityOverrideInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNameplateVisibilityOverrideInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerNameplateLocationOverrideInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerNameplateLocationOverrideInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerNameplateLocationOverrideComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerNameplateLocationOverrideComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.HiddenActionStateId.PushCharacterIntoHiddenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  HidingActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHiddenActionStateId::STATIC_PushCharacterIntoHiddenActionState(class AActor* HidingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HiddenActionStateId.PushCharacterIntoHiddenActionState");

	UHiddenActionStateId_PushCharacterIntoHiddenActionState_Params params;
	params.HidingActor = HidingActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HiddenActionStateId.PopCharacterOutOfHiddenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  HidingActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHiddenActionStateId::STATIC_PopCharacterOutOfHiddenActionState(class AActor* HidingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HiddenActionStateId.PopCharacterOutOfHiddenActionState");

	UHiddenActionStateId_PopCharacterOutOfHiddenActionState_Params params;
	params.HidingActor = HidingActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHiddenActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UHiddenActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.HideInObjectActionStateId.PushCharacterIntoHideInObjectActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ObjectToHideIn                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Dockable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHideInObjectActionStateId::STATIC_PushCharacterIntoHideInObjectActionState(class AActor* Character, class AActor* ObjectToHideIn, class AActor* Dockable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HideInObjectActionStateId.PushCharacterIntoHideInObjectActionState");

	UHideInObjectActionStateId_PushCharacterIntoHideInObjectActionState_Params params;
	params.Character = Character;
	params.ObjectToHideIn = ObjectToHideIn;
	params.Dockable = Dockable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HideInObjectActionStateId.PopCharacterOutOfHideInObjectActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHideInObjectActionStateId::STATIC_PopCharacterOutOfHideInObjectActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HideInObjectActionStateId.PopCharacterOutOfHideInObjectActionState");

	UHideInObjectActionStateId_PopCharacterOutOfHideInObjectActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHideInObjectActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UHideInObjectActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.HidingInterface.RequestUnhide
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 AppearLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UHidingInterface::RequestUnhide(const struct FVector& AppearLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HidingInterface.RequestUnhide");

	UHidingInterface_RequestUnhide_Params params;
	params.AppearLocation = AppearLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HidingInterface.RequestHide
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 HideLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UHidingInterface::RequestHide(const struct FVector& HideLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HidingInterface.RequestHide");

	UHidingInterface_RequestHide_Params params;
	params.HideLocation = HideLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHidingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHidingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStatusResponseAddManagedVulnerabilityLayer::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(VulnerabilityToApply, UDamageableVulnerabilityLayer);
}

void UStatusResponseAddManagedVulnerabilityLayer::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(VulnerabilityToApply);
}

void UVulnerabilityLayerStateManagerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVulnerabilityLayerStateManagerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTeleportLocationComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UTeleportLocationComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Athena.TeleportLocationInterface.GetTeleportLocationForCharacter
// (Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference)
struct FTeleportLocation UTeleportLocationInterface::GetTeleportLocationForCharacter(class ACharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportLocationInterface.GetTeleportLocationForCharacter");

	UTeleportLocationInterface_GetTeleportLocationForCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TeleportLocationInterface.GetAllTeleportLocationsForCharacter
// (Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTeleportLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
TArray<struct FTeleportLocation> UTeleportLocationInterface::GetAllTeleportLocationsForCharacter(class ACharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportLocationInterface.GetAllTeleportLocationsForCharacter");

	UTeleportLocationInterface_GetAllTeleportLocationsForCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTeleportLocationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTeleportLocationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMechanismEvent::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UMechanismEvent::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UMechanismAnimationEvent::AfterRead()
{
	UMechanismEvent::AfterRead();

}

void UMechanismAnimationEvent::BeforeDelete()
{
	UMechanismEvent::BeforeDelete();

}

void UMechanismAnimationEvent_VFX::AfterRead()
{
	UMechanismAnimationEvent::AfterRead();

	READ_PTR_FULL(CachedParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(CachedAttachParent, USceneComponent);
}

void UMechanismAnimationEvent_VFX::BeforeDelete()
{
	UMechanismAnimationEvent::BeforeDelete();

	DELE_PTR_FULL(CachedParticleSystem);
	DELE_PTR_FULL(CachedAttachParent);
}

void UMechanismAnimationEvent_ContinuousVFX::AfterRead()
{
	UMechanismAnimationEvent_VFX::AfterRead();

}

void UMechanismAnimationEvent_ContinuousVFX::BeforeDelete()
{
	UMechanismAnimationEvent_VFX::BeforeDelete();

}

void USwingMechanismCordRenderComponent::AfterRead()
{
	UCordRenderComponent::AfterRead();

}

void USwingMechanismCordRenderComponent::BeforeDelete()
{
	UCordRenderComponent::BeforeDelete();

}

// Function Athena.VolumeMechanismTrigger.OnTriggerVolumeEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVolumeMechanismTrigger::OnTriggerVolumeEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VolumeMechanismTrigger.OnTriggerVolumeEndOverlap");

	AVolumeMechanismTrigger_OnTriggerVolumeEndOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VolumeMechanismTrigger.OnTriggerVolumeBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AVolumeMechanismTrigger::OnTriggerVolumeBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VolumeMechanismTrigger.OnTriggerVolumeBeginOverlap");

	AVolumeMechanismTrigger_OnTriggerVolumeBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVolumeMechanismTrigger::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismTriggerComponent, UMechanismTriggerComponent);
	READ_PTR_FULL(TriggerVolume, UBoxComponent);
}

void AVolumeMechanismTrigger::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismTriggerComponent);
	DELE_PTR_FULL(TriggerVolume);
}

void UWaterPuzzleAlterationMechanismAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AlterationMechanismPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(AlterationMechanismActivateEvent, UWwiseEvent);
	READ_PTR_FULL(WaterLevelPuzzlePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PuzzleWaterRiseStartEvent, UWwiseEvent);
	READ_PTR_FULL(PuzzleWaterRiseEndEvent, UWwiseEvent);
	READ_PTR_FULL(PuzzleWaterFallStartEvent, UWwiseEvent);
	READ_PTR_FULL(PuzzleWaterFallEndEvent, UWwiseEvent);
}

void UWaterPuzzleAlterationMechanismAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AlterationMechanismPool);
	DELE_PTR_FULL(AlterationMechanismActivateEvent);
	DELE_PTR_FULL(WaterLevelPuzzlePool);
	DELE_PTR_FULL(PuzzleWaterRiseStartEvent);
	DELE_PTR_FULL(PuzzleWaterRiseEndEvent);
	DELE_PTR_FULL(PuzzleWaterFallStartEvent);
	DELE_PTR_FULL(PuzzleWaterFallEndEvent);
}

// Function Athena.WaveBasedMechanismVisualController.OnRepWaveIndex
// (Final, Native, Private)
void AWaveBasedMechanismVisualController::OnRepWaveIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaveBasedMechanismVisualController.OnRepWaveIndex");

	AWaveBasedMechanismVisualController_OnRepWaveIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaveBasedMechanismVisualController.OnMechanismActionReset
// (Native, Protected)
void AWaveBasedMechanismVisualController::OnMechanismActionReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaveBasedMechanismVisualController.OnMechanismActionReset");

	AWaveBasedMechanismVisualController_OnMechanismActionReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaveBasedMechanismVisualController.NewWave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InNewWaveIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWaveBasedMechanismVisualController::NewWave(int InNewWaveIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaveBasedMechanismVisualController.NewWave");

	AWaveBasedMechanismVisualController_NewWave_Params params;
	params.InNewWaveIndex = InNewWaveIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaveBasedMechanismVisualController.Multicast_TriggerNewWaveMechanismRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            InWaveIndex                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWaveBasedMechanismVisualController::Multicast_TriggerNewWaveMechanismRPC(int InWaveIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaveBasedMechanismVisualController.Multicast_TriggerNewWaveMechanismRPC");

	AWaveBasedMechanismVisualController_Multicast_TriggerNewWaveMechanismRPC_Params params;
	params.InWaveIndex = InWaveIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaveBasedMechanismVisualController.BeginNewWave
// (Final, Native, Private)
// Parameters:
// int                            InNewWaveIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWaveBasedMechanismVisualController::BeginNewWave(int InNewWaveIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaveBasedMechanismVisualController.BeginNewWave");

	AWaveBasedMechanismVisualController_BeginNewWave_Params params;
	params.InNewWaveIndex = InNewWaveIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AWaveBasedMechanismVisualController::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
	READ_PTR_FULL(ScalarParameterCurve, UCurveFloat);
}

void AWaveBasedMechanismVisualController::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismActionComponent);
	DELE_PTR_FULL(ScalarParameterCurve);
}

// Function Athena.BaseContinuousAnimatedMechanismAction.Multicast_PostWwiseEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UWwiseEvent*             Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABaseContinuousAnimatedMechanismAction::Multicast_PostWwiseEvent(class UWwiseEvent* Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BaseContinuousAnimatedMechanismAction.Multicast_PostWwiseEvent");

	ABaseContinuousAnimatedMechanismAction_Multicast_PostWwiseEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BaseContinuousAnimatedMechanismAction.GetWorldSpaceLookAtLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ABaseContinuousAnimatedMechanismAction::GetWorldSpaceLookAtLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BaseContinuousAnimatedMechanismAction.GetWorldSpaceLookAtLocation");

	ABaseContinuousAnimatedMechanismAction_GetWorldSpaceLookAtLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismReachedMinimum
// (Event, Protected, BlueprintEvent)
void ABaseContinuousAnimatedMechanismAction::Blueprint_OnMechanismReachedMinimum()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismReachedMinimum");

	ABaseContinuousAnimatedMechanismAction_Blueprint_OnMechanismReachedMinimum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismReachedMaximum
// (Event, Protected, BlueprintEvent)
void ABaseContinuousAnimatedMechanismAction::Blueprint_OnMechanismReachedMaximum()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismReachedMaximum");

	ABaseContinuousAnimatedMechanismAction_Blueprint_OnMechanismReachedMaximum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismMovedAwayFromMinimum
// (Event, Protected, BlueprintEvent)
void ABaseContinuousAnimatedMechanismAction::Blueprint_OnMechanismMovedAwayFromMinimum()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismMovedAwayFromMinimum");

	ABaseContinuousAnimatedMechanismAction_Blueprint_OnMechanismMovedAwayFromMinimum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismMovedAwayFromMaximum
// (Event, Protected, BlueprintEvent)
void ABaseContinuousAnimatedMechanismAction::Blueprint_OnMechanismMovedAwayFromMaximum()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BaseContinuousAnimatedMechanismAction.Blueprint_OnMechanismMovedAwayFromMaximum");

	ABaseContinuousAnimatedMechanismAction_Blueprint_OnMechanismMovedAwayFromMaximum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABaseContinuousAnimatedMechanismAction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(Pivot, USceneComponent);
	READ_PTR_FULL(EmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(MechanismStartedMovingAudioEvent, UWwiseEvent);
	READ_PTR_FULL(MechanismStoppedMovingAudioEvent, UWwiseEvent);
	READ_PTR_FULL(MechanismStoppedInProgressAudioEvent, UWwiseEvent);
	READ_PTR_FULL(MechanismReachedMinimumAudioEvent, UWwiseEvent);
	READ_PTR_FULL(MechanismReachedMaximumAudioEvent, UWwiseEvent);
	READ_PTR_FULL(MechanismMovingParticleSystem, UParticleSystem);
	READ_PTR_FULL(MechanismReachedMinimumParticleSystem, UParticleSystem);
	READ_PTR_FULL(MechanismReachedMaximumParticleSystem, UParticleSystem);
	READ_PTR_FULL(CachedMechanismMovingParticleSystem, UParticleSystemComponent);
}

void ABaseContinuousAnimatedMechanismAction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Pivot);
	DELE_PTR_FULL(EmitterPool);
	DELE_PTR_FULL(MechanismStartedMovingAudioEvent);
	DELE_PTR_FULL(MechanismStoppedMovingAudioEvent);
	DELE_PTR_FULL(MechanismStoppedInProgressAudioEvent);
	DELE_PTR_FULL(MechanismReachedMinimumAudioEvent);
	DELE_PTR_FULL(MechanismReachedMaximumAudioEvent);
	DELE_PTR_FULL(MechanismMovingParticleSystem);
	DELE_PTR_FULL(MechanismReachedMinimumParticleSystem);
	DELE_PTR_FULL(MechanismReachedMaximumParticleSystem);
	DELE_PTR_FULL(CachedMechanismMovingParticleSystem);
}

void AContinuousAnimatedMechanismAction::AfterRead()
{
	ABaseContinuousAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
}

void AContinuousAnimatedMechanismAction::BeforeDelete()
{
	ABaseContinuousAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(MechanismActionComponent);
}

// Function Athena.HangingPlatform.SetCurrentMoveInterpolation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InInterpolation                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHangingPlatform::SetCurrentMoveInterpolation(float InInterpolation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HangingPlatform.SetCurrentMoveInterpolation");

	AHangingPlatform_SetCurrentMoveInterpolation_Params params;
	params.InInterpolation = InInterpolation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHangingPlatform::AfterRead()
{
	AContinuousAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(PlatformBody, UStaticMeshComponent);
	READ_PTR_FULL(DrivingMechanism, UChildActorComponent);
}

void AHangingPlatform::BeforeDelete()
{
	AContinuousAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(PlatformBody);
	DELE_PTR_FULL(DrivingMechanism);
}

// Function Athena.BattleElevator.Multicast_TriggerExplosionPoint
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            PointIndex                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABattleElevator::Multicast_TriggerExplosionPoint(int PointIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BattleElevator.Multicast_TriggerExplosionPoint");

	ABattleElevator_Multicast_TriggerExplosionPoint_Params params;
	params.PointIndex = PointIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BattleElevator.Multicast_ResetBattleElevator
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void ABattleElevator::Multicast_ResetBattleElevator()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BattleElevator.Multicast_ResetBattleElevator");

	ABattleElevator_Multicast_ResetBattleElevator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABattleElevator::AfterRead()
{
	AHangingPlatform::AfterRead();

	READ_PTR_FULL(InstancedNavMeshComponent, UInstancedNavMeshComponent);
	READ_PTR_FULL(BattleElevatorLocators, ULocatorContainer);
	READ_PTR_FULL(NamedPointsComponent, UNamedPointsComponent);
	READ_PTR_FULL(DamageableComponent, UDamageableComponent);
}

void ABattleElevator::BeforeDelete()
{
	AHangingPlatform::BeforeDelete();

	DELE_PTR_FULL(InstancedNavMeshComponent);
	DELE_PTR_FULL(BattleElevatorLocators);
	DELE_PTR_FULL(NamedPointsComponent);
	DELE_PTR_FULL(DamageableComponent);
}

void UBattleElevatorEventRoomBasePolicy::AfterRead()
{
	UObject::AfterRead();

}

void UBattleElevatorEventRoomBasePolicy::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UBattleElevatorEventRoomHeightReachedPolicy::AfterRead()
{
	UBattleElevatorEventRoomBasePolicy::AfterRead();

}

void UBattleElevatorEventRoomHeightReachedPolicy::BeforeDelete()
{
	UBattleElevatorEventRoomBasePolicy::BeforeDelete();

}

void UBattleElevatorEventRoomKrakenDeadPolicy::AfterRead()
{
	UBattleElevatorEventRoomBasePolicy::AfterRead();

}

void UBattleElevatorEventRoomKrakenDeadPolicy::BeforeDelete()
{
	UBattleElevatorEventRoomBasePolicy::BeforeDelete();

}

void UBattleElevatorEventRoomKrakenPhaseEndedPolicy::AfterRead()
{
	UBattleElevatorEventRoomBasePolicy::AfterRead();

}

void UBattleElevatorEventRoomKrakenPhaseEndedPolicy::BeforeDelete()
{
	UBattleElevatorEventRoomBasePolicy::BeforeDelete();

}

// Function Athena.BattleElevatorEventRoomMechanismCompletedPolicy.OnMechanismActionCompleted
// (Final, Native, Private)
void UBattleElevatorEventRoomMechanismCompletedPolicy::OnMechanismActionCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BattleElevatorEventRoomMechanismCompletedPolicy.OnMechanismActionCompleted");

	UBattleElevatorEventRoomMechanismCompletedPolicy_OnMechanismActionCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBattleElevatorEventRoomMechanismCompletedPolicy::AfterRead()
{
	UBattleElevatorEventRoomBasePolicy::AfterRead();

}

void UBattleElevatorEventRoomMechanismCompletedPolicy::BeforeDelete()
{
	UBattleElevatorEventRoomBasePolicy::BeforeDelete();

}

void URegionMapDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URegionMapDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.RegionMapSetAsset.Select
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URegionMapDataAsset*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class URegionMapDataAsset* URegionMapSetAsset::Select()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RegionMapSetAsset.Select");

	URegionMapSetAsset_Select_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RegionMapSetAsset.GetNearestRegion
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 InLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class URegionMapDataAsset*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class URegionMapDataAsset* URegionMapSetAsset::GetNearestRegion(const struct FVector& InLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RegionMapSetAsset.GetNearestRegion");

	URegionMapSetAsset_GetNearestRegion_Params params;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URegionMapSetAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URegionMapSetAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.RenderToTextureMapBase.OnRep_RenderData
// (Final, Native, Private)
void ARenderToTextureMapBase::OnRep_RenderData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RenderToTextureMapBase.OnRep_RenderData");

	ARenderToTextureMapBase_OnRep_RenderData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RenderToTextureMapBase.OnCanvasUpdate
// (RequiredAPI, Native, Protected)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ARenderToTextureMapBase::OnCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RenderToTextureMapBase.OnCanvasUpdate");

	ARenderToTextureMapBase_OnCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARenderToTextureMapBase::AfterRead()
{
	ATreasureMap::AfterRead();

}

void ARenderToTextureMapBase::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

}

void ALocationMap::AfterRead()
{
	ARenderToTextureMapBase::AfterRead();

}

void ALocationMap::BeforeDelete()
{
	ARenderToTextureMapBase::BeforeDelete();

}

void ULocationMapCollectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULocationMapCollectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULocationMapParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ChestMarkId, UClass);
}

void ULocationMapParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ChestMarkId);
}

void ULocationMapSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

	READ_PTR_FULL(LocationMapItemDescClass, UClass);
}

void ULocationMapSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

	DELE_PTR_FULL(LocationMapItemDescClass);
}

void UOnboardingIntroLocationComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UOnboardingIntroLocationComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void UAnimNotifyState_BlockInterrupt::AfterRead()
{
	UAnimNotifyState::AfterRead();

}

void UAnimNotifyState_BlockInterrupt::BeforeDelete()
{
	UAnimNotifyState::BeforeDelete();

}

void UAnimNotifyState_DisableHappyReact::AfterRead()
{
	UAnimNotifyState::AfterRead();

}

void UAnimNotifyState_DisableHappyReact::BeforeDelete()
{
	UAnimNotifyState::BeforeDelete();

}

void UPetAnimationDataStore::AfterRead()
{
	UAnimationData::AfterRead();

	READ_PTR_FULL(PetAnimationData, UPetsAnimationData);
}

void UPetAnimationDataStore::BeforeDelete()
{
	UAnimationData::BeforeDelete();

	DELE_PTR_FULL(PetAnimationData);
}

void UPetAnimationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPetAnimationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPetMovementStateModifierInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPetMovementStateModifierInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPetRoamingAnimationStateDefinitionsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPetRoamingAnimationStateDefinitionsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPetsAnimationData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPetsAnimationData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UOnItemWieldedComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UOnItemWieldedComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UObtainMapPieceOnWieldComponent::AfterRead()
{
	UOnItemWieldedComponent::AfterRead();

}

void UObtainMapPieceOnWieldComponent::BeforeDelete()
{
	UOnItemWieldedComponent::BeforeDelete();

}

// Function Athena.TornMap.OnReplicateSignalRedraw
// (Final, Native, Private)
void ATornMap::OnReplicateSignalRedraw()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TornMap.OnReplicateSignalRedraw");

	ATornMap_OnReplicateSignalRedraw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TornMap.OnRep_TargetVisibility
// (Final, RequiredAPI, Native, Private)
void ATornMap::OnRep_TargetVisibility()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TornMap.OnRep_TargetVisibility");

	ATornMap_OnRep_TargetVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATornMap::AfterRead()
{
	ARenderToTextureMapBase::AfterRead();

	READ_PTR_FULL(AltMapMarkTexture, UTexture);
}

void ATornMap::BeforeDelete()
{
	ARenderToTextureMapBase::BeforeDelete();

	DELE_PTR_FULL(AltMapMarkTexture);
}

void UTornMapCollectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTornMapCollectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAggressiveGhostShipMineFormationsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipMineFormationsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.AggressiveGhostShipPortal.StartOpening
// (Event, Protected, BlueprintEvent)
void AAggressiveGhostShipPortal::StartOpening()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipPortal.StartOpening");

	AAggressiveGhostShipPortal_StartOpening_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipPortal.StartClosing
// (Event, Protected, BlueprintEvent)
void AAggressiveGhostShipPortal::StartClosing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipPortal.StartClosing");

	AAggressiveGhostShipPortal_StartClosing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipPortal.End
// (Event, Protected, BlueprintEvent)
void AAggressiveGhostShipPortal::End()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipPortal.End");

	AAggressiveGhostShipPortal_End_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAggressiveGhostShipPortal::AfterRead()
{
	AActor::AfterRead();

}

void AAggressiveGhostShipPortal::BeforeDelete()
{
	AActor::BeforeDelete();

}

void AAggressiveGhostShipPoolResource::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(PortalClass, UClass);
}

void AAggressiveGhostShipPoolResource::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(PortalClass);
}

void UGameEventParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGameEventParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipsEncounterParams::AfterRead()
{
	UGameEventParams::AfterRead();

	READ_PTR_FULL(Encounter, UAggressiveGhostShipEncounterDataAsset);
	READ_PTR_FULL(Formations, UAggressiveGhostShipEncounterFormationsDataAsset);
	READ_PTR_FULL(PoolingResourceClass, UClass);
	READ_PTR_FULL(EncounterRewards, UAggressiveGhostShipRewardsDataAsset);
	READ_PTR_FULL(EncounterEnteredBanner, UAggressiveGhostShipBannerDataAsset);
	READ_PTR_FULL(EncounterCompleteBanner, UAggressiveGhostShipBannerDataAsset);
}

void UAggressiveGhostShipsEncounterParams::BeforeDelete()
{
	UGameEventParams::BeforeDelete();

	DELE_PTR_FULL(Encounter);
	DELE_PTR_FULL(Formations);
	DELE_PTR_FULL(PoolingResourceClass);
	DELE_PTR_FULL(EncounterRewards);
	DELE_PTR_FULL(EncounterEnteredBanner);
	DELE_PTR_FULL(EncounterCompleteBanner);
}

void AGameEvent::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
}

void AGameEvent::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
}

// Function Athena.AggressiveGhostShipsEncounter.StartSpawningImmediately
// (Final, Native, Public, BlueprintCallable)
void AAggressiveGhostShipsEncounter::StartSpawningImmediately()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.StartSpawningImmediately");

	AAggressiveGhostShipsEncounter_StartSpawningImmediately_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.SetProgressToNextWaveAllowed
// (Final, Native, Public, BlueprintCallable)
void AAggressiveGhostShipsEncounter::SetProgressToNextWaveAllowed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.SetProgressToNextWaveAllowed");

	AAggressiveGhostShipsEncounter_SetProgressToNextWaveAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.SetFormationGruntsCanSpawn
// (Final, Native, Public, BlueprintCallable)
void AAggressiveGhostShipsEncounter::SetFormationGruntsCanSpawn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.SetFormationGruntsCanSpawn");

	AAggressiveGhostShipsEncounter_SetFormationGruntsCanSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.SetCanTargetPlayerShips
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InCanTargetPlayerShips         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAggressiveGhostShipsEncounter::SetCanTargetPlayerShips(bool InCanTargetPlayerShips)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.SetCanTargetPlayerShips");

	AAggressiveGhostShipsEncounter_SetCanTargetPlayerShips_Params params;
	params.InCanTargetPlayerShips = InCanTargetPlayerShips;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.RemoveNearbyMermaidStatue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Statue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShipsEncounter::RemoveNearbyMermaidStatue(class AActor* Statue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.RemoveNearbyMermaidStatue");

	AAggressiveGhostShipsEncounter_RemoveNearbyMermaidStatue_Params params;
	params.Statue = Statue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.OnMermaidStatueDestroyed
// (Final, Native, Public)
// Parameters:
// class AStatueThreatBase*       Statue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  DestroyedBy                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShipsEncounter::OnMermaidStatueDestroyed(class AStatueThreatBase* Statue, class AActor* DestroyedBy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.OnMermaidStatueDestroyed");

	AAggressiveGhostShipsEncounter_OnMermaidStatueDestroyed_Params params;
	params.Statue = Statue;
	params.DestroyedBy = DestroyedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.OnMermaidStatueDamaged
// (Final, Native, Public)
// Parameters:
// class AStatueThreatBase*       Statue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  DamagedBy                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShipsEncounter::OnMermaidStatueDamaged(class AStatueThreatBase* Statue, class AActor* DamagedBy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.OnMermaidStatueDamaged");

	AAggressiveGhostShipsEncounter_OnMermaidStatueDamaged_Params params;
	params.Statue = Statue;
	params.DamagedBy = DamagedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.HasWaveFullySpawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAggressiveGhostShipsEncounter::HasWaveFullySpawned()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.HasWaveFullySpawned");

	AAggressiveGhostShipsEncounter_HasWaveFullySpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShipsEncounter.GetNearbyValidShips
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> AAggressiveGhostShipsEncounter::GetNearbyValidShips()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.GetNearbyValidShips");

	AAggressiveGhostShipsEncounter_GetNearbyValidShips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShipsEncounter.GetMaxWaveCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AAggressiveGhostShipsEncounter::GetMaxWaveCount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.GetMaxWaveCount");

	AAggressiveGhostShipsEncounter_GetMaxWaveCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShipsEncounter.GetCurrentWaveIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AAggressiveGhostShipsEncounter::GetCurrentWaveIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.GetCurrentWaveIndex");

	AAggressiveGhostShipsEncounter_GetCurrentWaveIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AggressiveGhostShipsEncounter.AddNearbyMermaidStatue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Statue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShipsEncounter::AddNearbyMermaidStatue(class AActor* Statue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.AddNearbyMermaidStatue");

	AAggressiveGhostShipsEncounter_AddNearbyMermaidStatue_Params params;
	params.Statue = Statue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.AddNearbyGhostShipEncounter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAggressiveGhostShipsEncounter* NearbyGhostShipEncounter       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAggressiveGhostShipsEncounter::AddNearbyGhostShipEncounter(class AAggressiveGhostShipsEncounter* NearbyGhostShipEncounter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.AddNearbyGhostShipEncounter");

	AAggressiveGhostShipsEncounter_AddNearbyGhostShipEncounter_Params params;
	params.NearbyGhostShipEncounter = NearbyGhostShipEncounter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AggressiveGhostShipsEncounter.AddEncounterListener
// (Final, Native, Public, BlueprintCallable)
void AAggressiveGhostShipsEncounter::AddEncounterListener()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AggressiveGhostShipsEncounter.AddEncounterListener");

	AAggressiveGhostShipsEncounter_AddEncounterListener_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAggressiveGhostShipsEncounter::AfterRead()
{
	AGameEvent::AfterRead();

	READ_PTR_FULL(Params, UAggressiveGhostShipsEncounterParams);
	READ_PTR_FULL(ActiveWaveMusicZoneActor, AActor);
	READ_PTR_FULL(PoolResourceActor, AAggressiveGhostShipPoolResource);
	READ_PTR_FULL(PhasedClusterRoot, APhasedClusterRoot);
}

void AAggressiveGhostShipsEncounter::BeforeDelete()
{
	AGameEvent::BeforeDelete();

	DELE_PTR_FULL(Params);
	DELE_PTR_FULL(ActiveWaveMusicZoneActor);
	DELE_PTR_FULL(PoolResourceActor);
	DELE_PTR_FULL(PhasedClusterRoot);
}

void UAggressiveGhostShipsEncounterServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAggressiveGhostShipsEncounterServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UGameEventServiceParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGameEventServiceParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipsEncounterServiceParams::AfterRead()
{
	UGameEventServiceParams::AfterRead();

	READ_PTR_FULL(EncounterParams, UAggressiveGhostShipsEncounterParams);
}

void UAggressiveGhostShipsEncounterServiceParams::BeforeDelete()
{
	UGameEventServiceParams::BeforeDelete();

	DELE_PTR_FULL(EncounterParams);
}

void AGameEventService::AfterRead()
{
	AActor::AfterRead();

}

void AGameEventService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void AAggressiveGhostShipsEncounterService::AfterRead()
{
	AGameEventService::AfterRead();

	READ_PTR_FULL(Params, UAggressiveGhostShipsEncounterServiceParams);
}

void AAggressiveGhostShipsEncounterService::BeforeDelete()
{
	AGameEventService::BeforeDelete();

	DELE_PTR_FULL(Params);
}

void UAthenaAICharacterMovementComponent::AfterRead()
{
	UAthenaCharacterMovementComponent::AfterRead();

}

void UAthenaAICharacterMovementComponent::BeforeDelete()
{
	UAthenaCharacterMovementComponent::BeforeDelete();

}

void UAthenaCharacterMovementSettings::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaCharacterMovementSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaCharacterStateManagerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAthenaCharacterStateManagerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.AthenaCharacterTestFunctions.WaitUntilFullySpawned
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
void UAthenaCharacterTestFunctions::STATIC_WaitUntilFullySpawned(class AAthenaCharacter* Target, const struct FLatentActionInfo& LatentInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.WaitUntilFullySpawned");

	UAthenaCharacterTestFunctions_WaitUntilFullySpawned_Params params;
	params.Target = Target;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.WaitUntilDocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_WaitUntilDocked(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.WaitUntilDocked");

	UAthenaCharacterTestFunctions_WaitUntilDocked_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.WaitForTeleport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
void UAthenaCharacterTestFunctions::STATIC_WaitForTeleport(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter, const struct FLatentActionInfo& LatentInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.WaitForTeleport");

	UAthenaCharacterTestFunctions_WaitForTeleport_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.WaitForMovementMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EMovementMode> WantedMovementMode             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            NumFramesInMovementMode        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_WaitForMovementMode(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, TEnumAsByte<Engine_EMovementMode> WantedMovementMode, int NumFramesInMovementMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.WaitForMovementMode");

	UAthenaCharacterTestFunctions_WaitForMovementMode_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.WantedMovementMode = WantedMovementMode;
	params.NumFramesInMovementMode = NumFramesInMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.WaitForCustomMovementMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  CustomMovementMode             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            NumFramesInMovementMode        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_WaitForCustomMovementMode(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, unsigned char CustomMovementMode, int NumFramesInMovementMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.WaitForCustomMovementMode");

	UAthenaCharacterTestFunctions_WaitForCustomMovementMode_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.CustomMovementMode = CustomMovementMode;
	params.NumFramesInMovementMode = NumFramesInMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleNotificationInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Id                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_TestAthenaCharacterHandleNotificationInput(class AAthenaCharacter* AthenaCharacter, class UClass* Id)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleNotificationInput");

	UAthenaCharacterTestFunctions_TestAthenaCharacterHandleNotificationInput_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Id = Id;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleAnalogInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Id                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_TestAthenaCharacterHandleAnalogInput(class AAthenaCharacter* AthenaCharacter, class UClass* Id, float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleAnalogInput");

	UAthenaCharacterTestFunctions_TestAthenaCharacterHandleAnalogInput_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Id = Id;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.TeleportToPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         TeleportBase                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Position                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int                            StreamOutLevel                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamInLevel                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_TeleportToPosition(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, class USceneComponent* TeleportBase, const struct FVector& Position, const struct FRotator& Rotation, int StreamOutLevel, int StreamInLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.TeleportToPosition");

	UAthenaCharacterTestFunctions_TeleportToPosition_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.TeleportBase = TeleportBase;
	params.Position = Position;
	params.Rotation = Rotation;
	params.StreamOutLevel = StreamOutLevel;
	params.StreamInLevel = StreamInLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.SimulateButtonRelease
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                    Button                         (Parm)
void UAthenaCharacterTestFunctions::STATIC_SimulateButtonRelease(class APlayerController* PlayerController, const struct FKey& Button)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SimulateButtonRelease");

	UAthenaCharacterTestFunctions_SimulateButtonRelease_Params params;
	params.PlayerController = PlayerController;
	params.Button = Button;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.SimulateButtonPress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                    Button                         (Parm)
void UAthenaCharacterTestFunctions::STATIC_SimulateButtonPress(class APlayerController* PlayerController, const struct FKey& Button)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SimulateButtonPress");

	UAthenaCharacterTestFunctions_SimulateButtonPress_Params params;
	params.PlayerController = PlayerController;
	params.Button = Button;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.SetupInputBinder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCharacterInputBinder*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UCharacterInputBinder* UAthenaCharacterTestFunctions::STATIC_SetupInputBinder(class AAthenaCharacter* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SetupInputBinder");

	UAthenaCharacterTestFunctions_SetupInputBinder_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.SetupCharacterForMPTesting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_SetupCharacterForMPTesting(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SetupCharacterForMPTesting");

	UAthenaCharacterTestFunctions_SetupCharacterForMPTesting_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTestByIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            PlayerIndex                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaCharacter* UAthenaCharacterTestFunctions::STATIC_SetupAthenaCharacterForInteractionTestByIndex(class UObject* WorldContextObject, int PlayerIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTestByIndex");

	UAthenaCharacterTestFunctions_SetupAthenaCharacterForInteractionTestByIndex_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerIndex = PlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaCharacter* UAthenaCharacterTestFunctions::STATIC_SetupAthenaCharacterForInteractionTest(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTest");

	UAthenaCharacterTestFunctions_SetupAthenaCharacterForInteractionTest_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.SendCharacterMoveInput
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D               Movement                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaCharacterTestFunctions::STATIC_SendCharacterMoveInput(class AAthenaCharacter* Character, const struct FVector2D& Movement)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.SendCharacterMoveInput");

	UAthenaCharacterTestFunctions_SendCharacterMoveInput_Params params;
	params.Character = Character;
	params.Movement = Movement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.HasAnyoneGotInputBindings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaCharacterTestFunctions::STATIC_HasAnyoneGotInputBindings(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.HasAnyoneGotInputBindings");

	UAthenaCharacterTestFunctions_HasAnyoneGotInputBindings_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.GetLocalAthenaCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            PlayerIndex                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
// class AAthenaPlayerCharacter*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaPlayerCharacter* UAthenaCharacterTestFunctions::STATIC_GetLocalAthenaCharacter(class UObject* WorldContextObject, int PlayerIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.GetLocalAthenaCharacter");

	UAthenaCharacterTestFunctions_GetLocalAthenaCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerIndex = PlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.GetClientPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ClientId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            SplitScreenIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
// class AAthenaPlayerCharacter*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaPlayerCharacter* UAthenaCharacterTestFunctions::STATIC_GetClientPlayerCharacter(class UObject* WorldContextObject, int ClientId, int SplitScreenIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.GetClientPlayerCharacter");

	UAthenaCharacterTestFunctions_GetClientPlayerCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ClientId = ClientId;
	params.SplitScreenIndex = SplitScreenIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.GetClientCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ClientId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            SplitScreenIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
// class AAthenaCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaCharacter* UAthenaCharacterTestFunctions::STATIC_GetClientCharacter(class UObject* WorldContextObject, int ClientId, int SplitScreenIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.GetClientCharacter");

	UAthenaCharacterTestFunctions_GetClientCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ClientId = ClientId;
	params.SplitScreenIndex = SplitScreenIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.ForceInteract
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Interactable                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           WaitUntilFullyDocked           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaCharacterTestFunctions::STATIC_ForceInteract(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, class AActor* Interactable, bool WaitUntilFullyDocked)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.ForceInteract");

	UAthenaCharacterTestFunctions_ForceInteract_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.Interactable = Interactable;
	params.WaitUntilFullyDocked = WaitUntilFullyDocked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.CreateAndEquipItemDesc
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ItemDesc                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UAthenaCharacterTestFunctions::STATIC_CreateAndEquipItemDesc(class AAthenaCharacter* Character, class UClass* ItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.CreateAndEquipItemDesc");

	UAthenaCharacterTestFunctions_CreateAndEquipItemDesc_Params params;
	params.Character = Character;
	params.ItemDesc = ItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.CreateAndAddItemDescToInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ItemDesc                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UAthenaCharacterTestFunctions::STATIC_CreateAndAddItemDescToInventory(class AAthenaCharacter* Character, class UClass* ItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.CreateAndAddItemDescToInventory");

	UAthenaCharacterTestFunctions_CreateAndAddItemDescToInventory_Params params;
	params.Character = Character;
	params.ItemDesc = ItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.ClearInputBindings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_ClearInputBindings(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.ClearInputBindings");

	UAthenaCharacterTestFunctions_ClearInputBindings_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaCharacterTestFunctions.ClearCharacterInteractionPolicies
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaCharacterTestFunctions::STATIC_ClearCharacterInteractionPolicies(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaCharacterTestFunctions.ClearCharacterInteractionPolicies");

	UAthenaCharacterTestFunctions_ClearCharacterInteractionPolicies_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaCharacterTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaCharacterTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AAthenaContestTavern::AfterRead()
{
	AActor::AfterRead();

}

void AAthenaContestTavern::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UPlayerPermissionsComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerPermissionsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UAthenaDebugMenuComponent::AfterRead()
{
	UDebugMenuComponent::AfterRead();

}

void UAthenaDebugMenuComponent::BeforeDelete()
{
	UDebugMenuComponent::BeforeDelete();

}

void UTestAthenaDebugMenuComponent::AfterRead()
{
	UAthenaDebugMenuComponent::AfterRead();

	READ_PTR_FULL(TestPermissionComponent, UPlayerPermissionsComponent);
}

void UTestAthenaDebugMenuComponent::BeforeDelete()
{
	UAthenaDebugMenuComponent::BeforeDelete();

	DELE_PTR_FULL(TestPermissionComponent);
}

void UAthenaDebugSettings::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaDebugSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFeatureToggledLevelsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFeatureToggledLevelsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAthenaPlayModeLevelsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaPlayModeLevelsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UUserBannedHandlerRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UUserBannedHandlerRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaGameContext::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(VoiceChatRenderer, UVoiceChatRenderer);
	READ_PTR_FULL(PlayModeLevels, UAthenaPlayModeLevelsDataAsset);
	READ_PTR_FULL(FeatureToggledLevels, UFeatureToggledLevelsDataAsset);
	READ_PTR_FULL(PrimaryGameInstance, UGameInstance);
	READ_PTR_FULL(AthenaServerIdentityManager, UAthenaServerIdentityManager);
	READ_PTR_FULL(AthenaLocalPlayerManager, UAthenaLocalPlayerManager);
	READ_PTR_FULL(AthenaLocalPlayerReengage, UAthenaLocalPlayerReengage);
	READ_PTR_FULL(GameNarrationCoordinator, UGameNarrationCoordinator);
	READ_PTR_FULL(ApplicationSettings, UApplicationSettings);
}

void UAthenaGameContext::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(VoiceChatRenderer);
	DELE_PTR_FULL(PlayModeLevels);
	DELE_PTR_FULL(FeatureToggledLevels);
	DELE_PTR_FULL(PrimaryGameInstance);
	DELE_PTR_FULL(AthenaServerIdentityManager);
	DELE_PTR_FULL(AthenaLocalPlayerManager);
	DELE_PTR_FULL(AthenaLocalPlayerReengage);
	DELE_PTR_FULL(GameNarrationCoordinator);
	DELE_PTR_FULL(ApplicationSettings);
}

void UAthenaGameEngine::AfterRead()
{
	URareGameEngine::AfterRead();

	READ_PTR_FULL(EngineSettings, UAthenaGameEngineSettings);
}

void UAthenaGameEngine::BeforeDelete()
{
	URareGameEngine::BeforeDelete();

	DELE_PTR_FULL(EngineSettings);
}

void UAthenaGameEngineSettingsInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaGameEngineSettingsInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaGameEngineSettings::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaGameEngineSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaGameEngineSettingsWindows::AfterRead()
{
	UAthenaGameEngineSettings::AfterRead();

}

void UAthenaGameEngineSettingsWindows::BeforeDelete()
{
	UAthenaGameEngineSettings::BeforeDelete();

}

// Function Athena.AthenaGameInstance.GetLocalPlayerId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UAthenaGameInstance::GetLocalPlayerId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameInstance.GetLocalPlayerId");

	UAthenaGameInstance_GetLocalPlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaGameInstance::AfterRead()
{
	UGameInstance::AfterRead();

	READ_PTR_FULL(AdditionalPlayModeLevels, UAthenaPlayModeLevelsDataAsset);
	READ_PTR_FULL(GameContext, UAthenaGameContext);
}

void UAthenaGameInstance::BeforeDelete()
{
	UGameInstance::BeforeDelete();

	DELE_PTR_FULL(AdditionalPlayModeLevels);
	DELE_PTR_FULL(GameContext);
}

void UCrewVoyageDirectorProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCrewVoyageDirectorProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AthenaGameMode.SetStorageContainerRefreshInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InRefreshInterval              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaGameMode::SetStorageContainerRefreshInterval(float InRefreshInterval)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameMode.SetStorageContainerRefreshInterval");

	AAthenaGameMode_SetStorageContainerRefreshInterval_Params params;
	params.InRefreshInterval = InRefreshInterval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameMode.SetRespawnTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InRespawnTimer                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaGameMode::SetRespawnTimer(float InRespawnTimer)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameMode.SetRespawnTimer");

	AAthenaGameMode_SetRespawnTimer_Params params;
	params.InRespawnTimer = InRespawnTimer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameMode.ResetStorageContainers
// (Final, Native, Public, BlueprintCallable)
void AAthenaGameMode::ResetStorageContainers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameMode.ResetStorageContainers");

	AAthenaGameMode_ResetStorageContainers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameMode.RequestDemoSessionReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* AthenaPlayerController         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InStartNewSession              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaGameMode::RequestDemoSessionReset(class AAthenaPlayerController* AthenaPlayerController, bool InStartNewSession)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameMode.RequestDemoSessionReset");

	AAthenaGameMode_RequestDemoSessionReset_Params params;
	params.AthenaPlayerController = AthenaPlayerController;
	params.InStartNewSession = InStartNewSession;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameMode.IsPlayerOnGhostShip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   PlayerPawn                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaGameMode::IsPlayerOnGhostShip(class APawn* PlayerPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameMode.IsPlayerOnGhostShip");

	AAthenaGameMode_IsPlayerOnGhostShip_Params params;
	params.PlayerPawn = PlayerPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAthenaGameMode::AfterRead()
{
	AGameMode::AfterRead();

	READ_PTR_FULL(GhostShipPawnClass, UClass);
	READ_PTR_FULL(ServerNetworkedEventsWhitelistDefinition, UClass);
	READ_PTR_FULL(RiddleQuestDescGeneratorData, URiddleQuestDescGeneratorData);
}

void AAthenaGameMode::BeforeDelete()
{
	AGameMode::BeforeDelete();

	DELE_PTR_FULL(GhostShipPawnClass);
	DELE_PTR_FULL(ServerNetworkedEventsWhitelistDefinition);
	DELE_PTR_FULL(RiddleQuestDescGeneratorData);
}

void AOnlineAthenaGameMode::AfterRead()
{
	AAthenaGameMode::AfterRead();

}

void AOnlineAthenaGameMode::BeforeDelete()
{
	AAthenaGameMode::BeforeDelete();

}

void ATestAthenaGameMode::AfterRead()
{
	AAthenaGameMode::AfterRead();

}

void ATestAthenaGameMode::BeforeDelete()
{
	AAthenaGameMode::BeforeDelete();

}

void ATestAthenaGameModeWithHUD::AfterRead()
{
	ATestAthenaGameMode::AfterRead();

}

void ATestAthenaGameModeWithHUD::BeforeDelete()
{
	ATestAthenaGameMode::BeforeDelete();

}

void ATestInventoryAthenaGameMode::AfterRead()
{
	AAthenaGameMode::AfterRead();

}

void ATestInventoryAthenaGameMode::BeforeDelete()
{
	AAthenaGameMode::BeforeDelete();

}

void UAthenaGameplayDebuggingComponent::AfterRead()
{
	UGameplayDebuggingComponent::AfterRead();

	READ_PTR_FULL(CurrentAIStrategyId, UClass);
	READ_PTR_FULL(NextAbility, UClass);
	READ_PTR_FULL(QueuedAbility, UClass);
	READ_PTR_FULL(AIAbilityComponent, UAthenaAIAbilityHandlerComponent);
}

void UAthenaGameplayDebuggingComponent::BeforeDelete()
{
	UGameplayDebuggingComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentAIStrategyId);
	DELE_PTR_FULL(NextAbility);
	DELE_PTR_FULL(QueuedAbility);
	DELE_PTR_FULL(AIAbilityComponent);
}

void AAthenaGameplayDebuggingHUDComponent::AfterRead()
{
	AGameplayDebuggingHUDComponent::AfterRead();

}

void AAthenaGameplayDebuggingHUDComponent::BeforeDelete()
{
	AGameplayDebuggingHUDComponent::BeforeDelete();

}

void UGameNarrationCoordinator::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(NarrationSpeakEvent, UWwiseEvent);
}

void UGameNarrationCoordinator::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(NarrationSpeakEvent);
}

void UShovelSurfaceFxDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShovelSurfaceFxDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UShovelSurfaceHoleDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShovelSurfaceHoleDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAthenaGameSettings::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ThrowablesItemCategory, UClass);
	READ_PTR_FULL(DefaultFogBank, UClass);
	READ_PTR_FULL(DefaultFogBankManager, UClass);
}

void UAthenaGameSettings::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ThrowablesItemCategory);
	DELE_PTR_FULL(DefaultFogBank);
	DELE_PTR_FULL(DefaultFogBankManager);
}

// Function Athena.AthenaGameState.OnRep_SubPlayMode
// (Final, Native, Private)
void AAthenaGameState::OnRep_SubPlayMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_SubPlayMode");

	AAthenaGameState_OnRep_SubPlayMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ShouldDisableAsyncOcclusionCheck
// (Final, Native, Private)
void AAthenaGameState::OnRep_ShouldDisableAsyncOcclusionCheck()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ShouldDisableAsyncOcclusionCheck");

	AAthenaGameState_OnRep_ShouldDisableAsyncOcclusionCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ServiceStatusNotificationsService
// (Final, Native, Public)
void AAthenaGameState::OnRep_ServiceStatusNotificationsService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ServiceStatusNotificationsService");

	AAthenaGameState_OnRep_ServiceStatusNotificationsService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedWindService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedWindService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedWindService");

	AAthenaGameState_OnRep_ReplicatedWindService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedWaterService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedWaterService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedWaterService");

	AAthenaGameState_OnRep_ReplicatedWaterService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedWatercraftService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedWatercraftService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedWatercraftService");

	AAthenaGameState_OnRep_ReplicatedWatercraftService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedTinySharkService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedTinySharkService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedTinySharkService");

	AAthenaGameState_OnRep_ReplicatedTinySharkService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedTimeService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedTimeService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedTimeService");

	AAthenaGameState_OnRep_ReplicatedTimeService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedTallTaleService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedTallTaleService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedTallTaleService");

	AAthenaGameState_OnRep_ReplicatedTallTaleService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedStormService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedStormService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedStormService");

	AAthenaGameState_OnRep_ReplicatedStormService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedSpireService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedSpireService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedSpireService");

	AAthenaGameState_OnRep_ReplicatedSpireService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedShipService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedShipService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedShipService");

	AAthenaGameState_OnRep_ReplicatedShipService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedPlayerManagerService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedPlayerManagerService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedPlayerManagerService");

	AAthenaGameState_OnRep_ReplicatedPlayerManagerService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedPlayerBuriedTreasureService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedPlayerBuriedTreasureService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedPlayerBuriedTreasureService");

	AAthenaGameState_OnRep_ReplicatedPlayerBuriedTreasureService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedNPCService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedNPCService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedNPCService");

	AAthenaGameState_OnRep_ReplicatedNPCService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedKrakenService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedKrakenService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedKrakenService");

	AAthenaGameState_OnRep_ReplicatedKrakenService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedIslandService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedIslandService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedIslandService");

	AAthenaGameState_OnRep_ReplicatedIslandService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedDrawDebugService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedDrawDebugService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedDrawDebugService");

	AAthenaGameState_OnRep_ReplicatedDrawDebugService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedCrewService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedCrewService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedCrewService");

	AAthenaGameState_OnRep_ReplicatedCrewService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedContestZoneService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedContestZoneService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedContestZoneService");

	AAthenaGameState_OnRep_ReplicatedContestZoneService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedContestManagerService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedContestManagerService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedContestManagerService");

	AAthenaGameState_OnRep_ReplicatedContestManagerService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedBootyStorageService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedBootyStorageService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedBootyStorageService");

	AAthenaGameState_OnRep_ReplicatedBootyStorageService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_ReplicatedAllianceService
// (Final, Native, Private)
void AAthenaGameState::OnRep_ReplicatedAllianceService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_ReplicatedAllianceService");

	AAthenaGameState_OnRep_ReplicatedAllianceService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_IsXboxGamePadOnlyServer
// (Final, Native, Private)
void AAthenaGameState::OnRep_IsXboxGamePadOnlyServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_IsXboxGamePadOnlyServer");

	AAthenaGameState_OnRep_IsXboxGamePadOnlyServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_GenericMarkerService
// (Final, Native, Private)
void AAthenaGameState::OnRep_GenericMarkerService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_GenericMarkerService");

	AAthenaGameState_OnRep_GenericMarkerService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_DebugTeleportationDestinationService
// (Final, Native, Private)
void AAthenaGameState::OnRep_DebugTeleportationDestinationService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_DebugTeleportationDestinationService");

	AAthenaGameState_OnRep_DebugTeleportationDestinationService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_CommodityDemandService
// (Final, Native, Private)
void AAthenaGameState::OnRep_CommodityDemandService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_CommodityDemandService");

	AAthenaGameState_OnRep_CommodityDemandService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_CargoRunService
// (Final, Native, Private)
void AAthenaGameState::OnRep_CargoRunService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_CargoRunService");

	AAthenaGameState_OnRep_CargoRunService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaGameState.OnRep_CampaignService
// (Final, Native, Private)
void AAthenaGameState::OnRep_CampaignService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaGameState.OnRep_CampaignService");

	AAthenaGameState_OnRep_CampaignService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAthenaGameState::AfterRead()
{
	AServiceProviderGameState::AfterRead();

	READ_PTR_FULL(WindService, AWindService);
	READ_PTR_FULL(PlayerManagerService, APlayerManagerService);
	READ_PTR_FULL(ShipService, AShipService);
	READ_PTR_FULL(WatercraftService, AWatercraftService);
	READ_PTR_FULL(TimeService, ATimeService);
	READ_PTR_FULL(HealthService, UHealthCustomizationService);
	READ_PTR_FULL(WaterService, AFFTWaterService);
	READ_PTR_FULL(StormService, AStormService);
	READ_PTR_FULL(CrewService, ACrewService);
	READ_PTR_FULL(ContestZoneService, AContestZoneService);
	READ_PTR_FULL(ContestRowboatsService, AContestRowboatsService);
	READ_PTR_FULL(IslandService, AIslandService);
	READ_PTR_FULL(NPCService, ANPCService);
	READ_PTR_FULL(SkellyFortService, ASkellyFortService);
	READ_PTR_FULL(AIDioramaService, AAIDioramaService);
	READ_PTR_FULL(AshenLordEncounterService, AAshenLordEncounterService);
	READ_PTR_FULL(AggressiveGhostShipsEncounterService, AAggressiveGhostShipsEncounterService);
	READ_PTR_FULL(TallTaleService, ATallTaleService);
	READ_PTR_FULL(AIShipObstacleService, AAIShipObstacleService);
	READ_PTR_FULL(AIShipService, AAIShipService);
	READ_PTR_FULL(AITargetService, AAITargetService);
	READ_PTR_FULL(ShipLiveryCatalogueService, UShipLiveryCatalogueService);
	READ_PTR_FULL(ContestManagerService, AContestManagerService);
	READ_PTR_FULL(DrawDebugService, ADrawDebugService);
	READ_PTR_FULL(WorldEventZoneService, AWorldEventZoneService);
	READ_PTR_FULL(WorldResourceRegistry, UWorldResourceRegistry);
	READ_PTR_FULL(KrakenService, AKrakenService);
	READ_PTR_FULL(PlayerNameService, UPlayerNameService);
	READ_PTR_FULL(TinySharkService, ATinySharkService);
	READ_PTR_FULL(ProjectileService, AProjectileService);
	READ_PTR_FULL(LaunchableProjectileService, ULaunchableProjectileService);
	READ_PTR_FULL(ServerNotificationsService, UServerNotificationsService);
	READ_PTR_FULL(AIManagerService, AAIManagerService);
	READ_PTR_FULL(AIEncounterService, AAIEncounterService);
	READ_PTR_FULL(AIEncounterGenerationService, AAIEncounterGenerationService);
	READ_PTR_FULL(EncounterService, UEncounterService);
	READ_PTR_FULL(GameEventSchedulerService, UGameEventSchedulerService);
	READ_PTR_FULL(HideoutService, UHideoutService);
	READ_PTR_FULL(StreamedLevelService, UAthenaStreamedLevelService);
	READ_PTR_FULL(LocationProviderService, ULocationProviderService);
	READ_PTR_FULL(HoleService, AHoleService);
	READ_PTR_FULL(PlayerBuriedTreasureService, APlayerBuriedTreasureService);
	READ_PTR_FULL(LoadoutService, ULoadoutService);
	READ_PTR_FULL(OcclusionService, UOcclusionService);
	READ_PTR_FULL(PetsService, UPetsService);
	READ_PTR_FULL(AthenaAITeamsService, UAthenaAITeamsService);
	READ_PTR_FULL(AllianceService, AAllianceService);
	READ_PTR_FULL(ReapersMarkService, AReapersMarkService);
	READ_PTR_FULL(EmissaryLevelService, AEmissaryLevelService);
	READ_PTR_FULL(CampaignService, ACampaignService);
	READ_PTR_FULL(FlamesOfFateSettingsService, AFlamesOfFateSettingsService);
	READ_PTR_FULL(ServiceStatusNotificationsService, AServiceStatusNotificationsService);
	READ_PTR_FULL(MigrationService, UMigrationService);
	READ_PTR_FULL(ShroudBreakerService, AShroudBreakerService);
	READ_PTR_FULL(ServerUpdateReportingService, UServerUpdateReportingService);
	READ_PTR_FULL(GenericMarkerService, AGenericMarkerService);
	READ_PTR_FULL(MechanismsService, AMechanismsService);
	READ_PTR_FULL(MerchantContractsService, UMerchantContractsService);
	READ_PTR_FULL(ShipFactory, UShipFactory);
	READ_PTR_FULL(RewindPhysicsService, URewindPhysicsService);
	READ_PTR_FULL(NotificationMessagesDataAsset, UNotificationMessagesDataAsset);
	READ_PTR_FULL(ProjectileCooldownService, AProjectileCooldownService);
	READ_PTR_FULL(IslandReservationService, UIslandReservationService);
	READ_PTR_FULL(PortalService, APortalService);
	READ_PTR_FULL(MeshMemoryConstraintService, UMeshMemoryConstraintService);
	READ_PTR_FULL(BootyStorageService, ABootyStorageService);
	READ_PTR_FULL(SpireService, ASpireService);
	READ_PTR_FULL(AirGivingService, UAirGivingService);
	READ_PTR_FULL(CutsceneService, UCutsceneService);
	READ_PTR_FULL(CargoRunService, ACargoRunService);
	READ_PTR_FULL(CommodityDemandService, ACommodityDemandService);
	READ_PTR_FULL(DebugTeleportationDestinationService, ADebugTeleportationDestinationService);
	READ_PTR_FULL(SeasonProgressionUIService, ASeasonProgressionUIService);
	READ_PTR_FULL(TunnelsOfTheDamnedService, UTunnelsOfTheDamnedService);
	READ_PTR_FULL(WorldSequenceService, UWorldSequenceService);
	READ_PTR_FULL(CustomVaultService, UCustomVaultService);
}

void AAthenaGameState::BeforeDelete()
{
	AServiceProviderGameState::BeforeDelete();

	DELE_PTR_FULL(WindService);
	DELE_PTR_FULL(PlayerManagerService);
	DELE_PTR_FULL(ShipService);
	DELE_PTR_FULL(WatercraftService);
	DELE_PTR_FULL(TimeService);
	DELE_PTR_FULL(HealthService);
	DELE_PTR_FULL(WaterService);
	DELE_PTR_FULL(StormService);
	DELE_PTR_FULL(CrewService);
	DELE_PTR_FULL(ContestZoneService);
	DELE_PTR_FULL(ContestRowboatsService);
	DELE_PTR_FULL(IslandService);
	DELE_PTR_FULL(NPCService);
	DELE_PTR_FULL(SkellyFortService);
	DELE_PTR_FULL(AIDioramaService);
	DELE_PTR_FULL(AshenLordEncounterService);
	DELE_PTR_FULL(AggressiveGhostShipsEncounterService);
	DELE_PTR_FULL(TallTaleService);
	DELE_PTR_FULL(AIShipObstacleService);
	DELE_PTR_FULL(AIShipService);
	DELE_PTR_FULL(AITargetService);
	DELE_PTR_FULL(ShipLiveryCatalogueService);
	DELE_PTR_FULL(ContestManagerService);
	DELE_PTR_FULL(DrawDebugService);
	DELE_PTR_FULL(WorldEventZoneService);
	DELE_PTR_FULL(WorldResourceRegistry);
	DELE_PTR_FULL(KrakenService);
	DELE_PTR_FULL(PlayerNameService);
	DELE_PTR_FULL(TinySharkService);
	DELE_PTR_FULL(ProjectileService);
	DELE_PTR_FULL(LaunchableProjectileService);
	DELE_PTR_FULL(ServerNotificationsService);
	DELE_PTR_FULL(AIManagerService);
	DELE_PTR_FULL(AIEncounterService);
	DELE_PTR_FULL(AIEncounterGenerationService);
	DELE_PTR_FULL(EncounterService);
	DELE_PTR_FULL(GameEventSchedulerService);
	DELE_PTR_FULL(HideoutService);
	DELE_PTR_FULL(StreamedLevelService);
	DELE_PTR_FULL(LocationProviderService);
	DELE_PTR_FULL(HoleService);
	DELE_PTR_FULL(PlayerBuriedTreasureService);
	DELE_PTR_FULL(LoadoutService);
	DELE_PTR_FULL(OcclusionService);
	DELE_PTR_FULL(PetsService);
	DELE_PTR_FULL(AthenaAITeamsService);
	DELE_PTR_FULL(AllianceService);
	DELE_PTR_FULL(ReapersMarkService);
	DELE_PTR_FULL(EmissaryLevelService);
	DELE_PTR_FULL(CampaignService);
	DELE_PTR_FULL(FlamesOfFateSettingsService);
	DELE_PTR_FULL(ServiceStatusNotificationsService);
	DELE_PTR_FULL(MigrationService);
	DELE_PTR_FULL(ShroudBreakerService);
	DELE_PTR_FULL(ServerUpdateReportingService);
	DELE_PTR_FULL(GenericMarkerService);
	DELE_PTR_FULL(MechanismsService);
	DELE_PTR_FULL(MerchantContractsService);
	DELE_PTR_FULL(ShipFactory);
	DELE_PTR_FULL(RewindPhysicsService);
	DELE_PTR_FULL(NotificationMessagesDataAsset);
	DELE_PTR_FULL(ProjectileCooldownService);
	DELE_PTR_FULL(IslandReservationService);
	DELE_PTR_FULL(PortalService);
	DELE_PTR_FULL(MeshMemoryConstraintService);
	DELE_PTR_FULL(BootyStorageService);
	DELE_PTR_FULL(SpireService);
	DELE_PTR_FULL(AirGivingService);
	DELE_PTR_FULL(CutsceneService);
	DELE_PTR_FULL(CargoRunService);
	DELE_PTR_FULL(CommodityDemandService);
	DELE_PTR_FULL(DebugTeleportationDestinationService);
	DELE_PTR_FULL(SeasonProgressionUIService);
	DELE_PTR_FULL(TunnelsOfTheDamnedService);
	DELE_PTR_FULL(WorldSequenceService);
	DELE_PTR_FULL(CustomVaultService);
}

void UAthenaGameUserSettings::AfterRead()
{
	UGameUserSettings::AfterRead();

}

void UAthenaGameUserSettings::BeforeDelete()
{
	UGameUserSettings::BeforeDelete();

}

void UAthenaGameViewportClient::AfterRead()
{
	UGameViewportClient::AfterRead();

}

void UAthenaGameViewportClient::BeforeDelete()
{
	UGameViewportClient::BeforeDelete();

}

void UAthenaLocalPlayerManager::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaLocalPlayerManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaLocalPlayerReengage::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaLocalPlayerReengage::BeforeDelete()
{
	UObject::BeforeDelete();

}

void AAthenaPlayerCameraManager::AfterRead()
{
	APlayerCameraManager::AfterRead();

}

void AAthenaPlayerCameraManager::BeforeDelete()
{
	APlayerCameraManager::BeforeDelete();

}

// Function Athena.AthenaPlayerCharacterTestFunctions.ForceShipRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaPlayerCharacter          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EShipRegion> ShipRegion                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaPlayerCharacterTestFunctions::STATIC_ForceShipRegion(class AAthenaPlayerCharacter* AthenaPlayerCharacter, TEnumAsByte<Athena_EShipRegion> ShipRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacterTestFunctions.ForceShipRegion");

	UAthenaPlayerCharacterTestFunctions_ForceShipRegion_Params params;
	params.AthenaPlayerCharacter = AthenaPlayerCharacter;
	params.ShipRegion = ShipRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacterTestFunctions.ForceReCalculateShipRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaPlayerCharacter          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaPlayerCharacterTestFunctions::STATIC_ForceReCalculateShipRegion(class AAthenaPlayerCharacter* AthenaPlayerCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacterTestFunctions.ForceReCalculateShipRegion");

	UAthenaPlayerCharacterTestFunctions_ForceReCalculateShipRegion_Params params;
	params.AthenaPlayerCharacter = AthenaPlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerCharacterTestFunctions.DisableStatusResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaPlayerCharacter          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  StatusResponseClass            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UAthenaPlayerCharacterTestFunctions::STATIC_DisableStatusResponse(class AAthenaPlayerCharacter* AthenaPlayerCharacter, class UClass* StatusResponseClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerCharacterTestFunctions.DisableStatusResponse");

	UAthenaPlayerCharacterTestFunctions_DisableStatusResponse_Params params;
	params.AthenaPlayerCharacter = AthenaPlayerCharacter;
	params.StatusResponseClass = StatusResponseClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaPlayerCharacterTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaPlayerCharacterTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCharacterAnimaticSettingsInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterAnimaticSettingsInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCharacterAnimaticSettingsComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCharacterAnimaticSettingsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.AthenaPlayerState.OnRep_PlayerIndexOnServer
// (Final, Native, Private)
void AAthenaPlayerState::OnRep_PlayerIndexOnServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerState.OnRep_PlayerIndexOnServer");

	AAthenaPlayerState_OnRep_PlayerIndexOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerState.OnRep_PirateDescription
// (Final, Native, Private)
void AAthenaPlayerState::OnRep_PirateDescription()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerState.OnRep_PirateDescription");

	AAthenaPlayerState_OnRep_PirateDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerState.GetUniquePlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString AAthenaPlayerState::GetUniquePlayerId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerState.GetUniquePlayerId");

	AAthenaPlayerState_GetUniquePlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerState.GetPlayerActivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EPlayerActivityType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EPlayerActivityType> AAthenaPlayerState::GetPlayerActivity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerState.GetPlayerActivity");

	AAthenaPlayerState_GetPlayerActivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerState.GetPirateDesc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPirateDescription      ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FPirateDescription AAthenaPlayerState::GetPirateDesc()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerState.GetPirateDesc");

	AAthenaPlayerState_GetPirateDesc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAthenaPlayerState::AfterRead()
{
	APlayerState::AfterRead();

	READ_PTR_FULL(VoiceChatComponent, UVoiceChatComponent);
}

void AAthenaPlayerState::BeforeDelete()
{
	APlayerState::BeforeDelete();

	DELE_PTR_FULL(VoiceChatComponent);
}

void UMerchantQuestRandomRequiredItemsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMerchantQuestRandomRequiredItemsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoyageRecipeDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVoyageRecipeDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEmergentContestVoyageRecipeDataAsset::AfterRead()
{
	UVoyageRecipeDataAsset::AfterRead();

}

void UEmergentContestVoyageRecipeDataAsset::BeforeDelete()
{
	UVoyageRecipeDataAsset::BeforeDelete();

}

void UVoyageDescDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void UVoyageDescDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UBTDecorator_CanRepair::AfterRead()
{
	UBTDecorator_BaseConditional::AfterRead();

}

void UBTDecorator_CanRepair::BeforeDelete()
{
	UBTDecorator_BaseConditional::BeforeDelete();

}

void UBTDecorator_ShouldCheatPauseBehavior::AfterRead()
{
	UBTDecorator_BaseConditional::AfterRead();

}

void UBTDecorator_ShouldCheatPauseBehavior::BeforeDelete()
{
	UBTDecorator_BaseConditional::BeforeDelete();

}

void UBTDecorator_ShouldCurrentActionStatePauseBehavior::AfterRead()
{
	UBTDecorator_BaseConditional::AfterRead();

}

void UBTDecorator_ShouldCurrentActionStatePauseBehavior::BeforeDelete()
{
	UBTDecorator_BaseConditional::BeforeDelete();

}

void UBTService_DetermineEngageTarget::AfterRead()
{
	UBTService::AfterRead();

}

void UBTService_DetermineEngageTarget::BeforeDelete()
{
	UBTService::BeforeDelete();

}

// Function Athena.BTService_DetermineRecoveryMethod.OnDamageTaken
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      Event                          (ConstParm, Parm, OutParm, ReferenceParm)
void UBTService_DetermineRecoveryMethod::OnDamageTaken(const struct FImpactDamageEvent& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BTService_DetermineRecoveryMethod.OnDamageTaken");

	UBTService_DetermineRecoveryMethod_OnDamageTaken_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBTService_DetermineRecoveryMethod::AfterRead()
{
	UBTService::AfterRead();

	READ_PTR_FULL(CachedAICharacterController, AAthenaAICharacterController);
}

void UBTService_DetermineRecoveryMethod::BeforeDelete()
{
	UBTService::BeforeDelete();

	DELE_PTR_FULL(CachedAICharacterController);
}

// Function Athena.BTService_ObserveTargetMeleeAttacks.OnTargetActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBTService_ObserveTargetMeleeAttacks::OnTargetActorDestroyed(class AActor* TargetActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BTService_ObserveTargetMeleeAttacks.OnTargetActorDestroyed");

	UBTService_ObserveTargetMeleeAttacks_OnTargetActorDestroyed_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBTService_ObserveTargetMeleeAttacks::AfterRead()
{
	UBTService::AfterRead();

}

void UBTService_ObserveTargetMeleeAttacks::BeforeDelete()
{
	UBTService::BeforeDelete();

}

// Function Athena.BTService_ObserveTargetReceivedDamage.OnObservedActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  ObservedActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBTService_ObserveTargetReceivedDamage::OnObservedActorDestroyed(class AActor* ObservedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BTService_ObserveTargetReceivedDamage.OnObservedActorDestroyed");

	UBTService_ObserveTargetReceivedDamage_OnObservedActorDestroyed_Params params;
	params.ObservedActor = ObservedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBTService_ObserveTargetReceivedDamage::AfterRead()
{
	UBTService::AfterRead();

}

void UBTService_ObserveTargetReceivedDamage::BeforeDelete()
{
	UBTService::BeforeDelete();

}

void UBTService_RunLoopingCustomAnimation::AfterRead()
{
	UBTService::AfterRead();

}

void UBTService_RunLoopingCustomAnimation::BeforeDelete()
{
	UBTService::BeforeDelete();

}

void UBTTask_AthenaRunEQSQuery::AfterRead()
{
	UBTTask_RunEQSQuery::AfterRead();

}

void UBTTask_AthenaRunEQSQuery::BeforeDelete()
{
	UBTTask_RunEQSQuery::BeforeDelete();

}

void UBTTask_AthenaRunEQSQueryFromBlackboard::AfterRead()
{
	UBTTask_AthenaRunEQSQuery::AfterRead();

}

void UBTTask_AthenaRunEQSQueryFromBlackboard::BeforeDelete()
{
	UBTTask_AthenaRunEQSQuery::BeforeDelete();

}

void UBTTask_DoesEQSQuerySucceed::AfterRead()
{
	UBTTask_AthenaRunEQSQuery::AfterRead();

}

void UBTTask_DoesEQSQuerySucceed::BeforeDelete()
{
	UBTTask_AthenaRunEQSQuery::BeforeDelete();

}

void UBTTask_CharacterRotateToFaceBBEntry::AfterRead()
{
	UBTTask_RotateToFaceBBEntry::AfterRead();

}

void UBTTask_CharacterRotateToFaceBBEntry::BeforeDelete()
{
	UBTTask_RotateToFaceBBEntry::BeforeDelete();

}

void UBTTask_FlushQueuedAIAbility::AfterRead()
{
	UBTTaskNode::AfterRead();

}

void UBTTask_FlushQueuedAIAbility::BeforeDelete()
{
	UBTTaskNode::BeforeDelete();

}

void UBTTask_FlushQueuedEngageEnemyMethod::AfterRead()
{
	UBTTaskNode::AfterRead();

}

void UBTTask_FlushQueuedEngageEnemyMethod::BeforeDelete()
{
	UBTTaskNode::BeforeDelete();

}

void UBTTask_RotateToFaceBBEntryWithTime::AfterRead()
{
	UBTTask_RotateToFaceBBEntry::AfterRead();

}

void UBTTask_RotateToFaceBBEntryWithTime::BeforeDelete()
{
	UBTTask_RotateToFaceBBEntry::BeforeDelete();

}

void UBTTask_RunOneShotCustomAnimation::AfterRead()
{
	UBTTaskNode::AfterRead();

}

void UBTTask_RunOneShotCustomAnimation::BeforeDelete()
{
	UBTTaskNode::BeforeDelete();

}

void UBTTask_SetRecoveryMethod::AfterRead()
{
	UBTTaskNode::AfterRead();

	READ_PTR_FULL(RecoveryMethod, UClass);
}

void UBTTask_SetRecoveryMethod::BeforeDelete()
{
	UBTTaskNode::BeforeDelete();

	DELE_PTR_FULL(RecoveryMethod);
}

// Function Athena.ShipCurseComponent.OnRep_ActorsAffectedByToggleInteractionsCurse
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<class AActor*>          PreviousActorsAffectedByToggleInteractionsCurse (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UShipCurseComponent::OnRep_ActorsAffectedByToggleInteractionsCurse(TArray<class AActor*> PreviousActorsAffectedByToggleInteractionsCurse)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCurseComponent.OnRep_ActorsAffectedByToggleInteractionsCurse");

	UShipCurseComponent_OnRep_ActorsAffectedByToggleInteractionsCurse_Params params;
	params.PreviousActorsAffectedByToggleInteractionsCurse = PreviousActorsAffectedByToggleInteractionsCurse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipCurseComponent.OnRep_ActiveCurseFX
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<struct FShipActiveCurseFXData> PreviousActiveCurseFX          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UShipCurseComponent::OnRep_ActiveCurseFX(TArray<struct FShipActiveCurseFXData> PreviousActiveCurseFX)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCurseComponent.OnRep_ActiveCurseFX");

	UShipCurseComponent_OnRep_ActiveCurseFX_Params params;
	params.PreviousActiveCurseFX = PreviousActiveCurseFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipCurseComponent.ApplyIntentOnSails
// (Final, Native, Private)
// Parameters:
// float                          InNewIntent                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShipCurseComponent::ApplyIntentOnSails(float InNewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCurseComponent.ApplyIntentOnSails");

	UShipCurseComponent_ApplyIntentOnSails_Params params;
	params.InNewIntent = InNewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShipCurseComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ShipCapstan, ACapstan);
	READ_PTR_FULL(ShipWheel, AWheel);
}

void UShipCurseComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ShipCapstan);
	DELE_PTR_FULL(ShipWheel);
}

void UTallTaleContestRecipeDataAsset::AfterRead()
{
	UVoyageDescDataAsset::AfterRead();

}

void UTallTaleContestRecipeDataAsset::BeforeDelete()
{
	UVoyageDescDataAsset::BeforeDelete();

}

void UContestManagerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UContestManagerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UUIResponceComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OwningPlayerController, AAthenaPlayerController);
}

void UUIResponceComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OwningPlayerController);
}

void UCannonDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UCannonDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UTraceableProjectileInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTraceableProjectileInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.Cannon.SetCannonInteractionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ECannonInteractionState> InInteractionState             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::SetCannonInteractionState(TEnumAsByte<Athena_ECannonInteractionState> InInteractionState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.SetCannonInteractionState");

	ACannon_SetCannonInteractionState_Params params;
	params.InInteractionState = InInteractionState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Server_RequestAim
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          NewPitch                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          NewYaw                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::Server_RequestAim(float NewPitch, float NewYaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Server_RequestAim");

	ACannon_Server_RequestAim_Params params;
	params.NewPitch = NewPitch;
	params.NewYaw = NewYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Server_Fire_WithInstigator
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InPitch                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InYaw                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::Server_Fire_WithInstigator(class AActor* InInstigator, float InPitch, float InYaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Server_Fire_WithInstigator");

	ACannon_Server_Fire_WithInstigator_Params params;
	params.InInstigator = InInstigator;
	params.InPitch = InPitch;
	params.InYaw = InYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Server_Fire
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float                          InPitch                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InYaw                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::Server_Fire(float InPitch, float InYaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Server_Fire");

	ACannon_Server_Fire_Params params;
	params.InPitch = InPitch;
	params.InYaw = InYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.ResetLoadedItemInfoParticles
// (Final, Native, Protected, BlueprintCallable)
void ACannon::ResetLoadedItemInfoParticles()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.ResetLoadedItemInfoParticles");

	ACannon_ResetLoadedItemInfoParticles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.OnRep_ServerYaw
// (Final, Native, Private)
void ACannon::OnRep_ServerYaw()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.OnRep_ServerYaw");

	ACannon_OnRep_ServerYaw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.OnRep_ServerPitch
// (Final, Native, Private)
void ACannon::OnRep_ServerPitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.OnRep_ServerPitch");

	ACannon_OnRep_ServerPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.OnRep_LoadedItemInfo
// (Final, Native, Protected)
void ACannon::OnRep_LoadedItemInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.OnRep_LoadedItemInfo");

	ACannon_OnRep_LoadedItemInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.OnRep_InteractionState
// (Final, Native, Private)
void ACannon::OnRep_InteractionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.OnRep_InteractionState");

	ACannon_OnRep_InteractionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Multicast_TriggerCannonFireEffects
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void ACannon::Multicast_TriggerCannonFireEffects()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Multicast_TriggerCannonFireEffects");

	ACannon_Multicast_TriggerCannonFireEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Multicast_FireProjectile
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class UClass*                  ProjectileType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 AuthoritySpawnLocation         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FGuid                   CannonAttackId                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ACannon::Multicast_FireProjectile(class UClass* ProjectileType, class AActor* InInstigator, const struct FVector& AuthoritySpawnLocation, const struct FVector& LaunchVelocity, const struct FGuid& CannonAttackId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Multicast_FireProjectile");

	ACannon_Multicast_FireProjectile_Params params;
	params.ProjectileType = ProjectileType;
	params.InInstigator = InInstigator;
	params.AuthoritySpawnLocation = AuthoritySpawnLocation;
	params.LaunchVelocity = LaunchVelocity;
	params.CannonAttackId = CannonAttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Multicast_FirePlayer
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InstigatorWasControllingActor  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ACannon::Multicast_FirePlayer(class AActor* InInstigator, bool InstigatorWasControllingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Multicast_FirePlayer");

	ACannon_Multicast_FirePlayer_Params params;
	params.InInstigator = InInstigator;
	params.InstigatorWasControllingActor = InstigatorWasControllingActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.IsReadyToFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ACannon::IsReadyToFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.IsReadyToFire");

	ACannon_IsReadyToFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Cannon.HandleYawInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          YawInput                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::HandleYawInput(float YawInput)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.HandleYawInput");

	ACannon_HandleYawInput_Params params;
	params.YawInput = YawInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.HandlePitchInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          PitchInput                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::HandlePitchInput(float PitchInput)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.HandlePitchInput");

	ACannon_HandlePitchInput_Params params;
	params.PitchInput = PitchInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.GetNormalisedYawRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ACannon::GetNormalisedYawRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.GetNormalisedYawRate");

	ACannon_GetNormalisedYawRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Cannon.GetNormalisedPitchRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ACannon::GetNormalisedPitchRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.GetNormalisedPitchRate");

	ACannon_GetNormalisedPitchRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Cannon.ForceAimCannon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Pitch                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACannon::ForceAimCannon(float Pitch, float Yaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.ForceAimCannon");

	ACannon_ForceAimCannon_Params params;
	params.Pitch = Pitch;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Cannon.Fire
// (Native, Public, BlueprintCallable)
void ACannon::Fire()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Cannon.Fire");

	ACannon_Fire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACannon::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(BaseMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(BarrelMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(FuseMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(CustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(LoadableComponent, ULoadableComponent);
	READ_PTR_FULL(LoadingPointComponent, ULoadingPointComponent);
	READ_PTR_FULL(CannonBarrelInteractionComponent, UChildActorComponent);
	READ_PTR_FULL(ProjectileClass, UClass);
	READ_PTR_FULL(CameraShake, UClass);
	READ_PTR_FULL(FireSfx, UWwiseEvent);
	READ_PTR_FULL(DryFireSfx, UWwiseEvent);
	READ_PTR_FULL(LoadingSfx_Play, UWwiseEvent);
	READ_PTR_FULL(LoadingSfx_Stop, UWwiseEvent);
	READ_PTR_FULL(UnloadingSfx_Play, UWwiseEvent);
	READ_PTR_FULL(UnloadingSfx_Stop, UWwiseEvent);
	READ_PTR_FULL(LoadedPlayerSfx, UWwiseEvent);
	READ_PTR_FULL(UnloadedPlayerSfx, UWwiseEvent);
	READ_PTR_FULL(FiredPlayerSfx, UWwiseEvent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(StartPitchMovement, UWwiseEvent);
	READ_PTR_FULL(StopPitchMovement, UWwiseEvent);
	READ_PTR_FULL(StartYawMovement, UWwiseEvent);
	READ_PTR_FULL(StopYawMovement, UWwiseEvent);
	READ_PTR_FULL(StopMovementAtEnd, UWwiseEvent);
	READ_PTR_FULL(SfxMovementPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(FuseVfxFirstPerson, UObject);
	READ_PTR_FULL(FuseVfxThirdPerson, UObject);
	READ_PTR_FULL(MuzzleFlashVfxFirstPerson, UObject);
	READ_PTR_FULL(MuzzleFlashVfxThirdPerson, UObject);
	READ_PTR_FULL(RadialCategoryFilter, UClass);
	READ_PTR_FULL(DefaultLoadedItemDesc, UClass);
	READ_PTR_FULL(LoadedItemInfo, AItemInfo);
	READ_PTR_FULL(LoadedItemVFXComp, UParticleSystemComponent);
}

void ACannon::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(BaseMeshComponent);
	DELE_PTR_FULL(BarrelMeshComponent);
	DELE_PTR_FULL(FuseMeshComponent);
	DELE_PTR_FULL(CustomizationComponent);
	DELE_PTR_FULL(LoadableComponent);
	DELE_PTR_FULL(LoadingPointComponent);
	DELE_PTR_FULL(CannonBarrelInteractionComponent);
	DELE_PTR_FULL(ProjectileClass);
	DELE_PTR_FULL(CameraShake);
	DELE_PTR_FULL(FireSfx);
	DELE_PTR_FULL(DryFireSfx);
	DELE_PTR_FULL(LoadingSfx_Play);
	DELE_PTR_FULL(LoadingSfx_Stop);
	DELE_PTR_FULL(UnloadingSfx_Play);
	DELE_PTR_FULL(UnloadingSfx_Stop);
	DELE_PTR_FULL(LoadedPlayerSfx);
	DELE_PTR_FULL(UnloadedPlayerSfx);
	DELE_PTR_FULL(FiredPlayerSfx);
	DELE_PTR_FULL(SfxPool);
	DELE_PTR_FULL(StartPitchMovement);
	DELE_PTR_FULL(StopPitchMovement);
	DELE_PTR_FULL(StartYawMovement);
	DELE_PTR_FULL(StopYawMovement);
	DELE_PTR_FULL(StopMovementAtEnd);
	DELE_PTR_FULL(SfxMovementPool);
	DELE_PTR_FULL(FuseVfxFirstPerson);
	DELE_PTR_FULL(FuseVfxThirdPerson);
	DELE_PTR_FULL(MuzzleFlashVfxFirstPerson);
	DELE_PTR_FULL(MuzzleFlashVfxThirdPerson);
	DELE_PTR_FULL(RadialCategoryFilter);
	DELE_PTR_FULL(DefaultLoadedItemDesc);
	DELE_PTR_FULL(LoadedItemInfo);
	DELE_PTR_FULL(LoadedItemVFXComp);
}

void UPlayerTelemetryComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerTelemetryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UIslandEventType::AfterRead()
{
	UObject::AfterRead();

}

void UIslandEventType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTallTaleIslandEventType::AfterRead()
{
	UIslandEventType::AfterRead();

}

void UTallTaleIslandEventType::BeforeDelete()
{
	UIslandEventType::BeforeDelete();

}

void UReapersMarkServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UReapersMarkServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMapTableCanvasDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMapTableCanvasDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoyageProposalDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

	READ_PTR_FULL(TradingCompany, UClass);
	READ_PTR_FULL(VoyageRecipe, UVoyageRecipeDataAsset);
	READ_PTR_FULL(VoyageDesc, UVoyageDescDataAsset);
}

void UVoyageProposalDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

	DELE_PTR_FULL(TradingCompany);
	DELE_PTR_FULL(VoyageRecipe);
	DELE_PTR_FULL(VoyageDesc);
}

void UIslandEventHUDData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UIslandEventHUDData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.IslandEventTrackerComponent.OnRep_EventData
// (Final, Native, Private)
void UIslandEventTrackerComponent::OnRep_EventData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandEventTrackerComponent.OnRep_EventData");

	UIslandEventTrackerComponent_OnRep_EventData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UIslandEventTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandEventTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UIslandEventTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandEventTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AthenaPlayerController.Server_ReportPlayerDelta
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 InVector                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void AAthenaPlayerController::Server_ReportPlayerDelta(const struct FVector& InVector)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.Server_ReportPlayerDelta");

	AAthenaPlayerController_Server_ReportPlayerDelta_Params params;
	params.InVector = InVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerController.Server_ReportPerformanceMetrics
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          InData                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void AAthenaPlayerController::Server_ReportPerformanceMetrics(TArray<unsigned char> InData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.Server_ReportPerformanceMetrics");

	AAthenaPlayerController_Server_ReportPerformanceMetrics_Params params;
	params.InData = InData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerController.Server_ExecuteCommand
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash)
void AAthenaPlayerController::Server_ExecuteCommand(const struct FString& Command)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.Server_ExecuteCommand");

	AAthenaPlayerController_Server_ExecuteCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerController.IsPirateLegend
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerController::IsPirateLegend()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.IsPirateLegend");

	AAthenaPlayerController_IsPirateLegend_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerController.GetPlayerStreamingReferenceLocation
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaPlayerController::GetPlayerStreamingReferenceLocation(struct FVector* Location)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.GetPlayerStreamingReferenceLocation");

	AAthenaPlayerController_GetPlayerStreamingReferenceLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerController.GetAthenaCheatManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAthenaCheatManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAthenaCheatManager* AAthenaPlayerController::GetAthenaCheatManager()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.GetAthenaCheatManager");

	AAthenaPlayerController_GetAthenaCheatManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaPlayerController.EOS
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Command                        (Parm, ZeroConstructor, HasGetValueTypeHash)
void AAthenaPlayerController::EOS(const struct FString& Command)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.EOS");

	AAthenaPlayerController_EOS_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerController.EnableAutoStrafe
// (Final, Exec, Native, Public)
// Parameters:
// bool                           InEnabled                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AAthenaPlayerController::EnableAutoStrafe(bool InEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.EnableAutoStrafe");

	AAthenaPlayerController_EnableAutoStrafe_Params params;
	params.InEnabled = InEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerController.AddYawRotationInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Input                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELookAtRotationType> RotationType                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaPlayerController::AddYawRotationInput(float Input, TEnumAsByte<Athena_ELookAtRotationType> RotationType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.AddYawRotationInput");

	AAthenaPlayerController_AddYawRotationInput_Params params;
	params.Input = Input;
	params.RotationType = RotationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerController.AddPitchRotationInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Input                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELookAtRotationType> RotationType                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaPlayerController::AddPitchRotationInput(float Input, TEnumAsByte<Athena_ELookAtRotationType> RotationType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerController.AddPitchRotationInput");

	AAthenaPlayerController_AddPitchRotationInput_Params params;
	params.Input = Input;
	params.RotationType = RotationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAthenaPlayerController::AfterRead()
{
	ATestablePlayerController::AfterRead();

	READ_PTR_FULL(PioneerComponent, UPioneerComponent);
	READ_PTR_FULL(PlayerPermissionsComponent, UPlayerPermissionsComponent);
	READ_PTR_FULL(PlayerTelemetryComponent, UPlayerTelemetryComponent);
	READ_PTR_FULL(PlayerStatsComponent, UPlayerStatsComponent);
	READ_PTR_FULL(PlayerSeasonProgressionComponent, UPlayerSeasonProgressionComponent);
	READ_PTR_FULL(PlayerHeroStatsComponent, UPlayerHeroStatsComponent);
	READ_PTR_FULL(PlayerWalletComponent, UPlayerWalletComponent);
	READ_PTR_FULL(BoxedRpcDispatcherComponent, UBoxedRpcDispatcherComponent);
	READ_PTR_FULL(PlayerEntitlementComponent, UPlayerEntitlementComponent);
	READ_PTR_FULL(PlayerMigratableStatusComponent, UPlayerMigratableStatusComponent);
	READ_PTR_FULL(EmblemComponent, UEmblemComponent);
	READ_PTR_FULL(PlayerCompanyComponent, UPlayerCompanyComponent);
	READ_PTR_FULL(LeaderboardComponent, ULeaderboardComponent);
	READ_PTR_FULL(RewardComponent, URewardComponent);
	READ_PTR_FULL(PlayerNonVerbalComponent, UPlayerNonVerbalComponent);
	READ_PTR_FULL(PlayerCrewComponent, UPlayerCrewComponent);
	READ_PTR_FULL(PlayerMuteComponent, UPlayerMuteComponent);
	READ_PTR_FULL(PlayerUIReturnedResponceComponent, UUIResponceComponent);
	READ_PTR_FULL(PopUpNotificationComponent, UPopUpNotificationComponent);
	READ_PTR_FULL(EncounterListenerComponent, UEncounterListenerComponent);
	READ_PTR_FULL(CharacterAnimaticSettingsComponent, UCharacterAnimaticSettingsComponent);
	READ_PTR_FULL(TutorialComponent, UAthenaTutorialComponent);
	READ_PTR_FULL(ContextualTutorialComponent, UContextualTutorialComponent);
	READ_PTR_FULL(ShantySelectionComponent, UShantySelectionComponent);
	READ_PTR_FULL(TutorialManagerComponent, UTutorialManager);
	READ_PTR_FULL(EmissaryActionRewardBoostComponent, UEmissaryActionRewardBoostComponent);
	READ_PTR_FULL(PlayerMysteriousNoteComponent, UPlayerMysteriousNoteComponent);
	READ_PTR_FULL(EmissaryParticipantComponent, UEmissaryParticipantComponent);
	READ_PTR_FULL(CommodityPurchaseTrackingComponent, UCommodityPurchaseTrackingComponent);
	READ_PTR_FULL(PlayerActivityComponent, UPlayerActivityComponent);
	READ_PTR_FULL(IslandEventTrackerComponent, UIslandEventTrackerComponent);
	READ_PTR_FULL(CampaignComponent, UCampaignComponent);
	READ_PTR_FULL(CinematicCameraController, ACinematicCameraController);
	READ_PTR_FULL(PromptsLocalService, UPromptsLocalService);
	READ_PTR_FULL(AutoCentreCurve, UCurveFloat);
}

void AAthenaPlayerController::BeforeDelete()
{
	ATestablePlayerController::BeforeDelete();

	DELE_PTR_FULL(PioneerComponent);
	DELE_PTR_FULL(PlayerPermissionsComponent);
	DELE_PTR_FULL(PlayerTelemetryComponent);
	DELE_PTR_FULL(PlayerStatsComponent);
	DELE_PTR_FULL(PlayerSeasonProgressionComponent);
	DELE_PTR_FULL(PlayerHeroStatsComponent);
	DELE_PTR_FULL(PlayerWalletComponent);
	DELE_PTR_FULL(BoxedRpcDispatcherComponent);
	DELE_PTR_FULL(PlayerEntitlementComponent);
	DELE_PTR_FULL(PlayerMigratableStatusComponent);
	DELE_PTR_FULL(EmblemComponent);
	DELE_PTR_FULL(PlayerCompanyComponent);
	DELE_PTR_FULL(LeaderboardComponent);
	DELE_PTR_FULL(RewardComponent);
	DELE_PTR_FULL(PlayerNonVerbalComponent);
	DELE_PTR_FULL(PlayerCrewComponent);
	DELE_PTR_FULL(PlayerMuteComponent);
	DELE_PTR_FULL(PlayerUIReturnedResponceComponent);
	DELE_PTR_FULL(PopUpNotificationComponent);
	DELE_PTR_FULL(EncounterListenerComponent);
	DELE_PTR_FULL(CharacterAnimaticSettingsComponent);
	DELE_PTR_FULL(TutorialComponent);
	DELE_PTR_FULL(ContextualTutorialComponent);
	DELE_PTR_FULL(ShantySelectionComponent);
	DELE_PTR_FULL(TutorialManagerComponent);
	DELE_PTR_FULL(EmissaryActionRewardBoostComponent);
	DELE_PTR_FULL(PlayerMysteriousNoteComponent);
	DELE_PTR_FULL(EmissaryParticipantComponent);
	DELE_PTR_FULL(CommodityPurchaseTrackingComponent);
	DELE_PTR_FULL(PlayerActivityComponent);
	DELE_PTR_FULL(IslandEventTrackerComponent);
	DELE_PTR_FULL(CampaignComponent);
	DELE_PTR_FULL(CinematicCameraController);
	DELE_PTR_FULL(PromptsLocalService);
	DELE_PTR_FULL(AutoCentreCurve);
}

// Function Athena.OnlineAthenaPlayerController.ModifyActiveState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           IsActive                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AOnlineAthenaPlayerController::ModifyActiveState(bool IsActive)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OnlineAthenaPlayerController.ModifyActiveState");

	AOnlineAthenaPlayerController_ModifyActiveState_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OnlineAthenaPlayerController.IsClientAndInActiveGameplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AOnlineAthenaPlayerController::IsClientAndInActiveGameplay()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OnlineAthenaPlayerController.IsClientAndInActiveGameplay");

	AOnlineAthenaPlayerController_IsClientAndInActiveGameplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AOnlineAthenaPlayerController::AfterRead()
{
	AAthenaPlayerController::AfterRead();

}

void AOnlineAthenaPlayerController::BeforeDelete()
{
	AAthenaPlayerController::BeforeDelete();

}

// Function Athena.TestAthenaPlayerController.TestConsoleExecutableFunction
// (Final, Exec, Native, Public)
void ATestAthenaPlayerController::TestConsoleExecutableFunction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestAthenaPlayerController.TestConsoleExecutableFunction");

	ATestAthenaPlayerController_TestConsoleExecutableFunction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestAthenaPlayerController.GrantDebugMenuPermissions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           AllowAccess                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ATestAthenaPlayerController::GrantDebugMenuPermissions(bool AllowAccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestAthenaPlayerController.GrantDebugMenuPermissions");

	ATestAthenaPlayerController_GrantDebugMenuPermissions_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestAthenaPlayerController.FakeInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                    Key                            (Parm)
void ATestAthenaPlayerController::FakeInput(const struct FKey& Key)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestAthenaPlayerController.FakeInput");

	ATestAthenaPlayerController_FakeInput_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestAthenaPlayerController.FakeAxisInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                    Key                            (Parm)
// float                          Delta                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DeltaTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATestAthenaPlayerController::FakeAxisInput(const struct FKey& Key, float Delta, float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestAthenaPlayerController.FakeAxisInput");

	ATestAthenaPlayerController_FakeAxisInput_Params params;
	params.Key = Key;
	params.Delta = Delta;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATestAthenaPlayerController::AfterRead()
{
	AAthenaPlayerController::AfterRead();

	READ_PTR_FULL(LastReceivedForceFeedbackEffect, UForceFeedbackEffect);
}

void ATestAthenaPlayerController::BeforeDelete()
{
	AAthenaPlayerController::BeforeDelete();

	DELE_PTR_FULL(LastReceivedForceFeedbackEffect);
}

void ATestAthenaPlayerControllerWithAthenaPlayerCameraManager::AfterRead()
{
	ATestAthenaPlayerController::AfterRead();

}

void ATestAthenaPlayerControllerWithAthenaPlayerCameraManager::BeforeDelete()
{
	ATestAthenaPlayerController::BeforeDelete();

}

void UPlayerRelevancyServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerRelevancyServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TestPlayerRelevancyAthenaPlayerController.QueryRelevancyService
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Timeout                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATestPlayerRelevancyAthenaPlayerController::QueryRelevancyService(float Timeout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestPlayerRelevancyAthenaPlayerController.QueryRelevancyService");

	ATestPlayerRelevancyAthenaPlayerController_QueryRelevancyService_Params params;
	params.Timeout = Timeout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATestPlayerRelevancyAthenaPlayerController::AfterRead()
{
	AAthenaPlayerController::AfterRead();

}

void ATestPlayerRelevancyAthenaPlayerController::BeforeDelete()
{
	AAthenaPlayerController::BeforeDelete();

}

// Function Athena.AthenaPlayerControllerTestFunctions.TestAthenaPlayerControllerDisableNormalInputHandling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* AthenaPlayerController         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaPlayerControllerTestFunctions::STATIC_TestAthenaPlayerControllerDisableNormalInputHandling(class AAthenaPlayerController* AthenaPlayerController)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerControllerTestFunctions.TestAthenaPlayerControllerDisableNormalInputHandling");

	UAthenaPlayerControllerTestFunctions_TestAthenaPlayerControllerDisableNormalInputHandling_Params params;
	params.AthenaPlayerController = AthenaPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerControllerTestFunctions.AddEntitlementDescToInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  EntitlementDesc                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UAthenaPlayerControllerTestFunctions::STATIC_AddEntitlementDescToInventory(class AAthenaPlayerController* Controller, class UClass* EntitlementDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerControllerTestFunctions.AddEntitlementDescToInventory");

	UAthenaPlayerControllerTestFunctions_AddEntitlementDescToInventory_Params params;
	params.Controller = Controller;
	params.EntitlementDesc = EntitlementDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaPlayerControllerTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaPlayerControllerTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.TestAthenaPlayerState.SetUniquePlayerID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 InUniquePlayerId               (Parm, ZeroConstructor, HasGetValueTypeHash)
void ATestAthenaPlayerState::SetUniquePlayerID(const struct FString& InUniquePlayerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestAthenaPlayerState.SetUniquePlayerID");

	ATestAthenaPlayerState_SetUniquePlayerID_Params params;
	params.InUniquePlayerId = InUniquePlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATestAthenaPlayerState::AfterRead()
{
	AAthenaPlayerState::AfterRead();

}

void ATestAthenaPlayerState::BeforeDelete()
{
	AAthenaPlayerState::BeforeDelete();

}

// Function Athena.AthenaPlayerZonePenetrationTrackerComponent.OnOverlapEnd
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaPlayerZonePenetrationTrackerComponent::OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerZonePenetrationTrackerComponent.OnOverlapEnd");

	UAthenaPlayerZonePenetrationTrackerComponent_OnOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaPlayerZonePenetrationTrackerComponent.OnOverlapBegin
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UAthenaPlayerZonePenetrationTrackerComponent::OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaPlayerZonePenetrationTrackerComponent.OnOverlapBegin");

	UAthenaPlayerZonePenetrationTrackerComponent_OnOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaPlayerZonePenetrationTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ShapeComponent, UShapeComponent);
}

void UAthenaPlayerZonePenetrationTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ShapeComponent);
}

void UAthenaServerIdentityManager::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaServerIdentityManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaSpringArmComponent::AfterRead()
{
	USpringArmComponent::AfterRead();

}

void UAthenaSpringArmComponent::BeforeDelete()
{
	USpringArmComponent::BeforeDelete();

}

// Function Athena.AthenaTextRender.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AAthenaTextRender::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaTextRender.OnTextCanvasUpdate");

	AAthenaTextRender_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAthenaTextRender::AfterRead()
{
	AStaticMeshActor::AfterRead();

	READ_PTR_FULL(Font, UFont);
	READ_PTR_FULL(AthenaTextRenderTarget, UCanvasRenderTarget2D);
}

void AAthenaTextRender::BeforeDelete()
{
	AStaticMeshActor::BeforeDelete();

	DELE_PTR_FULL(Font);
	DELE_PTR_FULL(AthenaTextRenderTarget);
}

void UVoyageCheckpointProposalDesc::AfterRead()
{
	UVoyageProposalDesc::AfterRead();

}

void UVoyageCheckpointProposalDesc::BeforeDelete()
{
	UVoyageProposalDesc::BeforeDelete();

}

void AWorldSafeRegion::AfterRead()
{
	ABlockingVolume::AfterRead();

}

void AWorldSafeRegion::BeforeDelete()
{
	ABlockingVolume::BeforeDelete();

}

void AAthenaWorldSettings::AfterRead()
{
	AWorldSettings::AfterRead();

	READ_PTR_FULL(BuoyantObjectSpawnParams, UBuoyantObjectSpawnParamsDataAsset);
	READ_PTR_FULL(SeaRockLocations, USeaRockDataAsset);
	READ_PTR_FULL(SpireLevels, USpireStreamedLevelDataAsset);
	READ_PTR_FULL(IslandDataAsset, UIslandDataAsset);
	READ_PTR_FULL(PrebakedIslandData, UPrebakedIslandAsset);
	READ_PTR_FULL(MapTableCanvasData, UMapTableCanvasDataAsset);
	READ_PTR_FULL(TutorialTale, UVoyageDescDataAsset);
	READ_PTR_FULL(DefaultGameEventSchedulerSettings, UGameEventSchedulerSettingsAsset);
	READ_PTR_FULL(StormServiceSettings, UStormServiceAsset);
}

void AAthenaWorldSettings::BeforeDelete()
{
	AWorldSettings::BeforeDelete();

	DELE_PTR_FULL(BuoyantObjectSpawnParams);
	DELE_PTR_FULL(SeaRockLocations);
	DELE_PTR_FULL(SpireLevels);
	DELE_PTR_FULL(IslandDataAsset);
	DELE_PTR_FULL(PrebakedIslandData);
	DELE_PTR_FULL(MapTableCanvasData);
	DELE_PTR_FULL(TutorialTale);
	DELE_PTR_FULL(DefaultGameEventSchedulerSettings);
	DELE_PTR_FULL(StormServiceSettings);
}

void UAtmosphericPressureService::AfterRead()
{
	UObject::AfterRead();

}

void UAtmosphericPressureService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.AudioEmitterPoolSourceInterface.GetAudioEmitterPool
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWwiseObjectPoolWrapper* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UWwiseObjectPoolWrapper* UAudioEmitterPoolSourceInterface::GetAudioEmitterPool()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AudioEmitterPoolSourceInterface.GetAudioEmitterPool");

	UAudioEmitterPoolSourceInterface_GetAudioEmitterPool_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAudioEmitterPoolSourceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAudioEmitterPoolSourceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AudioUtilities.UpdateCharacterWadingRtpc
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FWwiseEmitter>   Emitters                       (Parm, ZeroConstructor)
// struct FName                   WadingRtpcName                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SquelchRtpcName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MinRtpcValue                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MaxRtpcValue                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAudioUtilities::STATIC_UpdateCharacterWadingRtpc(class AAthenaCharacter* AthenaCharacter, TArray<struct FWwiseEmitter> Emitters, const struct FName& WadingRtpcName, const struct FName& SquelchRtpcName, float MinRtpcValue, float MaxRtpcValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AudioUtilities.UpdateCharacterWadingRtpc");

	UAudioUtilities_UpdateCharacterWadingRtpc_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Emitters = Emitters;
	params.WadingRtpcName = WadingRtpcName;
	params.SquelchRtpcName = SquelchRtpcName;
	params.MinRtpcValue = MinRtpcValue;
	params.MaxRtpcValue = MaxRtpcValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AudioUtilities.FilterLocalPlayerFootStepSounds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ECharacterFootImpactType> FootImpactType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAudioUtilities::STATIC_FilterLocalPlayerFootStepSounds(TEnumAsByte<Athena_ECharacterFootImpactType> FootImpactType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AudioUtilities.FilterLocalPlayerFootStepSounds");

	UAudioUtilities_FilterLocalPlayerFootStepSounds_Params params;
	params.FootImpactType = FootImpactType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAudioUtilities::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAudioUtilities::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UBaitRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

	READ_PTR_FULL(RemappingAsset, UInventoryItemDescToSlotRemappingPolicyAsset);
	READ_PTR_FULL(BaitItemCategory, UClass);
}

void UBaitRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

	DELE_PTR_FULL(RemappingAsset);
	DELE_PTR_FULL(BaitItemCategory);
}

// Function Athena.BakedDecalComponent.GetTargetTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* UBakedDecalComponent::GetTargetTexture()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.GetTargetTexture");

	UBakedDecalComponent_GetTargetTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BakedDecalComponent.FinishInitialisation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBakedDecalComponent::FinishInitialisation(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.FinishInitialisation");

	UBakedDecalComponent_FinishInitialisation_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BakedDecalComponent.FilterEdges
// (Final, Native, Public, BlueprintCallable)
void UBakedDecalComponent::FilterEdges()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.FilterEdges");

	UBakedDecalComponent_FilterEdges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BakedDecalComponent.DrawDecal
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Position                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 Normal                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          Radius                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          NearDistance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          FarDistance                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CullDistance                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*              DecalTexture                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EBlendMode> BlendMode                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            LODIndex                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBakedDecalComponent::DrawDecal(class UObject* WorldContextObject, const struct FVector& Position, const struct FVector& Normal, float Radius, float NearDistance, float FarDistance, float CullDistance, class UTexture2D* DecalTexture, TEnumAsByte<Engine_EBlendMode> BlendMode, int LODIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.DrawDecal");

	UBakedDecalComponent_DrawDecal_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.Normal = Normal;
	params.Radius = Radius;
	params.NearDistance = NearDistance;
	params.FarDistance = FarDistance;
	params.CullDistance = CullDistance;
	params.DecalTexture = DecalTexture;
	params.BlendMode = BlendMode;
	params.LODIndex = LODIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BakedDecalComponent.CopyToTargetTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                SourceTexture                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBakedDecalComponent::CopyToTargetTexture(class UObject* WorldContextObject, class UTexture* SourceTexture)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.CopyToTargetTexture");

	UBakedDecalComponent_CopyToTargetTexture_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SourceTexture = SourceTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BakedDecalComponent.ClearTargetTexture
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            ClearColor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UBakedDecalComponent::ClearTargetTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.ClearTargetTexture");

	UBakedDecalComponent_ClearTargetTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BakedDecalComponent.AddMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBakedDecalComponent::AddMesh(class UStaticMeshComponent* Mesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BakedDecalComponent.AddMesh");

	UBakedDecalComponent_AddMesh_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBakedDecalComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetTexture, UTextureRenderTarget2D);
}

void UBakedDecalComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetTexture);
}

void UBallastStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UBallastStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void ABaseMerchantCrateItemProxy::AfterRead()
{
	ABootyProxy::AfterRead();

	READ_PTR_FULL(RewindComponent, URewindComponent);
	READ_PTR_FULL(FullGroundImpactSfx, UWwiseEvent);
}

void ABaseMerchantCrateItemProxy::BeforeDelete()
{
	ABootyProxy::BeforeDelete();

	DELE_PTR_FULL(RewindComponent);
	DELE_PTR_FULL(FullGroundImpactSfx);
}

void AMerchantCrateItemProxy::AfterRead()
{
	ABaseMerchantCrateItemProxy::AfterRead();

}

void AMerchantCrateItemProxy::BeforeDelete()
{
	ABaseMerchantCrateItemProxy::BeforeDelete();

}

void AStaticMerchantCrateItemProxy::AfterRead()
{
	ABaseMerchantCrateItemProxy::AfterRead();

}

void AStaticMerchantCrateItemProxy::BeforeDelete()
{
	ABaseMerchantCrateItemProxy::BeforeDelete();

}

void ACargoRunCrateItemProxy::AfterRead()
{
	AMerchantCrateItemProxy::AfterRead();

	READ_PTR_FULL(CargoRunCrateComponent, UCargoRunCrateComponent);
	READ_PTR_FULL(NPCDialogComponent, UNPCDialogComponent);
}

void ACargoRunCrateItemProxy::BeforeDelete()
{
	AMerchantCrateItemProxy::BeforeDelete();

	DELE_PTR_FULL(CargoRunCrateComponent);
	DELE_PTR_FULL(NPCDialogComponent);
}

void AStaticCargoRunCrateItemProxy::AfterRead()
{
	AStaticMerchantCrateItemProxy::AfterRead();

	READ_PTR_FULL(CargoRunCrateComponent, UCargoRunCrateComponent);
	READ_PTR_FULL(NPCDialogComponent, UNPCDialogComponent);
}

void AStaticCargoRunCrateItemProxy::BeforeDelete()
{
	AStaticMerchantCrateItemProxy::BeforeDelete();

	DELE_PTR_FULL(CargoRunCrateComponent);
	DELE_PTR_FULL(NPCDialogComponent);
}

void ADamageableCargoRunCrateItemProxy::AfterRead()
{
	ACargoRunCrateItemProxy::AfterRead();

	READ_PTR_FULL(GatedHealthComponent, UGatedHealthComponent);
	READ_PTR_FULL(VisualHealthResponseComponent, UVisualHealthResponseComponent);
	READ_PTR_FULL(LightweightStatusEffectComponent, ULightWeightStatusEffectManagerComponent);
}

void ADamageableCargoRunCrateItemProxy::BeforeDelete()
{
	ACargoRunCrateItemProxy::BeforeDelete();

	DELE_PTR_FULL(GatedHealthComponent);
	DELE_PTR_FULL(VisualHealthResponseComponent);
	DELE_PTR_FULL(LightweightStatusEffectComponent);
}

void AStaticDamageableCargoRunCrateItemProxy::AfterRead()
{
	AStaticCargoRunCrateItemProxy::AfterRead();

	READ_PTR_FULL(GatedHealthComponent, UGatedHealthComponent);
	READ_PTR_FULL(VisualHealthResponseComponent, UVisualHealthResponseComponent);
	READ_PTR_FULL(LightweightStatusEffectComponent, ULightWeightStatusEffectManagerComponent);
}

void AStaticDamageableCargoRunCrateItemProxy::BeforeDelete()
{
	AStaticCargoRunCrateItemProxy::BeforeDelete();

	DELE_PTR_FULL(GatedHealthComponent);
	DELE_PTR_FULL(VisualHealthResponseComponent);
	DELE_PTR_FULL(LightweightStatusEffectComponent);
}

void AMerchantCrateItemInfo::AfterRead()
{
	ABootyItemInfo::AfterRead();

}

void AMerchantCrateItemInfo::BeforeDelete()
{
	ABootyItemInfo::BeforeDelete();

}

void AMerchantCrate::AfterRead()
{
	ALargeSkeletalMeshWieldableItem::AfterRead();

}

void AMerchantCrate::BeforeDelete()
{
	ALargeSkeletalMeshWieldableItem::BeforeDelete();

}

void AStaticMerchantCrate::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(RewindComponent, URewindComponent);
}

void AStaticMerchantCrate::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(RewindComponent);
}

void AMockMerchantCrateItemProxy::AfterRead()
{
	ABaseMerchantCrateItemProxy::AfterRead();

}

void AMockMerchantCrateItemProxy::BeforeDelete()
{
	ABaseMerchantCrateItemProxy::BeforeDelete();

}

void UMerchantCrateCategoryMock::AfterRead()
{
	UItemCategory::AfterRead();

}

void UMerchantCrateCategoryMock::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void AMerchantCrateItemInfoMock::AfterRead()
{
	AMerchantCrateItemInfo::AfterRead();

}

void AMerchantCrateItemInfoMock::BeforeDelete()
{
	AMerchantCrateItemInfo::BeforeDelete();

}

void ACommonMerchantCrateItemInfoMock::AfterRead()
{
	AMerchantCrateItemInfoMock::AfterRead();

}

void ACommonMerchantCrateItemInfoMock::BeforeDelete()
{
	AMerchantCrateItemInfoMock::BeforeDelete();

}

void ARareMerchantCrateItemInfoMock::AfterRead()
{
	AMerchantCrateItemInfoMock::AfterRead();

}

void ARareMerchantCrateItemInfoMock::BeforeDelete()
{
	AMerchantCrateItemInfoMock::BeforeDelete();

}

void ALegendaryMerchantCrateItemInfoMock::AfterRead()
{
	AMerchantCrateItemInfoMock::AfterRead();

}

void ALegendaryMerchantCrateItemInfoMock::BeforeDelete()
{
	AMerchantCrateItemInfoMock::BeforeDelete();

}

void AMythicalMerchantCrateItemInfoMock::AfterRead()
{
	AMerchantCrateItemInfoMock::AfterRead();

}

void AMythicalMerchantCrateItemInfoMock::BeforeDelete()
{
	AMerchantCrateItemInfoMock::BeforeDelete();

}

void UMerchantCrateItemDescMock::AfterRead()
{
	UBootyItemDesc::AfterRead();

}

void UMerchantCrateItemDescMock::BeforeDelete()
{
	UBootyItemDesc::BeforeDelete();

}

void AMerchantCrateFilledItemProxy::AfterRead()
{
	AStaticMerchantCrateItemProxy::AfterRead();

	READ_PTR_FULL(StorageContainerComponent, UStorageContainerComponent);
}

void AMerchantCrateFilledItemProxy::BeforeDelete()
{
	AStaticMerchantCrateItemProxy::BeforeDelete();

	DELE_PTR_FULL(StorageContainerComponent);
}

void UClientNotificationsService::AfterRead()
{
	UObject::AfterRead();

}

void UClientNotificationsService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UPlayNpcAnimationStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UBasePlayNpcAnimationStepDesc);
	READ_PTR_FULL(NPCDialogComponent, UNPCDialogComponent);
	READ_PTR_FULL(CutSceneActor, ACutSceneActor);
}

void UPlayNpcAnimationStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
	DELE_PTR_FULL(NPCDialogComponent);
	DELE_PTR_FULL(CutSceneActor);
}

void UBasePlayNpcAnimationStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(DialogueData, USceneDialogueData);
	READ_PTR_FULL(LocalMusicZone, UClass);
}

void UBasePlayNpcAnimationStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(DialogueData);
	DELE_PTR_FULL(LocalMusicZone);
}

void UPlayNpcAnimationStepDesc::AfterRead()
{
	UBasePlayNpcAnimationStepDesc::AfterRead();

}

void UPlayNpcAnimationStepDesc::BeforeDelete()
{
	UBasePlayNpcAnimationStepDesc::BeforeDelete();

}

void UPlayGroupNpcAnimationStepDesc::AfterRead()
{
	UBasePlayNpcAnimationStepDesc::AfterRead();

}

void UPlayGroupNpcAnimationStepDesc::BeforeDelete()
{
	UBasePlayNpcAnimationStepDesc::BeforeDelete();

}

void UFlameOfFateContainerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFlameOfFateContainerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UFlamesOfFateSettingsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFlamesOfFateSettingsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.Beacon.Server_OnBeaconLit
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABeacon::Server_OnBeaconLit(class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Beacon.Server_OnBeaconLit");

	ABeacon_Server_OnBeaconLit_Params params;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Beacon.OnRep_OnBeaconDataChanged
// (Final, Native, Public)
// Parameters:
// struct FBeaconData             OldData                        (Parm)
void ABeacon::OnRep_OnBeaconDataChanged(const struct FBeaconData& OldData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Beacon.OnRep_OnBeaconDataChanged");

	ABeacon_OnRep_OnBeaconDataChanged_Params params;
	params.OldData = OldData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Beacon.IsLit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABeacon::IsLit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Beacon.IsLit");

	ABeacon_IsLit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Beacon.ExtinguishFlame
// (Native, Public, BlueprintCallable)
void ABeacon::ExtinguishFlame()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Beacon.ExtinguishFlame");

	ABeacon_ExtinguishFlame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Beacon.Client_OnBeaconLit
// (Event, Public, BlueprintEvent)
void ABeacon::Client_OnBeaconLit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Beacon.Client_OnBeaconLit");

	ABeacon_Client_OnBeaconLit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Beacon.Client_OnBeaconExtinguished
// (Event, Public, BlueprintEvent)
void ABeacon::Client_OnBeaconExtinguished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Beacon.Client_OnBeaconExtinguished");

	ABeacon_Client_OnBeaconExtinguished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABeacon::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMeshComponent);
	READ_PTR_FULL(BeaconActiveParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(PointLight, UPointLightComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(ExtinguishedVFX, UObject);
	READ_PTR_FULL(StartLoopFlameSfx, UWwiseEvent);
	READ_PTR_FULL(StopLoopFlameSfx, UWwiseEvent);
	READ_PTR_FULL(FlameTransferSfx, UWwiseEvent);
	READ_PTR_FULL(ExtinguishedSfx, UWwiseEvent);
	READ_PTR_FULL(BeaconWwisePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ColourChangeCurveFX, UCurveLinearColor);
	READ_PTR_FULL(ColourChangeCurveLight, UCurveLinearColor);
	READ_PTR_FULL(ExtinguishFXComponent, UParticleSystemComponent);
}

void ABeacon::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(BeaconActiveParticleSystem);
	DELE_PTR_FULL(PointLight);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(ExtinguishedVFX);
	DELE_PTR_FULL(StartLoopFlameSfx);
	DELE_PTR_FULL(StopLoopFlameSfx);
	DELE_PTR_FULL(FlameTransferSfx);
	DELE_PTR_FULL(ExtinguishedSfx);
	DELE_PTR_FULL(BeaconWwisePool);
	DELE_PTR_FULL(ColourChangeCurveFX);
	DELE_PTR_FULL(ColourChangeCurveLight);
	DELE_PTR_FULL(ExtinguishFXComponent);
}

void ABrazierMechanismTrigger::AfterRead()
{
	ABeacon::AfterRead();

	READ_PTR_FULL(MechanismTrigger, UMechanismTriggerComponent);
	READ_PTR_FULL(TakeFlameOfFateNotificationID, UClass);
	READ_PTR_FULL(SetFlameOfFateNotificationID, UClass);
}

void ABrazierMechanismTrigger::BeforeDelete()
{
	ABeacon::BeforeDelete();

	DELE_PTR_FULL(MechanismTrigger);
	DELE_PTR_FULL(TakeFlameOfFateNotificationID);
	DELE_PTR_FULL(SetFlameOfFateNotificationID);
}

// Function Athena.FortOfTheDamnedBrazierMechanismTrigger.OnPlinthActivated
// (Native, Event, Protected, BlueprintEvent)
void AFortOfTheDamnedBrazierMechanismTrigger::OnPlinthActivated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FortOfTheDamnedBrazierMechanismTrigger.OnPlinthActivated");

	AFortOfTheDamnedBrazierMechanismTrigger_OnPlinthActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FortOfTheDamnedBrazierMechanismTrigger.OnFortOfTheDamnedComplete
// (Native, Event, Protected, BlueprintEvent)
void AFortOfTheDamnedBrazierMechanismTrigger::OnFortOfTheDamnedComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FortOfTheDamnedBrazierMechanismTrigger.OnFortOfTheDamnedComplete");

	AFortOfTheDamnedBrazierMechanismTrigger_OnFortOfTheDamnedComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFortOfTheDamnedBrazierMechanismTrigger::AfterRead()
{
	ABrazierMechanismTrigger::AfterRead();

}

void AFortOfTheDamnedBrazierMechanismTrigger::BeforeDelete()
{
	ABrazierMechanismTrigger::BeforeDelete();

}

void UBeingRetractedActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UBeingRetractedActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.Bell.RingBell
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           IsInTurbulence                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ABell::RingBell(bool IsInTurbulence)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bell.RingBell");

	ABell_RingBell_Params params;
	params.IsInTurbulence = IsInTurbulence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABell::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(CustomisationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(BellMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(BellRingSFX, UWwiseEvent);
	READ_PTR_FULL(BellRingSfxStorm, UWwiseEvent);
	READ_PTR_FULL(BellPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(BellDynamicMaterial, UMaterialInstanceDynamic);
}

void ABell::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(CustomisationComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(BellMeshComponent);
	DELE_PTR_FULL(BellRingSFX);
	DELE_PTR_FULL(BellRingSfxStorm);
	DELE_PTR_FULL(BellPool);
	DELE_PTR_FULL(BellDynamicMaterial);
}

void UBellDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UBellDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UAtmosphericPressureZoneComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UAtmosphericPressureZoneComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void UBlendedAtmosphericPressureZoneComponent::AfterRead()
{
	UAtmosphericPressureZoneComponent::AfterRead();

	READ_PTR_FULL(WeightFadeCurveNormalised, UCurveFloat);
	READ_PTR_FULL(RadiusFadeCurveNormalised, UCurveFloat);
}

void UBlendedAtmosphericPressureZoneComponent::BeforeDelete()
{
	UAtmosphericPressureZoneComponent::BeforeDelete();

	DELE_PTR_FULL(WeightFadeCurveNormalised);
	DELE_PTR_FULL(RadiusFadeCurveNormalised);
}

void ULightingZoneComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void ULightingZoneComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Athena.BlendedLightingZoneComponent.FadeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlendedLightingZoneComponent::FadeOut(float InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlendedLightingZoneComponent.FadeOut");

	UBlendedLightingZoneComponent_FadeOut_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlendedLightingZoneComponent.FadeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlendedLightingZoneComponent::FadeIn(float InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlendedLightingZoneComponent.FadeIn");

	UBlendedLightingZoneComponent_FadeIn_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBlendedLightingZoneComponent::AfterRead()
{
	ULightingZoneComponent::AfterRead();

	READ_PTR_FULL(FadeCurveNormalised, UCurveFloat);
	READ_PTR_FULL(FadeOutCurveNormalised, UCurveFloat);
}

void UBlendedLightingZoneComponent::BeforeDelete()
{
	ULightingZoneComponent::BeforeDelete();

	DELE_PTR_FULL(FadeCurveNormalised);
	DELE_PTR_FULL(FadeOutCurveNormalised);
}

// Function Athena.BlendedPostProcessingZoneComponentBase.FadeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlendedPostProcessingZoneComponentBase::FadeOut(float InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlendedPostProcessingZoneComponentBase.FadeOut");

	UBlendedPostProcessingZoneComponentBase_FadeOut_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlendedPostProcessingZoneComponentBase.FadeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InTime                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlendedPostProcessingZoneComponentBase::FadeIn(float InTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlendedPostProcessingZoneComponentBase.FadeIn");

	UBlendedPostProcessingZoneComponentBase_FadeIn_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBlendedPostProcessingZoneComponentBase::AfterRead()
{
	UPostProcessComponent::AfterRead();

	READ_PTR_FULL(FadeCurveNormalised, UCurveFloat);
}

void UBlendedPostProcessingZoneComponentBase::BeforeDelete()
{
	UPostProcessComponent::BeforeDelete();

	DELE_PTR_FULL(FadeCurveNormalised);
}

void UBlendedPostProcessingRainZoneComponent::AfterRead()
{
	UBlendedPostProcessingZoneComponentBase::AfterRead();

}

void UBlendedPostProcessingRainZoneComponent::BeforeDelete()
{
	UBlendedPostProcessingZoneComponentBase::BeforeDelete();

}

// Function Athena.BlinkStrafeComponent.OnRep_Blinking
// (Final, RequiredAPI, Native, Private)
void UBlinkStrafeComponent::OnRep_Blinking()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlinkStrafeComponent.OnRep_Blinking");

	UBlinkStrafeComponent_OnRep_Blinking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBlinkStrafeComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Character, AAthenaAICharacter);
	READ_PTR_FULL(OwnerAIController, AAthenaAIControllerBase);
}

void UBlinkStrafeComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Character);
	DELE_PTR_FULL(OwnerAIController);
}

void UBloatingStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UBloatingStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UBlockEarthquakeTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UBlockEarthquakeTaleQuestServiceDesc);
}

void UBlockEarthquakeTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UBlockEarthquakeTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UBlockEarthquakeTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UBlockGeysersTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UBlockGeysersTaleQuestServiceDesc);
}

void UBlockGeysersTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UBlockGeysersTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UBlockGeysersTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UBlockMigrationForCrewTaskStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UBlockMigrationForCrewTaskStepDesc);
	READ_PTR_FULL(TaskStep, UTaleQuestStep);
}

void UBlockMigrationForCrewTaskStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(TaskStep);
}

void UBlockMigrationForCrewTaskStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(TaskDesc, UTaleQuestStepDesc);
}

void UBlockMigrationForCrewTaskStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(TaskDesc);
}

void UBlockVolcanoTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UBlockVolcanoTaleQuestServiceDesc);
}

void UBlockVolcanoTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UBlockVolcanoTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UBlockVolcanoTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

// Function Athena.BlueprintStepBase.SpawnPhasedItem
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  InWhat                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           Tracked                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           Critical                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           DropItemOnSpawn                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FText                   FailureMessage                 (Parm)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UBlueprintStepBase::SpawnPhasedItem(class UClass* InWhat, const struct FTransform& InWhere, bool Tracked, bool Critical, bool DropItemOnSpawn, const struct FText& FailureMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnPhasedItem");

	UBlueprintStepBase_SpawnPhasedItem_Params params;
	params.InWhat = InWhat;
	params.InWhere = InWhere;
	params.Tracked = Tracked;
	params.Critical = Critical;
	params.DropItemOnSpawn = DropItemOnSpawn;
	params.FailureMessage = FailureMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.SpawnPhasedActorAsyncAtActorLocation
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class UClass>        InWhat                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// TAssetPtr<class AActor>        InActorLocation                (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  MapActor                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScriptDelegate         InCompletionDelegate           (Parm, ZeroConstructor, NoDestructor)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::SpawnPhasedActorAsyncAtActorLocation(TAssetPtr<class UClass> InWhat, TAssetPtr<class AActor> InActorLocation, class AActor* MapActor, const struct FScriptDelegate& InCompletionDelegate, const struct FName& SocketName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnPhasedActorAsyncAtActorLocation");

	UBlueprintStepBase_SpawnPhasedActorAsyncAtActorLocation_Params params;
	params.InWhat = InWhat;
	params.InActorLocation = InActorLocation;
	params.MapActor = MapActor;
	params.InCompletionDelegate = InCompletionDelegate;
	params.SocketName = SocketName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SpawnPhasedActorAsync
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TAssetPtr<class UClass>        InWhat                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  MapActor                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScriptDelegate         InCompletionDelegate           (Parm, ZeroConstructor, NoDestructor)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::SpawnPhasedActorAsync(TAssetPtr<class UClass> InWhat, const struct FTransform& InTransform, class AActor* MapActor, const struct FScriptDelegate& InCompletionDelegate, const struct FName& SocketName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnPhasedActorAsync");

	UBlueprintStepBase_SpawnPhasedActorAsync_Params params;
	params.InWhat = InWhat;
	params.InTransform = InTransform;
	params.MapActor = MapActor;
	params.InCompletionDelegate = InCompletionDelegate;
	params.SocketName = SocketName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SpawnPhasedActor
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  InWhat                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  MapActor                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UBlueprintStepBase::SpawnPhasedActor(class UClass* InWhat, const struct FTransform& InTransform, class AActor* MapActor, const struct FName& SocketName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnPhasedActor");

	UBlueprintStepBase_SpawnPhasedActor_Params params;
	params.InWhat = InWhat;
	params.InTransform = InTransform;
	params.MapActor = MapActor;
	params.SocketName = SocketName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.SpawnItem
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  InWhat                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           Tracked                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           Critical                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           DropItemOnSpawn                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FText                   FailureMessage                 (Parm)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UBlueprintStepBase::SpawnItem(class UClass* InWhat, const struct FTransform& InWhere, bool Tracked, bool Critical, bool DropItemOnSpawn, const struct FText& FailureMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnItem");

	UBlueprintStepBase_SpawnItem_Params params;
	params.InWhat = InWhat;
	params.InWhere = InWhere;
	params.Tracked = Tracked;
	params.Critical = Critical;
	params.DropItemOnSpawn = DropItemOnSpawn;
	params.FailureMessage = FailureMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.SpawnGhostMarker
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  RewardMarker                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class AActor*>          SpawnedActors                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
void UBlueprintStepBase::SpawnGhostMarker(class UClass* RewardMarker, TArray<class AActor*> SpawnedActors, const struct FTransform& InWhere)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnGhostMarker");

	UBlueprintStepBase_SpawnGhostMarker_Params params;
	params.RewardMarker = RewardMarker;
	params.SpawnedActors = SpawnedActors;
	params.InWhere = InWhere;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SpawnDroppedItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class APawn*                   InWho                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InWhat                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           Tracked                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           Critical                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FText                   FailureMessage                 (Parm)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UBlueprintStepBase::SpawnDroppedItem(class APawn* InWho, class UClass* InWhat, bool Tracked, bool Critical, const struct FText& FailureMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnDroppedItem");

	UBlueprintStepBase_SpawnDroppedItem_Params params;
	params.InWho = InWho;
	params.InWhat = InWhat;
	params.Tracked = Tracked;
	params.Critical = Critical;
	params.FailureMessage = FailureMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.SpawnActorAsyncWithParams
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TAssetPtr<class UClass>        InWhat                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FTaleActorSpawnParameters SpawnParameters                (ConstParm, Parm, OutParm, ReferenceParm)
// struct FScriptDelegate         InCompletionDelegate           (Parm, ZeroConstructor, NoDestructor)
void UBlueprintStepBase::SpawnActorAsyncWithParams(TAssetPtr<class UClass> InWhat, const struct FTransform& InWhere, const struct FTaleActorSpawnParameters& SpawnParameters, const struct FScriptDelegate& InCompletionDelegate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnActorAsyncWithParams");

	UBlueprintStepBase_SpawnActorAsyncWithParams_Params params;
	params.InWhat = InWhat;
	params.InWhere = InWhere;
	params.SpawnParameters = SpawnParameters;
	params.InCompletionDelegate = InCompletionDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SpawnActorAsync
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TAssetPtr<class UClass>        InWhat                         (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           Tracked                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FScriptDelegate         InCompletionDelegate           (Parm, ZeroConstructor, NoDestructor)
void UBlueprintStepBase::SpawnActorAsync(TAssetPtr<class UClass> InWhat, const struct FTransform& InWhere, bool Tracked, const struct FScriptDelegate& InCompletionDelegate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnActorAsync");

	UBlueprintStepBase_SpawnActorAsync_Params params;
	params.InWhat = InWhat;
	params.InWhere = InWhere;
	params.Tracked = Tracked;
	params.InCompletionDelegate = InCompletionDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SpawnActor
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  InWhat                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           Tracked                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UBlueprintStepBase::SpawnActor(class UClass* InWhat, const struct FTransform& InWhere, bool Tracked)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SpawnActor");

	UBlueprintStepBase_SpawnActor_Params params;
	params.InWhat = InWhat;
	params.InWhere = InWhere;
	params.Tracked = Tracked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.SignalComplete
// (Final, Native, Protected, BlueprintCallable)
void UBlueprintStepBase::SignalComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SignalComplete");

	UBlueprintStepBase_SignalComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SetVariables
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGenericStruct          OutStruct                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UBlueprintStepBase::SetVariables(const struct FGenericStruct& OutStruct)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SetVariables");

	UBlueprintStepBase_SetVariables_Params params;
	params.OutStruct = OutStruct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SetCrewShipProgressionSpawnLocations
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AProgressShipSpawnLocation*> SpawnLocations                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UBlueprintStepBase::SetCrewShipProgressionSpawnLocations(TArray<class AProgressShipSpawnLocation*> SpawnLocations)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SetCrewShipProgressionSpawnLocations");

	UBlueprintStepBase_SetCrewShipProgressionSpawnLocations_Params params;
	params.SpawnLocations = SpawnLocations;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.SetAndLockFlameOfFateForAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
void UBlueprintStepBase::SetAndLockFlameOfFateForAllParticipants()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.SetAndLockFlameOfFateForAllParticipants");

	UBlueprintStepBase_SetAndLockFlameOfFateForAllParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.ResolveActorOnInstancedLevel
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TAssetPtr<class AActor>        ActorToSearch                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UBlueprintStepBase::ResolveActorOnInstancedLevel(TAssetPtr<class AActor> ActorToSearch)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.ResolveActorOnInstancedLevel");

	UBlueprintStepBase_ResolveActorOnInstancedLevel_Params params;
	params.ActorToSearch = ActorToSearch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.ResetAndUnlockFlameOfFateForAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
void UBlueprintStepBase::ResetAndUnlockFlameOfFateForAllParticipants()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.ResetAndUnlockFlameOfFateForAllParticipants");

	UBlueprintStepBase_ResetAndUnlockFlameOfFateForAllParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.RemoveCompassFromAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
void UBlueprintStepBase::RemoveCompassFromAllParticipants()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.RemoveCompassFromAllParticipants");

	UBlueprintStepBase_RemoveCompassFromAllParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.OnParticipantLeave
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  Participant                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::OnParticipantLeave(class AActor* Participant)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.OnParticipantLeave");

	UBlueprintStepBase_OnParticipantLeave_Params params;
	params.Participant = Participant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.OnParticipantJoin
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  Participant                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::OnParticipantJoin(class AActor* Participant)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.OnParticipantJoin");

	UBlueprintStepBase_OnParticipantJoin_Params params;
	params.Participant = Participant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.OnEnd
// (Event, Protected, BlueprintEvent)
void UBlueprintStepBase::OnEnd()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.OnEnd");

	UBlueprintStepBase_OnEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.OnBegin
// (Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<Tales_ETaleQuestStepBeginMode> InBeginMode                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::OnBegin(TEnumAsByte<Tales_ETaleQuestStepBeginMode> InBeginMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.OnBegin");

	UBlueprintStepBase_OnBegin_Params params;
	params.InBeginMode = InBeginMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.BlueprintStepBase.OnActorSpawnedAsyncDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::OnActorSpawnedAsyncDelegate__DelegateSignature(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.BlueprintStepBase.OnActorSpawnedAsyncDelegate__DelegateSignature");

	UBlueprintStepBase_OnActorSpawnedAsyncDelegate__DelegateSignature_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.MarkActorAsNonCritical
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor*                  InWhat                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::MarkActorAsNonCritical(class AActor* InWhat)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.MarkActorAsNonCritical");

	UBlueprintStepBase_MarkActorAsNonCritical_Params params;
	params.InWhat = InWhat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.IsPlayerInValidAliveActionState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerCharacter                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UBlueprintStepBase::IsPlayerInValidAliveActionState(class AAthenaPlayerCharacter* PlayerCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.IsPlayerInValidAliveActionState");

	UBlueprintStepBase_IsPlayerInValidAliveActionState_Params params;
	params.PlayerCharacter = PlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GiveQuestBookToAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::GiveQuestBookToAllParticipants(class AAthenaPlayerCharacter* PlayerToWieldImmediately)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GiveQuestBookToAllParticipants");

	UBlueprintStepBase_GiveQuestBookToAllParticipants_Params params;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.GiveLanternToAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::GiveLanternToAllParticipants(class AAthenaPlayerCharacter* PlayerToWieldImmediately)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GiveLanternToAllParticipants");

	UBlueprintStepBase_GiveLanternToAllParticipants_Params params;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.GiveEnchantedSpyglassToAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::GiveEnchantedSpyglassToAllParticipants(class AAthenaPlayerCharacter* PlayerToWieldImmediately)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GiveEnchantedSpyglassToAllParticipants");

	UBlueprintStepBase_GiveEnchantedSpyglassToAllParticipants_Params params;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.GiveCompassToAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::GiveCompassToAllParticipants(class AAthenaPlayerCharacter* PlayerToWieldImmediately)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GiveCompassToAllParticipants");

	UBlueprintStepBase_GiveCompassToAllParticipants_Params params;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.GiveCommonToolsToAllParticipants
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::GiveCommonToolsToAllParticipants(class AAthenaPlayerCharacter* PlayerToWieldImmediately)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GiveCommonToolsToAllParticipants");

	UBlueprintStepBase_GiveCommonToolsToAllParticipants_Params params;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.GetVariables
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGenericStruct          OutStruct                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UBlueprintStepBase::GetVariables(struct FGenericStruct* OutStruct)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetVariables");

	UBlueprintStepBase_GetVariables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutStruct != nullptr)
		*OutStruct = params.OutStruct;

}


// Function Athena.BlueprintStepBase.GetService
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass*                  ServiceClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UTaleQuestService*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTaleQuestService* UBlueprintStepBase::GetService(class UClass* ServiceClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetService");

	UBlueprintStepBase_GetService_Params params;
	params.ServiceClass = ServiceClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GetParticipants
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>          Participants                   (Parm, OutParm, ZeroConstructor)
void UBlueprintStepBase::GetParticipants(TArray<class AActor*>* Participants)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetParticipants");

	UBlueprintStepBase_GetParticipants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Participants != nullptr)
		*Participants = params.Participants;

}


// Function Athena.BlueprintStepBase.GetGameState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AGameState*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AGameState* UBlueprintStepBase::GetGameState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetGameState");

	UBlueprintStepBase_GetGameState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GetGameInstanceObjectMessagingDispatcher
// (Final, Native, Protected, BlueprintCallable)
void UBlueprintStepBase::GetGameInstanceObjectMessagingDispatcher()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetGameInstanceObjectMessagingDispatcher");

	UBlueprintStepBase_GetGameInstanceObjectMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.GetDefinition
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UObject* UBlueprintStepBase::GetDefinition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetDefinition");

	UBlueprintStepBase_GetDefinition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GetCrewShipSize
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int                            CrewIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UBlueprintStepBase::GetCrewShipSize(int CrewIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetCrewShipSize");

	UBlueprintStepBase_GetCrewShipSize_Params params;
	params.CrewIndex = CrewIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GetCrewShips
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class AShip*>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AShip*> UBlueprintStepBase::GetCrewShips()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetCrewShips");

	UBlueprintStepBase_GetCrewShips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GetCrewPlayers
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AAthenaPlayerCharacter*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AAthenaPlayerCharacter*> UBlueprintStepBase::GetCrewPlayers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetCrewPlayers");

	UBlueprintStepBase_GetCrewPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.GetCrewIds
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FGuid>           CrewIds                        (Parm, OutParm, ZeroConstructor)
void UBlueprintStepBase::GetCrewIds(TArray<struct FGuid>* CrewIds)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.GetCrewIds");

	UBlueprintStepBase_GetCrewIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (CrewIds != nullptr)
		*CrewIds = params.CrewIds;

}


// Function Athena.BlueprintStepBase.FindNamedPointOnTaleActorPtrAsVector
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TAssetPtr<class AActor>        ActorToSearch                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ESpaceType> ReturnInSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UBlueprintStepBase::FindNamedPointOnTaleActorPtrAsVector(TAssetPtr<class AActor> ActorToSearch, const struct FName& GroupName, TEnumAsByte<Athena_ESpaceType> ReturnInSpace, TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.FindNamedPointOnTaleActorPtrAsVector");

	UBlueprintStepBase_FindNamedPointOnTaleActorPtrAsVector_Params params;
	params.ActorToSearch = ActorToSearch;
	params.GroupName = GroupName;
	params.ReturnInSpace = ReturnInSpace;
	params.SearchMethod = SearchMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BlueprintStepBase.FailTale
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   FailureMessage                 (ConstParm, Parm, OutParm, ReferenceParm)
void UBlueprintStepBase::FailTale(const struct FText& FailureMessage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.FailTale");

	UBlueprintStepBase_FailTale_Params params;
	params.FailureMessage = FailureMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.Delay
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
void UBlueprintStepBase::Delay(float Duration, const struct FLatentActionInfo& LatentInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.Delay");

	UBlueprintStepBase_Delay_Params params;
	params.Duration = Duration;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.ClearCrewShipProgressionSpawnLocations
// (Final, Native, Protected, BlueprintCallable)
void UBlueprintStepBase::ClearCrewShipProgressionSpawnLocations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.ClearCrewShipProgressionSpawnLocations");

	UBlueprintStepBase_ClearCrewShipProgressionSpawnLocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.ChangeCompassTargetByLocation
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 TargetLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<EnchantedCompass_ETargetUpdateReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::ChangeCompassTargetByLocation(const struct FVector& TargetLocation, TEnumAsByte<EnchantedCompass_ETargetUpdateReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.ChangeCompassTargetByLocation");

	UBlueprintStepBase_ChangeCompassTargetByLocation_Params params;
	params.TargetLocation = TargetLocation;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.ChangeCompassTargetByActor
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<EnchantedCompass_ETargetUpdateReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::ChangeCompassTargetByActor(class AActor* TargetActor, TEnumAsByte<EnchantedCompass_ETargetUpdateReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.ChangeCompassTargetByActor");

	UBlueprintStepBase_ChangeCompassTargetByActor_Params params;
	params.TargetActor = TargetActor;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.BroadcastEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FName                   EventName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::BroadcastEvent(const struct FName& EventName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.BroadcastEvent");

	UBlueprintStepBase_BroadcastEvent_Params params;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.AddItemToCommonToolsService
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class UClass*                  Tool                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::AddItemToCommonToolsService(class UClass* Tool, class AAthenaPlayerCharacter* PlayerToWieldImmediately)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.AddItemToCommonToolsService");

	UBlueprintStepBase_AddItemToCommonToolsService_Params params;
	params.Tool = Tool;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintStepBase.AddItemsToCommonToolsService
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          Tools                          (Parm, ZeroConstructor, UObjectWrapper)
// class AAthenaPlayerCharacter*  PlayerToWieldImmediately       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ItemIndexToWield               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintStepBase::AddItemsToCommonToolsService(TArray<class UClass*> Tools, class AAthenaPlayerCharacter* PlayerToWieldImmediately, int ItemIndexToWield)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintStepBase.AddItemsToCommonToolsService");

	UBlueprintStepBase_AddItemsToCommonToolsService_Params params;
	params.Tools = Tools;
	params.PlayerToWieldImmediately = PlayerToWieldImmediately;
	params.ItemIndexToWield = ItemIndexToWield;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBlueprintStepBase::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestBlueprintStepDesc);
}

void UBlueprintStepBase::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.BlueprintMechanismStepBase.RegisterMechanismActionWithTrigger
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class AActor>        MechanismAction                (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// TAssetPtr<class AActor>        MechanismTrigger               (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
void UBlueprintMechanismStepBase::RegisterMechanismActionWithTrigger(TAssetPtr<class AActor> MechanismAction, TAssetPtr<class AActor> MechanismTrigger)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintMechanismStepBase.RegisterMechanismActionWithTrigger");

	UBlueprintMechanismStepBase_RegisterMechanismActionWithTrigger_Params params;
	params.MechanismAction = MechanismAction;
	params.MechanismTrigger = MechanismTrigger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintMechanismStepBase.ActivateMechanismTrigger
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TAssetPtr<class AActor>        MechanismTrigger               (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintMechanismStepBase::ActivateMechanismTrigger(TAssetPtr<class AActor> MechanismTrigger, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintMechanismStepBase.ActivateMechanismTrigger");

	UBlueprintMechanismStepBase_ActivateMechanismTrigger_Params params;
	params.MechanismTrigger = MechanismTrigger;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBlueprintMechanismStepBase::AfterRead()
{
	UBlueprintStepBase::AfterRead();

}

void UBlueprintMechanismStepBase::BeforeDelete()
{
	UBlueprintStepBase::BeforeDelete();

}

// Function Athena.BlueprintSpawnAIStepBase.OnSpawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintSpawnAIStepBase::OnSpawn(class APawn* Pawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintSpawnAIStepBase.OnSpawn");

	UBlueprintSpawnAIStepBase_OnSpawn_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintSpawnAIStepBase.OnSetSpawnLocationActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintSpawnAIStepBase::OnSetSpawnLocationActor(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintSpawnAIStepBase.OnSetSpawnLocationActor");

	UBlueprintSpawnAIStepBase_OnSetSpawnLocationActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintSpawnAIStepBase.OnDespawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ECharacterDeathType> DeathType                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBlueprintSpawnAIStepBase::OnDespawn(class APawn* Pawn, TEnumAsByte<Athena_ECharacterDeathType> DeathType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintSpawnAIStepBase.OnDespawn");

	UBlueprintSpawnAIStepBase_OnDespawn_Params params;
	params.Pawn = Pawn;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BlueprintSpawnAIStepBase.OnBattleWon
// (Final, Native, Public, BlueprintCallable)
void UBlueprintSpawnAIStepBase::OnBattleWon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BlueprintSpawnAIStepBase.OnBattleWon");

	UBlueprintSpawnAIStepBase_OnBattleWon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBlueprintSpawnAIStepBase::AfterRead()
{
	UBlueprintStepBase::AfterRead();

}

void UBlueprintSpawnAIStepBase::BeforeDelete()
{
	UBlueprintStepBase::BeforeDelete();

}

void UBlueprintSpawnAIStepDefault::AfterRead()
{
	UBlueprintSpawnAIStepBase::AfterRead();

}

void UBlueprintSpawnAIStepDefault::BeforeDelete()
{
	UBlueprintSpawnAIStepBase::BeforeDelete();

}

void UBlunderbussDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UBlunderbussDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.BodyLightControllerComponent.GetTargetLight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAmbientLightSourceComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UAmbientLightSourceComponent* UBodyLightControllerComponent::GetTargetLight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BodyLightControllerComponent.GetTargetLight");

	UBodyLightControllerComponent_GetTargetLight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BodyLightControllerComponent.AssignTargetLight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAmbientLightSourceComponent* InTargetLight                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBodyLightControllerComponent::AssignTargetLight(class UAmbientLightSourceComponent* InTargetLight)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BodyLightControllerComponent.AssignTargetLight");

	UBodyLightControllerComponent_AssignTargetLight_Params params;
	params.InTargetLight = InTargetLight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBodyLightControllerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(HourOfDayToIntensityMultiplierCurve, UCurveFloat);
}

void UBodyLightControllerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(HourOfDayToIntensityMultiplierCurve);
}

void UBoilingStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UBoilingStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UBoneAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

}

void UBoneAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

}

void UBoobyTrapSpawnerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBoobyTrapSpawnerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UBoogieStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UBoogieStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UQuestBookPageLayout::AfterRead()
{
	UDataAsset::AfterRead();

}

void UQuestBookPageLayout::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.LookingAtQuestBookCompositeInputHandler.OnTurnToPreviousPage
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULookingAtQuestBookCompositeInputHandler::OnTurnToPreviousPage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LookingAtQuestBookCompositeInputHandler.OnTurnToPreviousPage");

	ULookingAtQuestBookCompositeInputHandler_OnTurnToPreviousPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LookingAtQuestBookCompositeInputHandler.OnTurnToNextPage
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULookingAtQuestBookCompositeInputHandler::OnTurnToNextPage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LookingAtQuestBookCompositeInputHandler.OnTurnToNextPage");

	ULookingAtQuestBookCompositeInputHandler_OnTurnToNextPage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULookingAtQuestBookCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(TargetQuestBook, AQuestBook);
}

void ULookingAtQuestBookCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(TargetQuestBook);
}

void UTurnablePageInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTurnablePageInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UQuestBookPageList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UQuestBookPageList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.QuestBook.Server_TurnToPage
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AQuestBook::Server_TurnToPage(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.Server_TurnToPage");

	AQuestBook_Server_TurnToPage_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnRightSpreadRightPageCanvasUpdate
// (Final, Native, Public)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AQuestBook::OnRightSpreadRightPageCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnRightSpreadRightPageCanvasUpdate");

	AQuestBook_OnRightSpreadRightPageCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnRightSpreadLeftPageCanvasUpdate
// (Final, Native, Public)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AQuestBook::OnRightSpreadLeftPageCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnRightSpreadLeftPageCanvasUpdate");

	AQuestBook_OnRightSpreadLeftPageCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnRep_ProcPageList
// (Final, Native, Public)
void AQuestBook::OnRep_ProcPageList()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnRep_ProcPageList");

	AQuestBook_OnRep_ProcPageList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnRep_LeftPageIndex
// (Final, Native, Private)
// Parameters:
// int                            PreviousLeftPageIndex          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AQuestBook::OnRep_LeftPageIndex(int PreviousLeftPageIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnRep_LeftPageIndex");

	AQuestBook_OnRep_LeftPageIndex_Params params;
	params.PreviousLeftPageIndex = PreviousLeftPageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnRep_CurrentBookContents
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<int>                    PreviousBookContents           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void AQuestBook::OnRep_CurrentBookContents(TArray<int> PreviousBookContents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnRep_CurrentBookContents");

	AQuestBook_OnRep_CurrentBookContents_Params params;
	params.PreviousBookContents = PreviousBookContents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnLeftSpreadRightPageCanvasUpdate
// (Final, Native, Public)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AQuestBook::OnLeftSpreadRightPageCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnLeftSpreadRightPageCanvasUpdate");

	AQuestBook_OnLeftSpreadRightPageCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.QuestBook.OnLeftSpreadLeftPageCanvasUpdate
// (Final, Native, Public)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AQuestBook::OnLeftSpreadLeftPageCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuestBook.OnLeftSpreadLeftPageCanvasUpdate");

	AQuestBook_OnLeftSpreadLeftPageCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AQuestBook::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(PageList, UQuestBookPageList);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
	READ_PTR_FULL(LightingController, ALightingController);
	READ_PTR_FULL(PageTurnInputComponent, UInputComponent);
	READ_PTR_FULL(QuestBookPageTurnInputBinder, UInputBinder);
}

void AQuestBook::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(PageList);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
	DELE_PTR_FULL(LightingController);
	DELE_PTR_FULL(PageTurnInputComponent);
	DELE_PTR_FULL(QuestBookPageTurnInputBinder);
}

void UQuestBookItemDesc::AfterRead()
{
	UItemDesc::AfterRead();

	READ_PTR_FULL(PageList, UQuestBookPageList);
}

void UQuestBookItemDesc::BeforeDelete()
{
	UItemDesc::BeforeDelete();

	DELE_PTR_FULL(PageList);
}

void UBookTaleQuestService::AfterRead()
{
	UTaleQuestToolService::AfterRead();

	READ_PTR_FULL(QuestBookDesc, UQuestBookItemDesc);
}

void UBookTaleQuestService::BeforeDelete()
{
	UTaleQuestToolService::BeforeDelete();

	DELE_PTR_FULL(QuestBookDesc);
}

void UBookTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestToolServiceDesc::AfterRead();

	READ_PTR_FULL(QuestBookDesc, UClass);
}

void UBookTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestToolServiceDesc::BeforeDelete();

	DELE_PTR_FULL(QuestBookDesc);
}

// Function Athena.BountyMap.RefreshContents
// (Final, Native, Public, BlueprintCallable)
void ABountyMap::RefreshContents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BountyMap.RefreshContents");

	ABountyMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BountyMap.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABountyMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BountyMap.OnTextCanvasUpdate");

	ABountyMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BountyMap.OnRep_MapInventoryTexturePath
// (Final, Native, Private)
void ABountyMap::OnRep_MapInventoryTexturePath()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BountyMap.OnRep_MapInventoryTexturePath");

	ABountyMap_OnRep_MapInventoryTexturePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BountyMap.OnRep_Contents
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FBountyMapContents      InPreviousContents             (ConstParm, Parm, OutParm, ReferenceParm)
void ABountyMap::OnRep_Contents(const struct FBountyMapContents& InPreviousContents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BountyMap.OnRep_Contents");

	ABountyMap_OnRep_Contents_Params params;
	params.InPreviousContents = InPreviousContents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABountyMap::AfterRead()
{
	ATreasureMap::AfterRead();

	READ_PTR_FULL(Font, UFont);
	READ_PTR_FULL(BountyMapLayout, UBountyMapLayout);
}

void ABountyMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

	DELE_PTR_FULL(Font);
	DELE_PTR_FULL(BountyMapLayout);
}

void UQuestBootyItemPopUpAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UQuestBootyItemPopUpAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UBountyQuestData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DefaultTargetKilledAudioCue, UWwiseEvent);
	READ_PTR_FULL(BountyQuestTargetKilledPopUpDescAsset, UQuestBootyItemPopUpAsset);
	READ_PTR_FULL(FindSpawnPosQuery, UEnvQuery);
}

void UBountyQuestData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DefaultTargetKilledAudioCue);
	DELE_PTR_FULL(BountyQuestTargetKilledPopUpDescAsset);
	DELE_PTR_FULL(FindSpawnPosQuery);
}

void UCarouselPirateGeneratorParamsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCarouselPirateGeneratorParamsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void AConstellationsService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AtmosphericMaterialParamsInstance, UMaterialParameterCollectionInstance);
	READ_PTR_FULL(ConstellationBespokeAudioEventsListInstance, UConstellationAudioEventsDataAsset);
}

void AConstellationsService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AtmosphericMaterialParamsInstance);
	DELE_PTR_FULL(ConstellationBespokeAudioEventsListInstance);
}

void UContendedResourcesProvider::AfterRead()
{
	UInterface::AfterRead();

}

void UContendedResourcesProvider::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UContendedResourceService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void UContendedResourceService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UScoreRewardDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UScoreRewardDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UContestScoreSystem::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ScoreDataAsset, UScoreRewardDataAsset);
}

void UContestScoreSystem::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ScoreDataAsset);
}

// Function Athena.ContestServiceTelemetryComponent.TavernStagingHeartbeat
// (Final, Native, Private)
void UContestServiceTelemetryComponent::TavernStagingHeartbeat()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestServiceTelemetryComponent.TavernStagingHeartbeat");

	UContestServiceTelemetryComponent_TavernStagingHeartbeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UContestServiceTelemetryComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ContestManagerParent, AContestManagerService);
}

void UContestServiceTelemetryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ContestManagerParent);
}

void UContestSettingsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(VoyageDataAsset, UContestVoyagesSelectorDataAsset);
	READ_PTR_FULL(OverarchingVoyageAsset, UMatchmakingVoyageRecipeDesc);
	READ_PTR_FULL(ArenaCompany, UClass);
	READ_PTR_FULL(ShipCatalogueDataAsset, UContestShipCatalogueDataAsset);
	READ_PTR_FULL(ArenaTavernPawnClass, UClass);
	READ_PTR_FULL(ContestLightingZoneWeightCurve, UCurveFloat);
	READ_PTR_FULL(ScoreScroll, UClass);
	READ_PTR_FULL(ConditionalStatForCompletingAContest, UClass);
	READ_PTR_FULL(ConditionalStatForCompletingContestWithShip, UClass);
}

void UContestSettingsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(VoyageDataAsset);
	DELE_PTR_FULL(OverarchingVoyageAsset);
	DELE_PTR_FULL(ArenaCompany);
	DELE_PTR_FULL(ShipCatalogueDataAsset);
	DELE_PTR_FULL(ArenaTavernPawnClass);
	DELE_PTR_FULL(ContestLightingZoneWeightCurve);
	DELE_PTR_FULL(ScoreScroll);
	DELE_PTR_FULL(ConditionalStatForCompletingAContest);
	DELE_PTR_FULL(ConditionalStatForCompletingContestWithShip);
}

void UContestShipCatalogueDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContestShipCatalogueDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UContestSpawnLocationsComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UContestSpawnLocationsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlayerMuteInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerMuteInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipLiveryCatalogueServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipLiveryCatalogueServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipServiceInterface.GetShipForCrew
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AShip*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AShip* UShipServiceInterface::GetShipForCrew(const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipServiceInterface.GetShipForCrew");

	UShipServiceInterface_GetShipForCrew_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipServiceInterface.GetCrewFromShip
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AShip*                   Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UShipServiceInterface::GetCrewFromShip(class AShip* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipServiceInterface.GetCrewFromShip");

	UShipServiceInterface_GetCrewFromShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ContestManagerService.UpdateUILeaderboardFromCache
// (Final, Native, Protected)
void AContestManagerService::UpdateUILeaderboardFromCache()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.UpdateUILeaderboardFromCache");

	AContestManagerService_UpdateUILeaderboardFromCache_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.UpdateTimeLeftOnClient
// (Native, Protected)
void AContestManagerService::UpdateTimeLeftOnClient()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.UpdateTimeLeftOnClient");

	AContestManagerService_UpdateTimeLeftOnClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.StartStagingCountdownTimer
// (Final, Native, Private)
void AContestManagerService::StartStagingCountdownTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.StartStagingCountdownTimer");

	AContestManagerService_StartStagingCountdownTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.PopupNotifyEveryParticipant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPopUpMessageDesc*       InPopup                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AContestManagerService::PopupNotifyEveryParticipant(class UPopUpMessageDesc* InPopup)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.PopupNotifyEveryParticipant");

	AContestManagerService_PopupNotifyEveryParticipant_Params params;
	params.InPopup = InPopup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnServerRecruitmentEnded
// (Final, Native, Protected)
void AContestManagerService::OnServerRecruitmentEnded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnServerRecruitmentEnded");

	AContestManagerService_OnServerRecruitmentEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnRep_StateEndTime
// (Native, Protected)
void AContestManagerService::OnRep_StateEndTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnRep_StateEndTime");

	AContestManagerService_OnRep_StateEndTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnRep_ContestStateUpdated
// (Final, Native, Protected)
void AContestManagerService::OnRep_ContestStateUpdated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnRep_ContestStateUpdated");

	AContestManagerService_OnRep_ContestStateUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnCrewMatchmakingVisibilityChange
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FServerCrewChangedVisibilityStateEvent InMatchmakingVisibilityChangeEvent (ConstParm, Parm, OutParm, ReferenceParm)
void AContestManagerService::OnCrewMatchmakingVisibilityChange(const struct FServerCrewChangedVisibilityStateEvent& InMatchmakingVisibilityChangeEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnCrewMatchmakingVisibilityChange");

	AContestManagerService_OnCrewMatchmakingVisibilityChange_Params params;
	params.InMatchmakingVisibilityChangeEvent = InMatchmakingVisibilityChangeEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnContestStart
// (Final, Native, Protected)
void AContestManagerService::OnContestStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnContestStart");

	AContestManagerService_OnContestStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnContestEnd
// (Final, Native, Protected)
void AContestManagerService::OnContestEnd()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnContestEnd");

	AContestManagerService_OnContestEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.OnContestComplete
// (Final, Native, Private)
void AContestManagerService::OnContestComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.OnContestComplete");

	AContestManagerService_OnContestComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.MulticastTriggerCinematicBlind
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FCinematicQuestEvent    InEvent                        (ConstParm, Parm, ReferenceParm)
void AContestManagerService::MulticastTriggerCinematicBlind(const struct FCinematicQuestEvent& InEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.MulticastTriggerCinematicBlind");

	AContestManagerService_MulticastTriggerCinematicBlind_Params params;
	params.InEvent = InEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.Multicast_LeaderboardForUI
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<struct FCrewScore>      InCrewScores                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void AContestManagerService::Multicast_LeaderboardForUI(TArray<struct FCrewScore> InCrewScores)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.Multicast_LeaderboardForUI");

	AContestManagerService_Multicast_LeaderboardForUI_Params params;
	params.InCrewScores = InCrewScores;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.Mulitcast_CrewScoringForUI
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FGuid                   InCrewId                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InCrewScore                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EContestScoreId> InScoreId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStringAssetReference   InScoringIconAssetReference    (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void AContestManagerService::Mulitcast_CrewScoringForUI(const struct FGuid& InCrewId, int InCrewScore, TEnumAsByte<Athena_EContestScoreId> InScoreId, const struct FStringAssetReference& InScoringIconAssetReference)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.Mulitcast_CrewScoringForUI");

	AContestManagerService_Mulitcast_CrewScoringForUI_Params params;
	params.InCrewId = InCrewId;
	params.InCrewScore = InCrewScore;
	params.InScoreId = InScoreId;
	params.InScoringIconAssetReference = InScoringIconAssetReference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.MigrateAllCrewsAndQuit
// (Final, Native, Private)
void AContestManagerService::MigrateAllCrewsAndQuit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.MigrateAllCrewsAndQuit");

	AContestManagerService_MigrateAllCrewsAndQuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestManagerService.CollectStartBlindsData
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FString                 OutVoyageName                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FShipIdentityOwnership> OutShipPool                    (Parm, OutParm, ZeroConstructor)
// float                          OutBlindDuration               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AContestManagerService::CollectStartBlindsData(struct FString* OutVoyageName, TArray<struct FShipIdentityOwnership>* OutShipPool, float* OutBlindDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.CollectStartBlindsData");

	AContestManagerService_CollectStartBlindsData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutVoyageName != nullptr)
		*OutVoyageName = params.OutVoyageName;
	if (OutShipPool != nullptr)
		*OutShipPool = params.OutShipPool;
	if (OutBlindDuration != nullptr)
		*OutBlindDuration = params.OutBlindDuration;

}


// Function Athena.ContestManagerService.CollectLeaderboardData
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TArray<struct FCrewScore>      OutCrewScores                  (Parm, OutParm, ZeroConstructor)
// TArray<struct FShipIdentityOwnership> OutShipPool                    (Parm, OutParm, ZeroConstructor)
// TArray<struct FText>           OutLeaderboardMessages         (Parm, OutParm, ZeroConstructor)
// float                          OutLeaderboardDuration         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AContestManagerService::CollectLeaderboardData(TArray<struct FCrewScore>* OutCrewScores, TArray<struct FShipIdentityOwnership>* OutShipPool, TArray<struct FText>* OutLeaderboardMessages, float* OutLeaderboardDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.CollectLeaderboardData");

	AContestManagerService_CollectLeaderboardData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCrewScores != nullptr)
		*OutCrewScores = params.OutCrewScores;
	if (OutShipPool != nullptr)
		*OutShipPool = params.OutShipPool;
	if (OutLeaderboardMessages != nullptr)
		*OutLeaderboardMessages = params.OutLeaderboardMessages;
	if (OutLeaderboardDuration != nullptr)
		*OutLeaderboardDuration = params.OutLeaderboardDuration;

}


// Function Athena.ContestManagerService.CinematicBlindsNotifyEveryParticipant
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   BlindDisplayString             (ConstParm, Parm, OutParm, ReferenceParm)
void AContestManagerService::CinematicBlindsNotifyEveryParticipant(const struct FText& BlindDisplayString)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerService.CinematicBlindsNotifyEveryParticipant");

	AContestManagerService_CinematicBlindsNotifyEveryParticipant_Params params;
	params.BlindDisplayString = BlindDisplayString;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AContestManagerService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ContestServiceTelemetryComponent, UContestServiceTelemetryComponent);
	READ_PTR_FULL(CrewSpawnLocationsComponent, UContestSpawnLocationsComponent);
	READ_PTR_FULL(ContestRewardComponent, UContestRewardComponent);
	READ_PTR_FULL(ContestCeremoniesComponent, UContestCeremoniesComponent);
	READ_PTR_FULL(ContestUIComponent, UContestUIComponent);
	READ_PTR_FULL(ContestTeamAssignmentComponent, UContestTeamAssignmentComponent);
	READ_PTR_FULL(CurrentContestVoyageDataAsset, UEmergentContestVoyageRecipeDataAsset);
	READ_PTR_FULL(CurrentTallTaleContestDataAsset, UTallTaleContestRecipeDataAsset);
	READ_PTR_FULL(ContestVoyages, UContestVoyagesDataAsset);
	READ_PTR_FULL(ScoreSystem, UContestScoreSystem);
	READ_PTR_FULL(ContestShipAppearences, UContestShipCatalogueDataAsset);
	READ_PTR_FULL(ContestStagingTavern, AAthenaContestTavern);
	READ_PTR_FULL(TavernPawnType, UClass);
	READ_PTR_FULL(ArenaCompany, UClass);
	READ_PTR_FULL(StatTriggerForCompletingAContest, UClass);
	READ_PTR_FULL(StatTriggerForShipsCompletingContest, UClass);
	READ_PTR_FULL(DebugRepActor, AContestManagerDebugRepActor);
	READ_PTR_FULL(ScoreScrollDesc, UClass);
	READ_PTR_FULL(ScoreScrollItem, AItemInfo);
}

void AContestManagerService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ContestServiceTelemetryComponent);
	DELE_PTR_FULL(CrewSpawnLocationsComponent);
	DELE_PTR_FULL(ContestRewardComponent);
	DELE_PTR_FULL(ContestCeremoniesComponent);
	DELE_PTR_FULL(ContestUIComponent);
	DELE_PTR_FULL(ContestTeamAssignmentComponent);
	DELE_PTR_FULL(CurrentContestVoyageDataAsset);
	DELE_PTR_FULL(CurrentTallTaleContestDataAsset);
	DELE_PTR_FULL(ContestVoyages);
	DELE_PTR_FULL(ScoreSystem);
	DELE_PTR_FULL(ContestShipAppearences);
	DELE_PTR_FULL(ContestStagingTavern);
	DELE_PTR_FULL(TavernPawnType);
	DELE_PTR_FULL(ArenaCompany);
	DELE_PTR_FULL(StatTriggerForCompletingAContest);
	DELE_PTR_FULL(StatTriggerForShipsCompletingContest);
	DELE_PTR_FULL(DebugRepActor);
	DELE_PTR_FULL(ScoreScrollDesc);
	DELE_PTR_FULL(ScoreScrollItem);
}

void UContestMapLayout::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContestMapLayout::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.ContestMap.RefreshContents
// (Final, Native, Public, BlueprintCallable)
void AContestMap::RefreshContents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestMap.RefreshContents");

	AContestMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestMap.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AContestMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestMap.OnTextCanvasUpdate");

	AContestMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestMap.OnRep_OwnerCrewId
// (Final, Native, Private)
void AContestMap::OnRep_OwnerCrewId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestMap.OnRep_OwnerCrewId");

	AContestMap_OnRep_OwnerCrewId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AContestMap::AfterRead()
{
	ATreasureMap::AfterRead();

	READ_PTR_FULL(Font, UFont);
	READ_PTR_FULL(UnderlineIcon, UTexture);
	READ_PTR_FULL(ContestMapLayout, UContestMapLayout);
	READ_PTR_FULL(ScoreRewardDataAsset, UScoreRewardDataAsset);
	READ_PTR_FULL(ScoreSystem, UContestScoreSystem);
}

void AContestMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

	DELE_PTR_FULL(Font);
	DELE_PTR_FULL(UnderlineIcon);
	DELE_PTR_FULL(ContestMapLayout);
	DELE_PTR_FULL(ScoreRewardDataAsset);
	DELE_PTR_FULL(ScoreSystem);
}

void UContestMerchantSpawnerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UContestMerchantSpawnerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UContestMigration::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void UContestMigration::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UContestOutOfBoundsComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UContestOutOfBoundsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UShipHullDamageDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShipHullDamageDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URammableExplosiveDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URammableExplosiveDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UExplosiveTriggerRammableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ExplosiveSettings, URammableExplosiveDataAsset);
}

void UExplosiveTriggerRammableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ExplosiveSettings);
}

void UEyeOfReachDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UEyeOfReachDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.FaceTargetComponent.OnRep_TargetActorToFace
// (Final, Native, Public)
// Parameters:
// class AActor*                  PrevTargetActorToFace          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFaceTargetComponent::OnRep_TargetActorToFace(class AActor* PrevTargetActorToFace)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FaceTargetComponent.OnRep_TargetActorToFace");

	UFaceTargetComponent_OnRep_TargetActorToFace_Params params;
	params.PrevTargetActorToFace = PrevTargetActorToFace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFaceTargetComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetActorToFace, AActor);
}

void UFaceTargetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetActorToFace);
}

void UTemporaryEntitlementsTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(ServiceDesc, UTemporaryEntitlementsTaleQuestServiceDesc);
}

void UTemporaryEntitlementsTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(ServiceDesc);
}

void UTemporaryEntitlementsTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTemporaryEntitlementsTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UTaleQuestAddTemporaryEntitlementStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestAddTemporaryEntitlementStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestAssignContendedResourceStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleQuestAssignContendedResourceStepDesc);
}

void UTaleQuestAssignContendedResourceStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UTaleQuestAssignContendedResourceStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestAssignContendedResourceStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestAssignVaultStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleQuestAssignVaultStepDesc);
}

void UTaleQuestAssignVaultStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UTaleQuestAssignVaultStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestAssignVaultStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestAssignVaultWithFallbackKeysStepDesc::AfterRead()
{
	UTaleQuestAssignVaultStepDesc::AfterRead();

}

void UTaleQuestAssignVaultWithFallbackKeysStepDesc::BeforeDelete()
{
	UTaleQuestAssignVaultStepDesc::BeforeDelete();

}

void UTaleQuestBlueprintStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Step, UBlueprintStepBase);
	READ_PTR_FULL(Desc, UTaleQuestBlueprintStepDesc);
}

void UTaleQuestBlueprintStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Step);
	DELE_PTR_FULL(Desc);
}

void UTaleQuestSpawnAIStep::AfterRead()
{
	UTaleQuestBlueprintStep::AfterRead();

	READ_PTR_FULL(Spawner, UAISpawner);
	READ_PTR_FULL(Region, USimpleAIRegion);
	READ_PTR_FULL(ProximityPlayerTracker, UAIProximityPlayerTracker);
	READ_PTR_FULL(VoyageParticipantOnlyActivateFilter, UFilterFirstPlayerEnterPlayerTrackerDecorator);
}

void UTaleQuestSpawnAIStep::BeforeDelete()
{
	UTaleQuestBlueprintStep::BeforeDelete();

	DELE_PTR_FULL(Spawner);
	DELE_PTR_FULL(Region);
	DELE_PTR_FULL(ProximityPlayerTracker);
	DELE_PTR_FULL(VoyageParticipantOnlyActivateFilter);
}

void UTaleQuestSpawnAIDioramaStep::AfterRead()
{
	UTaleQuestSpawnAIStep::AfterRead();

	READ_PTR_FULL(DioramaController, UAIDioramaController);
	READ_PTR_FULL(WaveSpawnLocationActor, AActor);
}

void UTaleQuestSpawnAIDioramaStep::BeforeDelete()
{
	UTaleQuestSpawnAIStep::BeforeDelete();

	DELE_PTR_FULL(DioramaController);
	DELE_PTR_FULL(WaveSpawnLocationActor);
}

void UTaleQuestBlueprintStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(StepType, UClass);
}

void UTaleQuestBlueprintStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(StepType);
}

void UTaleQuestSpawnAIStepDesc::AfterRead()
{
	UTaleQuestBlueprintStepDesc::AfterRead();

	READ_PTR_FULL(MusicZone, UClass);
}

void UTaleQuestSpawnAIStepDesc::BeforeDelete()
{
	UTaleQuestBlueprintStepDesc::BeforeDelete();

	DELE_PTR_FULL(MusicZone);
}

void UTaleQuestNotificationStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(Notification, UPopUpMessageDesc);
}

void UTaleQuestNotificationStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(Notification);
}

void UTaleQuestNotificationUsingVariableStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestNotificationUsingVariableStepDesc);
}

void UTaleQuestNotificationUsingVariableStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestProgressService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestProgressServiceDesc);
}

void UTaleQuestProgressService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestProgressServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleQuestProgressServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UTaleQuestReactionStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestReactionStepDesc);
}

void UTaleQuestReactionStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestReleaseVaultStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestReleaseVaultStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestSelectAISpawnerStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestSelectAISpawnerStepDesc);
}

void UTaleQuestSelectAISpawnerStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestSelectAISpawnerStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestSelectAISpawnerStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestStructGenServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleQuestStructGenServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UTaleRankDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UTaleRankDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UTelemetryProgressStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTelemetryProgressStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTelemetrySubjectComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UTelemetrySubjectComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UIslandTelemetrySubjectComponent::AfterRead()
{
	UTelemetrySubjectComponent::AfterRead();

}

void UIslandTelemetrySubjectComponent::BeforeDelete()
{
	UTelemetrySubjectComponent::BeforeDelete();

}

void UShipTelemetrySubjectComponent::AfterRead()
{
	UTelemetrySubjectComponent::AfterRead();

	READ_PTR_FULL(ParentShip, AShip);
}

void UShipTelemetrySubjectComponent::BeforeDelete()
{
	UTelemetrySubjectComponent::BeforeDelete();

	DELE_PTR_FULL(ParentShip);
}

void UTelemetryTaskStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTelemetryTaskStepDesc);
	READ_PTR_FULL(TaskStep, UTaleQuestStep);
}

void UTelemetryTaskStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(TaskStep);
}

void ATestActionControlStateCreatorDefinition::AfterRead()
{
	AActionStateCreatorDefinition::AfterRead();

}

void ATestActionControlStateCreatorDefinition::BeforeDelete()
{
	AActionStateCreatorDefinition::BeforeDelete();

}

void UBaseAnchorDynamicsDesc::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBaseAnchorDynamicsDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTestAnchorDynamicsDesc::AfterRead()
{
	UBaseAnchorDynamicsDesc::AfterRead();

}

void UTestAnchorDynamicsDesc::BeforeDelete()
{
	UBaseAnchorDynamicsDesc::BeforeDelete();

}

void ATestAthenaGameModeWithLoopBackServiceEndpoint::AfterRead()
{
	AGameMode::AfterRead();

}

void ATestAthenaGameModeWithLoopBackServiceEndpoint::BeforeDelete()
{
	AGameMode::BeforeDelete();

}

void ATestClimbingActor::AfterRead()
{
	ACharacter::AfterRead();

	READ_PTR_FULL(ClimbingComponent, UClimbingComponent);
}

void ATestClimbingActor::BeforeDelete()
{
	ACharacter::BeforeDelete();

	DELE_PTR_FULL(ClimbingComponent);
}

void ATestDockingActorWithPhrases::AfterRead()
{
	ATestClimbingActor::AfterRead();

}

void ATestDockingActorWithPhrases::BeforeDelete()
{
	ATestClimbingActor::BeforeDelete();

}

// Function Athena.IntentComponent.SetIntent
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          NewIntent                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIntentComponent::SetIntent(float NewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentComponent.SetIntent");

	UIntentComponent_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentComponent.Server_SetIntentWithToken
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          NewIntent                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  Token                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIntentComponent::Server_SetIntentWithToken(float NewIntent, unsigned char Token)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentComponent.Server_SetIntentWithToken");

	UIntentComponent_Server_SetIntentWithToken_Params params;
	params.NewIntent = NewIntent;
	params.Token = Token;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentComponent.Server_SetIntent
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          NewIntent                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIntentComponent::Server_SetIntent(float NewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentComponent.Server_SetIntent");

	UIntentComponent_Server_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentComponent.OnRep_AckToken
// (Final, Native, Public)
void UIntentComponent::OnRep_AckToken()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentComponent.OnRep_AckToken");

	UIntentComponent_OnRep_AckToken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentComponent.GetIntent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UIntentComponent::GetIntent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentComponent.GetIntent");

	UIntentComponent_GetIntent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIntentComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIntentComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ControllableIntentComponent.HasController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UControllableIntentComponent::HasController()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableIntentComponent.HasController");

	UControllableIntentComponent_HasController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ControllableIntentComponent.GetIntent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UControllableIntentComponent::GetIntent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableIntentComponent.GetIntent");

	UControllableIntentComponent_GetIntent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UControllableIntentComponent::AfterRead()
{
	UIntentComponent::AfterRead();

}

void UControllableIntentComponent::BeforeDelete()
{
	UIntentComponent::BeforeDelete();

}

void UTestControllableIntentComponent::AfterRead()
{
	UControllableIntentComponent::AfterRead();

}

void UTestControllableIntentComponent::BeforeDelete()
{
	UControllableIntentComponent::BeforeDelete();

}

// Function Athena.TestControlObjectActionStateId.PushCharacterIntoTestControlObjectActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DockTime                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTestControlObjectActionStateId::STATIC_PushCharacterIntoTestControlObjectActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character, float DockTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestControlObjectActionStateId.PushCharacterIntoTestControlObjectActionState");

	UTestControlObjectActionStateId_PushCharacterIntoTestControlObjectActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;
	params.DockTime = DockTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTestControlObjectActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UTestControlObjectActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void ATestDelayedMeshCharacter::AfterRead()
{
	ACharacter::AfterRead();

}

void ATestDelayedMeshCharacter::BeforeDelete()
{
	ACharacter::BeforeDelete();

}

void ATestDockableObject::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SceneComponent, USceneComponent);
}

void ATestDockableObject::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SceneComponent);
}

// Function Athena.DoubleIntentComponent.Server_SetSecondIntent
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InNewIntent                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDoubleIntentComponent::Server_SetSecondIntent(float InNewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DoubleIntentComponent.Server_SetSecondIntent");

	UDoubleIntentComponent_Server_SetSecondIntent_Params params;
	params.InNewIntent = InNewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DoubleIntentComponent.Server_SetFirstIntent
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InNewIntent                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDoubleIntentComponent::Server_SetFirstIntent(float InNewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DoubleIntentComponent.Server_SetFirstIntent");

	UDoubleIntentComponent_Server_SetFirstIntent_Params params;
	params.InNewIntent = InNewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDoubleIntentComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UDoubleIntentComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UTestDoubleIntentComponent::AfterRead()
{
	UDoubleIntentComponent::AfterRead();

}

void UTestDoubleIntentComponent::BeforeDelete()
{
	UDoubleIntentComponent::BeforeDelete();

}

void UTestServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTestServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ATestGameModeWithServiceProviderGameState::AfterRead()
{
	AGameMode::AfterRead();

}

void ATestGameModeWithServiceProviderGameState::BeforeDelete()
{
	AGameMode::BeforeDelete();

}

void UBaseHullDragDynamicsDesc::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBaseHullDragDynamicsDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTestHullDragDynamicsDesc::AfterRead()
{
	UBaseHullDragDynamicsDesc::AfterRead();

}

void UTestHullDragDynamicsDesc::BeforeDelete()
{
	UBaseHullDragDynamicsDesc::BeforeDelete();

}

void ATestInteractableObject::AfterRead()
{
	AInteractableObject::AfterRead();

}

void ATestInteractableObject::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

}

void ATestLadderActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(OnTopSplineComponent, USplineComponent);
	READ_PTR_FULL(OffTopSplineComponent, USplineComponent);
	READ_PTR_FULL(LadderPhysicsMaterial, UPhysicalMaterial);
}

void ATestLadderActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(OnTopSplineComponent);
	DELE_PTR_FULL(OffTopSplineComponent);
	DELE_PTR_FULL(LadderPhysicsMaterial);
}

void ATestMountedWeapon::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SetProjectile, AActor);
	READ_PTR_FULL(CameraAttachComponent, USceneComponent);
}

void ATestMountedWeapon::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SetProjectile);
	DELE_PTR_FULL(CameraAttachComponent);
}

// Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            TestEventData                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTestNetworkedEventsFunctionLibrary::STATIC_FireTestEventToServer(class AAthenaPlayerController* PlayerController, int TestEventData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToServer");

	UTestNetworkedEventsFunctionLibrary_FireTestEventToServer_Params params;
	params.PlayerController = PlayerController;
	params.TestEventData = TestEventData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToClient
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            TestEventData                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTestNetworkedEventsFunctionLibrary::STATIC_FireTestEventToClient(class AAthenaPlayerController* PlayerController, int TestEventData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToClient");

	UTestNetworkedEventsFunctionLibrary_FireTestEventToClient_Params params;
	params.PlayerController = PlayerController;
	params.TestEventData = TestEventData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTestNetworkedEventsFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UTestNetworkedEventsFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UTestNeverAllowedServerNetworkedEventsWhitelistDefinition::AfterRead()
{
	UNetworkedEventsWhitelistDefinition::AfterRead();

}

void UTestNeverAllowedServerNetworkedEventsWhitelistDefinition::BeforeDelete()
{
	UNetworkedEventsWhitelistDefinition::BeforeDelete();

}

void ATestObscuringItemActor::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

}

void ATestObscuringItemActor::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

}

// Function Athena.TestQuestProxy.Stop
// (Final, Native, Public, BlueprintCallable)
void ATestQuestProxy::Stop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestQuestProxy.Stop");

	ATestQuestProxy_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestQuestProxy.CreateXMarksTheSpotQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FXMarksTheSpotQuestDesc QuestDesc                      (Parm, ContainsInstancedReference)
void ATestQuestProxy::CreateXMarksTheSpotQuest(class UObject* WorldContext, const struct FXMarksTheSpotQuestDesc& QuestDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestQuestProxy.CreateXMarksTheSpotQuest");

	ATestQuestProxy_CreateXMarksTheSpotQuest_Params params;
	params.WorldContext = WorldContext;
	params.QuestDesc = QuestDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestQuestProxy.AddParticipant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Participant                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATestQuestProxy::AddParticipant(class AAthenaPlayerCharacter* Participant)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestQuestProxy.AddParticipant");

	ATestQuestProxy_AddParticipant_Params params;
	params.Participant = Participant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATestQuestProxy::AfterRead()
{
	AActor::AfterRead();

}

void ATestQuestProxy::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.TestReturnCompleteAfterTimeoutPlayerRelevancyService.CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          InTimeoutWanted                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTestReturnCompleteAfterTimeoutPlayerRelevancyService* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTestReturnCompleteAfterTimeoutPlayerRelevancyService* UTestReturnCompleteAfterTimeoutPlayerRelevancyService::STATIC_CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService(float InTimeoutWanted)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestReturnCompleteAfterTimeoutPlayerRelevancyService.CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService");

	UTestReturnCompleteAfterTimeoutPlayerRelevancyService_CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService_Params params;
	params.InTimeoutWanted = InTimeoutWanted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTestReturnCompleteAfterTimeoutPlayerRelevancyService::AfterRead()
{
	UObject::AfterRead();

}

void UTestReturnCompleteAfterTimeoutPlayerRelevancyService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UBaseRudderDynamicsDesc::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBaseRudderDynamicsDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTestRudderDynamicsDesc::AfterRead()
{
	UBaseRudderDynamicsDesc::AfterRead();

}

void UTestRudderDynamicsDesc::BeforeDelete()
{
	UBaseRudderDynamicsDesc::BeforeDelete();

}

void UBaseSailDynamicsDesc::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBaseSailDynamicsDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTestSailDynamicsDesc::AfterRead()
{
	UBaseSailDynamicsDesc::AfterRead();

}

void UTestSailDynamicsDesc::BeforeDelete()
{
	UBaseSailDynamicsDesc::BeforeDelete();

}

void UTestServerNetworkedEventsWhitelistDefinition::AfterRead()
{
	UNetworkedEventsWhitelistDefinition::AfterRead();

}

void UTestServerNetworkedEventsWhitelistDefinition::BeforeDelete()
{
	UNetworkedEventsWhitelistDefinition::BeforeDelete();

}

void UTestService::AfterRead()
{
	UObject::AfterRead();

}

void UTestService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTestShipDynamicsTarget::AfterRead()
{
	UObject::AfterRead();

}

void UTestShipDynamicsTarget::BeforeDelete()
{
	UObject::BeforeDelete();

}

void ATestSkeletalWieldableInventoryItem::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void ATestSkeletalWieldableInventoryItem::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
}

void ATestStaticWieldableInventoryItem::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void ATestStaticWieldableInventoryItem::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
}

// Function Athena.TestStreamingTeleport.GetTeleportPoints
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_ECollisionChannel> BlockingChannel                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CharacterRadius                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CharacterHalfHeight            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          IntervalSize                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 MinExtents                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 MaxExtents                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TArray<struct FVector>         Points                         (Parm, OutParm, ZeroConstructor)
void UTestStreamingTeleport::STATIC_GetTeleportPoints(class UObject* WorldContextObject, TEnumAsByte<Engine_ECollisionChannel> BlockingChannel, float CharacterRadius, float CharacterHalfHeight, float IntervalSize, const struct FVector& MinExtents, const struct FVector& MaxExtents, TArray<struct FVector>* Points)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestStreamingTeleport.GetTeleportPoints");

	UTestStreamingTeleport_GetTeleportPoints_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BlockingChannel = BlockingChannel;
	params.CharacterRadius = CharacterRadius;
	params.CharacterHalfHeight = CharacterHalfHeight;
	params.IntervalSize = IntervalSize;
	params.MinExtents = MinExtents;
	params.MaxExtents = MaxExtents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Points != nullptr)
		*Points = params.Points;

}


void UTestStreamingTeleport::AfterRead()
{
	UObject::AfterRead();

}

void UTestStreamingTeleport::BeforeDelete()
{
	UObject::BeforeDelete();

}

void ATestWieldableInventoryItem::AfterRead()
{
	AWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void ATestWieldableInventoryItem::BeforeDelete()
{
	AWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
}

void UZoomMapTaleStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UZoomMapTaleStepDesc);
	READ_PTR_FULL(BookService, UBookTaleQuestService);
}

void UZoomMapTaleStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(BookService);
}

void UZoomMapTaleStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UZoomMapTaleStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void ACursedCaptainsSkullItemInfo::AfterRead()
{
	ABootyItemInfo::AfterRead();

	READ_PTR_FULL(AnimNotifyWwiseEmitterComponent, UAnimNotifyWwiseEmitterComponent);
	READ_PTR_FULL(CutsceneComponent, UCutsceneComponent);
}

void ACursedCaptainsSkullItemInfo::BeforeDelete()
{
	ABootyItemInfo::BeforeDelete();

	DELE_PTR_FULL(AnimNotifyWwiseEmitterComponent);
	DELE_PTR_FULL(CutsceneComponent);
}

void ASimpleBootyItemProxy::AfterRead()
{
	ABaseSimpleBootyItemProxy::AfterRead();

}

void ASimpleBootyItemProxy::BeforeDelete()
{
	ABaseSimpleBootyItemProxy::BeforeDelete();

}

void ACursedCaptainsSkullProxy::AfterRead()
{
	ASimpleBootyItemProxy::AfterRead();

}

void ACursedCaptainsSkullProxy::BeforeDelete()
{
	ASimpleBootyItemProxy::BeforeDelete();

}

void ASimpleBootyWieldableItem::AfterRead()
{
	ALargeSkeletalMeshWieldableItem::AfterRead();

}

void ASimpleBootyWieldableItem::BeforeDelete()
{
	ALargeSkeletalMeshWieldableItem::BeforeDelete();

}

void ACursedCaptainsSkullWieldable::AfterRead()
{
	ASimpleBootyWieldableItem::AfterRead();

}

void ACursedCaptainsSkullWieldable::BeforeDelete()
{
	ASimpleBootyWieldableItem::BeforeDelete();

}

void ADoor::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(DoorMesh, UStaticMeshComponent);
	READ_PTR_FULL(LandmarkReactionPlayer, ALandmarkReactionPlayer);
	READ_PTR_FULL(InteractionRegion, UInteractableComponent);
}

void ADoor::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(DoorMesh);
	DELE_PTR_FULL(LandmarkReactionPlayer);
	DELE_PTR_FULL(InteractionRegion);
}

// Function Athena.SlidingDoor.ResetDoor
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ASlidingDoor::ResetDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SlidingDoor.ResetDoor");

	ASlidingDoor_ResetDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SlidingDoor.OpenDoor
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ASlidingDoor::OpenDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SlidingDoor.OpenDoor");

	ASlidingDoor_OpenDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SlidingDoor.OnRep_ServerDoorState
// (Final, RequiredAPI, Native, Private)
void ASlidingDoor::OnRep_ServerDoorState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SlidingDoor.OnRep_ServerDoorState");

	ASlidingDoor_OnRep_ServerDoorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SlidingDoor.OnRep_InitialMeshLocation
// (Final, RequiredAPI, Native, Private)
void ASlidingDoor::OnRep_InitialMeshLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SlidingDoor.OnRep_InitialMeshLocation");

	ASlidingDoor_OnRep_InitialMeshLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SlidingDoor.CloseDoor
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ASlidingDoor::CloseDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SlidingDoor.CloseDoor");

	ASlidingDoor_CloseDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASlidingDoor::AfterRead()
{
	ADoor::AfterRead();

	READ_PTR_FULL(SlidingDoorAudioParams, USlidingDoorAudioParams);
}

void ASlidingDoor::BeforeDelete()
{
	ADoor::BeforeDelete();

	DELE_PTR_FULL(SlidingDoorAudioParams);
}

// Function Athena.SwingDoor.ResetDoor
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ASwingDoor::ResetDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingDoor.ResetDoor");

	ASwingDoor_ResetDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwingDoor.OpenDoor
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ASwingDoor::OpenDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingDoor.OpenDoor");

	ASwingDoor_OpenDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwingDoor.OnRep_ServerDoorState
// (Final, RequiredAPI, Native, Private)
void ASwingDoor::OnRep_ServerDoorState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingDoor.OnRep_ServerDoorState");

	ASwingDoor_OnRep_ServerDoorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwingDoor.DoorOpened_Multicast_RPC
// (RequiredAPI, Net, NetReliable, Native, Event, NetMulticast, Public)
void ASwingDoor::DoorOpened_Multicast_RPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingDoor.DoorOpened_Multicast_RPC");

	ASwingDoor_DoorOpened_Multicast_RPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwingDoor.CloseDoor
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ASwingDoor::CloseDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingDoor.CloseDoor");

	ASwingDoor_CloseDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASwingDoor::AfterRead()
{
	ADoor::AfterRead();

	READ_PTR_FULL(SwingDoorAudioParams, USwingDoorAudioParams);
}

void ASwingDoor::BeforeDelete()
{
	ADoor::BeforeDelete();

	DELE_PTR_FULL(SwingDoorAudioParams);
}

// Function Athena.CabinDoor.OnLockOpened
// (Final, Native, Private)
// Parameters:
// class AActor*                  Interactor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACabinDoor::OnLockOpened(class AActor* Interactor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CabinDoor.OnLockOpened");

	ACabinDoor_OnLockOpened_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACabinDoor::AfterRead()
{
	ASwingDoor::AfterRead();

	READ_PTR_FULL(LockComponent, ULockComponent);
	READ_PTR_FULL(OpenDoorAudioSting, UWwiseEvent);
}

void ACabinDoor::BeforeDelete()
{
	ASwingDoor::BeforeDelete();

	DELE_PTR_FULL(LockComponent);
	DELE_PTR_FULL(OpenDoorAudioSting);
}

void USlidingDoorAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SlidingDoorPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(SlidingDoorOpeningLoopStart, UWwiseEvent);
	READ_PTR_FULL(SlidingDoorOpeningLoopStop, UWwiseEvent);
	READ_PTR_FULL(SlidingDoorOpeningAdditionalStopSound, UWwiseEvent);
	READ_PTR_FULL(SlidingDoorClosingLoopStart, UWwiseEvent);
	READ_PTR_FULL(SlidingDoorClosingLoopStop, UWwiseEvent);
	READ_PTR_FULL(SlidingDoorClosingAdditionalStopSound, UWwiseEvent);
}

void USlidingDoorAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SlidingDoorPool);
	DELE_PTR_FULL(SlidingDoorOpeningLoopStart);
	DELE_PTR_FULL(SlidingDoorOpeningLoopStop);
	DELE_PTR_FULL(SlidingDoorOpeningAdditionalStopSound);
	DELE_PTR_FULL(SlidingDoorClosingLoopStart);
	DELE_PTR_FULL(SlidingDoorClosingLoopStop);
	DELE_PTR_FULL(SlidingDoorClosingAdditionalStopSound);
}

void USwingDoorAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SwingDoorPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(SwingDoorOpeningLoopStart, UWwiseEvent);
	READ_PTR_FULL(SwingDoorOpeningLoopStop, UWwiseEvent);
	READ_PTR_FULL(SwingDoorOpeningAdditionalStopSound, UWwiseEvent);
	READ_PTR_FULL(SwingDoorClosingLoopStart, UWwiseEvent);
	READ_PTR_FULL(SwingDoorClosingLoopStop, UWwiseEvent);
	READ_PTR_FULL(SwingDoorClosingAdditionalStopSound, UWwiseEvent);
}

void USwingDoorAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SwingDoorPool);
	DELE_PTR_FULL(SwingDoorOpeningLoopStart);
	DELE_PTR_FULL(SwingDoorOpeningLoopStop);
	DELE_PTR_FULL(SwingDoorOpeningAdditionalStopSound);
	DELE_PTR_FULL(SwingDoorClosingLoopStart);
	DELE_PTR_FULL(SwingDoorClosingLoopStop);
	DELE_PTR_FULL(SwingDoorClosingAdditionalStopSound);
}

void UNarratedAccessibilityComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UNarratedAccessibilityComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UNarratedCompassDirectionComponent::AfterRead()
{
	UNarratedAccessibilityComponent::AfterRead();

	READ_PTR_FULL(Wielder, AActor);
}

void UNarratedCompassDirectionComponent::BeforeDelete()
{
	UNarratedAccessibilityComponent::BeforeDelete();

	DELE_PTR_FULL(Wielder);
}

void UAddNPCOnShipStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UAddNPCOnShipStepDesc);
}

void UAddNPCOnShipStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

// Function Athena.NPCOnSurface.OnRep_IsPlayerCurrentlyNearNPC
// (Final, Native, Private)
void ANPCOnSurface::OnRep_IsPlayerCurrentlyNearNPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurface.OnRep_IsPlayerCurrentlyNearNPC");

	ANPCOnSurface_OnRep_IsPlayerCurrentlyNearNPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurface.OnRep_CurrentAnimInstance
// (Final, Native, Private)
void ANPCOnSurface::OnRep_CurrentAnimInstance()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurface.OnRep_CurrentAnimInstance");

	ANPCOnSurface_OnRep_CurrentAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurface.OnAnimationsLoaded
// (Event, Public, BlueprintEvent)
void ANPCOnSurface::OnAnimationsLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurface.OnAnimationsLoaded");

	ANPCOnSurface_OnAnimationsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurface.Multicast_StartExitAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           FastMove                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          DelayBeforeFade                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ANPCOnSurface::Multicast_StartExitAnimation(bool FastMove, float DelayBeforeFade)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurface.Multicast_StartExitAnimation");

	ANPCOnSurface_Multicast_StartExitAnimation_Params params;
	params.FastMove = FastMove;
	params.DelayBeforeFade = DelayBeforeFade;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurface.Multicast_PlayVO
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Delay                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ANPCOnSurface::Multicast_PlayVO(const struct FName& GroupName, int Index, float Delay)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurface.Multicast_PlayVO");

	ANPCOnSurface_Multicast_PlayVO_Params params;
	params.GroupName = GroupName;
	params.Index = Index;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ANPCOnSurface::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(VODataAsset, UNPCOnSurfaceVODataAsset);
	READ_PTR_FULL(Pool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(Mesh, USkeletalMeshComponent);
	READ_PTR_FULL(Emitter, UWwiseEmitterComponent);
	READ_PTR_FULL(CutSceneSubtitlesComponent, UCutSceneSubtitlesComponent);
	READ_PTR_FULL(CustomAnimationMontageComponent, UCustomAnimationMontageComponent);
}

void ANPCOnSurface::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(VODataAsset);
	DELE_PTR_FULL(Pool);
	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(Emitter);
	DELE_PTR_FULL(CutSceneSubtitlesComponent);
	DELE_PTR_FULL(CustomAnimationMontageComponent);
}

void UNPCOnSurfaceDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(LocationDataAsset, UNPCOnSurfaceLocationDataAsset);
	READ_PTR_FULL(StatesDataAsset, UNPCOnSurfaceStatesDataAsset);
	READ_PTR_FULL(CannonManagerDataAsset, UNPCOnSurfaceCannonManagerDataAsset);
	READ_PTR_FULL(CannonManagerCrewSizeSettingsDataAsset, UNPCOnSurfaceCannonManagerCrewSizeSettingsDataAsset);
}

void UNPCOnSurfaceDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(LocationDataAsset);
	DELE_PTR_FULL(StatesDataAsset);
	DELE_PTR_FULL(CannonManagerDataAsset);
	DELE_PTR_FULL(CannonManagerCrewSizeSettingsDataAsset);
}

// Function Athena.NPCOnSurfaceManager.SpawnQuicklyNextTime
// (Final, Native, Public, BlueprintCallable)
void UNPCOnSurfaceManager::SpawnQuicklyNextTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurfaceManager.SpawnQuicklyNextTime");

	UNPCOnSurfaceManager_SpawnQuicklyNextTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurfaceManager.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   StateName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCOnSurfaceManager::SetState(const struct FName& StateName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurfaceManager.SetState");

	UNPCOnSurfaceManager_SetState_Params params;
	params.StateName = StateName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurfaceManager.GetVOManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNPCOnSurfaceVOManager*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UNPCOnSurfaceVOManager* UNPCOnSurfaceManager::GetVOManager()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurfaceManager.GetVOManager");

	UNPCOnSurfaceManager_GetVOManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCOnSurfaceManager.GetNPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ANPCOnSurface*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ANPCOnSurface* UNPCOnSurfaceManager::GetNPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurfaceManager.GetNPC");

	UNPCOnSurfaceManager_GetNPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NPCOnSurfaceManager.AddCutsceneCoordinator
// (Final, Native, Public, BlueprintCallable)
void UNPCOnSurfaceManager::AddCutsceneCoordinator()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurfaceManager.AddCutsceneCoordinator");

	UNPCOnSurfaceManager_AddCutsceneCoordinator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnSurfaceManager.AddCannonActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACannon*                 CannonActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCOnSurfaceManager::AddCannonActor(class ACannon* CannonActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnSurfaceManager.AddCannonActor");

	UNPCOnSurfaceManager_AddCannonActor_Params params;
	params.CannonActor = CannonActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UNPCOnSurfaceManager::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(NPCOnSurfaceDataAsset, UNPCOnSurfaceDataAsset);
	READ_PTR_FULL(NPC, ANPCOnSurface);
	READ_PTR_FULL(ParentActor, AActor);
	READ_PTR_FULL(VOManager, UNPCOnSurfaceVOManager);
	READ_PTR_FULL(CannonManager, UNPCOnSurfaceCannonManager);
}

void UNPCOnSurfaceManager::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(NPCOnSurfaceDataAsset);
	DELE_PTR_FULL(NPC);
	DELE_PTR_FULL(ParentActor);
	DELE_PTR_FULL(VOManager);
	DELE_PTR_FULL(CannonManager);
}

void UNPCOnShipDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(NPCOnSurfaceDataAsset, UNPCOnSurfaceDataAsset);
}

void UNPCOnShipDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(NPCOnSurfaceDataAsset);
}

// Function Athena.NPCOnShipManager.RemoveRadialStates
// (Final, Native, Public, BlueprintCallable)
void UNPCOnShipManager::RemoveRadialStates()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnShipManager.RemoveRadialStates");

	UNPCOnShipManager_RemoveRadialStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnShipManager.AddRestrictedChannel
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          RadiusInMetres                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCOnShipManager::AddRestrictedChannel(const struct FVector& Start, const struct FVector& End, float RadiusInMetres)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnShipManager.AddRestrictedChannel");

	UNPCOnShipManager_AddRestrictedChannel_Params params;
	params.Start = Start;
	params.End = End;
	params.RadiusInMetres = RadiusInMetres;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCOnShipManager.AddRadialState
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   StateName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          RadiusInMetres                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNPCOnShipManager::AddRadialState(const struct FName& StateName, const struct FVector& Location, float RadiusInMetres)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCOnShipManager.AddRadialState");

	UNPCOnShipManager_AddRadialState_Params params;
	params.StateName = StateName;
	params.Location = Location;
	params.RadiusInMetres = RadiusInMetres;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UNPCOnShipManager::AfterRead()
{
	UNPCOnSurfaceManager::AfterRead();

	READ_PTR_FULL(CurrentCachedCannonsShip, AShip);
	READ_PTR_FULL(NPCOnShipDataAsset, UNPCOnShipDataAsset);
}

void UNPCOnShipManager::BeforeDelete()
{
	UNPCOnSurfaceManager::BeforeDelete();

	DELE_PTR_FULL(CurrentCachedCannonsShip);
	DELE_PTR_FULL(NPCOnShipDataAsset);
}

// Function Athena.TaleNPCOnShipService.GetManager
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   ManagerId                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UNPCOnShipManager*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UNPCOnShipManager* UTaleNPCOnShipService::GetManager(const struct FGuid& ManagerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleNPCOnShipService.GetManager");

	UTaleNPCOnShipService_GetManager_Params params;
	params.ManagerId = ManagerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTaleNPCOnShipService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UTaleNPCOnShipService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UTaleNPCOnShipServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleNPCOnShipServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UNPCOnSurfaceLocationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCOnSurfaceLocationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCutsceneResponseMetaData::AfterRead()
{
	UObject::AfterRead();

}

void UCutsceneResponseMetaData::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UNPCOnSurfaceResponseMetadata::AfterRead()
{
	UCutsceneResponseMetaData::AfterRead();

}

void UNPCOnSurfaceResponseMetadata::BeforeDelete()
{
	UCutsceneResponseMetaData::BeforeDelete();

}

void UNPCOnSurfaceVOManager::AfterRead()
{
	UObject::AfterRead();

}

void UNPCOnSurfaceVOManager::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UClueSiteTypeToMapMarkIdDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UClueSiteTypeToMapMarkIdDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.TradeRouteMap.OnRep_TextData
// (Final, RequiredAPI, Native, Private)
void ATradeRouteMap::OnRep_TextData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TradeRouteMap.OnRep_TextData");

	ATradeRouteMap_OnRep_TextData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TradeRouteMap.OnCanvasUpdate
// (Final, RequiredAPI, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATradeRouteMap::OnCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TradeRouteMap.OnCanvasUpdate");

	ATradeRouteMap_OnCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATradeRouteMap::AfterRead()
{
	ARenderToTextureMapBase::AfterRead();

	READ_PTR_FULL(Font, UFont);
}

void ATradeRouteMap::BeforeDelete()
{
	ARenderToTextureMapBase::BeforeDelete();

	DELE_PTR_FULL(Font);
}

void UTradeRouteMapCollectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTradeRouteMapCollectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTradeRouteMapSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

	READ_PTR_FULL(DefaultClueMarkId, UClass);
}

void UTradeRouteMapSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

	DELE_PTR_FULL(DefaultClueMarkId);
}

// Function Athena.DelayLoadServiceInterface.ShouldWaitForLoads
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDelayLoadServiceInterface::ShouldWaitForLoads()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DelayLoadServiceInterface.ShouldWaitForLoads");

	UDelayLoadServiceInterface_ShouldWaitForLoads_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DelayLoadServiceInterface.AreFrontEndLoadsComplete
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDelayLoadServiceInterface::AreFrontEndLoadsComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DelayLoadServiceInterface.AreFrontEndLoadsComplete");

	UDelayLoadServiceInterface_AreFrontEndLoadsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDelayLoadServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDelayLoadServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.Runnable.Run
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                 Runner                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void URunnable::Run(class UObject* Runner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Runnable.Run");

	URunnable_Run_Params params;
	params.Runner = Runner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URunnable::AfterRead()
{
	UObject::AfterRead();

}

void URunnable::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.ActorFunctionLibrary.TestSetNetCullDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InDistance                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UActorFunctionLibrary::STATIC_TestSetNetCullDistance(class AActor* Actor, float InDistance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.TestSetNetCullDistance");

	UActorFunctionLibrary_TestSetNetCullDistance_Params params;
	params.Actor = Actor;
	params.InDistance = InDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ActorFunctionLibrary.TestSetActorRoleAutonomousProxy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UActorFunctionLibrary::STATIC_TestSetActorRoleAutonomousProxy(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.TestSetActorRoleAutonomousProxy");

	UActorFunctionLibrary_TestSetActorRoleAutonomousProxy_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ActorFunctionLibrary.IsParentActorInChildActorComponentHierarchy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ChildActor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  TestParentActor                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UActorFunctionLibrary::STATIC_IsParentActorInChildActorComponentHierarchy(class AActor* ChildActor, class AActor* TestParentActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.IsParentActorInChildActorComponentHierarchy");

	UActorFunctionLibrary_IsParentActorInChildActorComponentHierarchy_Params params;
	params.ChildActor = ChildActor;
	params.TestParentActor = TestParentActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.IsDependentActorSpawnAckedOnClient
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  RealViewer                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  DependencyActor                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UActorFunctionLibrary::STATIC_IsDependentActorSpawnAckedOnClient(class AActor* RealViewer, class AActor* DependencyActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.IsDependentActorSpawnAckedOnClient");

	UActorFunctionLibrary_IsDependentActorSpawnAckedOnClient_Params params;
	params.RealViewer = RealViewer;
	params.DependencyActor = DependencyActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.IsActorTickFunctionRegistered
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UActorFunctionLibrary::STATIC_IsActorTickFunctionRegistered(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.IsActorTickFunctionRegistered");

	UActorFunctionLibrary_IsActorTickFunctionRegistered_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.GetTransformOfActorRelativeToAnother
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  TargetActor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  RelativeToActor                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform UActorFunctionLibrary::STATIC_GetTransformOfActorRelativeToAnother(class AActor* TargetActor, class AActor* RelativeToActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.GetTransformOfActorRelativeToAnother");

	UActorFunctionLibrary_GetTransformOfActorRelativeToAnother_Params params;
	params.TargetActor = TargetActor;
	params.RelativeToActor = RelativeToActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.GetActorNetGuidValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UActorFunctionLibrary::STATIC_GetActorNetGuidValue(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.GetActorNetGuidValue");

	UActorFunctionLibrary_GetActorNetGuidValue_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindTypedChildActorsByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InParentActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InClass                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UActorFunctionLibrary::STATIC_FindTypedChildActorsByClass(class AActor* InParentActor, class UClass* InClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.FindTypedChildActorsByClass");

	UActorFunctionLibrary_FindTypedChildActorsByClass_Params params;
	params.InParentActor = InParentActor;
	params.InClass = InClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindChildActorsByClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  ParentActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Class                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UActorFunctionLibrary::STATIC_FindChildActorsByClass(class AActor* ParentActor, class UClass* Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.FindChildActorsByClass");

	UActorFunctionLibrary_FindChildActorsByClass_Params params;
	params.ParentActor = ParentActor;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindActorByNetGuidValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            NetGuidValue                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UActorFunctionLibrary::STATIC_FindActorByNetGuidValue(class UObject* WorldContext, int NetGuidValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.FindActorByNetGuidValue");

	UActorFunctionLibrary_FindActorByNetGuidValue_Params params;
	params.WorldContext = WorldContext;
	params.NetGuidValue = NetGuidValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindActorByName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 ActorName                      (Parm, ZeroConstructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UActorFunctionLibrary::STATIC_FindActorByName(class UObject* WorldContext, const struct FString& ActorName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.FindActorByName");

	UActorFunctionLibrary_FindActorByName_Params params;
	params.WorldContext = WorldContext;
	params.ActorName = ActorName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindActorByClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Class                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UActorFunctionLibrary::STATIC_FindActorByClass(class UObject* WorldContext, class UClass* Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.FindActorByClass");

	UActorFunctionLibrary_FindActorByClass_Params params;
	params.WorldContext = WorldContext;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FilterActorArrayByInterface
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>          Actors                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UClass*                  InterfaceToTest                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UActorFunctionLibrary::STATIC_FilterActorArrayByInterface(TArray<class AActor*> Actors, class UClass* InterfaceToTest)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.FilterActorArrayByInterface");

	UActorFunctionLibrary_FilterActorArrayByInterface_Params params;
	params.Actors = Actors;
	params.InterfaceToTest = InterfaceToTest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.ClosestActorToPoint
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>          Actors                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UActorFunctionLibrary::STATIC_ClosestActorToPoint(TArray<class AActor*> Actors, const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ActorFunctionLibrary.ClosestActorToPoint");

	UActorFunctionLibrary_ClosestActorToPoint_Params params;
	params.Actors = Actors;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UActorFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UActorFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void USpawnActorComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(ChildActorClass, UClass);
	READ_PTR_FULL(ChildActor, AActor);
}

void USpawnActorComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(ChildActorClass);
	DELE_PTR_FULL(ChildActor);
}

void UDelayedMeshCharacterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDelayedMeshCharacterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTestCategory::AfterRead()
{
	UCategoryBase::AfterRead();

}

void UTestCategory::BeforeDelete()
{
	UCategoryBase::BeforeDelete();

}

void UCompany::AfterRead()
{
	UObject::AfterRead();

}

void UCompany::BeforeDelete()
{
	UObject::BeforeDelete();

}

void URankDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void URankDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void USeasonPassEntitlementDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void USeasonPassEntitlementDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UEntitlementMapDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEntitlementMapDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEntitlementPreviewActorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEntitlementPreviewActorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStatSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UStatSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UActorActivationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UActorActivationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UActorActivationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UActorActivationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void ULocatorContainer::AfterRead()
{
	UDataAsset::AfterRead();

}

void ULocatorContainer::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URainExposureInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URainExposureInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URainStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void URainStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UPlayerActivityLifetimeRuleCatalogueDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPlayerActivityLifetimeRuleCatalogueDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPlayerActivitySettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UPlayerActivitySettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UItemRadialInventoryActivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialInventoryActivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialInventoryDeactivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialInventoryDeactivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialInventoryActivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialInventoryActivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialInventoryDeactivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialInventoryDeactivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UMapRadialInventoryActivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UMapRadialInventoryActivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UMapRadialInventoryDeactivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UMapRadialInventoryDeactivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UMapRadialInventoryActivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UMapRadialInventoryActivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UMapRadialInventoryDeactivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UMapRadialInventoryDeactivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UNonVerbalRadialInventoryActivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UNonVerbalRadialInventoryActivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UNonVerbalRadialInventoryDeactivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UNonVerbalRadialInventoryDeactivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UNonVerbalRadialInventoryActivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UNonVerbalRadialInventoryActivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UNonVerbalRadialInventoryDeactivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UNonVerbalRadialInventoryDeactivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryActivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryActivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryDeactivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryDeactivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryActivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryActivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryDeactivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryDeactivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryNextSetNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryNextSetNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialActionNorthNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialActionNorthNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialActionEastNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialActionEastNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialActionSouthNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialActionSouthNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialActionWestNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialActionWestNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialActionNorthNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialActionNorthNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialActionEastNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialActionEastNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialActionSouthNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialActionSouthNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UItemRadialActionWestNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UItemRadialActionWestNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryAuxiliarySetNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryAuxiliarySetNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventorySpecialAmmoSetNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventorySpecialAmmoSetNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UPhraseRadialInventoryQuaternaryActionNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UPhraseRadialInventoryQuaternaryActionNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UEmotesRadialActivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UEmotesRadialActivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UEmotesRadialDeactivatedGamepadNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UEmotesRadialDeactivatedGamepadNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UEmotesRadialActivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UEmotesRadialActivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UEmotesRadialDeactivatedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UEmotesRadialDeactivatedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex0SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex0SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex1SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex1SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex2SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex2SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex3SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex3SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex4SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex4SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex5SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex5SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex6SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex6SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotIndex7SelectedKeyboardNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotIndex7SelectedKeyboardNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotClockwiseNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotClockwiseNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URadialSlotCounterClockwiseNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void URadialSlotCounterClockwiseNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UVoyageRewardDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVoyageRewardDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ULandmarkTreasureLocationsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void ULandmarkTreasureLocationsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UNonVagueNonUniqueLandmarkComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UNonVagueNonUniqueLandmarkComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

// Function Athena.PlaceableReaction.TriggerReaction
// (Final, Native, Public, BlueprintCallable)
void APlaceableReaction::TriggerReaction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlaceableReaction.TriggerReaction");

	APlaceableReaction_TriggerReaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APlaceableReaction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SceneComponent, USceneComponent);
	READ_PTR_FULL(ReactionEventPlayer, ALandmarkReactionPlayer);
}

void APlaceableReaction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SceneComponent);
	DELE_PTR_FULL(ReactionEventPlayer);
}

void UPointOfInterestTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPointOfInterestTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPointOfInterestTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPointOfInterestTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void AGhostShipPlayerSpawnLocation::AfterRead()
{
	APlayerStart::AfterRead();

}

void AGhostShipPlayerSpawnLocation::BeforeDelete()
{
	APlayerStart::BeforeDelete();

}

void ASpawnLocation::AfterRead()
{
	APlayerStart::AfterRead();

}

void ASpawnLocation::BeforeDelete()
{
	APlayerStart::BeforeDelete();

}

void UProgressLocationId::AfterRead()
{
	UObject::AfterRead();

}

void UProgressLocationId::BeforeDelete()
{
	UObject::BeforeDelete();

}

void AProgressSpawnLocation::AfterRead()
{
	ASpawnLocation::AfterRead();

	READ_PTR_FULL(ProgressId, UClass);
}

void AProgressSpawnLocation::BeforeDelete()
{
	ASpawnLocation::BeforeDelete();

	DELE_PTR_FULL(ProgressId);
}

void UCoralFortressProgressLocationID::AfterRead()
{
	UProgressLocationId::AfterRead();

}

void UCoralFortressProgressLocationID::BeforeDelete()
{
	UProgressLocationId::BeforeDelete();

}

void ATunnelOfTheDamnedPortalShipSpawnLocation::AfterRead()
{
	AShipSpawnLocation::AfterRead();

}

void ATunnelOfTheDamnedPortalShipSpawnLocation::BeforeDelete()
{
	AShipSpawnLocation::BeforeDelete();

}

void UCoastQueryInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCoastQueryInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCustomizableIslandServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCustomizableIslandServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandAirPocketComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandAirPocketComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void USeaId::AfterRead()
{
	UObject::AfterRead();

}

void USeaId::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UPrebakedIslandAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPrebakedIslandAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.IslandServiceInterface.OnCrewSpawningOnIsland
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   IslandName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIslandServiceInterface::OnCrewSpawningOnIsland(const struct FName& IslandName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandServiceInterface.OnCrewSpawningOnIsland");

	UIslandServiceInterface_OnCrewSpawningOnIsland_Params params;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IslandServiceInterface.GetAllIslandNames
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FName> UIslandServiceInterface::GetAllIslandNames()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandServiceInterface.GetAllIslandNames");

	UIslandServiceInterface_GetAllIslandNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIslandServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.IslandData.OnOverlapEnd
// (Final, Native, Private)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AIslandData::OnOverlapEnd(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandData.OnOverlapEnd");

	AIslandData_OnOverlapEnd_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IslandData.OnOverlapBegin
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              OverlapInfo                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AIslandData::OnOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandData.OnOverlapBegin");

	AIslandData_OnOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IslandData.MakeFIsland
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FIsland                 ReturnValue                    (Parm, OutParm, ReturnParm)
struct FIsland AIslandData::MakeFIsland()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandData.MakeFIsland");

	AIslandData_MakeFIsland_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.IslandData.IsOnWorldMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AIslandData::IsOnWorldMap()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandData.IsOnWorldMap");

	AIslandData_IsOnWorldMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AIslandData::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(IslandAnnouncementComponent, UIslandAnnouncementComponent);
	READ_PTR_FULL(IslandBoundsComponent, UIslandBoundsComponent);
	READ_PTR_FULL(IslandTriggerComponent, USphereComponent);
	READ_PTR_FULL(IslandSafeZoneComponent, USphereComponent);
	READ_PTR_FULL(PetMovementParamsData, UAICreatureMovementModifierParamsDataAsset);
	READ_PTR_FULL(IslandSalvageSpawnerManager, AIslandSalvageSpawnerManager);
}

void AIslandData::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(IslandAnnouncementComponent);
	DELE_PTR_FULL(IslandBoundsComponent);
	DELE_PTR_FULL(IslandTriggerComponent);
	DELE_PTR_FULL(IslandSafeZoneComponent);
	DELE_PTR_FULL(PetMovementParamsData);
	DELE_PTR_FULL(IslandSalvageSpawnerManager);
}

void UIslandAnnouncementComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandAnnouncementComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UIslandBoundsComponent::AfterRead()
{
	USphereComponent::AfterRead();

}

void UIslandBoundsComponent::BeforeDelete()
{
	USphereComponent::BeforeDelete();

}

void UAmmoBaseEffect::AfterRead()
{
	UObject::AfterRead();

}

void UAmmoBaseEffect::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UOutOfAmmoDestroyEffect::AfterRead()
{
	UAmmoBaseEffect::AfterRead();

	READ_PTR_FULL(OwningActor, AActor);
}

void UOutOfAmmoDestroyEffect::BeforeDelete()
{
	UAmmoBaseEffect::BeforeDelete();

	DELE_PTR_FULL(OwningActor);
}

void UMaterialManipulationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMaterialManipulationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.AmmoEffectsComponent.OnRep_AmmoEffectState
// (Final, Native, Protected)
void UAmmoEffectsComponent::OnRep_AmmoEffectState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AmmoEffectsComponent.OnRep_AmmoEffectState");

	UAmmoEffectsComponent_OnRep_AmmoEffectState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAmmoEffectsComponent::AfterRead()
{
	UMaterialManipulationComponent::AfterRead();

}

void UAmmoEffectsComponent::BeforeDelete()
{
	UMaterialManipulationComponent::BeforeDelete();

}

void UAmmoInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAmmoInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AmmoStoreInterface.RestockAmmo
// (Native, Public, BlueprintCallable)
void UAmmoStoreInterface::RestockAmmo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AmmoStoreInterface.RestockAmmo");

	UAmmoStoreInterface_RestockAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAmmoStoreInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAmmoStoreInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAmmoStoreComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ReloadSFX, UWwiseEvent);
	READ_PTR_FULL(RestockSFX, UWwiseEvent);
}

void UAmmoStoreComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ReloadSFX);
	DELE_PTR_FULL(RestockSFX);
}

void UAmmoTransferComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ActorOwner, AActor);
}

void UAmmoTransferComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ActorOwner);
}

void UCustomVaultServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCustomVaultServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ABootyStorageService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(BootyStorageSettings, UBootyStorageSettings);
	READ_PTR_FULL(BootyStorageSettingsAsset, UBootyStorageSettingsAsset);
}

void ABootyStorageService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(BootyStorageSettings);
	DELE_PTR_FULL(BootyStorageSettingsAsset);
}

void UBootyStorageSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UBootyStorageSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UBootyStorageSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SpawnBootyCheatEQSQuery, UEnvQuery);
	READ_PTR_FULL(RetrievalActor, UClass);
}

void UBootyStorageSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SpawnBootyCheatEQSQuery);
	DELE_PTR_FULL(RetrievalActor);
}

// Function Athena.RetrieveBootyActor.Multicast_Dismiss
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
void ARetrieveBootyActor::Multicast_Dismiss()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RetrieveBootyActor.Multicast_Dismiss");

	ARetrieveBootyActor_Multicast_Dismiss_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARetrieveBootyActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(RetrievalComponent, URetrieveBootyHandInComponent);
	READ_PTR_FULL(Mesh, USkeletalMeshComponent);
	READ_PTR_FULL(BeaconComponent, UParticleSystemComponent);
	READ_PTR_FULL(AIPartsRetrievalComponent, UAIPartsRetrievalComponent);
	READ_PTR_FULL(AIParts, UAIPartsCategory);
	READ_PTR_FULL(BootyStorageSettings, UBootyStorageSettings);
	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
}

void ARetrieveBootyActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(RetrievalComponent);
	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(BeaconComponent);
	DELE_PTR_FULL(AIPartsRetrievalComponent);
	DELE_PTR_FULL(AIParts);
	DELE_PTR_FULL(BootyStorageSettings);
	DELE_PTR_FULL(ActionRulesComponent);
}

void URetrieveBootyHandInComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(NotificationStartInputID, UClass);
	READ_PTR_FULL(NotificationReleaseInputID, UClass);
	READ_PTR_FULL(BootyStorageSettings, UBootyStorageSettings);
	READ_PTR_FULL(OnRetrievedSFX, UWwiseEvent);
	READ_PTR_FULL(OwnerActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(SpawnBootyEQSQuery, UEnvQuery);
}

void URetrieveBootyHandInComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(NotificationStartInputID);
	DELE_PTR_FULL(NotificationReleaseInputID);
	DELE_PTR_FULL(BootyStorageSettings);
	DELE_PTR_FULL(OnRetrievedSFX);
	DELE_PTR_FULL(OwnerActionRulesComponent);
	DELE_PTR_FULL(SpawnBootyEQSQuery);
}

// Function Athena.StoreBootyHandInComponent.Multicast_SetGemBrightness
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FGuid                   InCrew                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EBootyStorageMaterialState> BootyStorageState              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UStoreBootyHandInComponent::Multicast_SetGemBrightness(const struct FGuid& InCrew, TEnumAsByte<Athena_EBootyStorageMaterialState> BootyStorageState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StoreBootyHandInComponent.Multicast_SetGemBrightness");

	UStoreBootyHandInComponent_Multicast_SetGemBrightness_Params params;
	params.InCrew = InCrew;
	params.BootyStorageState = BootyStorageState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStoreBootyHandInComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(NotificationStartInputID, UClass);
	READ_PTR_FULL(NotificationReleaseInputID, UClass);
	READ_PTR_FULL(LocalController, AController);
	READ_PTR_FULL(BootyStorageSettings, UBootyStorageSettings);
	READ_PTR_FULL(OwnerActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(OnStoredSFX, UWwiseEvent);
}

void UStoreBootyHandInComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(NotificationStartInputID);
	DELE_PTR_FULL(NotificationReleaseInputID);
	DELE_PTR_FULL(LocalController);
	DELE_PTR_FULL(BootyStorageSettings);
	DELE_PTR_FULL(OwnerActionRulesComponent);
	DELE_PTR_FULL(OnStoredSFX);
}

void UConcealableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UConcealableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UConcealingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UConcealingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.StormEffectsExclusionTriggerVolume.OnTriggerVolumeEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AStormEffectsExclusionTriggerVolume::OnTriggerVolumeEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StormEffectsExclusionTriggerVolume.OnTriggerVolumeEndOverlap");

	AStormEffectsExclusionTriggerVolume_OnTriggerVolumeEndOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.StormEffectsExclusionTriggerVolume.OnTriggerVolumeBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AStormEffectsExclusionTriggerVolume::OnTriggerVolumeBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StormEffectsExclusionTriggerVolume.OnTriggerVolumeBeginOverlap");

	AStormEffectsExclusionTriggerVolume_OnTriggerVolumeBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AStormEffectsExclusionTriggerVolume::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(TriggerVolume, UCapsuleComponent);
}

void AStormEffectsExclusionTriggerVolume::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(TriggerVolume);
}

void UStormInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStormInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStormParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(StormClass, UClass);
}

void UStormParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(StormClass);
}

void UContestSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UContestSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

// Function Athena.RomeBeacon.UpdateBeaconParams
// (Final, Native, Public)
void ARomeBeacon::UpdateBeaconParams()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RomeBeacon.UpdateBeaconParams");

	ARomeBeacon_UpdateBeaconParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARomeBeacon::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(BeaconRoot, USceneComponent);
	READ_PTR_FULL(RibbonComponent, UStaticMeshComponent);
	READ_PTR_FULL(UpperHalfRibbonComponent, UStaticMeshComponent);
	READ_PTR_FULL(LowerHalfRibbonComponent, UStaticMeshComponent);
	READ_PTR_FULL(TendrilComponent, UStaticMeshComponent);
	READ_PTR_FULL(BeamComponent, UStaticMeshComponent);
	READ_PTR_FULL(MarkerDataObject, UArenaWorldMarker);
}

void ARomeBeacon::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(BeaconRoot);
	DELE_PTR_FULL(RibbonComponent);
	DELE_PTR_FULL(UpperHalfRibbonComponent);
	DELE_PTR_FULL(LowerHalfRibbonComponent);
	DELE_PTR_FULL(TendrilComponent);
	DELE_PTR_FULL(BeamComponent);
	DELE_PTR_FULL(MarkerDataObject);
}

void UEmblemDefinitionAssetList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEmblemDefinitionAssetList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UBountyQuestDescData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(LocationPhrase, URiddleTextPhraseDataAsset);
	READ_PTR_FULL(LocationUndergroundPhrase, URiddleTextPhraseDataAsset);
}

void UBountyQuestDescData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(LocationPhrase);
	DELE_PTR_FULL(LocationUndergroundPhrase);
}

void ABountyReward::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

}

void ABountyReward::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

}

void UPuzzleStatueBaseAudioParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(StatueActivated, UWwiseEvent);
	READ_PTR_FULL(PuzzleStatueAudioPool, UWwiseObjectPoolWrapper);
}

void UPuzzleStatueBaseAudioParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(StatueActivated);
	DELE_PTR_FULL(PuzzleStatueAudioPool);
}

void UBroadcasterPuzzleStatueAudioParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(BroadcasterInitiateReactionSequence, UWwiseEvent);
	READ_PTR_FULL(SuccessHumStart, UWwiseEvent);
	READ_PTR_FULL(SuccessHumStop, UWwiseEvent);
	READ_PTR_FULL(SuccessWaterLevelUp, UWwiseEvent);
	READ_PTR_FULL(SuccessWaterLevelDown, UWwiseEvent);
	READ_PTR_FULL(SuccessGeneralActivation, UWwiseEvent);
	READ_PTR_FULL(UnsuccessfulSequence, UWwiseEvent);
	READ_PTR_FULL(ShockwaveEffect, UWwiseEvent);
}

void UBroadcasterPuzzleStatueAudioParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(BroadcasterInitiateReactionSequence);
	DELE_PTR_FULL(SuccessHumStart);
	DELE_PTR_FULL(SuccessHumStop);
	DELE_PTR_FULL(SuccessWaterLevelUp);
	DELE_PTR_FULL(SuccessWaterLevelDown);
	DELE_PTR_FULL(SuccessGeneralActivation);
	DELE_PTR_FULL(UnsuccessfulSequence);
	DELE_PTR_FULL(ShockwaveEffect);
}

void UBTDecorator_ActorWieldedItemCategory::AfterRead()
{
	UBTDecorator_BaseConditional::AfterRead();

}

void UBTDecorator_ActorWieldedItemCategory::BeforeDelete()
{
	UBTDecorator_BaseConditional::BeforeDelete();

}

void UBTDecorator_ActorWieldedItemClass::AfterRead()
{
	UBTDecorator_BlackboardBase::AfterRead();

}

void UBTDecorator_ActorWieldedItemClass::BeforeDelete()
{
	UBTDecorator_BlackboardBase::BeforeDelete();

}

void UBTDecorator_CanBlock::AfterRead()
{
	UBTDecorator_BaseConditional::AfterRead();

}

void UBTDecorator_CanBlock::BeforeDelete()
{
	UBTDecorator_BaseConditional::BeforeDelete();

}

void UUnlockableEntitlementsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UUnlockableEntitlementsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPirateIdentityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPirateIdentityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerTelemetryInfoProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerTelemetryInfoProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PlayerTelemetrySubjectGetterInterface.GetTelemetrySubject
// (Native, Public, Const)
void UPlayerTelemetrySubjectGetterInterface::GetTelemetrySubject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerTelemetrySubjectGetterInterface.GetTelemetrySubject");

	UPlayerTelemetrySubjectGetterInterface_GetTelemetrySubject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerTelemetrySubjectGetterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerTelemetrySubjectGetterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTelemetryDescriptorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTelemetryDescriptorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTelemetryDispatcherRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTelemetryDispatcherRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TelemetrySubjectInterface.GetSubjectName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UTelemetrySubjectInterface::GetSubjectName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TelemetrySubjectInterface.GetSubjectName");

	UTelemetrySubjectInterface_GetSubjectName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TelemetrySubjectInterface.GetSubjectId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UTelemetrySubjectInterface::GetSubjectId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TelemetrySubjectInterface.GetSubjectId");

	UTelemetrySubjectInterface_GetSubjectId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTelemetrySubjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTelemetrySubjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URemoteConfigurationProviderRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URemoteConfigurationProviderRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UChangeableMeshInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UChangeableMeshInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMemoryConstrainedMeshInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMemoryConstrainedMeshInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMeshMemoryConstraintBudget::AfterRead()
{
	UObject::AfterRead();

}

void UMeshMemoryConstraintBudget::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMeshMemoryConstraintCategory::AfterRead()
{
	UObject::AfterRead();

}

void UMeshMemoryConstraintCategory::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMemoryConstrainedMeshInitializer::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Mesh, UObject);
	READ_PTR_FULL(MeshFallbackCategory, UClass);
	READ_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback, UClass);
}

void UMemoryConstrainedMeshInitializer::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(MeshFallbackCategory);
	DELE_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback);
}

void UMeshAvailabilityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeshAvailabilityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMeshMemoryConstraintDefaultSkeletalCategory::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintDefaultSkeletalCategory::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintDefaultStaticCategory::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintDefaultStaticCategory::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintFallbackCategoryDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ConstraintCategory, UClass);
}

void UMeshMemoryConstraintFallbackCategoryDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ConstraintCategory);
}

void UMeshMemoryConstraintFallbackCollection::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMeshMemoryConstraintFallbackCollection::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UMeshMemoryConstraintScoringObject::AfterRead()
{
	UObject::AfterRead();

}

void UMeshMemoryConstraintScoringObject::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMeshMemoryConstraintFallbackDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ConstraintBudget, UClass);
}

void UMeshMemoryConstraintFallbackDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ConstraintBudget);
}

void UMeshMemoryConstraintHandler::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(MeshOwner, AActor);
	READ_PTR_FULL(CachedMesh, UObject);
}

void UMeshMemoryConstraintHandler::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(MeshOwner);
	DELE_PTR_FULL(CachedMesh);
}

void UMeshMemoryConstraintListenerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeshMemoryConstraintListenerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMeshMemoryConstraintScoringInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeshMemoryConstraintScoringInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMeshMemoryConstraintScoringMemoryUsed::AfterRead()
{
	UMeshMemoryConstraintScoringObject::AfterRead();

}

void UMeshMemoryConstraintScoringMemoryUsed::BeforeDelete()
{
	UMeshMemoryConstraintScoringObject::BeforeDelete();

}

void UMeshMemoryConstraintScoringNumberOfMeshes::AfterRead()
{
	UMeshMemoryConstraintScoringObject::AfterRead();

}

void UMeshMemoryConstraintScoringNumberOfMeshes::BeforeDelete()
{
	UMeshMemoryConstraintScoringObject::BeforeDelete();

}

void UMeshMemoryConstraintTelemetryInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeshMemoryConstraintTelemetryInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UConditionalStatsServiceSettings::AfterRead()
{
	UDataAsset::AfterRead();

}

void UConditionalStatsServiceSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UDigItemStatTriggerType::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UDigItemStatTriggerType::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UEquipConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UEquipConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UKillActorConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UKillActorConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void URepairShipPartStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void URepairShipPartStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void USpeakToActorConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void USpeakToActorConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void ULogicalNotStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

	READ_PTR_FULL(StatCondition, UStatCondition);
}

void ULogicalNotStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

	DELE_PTR_FULL(StatCondition);
}

void ULogicalOrStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void ULogicalOrStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UMatchesAllConditionsStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UMatchesAllConditionsStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UTargetedStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

	READ_PTR_FULL(TargetSelector, UStatConditionTargetSelector);
}

void UTargetedStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

	DELE_PTR_FULL(TargetSelector);
}

void UDoesNameContainsStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UDoesNameContainsStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UIsActorTypeStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsActorTypeStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UStatConditionObjectTargetSelector::AfterRead()
{
	UStatConditionTargetSelector::AfterRead();

}

void UStatConditionObjectTargetSelector::BeforeDelete()
{
	UStatConditionTargetSelector::BeforeDelete();

}

void UShipCustomizationInfo::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Category, UClass);
}

void UShipCustomizationInfo::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Category);
}

void UShipCustomizationDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UShipCustomizationDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void URewindDataVisualisationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URewindDataVisualisationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void URewindPhysicsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URewindPhysicsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStorageContainerSpawnerWeightedListOfWeightedItemList::AfterRead()
{
	UStorageContainerSpawnerItemListBase::AfterRead();

}

void UStorageContainerSpawnerWeightedListOfWeightedItemList::BeforeDelete()
{
	UStorageContainerSpawnerItemListBase::BeforeDelete();

}

void UStorageContainerContentTypeSelectorEntries::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStorageContainerContentTypeSelectorEntries::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UStorageContainerSpawnerCount::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStorageContainerSpawnerCount::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UStorageContainerContentTypeSelector::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(NumSpawnerRef, UStorageContainerSpawnerCount);
	READ_PTR_FULL(DebugSpawner, UStorageContainerContentSpawner);
	READ_PTR_FULL(SelectorEntries, UStorageContainerContentTypeSelectorEntries);
}

void UStorageContainerContentTypeSelector::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(NumSpawnerRef);
	DELE_PTR_FULL(DebugSpawner);
	DELE_PTR_FULL(SelectorEntries);
}

void UItemDescSpawnData::AfterRead()
{
	UItemSpawnData::AfterRead();

}

void UItemDescSpawnData::BeforeDelete()
{
	UItemSpawnData::BeforeDelete();

}

void UStorageContainerDescSpawnData::AfterRead()
{
	UItemDescSpawnData::AfterRead();

}

void UStorageContainerDescSpawnData::BeforeDelete()
{
	UItemDescSpawnData::BeforeDelete();

}

void USpawnableItemsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void USpawnableItemsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.SimpleBootyInteractiveItem.ReceiveSecondaryItemUse
// (Event, Public, BlueprintEvent)
void ASimpleBootyInteractiveItem::ReceiveSecondaryItemUse()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SimpleBootyInteractiveItem.ReceiveSecondaryItemUse");

	ASimpleBootyInteractiveItem_ReceiveSecondaryItemUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SimpleBootyInteractiveItem.ReceiveSecondaryItemStop
// (Event, Public, BlueprintEvent)
void ASimpleBootyInteractiveItem::ReceiveSecondaryItemStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SimpleBootyInteractiveItem.ReceiveSecondaryItemStop");

	ASimpleBootyInteractiveItem_ReceiveSecondaryItemStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SimpleBootyInteractiveItem.ReceivePrimaryItemUse
// (Event, Public, BlueprintEvent)
void ASimpleBootyInteractiveItem::ReceivePrimaryItemUse()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SimpleBootyInteractiveItem.ReceivePrimaryItemUse");

	ASimpleBootyInteractiveItem_ReceivePrimaryItemUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SimpleBootyInteractiveItem.ReceivePrimaryItemStop
// (Event, Public, BlueprintEvent)
void ASimpleBootyInteractiveItem::ReceivePrimaryItemStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SimpleBootyInteractiveItem.ReceivePrimaryItemStop");

	ASimpleBootyInteractiveItem_ReceivePrimaryItemStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASimpleBootyInteractiveItem::AfterRead()
{
	AStaticSimpleBootyWieldableItem::AfterRead();

	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
	READ_PTR_FULL(InteractionSfx, UWwiseEvent);
}

void ASimpleBootyInteractiveItem::BeforeDelete()
{
	AStaticSimpleBootyWieldableItem::BeforeDelete();

	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
	DELE_PTR_FULL(InteractionSfx);
}

void UCustomVaultService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void UCustomVaultService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void ULockReservationControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULockReservationControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SittingActionStateId.PushCharacterIntoSittingActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSittingActionStateParams SittingActionStateParams       (ConstParm, Parm, OutParm, ReferenceParm)
void USittingActionStateId::STATIC_PushCharacterIntoSittingActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character, const struct FSittingActionStateParams& SittingActionStateParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SittingActionStateId.PushCharacterIntoSittingActionState");

	USittingActionStateId_PushCharacterIntoSittingActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;
	params.SittingActionStateParams = SittingActionStateParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USittingActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void USittingActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UShroudBreakerProtectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShroudBreakerProtectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ASeat::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(InteractionInput, UClass);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(HoldInteractionInput, UClass);
}

void ASeat::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(InteractionInput);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(HoldInteractionInput);
}

// Function Athena.RowingSeat.Server_SetOarInputState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            InOarIndex                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Watercrafts_EOarInputState> InOarState                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ARowingSeat::Server_SetOarInputState(int InOarIndex, TEnumAsByte<Watercrafts_EOarInputState> InOarState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RowingSeat.Server_SetOarInputState");

	ARowingSeat_Server_SetOarInputState_Params params;
	params.InOarIndex = InOarIndex;
	params.InOarState = InOarState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RowingSeat.OnRep_OarInputStates
// (Final, Native, Private)
// Parameters:
// TArray<TEnumAsByte<Watercrafts_EOarInputState>> OldInputStates                 (Parm, ZeroConstructor)
void ARowingSeat::OnRep_OarInputStates(TArray<TEnumAsByte<Watercrafts_EOarInputState>> OldInputStates)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RowingSeat.OnRep_OarInputStates");

	ARowingSeat_OnRep_OarInputStates_Params params;
	params.OldInputStates = OldInputStates;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARowingSeat::AfterRead()
{
	ASeat::AfterRead();

	READ_PTR_FULL(ForceFeedbackForLeftStrokeEnd, UForceFeedbackEffect);
	READ_PTR_FULL(ForceFeedbackForRightStrokeEnd, UForceFeedbackEffect);
	READ_PTR_FULL(LeftOarMesh, UStaticMeshComponent);
	READ_PTR_FULL(RightOarMesh, UStaticMeshComponent);
}

void ARowingSeat::BeforeDelete()
{
	ASeat::BeforeDelete();

	DELE_PTR_FULL(ForceFeedbackForLeftStrokeEnd);
	DELE_PTR_FULL(ForceFeedbackForRightStrokeEnd);
	DELE_PTR_FULL(LeftOarMesh);
	DELE_PTR_FULL(RightOarMesh);
}

void UAthenaStreamedLevelDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaStreamedLevelDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAthenaStreamedLevelServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaStreamedLevelServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMechanismAnimation::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMechanismAnimation::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UMechanismAnimationCurve_Flamethrower::AfterRead()
{
	UMechanismAnimation::AfterRead();

}

void UMechanismAnimationCurve_Flamethrower::BeforeDelete()
{
	UMechanismAnimation::BeforeDelete();

}

// Function Athena.MechanismBlueprintFunctionLibrary.RemoveTriggerFromAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Trigger                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Action                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismBlueprintFunctionLibrary::STATIC_RemoveTriggerFromAction(class AActor* Trigger, class AActor* Action)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismBlueprintFunctionLibrary.RemoveTriggerFromAction");

	UMechanismBlueprintFunctionLibrary_RemoveTriggerFromAction_Params params;
	params.Trigger = Trigger;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismBlueprintFunctionLibrary.AddTriggerToAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Trigger                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Action                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismBlueprintFunctionLibrary::STATIC_AddTriggerToAction(class AActor* Trigger, class AActor* Action)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismBlueprintFunctionLibrary.AddTriggerToAction");

	UMechanismBlueprintFunctionLibrary_AddTriggerToAction_Params params;
	params.Trigger = Trigger;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UMechanismBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void APivotAnimatedMechanismActionProxy::AfterRead()
{
	ASimpleAnimatedMechanismActionProxy::AfterRead();

}

void APivotAnimatedMechanismActionProxy::BeforeDelete()
{
	ASimpleAnimatedMechanismActionProxy::BeforeDelete();

}

void ASwingMechanismActionProxy::AfterRead()
{
	APivotAnimatedMechanismActionProxy::AfterRead();

}

void ASwingMechanismActionProxy::BeforeDelete()
{
	APivotAnimatedMechanismActionProxy::BeforeDelete();

}

void APressurePlateMechanismTriggerProxy::AfterRead()
{
	AMechanismElementProxy::AfterRead();

}

void APressurePlateMechanismTriggerProxy::BeforeDelete()
{
	AMechanismElementProxy::BeforeDelete();

}

void USwitchMechanismInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USwitchMechanismInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ASwitchMechanismTriggerProxy::AfterRead()
{
	AMechanismElementProxy::AfterRead();

	READ_PTR_FULL(PositionTransitionCurve, UCurveFloat);
	READ_PTR_FULL(MaterialGroup, UClass);
}

void ASwitchMechanismTriggerProxy::BeforeDelete()
{
	AMechanismElementProxy::BeforeDelete();

	DELE_PTR_FULL(PositionTransitionCurve);
	DELE_PTR_FULL(MaterialGroup);
}

void UMechanismAnimationEvent_Audio::AfterRead()
{
	UMechanismAnimationEvent::AfterRead();

	READ_PTR_FULL(Event, UWwiseEvent);
}

void UMechanismAnimationEvent_Audio::BeforeDelete()
{
	UMechanismAnimationEvent::BeforeDelete();

	DELE_PTR_FULL(Event);
}

void UMechanismAnimationEvent_OneShotAudio::AfterRead()
{
	UMechanismAnimationEvent_Audio::AfterRead();

}

void UMechanismAnimationEvent_OneShotAudio::BeforeDelete()
{
	UMechanismAnimationEvent_Audio::BeforeDelete();

}

void UMechanismAnimationEvent_SwingAudio::AfterRead()
{
	UMechanismAnimationEvent_Audio::AfterRead();

}

void UMechanismAnimationEvent_SwingAudio::BeforeDelete()
{
	UMechanismAnimationEvent_Audio::BeforeDelete();

}

void UMechanismAnimationEvent_ContinuousAudio::AfterRead()
{
	UMechanismAnimationEvent::AfterRead();

	READ_PTR_FULL(StartEvent, UWwiseEvent);
	READ_PTR_FULL(StopEvent, UWwiseEvent);
}

void UMechanismAnimationEvent_ContinuousAudio::BeforeDelete()
{
	UMechanismAnimationEvent::BeforeDelete();

	DELE_PTR_FULL(StartEvent);
	DELE_PTR_FULL(StopEvent);
}

void UMechanismVFXEmitterComponent::AfterRead()
{
	UArrowComponent::AfterRead();

}

void UMechanismVFXEmitterComponent::BeforeDelete()
{
	UArrowComponent::BeforeDelete();

}

void UMechanismAnimationEvent_OneShotVFX::AfterRead()
{
	UMechanismAnimationEvent_VFX::AfterRead();

}

void UMechanismAnimationEvent_OneShotVFX::BeforeDelete()
{
	UMechanismAnimationEvent_VFX::BeforeDelete();

}

void UMechanismOneShotEvent::AfterRead()
{
	UMechanismEvent::AfterRead();

}

void UMechanismOneShotEvent::BeforeDelete()
{
	UMechanismEvent::BeforeDelete();

}

void UMechanismOneShotEvent_Audio::AfterRead()
{
	UMechanismOneShotEvent::AfterRead();

	READ_PTR_FULL(Event, UWwiseEvent);
}

void UMechanismOneShotEvent_Audio::BeforeDelete()
{
	UMechanismOneShotEvent::BeforeDelete();

	DELE_PTR_FULL(Event);
}

void UElevatorActionBase::AfterRead()
{
	UObject::AfterRead();

}

void UElevatorActionBase::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.KnockdownElevatorAction.DoKnockdown
// (Native, Protected, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      InDamageEvent                  (ConstParm, Parm, OutParm, ReferenceParm)
void UKnockdownElevatorAction::DoKnockdown(const struct FImpactDamageEvent& InDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KnockdownElevatorAction.DoKnockdown");

	UKnockdownElevatorAction_DoKnockdown_Params params;
	params.InDamageEvent = InDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKnockdownElevatorAction::AfterRead()
{
	UElevatorActionBase::AfterRead();

	READ_PTR_FULL(StartKnockdownEvent, UWwiseEvent);
	READ_PTR_FULL(EndKnockdownEvent, UWwiseEvent);
}

void UKnockdownElevatorAction::BeforeDelete()
{
	UElevatorActionBase::BeforeDelete();

	DELE_PTR_FULL(StartKnockdownEvent);
	DELE_PTR_FULL(EndKnockdownEvent);
}

// Function Athena.EventRoom.SignalFail
// (Final, Native, Public, BlueprintCallable)
void AEventRoom::SignalFail()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.SignalFail");

	AEventRoom_SignalFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EventRoom.SignalComplete
// (Final, Native, Public, BlueprintCallable)
void AEventRoom::SignalComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.SignalComplete");

	AEventRoom_SignalComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EventRoom.SetState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EEventRoomState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AEventRoom::SetState(TEnumAsByte<Athena_EEventRoomState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.SetState");

	AEventRoom_SetState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EventRoom.OnSetState
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<Athena_EEventRoomState> OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EEventRoomState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AEventRoom::OnSetState(TEnumAsByte<Athena_EEventRoomState> OldState, TEnumAsByte<Athena_EEventRoomState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.OnSetState");

	AEventRoom_OnSetState_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EventRoom.OnPlayerAssignedController
// (Final, Native, Public)
// Parameters:
// class AController*             JoiningController              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AEventRoom::OnPlayerAssignedController(class AController* JoiningController)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.OnPlayerAssignedController");

	AEventRoom_OnPlayerAssignedController_Params params;
	params.JoiningController = JoiningController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EventRoom.GetNumPlayersInvolvedWithRoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AEventRoom::GetNumPlayersInvolvedWithRoom()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.GetNumPlayersInvolvedWithRoom");

	AEventRoom_GetNumPlayersInvolvedWithRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EventRoom.ForceResetRoom
// (Final, Native, Public, BlueprintCallable)
void AEventRoom::ForceResetRoom()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.ForceResetRoom");

	AEventRoom_ForceResetRoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EventRoom.FlushPlayerProgress
// (Final, Native, Public, BlueprintCallable)
void AEventRoom::FlushPlayerProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EventRoom.FlushPlayerProgress");

	AEventRoom_FlushPlayerProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AEventRoom::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RoomAreaComponent, UBoxComponent);
}

void AEventRoom::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RoomAreaComponent);
}

// Function Athena.NetworkClusterEventRoom.AddActorToEventRoomCluster
// (Final, RequiredAPI, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ANetworkClusterEventRoom::AddActorToEventRoomCluster(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NetworkClusterEventRoom.AddActorToEventRoomCluster");

	ANetworkClusterEventRoom_AddActorToEventRoomCluster_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ANetworkClusterEventRoom::AfterRead()
{
	AEventRoom::AfterRead();

}

void ANetworkClusterEventRoom::BeforeDelete()
{
	AEventRoom::BeforeDelete();

}

void UAshenLordDesc::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ClassId, UClass);
	READ_PTR_FULL(DialogueData, USceneDialogueData);
}

void UAshenLordDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ClassId);
	DELE_PTR_FULL(DialogueData);
}

void UAshenLordEncounterParams::AfterRead()
{
	UGameEventParams::AfterRead();

	READ_PTR_FULL(AshenLordSpawner, UAISpawner);
	READ_PTR_FULL(AshenLordDioramaDesc, UAIDioramaDesc);
	READ_PTR_FULL(RewardsGeyserManagerParams, UGeyserManagerSetupDataAsset);
	READ_PTR_FULL(RewardLocationEnvironmentQuery, UEnvQuery);
}

void UAshenLordEncounterParams::BeforeDelete()
{
	UGameEventParams::BeforeDelete();

	DELE_PTR_FULL(AshenLordSpawner);
	DELE_PTR_FULL(AshenLordDioramaDesc);
	DELE_PTR_FULL(RewardsGeyserManagerParams);
	DELE_PTR_FULL(RewardLocationEnvironmentQuery);
}

// Function Athena.AshenLordEncounter.OnAllRewardsSpawned
// (Final, Native, Private)
void AAshenLordEncounter::OnAllRewardsSpawned()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AshenLordEncounter.OnAllRewardsSpawned");

	AAshenLordEncounter_OnAllRewardsSpawned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AAshenLordEncounter::AfterRead()
{
	AGameEvent::AfterRead();

	READ_PTR_FULL(AshenLordSpawner, UAISpawner);
	READ_PTR_FULL(AIDioramaController, UAIDioramaController);
	READ_PTR_FULL(RewardGeyserManager, AGeyserManager);
	READ_PTR_FULL(Params, UAshenLordEncounterParams);
	READ_PTR_FULL(ObservingContextProvider, UPlayerProximityObservedSpawnContextProvider);
	READ_PTR_FULL(ProximityPlayerTracker, UAIProximityPlayerTracker);
	READ_PTR_FULL(AshenLordMusicZone, AActor);
}

void AAshenLordEncounter::BeforeDelete()
{
	AGameEvent::BeforeDelete();

	DELE_PTR_FULL(AshenLordSpawner);
	DELE_PTR_FULL(AIDioramaController);
	DELE_PTR_FULL(RewardGeyserManager);
	DELE_PTR_FULL(Params);
	DELE_PTR_FULL(ObservingContextProvider);
	DELE_PTR_FULL(ProximityPlayerTracker);
	DELE_PTR_FULL(AshenLordMusicZone);
}

void UAshenLordEncounterServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAshenLordEncounterServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAshenLordEncounterServiceParams::AfterRead()
{
	UGameEventServiceParams::AfterRead();

	READ_PTR_FULL(EncounterParams, UAshenLordEncounterParams);
	READ_PTR_FULL(AshenLordEncounterClass, UClass);
}

void UAshenLordEncounterServiceParams::BeforeDelete()
{
	UGameEventServiceParams::BeforeDelete();

	DELE_PTR_FULL(EncounterParams);
	DELE_PTR_FULL(AshenLordEncounterClass);
}

void UAshenWindsFlamethrowerController::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(FlamethrowerFirePropagationIgnitionParams, UFireGridCellSelectionParamsDataAsset);
	READ_PTR_FULL(AshenWindsSkull, AAshenWindsSkull);
}

void UAshenWindsFlamethrowerController::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(FlamethrowerFirePropagationIgnitionParams);
	DELE_PTR_FULL(AshenWindsSkull);
}

void UFlamethrowerChargeInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFlamethrowerChargeInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UFlamethrowerChargeVisuals::AfterRead()
{
	UObject::AfterRead();

}

void UFlamethrowerChargeVisuals::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFlamethrowerChargeVisualsProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFlamethrowerChargeVisualsProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AAshenWindsSkull::AfterRead()
{
	AStaticSimpleBootyWieldableItem::AfterRead();

	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(UsableWieldableComponent, UUsableWieldableComponent);
	READ_PTR_FULL(FlamethrowerParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(FlamethrowerChargeParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(MaterialAnimatorComponent, UMaterialAnimatorComponent);
	READ_PTR_FULL(FlamethrowerController, UAshenWindsFlamethrowerController);
	READ_PTR_FULL(AboveWaterParticleSystem, UParticleSystem);
	READ_PTR_FULL(BelowWaterParticleSystem, UParticleSystem);
	READ_PTR_FULL(FlamethrowerLoopStartEvent, UWwiseEvent);
	READ_PTR_FULL(FlamethrowerLoopStopEvent, UWwiseEvent);
	READ_PTR_FULL(FlamethrowerActivatedEvent, UWwiseEvent);
	READ_PTR_FULL(FlamethrowerDeactivatedEvent, UWwiseEvent);
	READ_PTR_FULL(UsingFlamethrowerForceFeedback, UForceFeedbackEffect);
	READ_PTR_FULL(Wielder, APawn);
	READ_PTR_FULL(FlamethrowerChargeVisuals, UFlamethrowerChargeVisuals);
}

void AAshenWindsSkull::BeforeDelete()
{
	AStaticSimpleBootyWieldableItem::BeforeDelete();

	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(UsableWieldableComponent);
	DELE_PTR_FULL(FlamethrowerParticleSystemComponent);
	DELE_PTR_FULL(FlamethrowerChargeParticleSystemComponent);
	DELE_PTR_FULL(MaterialAnimatorComponent);
	DELE_PTR_FULL(FlamethrowerController);
	DELE_PTR_FULL(AboveWaterParticleSystem);
	DELE_PTR_FULL(BelowWaterParticleSystem);
	DELE_PTR_FULL(FlamethrowerLoopStartEvent);
	DELE_PTR_FULL(FlamethrowerLoopStopEvent);
	DELE_PTR_FULL(FlamethrowerActivatedEvent);
	DELE_PTR_FULL(FlamethrowerDeactivatedEvent);
	DELE_PTR_FULL(UsingFlamethrowerForceFeedback);
	DELE_PTR_FULL(Wielder);
	DELE_PTR_FULL(FlamethrowerChargeVisuals);
}

void UAshenWindsSkullDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UAshenWindsSkullDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.HealthComponent.ToggleGodMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHealthComponent::ToggleGodMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.ToggleGodMode");

	UHealthComponent_ToggleGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.TakeDamage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FDamageInstance         DamageInstance                 (ConstParm, Parm, OutParm, ReferenceParm)
void UHealthComponent::TakeDamage(const struct FDamageInstance& DamageInstance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.TakeDamage");

	UHealthComponent_TakeDamage_Params params;
	params.DamageInstance = DamageInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.StopContinuousHealthChange
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::StopContinuousHealthChange(TEnumAsByte<Athena_EHealthChangedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.StopContinuousHealthChange");

	UHealthComponent_StopContinuousHealthChange_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.StartContinuousHealthChange
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          AmountPerSecond                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::StartContinuousHealthChange(float AmountPerSecond, TEnumAsByte<Athena_EHealthChangedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.StartContinuousHealthChange");

	UHealthComponent_StartContinuousHealthChange_Params params;
	params.AmountPerSecond = AmountPerSecond;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::SetHealth(float Amount, TEnumAsByte<Athena_EHealthChangedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.SetHealth");

	UHealthComponent_SetHealth_Params params;
	params.Amount = Amount;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.ResetToMaxHealth
// (Final, Native, Public, BlueprintCallable)
void UHealthComponent::ResetToMaxHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.ResetToMaxHealth");

	UHealthComponent_ResetToMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.PreventAdjustmentFromHealthChangeReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EPreventDamageTypeLockReasons> LockReason                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> HealthChangeReason             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::PreventAdjustmentFromHealthChangeReason(TEnumAsByte<Athena_EPreventDamageTypeLockReasons> LockReason, TEnumAsByte<Athena_EHealthChangedReason> HealthChangeReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.PreventAdjustmentFromHealthChangeReason");

	UHealthComponent_PreventAdjustmentFromHealthChangeReason_Params params;
	params.LockReason = LockReason;
	params.HealthChangeReason = HealthChangeReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.PredictHealthChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Change                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::PredictHealthChange(float Change, TEnumAsByte<Athena_EHealthChangedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.PredictHealthChange");

	UHealthComponent_PredictHealthChange_Params params;
	params.Change = Change;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.OnRep_CurrentHealthInfo
// (Final, Native, Private)
// Parameters:
// struct FCurrentHealthInfo      PrevCurrentHealth              (Parm)
void UHealthComponent::OnRep_CurrentHealthInfo(const struct FCurrentHealthInfo& PrevCurrentHealth)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.OnRep_CurrentHealthInfo");

	UHealthComponent_OnRep_CurrentHealthInfo_Params params;
	params.PrevCurrentHealth = PrevCurrentHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.OnRep_ContinuousHealthChangeSources
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<struct FContinuousHealthChange> PrevContinuousDamageSources    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UHealthComponent::OnRep_ContinuousHealthChangeSources(TArray<struct FContinuousHealthChange> PrevContinuousDamageSources)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.OnRep_ContinuousHealthChangeSources");

	UHealthComponent_OnRep_ContinuousHealthChangeSources_Params params;
	params.PrevContinuousDamageSources = PrevContinuousDamageSources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.IsGodModeActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHealthComponent::IsGodModeActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.IsGodModeActive");

	UHealthComponent_IsGodModeActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.IsDamageTypePrevented
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EHealthChangedReason> HealthChangeReason             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHealthComponent::IsDamageTypePrevented(TEnumAsByte<Athena_EHealthChangedReason> HealthChangeReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.IsDamageTypePrevented");

	UHealthComponent_IsDamageTypePrevented_Params params;
	params.HealthChangeReason = HealthChangeReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.GetMaxHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UHealthComponent::GetMaxHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.GetMaxHealth");

	UHealthComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.GetCurrentHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UHealthComponent::GetCurrentHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.GetCurrentHealth");

	UHealthComponent_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.EnableGodMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHealthComponent::EnableGodMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.EnableGodMode");

	UHealthComponent_EnableGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.DisableGodMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHealthComponent::DisableGodMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.DisableGodMode");

	UHealthComponent_DisableGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.CanAdjustHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHealthComponent::CanAdjustHealth()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.CanAdjustHealth");

	UHealthComponent_CanAdjustHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthComponent.AllowAdjustmentFromHealthChangeReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EPreventDamageTypeLockReasons> LockReason                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> HealthChangeReason             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::AllowAdjustmentFromHealthChangeReason(TEnumAsByte<Athena_EPreventDamageTypeLockReasons> LockReason, TEnumAsByte<Athena_EHealthChangedReason> HealthChangeReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.AllowAdjustmentFromHealthChangeReason");

	UHealthComponent_AllowAdjustmentFromHealthChangeReason_Params params;
	params.LockReason = LockReason;
	params.HealthChangeReason = HealthChangeReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthComponent.AdjustHealth
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHealthComponent::AdjustHealth(float Amount, TEnumAsByte<Athena_EHealthChangedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthComponent.AdjustHealth");

	UHealthComponent_AdjustHealth_Params params;
	params.Amount = Amount;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHealthComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UHealthComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UFlamethrowerChargeComponent::AfterRead()
{
	UHealthComponent::AfterRead();

}

void UFlamethrowerChargeComponent::BeforeDelete()
{
	UHealthComponent::BeforeDelete();

}

void UShipSinkingParametersDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShipSinkingParametersDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.SinkingComponent.SinkShip
// (Final, Native, Public, BlueprintCallable)
void USinkingComponent::SinkShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.SinkShip");

	USinkingComponent_SinkShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SinkingComponent.SetSinkingParams
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSinkingShipParams      Params                         (ConstParm, Parm, OutParm, ReferenceParm)
void USinkingComponent::SetSinkingParams(const struct FSinkingShipParams& Params)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.SetSinkingParams");

	USinkingComponent_SetSinkingParams_Params params;
	params.Params = Params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SinkingComponent.SetDebugKeelOverConfigIndexOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USinkingComponent::SetDebugKeelOverConfigIndexOverride(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.SetDebugKeelOverConfigIndexOverride");

	USinkingComponent_SetDebugKeelOverConfigIndexOverride_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SinkingComponent.OnRep_ShipState
// (Final, Native, Private)
// Parameters:
// unsigned char                  PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USinkingComponent::OnRep_ShipState(unsigned char PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.OnRep_ShipState");

	USinkingComponent_OnRep_ShipState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SinkingComponent.IsSinking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool USinkingComponent::IsSinking()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.IsSinking");

	USinkingComponent_IsSinking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SinkingComponent.IsKeeledOver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool USinkingComponent::IsKeeledOver()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.IsKeeledOver");

	USinkingComponent_IsKeeledOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SinkingComponent.IsDeepEnoughInWaterToSink
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool USinkingComponent::IsDeepEnoughInWaterToSink()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.IsDeepEnoughInWaterToSink");

	USinkingComponent_IsDeepEnoughInWaterToSink_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SinkingComponent.GetSinkingParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSinkingShipParams      ReturnValue                    (Parm, OutParm, ReturnParm)
struct FSinkingShipParams USinkingComponent::GetSinkingParams()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.GetSinkingParams");

	USinkingComponent_GetSinkingParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SinkingComponent.GetShipState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EShipState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EShipState> USinkingComponent::GetShipState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.GetShipState");

	USinkingComponent_GetShipState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SinkingComponent.ForceSinkShip
// (Final, Native, Public, BlueprintCallable)
void USinkingComponent::ForceSinkShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.ForceSinkShip");

	USinkingComponent_ForceSinkShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SinkingComponent.BeginningToSinkRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void USinkingComponent::BeginningToSinkRPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SinkingComponent.BeginningToSinkRPC");

	USinkingComponent_BeginningToSinkRPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USinkingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Ship, AShip);
}

void USinkingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Ship);
}

// Function Athena.Ship.ToggleShipWaterReflections
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           EnableReflections              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AShip::ToggleShipWaterReflections(bool EnableReflections)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.ToggleShipWaterReflections");

	AShip_ToggleShipWaterReflections_Params params;
	params.EnableReflections = EnableReflections;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.SetVelocity
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Velocity                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AShip::SetVelocity(const struct FVector& Velocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.SetVelocity");

	AShip_SetVelocity_Params params;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.SetDebugKeelOverSpeedScalar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Scalar                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShip::SetDebugKeelOverSpeedScalar(float Scalar)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.SetDebugKeelOverSpeedScalar");

	AShip_SetDebugKeelOverSpeedScalar_Params params;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.ReplenishFromDebugSpawner
// (Native, Public, BlueprintCallable)
void AShip::ReplenishFromDebugSpawner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.ReplenishFromDebugSpawner");

	AShip_ReplenishFromDebugSpawner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.Replenish
// (Native, Public, BlueprintCallable)
void AShip::Replenish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.Replenish");

	AShip_Replenish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.ReduceWaterOcclusionZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReduceWaterOcclusionZoneTime   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShip::ReduceWaterOcclusionZone(float ReduceWaterOcclusionZoneTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.ReduceWaterOcclusionZone");

	AShip_ReduceWaterOcclusionZone_Params params;
	params.ReduceWaterOcclusionZoneTime = ReduceWaterOcclusionZoneTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnShipSurface
// (Event, Public, BlueprintEvent)
void AShip::OnShipSurface()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnShipSurface");

	AShip_OnShipSurface_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnShipPartUnregistered
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName                   PartName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  PartActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShip::OnShipPartUnregistered(const struct FName& PartName, class AActor* PartActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnShipPartUnregistered");

	AShip_OnShipPartUnregistered_Params params;
	params.PartName = PartName;
	params.PartActor = PartActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnShipPartRegistered
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName                   PartName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  PartActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShip::OnShipPartRegistered(const struct FName& PartName, class AActor* PartActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnShipPartRegistered");

	AShip_OnShipPartRegistered_Params params;
	params.PartName = PartName;
	params.PartActor = PartActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnShipDive
// (Event, Public, BlueprintEvent)
void AShip::OnShipDive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnShipDive");

	AShip_OnShipDive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnReturnToShipVolumeOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShip::OnReturnToShipVolumeOverlapEnd(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnReturnToShipVolumeOverlapEnd");

	AShip_OnReturnToShipVolumeOverlapEnd_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnRep_ShipTypeObject
// (Final, Native, Private)
void AShip::OnRep_ShipTypeObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnRep_ShipTypeObject");

	AShip_OnRep_ShipTypeObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnRep_ShipSizeObject
// (Final, Native, Private)
void AShip::OnRep_ShipSizeObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnRep_ShipSizeObject");

	AShip_OnRep_ShipSizeObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnRep_CrewShipManifest
// (Final, Native, Private)
void AShip::OnRep_CrewShipManifest()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnRep_CrewShipManifest");

	AShip_OnRep_CrewShipManifest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnOverlapEnd
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShip::OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnOverlapEnd");

	AShip_OnOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.OnOverlapBegin
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           FromSweep                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AShip::OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.OnOverlapBegin");

	AShip_OnOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.FromSweep = FromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.Multicast_DisableAllShipInteractablesExceptInUseWheelAndLadders
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AShip::Multicast_DisableAllShipInteractablesExceptInUseWheelAndLadders()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.Multicast_DisableAllShipInteractablesExceptInUseWheelAndLadders");

	AShip_Multicast_DisableAllShipInteractablesExceptInUseWheelAndLadders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.Multicast_DisableAllShipInteractables
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AShip::Multicast_DisableAllShipInteractables()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.Multicast_DisableAllShipInteractables");

	AShip_Multicast_DisableAllShipInteractables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.IsWorldSpacePositionBelowTopDeckPlane
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::IsWorldSpacePositionBelowTopDeckPlane(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.IsWorldSpacePositionBelowTopDeckPlane");

	AShip_IsWorldSpacePositionBelowTopDeckPlane_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.IsWorldSpacePositionBelowMidDeckPlane
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::IsWorldSpacePositionBelowMidDeckPlane(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.IsWorldSpacePositionBelowMidDeckPlane");

	AShip_IsWorldSpacePositionBelowMidDeckPlane_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.IsOcclusionZoneFullyReduced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::IsOcclusionZoneFullyReduced()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.IsOcclusionZoneFullyReduced");

	AShip_IsOcclusionZoneFullyReduced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetShipRegion
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 WorldPos                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EShipRegion> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EShipRegion> AShip::GetShipRegion(const struct FVector& WorldPos)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetShipRegion");

	AShip_GetShipRegion_Params params;
	params.WorldPos = WorldPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetShipLocatorPositionChecked
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EShipLocation> LocatorID                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AShip::GetShipLocatorPositionChecked(TEnumAsByte<Athena_EShipLocation> LocatorID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetShipLocatorPositionChecked");

	AShip_GetShipLocatorPositionChecked_Params params;
	params.LocatorID = LocatorID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetShipLocatorPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EShipLocation> LocatorName                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 LocatorPosition                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::GetShipLocatorPosition(TEnumAsByte<Athena_EShipLocation> LocatorName, struct FVector* LocatorPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetShipLocatorPosition");

	AShip_GetShipLocatorPosition_Params params;
	params.LocatorName = LocatorName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (LocatorPosition != nullptr)
		*LocatorPosition = params.LocatorPosition;


	return params.ReturnValue;
}


// Function Athena.Ship.GetSampledSpeed
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AShip::GetSampledSpeed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetSampledSpeed");

	AShip_GetSampledSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetRawHullSubmersedPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShip::GetRawHullSubmersedPercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetRawHullSubmersedPercentage");

	AShip_GetRawHullSubmersedPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetInternalWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AShipInternalWater*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AShipInternalWater* AShip::GetInternalWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetInternalWater");

	AShip_GetInternalWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetHullSubmersedPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShip::GetHullSubmersedPercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetHullSubmersedPercentage");

	AShip_GetHullSubmersedPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetHullDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AHullDamage*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AHullDamage* AShip::GetHullDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetHullDamage");

	AShip_GetHullDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetHasShipEverSetSail
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::GetHasShipEverSetSail()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetHasShipEverSetSail");

	AShip_GetHasShipEverSetSail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetEmpiricalMaxShipSpeedInMPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AShip::GetEmpiricalMaxShipSpeedInMPS()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetEmpiricalMaxShipSpeedInMPS");

	AShip_GetEmpiricalMaxShipSpeedInMPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetDeckSurfaceWater
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USurfaceWaterComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USurfaceWaterComponent* AShip::GetDeckSurfaceWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetDeckSurfaceWater");

	AShip_GetDeckSurfaceWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetCurrentVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector AShip::GetCurrentVelocity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetCurrentVelocity");

	AShip_GetCurrentVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.GetCharacterShipRegion
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*     CharacterOverlapComponent      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 WorldPos                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EShipRegion> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EShipRegion> AShip::GetCharacterShipRegion(class UPrimitiveComponent* CharacterOverlapComponent, const struct FVector& WorldPos)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.GetCharacterShipRegion");

	AShip_GetCharacterShipRegion_Params params;
	params.CharacterOverlapComponent = CharacterOverlapComponent;
	params.WorldPos = WorldPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.EnableCalmWaterBobbing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AShip::EnableCalmWaterBobbing(bool bEnable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.EnableCalmWaterBobbing");

	AShip_EnableCalmWaterBobbing_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.DisableReturnToShipBoundingSphere
// (Final, Native, Public, BlueprintCallable)
void AShip::DisableReturnToShipBoundingSphere()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.DisableReturnToShipBoundingSphere");

	AShip_DisableReturnToShipBoundingSphere_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.DisableAllShipInteractablesExceptWheelAndLadders
// (Final, Native, Public, BlueprintCallable)
void AShip::DisableAllShipInteractablesExceptWheelAndLadders()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.DisableAllShipInteractablesExceptWheelAndLadders");

	AShip_DisableAllShipInteractablesExceptWheelAndLadders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.DisableAllShipInteractables
// (Final, Native, Public, BlueprintCallable)
void AShip::DisableAllShipInteractables()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.DisableAllShipInteractables");

	AShip_DisableAllShipInteractables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.Deplete
// (Native, Public, BlueprintCallable)
void AShip::Deplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.Deplete");

	AShip_Deplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ship.CanBeReplenished
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::CanBeReplenished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.CanBeReplenished");

	AShip_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.AreShipInteractablesDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AShip::AreShipInteractablesDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.AreShipInteractablesDisabled");

	AShip_AreShipInteractablesDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ship.AddAndConfigureReturnToShipBoundingSphere
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USphereComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USphereComponent* AShip::AddAndConfigureReturnToShipBoundingSphere()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ship.AddAndConfigureReturnToShipBoundingSphere");

	AShip_AddAndConfigureReturnToShipBoundingSphere_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AShip::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(BoatCollision, UStaticMeshComponent);
	READ_PTR_FULL(BoatBasis, UBasisComponent);
	READ_PTR_FULL(OverlapHit, UStaticMeshComponent);
	READ_PTR_FULL(BelowDeckVolume, UStaticMeshComponent);
	READ_PTR_FULL(CabinVolume, UStaticMeshComponent);
	READ_PTR_FULL(TeleportLocationRetrievalComponent, UTeleportLocationRetrievalComponent);
	READ_PTR_FULL(ShipInternalWaterComponent, UChildActorComponent);
	READ_PTR_FULL(SinkingComponent, USinkingComponent);
	READ_PTR_FULL(HullCollisionComponent, UShipHullCollisionComponent);
	READ_PTR_FULL(TetherCustomisationComponent, UTetherCustomisationComponent);
	READ_PTR_FULL(StuckDetectionComponent, UShipStuckDetectionComponent);
	READ_PTR_FULL(StatusEffectManagerComponent, UStatusEffectManagerComponent);
	READ_PTR_FULL(StatusEffectPersistenceComponent, UStatusEffectPersistenceComponent);
	READ_PTR_FULL(ShipCurseComponent, UShipCurseComponent);
	READ_PTR_FULL(InstancedNavMeshComponent, UInstancedNavMeshComponent);
	READ_PTR_FULL(CrewOwnershipComponent, UCrewOwnershipComponent);
	READ_PTR_FULL(OnboardCharacterTrackerComponent, UOnboardCharacterTrackerComponent);
	READ_PTR_FULL(RewindComponent, URewindComponent);
	READ_PTR_FULL(LiveryComponent, UShipLiveryComponent);
	READ_PTR_FULL(HullLiveryCustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(SailsLiveryCustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(CannonEnchantmentCustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(RammerType, UClass);
	READ_PTR_FULL(GroupedInteractableAreaComponent, UGroupedInteractableAreaComponent);
	READ_PTR_FULL(ImpulseThrottlerComponent, UImpulseThrottlerComponent);
	READ_PTR_FULL(ReturnToShipVolume, USphereComponent);
	READ_PTR_FULL(AdventureSinkingData, UShipSinkingParametersDataAsset);
	READ_PTR_FULL(ArenaSinkingData, UShipSinkingParametersDataAsset);
	READ_PTR_FULL(NosediveBrake, UShipNosediveBrake);
	READ_PTR_FULL(RolloverCorrector, UShipRolloverCorrector);
	READ_PTR_FULL(BowSplashContainer, UBowSplashContainer);
	READ_PTR_FULL(SurfacingBowSplashContainer, UBowSplashContainer);
	READ_PTR_FULL(DivingBowSplashContainer, UBowSplashContainer);
	READ_PTR_FULL(ShipLocators, ULocatorContainer);
	READ_PTR_FULL(ShipSpeedToChoppinessScalarCurve, UCurveFloat);
	READ_PTR_FULL(HullSubmergedValueRemapping, UCurveFloat);
	READ_PTR_FULL(FirePropagationBlueprint, UClass);
	READ_PTR_FULL(FirePropagationComponent, UShipFirePropagationComponent);
	READ_PTR_FULL(ShipCategoryObject, UClass);
	READ_PTR_FULL(ShipSizeObject, UClass);
	READ_PTR_FULL(ShipTypeObject, UClass);
	READ_PTR_FULL(CrewShipManifest, ACrewShipManifest);
	READ_PTR_FULL(HullDamage, UObject);
	READ_PTR_FULL(DeckWater, USurfaceWaterComponent);
	READ_PTR_FULL(WaterExposureComponent, UWaterExposureComponent);
	READ_PTR_FULL(ShroudBreakerTrackerComponent, UShroudBreakerTrackerComponent);
	READ_PTR_FULL(ProxyClass, UClass);
}

void AShip::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(BoatCollision);
	DELE_PTR_FULL(BoatBasis);
	DELE_PTR_FULL(OverlapHit);
	DELE_PTR_FULL(BelowDeckVolume);
	DELE_PTR_FULL(CabinVolume);
	DELE_PTR_FULL(TeleportLocationRetrievalComponent);
	DELE_PTR_FULL(ShipInternalWaterComponent);
	DELE_PTR_FULL(SinkingComponent);
	DELE_PTR_FULL(HullCollisionComponent);
	DELE_PTR_FULL(TetherCustomisationComponent);
	DELE_PTR_FULL(StuckDetectionComponent);
	DELE_PTR_FULL(StatusEffectManagerComponent);
	DELE_PTR_FULL(StatusEffectPersistenceComponent);
	DELE_PTR_FULL(ShipCurseComponent);
	DELE_PTR_FULL(InstancedNavMeshComponent);
	DELE_PTR_FULL(CrewOwnershipComponent);
	DELE_PTR_FULL(OnboardCharacterTrackerComponent);
	DELE_PTR_FULL(RewindComponent);
	DELE_PTR_FULL(LiveryComponent);
	DELE_PTR_FULL(HullLiveryCustomizationComponent);
	DELE_PTR_FULL(SailsLiveryCustomizationComponent);
	DELE_PTR_FULL(CannonEnchantmentCustomizationComponent);
	DELE_PTR_FULL(RammerType);
	DELE_PTR_FULL(GroupedInteractableAreaComponent);
	DELE_PTR_FULL(ImpulseThrottlerComponent);
	DELE_PTR_FULL(ReturnToShipVolume);
	DELE_PTR_FULL(AdventureSinkingData);
	DELE_PTR_FULL(ArenaSinkingData);
	DELE_PTR_FULL(NosediveBrake);
	DELE_PTR_FULL(RolloverCorrector);
	DELE_PTR_FULL(BowSplashContainer);
	DELE_PTR_FULL(SurfacingBowSplashContainer);
	DELE_PTR_FULL(DivingBowSplashContainer);
	DELE_PTR_FULL(ShipLocators);
	DELE_PTR_FULL(ShipSpeedToChoppinessScalarCurve);
	DELE_PTR_FULL(HullSubmergedValueRemapping);
	DELE_PTR_FULL(FirePropagationBlueprint);
	DELE_PTR_FULL(FirePropagationComponent);
	DELE_PTR_FULL(ShipCategoryObject);
	DELE_PTR_FULL(ShipSizeObject);
	DELE_PTR_FULL(ShipTypeObject);
	DELE_PTR_FULL(CrewShipManifest);
	DELE_PTR_FULL(HullDamage);
	DELE_PTR_FULL(DeckWater);
	DELE_PTR_FULL(WaterExposureComponent);
	DELE_PTR_FULL(ShroudBreakerTrackerComponent);
	DELE_PTR_FULL(ProxyClass);
}

void UBTTask_WaitForWieldBase::AfterRead()
{
	UBTTaskNode::AfterRead();

}

void UBTTask_WaitForWieldBase::BeforeDelete()
{
	UBTTaskNode::BeforeDelete();

}

void UBTTask_SpawnAndWieldItem::AfterRead()
{
	UBTTask_WaitForWieldBase::AfterRead();

	READ_PTR_FULL(ItemDesc, UClass);
}

void UBTTask_SpawnAndWieldItem::BeforeDelete()
{
	UBTTask_WaitForWieldBase::BeforeDelete();

	DELE_PTR_FULL(ItemDesc);
}

void UBTTask_SpawnAmmoItemForAI::AfterRead()
{
	UBTTask_SpawnAndWieldItem::AfterRead();

}

void UBTTask_SpawnAmmoItemForAI::BeforeDelete()
{
	UBTTask_SpawnAndWieldItem::BeforeDelete();

}

void UContestPlacedFinishStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UContestPlacedFinishStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

// Function Athena.ContestRewardComponent.GiveRewards
// (Native, Protected)
void UContestRewardComponent::GiveRewards()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestRewardComponent.GiveRewards");

	UContestRewardComponent_GiveRewards_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UContestRewardComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UContestRewardComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UContestSelectIslandForItemStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UContestSelectIslandForItemStepDesc);
}

void UContestSelectIslandForItemStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UContestSelectIslandForItemStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UContestSelectIslandForItemStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.ContestTaleQuestService.GetContestVoyageData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FContestIslandArchetype> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FContestIslandArchetype> UContestTaleQuestService::GetContestVoyageData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestTaleQuestService.GetContestVoyageData");

	UContestTaleQuestService_GetContestVoyageData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UContestTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UContestTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UContestTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UContestTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

// Function Athena.ContestTavernBanners.OnRep_UnfoldBanners
// (Native, Protected)
void AContestTavernBanners::OnRep_UnfoldBanners()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestTavernBanners.OnRep_UnfoldBanners");

	AContestTavernBanners_OnRep_UnfoldBanners_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestTavernBanners.OnRep_ShouldBeHidden
// (Final, Native, Protected)
void AContestTavernBanners::OnRep_ShouldBeHidden()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestTavernBanners.OnRep_ShouldBeHidden");

	AContestTavernBanners_OnRep_ShouldBeHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestTavernBanners.OnRep_Colours
// (Final, Native, Protected)
void AContestTavernBanners::OnRep_Colours()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestTavernBanners.OnRep_Colours");

	AContestTavernBanners_OnRep_Colours_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AContestTavernBanners::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SceneRootComponent, USceneComponent);
	READ_PTR_FULL(BannerMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(AssociatedRope, AActor);
	READ_PTR_FULL(MatInst, UMaterialInstanceDynamic);
	READ_PTR_FULL(BannerTexture, UTexture2D);
}

void AContestTavernBanners::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SceneRootComponent);
	DELE_PTR_FULL(BannerMeshComponent);
	DELE_PTR_FULL(AssociatedRope);
	DELE_PTR_FULL(MatInst);
	DELE_PTR_FULL(BannerTexture);
}

void UContestTeamAssignmentComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ArenaShipCatalogue, UContestShipCatalogueDataAsset);
}

void UContestTeamAssignmentComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ArenaShipCatalogue);
}

void UContestUIComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ClientPlayerController, AAthenaPlayerController);
}

void UContestUIComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ClientPlayerController);
}

void UContestVoyagesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContestVoyagesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UContestVoyagesSelectorDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DefaultContestVoyages, UContestVoyagesDataAsset);
}

void UContestVoyagesSelectorDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DefaultContestVoyages);
}

void UContestWaitForItemHandInStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UContestWaitForItemHandInStepDesc);
}

void UContestWaitForItemHandInStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UContestWaitForItemHandInStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UContestWaitForItemHandInStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.ContestZone.OnRep_ContestSafeRegion
// (Final, Native, Private)
void AContestZone::OnRep_ContestSafeRegion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestZone.OnRep_ContestSafeRegion");

	AContestZone_OnRep_ContestSafeRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AContestZone::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ContestZoneBoundaryComponent, USphereComponent);
	READ_PTR_FULL(ContestSafeRegion, AContestSafeRegion);
	READ_PTR_FULL(PooledRespawnLocation, AShipSpawnLocation);
}

void AContestZone::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ContestZoneBoundaryComponent);
	DELE_PTR_FULL(ContestSafeRegion);
	DELE_PTR_FULL(PooledRespawnLocation);
}

// Function Athena.ControlCapstanArmActionStateId.PushCharacterIntoControlCapstanArmActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControlCapstanArmActionStateId::STATIC_PushCharacterIntoControlCapstanArmActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControlCapstanArmActionStateId.PushCharacterIntoControlCapstanArmActionState");

	UControlCapstanArmActionStateId_PushCharacterIntoControlCapstanArmActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControlCapstanArmActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UControlCapstanArmActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UControlIntentInputComponent::AfterRead()
{
	ULookAtOffsetInputComponent::AfterRead();

}

void UControlIntentInputComponent::BeforeDelete()
{
	ULookAtOffsetInputComponent::BeforeDelete();

}

void AControllableJIPTestFixture::AfterRead()
{
	ATestLevelScriptActor::AfterRead();

	READ_PTR_FULL(ObjectToSpawn, UClass);
	READ_PTR_FULL(ExpectedActionState, UClass);
	READ_PTR_FULL(ControlledActor, AActor);
}

void AControllableJIPTestFixture::BeforeDelete()
{
	ATestLevelScriptActor::BeforeDelete();

	DELE_PTR_FULL(ObjectToSpawn);
	DELE_PTR_FULL(ExpectedActionState);
	DELE_PTR_FULL(ControlledActor);
}

void UControllableMock::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ActorThatRequestedStateChange, AActor);
}

void UControllableMock::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ActorThatRequestedStateChange);
}

// Function Athena.ControllableObjectFunctionLibrary.GetAnyUncontrolledActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Actors                         (Parm, ZeroConstructor)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UControllableObjectFunctionLibrary::STATIC_GetAnyUncontrolledActor(TArray<class AActor*> Actors)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObjectFunctionLibrary.GetAnyUncontrolledActor");

	UControllableObjectFunctionLibrary_GetAnyUncontrolledActor_Params params;
	params.Actors = Actors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ControllableObjectFunctionLibrary.FilterUncontrolledActors
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Actors                         (Parm, OutParm, ZeroConstructor)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UControllableObjectFunctionLibrary::STATIC_FilterUncontrolledActors(TArray<class AActor*>* Actors)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObjectFunctionLibrary.FilterUncontrolledActors");

	UControllableObjectFunctionLibrary_FilterUncontrolledActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Actors != nullptr)
		*Actors = params.Actors;


	return params.ReturnValue;
}


// Function Athena.ControllableObjectFunctionLibrary.FilterControllableActors
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Actors                         (Parm, OutParm, ZeroConstructor)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UControllableObjectFunctionLibrary::STATIC_FilterControllableActors(TArray<class AActor*>* Actors)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableObjectFunctionLibrary.FilterControllableActors");

	UControllableObjectFunctionLibrary_FilterControllableActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Actors != nullptr)
		*Actors = params.Actors;


	return params.ReturnValue;
}


void UControllableObjectFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UControllableObjectFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UControllableObjectNamedContextualOpenRadialAction::AfterRead()
{
	UOpenRadialAction::AfterRead();

}

void UControllableObjectNamedContextualOpenRadialAction::BeforeDelete()
{
	UOpenRadialAction::BeforeDelete();

}

void USailManipulatorAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlaySailManipulator, UWwiseEvent);
	READ_PTR_FULL(StopSailManipulator, UWwiseEvent);
	READ_PTR_FULL(PlaySailManipulatorEndExtremity, UWwiseEvent);
}

void USailManipulatorAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlaySailManipulator);
	DELE_PTR_FULL(StopSailManipulator);
	DELE_PTR_FULL(PlaySailManipulatorEndExtremity);
}

// Function Athena.ControlPulleyActionStateId.PushCharacterIntoControlPulleyActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EControllableObjectType> ControllableType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  AnalogInputId                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UControlPulleyActionStateId::STATIC_PushCharacterIntoControlPulleyActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character, TEnumAsByte<Athena_EControllableObjectType> ControllableType, class UClass* AnalogInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControlPulleyActionStateId.PushCharacterIntoControlPulleyActionState");

	UControlPulleyActionStateId_PushCharacterIntoControlPulleyActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;
	params.ControllableType = ControllableType;
	params.AnalogInputId = AnalogInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControlPulleyActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UControlPulleyActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.ControlWheelActionStateId.PushCharacterIntoControlWheelActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWheel*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControlWheelActionStateId::STATIC_PushCharacterIntoControlWheelActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AWheel* ControlledObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControlWheelActionStateId.PushCharacterIntoControlWheelActionState");

	UControlWheelActionStateId_PushCharacterIntoControlWheelActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControlWheelActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UControlWheelActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UControlWheelInputComponent::AfterRead()
{
	ULookAtOffsetInputComponent::AfterRead();

	READ_PTR_FULL(IntentComponent, UIntentComponent);
	READ_PTR_FULL(Wheel, AWheel);
}

void UControlWheelInputComponent::BeforeDelete()
{
	ULookAtOffsetInputComponent::BeforeDelete();

	DELE_PTR_FULL(IntentComponent);
	DELE_PTR_FULL(Wheel);
}

// Function Athena.CoordinatedKraken.SetTargetActor
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewTargetActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedKraken::SetTargetActor(class AActor* NewTargetActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.SetTargetActor");

	ACoordinatedKraken_SetTargetActor_Params params;
	params.NewTargetActor = NewTargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.SetCurrentPhaseActionsAsset
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewAssetIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedKraken::SetCurrentPhaseActionsAsset(int NewAssetIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.SetCurrentPhaseActionsAsset");

	ACoordinatedKraken_SetCurrentPhaseActionsAsset_Params params;
	params.NewAssetIndex = NewAssetIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.OnRep_TentacleSpawnInfo
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TArray<struct FCoordinatedKrakenTentacleSpawnInfo> PreviousArray                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void ACoordinatedKraken::OnRep_TentacleSpawnInfo(TArray<struct FCoordinatedKrakenTentacleSpawnInfo> PreviousArray)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.OnRep_TentacleSpawnInfo");

	ACoordinatedKraken_OnRep_TentacleSpawnInfo_Params params;
	params.PreviousArray = PreviousArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.OnRep_TargetActorOverrideStatus
// (Final, RequiredAPI, Native, Protected)
void ACoordinatedKraken::OnRep_TargetActorOverrideStatus()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.OnRep_TargetActorOverrideStatus");

	ACoordinatedKraken_OnRep_TargetActorOverrideStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.OnRep_TargetActor
// (Final, RequiredAPI, Native, Protected)
void ACoordinatedKraken::OnRep_TargetActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.OnRep_TargetActor");

	ACoordinatedKraken_OnRep_TargetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.MulticastOnSpecialEventCallback
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TEnumAsByte<Kraken_ECoordinatedKrakenSpecialEventTypes> EventType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedKraken::MulticastOnSpecialEventCallback(TEnumAsByte<Kraken_ECoordinatedKrakenSpecialEventTypes> EventType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.MulticastOnSpecialEventCallback");

	ACoordinatedKraken_MulticastOnSpecialEventCallback_Params params;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.GetTargetActor
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* ACoordinatedKraken::GetTargetActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.GetTargetActor");

	ACoordinatedKraken_GetTargetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoordinatedKraken.GetKrakenTentacleByIndex
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            TentacleIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AKrakenAnimatedTentacle* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AKrakenAnimatedTentacle* ACoordinatedKraken::GetKrakenTentacleByIndex(int TentacleIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.GetKrakenTentacleByIndex");

	ACoordinatedKraken_GetKrakenTentacleByIndex_Params params;
	params.TentacleIndex = TentacleIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoordinatedKraken.DeactivatePhaseActionsAsset
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ACoordinatedKraken::DeactivatePhaseActionsAsset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.DeactivatePhaseActionsAsset");

	ACoordinatedKraken_DeactivatePhaseActionsAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedKraken.ActivatePhaseActionsAsset
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ACoordinatedKraken::ActivatePhaseActionsAsset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKraken.ActivatePhaseActionsAsset");

	ACoordinatedKraken_ActivatePhaseActionsAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACoordinatedKraken::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(TentacleType, UClass);
	READ_PTR_FULL(HeadType, UClass);
	READ_PTR_FULL(KrakenRoot, USceneComponent);
	READ_PTR_FULL(KrakenActionCoordinator, UKrakenActionCoordinatorComponent);
	READ_PTR_FULL(SpawnedHead, AKrakenHead);
	READ_PTR_FULL(TargetActor, AActor);
	READ_PTR_FULL(NetworkClusterEventRoom, ANetworkClusterEventRoom);
}

void ACoordinatedKraken::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(TentacleType);
	DELE_PTR_FULL(HeadType);
	DELE_PTR_FULL(KrakenRoot);
	DELE_PTR_FULL(KrakenActionCoordinator);
	DELE_PTR_FULL(SpawnedHead);
	DELE_PTR_FULL(TargetActor);
	DELE_PTR_FULL(NetworkClusterEventRoom);
}

// Function Athena.CoordinatedKrakenTentacleSpawnInfoBlueprintFunctionLibrary.GetSpawnedTentacle
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCoordinatedKrakenTentacleSpawnInfo Info                           (ConstParm, Parm, OutParm, ReferenceParm)
// class AKrakenAnimatedTentacle* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AKrakenAnimatedTentacle* UCoordinatedKrakenTentacleSpawnInfoBlueprintFunctionLibrary::STATIC_GetSpawnedTentacle(const struct FCoordinatedKrakenTentacleSpawnInfo& Info)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedKrakenTentacleSpawnInfoBlueprintFunctionLibrary.GetSpawnedTentacle");

	UCoordinatedKrakenTentacleSpawnInfoBlueprintFunctionLibrary_GetSpawnedTentacle_Params params;
	params.Info = Info;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCoordinatedKrakenTentacleSpawnInfoBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCoordinatedKrakenTentacleSpawnInfoBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCosmeticVfxInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCosmeticVfxInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCosmeticVfxComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCosmeticVfxComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.CrewFunctions.SetCrewSpawnProgressOverrideId
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                  ProgressId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UCrewFunctions::STATIC_SetCrewSpawnProgressOverrideId(class UWorld* World, const struct FGuid& CrewId, class UClass* ProgressId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.SetCrewSpawnProgressOverrideId");

	UCrewFunctions_SetCrewSpawnProgressOverrideId_Params params;
	params.World = World;
	params.CrewId = CrewId;
	params.ProgressId = ProgressId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.SetCrewShipProgressionSpawnLocations
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AProgressShipSpawnLocation*> SpawnLocations                 (ConstParm, Parm, ZeroConstructor)
void UCrewFunctions::STATIC_SetCrewShipProgressionSpawnLocations(class UObject* WorldContext, const struct FGuid& CrewId, TArray<class AProgressShipSpawnLocation*> SpawnLocations)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.SetCrewShipProgressionSpawnLocations");

	UCrewFunctions_SetCrewShipProgressionSpawnLocations_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.SpawnLocations = SpawnLocations;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.ResetCrewToSpawnLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AShipSpawnLocation*      SpawnLocation                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCrewFunctions::STATIC_ResetCrewToSpawnLocation(class UObject* WorldContext, const struct FGuid& CrewId, class AShipSpawnLocation* SpawnLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.ResetCrewToSpawnLocation");

	UCrewFunctions_ResetCrewToSpawnLocation_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.SpawnLocation = SpawnLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.ResetCrewToSafeSpawnLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 ActorLocation                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCrewFunctions::STATIC_ResetCrewToSafeSpawnLocation(class UObject* WorldContext, const struct FGuid& CrewId, const struct FVector& ActorLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.ResetCrewToSafeSpawnLocation");

	UCrewFunctions_ResetCrewToSafeSpawnLocation_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.ActorLocation = ActorLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.RemoveCharacterFromCrew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCrewFunctions::STATIC_RemoveCharacterFromCrew(class UObject* WorldContext, class AAthenaCharacter* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.RemoveCharacterFromCrew");

	UCrewFunctions_RemoveCharacterFromCrew_Params params;
	params.WorldContext = WorldContext;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.QueueNewShipForRespawnAndSetCrewSpawnLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewFunctions::STATIC_QueueNewShipForRespawnAndSetCrewSpawnLocation(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.QueueNewShipForRespawnAndSetCrewSpawnLocation");

	UCrewFunctions_QueueNewShipForRespawnAndSetCrewSpawnLocation_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.IsCharacterMemberOfCrew
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewFunctions::STATIC_IsCharacterMemberOfCrew(class AAthenaCharacter* Player, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.IsCharacterMemberOfCrew");

	UCrewFunctions_IsCharacterMemberOfCrew_Params params;
	params.Player = Player;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.IsActorMemberOfCharactersCrew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewFunctions::STATIC_IsActorMemberOfCharactersCrew(class AActor* Actor, class AAthenaCharacter* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.IsActorMemberOfCharactersCrew");

	UCrewFunctions_IsActorMemberOfCharactersCrew_Params params;
	params.Actor = Actor;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetShipSizeForCrewId
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UCrewFunctions::STATIC_GetShipSizeForCrewId(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.GetShipSizeForCrewId");

	UCrewFunctions_GetShipSizeForCrewId_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetShipSizeForActorsCrew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UCrewFunctions::STATIC_GetShipSizeForActorsCrew(class UObject* WorldContext, class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.GetShipSizeForActorsCrew");

	UCrewFunctions_GetShipSizeForActorsCrew_Params params;
	params.WorldContext = WorldContext;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetPlayerControllersFromCrew
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TArray<class AAthenaPlayerController*> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AAthenaPlayerController*> UCrewFunctions::STATIC_GetPlayerControllersFromCrew(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.GetPlayerControllersFromCrew");

	UCrewFunctions_GetPlayerControllersFromCrew_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetCrewIdFromActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UCrewFunctions::STATIC_GetCrewIdFromActor(class UObject* WorldContext, class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.GetCrewIdFromActor");

	UCrewFunctions_GetCrewIdFromActor_Params params;
	params.WorldContext = WorldContext;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.FindAndAssignSpawnLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewFunctions::STATIC_FindAndAssignSpawnLocation(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.FindAndAssignSpawnLocation");

	UCrewFunctions_FindAndAssignSpawnLocation_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.CreateCrew
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AAthenaPlayerState*      FirstMember                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Sessions_ESessionVisibility> SessionVisibility              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCrewFunctions::STATIC_CreateCrew(class UObject* WorldContext, const struct FGuid& CrewId, class AAthenaPlayerState* FirstMember, TEnumAsByte<Sessions_ESessionVisibility> SessionVisibility)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.CreateCrew");

	UCrewFunctions_CreateCrew_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.FirstMember = FirstMember;
	params.SessionVisibility = SessionVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.ClearCrewSpawnProgressOverrideId
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCrewFunctions::STATIC_ClearCrewSpawnProgressOverrideId(class UWorld* World, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.ClearCrewSpawnProgressOverrideId");

	UCrewFunctions_ClearCrewSpawnProgressOverrideId_Params params;
	params.World = World;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.ClearCrewShipProgressionSpawnLocations
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCrewFunctions::STATIC_ClearCrewShipProgressionSpawnLocations(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.ClearCrewShipProgressionSpawnLocations");

	UCrewFunctions_ClearCrewShipProgressionSpawnLocations_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.AreInSameCrew
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   CrewId1                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FGuid                   CrewId2                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewFunctions::STATIC_AreInSameCrew(const struct FGuid& CrewId1, const struct FGuid& CrewId2)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.AreInSameCrew");

	UCrewFunctions_AreInSameCrew_Params params;
	params.CrewId1 = CrewId1;
	params.CrewId2 = CrewId2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.AreCharactersInSameCrew
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Player1                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        Player2                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCrewFunctions::STATIC_AreCharactersInSameCrew(class AAthenaCharacter* Player1, class AAthenaCharacter* Player2)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.AreCharactersInSameCrew");

	UCrewFunctions_AreCharactersInSameCrew_Params params;
	params.Player1 = Player1;
	params.Player2 = Player2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewFunctions.AddShipToCrew
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AShip*                   Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UCrewFunctions::STATIC_AddShipToCrew(class UObject* WorldContext, class AShip* Ship, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.AddShipToCrew");

	UCrewFunctions_AddShipToCrew_Params params;
	params.WorldContext = WorldContext;
	params.Ship = Ship;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewFunctions.AddCharacterToCrew
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaCharacter*        Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UCrewFunctions::STATIC_AddCharacterToCrew(class UObject* WorldContext, class AAthenaCharacter* Player, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewFunctions.AddCharacterToCrew");

	UCrewFunctions_AddCharacterToCrew_Params params;
	params.WorldContext = WorldContext;
	params.Player = Player;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCrewFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCrewFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCrewNotificationSettings::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlayerJoiningPopup, UPopUpMessageDesc);
	READ_PTR_FULL(PlayerLeavingPopup, UPopUpMessageDesc);
}

void UCrewNotificationSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlayerJoiningPopup);
	DELE_PTR_FULL(PlayerLeavingPopup);
}

void UCrewOwnershipComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCrewOwnershipComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UDebugCrewServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDebugCrewServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CrewService.OnRep_Crews
// (Final, Native, Protected)
void ACrewService::OnRep_Crews()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewService.OnRep_Crews");

	ACrewService_OnRep_Crews_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACrewService::AfterRead()
{
	AActor::AfterRead();

}

void ACrewService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void ADebugCrewService::AfterRead()
{
	ACrewService::AfterRead();

}

void ADebugCrewService::BeforeDelete()
{
	ACrewService::BeforeDelete();

}

void UCrewSessionConfig::AfterRead()
{
	UObject::AfterRead();

}

void UCrewSessionConfig::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTallTaleServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTallTaleServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipCustomizationLoadoutControlInterface.UnequipShipCustomization
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipCustomizationLoadoutControlInterface::UnequipShipCustomization(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutControlInterface.UnequipShipCustomization");

	UShipCustomizationLoadoutControlInterface_UnequipShipCustomization_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.SetShipCustomizationLoadout
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FShipCustomizationLoadout InLoadout                      (ConstParm, Parm, OutParm, ReferenceParm)
void UShipCustomizationLoadoutControlInterface::SetShipCustomizationLoadout(const struct FShipCustomizationLoadout& InLoadout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutControlInterface.SetShipCustomizationLoadout");

	UShipCustomizationLoadoutControlInterface_SetShipCustomizationLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipCustomizationLoadoutControlInterface.SetInitialShipCustomizations
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          InInitialCustomizations        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipCustomizationLoadoutControlInterface::SetInitialShipCustomizations(TArray<class UClass*> InInitialCustomizations)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutControlInterface.SetInitialShipCustomizations");

	UShipCustomizationLoadoutControlInterface_SetInitialShipCustomizations_Params params;
	params.InInitialCustomizations = InInitialCustomizations;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.GetShipCustomizationLoadout
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FShipCustomizationLoadout ReturnValue                    (Parm, OutParm, ReturnParm)
struct FShipCustomizationLoadout UShipCustomizationLoadoutControlInterface::GetShipCustomizationLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutControlInterface.GetShipCustomizationLoadout");

	UShipCustomizationLoadoutControlInterface_GetShipCustomizationLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.EquipShipCustomization
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipCustomizationLoadoutControlInterface::EquipShipCustomization(class UClass* InDesc, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutControlInterface.EquipShipCustomization");

	UShipCustomizationLoadoutControlInterface_EquipShipCustomization_Params params;
	params.InDesc = InDesc;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipCustomizationLoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipCustomizationLoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipCustomizationLoadoutViewInterface.GetShipCustomizationLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FShipCustomizationLoadout ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FShipCustomizationLoadout UShipCustomizationLoadoutViewInterface::GetShipCustomizationLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutViewInterface.GetShipCustomizationLoadout");

	UShipCustomizationLoadoutViewInterface_GetShipCustomizationLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutViewInterface.GetInitialShipCustomizations
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper)
TArray<class UClass*> UShipCustomizationLoadoutViewInterface::GetInitialShipCustomizations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutViewInterface.GetInitialShipCustomizations");

	UShipCustomizationLoadoutViewInterface_GetInitialShipCustomizations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutViewInterface.GetActivePartCustomizations
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FPartDesc>       ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
TArray<struct FPartDesc> UShipCustomizationLoadoutViewInterface::GetActivePartCustomizations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutViewInterface.GetActivePartCustomizations");

	UShipCustomizationLoadoutViewInterface_GetActivePartCustomizations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipCustomizationLoadoutViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipCustomizationLoadoutViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UFireChargedAttackAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

}

void UFireChargedAttackAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

}

void UFireChargedAttackAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UFireChargedAttackAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

// Function Athena.FiredFromCannonActionStateId.PushCharacterIntoFiredFromCannonActionState
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  FiringActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UFiredFromCannonActionStateId::STATIC_PushCharacterIntoFiredFromCannonActionState(class AActor* Character, class AActor* FiringActor, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FiredFromCannonActionStateId.PushCharacterIntoFiredFromCannonActionState");

	UFiredFromCannonActionStateId_PushCharacterIntoFiredFromCannonActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FiredFromCannonActionStateId.PopCharacterOutOfFiredFromCannonActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFiredFromCannonActionStateId::STATIC_PopCharacterOutOfFiredFromCannonActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FiredFromCannonActionStateId.PopCharacterOutOfFiredFromCannonActionState");

	UFiredFromCannonActionStateId_PopCharacterOutOfFiredFromCannonActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFiredFromCannonActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UFiredFromCannonActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UFireStatStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UFireStatStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UFirstPersonAnimaticActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UFirstPersonAnimaticActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UFixedIntentComponent::AfterRead()
{
	UControllableIntentComponent::AfterRead();

}

void UFixedIntentComponent::BeforeDelete()
{
	UControllableIntentComponent::BeforeDelete();

}

void UFlamesOfFateInteractableComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

}

void UFlamesOfFateInteractableComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

}

void UFlamesOfFateQuestInteractableComponent::AfterRead()
{
	UFlamesOfFateInteractableComponent::AfterRead();

}

void UFlamesOfFateQuestInteractableComponent::BeforeDelete()
{
	UFlamesOfFateInteractableComponent::BeforeDelete();

}

// Function Athena.FlamesOfFateLantern.GetTextureForFlameOfFateType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* AFlamesOfFateLantern::GetTextureForFlameOfFateType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamesOfFateLantern.GetTextureForFlameOfFateType");

	AFlamesOfFateLantern_GetTextureForFlameOfFateType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FlamesOfFateLantern.GetColourForFlameOfFateType
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EFlameColourType> ColourType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor            DefaultColour                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FLinearColor AFlamesOfFateLantern::GetColourForFlameOfFateType(TEnumAsByte<Athena_EFlameColourType> ColourType, const struct FLinearColor& DefaultColour)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FlamesOfFateLantern.GetColourForFlameOfFateType");

	AFlamesOfFateLantern_GetColourForFlameOfFateType_Params params;
	params.ColourType = ColourType;
	params.DefaultColour = DefaultColour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AFlamesOfFateLantern::AfterRead()
{
	AActor::AfterRead();

}

void AFlamesOfFateLantern::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UFlamesOfFateSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFlamesOfFateSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void AFlamesOfFateSettingsService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Settings, UFlamesOfFateSettingsAsset);
}

void AFlamesOfFateSettingsService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Settings);
}

void UFlintlockDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UFlintlockDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UPersistentSalvageItemSpawnComponent::AfterRead()
{
	USalvageItemSpawnComponent::AfterRead();

}

void UPersistentSalvageItemSpawnComponent::BeforeDelete()
{
	USalvageItemSpawnComponent::BeforeDelete();

}

void UPersistentSalvageItemSpawnComponentMock::AfterRead()
{
	UPersistentSalvageItemSpawnComponent::AfterRead();

}

void UPersistentSalvageItemSpawnComponentMock::BeforeDelete()
{
	UPersistentSalvageItemSpawnComponent::BeforeDelete();

}

void APetActionStateCreatorDefinition::AfterRead()
{
	AActionStateCreatorDefinition::AfterRead();

}

void APetActionStateCreatorDefinition::BeforeDelete()
{
	AActionStateCreatorDefinition::BeforeDelete();

}

// Function Athena.SwitchMechanismTrigger.OnRep_CurrentPositionIndex
// (Final, Native, Private)
// Parameters:
// int                            PreviousIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASwitchMechanismTrigger::OnRep_CurrentPositionIndex(int PreviousIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwitchMechanismTrigger.OnRep_CurrentPositionIndex");

	ASwitchMechanismTrigger_OnRep_CurrentPositionIndex_Params params;
	params.PreviousIndex = PreviousIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwitchMechanismTrigger.OnMechanismTriggerChangedMechanismActionStates
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> State                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASwitchMechanismTrigger::OnMechanismTriggerChangedMechanismActionStates(TEnumAsByte<Athena_EMechanismActionState> State)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwitchMechanismTrigger.OnMechanismTriggerChangedMechanismActionStates");

	ASwitchMechanismTrigger_OnMechanismTriggerChangedMechanismActionStates_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwitchMechanismTrigger.OnMechanismReset
// (Final, Native, Private)
void ASwitchMechanismTrigger::OnMechanismReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwitchMechanismTrigger.OnMechanismReset");

	ASwitchMechanismTrigger_OnMechanismReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwitchMechanismTrigger.OnAnimationStarted
// (Native, Event, Protected, BlueprintEvent)
void ASwitchMechanismTrigger::OnAnimationStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwitchMechanismTrigger.OnAnimationStarted");

	ASwitchMechanismTrigger_OnAnimationStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwitchMechanismTrigger.OnAnimationCompleted
// (Native, Event, Protected, BlueprintEvent)
void ASwitchMechanismTrigger::OnAnimationCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwitchMechanismTrigger.OnAnimationCompleted");

	ASwitchMechanismTrigger_OnAnimationCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASwitchMechanismTrigger::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(Pivot, USceneComponent);
	READ_PTR_FULL(MechanismTriggerComponent, UMechanismTriggerComponent);
	READ_PTR_FULL(PositionTransitionCurve, UCurveFloat);
	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(MaterialGroup, UClass);
}

void ASwitchMechanismTrigger::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Pivot);
	DELE_PTR_FULL(MechanismTriggerComponent);
	DELE_PTR_FULL(PositionTransitionCurve);
	DELE_PTR_FULL(AudioEmitterPool);
	DELE_PTR_FULL(MaterialGroup);
}

void UPossessionsChestViewModel::AfterRead()
{
	UViewModelComponentBase::AfterRead();

}

void UPossessionsChestViewModel::BeforeDelete()
{
	UViewModelComponentBase::BeforeDelete();

}

void UArmoryChestViewModelComponent::AfterRead()
{
	UPossessionsChestViewModel::AfterRead();

}

void UArmoryChestViewModelComponent::BeforeDelete()
{
	UPossessionsChestViewModel::BeforeDelete();

}

void UClothingChestViewModelComponent::AfterRead()
{
	UPossessionsChestViewModel::AfterRead();

}

void UClothingChestViewModelComponent::BeforeDelete()
{
	UPossessionsChestViewModel::BeforeDelete();

}

void UEquipmentChestViewModelComponent::AfterRead()
{
	UPossessionsChestViewModel::AfterRead();

}

void UEquipmentChestViewModelComponent::BeforeDelete()
{
	UPossessionsChestViewModel::BeforeDelete();

}

void UPetChestViewModelComponent::AfterRead()
{
	UPossessionsChestViewModel::AfterRead();

}

void UPetChestViewModelComponent::BeforeDelete()
{
	UPossessionsChestViewModel::BeforeDelete();

}

void USetTaleProgressStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USetTaleProgressStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UShadowAIFormDataAsset::AfterRead()
{
	UAthenaAIFormDataAsset::AfterRead();

}

void UShadowAIFormDataAsset::BeforeDelete()
{
	UAthenaAIFormDataAsset::BeforeDelete();

}

void UShadowAIFormProximityPlayerTracker::AfterRead()
{
	UAIPlayerTracker::AfterRead();

}

void UShadowAIFormProximityPlayerTracker::BeforeDelete()
{
	UAIPlayerTracker::BeforeDelete();

}

void UShantyItemDescToSlotRemappingDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShantyItemDescToSlotRemappingDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UShantyRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

	READ_PTR_FULL(RemappingDataAsset, UShantyItemDescToSlotRemappingDataAsset);
}

void UShantyRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

	DELE_PTR_FULL(RemappingDataAsset);
}

void UShantyService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ShantySettings, UShantySettings);
}

void UShantyService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ShantySettings);
}

void AShantyZone::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AudioZone, UOverlapTriggerComponent);
	READ_PTR_FULL(BaseInstrument, UClass);
	READ_PTR_FULL(Root, UPrimitiveComponent);
	READ_PTR_FULL(Instrument, AMusicalInstrument);
}

void AShantyZone::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AudioZone);
	DELE_PTR_FULL(BaseInstrument);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Instrument);
}

void UVfxSelectorDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVfxSelectorDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.VfxSelectorFunctionLibrary.SelectUpdateVfxWithOwner
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UVfxSelectorDataAsset*   SelectorAsset                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ExistingVfx                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EAttachLocation> LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxSelectorFunctionLibrary::STATIC_SelectUpdateVfxWithOwner(class UVfxSelectorDataAsset* SelectorAsset, float Value, class AActor* Owner, class UParticleSystemComponent* ExistingVfx, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, TEnumAsByte<Engine_EAttachLocation> LocationType, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxSelectorFunctionLibrary.SelectUpdateVfxWithOwner");

	UVfxSelectorFunctionLibrary_SelectUpdateVfxWithOwner_Params params;
	params.SelectorAsset = SelectorAsset;
	params.Value = Value;
	params.Owner = Owner;
	params.ExistingVfx = ExistingVfx;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.LocationType = LocationType;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfxAttachedWithOwner
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UVfxSelectorDataAsset*   SelectorAsset                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EAttachLocation> LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxSelectorFunctionLibrary::STATIC_SelectSpawnVfxAttachedWithOwner(class UVfxSelectorDataAsset* SelectorAsset, float Value, class USceneComponent* AttachToComponent, class AActor* Owner, const struct FName& AttachPointName, TEnumAsByte<Engine_EAttachLocation> LocationType, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfxAttachedWithOwner");

	UVfxSelectorFunctionLibrary_SelectSpawnVfxAttachedWithOwner_Params params;
	params.SelectorAsset = SelectorAsset;
	params.Value = Value;
	params.AttachToComponent = AttachToComponent;
	params.Owner = Owner;
	params.AttachPointName = AttachPointName;
	params.LocationType = LocationType;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfx
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVfxSelectorDataAsset*   SelectorAsset                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxSelectorFunctionLibrary::STATIC_SelectSpawnVfx(class AActor* Actor, class UVfxSelectorDataAsset* SelectorAsset, float Value, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfx");

	UVfxSelectorFunctionLibrary_SelectSpawnVfx_Params params;
	params.Actor = Actor;
	params.SelectorAsset = SelectorAsset;
	params.Value = Value;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVfxSelectorFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UVfxSelectorFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.VFXSpawnerComponent.OnRep_StateChange
// (Final, Native, Private)
// Parameters:
// bool                           OldState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVFXSpawnerComponent::OnRep_StateChange(bool OldState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VFXSpawnerComponent.OnRep_StateChange");

	UVFXSpawnerComponent_OnRep_StateChange_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVFXSpawnerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CachedParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(AttachedSceneComponent, USceneComponent);
}

void UVFXSpawnerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CachedParticleSystem);
	DELE_PTR_FULL(AttachedSceneComponent);
}

void UVFXViewerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVFXViewerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UBuoyancyInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UBuoyancyInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.BuoyancyComponent.Sink
// (Native, Public, BlueprintCallable)
void UBuoyancyComponent::Sink()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.Sink");

	UBuoyancyComponent_Sink_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BuoyancyComponent.ShouldBeStationary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UBuoyancyComponent::ShouldBeStationary()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.ShouldBeStationary");

	UBuoyancyComponent_ShouldBeStationary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BuoyancyComponent.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InEnabled                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UBuoyancyComponent::SetEnabled(bool InEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.SetEnabled");

	UBuoyancyComponent_SetEnabled_Params params;
	params.InEnabled = InEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BuoyancyComponent.OnRigidBodyWake
// (Final, Native, Protected)
// Parameters:
// struct FName                   InBoneName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBuoyancyComponent::OnRigidBodyWake(const struct FName& InBoneName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.OnRigidBodyWake");

	UBuoyancyComponent_OnRigidBodyWake_Params params;
	params.InBoneName = InBoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BuoyancyComponent.OnRigidBodySleep
// (Final, Native, Protected)
// Parameters:
// struct FName                   InBoneName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBuoyancyComponent::OnRigidBodySleep(const struct FName& InBoneName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.OnRigidBodySleep");

	UBuoyancyComponent_OnRigidBodySleep_Params params;
	params.InBoneName = InBoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BuoyancyComponent.OnRep_State
// (Final, Native, Private)
void UBuoyancyComponent::OnRep_State()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.OnRep_State");

	UBuoyancyComponent_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BuoyancyComponent.IsStationary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UBuoyancyComponent::IsStationary()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.IsStationary");

	UBuoyancyComponent_IsStationary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BuoyancyComponent.IsSinking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UBuoyancyComponent::IsSinking()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.IsSinking");

	UBuoyancyComponent_IsSinking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BuoyancyComponent.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UBuoyancyComponent::IsEnabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyancyComponent.IsEnabled");

	UBuoyancyComponent_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBuoyancyComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(VisibleMesh, UPrimitiveComponent);
}

void UBuoyancyComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(VisibleMesh);
}

// Function Athena.BuoyantActor.OnRep_PhysicsState
// (Final, Native, Protected)
void ABuoyantActor::OnRep_PhysicsState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyantActor.OnRep_PhysicsState");

	ABuoyantActor_OnRep_PhysicsState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABuoyantActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMeshComponent);
	READ_PTR_FULL(BaseComponent, UShapeComponent);
	READ_PTR_FULL(BuoyancyComponent, UBuoyancyComponent);
	READ_PTR_FULL(DitherComponent, UDitherComponent);
	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
}

void ABuoyantActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(BaseComponent);
	DELE_PTR_FULL(BuoyancyComponent);
	DELE_PTR_FULL(DitherComponent);
	DELE_PTR_FULL(WaterInteractionComponent);
}

void ULoginOptionsProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoginOptionsProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaLocalPlayer::AfterRead()
{
	ULocalPlayer::AfterRead();

}

void UAthenaLocalPlayer::BeforeDelete()
{
	ULocalPlayer::BeforeDelete();

}

void UAthenaLocalPlayerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaLocalPlayerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaLocalPlayerRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaLocalPlayerRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAtlasSlotRenderer::AfterRead()
{
	UInterface::AfterRead();

}

void UAtlasSlotRenderer::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCinematicQuestRunnable::AfterRead()
{
	URunnable::AfterRead();

}

void UCinematicQuestRunnable::BeforeDelete()
{
	URunnable::BeforeDelete();

}

void UHUDProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHUDProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.NamedObjectInterface.GetObjectDisplayName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)
struct FText UNamedObjectInterface::GetObjectDisplayName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedObjectInterface.GetObjectDisplayName");

	UNamedObjectInterface_GetObjectDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNamedObjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNamedObjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPopUpAudioDesc::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPopUpAudioDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPopUpMessageDesc::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPopUpMessageDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.DamageableInterface.OnDamageableImpact
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDamageableInterface::OnDamageableImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageableInterface.OnDamageableImpact");

	UDamageableInterface_OnDamageableImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageableInterface.CanApplyDamage
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDamageableInterface::CanApplyDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageableInterface.CanApplyDamage");

	UDamageableInterface_CanApplyDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDamageableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDamageableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DamageTrackerComponent.OnDamageTaken
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      InImpactDamageEvent            (ConstParm, Parm, OutParm, ReferenceParm)
void UDamageTrackerComponent::OnDamageTaken(const struct FImpactDamageEvent& InImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageTrackerComponent.OnDamageTaken");

	UDamageTrackerComponent_OnDamageTaken_Params params;
	params.InImpactDamageEvent = InImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDamageTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DamageableComponent, UDamageableComponent);
}

void UDamageTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DamageableComponent);
}

void UGatedHealthInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGatedHealthInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHealthInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHealthInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHealthCustomizationServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHealthCustomizationServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHealthCustomizationService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void UHealthCustomizationService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UHealthRegenerationPoolInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHealthRegenerationPoolInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.HitReactionInterface.OnHitReactionImpact
// (Native, Public, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void UHitReactionInterface::OnHitReactionImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HitReactionInterface.OnHitReactionImpact");

	UHitReactionInterface_OnHitReactionImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHitReactionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHitReactionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULivingEntityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULivingEntityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAttitudeSource::AfterRead()
{
	UInterface::AfterRead();

}

void UAttitudeSource::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ClamberActionStateId.PushCharacterIntoClamberActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ClamberActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          NormalisedInteractionWidth     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  ClimbId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLadderBlendParams      ClamberBlendParams             (ConstParm, Parm, OutParm, ReferenceParm)
void UClamberActionStateId::STATIC_PushCharacterIntoClamberActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ClamberActor, class AActor* Character, float NormalisedInteractionWidth, unsigned char ClimbId, const struct FLadderBlendParams& ClamberBlendParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClamberActionStateId.PushCharacterIntoClamberActionState");

	UClamberActionStateId_PushCharacterIntoClamberActionState_Params params;
	params.TrackId = TrackId;
	params.ClamberActor = ClamberActor;
	params.Character = Character;
	params.NormalisedInteractionWidth = NormalisedInteractionWidth;
	params.ClimbId = ClimbId;
	params.ClamberBlendParams = ClamberBlendParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UClamberActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UClamberActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void AClamberSpot::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(ClamberSplineComponent, USplineComponent);
	READ_PTR_FULL(OnClamberSfx, UWwiseEvent);
	READ_PTR_FULL(ClamberSpotPool, UWwiseObjectPoolWrapper);
}

void AClamberSpot::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(ClamberSplineComponent);
	DELE_PTR_FULL(OnClamberSfx);
	DELE_PTR_FULL(ClamberSpotPool);
}

// Function Athena.ClimbingComponent.SetClimbId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  InClimbId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UClimbingComponent::SetClimbId(unsigned char InClimbId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClimbingComponent.SetClimbId");

	UClimbingComponent_SetClimbId_Params params;
	params.InClimbId = InClimbId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClimbingComponent.IsClimbIdInSyncWithServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UClimbingComponent::IsClimbIdInSyncWithServer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClimbingComponent.IsClimbIdInSyncWithServer");

	UClimbingComponent_IsClimbIdInSyncWithServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ClimbingComponent.GetServerHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UClimbingComponent::GetServerHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClimbingComponent.GetServerHeight");

	UClimbingComponent_GetServerHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ClimbingComponent.GetIsCurrentlyClimbing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UClimbingComponent::GetIsCurrentlyClimbing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClimbingComponent.GetIsCurrentlyClimbing");

	UClimbingComponent_GetIsCurrentlyClimbing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UClimbingComponent::AfterRead()
{
	UIntentComponent::AfterRead();

}

void UClimbingComponent::BeforeDelete()
{
	UIntentComponent::BeforeDelete();

}

// Function Athena.ControllableInterface.TakenControl
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControllableInterface::TakenControl(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableInterface.TakenControl");

	UControllableInterface_TakenControl_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllableInterface.RequestStateChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControllableInterface::RequestStateChange(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableInterface.RequestStateChange");

	UControllableInterface_RequestStateChange_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllableInterface.RequestRelinquishControl
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void UControllableInterface::RequestRelinquishControl()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableInterface.RequestRelinquishControl");

	UControllableInterface_RequestRelinquishControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllableInterface.RelinquishedController
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControllableInterface::RelinquishedController(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableInterface.RelinquishedController");

	UControllableInterface_RelinquishedController_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControllableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UControllableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ControllableMessagesInterface.TakenControlOfWheel
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControllableMessagesInterface::TakenControlOfWheel(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableMessagesInterface.TakenControlOfWheel");

	UControllableMessagesInterface_TakenControlOfWheel_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllableMessagesInterface.RelinquishedControl
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControllableMessagesInterface::RelinquishedControl(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllableMessagesInterface.RelinquishedControl");

	UControllableMessagesInterface_RelinquishedControl_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControllableMessagesInterface::AfterRead()
{
	UObjectMessagingInterface::AfterRead();

}

void UControllableMessagesInterface::BeforeDelete()
{
	UObjectMessagingInterface::BeforeDelete();

}

// Function Athena.ControllablePulleyInterface.SetLookAtPositionInWorldSpace
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 NewWorldSpaceLookAtPosition    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UControllablePulleyInterface::SetLookAtPositionInWorldSpace(const struct FVector& NewWorldSpaceLookAtPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllablePulleyInterface.SetLookAtPositionInWorldSpace");

	UControllablePulleyInterface_SetLookAtPositionInWorldSpace_Params params;
	params.NewWorldSpaceLookAtPosition = NewWorldSpaceLookAtPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllablePulleyInterface.SetIntent
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          NewIntent                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControllablePulleyInterface::SetIntent(float NewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllablePulleyInterface.SetIntent");

	UControllablePulleyInterface_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ControllablePulleyInterface.GetLookAtPositionInWorldSpace
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UControllablePulleyInterface::GetLookAtPositionInWorldSpace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllablePulleyInterface.GetLookAtPositionInWorldSpace");

	UControllablePulleyInterface_GetLookAtPositionInWorldSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ControllablePulleyInterface.GetCurrentIntent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UControllablePulleyInterface::GetCurrentIntent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllablePulleyInterface.GetCurrentIntent");

	UControllablePulleyInterface_GetCurrentIntent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UControllablePulleyInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UControllablePulleyInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ControllerInterface.EndControl
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void UControllerInterface::EndControl()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControllerInterface.EndControl");

	UControllerInterface_EndControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControllerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UControllerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DockableBase.OnInteract_Client_Implementation
// (Event, Protected, BlueprintEvent)
void ADockableBase::OnInteract_Client_Implementation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableBase.OnInteract_Client_Implementation");

	ADockableBase_OnInteract_Client_Implementation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DockableBase.GetGender_Client_Implementation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  InteractingActor               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ADockableBase::GetGender_Client_Implementation(class AActor* InteractingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableBase.GetGender_Client_Implementation");

	ADockableBase_GetGender_Client_Implementation_Params params;
	params.InteractingActor = InteractingActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ADockableBase::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(SkeletalMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(FirstPersonLevelSequenceToPlay, ULevelSequence);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
}

void ADockableBase::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(SkeletalMeshComponent);
	DELE_PTR_FULL(FirstPersonLevelSequenceToPlay);
	DELE_PTR_FULL(InteractableComponent);
}

// Function Athena.ControlObjectActionStateId.PushCharacterIntoControlObjectActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UControlObjectActionStateId::STATIC_PushCharacterIntoControlObjectActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ControlObjectActionStateId.PushCharacterIntoControlObjectActionState");

	UControlObjectActionStateId_PushCharacterIntoControlObjectActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UControlObjectActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UControlObjectActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.DockableBaseActionStateId.PushCharacterIntoDockableBaseActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADockableBase*           ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsCharacterFemale              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UDockableBaseActionStateId::STATIC_PushCharacterIntoDockableBaseActionState(class ADockableBase* ControlledObject, class AActor* Character, bool IsCharacterFemale)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableBaseActionStateId.PushCharacterIntoDockableBaseActionState");

	UDockableBaseActionStateId_PushCharacterIntoDockableBaseActionState_Params params;
	params.ControlledObject = ControlledObject;
	params.Character = Character;
	params.IsCharacterFemale = IsCharacterFemale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDockableBaseActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UDockableBaseActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UTakeControlActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UTakeControlActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.DeadActionStateId.PushCharacterIntoDeadActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageInstance         FinalBlow                      (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_ECharacterDeathType> DeathType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDeadActionStateId::STATIC_PushCharacterIntoDeadActionState(class AActor* Character, const struct FDamageInstance& FinalBlow, TEnumAsByte<Athena_ECharacterDeathType> DeathType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DeadActionStateId.PushCharacterIntoDeadActionState");

	UDeadActionStateId_PushCharacterIntoDeadActionState_Params params;
	params.Character = Character;
	params.FinalBlow = FinalBlow;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDeadActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UDeadActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UGhostDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(RevivedAnimationStateId, UClass);
}

void UGhostDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(RevivedAnimationStateId);
}

void UItemLoaderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemLoaderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.LoadableContainerInterface.IsLoaded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULoadableContainerInterface::IsLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadableContainerInterface.IsLoaded");

	ULoadableContainerInterface_IsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LoadableContainerInterface.CanBeUnloaded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULoadableContainerInterface::CanBeUnloaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadableContainerInterface.CanBeUnloaded");

	ULoadableContainerInterface_CanBeUnloaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LoadableContainerInterface.CanBeLoaded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULoadableContainerInterface::CanBeLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadableContainerInterface.CanBeLoaded");

	ULoadableContainerInterface_CanBeLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULoadableContainerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoadableContainerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.LoadableItemInterface.CanBeUnloaded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULoadableItemInterface::CanBeUnloaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadableItemInterface.CanBeUnloaded");

	ULoadableItemInterface_CanBeUnloaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LoadableItemInterface.CanBeLoaded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULoadableItemInterface::CanBeLoaded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadableItemInterface.CanBeLoaded");

	ULoadableItemInterface_CanBeLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULoadableItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoadableItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULoadingPointInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoadingPointInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMountableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMountableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMountableType::AfterRead()
{
	UObject::AfterRead();

}

void UMountableType::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.MountpointInterface.TryMountActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Mountable                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMountpointInterface::TryMountActor(class AActor* Mountable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MountpointInterface.TryMountActor");

	UMountpointInterface_TryMountActor_Params params;
	params.Mountable = Mountable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMountpointInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMountpointInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MountableComponent.OnRep_ReplicatedMountpoint
// (Final, Native, Private)
void UMountableComponent::OnRep_ReplicatedMountpoint()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MountableComponent.OnRep_ReplicatedMountpoint");

	UMountableComponent_OnRep_ReplicatedMountpoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMountableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MountableType, UClass);
	READ_PTR_FULL(ReplicatedMountpoint, UObject);
}

void UMountableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MountableType);
	DELE_PTR_FULL(ReplicatedMountpoint);
}

// Function Athena.MountpointComponent.OnRep_ReplicatedMountedItem
// (Native, Protected)
// Parameters:
// class UObject*                 PrevReplicatedMountedItem      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMountpointComponent::OnRep_ReplicatedMountedItem(class UObject* PrevReplicatedMountedItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MountpointComponent.OnRep_ReplicatedMountedItem");

	UMountpointComponent_OnRep_ReplicatedMountedItem_Params params;
	params.PrevReplicatedMountedItem = PrevReplicatedMountedItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMountpointComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(ReplicatedMountedItem, UObject);
}

void UMountpointComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(ReplicatedMountedItem);
}

void UAthenaAnimationEmoteGroupingAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaAnimationEmoteGroupingAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAthenaAnimationEmoteListingAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaAnimationEmoteListingAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAthenaAnimationFirstPersonAnimaticInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaAnimationFirstPersonAnimaticInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetMaxJumpSequence
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (Parm, OutParm, ReferenceParm)
// int                            NewMaxJumpSequence             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationJumpingBlueprintFunctions::STATIC_SetMaxJumpSequence(struct FAthenaAnimationJumping* Jumping, int NewMaxJumpSequence)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetMaxJumpSequence");

	UAthenaAnimationJumpingBlueprintFunctions_SetMaxJumpSequence_Params params;
	params.NewMaxJumpSequence = NewMaxJumpSequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Jumping != nullptr)
		*Jumping = params.Jumping;

}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetJumpCompleted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (Parm, OutParm, ReferenceParm)
void UAthenaAnimationJumpingBlueprintFunctions::STATIC_SetJumpCompleted(struct FAthenaAnimationJumping* Jumping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetJumpCompleted");

	UAthenaAnimationJumpingBlueprintFunctions_SetJumpCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Jumping != nullptr)
		*Jumping = params.Jumping;

}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.IsHeavyLanding
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationJumpingBlueprintFunctions::STATIC_IsHeavyLanding(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.IsHeavyLanding");

	UAthenaAnimationJumpingBlueprintFunctions_IsHeavyLanding_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetPreImpactTime
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationJumpingBlueprintFunctions::STATIC_GetPreImpactTime(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetPreImpactTime");

	UAthenaAnimationJumpingBlueprintFunctions_GetPreImpactTime_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetLandingSequence
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UAthenaAnimationJumpingBlueprintFunctions::STATIC_GetLandingSequence(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetLandingSequence");

	UAthenaAnimationJumpingBlueprintFunctions_GetLandingSequence_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpSequence
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UAthenaAnimationJumpingBlueprintFunctions::STATIC_GetJumpSequence(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpSequence");

	UAthenaAnimationJumpingBlueprintFunctions_GetJumpSequence_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpingState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_EAthenaAnimationJumpingState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAthenaAnimationJumpingState> UAthenaAnimationJumpingBlueprintFunctions::STATIC_GetJumpingState(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpingState");

	UAthenaAnimationJumpingBlueprintFunctions_GetJumpingState_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationJumpingBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationJumpingBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UAthenaAnimationKeyedInstrumentDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Outof, UAnimSequence);
}

void UAthenaAnimationKeyedInstrumentDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Outof);
}

// Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOnComplete
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (Parm, OutParm, ReferenceParm)
void UAthenaAnimationLadderBlueprintFunctions::STATIC_SetClimbOnComplete(struct FAthenaAnimationLadder* Ladder)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOnComplete");

	UAthenaAnimationLadderBlueprintFunctions_SetClimbOnComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Ladder != nullptr)
		*Ladder = params.Ladder;

}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOffComplete
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (Parm, OutParm, ReferenceParm)
void UAthenaAnimationLadderBlueprintFunctions::STATIC_SetClimbOffComplete(struct FAthenaAnimationLadder* Ladder)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOffComplete");

	UAthenaAnimationLadderBlueprintFunctions_SetClimbOffComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Ladder != nullptr)
		*Ladder = params.Ladder;

}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.GetPlayerIntent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationLadderBlueprintFunctions::STATIC_GetPlayerIntent(const struct FAthenaAnimationLadder& Ladder)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLadderBlueprintFunctions.GetPlayerIntent");

	UAthenaAnimationLadderBlueprintFunctions_GetPlayerIntent_Params params;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.GetLadderState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_EAthenaAnimationLadderState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAthenaAnimationLadderState> UAthenaAnimationLadderBlueprintFunctions::STATIC_GetLadderState(const struct FAthenaAnimationLadder& Ladder)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLadderBlueprintFunctions.GetLadderState");

	UAthenaAnimationLadderBlueprintFunctions_GetLadderState_Params params;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.GetClimbDistance
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationLadderBlueprintFunctions::STATIC_GetClimbDistance(const struct FAthenaAnimationLadder& Ladder)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLadderBlueprintFunctions.GetClimbDistance");

	UAthenaAnimationLadderBlueprintFunctions_GetClimbDistance_Params params;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationLadderBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationLadderBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.AthenaAnimationLODInterface.SetIKState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EIKState>   NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationLODInterface::SetIKState(TEnumAsByte<Athena_EIKState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLODInterface.SetIKState");

	UAthenaAnimationLODInterface_SetIKState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationLODInterface.SetIKSolverType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EIKSolverType> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationLODInterface::SetIKSolverType(TEnumAsByte<Athena_EIKSolverType> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLODInterface.SetIKSolverType");

	UAthenaAnimationLODInterface_SetIKSolverType_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaAnimationLODInterface.SetIKFootplantState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EIKFootPlantingState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationLODInterface::SetIKFootplantState(TEnumAsByte<Athena_EIKFootPlantingState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationLODInterface.SetIKFootplantState");

	UAthenaAnimationLODInterface_SetIKFootplantState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAthenaAnimationLODInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAthenaAnimationLODInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaAnimationPulleyDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Entry, UAnimSequence);
}

void UAthenaAnimationPulleyDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Entry);
}

void UAthenaAIItemParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaAIItemParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAICharacterRecoverMethod::AfterRead()
{
	UObject::AfterRead();

}

void UAICharacterRecoverMethod::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFleeAICharacterRecoverMethod::AfterRead()
{
	UAICharacterRecoverMethod::AfterRead();

}

void UFleeAICharacterRecoverMethod::BeforeDelete()
{
	UAICharacterRecoverMethod::BeforeDelete();

}

void UHealAICharacterRecoverMethod::AfterRead()
{
	UAICharacterRecoverMethod::AfterRead();

}

void UHealAICharacterRecoverMethod::BeforeDelete()
{
	UAICharacterRecoverMethod::BeforeDelete();

}

void UCannonAIInteractableType::AfterRead()
{
	UAIInteractableType::AfterRead();

}

void UCannonAIInteractableType::BeforeDelete()
{
	UAIInteractableType::BeforeDelete();

}

// Function Athena.CollectorsChestItemSlotInteractable.OnRep_StoredItemInfo
// (Final, Native, Private)
void UCollectorsChestItemSlotInteractable::OnRep_StoredItemInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CollectorsChestItemSlotInteractable.OnRep_StoredItemInfo");

	UCollectorsChestItemSlotInteractable_OnRep_StoredItemInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCollectorsChestItemSlotInteractable::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(ItemMeshComponent, UStaticMeshMemoryConstraintComponent);
	READ_PTR_FULL(PlaceItemSound, UWwiseEvent);
	READ_PTR_FULL(PickupItemSound, UWwiseEvent);
}

void UCollectorsChestItemSlotInteractable::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(ItemMeshComponent);
	DELE_PTR_FULL(PlaceItemSound);
	DELE_PTR_FULL(PickupItemSound);
}

void ACollectorsChestWieldableItem::AfterRead()
{
	ALargeSkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(OpenableItemComponent, UOpenableItemComponent);
}

void ACollectorsChestWieldableItem::BeforeDelete()
{
	ALargeSkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(OpenableItemComponent);
}

void ACollectorsChestStaticWieldableItem::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(OpenableItemComponent, UOpenableItemComponent);
}

void ACollectorsChestStaticWieldableItem::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(OpenableItemComponent);
}

void UItemSnapshotMetaGenerator::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(MetaWrapper, UScriptStruct);
}

void UItemSnapshotMetaGenerator::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(MetaWrapper);
}

void UCollectorsChestMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UCollectorsChestMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UCollectorsChestSharedParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCollectorsChestSharedParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.CollectorsChestShipOwnershipPropagationComponent.OnItemProxyDestroyed
// (Final, Native, Private)
void UCollectorsChestShipOwnershipPropagationComponent::OnItemProxyDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CollectorsChestShipOwnershipPropagationComponent.OnItemProxyDestroyed");

	UCollectorsChestShipOwnershipPropagationComponent_OnItemProxyDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCollectorsChestShipOwnershipPropagationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCollectorsChestShipOwnershipPropagationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UDeliverableCollectorsChestRequirement::AfterRead()
{
	UDeliverableRequirementBase::AfterRead();

}

void UDeliverableCollectorsChestRequirement::BeforeDelete()
{
	UDeliverableRequirementBase::BeforeDelete();

}

void UDeliverableLockedCollectorsChestRequirement::AfterRead()
{
	UDeliverableRequirementBase::AfterRead();

}

void UDeliverableLockedCollectorsChestRequirement::BeforeDelete()
{
	UDeliverableRequirementBase::BeforeDelete();

}

void UFillCollectorsChestWithItemsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(GoldToSpawnInsideCollectorsChest, UWeightedGoldRewardsDataAsset);
}

void UFillCollectorsChestWithItemsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(GoldToSpawnInsideCollectorsChest);
}

void AAshenLordEncounterService::AfterRead()
{
	AGameEventService::AfterRead();

	READ_PTR_FULL(Params, UAshenLordEncounterServiceParams);
}

void AAshenLordEncounterService::BeforeDelete()
{
	AGameEventService::BeforeDelete();

	DELE_PTR_FULL(Params);
}

void UAshenLordsAIDioramaCategory::AfterRead()
{
	UAIDioramaCategory::AfterRead();

}

void UAshenLordsAIDioramaCategory::BeforeDelete()
{
	UAIDioramaCategory::BeforeDelete();

}

void UFlamethrowerControllerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFlamethrowerControllerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UReward::AfterRead()
{
	UObject::AfterRead();

}

void UReward::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UEmblemReward::AfterRead()
{
	UReward::AfterRead();

}

void UEmblemReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UShantyItemDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UShantyItemDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UShantySelectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShantySelectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShantySelectionComponent.SetShanty_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UShantyItemDesc*         InShanty                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShantySelectionComponent::SetShanty_Server(class UShantyItemDesc* InShanty)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShantySelectionComponent.SetShanty_Server");

	UShantySelectionComponent_SetShanty_Server_Params params;
	params.InShanty = InShanty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShantySelectionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(SelectedShanty, UShantyItemDesc);
}

void UShantySelectionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(SelectedShanty);
}

void UShantySettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UShantySettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void URiddleQuestValidLocationGeneratorData::AfterRead()
{
	UDataAsset::AfterRead();

}

void URiddleQuestValidLocationGeneratorData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPetEntitlementBaseCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UPetEntitlementBaseCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

void UInvalidPetEntitlementBaseCategory::AfterRead()
{
	UPetEntitlementBaseCategory::AfterRead();

}

void UInvalidPetEntitlementBaseCategory::BeforeDelete()
{
	UPetEntitlementBaseCategory::BeforeDelete();

}

void UPetCustomizationCategory::AfterRead()
{
	UPetEntitlementBaseCategory::AfterRead();

}

void UPetCustomizationCategory::BeforeDelete()
{
	UPetEntitlementBaseCategory::BeforeDelete();

}

void UPetEntitlementCategory::AfterRead()
{
	UPetEntitlementBaseCategory::AfterRead();

}

void UPetEntitlementCategory::BeforeDelete()
{
	UPetEntitlementBaseCategory::BeforeDelete();

}

void UInvalidPetEntitlementCategory::AfterRead()
{
	UPetEntitlementCategory::AfterRead();

}

void UInvalidPetEntitlementCategory::BeforeDelete()
{
	UPetEntitlementCategory::BeforeDelete();

}

void UPetEntitlementBaseDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UPetEntitlementBaseDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UPetCustomizationDesc::AfterRead()
{
	UPetEntitlementBaseDesc::AfterRead();

	READ_PTR_FULL(RelatedPetEntitlementCategory, UClass);
}

void UPetCustomizationDesc::BeforeDelete()
{
	UPetEntitlementBaseDesc::BeforeDelete();

	DELE_PTR_FULL(RelatedPetEntitlementCategory);
}

void UPetEntitlementDesc::AfterRead()
{
	UPetEntitlementBaseDesc::AfterRead();

	READ_PTR_FULL(RelatedPetDesc, UClass);
}

void UPetEntitlementDesc::BeforeDelete()
{
	UPetEntitlementBaseDesc::BeforeDelete();

	DELE_PTR_FULL(RelatedPetDesc);
}

void UWorldMarkerVariant::AfterRead()
{
	UObject::AfterRead();

}

void UWorldMarkerVariant::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UReapersBountyWorldMarkerVariant::AfterRead()
{
	UWorldMarkerVariant::AfterRead();

}

void UReapersBountyWorldMarkerVariant::BeforeDelete()
{
	UWorldMarkerVariant::BeforeDelete();

}

void UReapersChestWorldMarkerVariant::AfterRead()
{
	UWorldMarkerVariant::AfterRead();

}

void UReapersChestWorldMarkerVariant::BeforeDelete()
{
	UWorldMarkerVariant::BeforeDelete();

}

void UWorldMarkerOnDigPositionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MarkerVariant, UClass);
}

void UWorldMarkerOnDigPositionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MarkerVariant);
}

void UWorldMarkerOnSpawnPositionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MarkerVariant, UClass);
}

void UWorldMarkerOnSpawnPositionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MarkerVariant);
}

void UCampfireInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCampfireInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.Campfire.OnRep_OnFire
// (Final, Native, Private)
void ACampfire::OnRep_OnFire()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Campfire.OnRep_OnFire");

	ACampfire_OnRep_OnFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Campfire.OnRep_Built
// (Final, Native, Private)
void ACampfire::OnRep_Built()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Campfire.OnRep_Built");

	ACampfire_OnRep_Built_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Campfire.Multicast_CampfireTransientStateChanged
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// TEnumAsByte<Athena_ETransientCampfireStateChange> StateChange                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACampfire::Multicast_CampfireTransientStateChanged(TEnumAsByte<Athena_ETransientCampfireStateChange> StateChange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Campfire.Multicast_CampfireTransientStateChanged");

	ACampfire_Multicast_CampfireTransientStateChanged_Params params;
	params.StateChange = StateChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACampfire::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(UnbuiltMesh, UStaticMeshComponent);
	READ_PTR_FULL(BuiltMesh, UStaticMeshComponent);
	READ_PTR_FULL(FireParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(PointLight, UPointLightComponent);
	READ_PTR_FULL(OverlapTrigger, UOverlapTriggerComponent);
	READ_PTR_FULL(BoxCollider, UBoxComponent);
	READ_PTR_FULL(StatusEffectManagerComponent, ULightWeightStatusEffectManagerComponent);
	READ_PTR_FULL(DitherComponent, UDitherComponent);
	READ_PTR_FULL(InteractableComponent, UActionRulesInteractableComponent);
	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(ShelteredComponent, UShelteredComponent);
	READ_PTR_FULL(WaterExposureComponent, UWaterExposureComponent);
	READ_PTR_FULL(FlammableComponent, UFlammableComponent);
	READ_PTR_FULL(SoakableComponent, USoakableComponent);
	READ_PTR_FULL(CookerChildActorComponent, UChildActorComponent);
	READ_PTR_FULL(ExtinguishedVFX, UObject);
	READ_PTR_FULL(IgnitedWwiseEvent, UWwiseEvent);
	READ_PTR_FULL(ExtinguishedWwiseEvent, UWwiseEvent);
	READ_PTR_FULL(BurnDownWwiseEvent, UWwiseEvent);
	READ_PTR_FULL(WoodAddedWwiseEvent, UWwiseEvent);
	READ_PTR_FULL(StokedWwiseEvent, UWwiseEvent);
	READ_PTR_FULL(BurningLoopStart, UWwiseEvent);
	READ_PTR_FULL(BurningLoopEnd, UWwiseEvent);
	READ_PTR_FULL(CampfireWwisePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(WoodCharOverTime, UCurveFloat);
	READ_PTR_FULL(WoodCategory, UClass);
	READ_PTR_FULL(BuiltMeshCharrableMaterial, UMaterialInstanceDynamic);
}

void ACampfire::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(UnbuiltMesh);
	DELE_PTR_FULL(BuiltMesh);
	DELE_PTR_FULL(FireParticleSystem);
	DELE_PTR_FULL(PointLight);
	DELE_PTR_FULL(OverlapTrigger);
	DELE_PTR_FULL(BoxCollider);
	DELE_PTR_FULL(StatusEffectManagerComponent);
	DELE_PTR_FULL(DitherComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(ActionRulesComponent);
	DELE_PTR_FULL(ShelteredComponent);
	DELE_PTR_FULL(WaterExposureComponent);
	DELE_PTR_FULL(FlammableComponent);
	DELE_PTR_FULL(SoakableComponent);
	DELE_PTR_FULL(CookerChildActorComponent);
	DELE_PTR_FULL(ExtinguishedVFX);
	DELE_PTR_FULL(IgnitedWwiseEvent);
	DELE_PTR_FULL(ExtinguishedWwiseEvent);
	DELE_PTR_FULL(BurnDownWwiseEvent);
	DELE_PTR_FULL(WoodAddedWwiseEvent);
	DELE_PTR_FULL(StokedWwiseEvent);
	DELE_PTR_FULL(BurningLoopStart);
	DELE_PTR_FULL(BurningLoopEnd);
	DELE_PTR_FULL(CampfireWwisePool);
	DELE_PTR_FULL(WoodCharOverTime);
	DELE_PTR_FULL(WoodCategory);
	DELE_PTR_FULL(BuiltMeshCharrableMaterial);
}

void UCampfireWorldMarkerVariant::AfterRead()
{
	UWorldMarkerVariant::AfterRead();

}

void UCampfireWorldMarkerVariant::BeforeDelete()
{
	UWorldMarkerVariant::BeforeDelete();

}

void UIgnitionSourceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIgnitionSourceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCutsceneAnimationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCutsceneAnimationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCutsceneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CutsceneResponseSheet.UnregisterEvents
// (Event, Protected, BlueprintEvent)
void UCutsceneResponseSheet::UnregisterEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.UnregisterEvents");

	UCutsceneResponseSheet_UnregisterEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneResponseSheet.Stop
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
void UCutsceneResponseSheet::Stop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.Stop");

	UCutsceneResponseSheet_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneResponseSheet.Start
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
void UCutsceneResponseSheet::Start()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.Start");

	UCutsceneResponseSheet_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.CutsceneResponseSheet.RelevantActorAddedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCutsceneResponseSheet::RelevantActorAddedDelegate__DelegateSignature(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.CutsceneResponseSheet.RelevantActorAddedDelegate__DelegateSignature");

	UCutsceneResponseSheet_RelevantActorAddedDelegate__DelegateSignature_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneResponseSheet.RegisterEvents
// (Event, Protected, BlueprintEvent)
void UCutsceneResponseSheet::RegisterEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.RegisterEvents");

	UCutsceneResponseSheet_RegisterEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneResponseSheet.PlayCutsceneWithMetaData
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCutsceneResponseData   Cutscene                       (ConstParm, Parm, OutParm, ReferenceParm)
// class UCutsceneResponseMetaData* MetaData                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCutsceneResponseSheet::PlayCutsceneWithMetaData(const struct FCutsceneResponseData& Cutscene, class UCutsceneResponseMetaData* MetaData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.PlayCutsceneWithMetaData");

	UCutsceneResponseSheet_PlayCutsceneWithMetaData_Params params;
	params.Cutscene = Cutscene;
	params.MetaData = MetaData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneResponseSheet.PlayCutsceneIf
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCutsceneResponseData   Cutscene                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           Condition                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCutsceneResponseSheet::PlayCutsceneIf(const struct FCutsceneResponseData& Cutscene, bool Condition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.PlayCutsceneIf");

	UCutsceneResponseSheet_PlayCutsceneIf_Params params;
	params.Cutscene = Cutscene;
	params.Condition = Condition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneResponseSheet.PlayCutscene
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCutsceneResponseData   Cutscene                       (ConstParm, Parm, OutParm, ReferenceParm)
void UCutsceneResponseSheet::PlayCutscene(const struct FCutsceneResponseData& Cutscene)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneResponseSheet.PlayCutscene");

	UCutsceneResponseSheet_PlayCutscene_Params params;
	params.Cutscene = Cutscene;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCutsceneResponseSheet::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(CutsceneInstigator, UObject);
}

void UCutsceneResponseSheet::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(CutsceneInstigator);
}

// Function Athena.CutsceneServiceInterface.UnregisterCutsceneTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InTarget                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCutsceneServiceInterface::UnregisterCutsceneTarget(class AActor* InTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneServiceInterface.UnregisterCutsceneTarget");

	UCutsceneServiceInterface_UnregisterCutsceneTarget_Params params;
	params.InTarget = InTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutsceneServiceInterface.TryTriggerCutsceneWithCallback
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InCutscene                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScriptDelegate         CutsceneCompletedCallback      (Parm, ZeroConstructor, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCutsceneServiceInterface::TryTriggerCutsceneWithCallback(class AActor* InTarget, const struct FName& InCutscene, const struct FScriptDelegate& CutsceneCompletedCallback)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneServiceInterface.TryTriggerCutsceneWithCallback");

	UCutsceneServiceInterface_TryTriggerCutsceneWithCallback_Params params;
	params.InTarget = InTarget;
	params.InCutscene = InCutscene;
	params.CutsceneCompletedCallback = CutsceneCompletedCallback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CutsceneServiceInterface.TryTriggerCutscene
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  InTarget                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InCutscene                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCutsceneServiceInterface::TryTriggerCutscene(class AActor* InTarget, const struct FName& InCutscene)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneServiceInterface.TryTriggerCutscene");

	UCutsceneServiceInterface_TryTriggerCutscene_Params params;
	params.InTarget = InTarget;
	params.InCutscene = InCutscene;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CutsceneServiceInterface.RegisterCutsceneTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InTarget                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCutsceneServiceInterface::RegisterCutsceneTarget(class AActor* InTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneServiceInterface.RegisterCutsceneTarget");

	UCutsceneServiceInterface_RegisterCutsceneTarget_Params params;
	params.InTarget = InTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCutsceneServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCutsceneService::AfterRead()
{
	UObject::AfterRead();

}

void UCutsceneService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.CutsceneTargetInterface.GetCutsceneMesh
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USkeletalMeshComponent* UCutsceneTargetInterface::GetCutsceneMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutsceneTargetInterface.GetCutsceneMesh");

	UCutsceneTargetInterface_GetCutsceneMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCutsceneTargetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneTargetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCutsceneTimestampInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneTimestampInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void APortalService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Params, UPortalServiceParams);
}

void APortalService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Params);
}

void USpawnPortalTaleStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USpawnPortalTaleStepDesc);
}

void USpawnPortalTaleStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.CrewMembershipInterface.GetCrewId
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UCrewMembershipInterface::GetCrewId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewMembershipInterface.GetCrewId");

	UCrewMembershipInterface_GetCrewId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCrewMembershipInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCrewMembershipInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UBTTask_SpawnItemForCategory::AfterRead()
{
	UBTTask_SpawnAndWieldItem::AfterRead();

	READ_PTR_FULL(OverrideItemCategory, UClass);
}

void UBTTask_SpawnItemForCategory::BeforeDelete()
{
	UBTTask_SpawnAndWieldItem::BeforeDelete();

	DELE_PTR_FULL(OverrideItemCategory);
}

void UBTTask_WieldItemByCategory::AfterRead()
{
	UBTTask_WaitForWieldBase::AfterRead();

	READ_PTR_FULL(OverrideItemCategory, UClass);
}

void UBTTask_WieldItemByCategory::BeforeDelete()
{
	UBTTask_WaitForWieldBase::BeforeDelete();

	DELE_PTR_FULL(OverrideItemCategory);
}

void UBTTask_WaitWeighted::AfterRead()
{
	UBTTaskNode::AfterRead();

}

void UBTTask_WaitWeighted::BeforeDelete()
{
	UBTTaskNode::BeforeDelete();

}

// Function Athena.Bucket.Server_OnTossContents
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FProjectileAim          AimData                        (ConstParm, Parm, ReferenceParm, ContainsInstancedReference)
// TEnumAsByte<Athena_EBucketProjectileDestination> InDestination                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABucket::Server_OnTossContents(const struct FProjectileAim& AimData, TEnumAsByte<Athena_EBucketProjectileDestination> InDestination)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.Server_OnTossContents");

	ABucket_Server_OnTossContents_Params params;
	params.AimData = AimData;
	params.InDestination = InDestination;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Bucket.OnRep_FillState
// (Final, Native, Protected)
void ABucket::OnRep_FillState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.OnRep_FillState");

	ABucket_OnRep_FillState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Bucket.Multicast_Throw
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void ABucket::Multicast_Throw()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.Multicast_Throw");

	ABucket_Multicast_Throw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Bucket.Multicast_Scoop
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void ABucket::Multicast_Scoop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.Multicast_Scoop");

	ABucket_Multicast_Scoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Bucket.Multicast_DrenchWielder
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void ABucket::Multicast_DrenchWielder()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.Multicast_DrenchWielder");

	ABucket_Multicast_DrenchWielder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Bucket.FillWithVomit
// (Final, Native, Public, BlueprintCallable)
void ABucket::FillWithVomit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.FillWithVomit");

	ABucket_FillWithVomit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Bucket.CanBeVomitedInto
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABucket::CanBeVomitedInto()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Bucket.CanBeVomitedInto");

	ABucket_CanBeVomitedInto_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ABucket::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(ScoopSfx, UWwiseEvent);
	READ_PTR_FULL(BucketScoopCooldownType, UClass);
	READ_PTR_FULL(BucketThrowCooldownType, UClass);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(LiquidContainer, ULiquidContainerComponent);
	READ_PTR_FULL(BucketContentsEffect, UParticleSystemComponent);
}

void ABucket::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(ScoopSfx);
	DELE_PTR_FULL(BucketScoopCooldownType);
	DELE_PTR_FULL(BucketThrowCooldownType);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(LiquidContainer);
	DELE_PTR_FULL(BucketContentsEffect);
}

void AStorageContainer::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMeshComponent);
	READ_PTR_FULL(InteractionRegion, UInteractableComponent);
}

void AStorageContainer::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(InteractionRegion);
}

// Function Athena.BuoyantStorageContainer.OnRep_PhysicsState
// (Final, Native, Protected)
void ABuoyantStorageContainer::OnRep_PhysicsState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuoyantStorageContainer.OnRep_PhysicsState");

	ABuoyantStorageContainer_OnRep_PhysicsState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABuoyantStorageContainer::AfterRead()
{
	AStorageContainer::AfterRead();

	READ_PTR_FULL(BaseComponent, UShapeComponent);
	READ_PTR_FULL(BuoyancyComponent, UBuoyancyComponent);
	READ_PTR_FULL(DitherComponent, UDitherComponent);
	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
	READ_PTR_FULL(RetractableComponent, URetractableFloatingBarrelComponent);
}

void ABuoyantStorageContainer::BeforeDelete()
{
	AStorageContainer::BeforeDelete();

	DELE_PTR_FULL(BaseComponent);
	DELE_PTR_FULL(BuoyancyComponent);
	DELE_PTR_FULL(DitherComponent);
	DELE_PTR_FULL(WaterInteractionComponent);
	DELE_PTR_FULL(RetractableComponent);
}

void UBuoyantObjectSpawnParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBuoyantObjectSpawnParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UBuoyantObjectSpawnProfileDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBuoyantObjectSpawnProfileDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UBuriedItemStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UBuriedItemStepDesc);
}

void UBuriedItemStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

// Function Athena.BuryingTaleQuestService.RemoveBuriedActor
// (Final, RequiredAPI, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   InGuid                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UBuryingTaleQuestService::RemoveBuriedActor(const struct FGuid& InGuid)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuryingTaleQuestService.RemoveBuriedActor");

	UBuryingTaleQuestService_RemoveBuriedActor_Params params;
	params.InGuid = InGuid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UBuryingTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UBuryingTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UBuryingTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UBuryingTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UBuriedItemStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UBuriedItemStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UBuriedItemStepFromLocationDesc::AfterRead()
{
	UBuriedItemStepDesc::AfterRead();

}

void UBuriedItemStepFromLocationDesc::BeforeDelete()
{
	UBuriedItemStepDesc::BeforeDelete();

}

void UBuriedItemStepFromActorDesc::AfterRead()
{
	UBuriedItemStepDesc::AfterRead();

}

void UBuriedItemStepFromActorDesc::BeforeDelete()
{
	UBuriedItemStepDesc::BeforeDelete();

}

void UGeneratedLocationsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGeneratedLocationsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UBuriedTreasureDataAsset::AfterRead()
{
	UGeneratedLocationsDataAsset::AfterRead();

}

void UBuriedTreasureDataAsset::BeforeDelete()
{
	UGeneratedLocationsDataAsset::BeforeDelete();

}

void UBuriedTreasureLocationValidator::AfterRead()
{
	UObject::AfterRead();

}

void UBuriedTreasureLocationValidator::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.BuriedTreasureLocation.IsValidTreasureLocation
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLocationGeneratorSample OutLocation                    (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABuriedTreasureLocation::IsValidTreasureLocation(class UObject* WorldContextObject, struct FLocationGeneratorSample* OutLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuriedTreasureLocation.IsValidTreasureLocation");

	ABuriedTreasureLocation_IsValidTreasureLocation_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;


	return params.ReturnValue;
}


// Function Athena.BuriedTreasureLocation.GetIdentifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString ABuriedTreasureLocation::GetIdentifier()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BuriedTreasureLocation.GetIdentifier");

	ABuriedTreasureLocation_GetIdentifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ABuriedTreasureLocation::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(BaseComponent, USphereComponent);
}

void ABuriedTreasureLocation::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(BaseComponent);
}

// Function Athena.BurpComponent.Multicast_Burp
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                          DurationRTPC                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          TypeRTPC                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UBurpComponent::Multicast_Burp(float DurationRTPC, float TypeRTPC)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpComponent.Multicast_Burp");

	UBurpComponent_Multicast_Burp_Params params;
	params.DurationRTPC = DurationRTPC;
	params.TypeRTPC = TypeRTPC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpComponent.GetCurrentGasAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UBurpComponent::GetCurrentGasAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpComponent.GetCurrentGasAmount");

	UBurpComponent_GetCurrentGasAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBurpComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(BurpComponentPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(BurpSfx, UWwiseEvent);
}

void UBurpComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(BurpComponentPool);
	DELE_PTR_FULL(BurpSfx);
}

// Function Athena.BurpTestActor.WieldItemByActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           UnwieldFast                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> ABurpTestActor::WieldItemByActor(class AActor* Item, bool UnwieldFast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.WieldItemByActor");

	ABurpTestActor_WieldItemByActor_Params params;
	params.Item = Item;
	params.UnwieldFast = UnwieldFast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.ToggleWieldItem
// (Native, Public, BlueprintCallable)
void ABurpTestActor::ToggleWieldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.ToggleWieldItem");

	ABurpTestActor_ToggleWieldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.RemoveItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABurpTestActor::RemoveItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.RemoveItem");

	ABurpTestActor_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.RemoveAndUnwieldItem
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABurpTestActor::RemoveAndUnwieldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.RemoveAndUnwieldItem");

	ABurpTestActor_RemoveAndUnwieldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.QuickSelectItemOfType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            TypedItemIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABurpTestActor::QuickSelectItemOfType(TEnumAsByte<Athena_EItemType> ItemType, int TypedItemIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.QuickSelectItemOfType");

	ABurpTestActor_QuickSelectItemOfType_Params params;
	params.ItemType = ItemType;
	params.TypedItemIndex = TypedItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.QuickSelectItemOfCategory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            IndexIntoCategory              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABurpTestActor::QuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.QuickSelectItemOfCategory");

	ABurpTestActor_QuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.QuickSelectItem
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABurpTestActor::QuickSelectItem(int ItemIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.QuickSelectItem");

	ABurpTestActor_QuickSelectItem_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.PickUpItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           AndWield                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ShouldNotifyClients            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABurpTestActor::PickUpItem(class AItemInfo* Item, bool AndWield, bool ShouldNotifyClients)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.PickUpItem");

	ABurpTestActor_PickUpItem_Params params;
	params.Item = Item;
	params.AndWield = AndWield;
	params.ShouldNotifyClients = ShouldNotifyClients;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.GetNumberOfItemsOfItemCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ABurpTestActor::GetNumberOfItemsOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.GetNumberOfItemsOfItemCategory");

	ABurpTestActor_GetNumberOfItemsOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.GetCurrentItemIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ABurpTestActor::GetCurrentItemIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.GetCurrentItemIndex");

	ABurpTestActor_GetCurrentItemIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.CycleItemUp
// (Native, Public, BlueprintCallable)
void ABurpTestActor::CycleItemUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.CycleItemUp");

	ABurpTestActor_CycleItemUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.CycleItemType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABurpTestActor::CycleItemType(TEnumAsByte<Athena_EItemType> ItemType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.CycleItemType");

	ABurpTestActor_CycleItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.CycleItemDown
// (Native, Public, BlueprintCallable)
void ABurpTestActor::CycleItemDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.CycleItemDown");

	ABurpTestActor_CycleItemDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.CycleItemCategory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void ABurpTestActor::CycleItemCategory(class UClass* Category)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.CycleItemCategory");

	ABurpTestActor_CycleItemCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurpTestActor.ConsumeItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABurpTestActor::ConsumeItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.ConsumeItem");

	ABurpTestActor_ConsumeItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.CanAddItemOfItemCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<Athena_ECanAddItemQueryResult> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_ECanAddItemQueryResult> ABurpTestActor::CanAddItemOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.CanAddItemOfItemCategory");

	ABurpTestActor_CanAddItemOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.BurpTestActor.AddItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ABurpTestActor::AddItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurpTestActor.AddItem");

	ABurpTestActor_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ABurpTestActor::AfterRead()
{
	AActor::AfterRead();

}

void ABurpTestActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UCannonDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UCannonDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UExplosionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UExplosionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.BurrowEruptArea.StartPreEruptSignal
// (Event, Public, BlueprintEvent)
void ABurrowEruptArea::StartPreEruptSignal()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurrowEruptArea.StartPreEruptSignal");

	ABurrowEruptArea_StartPreEruptSignal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurrowEruptArea.StartEruptSignal
// (Event, Public, BlueprintEvent)
void ABurrowEruptArea::StartEruptSignal()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurrowEruptArea.StartEruptSignal");

	ABurrowEruptArea_StartEruptSignal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BurrowEruptArea.Multicast_Explode
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector                 InLocation                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InIgnoreActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABurrowEruptArea::Multicast_Explode(const struct FVector& InLocation, class AActor* InInstigator, class AActor* InIgnoreActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BurrowEruptArea.Multicast_Explode");

	ABurrowEruptArea_Multicast_Explode_Params params;
	params.InLocation = InLocation;
	params.InInstigator = InInstigator;
	params.InIgnoreActor = InIgnoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABurrowEruptArea::AfterRead()
{
	ABurrowEruptBase::AfterRead();

	READ_PTR_FULL(ExplosionComponent, UExplosionComponent);
}

void ABurrowEruptArea::BeforeDelete()
{
	ABurrowEruptBase::BeforeDelete();

	DELE_PTR_FULL(ExplosionComponent);
}

void UCalmAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UCalmAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.CameraFadeManagerTestFunctions.IsFadeComplete
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*       TargetController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCameraFadeManagerTestFunctions::STATIC_IsFadeComplete(class APlayerController* TargetController)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CameraFadeManagerTestFunctions.IsFadeComplete");

	UCameraFadeManagerTestFunctions_IsFadeComplete_Params params;
	params.TargetController = TargetController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CameraFadeManagerTestFunctions.IsFadeActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*       TargetController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCameraFadeManagerTestFunctions::STATIC_IsFadeActive(class APlayerController* TargetController)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CameraFadeManagerTestFunctions.IsFadeActive");

	UCameraFadeManagerTestFunctions_IsFadeActive_Params params;
	params.TargetController = TargetController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CameraFadeManagerTestFunctions.FireFadeAckRequestToClient
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerController* TargetController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          AckTimeout                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCameraFadeManagerTestFunctions::STATIC_FireFadeAckRequestToClient(class AAthenaPlayerController* TargetController, float AckTimeout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CameraFadeManagerTestFunctions.FireFadeAckRequestToClient");

	UCameraFadeManagerTestFunctions_FireFadeAckRequestToClient_Params params;
	params.TargetController = TargetController;
	params.AckTimeout = AckTimeout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCameraFadeManagerTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCameraFadeManagerTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCampaignComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCampaignComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCannonEnchantmentDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UCannonEnchantmentDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UCannonPitchRateAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UCannonPitchRateAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UCannonPitchRateRightStickAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UCannonPitchRateRightStickAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UCannonRecoilComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCannonRecoilComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCannonRotationStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UCannonRotationStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UCannonSplashDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UCannonSplashDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UCannonYawRateAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UCannonYawRateAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UCannonYawRateRightStickAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UCannonYawRateRightStickAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UCanPerformEmoteRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UCanPerformEmoteRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

// Function Athena.IterativeCanvasRenderTarget2D.ReceiveUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIterativeCanvasRenderTarget2D::ReceiveUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IterativeCanvasRenderTarget2D.ReceiveUpdate");

	UIterativeCanvasRenderTarget2D_ReceiveUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IterativeCanvasRenderTarget2D.GetSize
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            Width                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIterativeCanvasRenderTarget2D::GetSize(int* Width, int* Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IterativeCanvasRenderTarget2D.GetSize");

	UIterativeCanvasRenderTarget2D_GetSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Width != nullptr)
		*Width = params.Width;
	if (Height != nullptr)
		*Height = params.Height;

}


// Function Athena.IterativeCanvasRenderTarget2D.Create
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  CanvasRenderTarget2DClass      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor            InClearColor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UIterativeCanvasRenderTarget2D* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UIterativeCanvasRenderTarget2D* UIterativeCanvasRenderTarget2D::STATIC_Create(class UObject* WorldContextObject, class UClass* CanvasRenderTarget2DClass, int Width, int Height, const struct FLinearColor& InClearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IterativeCanvasRenderTarget2D.Create");

	UIterativeCanvasRenderTarget2D_Create_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CanvasRenderTarget2DClass = CanvasRenderTarget2DClass;
	params.Width = Width;
	params.Height = Height;
	params.InClearColor = InClearColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIterativeCanvasRenderTarget2D::AfterRead()
{
	UTextureRenderTarget2D::AfterRead();

}

void UIterativeCanvasRenderTarget2D::BeforeDelete()
{
	UTextureRenderTarget2D::BeforeDelete();

}

// Function Athena.CanvasWorldMapComponent.OnCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCanvasWorldMapComponent::OnCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CanvasWorldMapComponent.OnCanvasUpdate");

	UCanvasWorldMapComponent_OnCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCanvasWorldMapComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MapClass, UClass);
	READ_PTR_FULL(OffscreenArrowTexture, UTexture);
	READ_PTR_FULL(CompassTexture, UTexture);
	READ_PTR_FULL(Font, UFont);
	READ_PTR_FULL(CrosshairTexture, UTexture);
	READ_PTR_FULL(CrosshairEmptyTexture, UTexture);
	READ_PTR_FULL(PinTexture, UTexture);
	READ_PTR_FULL(PinTextureHighlight, UTexture);
	READ_PTR_FULL(PathDropTexture, UTexture);
	READ_PTR_FULL(AllianceFlagIcon, UTexture);
	READ_PTR_FULL(ReapersMarkShipIcon, UTexture);
	READ_PTR_FULL(IslandEventHUDData, UIslandEventHUDData);
	READ_PTR_FULL(RenderTarget, UIterativeCanvasRenderTarget2D);
	READ_PTR_FULL(CanvasDataAsset, UMapTableCanvasDataAsset);
}

void UCanvasWorldMapComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MapClass);
	DELE_PTR_FULL(OffscreenArrowTexture);
	DELE_PTR_FULL(CompassTexture);
	DELE_PTR_FULL(Font);
	DELE_PTR_FULL(CrosshairTexture);
	DELE_PTR_FULL(CrosshairEmptyTexture);
	DELE_PTR_FULL(PinTexture);
	DELE_PTR_FULL(PinTextureHighlight);
	DELE_PTR_FULL(PathDropTexture);
	DELE_PTR_FULL(AllianceFlagIcon);
	DELE_PTR_FULL(ReapersMarkShipIcon);
	DELE_PTR_FULL(IslandEventHUDData);
	DELE_PTR_FULL(RenderTarget);
	DELE_PTR_FULL(CanvasDataAsset);
}

void UCapstanDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UCapstanDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UOptInDamageableComponent::AfterRead()
{
	UDamageableComponent::AfterRead();

}

void UOptInDamageableComponent::BeforeDelete()
{
	UDamageableComponent::BeforeDelete();

}

// Function Athena.ShipDamageableComponent.Multicast_DamageTriggered
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FImpactDamageEvent      DamageEvent                    (ConstParm, Parm, ReferenceParm)
void UShipDamageableComponent::Multicast_DamageTriggered(const struct FImpactDamageEvent& DamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipDamageableComponent.Multicast_DamageTriggered");

	UShipDamageableComponent_Multicast_DamageTriggered_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipDamageableComponent.Multicast_DamageApplied
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FEventShipDamageApplied ShipDamagedEvent               (ConstParm, Parm, ReferenceParm)
void UShipDamageableComponent::Multicast_DamageApplied(const struct FEventShipDamageApplied& ShipDamagedEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipDamageableComponent.Multicast_DamageApplied");

	UShipDamageableComponent_Multicast_DamageApplied_Params params;
	params.ShipDamagedEvent = ShipDamagedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShipDamageableComponent::AfterRead()
{
	UOptInDamageableComponent::AfterRead();

	READ_PTR_FULL(Ship, AShip);
}

void UShipDamageableComponent::BeforeDelete()
{
	UOptInDamageableComponent::BeforeDelete();

	DELE_PTR_FULL(Ship);
}

void UDamageableShipPartAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DamageLevelEvent, UWwiseEvent);
	READ_PTR_FULL(DamageLevelAudioPool, UWwiseObjectPoolWrapper);
}

void UDamageableShipPartAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DamageLevelEvent);
	DELE_PTR_FULL(DamageLevelAudioPool);
}

void UOwnedByShipInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UOwnedByShipInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipPartInterface.SetShip
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AShip*                   Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShipPartInterface::SetShip(class AShip* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipPartInterface.SetShip");

	UShipPartInterface_SetShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipPartInterface.GetShip
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AShip*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AShip* UShipPartInterface::GetShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipPartInterface.GetShip");

	UShipPartInterface_GetShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipPartInterface.ClearShip
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void UShipPartInterface::ClearShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipPartInterface.ClearShip");

	UShipPartInterface_ClearShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShipPartInterface::AfterRead()
{
	UOwnedByShipInterface::AfterRead();

}

void UShipPartInterface::BeforeDelete()
{
	UOwnedByShipInterface::BeforeDelete();

}

// Function Athena.Capstan.SetFullyRepaired
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InRepairer                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstan::SetFullyRepaired(class AActor* InRepairer)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.SetFullyRepaired");

	ACapstan_SetFullyRepaired_Params params;
	params.InRepairer = InRepairer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.SetFullyDamaged
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ACapstan::SetFullyDamaged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.SetFullyDamaged");

	ACapstan_SetFullyDamaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.ReactToRepairableStateChanged
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> InNewState                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    RepairableComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstan::ReactToRepairableStateChanged(TEnumAsByte<Repair_ERepairableState> InNewState, TEnumAsByte<Repair_ERepairableState> InPreviousState, class URepairableComponent* RepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.ReactToRepairableStateChanged");

	ACapstan_ReactToRepairableStateChanged_Params params;
	params.InNewState = InNewState;
	params.InPreviousState = InPreviousState;
	params.RepairableComponent = RepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.ReactToDamageLevelChanged
// (Final, Native, Protected)
// Parameters:
// int                            DamageLevel                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstan::ReactToDamageLevelChanged(int DamageLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.ReactToDamageLevelChanged");

	ACapstan_ReactToDamageLevelChanged_Params params;
	params.DamageLevel = DamageLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.ReactToDamage
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void ACapstan::ReactToDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.ReactToDamage");

	ACapstan_ReactToDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.OnCapstanRepaired
// (Final, Native, Protected)
// Parameters:
// int                            RemainingLevelOfDamage         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstan::OnCapstanRepaired(int RemainingLevelOfDamage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.OnCapstanRepaired");

	ACapstan_OnCapstanRepaired_Params params;
	params.RemainingLevelOfDamage = RemainingLevelOfDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.OnCapstanDamaged
// (Final, Native, Protected)
// Parameters:
// int                            CurrentLevelOfDamage           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstan::OnCapstanDamaged(int CurrentLevelOfDamage, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.OnCapstanDamaged");

	ACapstan_OnCapstanDamaged_Params params;
	params.CurrentLevelOfDamage = CurrentLevelOfDamage;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.GetMaxLevelOfDamage
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ACapstan::GetMaxLevelOfDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.GetMaxLevelOfDamage");

	ACapstan_GetMaxLevelOfDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Capstan.GetLevelOfDamage
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ACapstan::GetLevelOfDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.GetLevelOfDamage");

	ACapstan_GetLevelOfDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Capstan.GetCapstanReleaseActor
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACapstanRelease*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ACapstanRelease* ACapstan::GetCapstanReleaseActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.GetCapstanReleaseActor");

	ACapstan_GetCapstanReleaseActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Capstan.GetArms
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class ACapstanArm*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ACapstanArm*> ACapstan::GetArms()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.GetArms");

	ACapstan_GetArms_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Capstan.ChanceDroppingTheAnchor
// (Final, Native, Protected)
// Parameters:
// float                          InNormalisedChanceToDrop       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InDamageInstigator             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstan::ChanceDroppingTheAnchor(float InNormalisedChanceToDrop, class AActor* InDamageInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.ChanceDroppingTheAnchor");

	ACapstan_ChanceDroppingTheAnchor_Params params;
	params.InNormalisedChanceToDrop = InNormalisedChanceToDrop;
	params.InDamageInstigator = InDamageInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.BindToRepairableComponents
// (Final, Native, Protected)
void ACapstan::BindToRepairableComponents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.BindToRepairableComponents");

	ACapstan_BindToRepairableComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.BindToDamageComponent
// (Final, Native, Protected)
void ACapstan::BindToDamageComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.BindToDamageComponent");

	ACapstan_BindToDamageComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Capstan.ApplyDamage
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void ACapstan::ApplyDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Capstan.ApplyDamage");

	ACapstan_ApplyDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACapstan::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(IntentCombinerComponent, UControllableIntentCombinerComponent);
	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(CapstanReleaseComponent, UChildActorComponent);
	READ_PTR_FULL(CustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(CapstanDamageComponent, UShipDamageableComponent);
	READ_PTR_FULL(CapstanDamageLevelAudio, UDamageableShipPartAudioParams);
	READ_PTR_FULL(CapstanDamageParticleSystem, UParticleSystem);
}

void ACapstan::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(IntentCombinerComponent);
	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(CapstanReleaseComponent);
	DELE_PTR_FULL(CustomizationComponent);
	DELE_PTR_FULL(CapstanDamageComponent);
	DELE_PTR_FULL(CapstanDamageLevelAudio);
	DELE_PTR_FULL(CapstanDamageParticleSystem);
}

// Function Athena.SpectacleCapstan.OnRep_IsEngaged
// (Final, RequiredAPI, Native, Public)
void ASpectacleCapstan::OnRep_IsEngaged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpectacleCapstan.OnRep_IsEngaged");

	ASpectacleCapstan_OnRep_IsEngaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASpectacleCapstan::AfterRead()
{
	ACapstan::AfterRead();

}

void ASpectacleCapstan::BeforeDelete()
{
	ACapstan::BeforeDelete();

}

// Function Athena.RepairableComponent.OnRep_DamageLevel
// (Final, Native, Private)
void URepairableComponent::OnRep_DamageLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RepairableComponent.OnRep_DamageLevel");

	URepairableComponent_OnRep_DamageLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RepairableComponent.OnRep_AuthorityRepairableState
// (Final, Native, Private)
void URepairableComponent::OnRep_AuthorityRepairableState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RepairableComponent.OnRep_AuthorityRepairableState");

	URepairableComponent_OnRep_AuthorityRepairableState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RepairableComponent.GetMountLocationOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform URepairableComponent::GetMountLocationOffset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RepairableComponent.GetMountLocationOffset");

	URepairableComponent_GetMountLocationOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RepairableComponent.ApplyDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void URepairableComponent::ApplyDamage(int InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RepairableComponent.ApplyDamage");

	URepairableComponent_ApplyDamage_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URepairableComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(RepairType, UClass);
	READ_PTR_FULL(RepairMountParent, USceneComponent);
	READ_PTR_FULL(AIInteractionType, UClass);
}

void URepairableComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(RepairType);
	DELE_PTR_FULL(RepairMountParent);
	DELE_PTR_FULL(AIInteractionType);
}

// Function Athena.CapstanArm.UpdateIntactHandleMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMesh*             NewStaticMesh                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstanArm::UpdateIntactHandleMesh(class UStaticMesh* NewStaticMesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArm.UpdateIntactHandleMesh");

	ACapstanArm_UpdateIntactHandleMesh_Params params;
	params.NewStaticMesh = NewStaticMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CapstanArm.UpdateArmVisuals
// (Final, Native, Public, BlueprintCallable)
void ACapstanArm::UpdateArmVisuals()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArm.UpdateArmVisuals");

	ACapstanArm_UpdateArmVisuals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CapstanArm.ReactToRepairableStateChanged
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> InNewState                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACapstanArm::ReactToRepairableStateChanged(TEnumAsByte<Repair_ERepairableState> InNewState, TEnumAsByte<Repair_ERepairableState> InPreviousState, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArm.ReactToRepairableStateChanged");

	ACapstanArm_ReactToRepairableStateChanged_Params params;
	params.InNewState = InNewState;
	params.InPreviousState = InPreviousState;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CapstanArm.GetRepairableComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URepairableComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class URepairableComponent* ACapstanArm::GetRepairableComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArm.GetRepairableComponent");

	ACapstanArm_GetRepairableComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanArm.GetLookAtPosBasisSpace
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ACapstanArm::GetLookAtPosBasisSpace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArm.GetLookAtPosBasisSpace");

	ACapstanArm_GetLookAtPosBasisSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanArm.GetLookAtPos
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ACapstanArm::GetLookAtPos()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArm.GetLookAtPos");

	ACapstanArm_GetLookAtPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ACapstanArm::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(IntentComponent, UControllableIntentComponent);
	READ_PTR_FULL(RepairableComponent, URepairableComponent);
	READ_PTR_FULL(IntactHandleMesh, UStaticMesh);
	READ_PTR_FULL(BrokenHandleMesh, UStaticMesh);
	READ_PTR_FULL(RepairedHandleMesh, UStaticMesh);
}

void ACapstanArm::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(IntentComponent);
	DELE_PTR_FULL(RepairableComponent);
	DELE_PTR_FULL(IntactHandleMesh);
	DELE_PTR_FULL(BrokenHandleMesh);
	DELE_PTR_FULL(RepairedHandleMesh);
}

// Function Athena.LightingController.SetCurrentWorldLocation
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InCurrentWorldLocation         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ALightingController::SetCurrentWorldLocation(const struct FName& InCurrentWorldLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingController.SetCurrentWorldLocation");

	ALightingController_SetCurrentWorldLocation_Params params;
	params.InCurrentWorldLocation = InCurrentWorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightingController.IsPlayingInEditor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALightingController::IsPlayingInEditor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingController.IsPlayingInEditor");

	ALightingController_IsPlayingInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LightingController.IsPlayerInBoatSpace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALightingController::IsPlayerInBoatSpace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingController.IsPlayerInBoatSpace");

	ALightingController_IsPlayerInBoatSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LightingController.GetZoneWeights
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FLightingZoneBlendValues> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FLightingZoneBlendValues> ALightingController::GetZoneWeights()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingController.GetZoneWeights");

	ALightingController_GetZoneWeights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LightingController.GetRainWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ALightingController::GetRainWeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightingController.GetRainWeight");

	ALightingController_GetRainWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ALightingController::AfterRead()
{
	AThreadedActor::AfterRead();

	READ_PTR_FULL(OverworldFarQuad, AStaticMeshActor);
	READ_PTR_FULL(UnderworldFarQuad, AStaticMeshActor);
	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(DirectionalLight, UDirectionalLightComponent);
	READ_PTR_FULL(SkyDome, UStaticMeshComponent);
	READ_PTR_FULL(NorthStar, UStaticMeshComponent);
	READ_PTR_FULL(Fog, UExponentialHeightFogComponent);
	READ_PTR_FULL(UnderwaterFog, UExponentialHeightFogComponent);
	READ_PTR_FULL(GlobalPostProcess, UPostProcessComponent);
	READ_PTR_FULL(RainLight, UDirectionalLightComponent);
	READ_PTR_FULL(Moon, UStaticMeshComponent);
	READ_PTR_FULL(SkyLight, USkyLightComponent);
	READ_PTR_FULL(EndOfWorldLightingZoneWeightCurve, UCurveFloat);
}

void ALightingController::BeforeDelete()
{
	AThreadedActor::BeforeDelete();

	DELE_PTR_FULL(OverworldFarQuad);
	DELE_PTR_FULL(UnderworldFarQuad);
	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(DirectionalLight);
	DELE_PTR_FULL(SkyDome);
	DELE_PTR_FULL(NorthStar);
	DELE_PTR_FULL(Fog);
	DELE_PTR_FULL(UnderwaterFog);
	DELE_PTR_FULL(GlobalPostProcess);
	DELE_PTR_FULL(RainLight);
	DELE_PTR_FULL(Moon);
	DELE_PTR_FULL(SkyLight);
	DELE_PTR_FULL(EndOfWorldLightingZoneWeightCurve);
}

void ULightingZoneService::AfterRead()
{
	UObject::AfterRead();

}

void ULightingZoneService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.LightningComponent.Multicast_QueueLightning
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// struct FLightningImpact        LightningImpact                (ConstParm, Parm, ReferenceParm)
void ULightningComponent::Multicast_QueueLightning(const struct FLightningImpact& LightningImpact)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightningComponent.Multicast_QueueLightning");

	ULightningComponent_Multicast_QueueLightning_Params params;
	params.LightningImpact = LightningImpact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightningComponent.EnableLightningEffects
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStormEffectLockReasons> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULightningComponent::EnableLightningEffects(TEnumAsByte<Athena_EStormEffectLockReasons> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightningComponent.EnableLightningEffects");

	ULightningComponent_EnableLightningEffects_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightningComponent.DisableLightningEffects
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStormEffectLockReasons> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULightningComponent::DisableLightningEffects(TEnumAsByte<Athena_EStormEffectLockReasons> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightningComponent.DisableLightningEffects");

	ULightningComponent_DisableLightningEffects_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULightningComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(LightningDataAsset, ULightningDataAsset);
	READ_PTR_FULL(CachedExplosionComponent, UExplosionComponent);
	READ_PTR_FULL(BaseCloudMeshComponent, UStaticMeshComponent);
}

void ULightningComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(LightningDataAsset);
	DELE_PTR_FULL(CachedExplosionComponent);
	DELE_PTR_FULL(BaseCloudMeshComponent);
}

void ULightningDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void ULightningDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void ULightningDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(LightningStrikeEvent, UWwiseEvent);
	READ_PTR_FULL(LightningStrikePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(LightningMaterial, UMaterial);
	READ_PTR_FULL(StrikeWaterParticleSystem, UObject);
	READ_PTR_FULL(StrikeWaterEvent, UWwiseEvent);
	READ_PTR_FULL(StrikeWaterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(OverrideStrikeGroundEvent, UWwiseEvent);
	READ_PTR_FULL(OverrideStrikeGroundPool, UWwiseObjectPoolWrapper);
}

void ULightningDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(LightningStrikeEvent);
	DELE_PTR_FULL(LightningStrikePool);
	DELE_PTR_FULL(LightningMaterial);
	DELE_PTR_FULL(StrikeWaterParticleSystem);
	DELE_PTR_FULL(StrikeWaterEvent);
	DELE_PTR_FULL(StrikeWaterPool);
	DELE_PTR_FULL(OverrideStrikeGroundEvent);
	DELE_PTR_FULL(OverrideStrikeGroundPool);
}

void ULightningManagerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void ULightningManagerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.LightningManagerComponent.SetIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InIntensity                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULightningManagerComponent::SetIntensity(float InIntensity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightningManagerComponent.SetIntensity");

	ULightningManagerComponent_SetIntensity_Params params;
	params.InIntensity = InIntensity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightningManagerComponent.ForceTargetPointStop
// (Final, Native, Public, BlueprintCallable)
void ULightningManagerComponent::ForceTargetPointStop()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightningManagerComponent.ForceTargetPointStop");

	ULightningManagerComponent_ForceTargetPointStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LightningManagerComponent.ForceTargetPointStart
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void ULightningManagerComponent::ForceTargetPointStart(const struct FVector& Location)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LightningManagerComponent.ForceTargetPointStart");

	ULightningManagerComponent_ForceTargetPointStart_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULightningManagerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(LightningManagerDataAsset, ULightningManagerDataAsset);
}

void ULightningManagerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(LightningManagerDataAsset);
}

// Function Athena.LimpingComponent.TestForceLimpingOffLocally
// (Final, Native, Public, BlueprintCallable)
void ULimpingComponent::TestForceLimpingOffLocally()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.TestForceLimpingOffLocally");

	ULimpingComponent_TestForceLimpingOffLocally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LimpingComponent.PredictStartLimping
// (Final, Native, Public, BlueprintCallable)
void ULimpingComponent::PredictStartLimping()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.PredictStartLimping");

	ULimpingComponent_PredictStartLimping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LimpingComponent.OnRep_IsLimping
// (Final, Native, Private)
void ULimpingComponent::OnRep_IsLimping()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.OnRep_IsLimping");

	ULimpingComponent_OnRep_IsLimping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LimpingComponent.IsLimpingPredicted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULimpingComponent::IsLimpingPredicted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.IsLimpingPredicted");

	ULimpingComponent_IsLimpingPredicted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LimpingComponent.IsLimping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULimpingComponent::IsLimping()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.IsLimping");

	ULimpingComponent_IsLimping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LimpingComponent.GetHasActiveCameraModifiers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULimpingComponent::GetHasActiveCameraModifiers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.GetHasActiveCameraModifiers");

	ULimpingComponent_GetHasActiveCameraModifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LimpingComponent.GetCheatPenaltyTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ULimpingComponent::GetCheatPenaltyTimeLeft()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.GetCheatPenaltyTimeLeft");

	ULimpingComponent_GetCheatPenaltyTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LimpingComponent.EndLimpingIndefinitely
// (Final, Native, Public, BlueprintCallable)
void ULimpingComponent::EndLimpingIndefinitely()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.EndLimpingIndefinitely");

	ULimpingComponent_EndLimpingIndefinitely_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LimpingComponent.BeginLimpingIndefinitely
// (Final, Native, Public, BlueprintCallable)
void ULimpingComponent::BeginLimpingIndefinitely()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LimpingComponent.BeginLimpingIndefinitely");

	ULimpingComponent_BeginLimpingIndefinitely_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULimpingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(LimpStickDeflectionCurve, UCurveFloat);
	READ_PTR_FULL(LimpCameraCurve, UCurveFloat);
	READ_PTR_FULL(LimpCrunchRumble, UForceFeedbackEffect);
	READ_PTR_FULL(LocalBrokenLegAudioStateEvent, UWwiseEvent);
	READ_PTR_FULL(Player, AAthenaPlayerCharacter);
}

void ULimpingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(LimpStickDeflectionCurve);
	DELE_PTR_FULL(LimpCameraCurve);
	DELE_PTR_FULL(LimpCrunchRumble);
	DELE_PTR_FULL(LocalBrokenLegAudioStateEvent);
	DELE_PTR_FULL(Player);
}

void ALimpingTestActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Limping, ULimpingComponent);
}

void ALimpingTestActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Limping);
}

void ULimpStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void ULimpStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void ULiquidContainerTestMaterial::AfterRead()
{
	UMaterial::AfterRead();

}

void ULiquidContainerTestMaterial::BeforeDelete()
{
	UMaterial::BeforeDelete();

}

// Function Athena.LoadableComponent.OnRepLoadableComponentState
// (Final, Native, Private)
// Parameters:
// struct FLoadableComponentState PrevLoadableComponentState     (Parm)
void ULoadableComponent::OnRepLoadableComponentState(const struct FLoadableComponentState& PrevLoadableComponentState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadableComponent.OnRepLoadableComponentState");

	ULoadableComponent_OnRepLoadableComponentState_Params params;
	params.PrevLoadableComponentState = PrevLoadableComponentState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULoadableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DefaultObjectToLoad, UClass);
}

void ULoadableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DefaultObjectToLoad);
}

void ULoadingPointComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void ULoadingPointComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.LoadItemActionStateId.PushCharacterIntoLoadItemActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  LoadableActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Interactable                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  DefaultItemDesc                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void ULoadItemActionStateId::STATIC_PushCharacterIntoLoadItemActionState(class AActor* Character, class AActor* LoadableActor, class AActor* Interactable, class UClass* DefaultItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadItemActionStateId.PushCharacterIntoLoadItemActionState");

	ULoadItemActionStateId_PushCharacterIntoLoadItemActionState_Params params;
	params.Character = Character;
	params.LoadableActor = LoadableActor;
	params.Interactable = Interactable;
	params.DefaultItemDesc = DefaultItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LoadItemActionStateId.PopCharacterOutOfLoadItemActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULoadItemActionStateId::STATIC_PopCharacterOutOfLoadItemActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadItemActionStateId.PopCharacterOutOfLoadItemActionState");

	ULoadItemActionStateId_PopCharacterOutOfLoadItemActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULoadItemActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULoadItemActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.LoadoutControlInterface.IsRequestLoadoutCompleted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULoadoutControlInterface::IsRequestLoadoutCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadoutControlInterface.IsRequestLoadoutCompleted");

	ULoadoutControlInterface_IsRequestLoadoutCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULoadoutServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULoadoutServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULoadoutComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void ULoadoutComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void ULoadoutService::AfterRead()
{
	UObject::AfterRead();

}

void ULoadoutService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void ULoadoutSettings::AfterRead()
{
	UObject::AfterRead();

}

void ULoadoutSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.LoadPlayerActionStateId.PushCharacterIntoLoadPlayerActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InLoadable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULoadPlayerActionStateId::STATIC_PushCharacterIntoLoadPlayerActionState(class AActor* InCharacter, class AActor* InLoadable, class AActor* InInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LoadPlayerActionStateId.PushCharacterIntoLoadPlayerActionState");

	ULoadPlayerActionStateId_PushCharacterIntoLoadPlayerActionState_Params params;
	params.InCharacter = InCharacter;
	params.InLoadable = InLoadable;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULoadPlayerActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULoadPlayerActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void ULocationType::AfterRead()
{
	UObject::AfterRead();

}

void ULocationType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UKrakenLocationType::AfterRead()
{
	ULocationType::AfterRead();

}

void UKrakenLocationType::BeforeDelete()
{
	ULocationType::BeforeDelete();

}

void ULocationProviderServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULocationProviderServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULocationProviderService::AfterRead()
{
	UObject::AfterRead();

}

void ULocationProviderService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void ULockOnCameraModifier::AfterRead()
{
	UCameraModifier::AfterRead();

	READ_PTR_FULL(Settings, ULockOnCameraModifierSettings);
	READ_PTR_FULL(TargetActor, AActor);
}

void ULockOnCameraModifier::BeforeDelete()
{
	UCameraModifier::BeforeDelete();

	DELE_PTR_FULL(Settings);
	DELE_PTR_FULL(TargetActor);
}

void ULockOnCameraModifierSettings::AfterRead()
{
	UDataAsset::AfterRead();

}

void ULockOnCameraModifierSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ULockWheelStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void ULockWheelStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.LocomotionCompositeInputHandler.OnWalkActivate
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnWalkActivate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnWalkActivate");

	ULocomotionCompositeInputHandler_OnWalkActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnTurnRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnTurnRate");

	ULocomotionCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnTurn
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnTurn(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnTurn");

	ULocomotionCompositeInputHandler_OnTurn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnToggleSingleStickToCameraControlReleased
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnToggleSingleStickToCameraControlReleased()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnToggleSingleStickToCameraControlReleased");

	ULocomotionCompositeInputHandler_OnToggleSingleStickToCameraControlReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnToggleSingleStickToCameraControlPressed
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnToggleSingleStickToCameraControlPressed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnToggleSingleStickToCameraControlPressed");

	ULocomotionCompositeInputHandler_OnToggleSingleStickToCameraControlPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnToggleItem
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnToggleItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnToggleItem");

	ULocomotionCompositeInputHandler_OnToggleItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnToggleAutoMove
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnToggleAutoMove()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnToggleAutoMove");

	ULocomotionCompositeInputHandler_OnToggleAutoMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnSprintActivate
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnSprintActivate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnSprintActivate");

	ULocomotionCompositeInputHandler_OnSprintActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUseReleased
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnSecondaryItemUseReleased()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUseReleased");

	ULocomotionCompositeInputHandler_OnSecondaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUsePressed
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnSecondaryItemUsePressed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUsePressed");

	ULocomotionCompositeInputHandler_OnSecondaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchWeapon
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSwitchWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchWeapon");

	ULocomotionCompositeInputHandler_OnQuickSwitchWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSwitchSecondaryWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon");

	ULocomotionCompositeInputHandler_OnQuickSwitchSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSwitchPrimaryWeapon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon");

	ULocomotionCompositeInputHandler_OnQuickSwitchPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSelectItemOfCategory
// (Final, Native, Private)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            IndexIntoCategory              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickSelectItemOfCategory");

	ULocomotionCompositeInputHandler_OnQuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToWoodPlank
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToWoodPlank()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToWoodPlank");

	ULocomotionCompositeInputHandler_OnQuickCycleToWoodPlank_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToThrowables
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToThrowables()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToThrowables");

	ULocomotionCompositeInputHandler_OnQuickCycleToThrowables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToTankard
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToTankard()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToTankard");

	ULocomotionCompositeInputHandler_OnQuickCycleToTankard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToSpyglass
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToSpyglass()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToSpyglass");

	ULocomotionCompositeInputHandler_OnQuickCycleToSpyglass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToSpeakingTrumpet
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToSpeakingTrumpet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToSpeakingTrumpet");

	ULocomotionCompositeInputHandler_OnQuickCycleToSpeakingTrumpet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToShovel
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToShovel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToShovel");

	ULocomotionCompositeInputHandler_OnQuickCycleToShovel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToPocketWatch
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToPocketWatch()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToPocketWatch");

	ULocomotionCompositeInputHandler_OnQuickCycleToPocketWatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToLantern
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToLantern()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToLantern");

	ULocomotionCompositeInputHandler_OnQuickCycleToLantern_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToInstrument
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToInstrument()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToInstrument");

	ULocomotionCompositeInputHandler_OnQuickCycleToInstrument_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToFood
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToFood()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToFood");

	ULocomotionCompositeInputHandler_OnQuickCycleToFood_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToFishingRod
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToFishingRod()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToFishingRod");

	ULocomotionCompositeInputHandler_OnQuickCycleToFishingRod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCompass
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToCompass()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCompass");

	ULocomotionCompositeInputHandler_OnQuickCycleToCompass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCannonball
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToCannonball()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCannonball");

	ULocomotionCompositeInputHandler_OnQuickCycleToCannonball_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToBucket
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToBucket()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToBucket");

	ULocomotionCompositeInputHandler_OnQuickCycleToBucket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleItemsOfCategory
// (Final, Native, Private)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleItemsOfCategory(class UClass* Category)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleItemsOfCategory");

	ULocomotionCompositeInputHandler_OnQuickCycleItemsOfCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUseReleased
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnPrimaryItemUseReleased()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUseReleased");

	ULocomotionCompositeInputHandler_OnPrimaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUsePressed
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnPrimaryItemUsePressed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUsePressed");

	ULocomotionCompositeInputHandler_OnPrimaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnMoveRight
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnMoveRight");

	ULocomotionCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnMoveForward
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnMoveForward");

	ULocomotionCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnLookUpRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnLookUpRate");

	ULocomotionCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnLookUp
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnLookUp");

	ULocomotionCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnJump
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnJump()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnJump");

	ULocomotionCompositeInputHandler_OnJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnDropLargeWieldedItem
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnDropLargeWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnDropLargeWieldedItem");

	ULocomotionCompositeInputHandler_OnDropLargeWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnCycleItemUp
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnCycleItemUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnCycleItemUp");

	ULocomotionCompositeInputHandler_OnCycleItemUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnCycleItemDown
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ULocomotionCompositeInputHandler::OnCycleItemDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LocomotionCompositeInputHandler.OnCycleItemDown");

	ULocomotionCompositeInputHandler_OnCycleItemDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULocomotionCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
	READ_PTR_FULL(ThrowablesItemCategory, UClass);
}

void ULocomotionCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
	DELE_PTR_FULL(ActionRulesComponent);
	DELE_PTR_FULL(ThrowablesItemCategory);
}

void ULookUpRateAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void ULookUpRateAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void ULostTargetAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void ULostTargetAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void ULowFlyAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void ULowFlyAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.TickLPVAdaptation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLPVAdaptationState     InOutLPVAdaptationState        (Parm, OutParm, ReferenceParm)
// struct FPostProcessSettings    InOutPostProcessSettings       (Parm, OutParm, ReferenceParm)
// struct FTransform              InCurrentShipTransform         (Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          InDeltaTime                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULPVReferenceFrameAdaptationFunctionLibrary::STATIC_TickLPVAdaptation(struct FLPVAdaptationState* InOutLPVAdaptationState, struct FPostProcessSettings* InOutPostProcessSettings, struct FTransform* InCurrentShipTransform, float InDeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.TickLPVAdaptation");

	ULPVReferenceFrameAdaptationFunctionLibrary_TickLPVAdaptation_Params params;
	params.InDeltaTime = InDeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutLPVAdaptationState != nullptr)
		*InOutLPVAdaptationState = params.InOutLPVAdaptationState;
	if (InOutPostProcessSettings != nullptr)
		*InOutPostProcessSettings = params.InOutPostProcessSettings;
	if (InCurrentShipTransform != nullptr)
		*InCurrentShipTransform = params.InCurrentShipTransform;

}


// Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.SetLPVAdaptationState
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLPVAdaptationState     InOutLPVAdaptationState        (Parm, OutParm, ReferenceParm)
// struct FVector                 InPlayerPawnLocation           (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FTransform              InCurrentShipTransform         (Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           bInIsPlayerInLPVRefFrameArea   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ULPVReferenceFrameAdaptationFunctionLibrary::STATIC_SetLPVAdaptationState(struct FLPVAdaptationState* InOutLPVAdaptationState, struct FVector* InPlayerPawnLocation, struct FTransform* InCurrentShipTransform, bool bInIsPlayerInLPVRefFrameArea)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.SetLPVAdaptationState");

	ULPVReferenceFrameAdaptationFunctionLibrary_SetLPVAdaptationState_Params params;
	params.bInIsPlayerInLPVRefFrameArea = bInIsPlayerInLPVRefFrameArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutLPVAdaptationState != nullptr)
		*InOutLPVAdaptationState = params.InOutLPVAdaptationState;
	if (InPlayerPawnLocation != nullptr)
		*InPlayerPawnLocation = params.InPlayerPawnLocation;
	if (InCurrentShipTransform != nullptr)
		*InCurrentShipTransform = params.InCurrentShipTransform;

}


// Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.InitializeLPVAdaptationStateDefaultOptions
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FLPVAdaptationState     InOutLPVAdaptationState        (Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_ELPVAdaptationType> InAdaptationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InRotationBlendTime            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InTranslationBlendTime         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InAdditionalBlendTime          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULPVReferenceFrameAdaptationFunctionLibrary::STATIC_InitializeLPVAdaptationStateDefaultOptions(struct FLPVAdaptationState* InOutLPVAdaptationState, TEnumAsByte<Athena_ELPVAdaptationType> InAdaptationType, float InRotationBlendTime, float InTranslationBlendTime, float InAdditionalBlendTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.InitializeLPVAdaptationStateDefaultOptions");

	ULPVReferenceFrameAdaptationFunctionLibrary_InitializeLPVAdaptationStateDefaultOptions_Params params;
	params.InAdaptationType = InAdaptationType;
	params.InRotationBlendTime = InRotationBlendTime;
	params.InTranslationBlendTime = InTranslationBlendTime;
	params.InAdditionalBlendTime = InAdditionalBlendTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutLPVAdaptationState != nullptr)
		*InOutLPVAdaptationState = params.InOutLPVAdaptationState;

}


void ULPVReferenceFrameAdaptationFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void ULPVReferenceFrameAdaptationFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UMapRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

}

void UMapRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

}

// Function Athena.MapTable.SetMaterialInstanceDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic* InMID                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMapTable::SetMaterialInstanceDynamic(class UMaterialInstanceDynamic* InMID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.SetMaterialInstanceDynamic");

	AMapTable_SetMaterialInstanceDynamic_Params params;
	params.InMID = InMID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.Server_SetPins
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FVector2D>       InMapPins                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void AMapTable::Server_SetPins(TArray<struct FVector2D> InMapPins)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.Server_SetPins");

	AMapTable_Server_SetPins_Params params;
	params.InMapPins = InMapPins;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.Server_MoveMap
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector2D               CentreLocation                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          ZoomLevel                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMapTable::Server_MoveMap(const struct FVector2D& CentreLocation, float ZoomLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.Server_MoveMap");

	AMapTable_Server_MoveMap_Params params;
	params.CentreLocation = CentreLocation;
	params.ZoomLevel = ZoomLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.Server_LeaveTable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMapTable::Server_LeaveTable(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.Server_LeaveTable");

	AMapTable_Server_LeaveTable_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.Server_JoinTable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                  Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMapTable::Server_JoinTable(class AActor* Controller)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.Server_JoinTable");

	AMapTable_Server_JoinTable_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnRep_ZoomLevel
// (Final, Native, Public)
void AMapTable::OnRep_ZoomLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnRep_ZoomLevel");

	AMapTable_OnRep_ZoomLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnRep_TrackedShips
// (Final, Native, Public)
void AMapTable::OnRep_TrackedShips()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnRep_TrackedShips");

	AMapTable_OnRep_TrackedShips_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnRep_MapPins
// (Final, Native, Public)
void AMapTable::OnRep_MapPins()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnRep_MapPins");

	AMapTable_OnRep_MapPins_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnRep_CentreLocation
// (Final, Native, Public)
void AMapTable::OnRep_CentreLocation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnRep_CentreLocation");

	AMapTable_OnRep_CentreLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnRep_BoundaryData
// (Final, Native, Public)
void AMapTable::OnRep_BoundaryData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnRep_BoundaryData");

	AMapTable_OnRep_BoundaryData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnParentDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                  InParentActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMapTable::OnParentDestroyed(class AActor* InParentActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnParentDestroyed");

	AMapTable_OnParentDestroyed_Params params;
	params.InParentActor = InParentActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnMapMove
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               CentreLocation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D               ZoomLevel                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMapTable::OnMapMove(const struct FVector2D& CentreLocation, const struct FVector2D& ZoomLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnMapMove");

	AMapTable_OnMapMove_Params params;
	params.CentreLocation = CentreLocation;
	params.ZoomLevel = ZoomLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTable.OnMapActivate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           IsMapActive                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTextureRenderTarget2D*  Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMapTable::OnMapActivate(bool IsMapActive, class UTextureRenderTarget2D* Texture)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTable.OnMapActivate");

	AMapTable_OnMapActivate_Params params;
	params.IsMapActive = IsMapActive;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMapTable::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(TableMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(MapTablePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(JoinTableSfx, UWwiseEvent);
	READ_PTR_FULL(LeaveTableSfx, UWwiseEvent);
	READ_PTR_FULL(PlayMoveMapSfx, UWwiseEvent);
	READ_PTR_FULL(StopMoveMapSfx, UWwiseEvent);
	READ_PTR_FULL(PlacePinSfx, UWwiseEvent);
	READ_PTR_FULL(RemovePinSfx, UWwiseEvent);
	READ_PTR_FULL(ShowTaleSfx, UWwiseEvent);
	READ_PTR_FULL(HideTaleSfx, UWwiseEvent);
	READ_PTR_FULL(HighlightTaleMarkerSfx, UWwiseEvent);
	READ_PTR_FULL(ReapersMarkFlag, UClass);
	READ_PTR_FULL(DynamicMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(ExpandedMapMaterial, UMaterialInterface);
	READ_PTR_FULL(BaseMapMaterial, UMaterialInterface);
	READ_PTR_FULL(AllianceOverlayIcon, UTexture);
}

void AMapTable::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(TableMeshComponent);
	DELE_PTR_FULL(MapTablePool);
	DELE_PTR_FULL(JoinTableSfx);
	DELE_PTR_FULL(LeaveTableSfx);
	DELE_PTR_FULL(PlayMoveMapSfx);
	DELE_PTR_FULL(StopMoveMapSfx);
	DELE_PTR_FULL(PlacePinSfx);
	DELE_PTR_FULL(RemovePinSfx);
	DELE_PTR_FULL(ShowTaleSfx);
	DELE_PTR_FULL(HideTaleSfx);
	DELE_PTR_FULL(HighlightTaleMarkerSfx);
	DELE_PTR_FULL(ReapersMarkFlag);
	DELE_PTR_FULL(DynamicMaterial);
	DELE_PTR_FULL(ExpandedMapMaterial);
	DELE_PTR_FULL(BaseMapMaterial);
	DELE_PTR_FULL(AllianceOverlayIcon);
}

void AMapTableControlPoint::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(SceneRootComponent, USceneComponent);
	READ_PTR_FULL(MyInteractable, UInteractableComponent);
}

void AMapTableControlPoint::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(SceneRootComponent);
	DELE_PTR_FULL(MyInteractable);
}

void UMapTableInputComponent::AfterRead()
{
	UAthenaCharacterBaseMovementComponentWithInterference::AfterRead();

	READ_PTR_FULL(MapTable, AMapTable);
}

void UMapTableInputComponent::BeforeDelete()
{
	UAthenaCharacterBaseMovementComponentWithInterference::BeforeDelete();

	DELE_PTR_FULL(MapTable);
}

void UMapTablePanXAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTablePanXAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMapTablePanYAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTablePanYAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMapTableZoomInAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTableZoomInAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMapTableZoomOutAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTableZoomOutAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMapTablePanXMouseInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTablePanXMouseInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMapTablePanYMouseInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTablePanYMouseInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UMapTableZoomMouseInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UMapTableZoomMouseInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UCapstanEventDispatcherMock::AfterRead()
{
	UObject::AfterRead();

}

void UCapstanEventDispatcherMock::BeforeDelete()
{
	UObject::BeforeDelete();

}

void ACapstanMock::AfterRead()
{
	AInteractableBase::AfterRead();

}

void ACapstanMock::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

}

// Function Athena.CapstanRelease.Release
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void ACapstanRelease::Release()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanRelease.Release");

	ACapstanRelease_Release_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACapstanRelease::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
}

void ACapstanRelease::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
}

// Function Athena.CapstanTestFunctions.SetupCapstanTestServerSide
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                  CapstanClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)
// class ACapstan*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ACapstan* UCapstanTestFunctions::STATIC_SetupCapstanTestServerSide(class UObject* WorldContextObject, const struct FVector& SpawnLocation, class UClass* CapstanClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanTestFunctions.SetupCapstanTestServerSide");

	UCapstanTestFunctions_SetupCapstanTestServerSide_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SpawnLocation = SpawnLocation;
	params.CapstanClass = CapstanClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.SetupCapstanTestClientSide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACapstan*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ACapstan* UCapstanTestFunctions::STATIC_SetupCapstanTestClientSide(class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanTestFunctions.SetupCapstanTestClientSide");

	UCapstanTestFunctions_SetupCapstanTestClientSide_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.SetCapstanSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACapstan*                Capstan                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MaxPlayerVelocity              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MaxLoweringVelocity            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCapstanTestFunctions::STATIC_SetCapstanSpeed(class ACapstan* Capstan, float MaxPlayerVelocity, float MaxLoweringVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanTestFunctions.SetCapstanSpeed");

	UCapstanTestFunctions_SetCapstanSpeed_Params params;
	params.Capstan = Capstan;
	params.MaxPlayerVelocity = MaxPlayerVelocity;
	params.MaxLoweringVelocity = MaxLoweringVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CapstanTestFunctions.GetCapstanArm
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ACapstan*                Capstan                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ArmIndex                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
// class ACapstanArm*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class ACapstanArm* UCapstanTestFunctions::STATIC_GetCapstanArm(class ACapstan* Capstan, int ArmIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanTestFunctions.GetCapstanArm");

	UCapstanTestFunctions_GetCapstanArm_Params params;
	params.Capstan = Capstan;
	params.ArmIndex = ArmIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.ForceSetCapstanRatio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACapstan*                Capstan                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          TargetRatio                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCapstanTestFunctions::STATIC_ForceSetCapstanRatio(class ACapstan* Capstan, float TargetRatio)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanTestFunctions.ForceSetCapstanRatio");

	UCapstanTestFunctions_ForceSetCapstanRatio_Params params;
	params.Capstan = Capstan;
	params.TargetRatio = TargetRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCapstanTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCapstanTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCaptainRammingAnimationStateId::AfterRead()
{
	UAIAnimationStateId::AfterRead();

}

void UCaptainRammingAnimationStateId::BeforeDelete()
{
	UAIAnimationStateId::BeforeDelete();

}

void UCaptainTauntAnimationStateId::AfterRead()
{
	UAIAnimationStateId::AfterRead();

}

void UCaptainTauntAnimationStateId::BeforeDelete()
{
	UAIAnimationStateId::BeforeDelete();

}

// Function Athena.CapturedByKrakenActionStateId.PushCharacterIntoCapturedByKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AKrakenAnimatedTentacle* Tentacle                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCapturedByKrakenActionStateId::STATIC_PushCharacterIntoCapturedByKrakenActionState(class AActor* Character, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapturedByKrakenActionStateId.PushCharacterIntoCapturedByKrakenActionState");

	UCapturedByKrakenActionStateId_PushCharacterIntoCapturedByKrakenActionState_Params params;
	params.Character = Character;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CapturedByKrakenActionStateId.PopCharacterOutOfCapturedByKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCapturedByKrakenActionStateId::STATIC_PopCharacterOutOfCapturedByKrakenActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapturedByKrakenActionStateId.PopCharacterOutOfCapturedByKrakenActionState");

	UCapturedByKrakenActionStateId_PopCharacterOutOfCapturedByKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCapturedByKrakenActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UCapturedByKrakenActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.CapturedByKrakenCompositeInputHandler.OnPrimaryInteract
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UCapturedByKrakenCompositeInputHandler::OnPrimaryInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapturedByKrakenCompositeInputHandler.OnPrimaryInteract");

	UCapturedByKrakenCompositeInputHandler_OnPrimaryInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapturedByKrakenCompositeInputHandler.OnDisengage
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UCapturedByKrakenCompositeInputHandler::OnDisengage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapturedByKrakenCompositeInputHandler.OnDisengage");

	UCapturedByKrakenCompositeInputHandler_OnDisengage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCapturedByKrakenCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UCapturedByKrakenCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

// Function Athena.CargoRunCrateComponent.OnRep_DropOffData
// (Final, Native, Private)
void UCargoRunCrateComponent::OnRep_DropOffData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CargoRunCrateComponent.OnRep_DropOffData");

	UCargoRunCrateComponent_OnRep_DropOffData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCargoRunCrateComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CargoRunCrateData, UCargoRunCrateData);
	READ_PTR_FULL(CargoRunCrateCustomData, UCargoRunCrateCustomData);
}

void UCargoRunCrateComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CargoRunCrateData);
	DELE_PTR_FULL(CargoRunCrateCustomData);
}

// Function Athena.CargoRunMap.RefreshContents
// (Native, Public, BlueprintCallable)
void ACargoRunMap::RefreshContents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CargoRunMap.RefreshContents");

	ACargoRunMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CargoRunMap.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACargoRunMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CargoRunMap.OnTextCanvasUpdate");

	ACargoRunMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CargoRunMap.OnRep_Contents
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FCargoRunMapContents    PreviousContents               (ConstParm, Parm, OutParm, ReferenceParm)
void ACargoRunMap::OnRep_Contents(const struct FCargoRunMapContents& PreviousContents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CargoRunMap.OnRep_Contents");

	ACargoRunMap_OnRep_Contents_Params params;
	params.PreviousContents = PreviousContents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACargoRunMap::AfterRead()
{
	ATreasureMap::AfterRead();

	READ_PTR_FULL(Font, UFont);
	READ_PTR_FULL(CargoRunMapLayout, UCargoRunMapLayout);
}

void ACargoRunMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

	DELE_PTR_FULL(Font);
	DELE_PTR_FULL(CargoRunMapLayout);
}

void UCargoRunMapData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Layout, UCargoRunMapLayout);
}

void UCargoRunMapData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Layout);
}

// Function Athena.CarouselPirateGenerator.RefreshCurrentPirateStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Locked                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCarouselPirateGenerator::STATIC_RefreshCurrentPirateStatus(class UObject* WorldContextObject, bool Locked)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CarouselPirateGenerator.RefreshCurrentPirateStatus");

	UCarouselPirateGenerator_RefreshCurrentPirateStatus_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Locked = Locked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CarouselPirateGenerator.GenerateSetOfPirates
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            InSeed                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InCount                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCarouselPirateGeneratorParams InParams                       (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<struct FCarouselPirateDesc> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FCarouselPirateDesc> UCarouselPirateGenerator::STATIC_GenerateSetOfPirates(int InSeed, int InCount, const struct FCarouselPirateGeneratorParams& InParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CarouselPirateGenerator.GenerateSetOfPirates");

	UCarouselPirateGenerator_GenerateSetOfPirates_Params params;
	params.InSeed = InSeed;
	params.InCount = InCount;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CarouselPirateGenerator.GenerateClothingItems
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            InSeed                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCarouselPirateGeneratorParams InParams                       (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<PirateGenerator_EIPGGender> InTargetGender                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<PirateGenerator_EIPGEthnicity> InTargetEthnicity              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FName> UCarouselPirateGenerator::STATIC_GenerateClothingItems(int InSeed, const struct FCarouselPirateGeneratorParams& InParams, TEnumAsByte<PirateGenerator_EIPGGender> InTargetGender, TEnumAsByte<PirateGenerator_EIPGEthnicity> InTargetEthnicity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CarouselPirateGenerator.GenerateClothingItems");

	UCarouselPirateGenerator_GenerateClothingItems_Params params;
	params.InSeed = InSeed;
	params.InParams = InParams;
	params.InTargetGender = InTargetGender;
	params.InTargetEthnicity = InTargetEthnicity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCarouselPirateGenerator::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCarouselPirateGenerator::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.KrakenAnimatedTentacle.ToggleInstantStateSwitching
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AKrakenAnimatedTentacle::ToggleInstantStateSwitching(bool Enabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.ToggleInstantStateSwitching");

	AKrakenAnimatedTentacle_ToggleInstantStateSwitching_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.ToggleAlwaysFallbackToIdle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AKrakenAnimatedTentacle::ToggleAlwaysFallbackToIdle(bool Enabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.ToggleAlwaysFallbackToIdle");

	AKrakenAnimatedTentacle_ToggleAlwaysFallbackToIdle_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.TestToggleInstantStateSwitching
// (Final, Native, Public, BlueprintCallable)
void AKrakenAnimatedTentacle::TestToggleInstantStateSwitching()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.TestToggleInstantStateSwitching");

	AKrakenAnimatedTentacle_TestToggleInstantStateSwitching_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.SetMinHoldingTargetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          HoldingTime                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::SetMinHoldingTargetTime(float HoldingTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.SetMinHoldingTargetTime");

	AKrakenAnimatedTentacle_SetMinHoldingTargetTime_Params params;
	params.HoldingTime = HoldingTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.SetCurrentTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::SetCurrentTarget(class AAthenaCharacter* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.SetCurrentTarget");

	AKrakenAnimatedTentacle_SetCurrentTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.RequestState
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::RequestState(class UClass* NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.RequestState");

	AKrakenAnimatedTentacle_RequestState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.RequestIdleState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  IdleState                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::RequestIdleState(class UClass* IdleState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.RequestIdleState");

	AKrakenAnimatedTentacle_RequestIdleState_Params params;
	params.IdleState = IdleState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.OnRep_TentacleYaw
// (Final, Native, Private)
// Parameters:
// float                          OldTentacleYaw                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::OnRep_TentacleYaw(float OldTentacleYaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.OnRep_TentacleYaw");

	AKrakenAnimatedTentacle_OnRep_TentacleYaw_Params params;
	params.OldTentacleYaw = OldTentacleYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.OnRep_TentacleWorldLocation
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FVector                 OldTentacleWorldLocation       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AKrakenAnimatedTentacle::OnRep_TentacleWorldLocation(const struct FVector& OldTentacleWorldLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.OnRep_TentacleWorldLocation");

	AKrakenAnimatedTentacle_OnRep_TentacleWorldLocation_Params params;
	params.OldTentacleWorldLocation = OldTentacleWorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.OnRep_PendingState
// (Final, Native, Protected)
void AKrakenAnimatedTentacle::OnRep_PendingState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.OnRep_PendingState");

	AKrakenAnimatedTentacle_OnRep_PendingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.OnRep_CurrentTarget
// (Native, Protected)
void AKrakenAnimatedTentacle::OnRep_CurrentTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.OnRep_CurrentTarget");

	AKrakenAnimatedTentacle_OnRep_CurrentTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.OnRep_CurrentState
// (Final, Native, Protected)
void AKrakenAnimatedTentacle::OnRep_CurrentState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.OnRep_CurrentState");

	AKrakenAnimatedTentacle_OnRep_CurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.OnRep_AnimationProgression
// (Native, Protected)
void AKrakenAnimatedTentacle::OnRep_AnimationProgression()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.OnRep_AnimationProgression");

	AKrakenAnimatedTentacle_OnRep_AnimationProgression_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.IsAnimationLooping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AKrakenAnimatedTentacle::IsAnimationLooping()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.IsAnimationLooping");

	AKrakenAnimatedTentacle_IsAnimationLooping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.GetCurrentTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaCharacter* AKrakenAnimatedTentacle::GetCurrentTarget()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.GetCurrentTarget");

	AKrakenAnimatedTentacle_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.GetCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* AKrakenAnimatedTentacle::GetCurrentState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.GetCurrentState");

	AKrakenAnimatedTentacle_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.DockToComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         ComponentToDockTo              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::DockToComponent(class USceneComponent* ComponentToDockTo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.DockToComponent");

	AKrakenAnimatedTentacle_DockToComponent_Params params;
	params.ComponentToDockTo = ComponentToDockTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.DockToActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToDockTo                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::DockToActor(class AActor* ActorToDockTo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.DockToActor");

	AKrakenAnimatedTentacle_DockToActor_Params params;
	params.ActorToDockTo = ActorToDockTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenAnimatedTentacle.DemandState
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void AKrakenAnimatedTentacle::DemandState(class UClass* NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacle.DemandState");

	AKrakenAnimatedTentacle_DemandState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AKrakenAnimatedTentacle::AfterRead()
{
	AKrakenTentacle::AfterRead();

	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(BaseShipCollision, UCapsuleComponent);
	READ_PTR_FULL(MeshOffsetComponent, USceneComponent);
	READ_PTR_FULL(TentacleMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(KrakenTentacleAudioComponent, UKrakenTentacleAIAudioComponent);
	READ_PTR_FULL(AnimationSpec, UKrakenAnimatedTentacleAnimationSpecDataAsset);
	READ_PTR_FULL(AnimationMapping, UKrakenAnimatedTentacleAnimationMappingDataAsset);
	READ_PTR_FULL(StateAnimationMapping, UKrakenAnimatedTentacleStateAnimationsDataAsset);
	READ_PTR_FULL(TentacleSuckingTellVFX, UObject);
	READ_PTR_FULL(TargetFirstPersonSuckingTellVFX, UObject);
	READ_PTR_FULL(TargetThirdPersonSuckingTellVFX, UObject);
	READ_PTR_FULL(TentacleFirstPersonThrowingVFX, UObject);
	READ_PTR_FULL(TentacleThirdPersonThrowingVFX, UObject);
	READ_PTR_FULL(TentaclePhysicalMaterial, UPhysicalMaterial);
	READ_PTR_FULL(PendingState, UClass);
	READ_PTR_FULL(ReplicatedCurrentState, UClass);
	READ_PTR_FULL(PreviousState, UClass);
	READ_PTR_FULL(AuthoritativeAnimation, UKrakenAnimatedTentacleAnimationDataAsset);
	READ_PTR_FULL(CurrentTarget, AAthenaCharacter);
	READ_PTR_FULL(DockedToSceneComponent, USceneComponent);
	READ_PTR_FULL(TentacleSuckingTellParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(TargetFirstPersonSuckingTellParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(TargetThirdPersonSuckingTellParticleSystem, UParticleSystemComponent);
}

void AKrakenAnimatedTentacle::BeforeDelete()
{
	AKrakenTentacle::BeforeDelete();

	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(BaseShipCollision);
	DELE_PTR_FULL(MeshOffsetComponent);
	DELE_PTR_FULL(TentacleMeshComponent);
	DELE_PTR_FULL(KrakenTentacleAudioComponent);
	DELE_PTR_FULL(AnimationSpec);
	DELE_PTR_FULL(AnimationMapping);
	DELE_PTR_FULL(StateAnimationMapping);
	DELE_PTR_FULL(TentacleSuckingTellVFX);
	DELE_PTR_FULL(TargetFirstPersonSuckingTellVFX);
	DELE_PTR_FULL(TargetThirdPersonSuckingTellVFX);
	DELE_PTR_FULL(TentacleFirstPersonThrowingVFX);
	DELE_PTR_FULL(TentacleThirdPersonThrowingVFX);
	DELE_PTR_FULL(TentaclePhysicalMaterial);
	DELE_PTR_FULL(PendingState);
	DELE_PTR_FULL(ReplicatedCurrentState);
	DELE_PTR_FULL(PreviousState);
	DELE_PTR_FULL(AuthoritativeAnimation);
	DELE_PTR_FULL(CurrentTarget);
	DELE_PTR_FULL(DockedToSceneComponent);
	DELE_PTR_FULL(TentacleSuckingTellParticleSystem);
	DELE_PTR_FULL(TargetFirstPersonSuckingTellParticleSystem);
	DELE_PTR_FULL(TargetThirdPersonSuckingTellParticleSystem);
}

void AKrakenShipWrappingTellAnimatedTentacle::AfterRead()
{
	AKrakenAnimatedTentacle::AfterRead();

}

void AKrakenShipWrappingTellAnimatedTentacle::BeforeDelete()
{
	AKrakenAnimatedTentacle::BeforeDelete();

}

void UKrakenAnimatedTentacleAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(StateAnimationsAsset, UKrakenAnimatedTentacleStateAnimationsDataAsset);
	READ_PTR_FULL(PlayingMontage, UAnimMontage);
	READ_PTR_FULL(OwningKrakenAnimatedTentacle, AKrakenAnimatedTentacle);
}

void UKrakenAnimatedTentacleAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(StateAnimationsAsset);
	DELE_PTR_FULL(PlayingMontage);
	DELE_PTR_FULL(OwningKrakenAnimatedTentacle);
}

// Function Athena.KrakenAnimatedTentacleRecordingAnimationInstance.StartRecordingAllAnimations
// (Final, Native, Public, BlueprintCallable)
void UKrakenAnimatedTentacleRecordingAnimationInstance::StartRecordingAllAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenAnimatedTentacleRecordingAnimationInstance.StartRecordingAllAnimations");

	UKrakenAnimatedTentacleRecordingAnimationInstance_StartRecordingAllAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKrakenAnimatedTentacleRecordingAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(RecordingAnimationSpec, UKrakenAnimatedTentacleAnimationSpecDataAsset);
	READ_PTR_FULL(RecordingAnimationMapping, UKrakenAnimatedTentacleAnimationMappingDataAsset);
}

void UKrakenAnimatedTentacleRecordingAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(RecordingAnimationSpec);
	DELE_PTR_FULL(RecordingAnimationMapping);
}

// Function Athena.KrakenDebugFunctionLibrary.SpawnTentacleAndSuckTarget
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLatentActionInfo       LatentInfo                     (Parm)
// class UClass*                  TentacleClass                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FVector                 SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AAthenaCharacter*        AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          AnimPlayRate                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          SuckingTellTime                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AKrakenAnimatedTentacle* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AKrakenAnimatedTentacle* UKrakenDebugFunctionLibrary::STATIC_SpawnTentacleAndSuckTarget(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UClass* TentacleClass, const struct FVector& SpawnLocation, class AAthenaCharacter* AthenaCharacter, float AnimPlayRate, float SuckingTellTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.SpawnTentacleAndSuckTarget");

	UKrakenDebugFunctionLibrary_SpawnTentacleAndSuckTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.TentacleClass = TentacleClass;
	params.SpawnLocation = SpawnLocation;
	params.AthenaCharacter = AthenaCharacter;
	params.AnimPlayRate = AnimPlayRate;
	params.SuckingTellTime = SuckingTellTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.KrakenDebugFunctionLibrary.SetTimeUntilNextKrakenSpawnAttempt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UKrakenDebugFunctionLibrary::STATIC_SetTimeUntilNextKrakenSpawnAttempt(class UObject* WorldContextObject, float Time)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.SetTimeUntilNextKrakenSpawnAttempt");

	UKrakenDebugFunctionLibrary_SetTimeUntilNextKrakenSpawnAttempt_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenDebugFunctionLibrary.RequestKrakenWithShip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AShip*                   ShipTarget                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UKrakenDebugFunctionLibrary::STATIC_RequestKrakenWithShip(class UObject* WorldContextObject, class AShip* ShipTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.RequestKrakenWithShip");

	UKrakenDebugFunctionLibrary_RequestKrakenWithShip_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ShipTarget = ShipTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenDebugFunctionLibrary.OverridePlayRateScaleInKrakenServiceParams
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          OverridePlayRateScale          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UKrakenDebugFunctionLibrary::STATIC_OverridePlayRateScaleInKrakenServiceParams(class UObject* WorldContextObject, float OverridePlayRateScale)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.OverridePlayRateScaleInKrakenServiceParams");

	UKrakenDebugFunctionLibrary_OverridePlayRateScaleInKrakenServiceParams_Params params;
	params.WorldContextObject = WorldContextObject;
	params.OverridePlayRateScale = OverridePlayRateScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenDebugFunctionLibrary.OverrideNumberOfTentaclesSpawnedInKrakenServiceParams
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OverrideNumberOfTentacles      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UKrakenDebugFunctionLibrary::STATIC_OverrideNumberOfTentaclesSpawnedInKrakenServiceParams(class UObject* WorldContextObject, int OverrideNumberOfTentacles)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.OverrideNumberOfTentaclesSpawnedInKrakenServiceParams");

	UKrakenDebugFunctionLibrary_OverrideNumberOfTentaclesSpawnedInKrakenServiceParams_Params params;
	params.WorldContextObject = WorldContextObject;
	params.OverrideNumberOfTentacles = OverrideNumberOfTentacles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenDebugFunctionLibrary.OverrideNewTargetTimeoutInKrakenServiceParams
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          OverrideNewTargetTimeout       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UKrakenDebugFunctionLibrary::STATIC_OverrideNewTargetTimeoutInKrakenServiceParams(class UObject* WorldContextObject, float OverrideNewTargetTimeout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.OverrideNewTargetTimeoutInKrakenServiceParams");

	UKrakenDebugFunctionLibrary_OverrideNewTargetTimeoutInKrakenServiceParams_Params params;
	params.WorldContextObject = WorldContextObject;
	params.OverrideNewTargetTimeout = OverrideNewTargetTimeout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenDebugFunctionLibrary.GenerateKrakenSpawnLocationDistribution
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FKrakenSpawnLocationExclusionZone> SeaRockExclusionZones          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FKrakenSpawnLocationExclusionZone> IslandExclusionZones           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          DistributionWidth              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DistributionHeight             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MinDistanceBetweenSamplePoints (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Seed                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKrakenSpawnLocationParams SpawnLocationParams            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FVector> UKrakenDebugFunctionLibrary::STATIC_GenerateKrakenSpawnLocationDistribution(TArray<struct FKrakenSpawnLocationExclusionZone> SeaRockExclusionZones, TArray<struct FKrakenSpawnLocationExclusionZone> IslandExclusionZones, float DistributionWidth, float DistributionHeight, float MinDistanceBetweenSamplePoints, int Seed, const struct FKrakenSpawnLocationParams& SpawnLocationParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenDebugFunctionLibrary.GenerateKrakenSpawnLocationDistribution");

	UKrakenDebugFunctionLibrary_GenerateKrakenSpawnLocationDistribution_Params params;
	params.SeaRockExclusionZones = SeaRockExclusionZones;
	params.IslandExclusionZones = IslandExclusionZones;
	params.DistributionWidth = DistributionWidth;
	params.DistributionHeight = DistributionHeight;
	params.MinDistanceBetweenSamplePoints = MinDistanceBetweenSamplePoints;
	params.Seed = Seed;
	params.SpawnLocationParams = SpawnLocationParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UKrakenDebugFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UKrakenDebugFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UKrakenHeadBiteDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UKrakenHeadBiteDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UKrakenShipWrappingTentacleAIAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlayWrapping, UWwiseEvent);
	READ_PTR_FULL(StopWrapping, UWwiseEvent);
	READ_PTR_FULL(PlayWrappedLoop, UWwiseEvent);
	READ_PTR_FULL(StopWrappedLoop, UWwiseEvent);
	READ_PTR_FULL(PlayUnwrapping, UWwiseEvent);
	READ_PTR_FULL(StopUnwrapping, UWwiseEvent);
}

void UKrakenShipWrappingTentacleAIAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlayWrapping);
	DELE_PTR_FULL(StopWrapping);
	DELE_PTR_FULL(PlayWrappedLoop);
	DELE_PTR_FULL(StopWrappedLoop);
	DELE_PTR_FULL(PlayUnwrapping);
	DELE_PTR_FULL(StopUnwrapping);
}

void UAICharacterAudioComponent::AfterRead()
{
	UWwiseEmitterComponent::AfterRead();

}

void UAICharacterAudioComponent::BeforeDelete()
{
	UWwiseEmitterComponent::BeforeDelete();

}

void UKrakenShipWrappingTentacleAIAudioComponent::AfterRead()
{
	UAICharacterAudioComponent::AfterRead();

	READ_PTR_FULL(Params, UKrakenShipWrappingTentacleAIAudioComponentParams);
}

void UKrakenShipWrappingTentacleAIAudioComponent::BeforeDelete()
{
	UAICharacterAudioComponent::BeforeDelete();

	DELE_PTR_FULL(Params);
}

void UKrakenTentacleAIAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TentacleEmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(MouthEmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PlayKrakenTentacleEmerge, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenTentacleSubmerge, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenTentacleSuckTell, UWwiseEvent);
	READ_PTR_FULL(StopKrakenTentacleSuckTell, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenTentacleSuck, UWwiseEvent);
	READ_PTR_FULL(StopKrakenTentacleSuck, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenTentacleMouthAmbience, UWwiseEvent);
	READ_PTR_FULL(StopKrakenTentacleMouthAmbience, UWwiseEvent);
	READ_PTR_FULL(PlayPlayerInAirWind, UWwiseEvent);
	READ_PTR_FULL(StopPlayerInAirWind, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenCatchPlayer, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenSpitPlayer, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenTentacleWrapTell, UWwiseEvent);
	READ_PTR_FULL(StopKrakenTentacleWrapTell, UWwiseEvent);
}

void UKrakenTentacleAIAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TentacleEmitterPool);
	DELE_PTR_FULL(MouthEmitterPool);
	DELE_PTR_FULL(PlayKrakenTentacleEmerge);
	DELE_PTR_FULL(PlayKrakenTentacleSubmerge);
	DELE_PTR_FULL(PlayKrakenTentacleSuckTell);
	DELE_PTR_FULL(StopKrakenTentacleSuckTell);
	DELE_PTR_FULL(PlayKrakenTentacleSuck);
	DELE_PTR_FULL(StopKrakenTentacleSuck);
	DELE_PTR_FULL(PlayKrakenTentacleMouthAmbience);
	DELE_PTR_FULL(StopKrakenTentacleMouthAmbience);
	DELE_PTR_FULL(PlayPlayerInAirWind);
	DELE_PTR_FULL(StopPlayerInAirWind);
	DELE_PTR_FULL(PlayKrakenCatchPlayer);
	DELE_PTR_FULL(PlayKrakenSpitPlayer);
	DELE_PTR_FULL(PlayKrakenTentacleWrapTell);
	DELE_PTR_FULL(StopKrakenTentacleWrapTell);
}

void UKrakenTentacleAIAudioComponent::AfterRead()
{
	UAICharacterAudioComponent::AfterRead();

	READ_PTR_FULL(KrakenTentacleAudioParams, UKrakenTentacleAIAudioComponentParams);
}

void UKrakenTentacleAIAudioComponent::BeforeDelete()
{
	UAICharacterAudioComponent::BeforeDelete();

	DELE_PTR_FULL(KrakenTentacleAudioParams);
}

void UKrakenTentacleDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UKrakenTentacleDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UKrakenTentacleItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

}

void UKrakenTentacleItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

}

// Function Athena.LadderInterface.GetLadderHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ULadderInterface::GetLadderHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LadderInterface.GetLadderHeight");

	ULadderInterface_GetLadderHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULadderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULadderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.Ladder.GetTopLadderRungTransform
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform ALadder::GetTopLadderRungTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ladder.GetTopLadderRungTransform");

	ALadder_GetTopLadderRungTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ladder.GetBottomLadderRungTransform
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform ALadder::GetBottomLadderRungTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ladder.GetBottomLadderRungTransform");

	ALadder_GetBottomLadderRungTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ALadder::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(OnTopSplineComponent, USplineComponent);
	READ_PTR_FULL(OffTopSplineComponent, USplineComponent);
	READ_PTR_FULL(LadderPhysicsMaterial, UPhysicalMaterial);
	READ_PTR_FULL(Phrases, UPhrasesRadialDataAsset);
}

void ALadder::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(OnTopSplineComponent);
	DELE_PTR_FULL(OffTopSplineComponent);
	DELE_PTR_FULL(LadderPhysicsMaterial);
	DELE_PTR_FULL(Phrases);
}

// Function Athena.LadderBlueprintFunctionLibrary.GetRelativePositionAtHeight
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ULadderBlueprintFunctionLibrary::STATIC_GetRelativePositionAtHeight(float Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LadderBlueprintFunctionLibrary.GetRelativePositionAtHeight");

	ULadderBlueprintFunctionLibrary_GetRelativePositionAtHeight_Params params;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULadderBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void ULadderBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void ULadderInputComponent::AfterRead()
{
	ULookAtOffsetInputComponent::AfterRead();

}

void ULadderInputComponent::BeforeDelete()
{
	ULookAtOffsetInputComponent::BeforeDelete();

}

void ULandingAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void ULandingAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.LandmarkReactionActor.StopReaction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALandmarkReactionActor::StopReaction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LandmarkReactionActor.StopReaction");

	ALandmarkReactionActor_StopReaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LandmarkReactionActor.StartReaction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ALandmarkReactionActor::StartReaction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LandmarkReactionActor.StartReaction");

	ALandmarkReactionActor_StartReaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ALandmarkReactionActor::AfterRead()
{
	AActor::AfterRead();

}

void ALandmarkReactionActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void ULandmarkReactionEvent::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Target, AActor);
}

void ULandmarkReactionEvent::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Target);
}

void ULandmarkReactionEventCallFunction::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

}

void ULandmarkReactionEventCallFunction::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

}

void ULandmarkReactionEventCallInterfaceStartReaction::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

}

void ULandmarkReactionEventCallInterfaceStartReaction::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

}

void ULandmarkReactionEventCallInterfaceStopReaction::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

}

void ULandmarkReactionEventCallInterfaceStopReaction::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

}

void ULandmarkReactionEventPlayAudio::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

	READ_PTR_FULL(AudioCue, UWwiseEvent);
}

void ULandmarkReactionEventPlayAudio::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

	DELE_PTR_FULL(AudioCue);
}

void ULandmarkReactionEventPlayForceFeedback::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

	READ_PTR_FULL(AudioCue, UWwiseEvent);
}

void ULandmarkReactionEventPlayForceFeedback::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

	DELE_PTR_FULL(AudioCue);
}

void ULandmarkReactionEventPlayReactionFromAnotherLandmark::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

}

void ULandmarkReactionEventPlayReactionFromAnotherLandmark::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

}

void ULandmarkReactionEventStartCameraShake::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

	READ_PTR_FULL(CameraShake, UClass);
	READ_PTR_FULL(AudioCue, UWwiseEvent);
}

void ULandmarkReactionEventStartCameraShake::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

	DELE_PTR_FULL(CameraShake);
	DELE_PTR_FULL(AudioCue);
}

void ULandmarkReactionEventStartParticleSystem::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

	READ_PTR_FULL(AudioCue, UWwiseEvent);
}

void ULandmarkReactionEventStartParticleSystem::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

	DELE_PTR_FULL(AudioCue);
}

void ULandmarkReactionEventStopParticleSystem::AfterRead()
{
	ULandmarkReactionEvent::AfterRead();

	READ_PTR_FULL(AudioCue, UWwiseEvent);
}

void ULandmarkReactionEventStopParticleSystem::BeforeDelete()
{
	ULandmarkReactionEvent::BeforeDelete();

	DELE_PTR_FULL(AudioCue);
}

// Function Athena.Lantern.TriggerGlow
// (Event, Protected, BlueprintEvent)
void ALantern::TriggerGlow()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.TriggerGlow");

	ALantern_TriggerGlow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.Server_RequestChangeLightOnState
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           InLightOn                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ALantern::Server_RequestChangeLightOnState(bool InLightOn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.Server_RequestChangeLightOnState");

	ALantern_Server_RequestChangeLightOnState_Params params;
	params.InLightOn = InLightOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.Server_ExternalLightFactorChange
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                          ExternalLightFactor            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ALantern::Server_ExternalLightFactorChange(float ExternalLightFactor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.Server_ExternalLightFactorChange");

	ALantern_Server_ExternalLightFactorChange_Params params;
	params.ExternalLightFactor = ExternalLightFactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveWieldThirdPerson
// (Event, Protected, BlueprintEvent)
void ALantern::ReceiveWieldThirdPerson()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveWieldThirdPerson");

	ALantern_ReceiveWieldThirdPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveWieldFirstPerson
// (Event, Protected, BlueprintEvent)
void ALantern::ReceiveWieldFirstPerson()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveWieldFirstPerson");

	ALantern_ReceiveWieldFirstPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveTurnOnOffOneshotFx
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           On                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ALantern::ReceiveTurnOnOffOneshotFx(bool On)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveTurnOnOffOneshotFx");

	ALantern_ReceiveTurnOnOffOneshotFx_Params params;
	params.On = On;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveLightNowOn
// (Event, Protected, BlueprintEvent)
void ALantern::ReceiveLightNowOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveLightNowOn");

	ALantern_ReceiveLightNowOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveLightNowOff
// (Event, Protected, BlueprintEvent)
void ALantern::ReceiveLightNowOff()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveLightNowOff");

	ALantern_ReceiveLightNowOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveLightChange
// (Event, Protected, BlueprintEvent)
void ALantern::ReceiveLightChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveLightChange");

	ALantern_ReceiveLightChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveFlameData
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           WantChangeAnimation            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ALantern::ReceiveFlameData(bool WantChangeAnimation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveFlameData");

	ALantern_ReceiveFlameData_Params params;
	params.WantChangeAnimation = WantChangeAnimation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.ReceiveFlameChange
// (Event, Protected, BlueprintEvent)
void ALantern::ReceiveFlameChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.ReceiveFlameChange");

	ALantern_ReceiveFlameChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.PreMeshChangedBPEvent
// (Event, Protected, BlueprintEvent)
void ALantern::PreMeshChangedBPEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.PreMeshChangedBPEvent");

	ALantern_PreMeshChangedBPEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.PostMeshChangedBPEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           SkipFlameColourTransition      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ALantern::PostMeshChangedBPEvent(bool SkipFlameColourTransition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.PostMeshChangedBPEvent");

	ALantern_PostMeshChangedBPEvent_Params params;
	params.SkipFlameColourTransition = SkipFlameColourTransition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.OnRep_Raised
// (Final, Native, Private)
void ALantern::OnRep_Raised()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.OnRep_Raised");

	ALantern_OnRep_Raised_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.OnRep_OnFlameDataChanged
// (Final, Native, Private)
void ALantern::OnRep_OnFlameDataChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.OnRep_OnFlameDataChanged");

	ALantern_OnRep_OnFlameDataChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.OnRep_LightOn
// (Final, Native, Private)
void ALantern::OnRep_LightOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.OnRep_LightOn");

	ALantern_OnRep_LightOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.Multicast_PlayTurnOnOffOneshotFx
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool                           TurnOn                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ALantern::Multicast_PlayTurnOnOffOneshotFx(bool TurnOn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.Multicast_PlayTurnOnOffOneshotFx");

	ALantern_Multicast_PlayTurnOnOffOneshotFx_Params params;
	params.TurnOn = TurnOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Lantern.GetUnaryRaisedBlendFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ALantern::GetUnaryRaisedBlendFactor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.GetUnaryRaisedBlendFactor");

	ALantern_GetUnaryRaisedBlendFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Lantern.GetUnaryActiveBlendFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ALantern::GetUnaryActiveBlendFactor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.GetUnaryActiveBlendFactor");

	ALantern_GetUnaryActiveBlendFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Lantern.GetTextureForFlameOfFateType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* ALantern::GetTextureForFlameOfFateType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.GetTextureForFlameOfFateType");

	ALantern_GetTextureForFlameOfFateType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Lantern.GetFlameOfFateType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EFlameOfFateType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EFlameOfFateType> ALantern::GetFlameOfFateType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.GetFlameOfFateType");

	ALantern_GetFlameOfFateType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Lantern.GetColourForFlameOfFateType
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EFlameColourType> ColourType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor            DefaultColour                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FLinearColor ALantern::GetColourForFlameOfFateType(TEnumAsByte<Athena_EFlameColourType> ColourType, const struct FLinearColor& DefaultColour)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.GetColourForFlameOfFateType");

	ALantern_GetColourForFlameOfFateType_Params params;
	params.ColourType = ColourType;
	params.DefaultColour = DefaultColour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Lantern.FlareLight_Multicast_RPC
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void ALantern::FlareLight_Multicast_RPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Lantern.FlareLight_Multicast_RPC");

	ALantern_FlareLight_Multicast_RPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ALantern::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(TurnOnSfx, UWwiseEvent);
	READ_PTR_FULL(TurnOffSfx, UWwiseEvent);
	READ_PTR_FULL(FlameTransferSfx, UWwiseEvent);
	READ_PTR_FULL(ThirdPersonLanternDistanceInMetresMultiplier, UCurveFloat);
	READ_PTR_FULL(ThirdPersonLanternTimeOfDayMultiplier, UCurveFloat);
	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
}

void ALantern::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(TurnOnSfx);
	DELE_PTR_FULL(TurnOffSfx);
	DELE_PTR_FULL(FlameTransferSfx);
	DELE_PTR_FULL(ThirdPersonLanternDistanceInMetresMultiplier);
	DELE_PTR_FULL(ThirdPersonLanternTimeOfDayMultiplier);
	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
}

void AStaticMeshWieldableReplica::AfterRead()
{
	AWieldableReplica::AfterRead();

}

void AStaticMeshWieldableReplica::BeforeDelete()
{
	AWieldableReplica::BeforeDelete();

}

void ALanternWieldableReplica::AfterRead()
{
	AStaticMeshWieldableReplica::AfterRead();

	READ_PTR_FULL(LightComponent, USpotLightComponent);
	READ_PTR_FULL(AmbientLightSourceComponent, UAmbientLightSourceComponent);
}

void ALanternWieldableReplica::BeforeDelete()
{
	AStaticMeshWieldableReplica::BeforeDelete();

	DELE_PTR_FULL(LightComponent);
	DELE_PTR_FULL(AmbientLightSourceComponent);
}

void ULastHealthChangeReasonStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void ULastHealthChangeReasonStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void ULaunchableAttachPointComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void ULaunchableAttachPointComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void AChainLightningProjectile::AfterRead()
{
	ADamageableCannonProjectile::AfterRead();

	READ_PTR_FULL(ChainLightningSource, UChainLightningSourceComponent);
}

void AChainLightningProjectile::BeforeDelete()
{
	ADamageableCannonProjectile::BeforeDelete();

	DELE_PTR_FULL(ChainLightningSource);
}

void ADamageableCannonProjectileTest::AfterRead()
{
	ADamageableCannonProjectile::AfterRead();

}

void ADamageableCannonProjectileTest::BeforeDelete()
{
	ADamageableCannonProjectile::BeforeDelete();

}

void URewindableLaunchableProjectileInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URewindableLaunchableProjectileInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USirenTridentProjectileParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TrailSfxEventStart, UWwiseEvent);
	READ_PTR_FULL(TrailSfxEventStop, UWwiseEvent);
	READ_PTR_FULL(ImpactId, UClass);
	READ_PTR_FULL(FireForceFeedback, UForceFeedbackEffect);
	READ_PTR_FULL(SizeChangeForceFeedback, UForceFeedbackEffect);
}

void USirenTridentProjectileParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TrailSfxEventStart);
	DELE_PTR_FULL(TrailSfxEventStop);
	DELE_PTR_FULL(ImpactId);
	DELE_PTR_FULL(FireForceFeedback);
	DELE_PTR_FULL(SizeChangeForceFeedback);
}

void UPlayerLoadoutAsset::AfterRead()
{
	ULoadoutAsset::AfterRead();

}

void UPlayerLoadoutAsset::BeforeDelete()
{
	ULoadoutAsset::BeforeDelete();

}

void UPlayerModerationServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerModerationServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerModerationService::AfterRead()
{
	UObject::AfterRead();

}

void UPlayerModerationService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void APlayerManagerService::AfterRead()
{
	AActor::AfterRead();

}

void APlayerManagerService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UPlayerMigratableStatusComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CurrentShip, AActor);
}

void UPlayerMigratableStatusComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentShip);
}

void UPlayerMusicControllerParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlayerOnIslandStart, UWwiseEvent);
	READ_PTR_FULL(PlayerOnIslandStop, UWwiseEvent);
	READ_PTR_FULL(PlayerAtSeaStart, UWwiseEvent);
	READ_PTR_FULL(PlayerAtSeaStop, UWwiseEvent);
	READ_PTR_FULL(PlayerInCaveStart, UWwiseEvent);
	READ_PTR_FULL(PlayerInCaveStop, UWwiseEvent);
	READ_PTR_FULL(PlayerUnderwaterStart, UWwiseEvent);
	READ_PTR_FULL(PlayerUnderwaterStop, UWwiseEvent);
	READ_PTR_FULL(AtSeaAtSpeedPlay, UWwiseEvent);
	READ_PTR_FULL(SailBillowOneshotPlay, UWwiseEvent);
	READ_PTR_FULL(SailBillowOneshotPlayMediumShip, UWwiseEvent);
	READ_PTR_FULL(AtSeaWildHarpaPlay, UWwiseEvent);
	READ_PTR_FULL(AtSeaWildHarpaStop, UWwiseEvent);
	READ_PTR_FULL(SkeletonProximityMusicStart, UWwiseEvent);
	READ_PTR_FULL(SkeletonProximityMusicStop, UWwiseEvent);
	READ_PTR_FULL(SkeletonPursuitMusicStart, UWwiseEvent);
	READ_PTR_FULL(SkeletonPursuitMusicStop, UWwiseEvent);
	READ_PTR_FULL(OceanCrawlersPursuitMusicStart, UWwiseEvent);
	READ_PTR_FULL(OceanCrawlersPursuitMusicStop, UWwiseEvent);
	READ_PTR_FULL(PhantomsPursuitMusicStart, UWwiseEvent);
	READ_PTR_FULL(PhantomsPursuitMusicStop, UWwiseEvent);
	READ_PTR_FULL(AncientSkellyMusicPlay, UWwiseEvent);
	READ_PTR_FULL(AncientSkellyMusicStop, UWwiseEvent);
	READ_PTR_FULL(AncientSkellyDespawned, UWwiseEvent);
	READ_PTR_FULL(AncientSkellyKilled, UWwiseEvent);
	READ_PTR_FULL(BountyQuestAnticipationStart, UWwiseEvent);
	READ_PTR_FULL(BountyQuestAnticipationStop, UWwiseEvent);
	READ_PTR_FULL(BountyQuestActionStart, UWwiseEvent);
	READ_PTR_FULL(BountyQuestActionStop, UWwiseEvent);
	READ_PTR_FULL(BountyFortAnticipationStart, UWwiseEvent);
	READ_PTR_FULL(BountyFortAnticipationStop, UWwiseEvent);
	READ_PTR_FULL(BountyFortAnticipationStopHighString, UWwiseEvent);
	READ_PTR_FULL(BountyFortActionStart, UWwiseEvent);
	READ_PTR_FULL(BountyFortActionStop, UWwiseEvent);
	READ_PTR_FULL(BountyFortSkellyProximityClose, UWwiseEvent);
	READ_PTR_FULL(PlayerNearShipwreckStart, UWwiseEvent);
	READ_PTR_FULL(PlayerNearShipwreckStop, UWwiseEvent);
	READ_PTR_FULL(SharkPoolForCollection, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PlaySharkProximity, UWwiseEvent);
	READ_PTR_FULL(StopSharkProximity, UWwiseEvent);
	READ_PTR_FULL(PlaySharkAttackOneShot, UWwiseEvent);
	READ_PTR_FULL(ServerMigrationStart, UWwiseEvent);
	READ_PTR_FULL(ServerMigrationStop, UWwiseEvent);
	READ_PTR_FULL(PlayEdgeOfTheWorldMusic, UWwiseEvent);
	READ_PTR_FULL(StopEdgeOfTheWorldMusic, UWwiseEvent);
	READ_PTR_FULL(CompanyMoodStart, UWwiseEvent);
	READ_PTR_FULL(CompanyMoodStop, UWwiseEvent);
	READ_PTR_FULL(KrakenHeadHitEvent, UWwiseEvent);
	READ_PTR_FULL(TinySharkHitSting, UWwiseEvent);
	READ_PTR_FULL(TinySharkDeathSting, UWwiseEvent);
	READ_PTR_FULL(TinySharkSummonSting, UWwiseEvent);
	READ_PTR_FULL(TinySharkAttackStingStart, UWwiseEvent);
	READ_PTR_FULL(TinySharkAttackStingStop, UWwiseEvent);
	READ_PTR_FULL(SkellyShipEncounterStarted, UWwiseEvent);
	READ_PTR_FULL(SkellyShipEmergentEncounterStarted, UWwiseEvent);
	READ_PTR_FULL(SkellyShipEncounterFinished, UWwiseEvent);
	READ_PTR_FULL(SkellyShipEmergentEncounterFinished, UWwiseEvent);
	READ_PTR_FULL(SkellyShipEncounterFinishedAfterFinalWave, UWwiseEvent);
	READ_PTR_FULL(SkellyShipFinalWaveSunk, UWwiseEvent);
	READ_PTR_FULL(SkellyShipSpawned, UWwiseEvent);
	READ_PTR_FULL(FinalSkellyShipSpawned, UWwiseEvent);
	READ_PTR_FULL(SkellyShipSunk, UWwiseEvent);
	READ_PTR_FULL(PlayerInPuzzleVaultPlay, UWwiseEvent);
	READ_PTR_FULL(PlayerInPuzzleVaultStop, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultCompleteMusic, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultIncorrectMusic, UWwiseEvent);
	READ_PTR_FULL(FishingMoodMusicPlay, UWwiseEvent);
	READ_PTR_FULL(FishingMoodMusicStop, UWwiseEvent);
	READ_PTR_FULL(FishingMoodMusicCaughtFish, UWwiseEvent);
	READ_PTR_FULL(SpyglassAIShipSting, UWwiseEvent);
	READ_PTR_FULL(SpyglassEmissaryShipSting, UWwiseEvent);
}

void UPlayerMusicControllerParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlayerOnIslandStart);
	DELE_PTR_FULL(PlayerOnIslandStop);
	DELE_PTR_FULL(PlayerAtSeaStart);
	DELE_PTR_FULL(PlayerAtSeaStop);
	DELE_PTR_FULL(PlayerInCaveStart);
	DELE_PTR_FULL(PlayerInCaveStop);
	DELE_PTR_FULL(PlayerUnderwaterStart);
	DELE_PTR_FULL(PlayerUnderwaterStop);
	DELE_PTR_FULL(AtSeaAtSpeedPlay);
	DELE_PTR_FULL(SailBillowOneshotPlay);
	DELE_PTR_FULL(SailBillowOneshotPlayMediumShip);
	DELE_PTR_FULL(AtSeaWildHarpaPlay);
	DELE_PTR_FULL(AtSeaWildHarpaStop);
	DELE_PTR_FULL(SkeletonProximityMusicStart);
	DELE_PTR_FULL(SkeletonProximityMusicStop);
	DELE_PTR_FULL(SkeletonPursuitMusicStart);
	DELE_PTR_FULL(SkeletonPursuitMusicStop);
	DELE_PTR_FULL(OceanCrawlersPursuitMusicStart);
	DELE_PTR_FULL(OceanCrawlersPursuitMusicStop);
	DELE_PTR_FULL(PhantomsPursuitMusicStart);
	DELE_PTR_FULL(PhantomsPursuitMusicStop);
	DELE_PTR_FULL(AncientSkellyMusicPlay);
	DELE_PTR_FULL(AncientSkellyMusicStop);
	DELE_PTR_FULL(AncientSkellyDespawned);
	DELE_PTR_FULL(AncientSkellyKilled);
	DELE_PTR_FULL(BountyQuestAnticipationStart);
	DELE_PTR_FULL(BountyQuestAnticipationStop);
	DELE_PTR_FULL(BountyQuestActionStart);
	DELE_PTR_FULL(BountyQuestActionStop);
	DELE_PTR_FULL(BountyFortAnticipationStart);
	DELE_PTR_FULL(BountyFortAnticipationStop);
	DELE_PTR_FULL(BountyFortAnticipationStopHighString);
	DELE_PTR_FULL(BountyFortActionStart);
	DELE_PTR_FULL(BountyFortActionStop);
	DELE_PTR_FULL(BountyFortSkellyProximityClose);
	DELE_PTR_FULL(PlayerNearShipwreckStart);
	DELE_PTR_FULL(PlayerNearShipwreckStop);
	DELE_PTR_FULL(SharkPoolForCollection);
	DELE_PTR_FULL(PlaySharkProximity);
	DELE_PTR_FULL(StopSharkProximity);
	DELE_PTR_FULL(PlaySharkAttackOneShot);
	DELE_PTR_FULL(ServerMigrationStart);
	DELE_PTR_FULL(ServerMigrationStop);
	DELE_PTR_FULL(PlayEdgeOfTheWorldMusic);
	DELE_PTR_FULL(StopEdgeOfTheWorldMusic);
	DELE_PTR_FULL(CompanyMoodStart);
	DELE_PTR_FULL(CompanyMoodStop);
	DELE_PTR_FULL(KrakenHeadHitEvent);
	DELE_PTR_FULL(TinySharkHitSting);
	DELE_PTR_FULL(TinySharkDeathSting);
	DELE_PTR_FULL(TinySharkSummonSting);
	DELE_PTR_FULL(TinySharkAttackStingStart);
	DELE_PTR_FULL(TinySharkAttackStingStop);
	DELE_PTR_FULL(SkellyShipEncounterStarted);
	DELE_PTR_FULL(SkellyShipEmergentEncounterStarted);
	DELE_PTR_FULL(SkellyShipEncounterFinished);
	DELE_PTR_FULL(SkellyShipEmergentEncounterFinished);
	DELE_PTR_FULL(SkellyShipEncounterFinishedAfterFinalWave);
	DELE_PTR_FULL(SkellyShipFinalWaveSunk);
	DELE_PTR_FULL(SkellyShipSpawned);
	DELE_PTR_FULL(FinalSkellyShipSpawned);
	DELE_PTR_FULL(SkellyShipSunk);
	DELE_PTR_FULL(PlayerInPuzzleVaultPlay);
	DELE_PTR_FULL(PlayerInPuzzleVaultStop);
	DELE_PTR_FULL(PuzzleVaultCompleteMusic);
	DELE_PTR_FULL(PuzzleVaultIncorrectMusic);
	DELE_PTR_FULL(FishingMoodMusicPlay);
	DELE_PTR_FULL(FishingMoodMusicStop);
	DELE_PTR_FULL(FishingMoodMusicCaughtFish);
	DELE_PTR_FULL(SpyglassAIShipSting);
	DELE_PTR_FULL(SpyglassEmissaryShipSting);
}

void UPlayerMuteComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerMuteComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.PlayerNonVerbalComponent.Server_SendText
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FText                   Message                        (ConstParm, Parm, ReferenceParm)
void UPlayerNonVerbalComponent::Server_SendText(const struct FText& Message)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Server_SendText");

	UPlayerNonVerbalComponent_Server_SendText_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Server_SendPhraseWithNonLocalisedArgument
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 PhraseKey                      (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FString                 Argument                       (Parm, ZeroConstructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Server_SendPhraseWithNonLocalisedArgument(const struct FString& PhraseKey, const struct FString& Argument)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Server_SendPhraseWithNonLocalisedArgument");

	UPlayerNonVerbalComponent_Server_SendPhraseWithNonLocalisedArgument_Params params;
	params.PhraseKey = PhraseKey;
	params.Argument = Argument;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Server_SendPhraseWithArgument
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 PhraseKey                      (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FString                 ArgumentKey                    (Parm, ZeroConstructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Server_SendPhraseWithArgument(const struct FString& PhraseKey, const struct FString& ArgumentKey)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Server_SendPhraseWithArgument");

	UPlayerNonVerbalComponent_Server_SendPhraseWithArgument_Params params;
	params.PhraseKey = PhraseKey;
	params.ArgumentKey = ArgumentKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Server_SendPhrase
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 PhraseKey                      (Parm, ZeroConstructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Server_SendPhrase(const struct FString& PhraseKey)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Server_SendPhrase");

	UPlayerNonVerbalComponent_Server_SendPhrase_Params params;
	params.PhraseKey = PhraseKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Client_ReceiveText
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AAthenaPlayerState*      SenderPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FText                   Message                        (ConstParm, Parm, ReferenceParm)
// bool                           WasCensored                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UPlayerNonVerbalComponent::Client_ReceiveText(class AAthenaPlayerState* SenderPlayerState, const struct FText& Message, bool WasCensored)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Client_ReceiveText");

	UPlayerNonVerbalComponent_Client_ReceiveText_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.Message = Message;
	params.WasCensored = WasCensored;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Client_ReceivePhraseWithNonLocalisedArgument
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AAthenaPlayerState*      SenderPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 PhraseKey                      (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FString                 Argument                       (Parm, ZeroConstructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Client_ReceivePhraseWithNonLocalisedArgument(class AAthenaPlayerState* SenderPlayerState, const struct FString& PhraseKey, const struct FString& Argument)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Client_ReceivePhraseWithNonLocalisedArgument");

	UPlayerNonVerbalComponent_Client_ReceivePhraseWithNonLocalisedArgument_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.PhraseKey = PhraseKey;
	params.Argument = Argument;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Client_ReceivePhraseWithArgument
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AAthenaPlayerState*      SenderPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 PhraseKey                      (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FString                 ArgumentKey                    (Parm, ZeroConstructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Client_ReceivePhraseWithArgument(class AAthenaPlayerState* SenderPlayerState, const struct FString& PhraseKey, const struct FString& ArgumentKey)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Client_ReceivePhraseWithArgument");

	UPlayerNonVerbalComponent_Client_ReceivePhraseWithArgument_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.PhraseKey = PhraseKey;
	params.ArgumentKey = ArgumentKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Client_ReceivePhrase
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AAthenaPlayerState*      SenderPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 PhraseKey                      (Parm, ZeroConstructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Client_ReceivePhrase(class AAthenaPlayerState* SenderPlayerState, const struct FString& PhraseKey)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Client_ReceivePhrase");

	UPlayerNonVerbalComponent_Client_ReceivePhrase_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.PhraseKey = PhraseKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerNonVerbalComponent.Client_ReceiveNPCText
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// struct FString                 SenderNameKey                  (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FString                 TextKey                        (Parm, ZeroConstructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ENPCChatType> ChatType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InTimeoutInMS                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPlayerNonVerbalComponent::Client_ReceiveNPCText(const struct FString& SenderNameKey, const struct FString& TextKey, TEnumAsByte<Athena_ENPCChatType> ChatType, int InTimeoutInMS)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerNonVerbalComponent.Client_ReceiveNPCText");

	UPlayerNonVerbalComponent_Client_ReceiveNPCText_Params params;
	params.SenderNameKey = SenderNameKey;
	params.TextKey = TextKey;
	params.ChatType = ChatType;
	params.InTimeoutInMS = InTimeoutInMS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPlayerNonVerbalComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerNonVerbalComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlayerRelevancyService::AfterRead()
{
	UObject::AfterRead();

}

void UPlayerRelevancyService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShroudBreakerTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShroudBreakerTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlayerShroudBreakerTrackerComponent::AfterRead()
{
	UShroudBreakerTrackerComponent::AfterRead();

}

void UPlayerShroudBreakerTrackerComponent::BeforeDelete()
{
	UShroudBreakerTrackerComponent::BeforeDelete();

}

void UPlayerStatsComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerStatsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UMockPlayerTelemetryComponent::AfterRead()
{
	UPlayerTelemetryComponent::AfterRead();

}

void UMockPlayerTelemetryComponent::BeforeDelete()
{
	UPlayerTelemetryComponent::BeforeDelete();

}

void UTestPlayerTelemetryComponentNoEvents::AfterRead()
{
	UPlayerTelemetryComponent::AfterRead();

}

void UTestPlayerTelemetryComponentNoEvents::BeforeDelete()
{
	UPlayerTelemetryComponent::BeforeDelete();

}

void UWalletComponentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWalletComponentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USetMechanismActionCutsceneActorStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USetMechanismActionCutsceneActorStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USetMechanismActionCutsceneNameStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USetMechanismActionCutsceneNameStepDesc);
}

void USetMechanismActionCutsceneNameStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestSmallShip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FShipDesc               ReturnValue                    (Parm, OutParm, ReturnParm)
struct FShipDesc UShipDescGeneratorTestFunctionLibrary::STATIC_GenerateShipDescForTestSmallShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestSmallShip");

	UShipDescGeneratorTestFunctionLibrary_GenerateShipDescForTestSmallShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestMediumShip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FShipDesc               ReturnValue                    (Parm, OutParm, ReturnParm)
struct FShipDesc UShipDescGeneratorTestFunctionLibrary::STATIC_GenerateShipDescForTestMediumShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestMediumShip");

	UShipDescGeneratorTestFunctionLibrary_GenerateShipDescForTestMediumShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestLargeShip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FShipDesc               ReturnValue                    (Parm, OutParm, ReturnParm)
struct FShipDesc UShipDescGeneratorTestFunctionLibrary::STATIC_GenerateShipDescForTestLargeShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestLargeShip");

	UShipDescGeneratorTestFunctionLibrary_GenerateShipDescForTestLargeShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipDescGeneratorTestFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UShipDescGeneratorTestFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AShipDynamicsProviderActor::AfterRead()
{
	AActor::AfterRead();

}

void AShipDynamicsProviderActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void AShipEmbedToken::AfterRead()
{
	AActor::AfterRead();

}

void AShipEmbedToken::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UShipFactoryInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipFactoryInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipFactory.MakeShipFactory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UShipFactory*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UShipFactory* UShipFactory::STATIC_MakeShipFactory()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFactory.MakeShipFactory");

	UShipFactory_MakeShipFactory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipFactory::AfterRead()
{
	UObject::AfterRead();

}

void UShipFactory::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipLiveryCatalogueService::AfterRead()
{
	UObject::AfterRead();

}

void UShipLiveryCatalogueService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShipNamesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShipNamesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.NetProxy.OnRep_OwningActor
// (Final, Native, Private)
void ANetProxy::OnRep_OwningActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NetProxy.OnRep_OwningActor");

	ANetProxy_OnRep_OwningActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NetProxy.OnOwningActorDestroyed
// (Native, Protected)
void ANetProxy::OnOwningActorDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NetProxy.OnOwningActorDestroyed");

	ANetProxy_OnOwningActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ANetProxy::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(OwningActor, AActor);
	READ_PTR_FULL(Mesh, UStaticMeshComponent);
}

void ANetProxy::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(OwningActor);
	DELE_PTR_FULL(Mesh);
}

// Function Athena.ShipNetProxy.OnRep_LanternBits
// (Final, Native, Private)
void AShipNetProxy::OnRep_LanternBits()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.OnRep_LanternBits");

	AShipNetProxy_OnRep_LanternBits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipNetProxy.OnRep_EmmissaryFlagTextureReference
// (Final, Native, Private)
void AShipNetProxy::OnRep_EmmissaryFlagTextureReference()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.OnRep_EmmissaryFlagTextureReference");

	AShipNetProxy_OnRep_EmmissaryFlagTextureReference_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipNetProxy.OnRep_EmissaryFlagActive
// (Final, Native, Private)
void AShipNetProxy::OnRep_EmissaryFlagActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.OnRep_EmissaryFlagActive");

	AShipNetProxy_OnRep_EmissaryFlagActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipNetProxy.OnOwningActorDestroyed
// (Native, Protected)
void AShipNetProxy::OnOwningActorDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.OnOwningActorDestroyed");

	AShipNetProxy_OnOwningActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipNetProxy.OnLanternStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            LanternStateBits               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AShipNetProxy::OnLanternStateChanged(int LanternStateBits)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.OnLanternStateChanged");

	AShipNetProxy_OnLanternStateChanged_Params params;
	params.LanternStateBits = LanternStateBits;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipNetProxy.OnEmissaryActiveStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           InNewEmissaryActiveState       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AShipNetProxy::OnEmissaryActiveStateChanged(bool InNewEmissaryActiveState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.OnEmissaryActiveStateChanged");

	AShipNetProxy_OnEmissaryActiveStateChanged_Params params;
	params.InNewEmissaryActiveState = InNewEmissaryActiveState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipNetProxy.GetLanternBits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AShipNetProxy::GetLanternBits()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipNetProxy.GetLanternBits");

	AShipNetProxy_GetLanternBits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AShipNetProxy::AfterRead()
{
	ANetProxy::AfterRead();

	READ_PTR_FULL(EmmissaryFlagMaterial, UMaterialInstanceDynamic);
}

void AShipNetProxy::BeforeDelete()
{
	ANetProxy::BeforeDelete();

	DELE_PTR_FULL(EmmissaryFlagMaterial);
}

// Function Athena.ShipPartCustomization.MakeAsyncShipPartCustomization
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UShipPartCustomization*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UShipPartCustomization* UShipPartCustomization::STATIC_MakeAsyncShipPartCustomization()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipPartCustomization.MakeAsyncShipPartCustomization");

	UShipPartCustomization_MakeAsyncShipPartCustomization_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipPartCustomization.Customize
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AShip*                   InShip                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPartDesc               PartDesc                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FScriptDelegate         OnSuccessCallback              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// struct FScriptDelegate         OnFailureCallback              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
void UShipPartCustomization::Customize(class AShip* InShip, const struct FPartDesc& PartDesc, const struct FScriptDelegate& OnSuccessCallback, const struct FScriptDelegate& OnFailureCallback)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipPartCustomization.Customize");

	UShipPartCustomization_Customize_Params params;
	params.InShip = InShip;
	params.PartDesc = PartDesc;
	params.OnSuccessCallback = OnSuccessCallback;
	params.OnFailureCallback = OnFailureCallback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShipPartCustomization::AfterRead()
{
	UObject::AfterRead();

}

void UShipPartCustomization::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMeshMemoryConstraintSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UMeshMemoryConstraintSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UPoseableMeshMemoryConstraintComponent::AfterRead()
{
	UPoseableMeshComponent::AfterRead();

	READ_PTR_FULL(Handler, UMeshMemoryConstraintHandler);
	READ_PTR_FULL(MeshFallbackCategory, UClass);
	READ_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback, UClass);
}

void UPoseableMeshMemoryConstraintComponent::BeforeDelete()
{
	UPoseableMeshComponent::BeforeDelete();

	DELE_PTR_FULL(Handler);
	DELE_PTR_FULL(MeshFallbackCategory);
	DELE_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback);
}

void USkeletalMeshMemoryConstraintComponent::AfterRead()
{
	USkeletalMeshComponent::AfterRead();

	READ_PTR_FULL(Handler, UMeshMemoryConstraintHandler);
	READ_PTR_FULL(MeshFallbackCategory, UClass);
	READ_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback, UClass);
}

void USkeletalMeshMemoryConstraintComponent::BeforeDelete()
{
	USkeletalMeshComponent::BeforeDelete();

	DELE_PTR_FULL(Handler);
	DELE_PTR_FULL(MeshFallbackCategory);
	DELE_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback);
}

void UStaticMeshMemoryConstraintComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(Handler, UMeshMemoryConstraintHandler);
	READ_PTR_FULL(MeshFallbackCategory, UClass);
	READ_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback, UClass);
}

void UStaticMeshMemoryConstraintComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(Handler);
	DELE_PTR_FULL(MeshFallbackCategory);
	DELE_PTR_FULL(BudgetToCountMemoryAgainstIfNoFallback);
}

void UAnimNotify_DitherActor::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_DitherActor::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

// Function Athena.AppearComponentInterface.Disappear
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
void UAppearComponentInterface::Disappear()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AppearComponentInterface.Disappear");

	UAppearComponentInterface_Disappear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AppearComponentInterface.Appear
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
void UAppearComponentInterface::Appear()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AppearComponentInterface.Appear");

	UAppearComponentInterface_Appear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAppearComponentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAppearComponentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AppearComponent.OnRep_IsVisible
// (Final, Native, Private)
void UAppearComponent::OnRep_IsVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AppearComponent.OnRep_IsVisible");

	UAppearComponent_OnRep_IsVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAppearComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UAppearComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UDitherableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDitherableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DitherComponent.SetCurrentTransparency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDitherComponent::SetCurrentTransparency(float Val)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DitherComponent.SetCurrentTransparency");

	UDitherComponent_SetCurrentTransparency_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DitherComponent.FadeOut
// (Native, Public, BlueprintCallable)
void UDitherComponent::FadeOut()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DitherComponent.FadeOut");

	UDitherComponent_FadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DitherComponent.FadeIn
// (Native, Public, BlueprintCallable)
void UDitherComponent::FadeIn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DitherComponent.FadeIn");

	UDitherComponent_FadeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDitherComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UDitherComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.DitherFunctionLibrary.DisableDitheringOnMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstance*       Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDitherFunctionLibrary::STATIC_DisableDitheringOnMaterial(class UMaterialInstance* Material)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DitherFunctionLibrary.DisableDitheringOnMaterial");

	UDitherFunctionLibrary_DisableDitheringOnMaterial_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDitherFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UDitherFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.MaterialAnimatorComponent.PlayAnimation
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   AnimationName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMaterialAnimatorComponent::PlayAnimation(const struct FName& AnimationName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MaterialAnimatorComponent.PlayAnimation");

	UMaterialAnimatorComponent_PlayAnimation_Params params;
	params.AnimationName = AnimationName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMaterialAnimatorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMaterialAnimatorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UParticleSystemPickerAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UParticleSystemPickerAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVfxCustomisationType::AfterRead()
{
	UObject::AfterRead();

}

void UVfxCustomisationType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UVfxCustomisationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVfxCustomisationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.VfxFunctionLibrary.WithWorldOwner
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UVfxFunctionLibrary::STATIC_WithWorldOwner(struct FVfxSpawner* Spawner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.WithWorldOwner");

	UVfxFunctionLibrary_WithWorldOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.WithRelativeScale
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                 Scale3D                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UVfxFunctionLibrary::STATIC_WithRelativeScale(struct FVfxSpawner* Spawner, const struct FVector& Scale3D)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.WithRelativeScale");

	UVfxFunctionLibrary_WithRelativeScale_Params params;
	params.Scale3D = Scale3D;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.WithOwner
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                 InOwner                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InOwnerOnlySee                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           InOwnerNoSee                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVfxFunctionLibrary::STATIC_WithOwner(struct FVfxSpawner* Spawner, class UObject* InOwner, bool InOwnerOnlySee, bool InOwnerNoSee)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.WithOwner");

	UVfxFunctionLibrary_WithOwner_Params params;
	params.InOwner = InOwner;
	params.InOwnerOnlySee = InOwnerOnlySee;
	params.InOwnerNoSee = InOwnerNoSee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.WithEffect
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                 InEmitterTemplate              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InAutoDestroy                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVfxFunctionLibrary::STATIC_WithEffect(struct FVfxSpawner* Spawner, class UObject* InEmitterTemplate, bool InAutoDestroy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.WithEffect");

	UVfxFunctionLibrary_WithEffect_Params params;
	params.InEmitterTemplate = InEmitterTemplate;
	params.InAutoDestroy = InAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.WithCustomLocalSpaceDelegateForCharacter
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxCustomLocalSpaceMode> CustomLocalSpaceMode           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVfxFunctionLibrary::STATIC_WithCustomLocalSpaceDelegateForCharacter(struct FVfxSpawner* Spawner, class AActor* Character, TEnumAsByte<Athena_EVfxCustomLocalSpaceMode> CustomLocalSpaceMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.WithCustomLocalSpaceDelegateForCharacter");

	UVfxFunctionLibrary_WithCustomLocalSpaceDelegateForCharacter_Params params;
	params.Character = Character;
	params.CustomLocalSpaceMode = CustomLocalSpaceMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.Spawn
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_Spawn(struct FVfxSpawner* Spawner, class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.Spawn");

	UVfxFunctionLibrary_Spawn_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.SetUnderwaterUsage
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVfxFunctionLibrary::STATIC_SetUnderwaterUsage(struct FVfxSpawner* Spawner, TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.SetUnderwaterUsage");

	UVfxFunctionLibrary_SetUnderwaterUsage_Params params;
	params.UnderwaterUsage = UnderwaterUsage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.SetUnderwater
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                           IsUnderwater                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVfxFunctionLibrary::STATIC_SetUnderwater(struct FVfxSpawner* Spawner, bool IsUnderwater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.SetUnderwater");

	UVfxFunctionLibrary_SetUnderwater_Params params;
	params.IsUnderwater = IsUnderwater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.SetCustomLocalSpaceDelegateForCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxCustomLocalSpaceMode> CustomLocalSpaceMode           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVfxFunctionLibrary::STATIC_SetCustomLocalSpaceDelegateForCharacter(class UParticleSystemComponent* PSC, class AActor* Character, TEnumAsByte<Athena_EVfxCustomLocalSpaceMode> CustomLocalSpaceMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.SetCustomLocalSpaceDelegateForCharacter");

	UVfxFunctionLibrary_SetCustomLocalSpaceDelegateForCharacter_Params params;
	params.PSC = PSC;
	params.Character = Character;
	params.CustomLocalSpaceMode = CustomLocalSpaceMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VfxFunctionLibrary.InVfxRegion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TEnumAsByte<Athena_EVfxRegion> InRegion                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVfxFunctionLibrary::STATIC_InVfxRegion(struct FVfxSpawner* Spawner, TEnumAsByte<Athena_EVfxRegion> InRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.InVfxRegion");

	UVfxFunctionLibrary_InVfxRegion_Params params;
	params.InRegion = InRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.AttachedToSocket
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class USceneComponent*         InAttachToComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InAttachPointName              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EAttachLocation> InLocationType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVfxFunctionLibrary::STATIC_AttachedToSocket(struct FVfxSpawner* Spawner, class USceneComponent* InAttachToComponent, const struct FName& InAttachPointName, TEnumAsByte<Engine_EAttachLocation> InLocationType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AttachedToSocket");

	UVfxFunctionLibrary_AttachedToSocket_Params params;
	params.InAttachToComponent = InAttachToComponent;
	params.InAttachPointName = InAttachPointName;
	params.InLocationType = InLocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.AttachedToComponent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class USceneComponent*         InAttachToComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EAttachLocation> InLocationType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVfxFunctionLibrary::STATIC_AttachedToComponent(struct FVfxSpawner* Spawner, class USceneComponent* InAttachToComponent, TEnumAsByte<Engine_EAttachLocation> InLocationType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AttachedToComponent");

	UVfxFunctionLibrary_AttachedToComponent_Params params;
	params.InAttachToComponent = InAttachToComponent;
	params.InLocationType = InLocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.AtSocketLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class USceneComponent*         InSocketOwnerComponent         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InSocketName                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 InLocation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                InRotation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVfxFunctionLibrary::STATIC_AtSocketLocation(struct FVfxSpawner* Spawner, class USceneComponent* InSocketOwnerComponent, const struct FName& InSocketName, const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AtSocketLocation");

	UVfxFunctionLibrary_AtSocketLocation_Params params;
	params.InSocketOwnerComponent = InSocketOwnerComponent;
	params.InSocketName = InSocketName;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.AtLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVfxSpawner             Spawner                        (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                 InLocation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                InRotation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVfxFunctionLibrary::STATIC_AtLocation(struct FVfxSpawner* Spawner, const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AtLocation");

	UVfxFunctionLibrary_AtLocation_Params params;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

}


// Function Athena.VfxFunctionLibrary.AthenaSpawnShipRelativeEmitterAtSocketLocationUnderwaterUsage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         SocketOwnerComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnShipRelativeEmitterAtSocketLocationUnderwaterUsage(class UObject* EmitterTemplate, class AActor* PlayerCharacter, class USceneComponent* SocketOwnerComponent, const struct FName& SocketName, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnShipRelativeEmitterAtSocketLocationUnderwaterUsage");

	UVfxFunctionLibrary_AthenaSpawnShipRelativeEmitterAtSocketLocationUnderwaterUsage_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.PlayerCharacter = PlayerCharacter;
	params.SocketOwnerComponent = SocketOwnerComponent;
	params.SocketName = SocketName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.UnderwaterUsage = UnderwaterUsage;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnShipRelativeEmitterAtSocketLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         SocketOwnerComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnShipRelativeEmitterAtSocketLocation(class UObject* EmitterTemplate, class AActor* PlayerCharacter, class USceneComponent* SocketOwnerComponent, const struct FName& SocketName, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnShipRelativeEmitterAtSocketLocation");

	UVfxFunctionLibrary_AthenaSpawnShipRelativeEmitterAtSocketLocation_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.PlayerCharacter = PlayerCharacter;
	params.SocketOwnerComponent = SocketOwnerComponent;
	params.SocketName = SocketName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedWithOwnerUnderwaterUsage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Engine_EAttachLocation> LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAttachedWithOwnerUnderwaterUsage(class UObject* EmitterTemplate, class USceneComponent* AttachToComponent, class UObject* Owner, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<Engine_EAttachLocation> LocationType, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedWithOwnerUnderwaterUsage");

	UVfxFunctionLibrary_AthenaSpawnEmitterAttachedWithOwnerUnderwaterUsage_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.Owner = Owner;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.UnderwaterUsage = UnderwaterUsage;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedWithOwner
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Engine_EAttachLocation> LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAttachedWithOwner(class UObject* EmitterTemplate, class USceneComponent* AttachToComponent, class UObject* Owner, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<Engine_EAttachLocation> LocationType, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedWithOwner");

	UVfxFunctionLibrary_AthenaSpawnEmitterAttachedWithOwner_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.Owner = Owner;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedAndWorldOwnedUnderwaterUsage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Engine_EAttachLocation> LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAttachedAndWorldOwnedUnderwaterUsage(class UObject* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<Engine_EAttachLocation> LocationType, bool bAutoDestroy, TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedAndWorldOwnedUnderwaterUsage");

	UVfxFunctionLibrary_AthenaSpawnEmitterAttachedAndWorldOwnedUnderwaterUsage_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;
	params.UnderwaterUsage = UnderwaterUsage;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedAndWorldOwned
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Engine_EAttachLocation> LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAttachedAndWorldOwned(class UObject* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<Engine_EAttachLocation> LocationType, bool bAutoDestroy, bool bIsUnderwater, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedAndWorldOwned");

	UVfxFunctionLibrary_AthenaSpawnEmitterAttachedAndWorldOwned_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;
	params.bIsUnderwater = bIsUnderwater;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationWithOwnerUnderwaterUsage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                SpawnRotation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAtLocationWithOwnerUnderwaterUsage(class UObject* WorldContextObject, class UObject* EmitterTemplate, class AActor* Owner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationWithOwnerUnderwaterUsage");

	UVfxFunctionLibrary_AthenaSpawnEmitterAtLocationWithOwnerUnderwaterUsage_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Owner = Owner;
	params.SpawnLocation = SpawnLocation;
	params.SpawnRotation = SpawnRotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.UnderwaterUsage = UnderwaterUsage;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationWithOwner
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                SpawnRotation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerOnlySee                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bOwnerNoSee                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAtLocationWithOwner(class UObject* WorldContextObject, class UObject* EmitterTemplate, class AActor* Owner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationWithOwner");

	UVfxFunctionLibrary_AthenaSpawnEmitterAtLocationWithOwner_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Owner = Owner;
	params.SpawnLocation = SpawnLocation;
	params.SpawnRotation = SpawnRotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationUnderwaterUsage
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAtLocationUnderwaterUsage(class UObject* WorldContextObject, class UObject* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, TEnumAsByte<Athena_EVfxUnderwaterUsage> UnderwaterUsage, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationUnderwaterUsage");

	UVfxFunctionLibrary_AthenaSpawnEmitterAtLocationUnderwaterUsage_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.UnderwaterUsage = UnderwaterUsage;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           bIsUnderwater                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EVfxRegion> VFXRegion                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* UVfxFunctionLibrary::STATIC_AthenaSpawnEmitterAtLocation(class UObject* WorldContextObject, class UObject* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bIsUnderwater, TEnumAsByte<Athena_EVfxRegion> VFXRegion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocation");

	UVfxFunctionLibrary_AthenaSpawnEmitterAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bIsUnderwater = bIsUnderwater;
	params.VFXRegion = VFXRegion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVfxFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UVfxFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UPhrasesRadialDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPhrasesRadialDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.RadialPhrasesAdjusterInterface.GetRadialPhrases
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPhrasesRadialDataAsset* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UPhrasesRadialDataAsset* URadialPhrasesAdjusterInterface::GetRadialPhrases()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialPhrasesAdjusterInterface.GetRadialPhrases");

	URadialPhrasesAdjusterInterface_GetRadialPhrases_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URadialPhrasesAdjusterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URadialPhrasesAdjusterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPhrasesRadialInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPhrasesRadialInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UBackRadialAction::AfterRead()
{
	URadialAction::AfterRead();

}

void UBackRadialAction::BeforeDelete()
{
	URadialAction::BeforeDelete();

}

void UNextPageRadialAction::AfterRead()
{
	URadialAction::AfterRead();

}

void UNextPageRadialAction::BeforeDelete()
{
	URadialAction::BeforeDelete();

}

void UPageNamedNextPageRadialAction::AfterRead()
{
	UNextPageRadialAction::AfterRead();

}

void UPageNamedNextPageRadialAction::BeforeDelete()
{
	UNextPageRadialAction::BeforeDelete();

}

void UAlwaysRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UAlwaysRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

void UFeatureEnabledRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UFeatureEnabledRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

void UMultipleContextsRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UMultipleContextsRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

// Function Athena.LayerInContainerComponent.OnRep_CanTake
// (Final, Native, Private)
void ULayerInContainerComponent::OnRep_CanTake()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LayerInContainerComponent.OnRep_CanTake");

	ULayerInContainerComponent_OnRep_CanTake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LayerInContainerComponent.CanTakeLayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULayerInContainerComponent::CanTakeLayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LayerInContainerComponent.CanTakeLayer");

	ULayerInContainerComponent_CanTakeLayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULayerInContainerComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(LayerBlockingTakingThisLayer, ULayerInContainerComponent);
}

void ULayerInContainerComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(LayerBlockingTakingThisLayer);
}

void UGoldInContainerComponent::AfterRead()
{
	ULayerInContainerComponent::AfterRead();

}

void UGoldInContainerComponent::BeforeDelete()
{
	ULayerInContainerComponent::BeforeDelete();

}

void UQuestBookPagesInContainerComponent::AfterRead()
{
	ULayerInContainerComponent::AfterRead();

}

void UQuestBookPagesInContainerComponent::BeforeDelete()
{
	ULayerInContainerComponent::BeforeDelete();

}

void UQuestBookPagesInContainerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PagesMesh, UStaticMesh);
}

void UQuestBookPagesInContainerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PagesMesh);
}

void UCircleMapCollectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCircleMapCollectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTunnelsOfTheDamnedServiceParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTunnelsOfTheDamnedServiceParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.BattleElevatorEventRoom.OnBattleElevatorEventRoomPhaseStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   Phase                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ABattleElevatorEventRoom::OnBattleElevatorEventRoomPhaseStarted(const struct FName& Phase)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BattleElevatorEventRoom.OnBattleElevatorEventRoomPhaseStarted");

	ABattleElevatorEventRoom_OnBattleElevatorEventRoomPhaseStarted_Params params;
	params.Phase = Phase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BattleElevatorEventRoom.GetCoordinatedKrakenActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* ABattleElevatorEventRoom::GetCoordinatedKrakenActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BattleElevatorEventRoom.GetCoordinatedKrakenActor");

	ABattleElevatorEventRoom_GetCoordinatedKrakenActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ABattleElevatorEventRoom::AfterRead()
{
	ANetworkClusterEventRoom::AfterRead();

	READ_PTR_FULL(TargetBattleElevatorActor, ABattleElevator);
	READ_PTR_FULL(PhasesAsset, UBattleElevatorEventRoomPhasesDataAsset);
}

void ABattleElevatorEventRoom::BeforeDelete()
{
	ANetworkClusterEventRoom::BeforeDelete();

	DELE_PTR_FULL(TargetBattleElevatorActor);
	DELE_PTR_FULL(PhasesAsset);
}

void UEventRoomParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEventRoomParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UKrakenHeadState::AfterRead()
{
	UObject::AfterRead();

}

void UKrakenHeadState::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UKrakenHeadState_None::AfterRead()
{
	UKrakenHeadState::AfterRead();

}

void UKrakenHeadState_None::BeforeDelete()
{
	UKrakenHeadState::BeforeDelete();

}

void UKrakenHeadState_Idle::AfterRead()
{
	UKrakenHeadState::AfterRead();

}

void UKrakenHeadState_Idle::BeforeDelete()
{
	UKrakenHeadState::BeforeDelete();

}

void UKrakenHeadState_Appear::AfterRead()
{
	UKrakenHeadState::AfterRead();

}

void UKrakenHeadState_Appear::BeforeDelete()
{
	UKrakenHeadState::BeforeDelete();

}

void UKrakenHeadState_Disappear::AfterRead()
{
	UKrakenHeadState::AfterRead();

}

void UKrakenHeadState_Disappear::BeforeDelete()
{
	UKrakenHeadState::BeforeDelete();

}

void UKrakenHeadState_Bite::AfterRead()
{
	UKrakenHeadState::AfterRead();

}

void UKrakenHeadState_Bite::BeforeDelete()
{
	UKrakenHeadState::BeforeDelete();

}

void UKrakenHeadState_Roar::AfterRead()
{
	UKrakenHeadState::AfterRead();

}

void UKrakenHeadState_Roar::BeforeDelete()
{
	UKrakenHeadState::BeforeDelete();

}

void UKrakenAnimatedTentacleState::AfterRead()
{
	UObject::AfterRead();

}

void UKrakenAnimatedTentacleState::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UKrakenAnimatedTentacleState_None::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_None::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Idle::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Idle::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_IdleActive::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_IdleActive::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_SuckingTell::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_SuckingTell::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Sucking::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Sucking::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Holding::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Holding::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_HoldingWaterDunk::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_HoldingWaterDunk::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_HoldingPowerSlam::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_HoldingPowerSlam::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_HoldingExpose::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_HoldingExpose::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_HoldingDisorientate::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_HoldingDisorientate::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Ingesting::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Ingesting::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Ingesting_SwallowTarget::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Ingesting_SwallowTarget::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Ingesting_RegurgitateTarget::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Ingesting_RegurgitateTarget::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Throwing::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Throwing::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Despawning_Defeated::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Despawning_Defeated::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Despawning::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Despawning::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UKrakenAnimatedTentacleState_Despawning_Panic::AfterRead()
{
	UKrakenAnimatedTentacleState::AfterRead();

}

void UKrakenAnimatedTentacleState_Despawning_Panic::BeforeDelete()
{
	UKrakenAnimatedTentacleState::BeforeDelete();

}

void UAimSensitivityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAimSensitivityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerInputInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerInputInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWieldedItemSpeedModifierInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldedItemSpeedModifierInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCargoRunParticipantComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ConditionalStatForBootyHandIn, UClass);
}

void UCargoRunParticipantComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ConditionalStatForBootyHandIn);
}

void UCargoRunQuestData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DefaultCargoRunCrateData, UCargoRunCrateData);
	READ_PTR_FULL(DefaultCargoRunMapData, UCargoRunMapData);
}

void UCargoRunQuestData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DefaultCargoRunCrateData);
	DELE_PTR_FULL(DefaultCargoRunMapData);
}

void UCargoRunQuestRandomRequiredItemsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCargoRunQuestRandomRequiredItemsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UClothingCategory::AfterRead()
{
	UCategoryBase::AfterRead();

	READ_PTR_FULL(PiratePreviewAnim, UAnimationAsset);
}

void UClothingCategory::BeforeDelete()
{
	UCategoryBase::BeforeDelete();

	DELE_PTR_FULL(PiratePreviewAnim);
}

void UInvalidClothingCategory::AfterRead()
{
	UClothingCategory::AfterRead();

}

void UInvalidClothingCategory::BeforeDelete()
{
	UClothingCategory::BeforeDelete();

}

void UClothingDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UClothingDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

// Function Athena.CarouselPirateDescConversion.ToPirateDescriptor
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCarouselPirateDesc     InParams                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPirateDescription      ReturnValue                    (Parm, OutParm, ReturnParm)
struct FPirateDescription UCarouselPirateDescConversion::STATIC_ToPirateDescriptor(const struct FCarouselPirateDesc& InParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CarouselPirateDescConversion.ToPirateDescriptor");

	UCarouselPirateDescConversion_ToPirateDescriptor_Params params;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CarouselPirateDescConversion.ToOutfit
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCarouselPirateDesc     InParams                       (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UCarouselPirateDescConversion::STATIC_ToOutfit(const struct FCarouselPirateDesc& InParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CarouselPirateDescConversion.ToOutfit");

	UCarouselPirateDescConversion_ToOutfit_Params params;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCarouselPirateDescConversion::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCarouselPirateDescConversion::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UChooseIslandStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UChooseIslandStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.CinematicCameraController.SetFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewFOV                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACinematicCameraController::SetFOV(float NewFOV)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CinematicCameraController.SetFOV");

	ACinematicCameraController_SetFOV_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CinematicCameraController.GetFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ACinematicCameraController::GetFOV()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CinematicCameraController.GetFOV");

	ACinematicCameraController_GetFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ACinematicCameraController::AfterRead()
{
	ADebugCameraController::AfterRead();

	READ_PTR_FULL(AthenaPlayerController, AAthenaPlayerController);
}

void ACinematicCameraController::BeforeDelete()
{
	ADebugCameraController::BeforeDelete();

	DELE_PTR_FULL(AthenaPlayerController);
}

void UClawPummelAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UClawPummelAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UClawPummelStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UClawPummelStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UClearProgressSpawnStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UClearProgressSpawnStepDesc);
}

void UClearProgressSpawnStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UClearProgressSpawnStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UClearProgressSpawnStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UClearSpawnProgressStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

}

void UClearSpawnProgressStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

}

void UClearSpawnProgressStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UClearSpawnProgressStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UClearTaleProgressStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

}

void UClearTaleProgressStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

}

void UClearTaleProgressStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UClearTaleProgressStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UClimbLadderAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UClimbLadderAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UCostumeCategory::AfterRead()
{
	UClothingCategory::AfterRead();

}

void UCostumeCategory::BeforeDelete()
{
	UClothingCategory::BeforeDelete();

}

void UEmoteCategory::AfterRead()
{
	UClothingCategory::AfterRead();

}

void UEmoteCategory::BeforeDelete()
{
	UClothingCategory::BeforeDelete();

}

void UTitleCategory::AfterRead()
{
	UClothingCategory::AfterRead();

}

void UTitleCategory::BeforeDelete()
{
	UClothingCategory::BeforeDelete();

}

void UCostumeDesc::AfterRead()
{
	UClothingDesc::AfterRead();

}

void UCostumeDesc::BeforeDelete()
{
	UClothingDesc::BeforeDelete();

}

void UCostumeWithEmoteDesc::AfterRead()
{
	UCostumeDesc::AfterRead();

}

void UCostumeWithEmoteDesc::BeforeDelete()
{
	UCostumeDesc::BeforeDelete();

}

void UEmoteDesc::AfterRead()
{
	UClothingDesc::AfterRead();

}

void UEmoteDesc::BeforeDelete()
{
	UClothingDesc::BeforeDelete();

}

void UEmptyEmoteDesc::AfterRead()
{
	UEmoteDesc::AfterRead();

}

void UEmptyEmoteDesc::BeforeDelete()
{
	UEmoteDesc::BeforeDelete();

}

void UEmoteFlourishDesc::AfterRead()
{
	UEmoteDesc::AfterRead();

}

void UEmoteFlourishDesc::BeforeDelete()
{
	UEmoteDesc::BeforeDelete();

}

void UTitleDesc::AfterRead()
{
	UClothingDesc::AfterRead();

}

void UTitleDesc::BeforeDelete()
{
	UClothingDesc::BeforeDelete();

}

// Function Athena.ClothingLoadoutControlInterface.UnequipClothing
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UClothingLoadoutControlInterface::UnequipClothing(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingLoadoutControlInterface.UnequipClothing");

	UClothingLoadoutControlInterface_UnequipClothing_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ClothingLoadoutControlInterface.SetClothingLoadout
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FClothingLoadout        InLoadout                      (ConstParm, Parm, OutParm, ReferenceParm)
void UClothingLoadoutControlInterface::SetClothingLoadout(const struct FClothingLoadout& InLoadout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingLoadoutControlInterface.SetClothingLoadout");

	UClothingLoadoutControlInterface_SetClothingLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ClothingLoadoutControlInterface.EquipClothing
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InDesc                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UClothingLoadoutControlInterface::EquipClothing(class UClass* InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingLoadoutControlInterface.EquipClothing");

	UClothingLoadoutControlInterface_EquipClothing_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UClothingLoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UClothingLoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ClothingLoadoutViewInterface.GetClothingLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FClothingLoadout        ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FClothingLoadout UClothingLoadoutViewInterface::GetClothingLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingLoadoutViewInterface.GetClothingLoadout");

	UClothingLoadoutViewInterface_GetClothingLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UClothingLoadoutViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UClothingLoadoutViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.EmoteLoadoutControlInterface.ChangeEmotes
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          InNewEmotes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper)
void UEmoteLoadoutControlInterface::ChangeEmotes(TArray<class UClass*> InNewEmotes)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteLoadoutControlInterface.ChangeEmotes");

	UEmoteLoadoutControlInterface_ChangeEmotes_Params params;
	params.InNewEmotes = InNewEmotes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEmoteLoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEmoteLoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEmoteInfo::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEmoteInfo::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.EmoteLoadoutViewInterface.GetEmoteLoadoutData
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FEmoteData>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FEmoteData> UEmoteLoadoutViewInterface::GetEmoteLoadoutData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteLoadoutViewInterface.GetEmoteLoadoutData");

	UEmoteLoadoutViewInterface_GetEmoteLoadoutData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteLoadoutViewInterface.GetEmoteLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UEmoteLoadoutViewInterface::GetEmoteLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteLoadoutViewInterface.GetEmoteLoadout");

	UEmoteLoadoutViewInterface_GetEmoteLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteLoadoutViewInterface.GetCostumeEmoteLoadoutData
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FEmoteData>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FEmoteData> UEmoteLoadoutViewInterface::GetCostumeEmoteLoadoutData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteLoadoutViewInterface.GetCostumeEmoteLoadoutData");

	UEmoteLoadoutViewInterface_GetCostumeEmoteLoadoutData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteLoadoutViewInterface.GetCostumeEmoteLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UEmoteLoadoutViewInterface::GetCostumeEmoteLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteLoadoutViewInterface.GetCostumeEmoteLoadout");

	UEmoteLoadoutViewInterface_GetCostumeEmoteLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UEmoteLoadoutViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEmoteLoadoutViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TitleLoadoutControlInterface.Client_UpdateTitleUI
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  InLoadout                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UTitleLoadoutControlInterface::Client_UpdateTitleUI(class UClass* InLoadout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TitleLoadoutControlInterface.Client_UpdateTitleUI");

	UTitleLoadoutControlInterface_Client_UpdateTitleUI_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTitleLoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTitleLoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TitleLoadoutViewInterface.GetTitleLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UTitleLoadoutViewInterface::GetTitleLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TitleLoadoutViewInterface.GetTitleLoadout");

	UTitleLoadoutViewInterface_GetTitleLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTitleLoadoutViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTitleLoadoutViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ClothingLoadoutComponent.OnRep_Loadout
// (Final, Native, Private)
void UClothingLoadoutComponent::OnRep_Loadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ClothingLoadoutComponent.OnRep_Loadout");

	UClothingLoadoutComponent_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UClothingLoadoutComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OwningPlayer, AActor);
	READ_PTR_FULL(EmoteSettings, UEmoteSettings);
}

void UClothingLoadoutComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OwningPlayer);
	DELE_PTR_FULL(EmoteSettings);
}

void UClothingLoadoutContainsItemRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

	READ_PTR_FULL(TargetItem, UClass);
}

void UClothingLoadoutContainsItemRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

	DELE_PTR_FULL(TargetItem);
}

void UCloudDomeService::AfterRead()
{
	UObject::AfterRead();

}

void UCloudDomeService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.CloudSystem.SetGlobalAtmosphericPressure
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewAtmosphericPressure         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACloudSystem::SetGlobalAtmosphericPressure(float NewAtmosphericPressure)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CloudSystem.SetGlobalAtmosphericPressure");

	ACloudSystem_SetGlobalAtmosphericPressure_Params params;
	params.NewAtmosphericPressure = NewAtmosphericPressure;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACloudSystem::AfterRead()
{
	AActor::AfterRead();

}

void ACloudSystem::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.CoastInterface.UnregisterCoast
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FBlueprintableIntegerHandle CoastHandle                    (Parm)
void UCoastInterface::UnregisterCoast(const struct FBlueprintableIntegerHandle& CoastHandle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoastInterface.UnregisterCoast");

	UCoastInterface_UnregisterCoast_Params params;
	params.CoastHandle = CoastHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoastInterface.RegisterCoast
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USplineComponent*        CoastalSpline                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*        InnerSpline                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 SplineOrigin                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FBlueprintableIntegerHandle ReturnValue                    (Parm, OutParm, ReturnParm)
struct FBlueprintableIntegerHandle UCoastInterface::RegisterCoast(class USplineComponent* CoastalSpline, class USplineComponent* InnerSpline, const struct FVector& SplineOrigin)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoastInterface.RegisterCoast");

	UCoastInterface_RegisterCoast_Params params;
	params.CoastalSpline = CoastalSpline;
	params.InnerSpline = InnerSpline;
	params.SplineOrigin = SplineOrigin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoastInterface.GetClosestPointOnClosestCoast
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 LookupPosition                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 OutClosestPoint                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           OutIsOnIsland                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCoastInterface::GetClosestPointOnClosestCoast(const struct FVector& LookupPosition, struct FVector* OutClosestPoint, bool* OutIsOnIsland)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoastInterface.GetClosestPointOnClosestCoast");

	UCoastInterface_GetClosestPointOnClosestCoast_Params params;
	params.LookupPosition = LookupPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutClosestPoint != nullptr)
		*OutClosestPoint = params.OutClosestPoint;
	if (OutIsOnIsland != nullptr)
		*OutIsOnIsland = params.OutIsOnIsland;


	return params.ReturnValue;
}


// Function Athena.CoastInterface.GetClosestIslandNameOfCoastlineForPointAndTolerance
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          MaxDistFromCoast               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          OutClosestDistToShore          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName UCoastInterface::GetClosestIslandNameOfCoastlineForPointAndTolerance(const struct FVector& Pos, float MaxDistFromCoast, float* OutClosestDistToShore)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoastInterface.GetClosestIslandNameOfCoastlineForPointAndTolerance");

	UCoastInterface_GetClosestIslandNameOfCoastlineForPointAndTolerance_Params params;
	params.Pos = Pos;
	params.MaxDistFromCoast = MaxDistFromCoast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutClosestDistToShore != nullptr)
		*OutClosestDistToShore = params.OutClosestDistToShore;


	return params.ReturnValue;
}


// Function Athena.CoastInterface.GetClosestCoastObjects
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 LookupPosition                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TArray<struct FCoastObject>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
TArray<struct FCoastObject> UCoastInterface::GetClosestCoastObjects(const struct FVector& LookupPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoastInterface.GetClosestCoastObjects");

	UCoastInterface_GetClosestCoastObjects_Params params;
	params.LookupPosition = LookupPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCoastInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCoastInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCoastService::AfterRead()
{
	UObject::AfterRead();

}

void UCoastService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.CoherentBaseHUD.IsViewportValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ACoherentBaseHUD::IsViewportValid()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentBaseHUD.IsViewportValid");

	ACoherentBaseHUD_IsViewportValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ACoherentBaseHUD::AfterRead()
{
	AHUD::AfterRead();

}

void ACoherentBaseHUD::BeforeDelete()
{
	AHUD::BeforeDelete();

}

void UHttpClientComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UHttpClientComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ItemLoadoutControlInterface.SetItemLoadout
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemLoadout            InItemLoadout                  (ConstParm, Parm, OutParm, ReferenceParm)
void UItemLoadoutControlInterface::SetItemLoadout(const struct FItemLoadout& InItemLoadout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutControlInterface.SetItemLoadout");

	UItemLoadoutControlInterface_SetItemLoadout_Params params;
	params.InItemLoadout = InItemLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemLoadoutControlInterface.RemoveItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               InItem                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EItemLoadoutDestroyBehaviour> InDestroyBehaviour             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemLoadoutControlInterface::RemoveItem(class AItemInfo* InItem, TEnumAsByte<Athena_EItemLoadoutDestroyBehaviour> InDestroyBehaviour)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutControlInterface.RemoveItem");

	UItemLoadoutControlInterface_RemoveItem_Params params;
	params.InItem = InItem;
	params.InDestroyBehaviour = InDestroyBehaviour;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutControlInterface.PushItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               InItem                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemLoadoutControlInterface::PushItem(class AItemInfo* InItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutControlInterface.PushItem");

	UItemLoadoutControlInterface_PushItem_Params params;
	params.InItem = InItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutControlInterface.EquipWeapon_Client
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InItemDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            InIndex                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemLoadoutControlInterface::EquipWeapon_Client(class UClass* InItemDesc, int InIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutControlInterface.EquipWeapon_Client");

	UItemLoadoutControlInterface_EquipWeapon_Client_Params params;
	params.InItemDesc = InItemDesc;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UItemLoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemLoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.QuickInventoryComponent.Server_InventoryEquipItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InItemDesc                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UQuickInventoryComponent::Server_InventoryEquipItem(class UClass* InItemDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.QuickInventoryComponent.Server_InventoryEquipItem");

	UQuickInventoryComponent_Server_InventoryEquipItem_Params params;
	params.InItemDesc = InItemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UQuickInventoryComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(CannonballItemCategory, UClass);
	READ_PTR_FULL(CursedCannonballItemCategory, UClass);
	READ_PTR_FULL(FoodItemCategory, UClass);
	READ_PTR_FULL(RepairablesItemCategory, UClass);
	READ_PTR_FULL(BaitItemCategory, UClass);
	READ_PTR_FULL(FireBombCategory, UClass);
	READ_PTR_FULL(ChainShotCategory, UClass);
}

void UQuickInventoryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(CannonballItemCategory);
	DELE_PTR_FULL(CursedCannonballItemCategory);
	DELE_PTR_FULL(FoodItemCategory);
	DELE_PTR_FULL(RepairablesItemCategory);
	DELE_PTR_FULL(BaitItemCategory);
	DELE_PTR_FULL(FireBombCategory);
	DELE_PTR_FULL(ChainShotCategory);
}

// Function Athena.AthenaHUD.ShowTooltipsDetailedAtlas
// (Final, Exec, Native, Public)
void AAthenaHUD::ShowTooltipsDetailedAtlas()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaHUD.ShowTooltipsDetailedAtlas");

	AAthenaHUD_ShowTooltipsDetailedAtlas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaHUD.ShowTooltipsAtlas
// (Final, Exec, Native, Public)
void AAthenaHUD::ShowTooltipsAtlas()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaHUD.ShowTooltipsAtlas");

	AAthenaHUD_ShowTooltipsAtlas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaHUD.ShowNameplatesAtlas
// (Final, Exec, Native, Public)
void AAthenaHUD::ShowNameplatesAtlas()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaHUD.ShowNameplatesAtlas");

	AAthenaHUD_ShowNameplatesAtlas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaHUD.HasInputFocus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaHUD::HasInputFocus()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaHUD.HasInputFocus");

	AAthenaHUD_HasInputFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaHUD.AreInGameMenusActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaHUD::AreInGameMenusActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaHUD.AreInGameMenusActive");

	AAthenaHUD_AreInGameMenusActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaHUD.AreAllViewScriptingReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AAthenaHUD::AreAllViewScriptingReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaHUD.AreAllViewScriptingReady");

	AAthenaHUD_AreAllViewScriptingReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AAthenaHUD::AfterRead()
{
	ACoherentBaseHUD::AfterRead();

	READ_PTR_FULL(CoherentTooltipsComponent, UCoherentUIGTTooltipComponent);
	READ_PTR_FULL(CoherentTooltipsDetailedComponent, UCoherentUIGTTooltipDetailedComponent);
	READ_PTR_FULL(CoherentNameplatesComponent, UCoherentUIGTNameplateComponent);
	READ_PTR_FULL(CoherentHUDComponent, UCoherentUIGTHUDComponent);
	READ_PTR_FULL(CoherentInGameMenusComponent, UCoherentUIGTInGameMenusComponent);
	READ_PTR_FULL(IslandEventTooltipComponent, UIslandEventTooltipComponent);
	READ_PTR_FULL(CoherentToWwiseEventComponent, UCoherentToWwiseEventComponent);
	READ_PTR_FULL(InputForwardComponent, UUIInputForwardComponent);
	READ_PTR_FULL(TelemetryComponent, UUITelemetryComponent);
	READ_PTR_FULL(CanvasWorldMapComponent, UCanvasWorldMapComponent);
	READ_PTR_FULL(WatermarkComponent, UWatermarkComponent);
	READ_PTR_FULL(ShopViewModelComponent, UShopViewModelComponent);
	READ_PTR_FULL(PremiumShopViewModelComponent, UInGamePremiumShopViewModelComponent);
	READ_PTR_FULL(MigrationUIComponent, UMigrationUIComponent);
	READ_PTR_FULL(EquipmentChestViewModelComponent, UEquipmentChestViewModelComponent);
	READ_PTR_FULL(ClothingChestViewModelComponent, UClothingChestViewModelComponent);
	READ_PTR_FULL(ArmoryChestViewModelComponent, UArmoryChestViewModelComponent);
	READ_PTR_FULL(ShipCustomizationChestViewModelComponent, UShipCustomizationChestViewModelComponent);
	READ_PTR_FULL(VoyageInventoryViewModelComponent, UVoyageInventoryViewModelComponent);
	READ_PTR_FULL(PiratePreviewComponent, UPiratePreviewComponent);
	READ_PTR_FULL(PetChestViewModelComponent, UPetChestViewModelComponent);
	READ_PTR_FULL(ItemPreviewComponent, UItemPreviewComponent);
	READ_PTR_FULL(EntitlementInformationComponent, UEntitlementInformationComponent);
	READ_PTR_FULL(HttpClientComponent, UHttpClientComponent);
	READ_PTR_FULL(PerfCounterFont, UFont);
	READ_PTR_FULL(PirateProfileRTTComponent, UPiratePreviewComponentPirateProfileRTT);
	READ_PTR_FULL(AthenaDebugMenuComponent, UAthenaDebugMenuComponent);
}

void AAthenaHUD::BeforeDelete()
{
	ACoherentBaseHUD::BeforeDelete();

	DELE_PTR_FULL(CoherentTooltipsComponent);
	DELE_PTR_FULL(CoherentTooltipsDetailedComponent);
	DELE_PTR_FULL(CoherentNameplatesComponent);
	DELE_PTR_FULL(CoherentHUDComponent);
	DELE_PTR_FULL(CoherentInGameMenusComponent);
	DELE_PTR_FULL(IslandEventTooltipComponent);
	DELE_PTR_FULL(CoherentToWwiseEventComponent);
	DELE_PTR_FULL(InputForwardComponent);
	DELE_PTR_FULL(TelemetryComponent);
	DELE_PTR_FULL(CanvasWorldMapComponent);
	DELE_PTR_FULL(WatermarkComponent);
	DELE_PTR_FULL(ShopViewModelComponent);
	DELE_PTR_FULL(PremiumShopViewModelComponent);
	DELE_PTR_FULL(MigrationUIComponent);
	DELE_PTR_FULL(EquipmentChestViewModelComponent);
	DELE_PTR_FULL(ClothingChestViewModelComponent);
	DELE_PTR_FULL(ArmoryChestViewModelComponent);
	DELE_PTR_FULL(ShipCustomizationChestViewModelComponent);
	DELE_PTR_FULL(VoyageInventoryViewModelComponent);
	DELE_PTR_FULL(PiratePreviewComponent);
	DELE_PTR_FULL(PetChestViewModelComponent);
	DELE_PTR_FULL(ItemPreviewComponent);
	DELE_PTR_FULL(EntitlementInformationComponent);
	DELE_PTR_FULL(HttpClientComponent);
	DELE_PTR_FULL(PerfCounterFont);
	DELE_PTR_FULL(PirateProfileRTTComponent);
	DELE_PTR_FULL(AthenaDebugMenuComponent);
}

// Function Athena.CoherentUIGTInstancedComponent.ScriptingReadyEventReceived
// (Final, Native, Private)
void UCoherentUIGTInstancedComponent::ScriptingReadyEventReceived()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.ScriptingReadyEventReceived");

	UCoherentUIGTInstancedComponent_ScriptingReadyEventReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentUIGTInstancedComponent.ReadyForBindingsEventReceived
// (Final, Native, Private)
void UCoherentUIGTInstancedComponent::ReadyForBindingsEventReceived()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.ReadyForBindingsEventReceived");

	UCoherentUIGTInstancedComponent_ReadyForBindingsEventReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentUIGTInstancedComponent.OnScriptingReady
// (Native, Protected)
void UCoherentUIGTInstancedComponent::OnScriptingReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.OnScriptingReady");

	UCoherentUIGTInstancedComponent_OnScriptingReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentUIGTInstancedComponent.OnReadyForBindings
// (Native, Protected)
void UCoherentUIGTInstancedComponent::OnReadyForBindings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.OnReadyForBindings");

	UCoherentUIGTInstancedComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentUIGTInstancedComponent.IsScriptingReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCoherentUIGTInstancedComponent::IsScriptingReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.IsScriptingReady");

	UCoherentUIGTInstancedComponent_IsScriptingReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoherentUIGTInstancedComponent.GetHUDMaterial
// (Final, Native, Protected)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UMaterialInstanceDynamic* UCoherentUIGTInstancedComponent::GetHUDMaterial()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.GetHUDMaterial");

	UCoherentUIGTInstancedComponent_GetHUDMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoherentUIGTInstancedComponent.FinishLoadEventReceived
// (Final, Native, Private)
// Parameters:
// struct FString                 path                           (Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                           isMainFrame                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCoherentUIGTInstancedComponent::FinishLoadEventReceived(const struct FString& path, bool isMainFrame)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.FinishLoadEventReceived");

	UCoherentUIGTInstancedComponent_FinishLoadEventReceived_Params params;
	params.path = path;
	params.isMainFrame = isMainFrame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentUIGTInstancedComponent.BindingsReleasedEventReceived
// (Final, Native, Private)
void UCoherentUIGTInstancedComponent::BindingsReleasedEventReceived()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInstancedComponent.BindingsReleasedEventReceived");

	UCoherentUIGTInstancedComponent_BindingsReleasedEventReceived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCoherentUIGTInstancedComponent::AfterRead()
{
	UCoherentUIGTBaseComponent::AfterRead();

	READ_PTR_FULL(HUDMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(PlayerController, APlayerController);
}

void UCoherentUIGTInstancedComponent::BeforeDelete()
{
	UCoherentUIGTBaseComponent::BeforeDelete();

	DELE_PTR_FULL(HUDMaterialInstance);
	DELE_PTR_FULL(PlayerController);
}

// Function Athena.CoherentBaseHUDComponent.OnScriptingReady
// (Native, Protected)
void UCoherentBaseHUDComponent::OnScriptingReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentBaseHUDComponent.OnScriptingReady");

	UCoherentBaseHUDComponent_OnScriptingReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentBaseHUDComponent.OnReadyForBindings
// (Native, Protected)
void UCoherentBaseHUDComponent::OnReadyForBindings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentBaseHUDComponent.OnReadyForBindings");

	UCoherentBaseHUDComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentBaseHUDComponent.HasInitializationErrorOccurred
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCoherentBaseHUDComponent::HasInitializationErrorOccurred()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentBaseHUDComponent.HasInitializationErrorOccurred");

	UCoherentBaseHUDComponent_HasInitializationErrorOccurred_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCoherentBaseHUDComponent::AfterRead()
{
	UCoherentUIGTInstancedComponent::AfterRead();

	READ_PTR_FULL(CurrentPawn, APawn);
	READ_PTR_FULL(AudioComponent, UCoherentToWwiseEventComponent);
}

void UCoherentBaseHUDComponent::BeforeDelete()
{
	UCoherentUIGTInstancedComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentPawn);
	DELE_PTR_FULL(AudioComponent);
}

// Function Athena.FrontendHudComponent.SetFrontendMessagingDispatcher
// (Final, Native, Public, BlueprintCallable)
void UFrontendHudComponent::SetFrontendMessagingDispatcher()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendHudComponent.SetFrontendMessagingDispatcher");

	UFrontendHudComponent_SetFrontendMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FrontendHudComponent.OnReadyForBindings
// (Native, Protected)
void UFrontendHudComponent::OnReadyForBindings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendHudComponent.OnReadyForBindings");

	UFrontendHudComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFrontendHudComponent::AfterRead()
{
	UCoherentBaseHUDComponent::AfterRead();

}

void UFrontendHudComponent::BeforeDelete()
{
	UCoherentBaseHUDComponent::BeforeDelete();

}

// Function Athena.UIInputForwardComponent.TargetViewScriptingReady
// (Final, Native, Protected)
void UUIInputForwardComponent::TargetViewScriptingReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UIInputForwardComponent.TargetViewScriptingReady");

	UUIInputForwardComponent_TargetViewScriptingReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UIInputForwardComponent.SetUIFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EUIInputFocusType> FocusType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCoherentUIGTBaseComponent* TargetViewComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUIInputForwardComponent::SetUIFocus(TEnumAsByte<Athena_EUIInputFocusType> FocusType, class UCoherentUIGTBaseComponent* TargetViewComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UIInputForwardComponent.SetUIFocus");

	UUIInputForwardComponent_SetUIFocus_Params params;
	params.FocusType = FocusType;
	params.TargetViewComponent = TargetViewComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UIInputForwardComponent.SetTargetView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCoherentUIGTBaseComponent* ViewComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUIInputForwardComponent::SetTargetView(class UCoherentUIGTBaseComponent* ViewComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UIInputForwardComponent.SetTargetView");

	UUIInputForwardComponent_SetTargetView_Params params;
	params.ViewComponent = ViewComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UIInputForwardComponent.IsUIFocused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UUIInputForwardComponent::IsUIFocused()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UIInputForwardComponent.IsUIFocused");

	UUIInputForwardComponent_IsUIFocused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UIInputForwardComponent.GetCurrentInputFocusType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EUIInputFocusType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EUIInputFocusType> UUIInputForwardComponent::GetCurrentInputFocusType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UIInputForwardComponent.GetCurrentInputFocusType");

	UUIInputForwardComponent_GetCurrentInputFocusType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UIInputForwardComponent.CentreMouseCursor
// (Final, Native, Public, BlueprintCallable)
void UUIInputForwardComponent::CentreMouseCursor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UIInputForwardComponent.CentreMouseCursor");

	UUIInputForwardComponent_CentreMouseCursor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUIInputForwardComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetView, UCoherentUIGTBaseComponent);
}

void UUIInputForwardComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetView);
}

// Function Athena.FrontendHUD.SetBootFlowMessagingDispatcher
// (Final, Native, Public, BlueprintCallable)
void AFrontendHUD::SetBootFlowMessagingDispatcher()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendHUD.SetBootFlowMessagingDispatcher");

	AFrontendHUD_SetBootFlowMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FrontendHUD.GetBootFlowMessagingDispatcher
// (Final, Native, Public, BlueprintCallable)
void AFrontendHUD::GetBootFlowMessagingDispatcher()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendHUD.GetBootFlowMessagingDispatcher");

	AFrontendHUD_GetBootFlowMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FrontendHUD.DeletePirate
// (Final, Exec, Native, Public)
void AFrontendHUD::DeletePirate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendHUD.DeletePirate");

	AFrontendHUD_DeletePirate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FrontendHUD.AttachToBootFlowMessagingDispatcher
// (Final, Native, Public, BlueprintCallable)
void AFrontendHUD::AttachToBootFlowMessagingDispatcher()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FrontendHUD.AttachToBootFlowMessagingDispatcher");

	AFrontendHUD_AttachToBootFlowMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFrontendHUD::AfterRead()
{
	ACoherentBaseHUD::AfterRead();

	READ_PTR_FULL(FrontendHudComponent, UFrontendHudComponent);
	READ_PTR_FULL(FrontendTelemetryComponent, UUITelemetryComponent);
	READ_PTR_FULL(InputForwardComponent, UUIInputForwardComponent);
	READ_PTR_FULL(FrontendCameraComponent, UFrontendCameraComponent);
	READ_PTR_FULL(PirateSelectorComponent, UPirateSelector);
	READ_PTR_FULL(PremiumShopViewModelComponent, UFrontendPremiumShopViewModelComponent);
	READ_PTR_FULL(PiratePreviewComponent, UPiratePreviewComponentFrontend);
	READ_PTR_FULL(ItemPreviewComponent, UItemPreviewComponent);
	READ_PTR_FULL(HttpClientComponent, UHttpClientComponent);
	READ_PTR_FULL(CoherentToWwiseEventComponent, UCoherentToWwiseEventComponent);
	READ_PTR_FULL(PressAnyButtonSFX, UWwiseEvent);
}

void AFrontendHUD::BeforeDelete()
{
	ACoherentBaseHUD::BeforeDelete();

	DELE_PTR_FULL(FrontendHudComponent);
	DELE_PTR_FULL(FrontendTelemetryComponent);
	DELE_PTR_FULL(InputForwardComponent);
	DELE_PTR_FULL(FrontendCameraComponent);
	DELE_PTR_FULL(PirateSelectorComponent);
	DELE_PTR_FULL(PremiumShopViewModelComponent);
	DELE_PTR_FULL(PiratePreviewComponent);
	DELE_PTR_FULL(ItemPreviewComponent);
	DELE_PTR_FULL(HttpClientComponent);
	DELE_PTR_FULL(CoherentToWwiseEventComponent);
	DELE_PTR_FULL(PressAnyButtonSFX);
}

void UCoherentContentEngagementMessage::AfterRead()
{
	UFeatureToggledStringAssetReference::AfterRead();

}

void UCoherentContentEngagementMessage::BeforeDelete()
{
	UFeatureToggledStringAssetReference::BeforeDelete();

}

void UCoherentToWwiseEventDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCoherentToWwiseEventDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.CoherentToWwiseEventComponent.IsPlayingAny
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCoherentToWwiseEventComponent::IsPlayingAny()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentToWwiseEventComponent.IsPlayingAny");

	UCoherentToWwiseEventComponent_IsPlayingAny_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoherentToWwiseEventComponent.GetEmitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWwiseEmitter           ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWwiseEmitter UCoherentToWwiseEventComponent::GetEmitter()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentToWwiseEventComponent.GetEmitter");

	UCoherentToWwiseEventComponent_GetEmitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCoherentToWwiseEventComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(UIAudioCuesAsset, UCoherentToWwiseEventDataAsset);
}

void UCoherentToWwiseEventComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(UIAudioCuesAsset);
}

void UCoherentUIGTAssetContainer::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCoherentUIGTAssetContainer::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.CoherentUIGTHUDComponent.OnScriptingReady
// (Native, Protected)
void UCoherentUIGTHUDComponent::OnScriptingReady()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTHUDComponent.OnScriptingReady");

	UCoherentUIGTHUDComponent_OnScriptingReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoherentUIGTHUDComponent.OnReadyForBindings
// (Native, Protected)
void UCoherentUIGTHUDComponent::OnReadyForBindings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTHUDComponent.OnReadyForBindings");

	UCoherentUIGTHUDComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCoherentUIGTHUDComponent::AfterRead()
{
	UCoherentBaseHUDComponent::AfterRead();

	READ_PTR_FULL(ShipNames, UShipNamesDataAsset);
}

void UCoherentUIGTHUDComponent::BeforeDelete()
{
	UCoherentBaseHUDComponent::BeforeDelete();

	DELE_PTR_FULL(ShipNames);
}

// Function Athena.CoherentUIGTInGameMenusComponent.OnReadyForBindings
// (Native, Protected)
void UCoherentUIGTInGameMenusComponent::OnReadyForBindings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTInGameMenusComponent.OnReadyForBindings");

	UCoherentUIGTInGameMenusComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCoherentUIGTInGameMenusComponent::AfterRead()
{
	UCoherentBaseHUDComponent::AfterRead();

}

void UCoherentUIGTInGameMenusComponent::BeforeDelete()
{
	UCoherentBaseHUDComponent::BeforeDelete();

}

// Function Athena.CoherentUIGTAtlasComponent.OnReadyForBindings
// (Native, Protected)
void UCoherentUIGTAtlasComponent::OnReadyForBindings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTAtlasComponent.OnReadyForBindings");

	UCoherentUIGTAtlasComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCoherentUIGTAtlasComponent::AfterRead()
{
	UCoherentUIGTInstancedComponent::AfterRead();

	READ_PTR_FULL(CurrentCanvas, UCanvas);
}

void UCoherentUIGTAtlasComponent::BeforeDelete()
{
	UCoherentUIGTInstancedComponent::BeforeDelete();

	DELE_PTR_FULL(CurrentCanvas);
}

void UCoherentUIGTNameplateComponent::AfterRead()
{
	UCoherentUIGTAtlasComponent::AfterRead();

	READ_PTR_FULL(DistanceScalingCurve, UCurveFloat);
}

void UCoherentUIGTNameplateComponent::BeforeDelete()
{
	UCoherentUIGTAtlasComponent::BeforeDelete();

	DELE_PTR_FULL(DistanceScalingCurve);
}

// Function Athena.CoherentUIGTTooltipComponent.UnregisterEvents
// (Final, Native, Private)
void UCoherentUIGTTooltipComponent::UnregisterEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoherentUIGTTooltipComponent.UnregisterEvents");

	UCoherentUIGTTooltipComponent_UnregisterEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCoherentUIGTTooltipComponent::AfterRead()
{
	UCoherentUIGTAtlasComponent::AfterRead();

}

void UCoherentUIGTTooltipComponent::BeforeDelete()
{
	UCoherentUIGTAtlasComponent::BeforeDelete();

}

void UCoherentUIGTTooltipDetailedComponent::AfterRead()
{
	UCoherentUIGTAtlasComponent::AfterRead();

}

void UCoherentUIGTTooltipDetailedComponent::BeforeDelete()
{
	UCoherentUIGTAtlasComponent::BeforeDelete();

}

void UCoherentUIGTPersistentDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCoherentUIGTPersistentDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCoherentUIGTRootDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCoherentUIGTRootDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCollectableQuestObjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCollectableQuestObjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCollectableQuestObjectStepInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCollectableQuestObjectStepInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UInteractableQuestObjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInteractableQuestObjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CollectableQuestObject.SignalQuestStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  CollectingPlayerCharacter      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACollectableQuestObject::SignalQuestStep(class AAthenaPlayerCharacter* CollectingPlayerCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CollectableQuestObject.SignalQuestStep");

	ACollectableQuestObject_SignalQuestStep_Params params;
	params.CollectingPlayerCharacter = CollectingPlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACollectableQuestObject::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(ThirdPersonMesh, USceneComponent);
}

void ACollectableQuestObject::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(ThirdPersonMesh);
}

void ACollectableQuestObjectProvider::AfterRead()
{
	AActor::AfterRead();

}

void ACollectableQuestObjectProvider::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UCollectorsChestPickUpFromSlotRewardComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void UCollectorsChestPickUpFromSlotRewardComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UCommodityHasDemandNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UCommodityHasDemandNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UCompanyData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void UCompanyData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UCompanyDataList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCompanyDataList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.CompanyEventsFunctions.BreakEventCompanyRankProgressUpdateNotification
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FEventCompanyRankProgressUpdateNotification Event                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   OutCompany                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OutRank                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OutPreviousRank                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCompanyEventsFunctions::STATIC_BreakEventCompanyRankProgressUpdateNotification(const struct FEventCompanyRankProgressUpdateNotification& Event, struct FName* OutCompany, int* OutRank, int* OutPreviousRank)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CompanyEventsFunctions.BreakEventCompanyRankProgressUpdateNotification");

	UCompanyEventsFunctions_BreakEventCompanyRankProgressUpdateNotification_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCompany != nullptr)
		*OutCompany = params.OutCompany;
	if (OutRank != nullptr)
		*OutRank = params.OutRank;
	if (OutPreviousRank != nullptr)
		*OutPreviousRank = params.OutPreviousRank;

}


void UCompanyEventsFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCompanyEventsFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCompanyLevelData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void UCompanyLevelData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UCompanyLevelDataList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCompanyLevelDataList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.NPCCustomItemPurchaseInterface.ResetItemsToPurchaseList
// (Native, Public, BlueprintCallable)
void UNPCCustomItemPurchaseInterface::ResetItemsToPurchaseList()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCCustomItemPurchaseInterface.ResetItemsToPurchaseList");

	UNPCCustomItemPurchaseInterface_ResetItemsToPurchaseList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NPCCustomItemPurchaseInterface.AddItemToPurchaseList
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  Item                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNPCCustomItemPurchaseInterface::AddItemToPurchaseList(class UClass* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCCustomItemPurchaseInterface.AddItemToPurchaseList");

	UNPCCustomItemPurchaseInterface_AddItemToPurchaseList_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNPCCustomItemPurchaseInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCCustomItemPurchaseInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCompanyNPCComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Company, UClass);
	READ_PTR_FULL(ConditionalStatForBootyHandIn, UClass);
}

void UCompanyNPCComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Company);
	DELE_PTR_FULL(ConditionalStatForBootyHandIn);
}

void UWorldRegionComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(RegionShanty, UClass);
}

void UWorldRegionComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(RegionShanty);
}

void UCompanyRegionComponent::AfterRead()
{
	UWorldRegionComponent::AfterRead();

}

void UCompanyRegionComponent::BeforeDelete()
{
	UWorldRegionComponent::BeforeDelete();

}

void UCompanyServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCompanyServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCompanyService::AfterRead()
{
	UObject::AfterRead();

}

void UCompanyService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UCategoryDefaults::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCategoryDefaults::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UGameplayLODSettings::AfterRead()
{
	UObject::AfterRead();

}

void UGameplayLODSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.GameStateFunctionLibrary.GetAthenaGameStateFromWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld*                  InWorld                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaGameState*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaGameState* UGameStateFunctionLibrary::STATIC_GetAthenaGameStateFromWorld(class UWorld* InWorld)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameStateFunctionLibrary.GetAthenaGameStateFromWorld");

	UGameStateFunctionLibrary_GetAthenaGameStateFromWorld_Params params;
	params.InWorld = InWorld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.GameStateFunctionLibrary.GetAthenaGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 InWorldContextObject           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaGameState*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AAthenaGameState* UGameStateFunctionLibrary::STATIC_GetAthenaGameState(class UObject* InWorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameStateFunctionLibrary.GetAthenaGameState");

	UGameStateFunctionLibrary_GetAthenaGameState_Params params;
	params.InWorldContextObject = InWorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UGameStateFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UGameStateFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.GarbageGenerator.SetSizeOfPersistentSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InSizeOfPersistentSet          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGarbageGenerator::SetSizeOfPersistentSet(int InSizeOfPersistentSet)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GarbageGenerator.SetSizeOfPersistentSet");

	AGarbageGenerator_SetSizeOfPersistentSet_Params params;
	params.InSizeOfPersistentSet = InSizeOfPersistentSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GarbageGenerator.SetGarbageGenerationRatePerTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InAmountToGenerate             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGarbageGenerator::SetGarbageGenerationRatePerTick(int InAmountToGenerate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GarbageGenerator.SetGarbageGenerationRatePerTick");

	AGarbageGenerator_SetGarbageGenerationRatePerTick_Params params;
	params.InAmountToGenerate = InAmountToGenerate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AGarbageGenerator::AfterRead()
{
	AActor::AfterRead();

}

void AGarbageGenerator::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UGarbageObject::AfterRead()
{
	UObject::AfterRead();

}

void UGarbageObject::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UItemHealthComponent::AfterRead()
{
	UHealthComponent::AfterRead();

}

void UItemHealthComponent::BeforeDelete()
{
	UHealthComponent::BeforeDelete();

}

void UGatedHealthComponent::AfterRead()
{
	UItemHealthComponent::AfterRead();

}

void UGatedHealthComponent::BeforeDelete()
{
	UItemHealthComponent::BeforeDelete();

}

void UGenerateDigLocationStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UGenerateDigLocationStepDesc);
}

void UGenerateDigLocationStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UGenerateDigLocationStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UGenerateDigLocationStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UGenericMarkerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGenericMarkerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USummonAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

	READ_PTR_FULL(SummonSpawner, UAIIncrementalWaveSpawner);
}

void USummonAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

	DELE_PTR_FULL(SummonSpawner);
}

void UAshenLordSummonAIAbilityParams::AfterRead()
{
	USummonAIAbilityParams::AfterRead();

	READ_PTR_FULL(FireShroudVFXSpawner, UClass);
}

void UAshenLordSummonAIAbilityParams::BeforeDelete()
{
	USummonAIAbilityParams::BeforeDelete();

	DELE_PTR_FULL(FireShroudVFXSpawner);
}

void USunkenCurseArtefactAudioComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(AudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PlaySongEvent, UWwiseEvent);
	READ_PTR_FULL(StopSongEvent, UWwiseEvent);
	READ_PTR_FULL(PlayDamagedEvent, UWwiseEvent);
	READ_PTR_FULL(PlayDefeatedEvent, UWwiseEvent);
}

void USunkenCurseArtefactAudioComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(AudioPool);
	DELE_PTR_FULL(PlaySongEvent);
	DELE_PTR_FULL(StopSongEvent);
	DELE_PTR_FULL(PlayDamagedEvent);
	DELE_PTR_FULL(PlayDefeatedEvent);
}

void USunkenCurseArtefactDynamicMaterialComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(TargetMesh, UPrimitiveComponent);
	READ_PTR_FULL(Statue, AStatueThreatBase);
}

void USunkenCurseArtefactDynamicMaterialComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(TargetMesh);
	DELE_PTR_FULL(Statue);
}

void USunkenCurseArtefactItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

}

void USunkenCurseArtefactItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

}

void USunkenCurseArtefactVfxComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DamagedParticleSystem, UObject);
	READ_PTR_FULL(DefeatedParticleSystem, UObject);
	READ_PTR_FULL(UnderwaterDefeatedParticleSystem, UObject);
	READ_PTR_FULL(Statue, AStatueThreatBase);
	READ_PTR_FULL(GlowMaterial, UMaterialInstanceDynamic);
}

void USunkenCurseArtefactVfxComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DamagedParticleSystem);
	DELE_PTR_FULL(DefeatedParticleSystem);
	DELE_PTR_FULL(UnderwaterDefeatedParticleSystem);
	DELE_PTR_FULL(Statue);
	DELE_PTR_FULL(GlowMaterial);
}

void USustenanceStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USustenanceStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.SwallowedByKrakenActionStateId.PushCharacterIntoSwallowedByKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AKrakenAnimatedTentacle* Tentacle                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USwallowedByKrakenActionStateId::STATIC_PushCharacterIntoSwallowedByKrakenActionState(class AActor* Character, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwallowedByKrakenActionStateId.PushCharacterIntoSwallowedByKrakenActionState");

	USwallowedByKrakenActionStateId_PushCharacterIntoSwallowedByKrakenActionState_Params params;
	params.Character = Character;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwallowedByKrakenActionStateId.PopCharacterOutOfSwallowedByKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USwallowedByKrakenActionStateId::STATIC_PopCharacterOutOfSwallowedByKrakenActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwallowedByKrakenActionStateId.PopCharacterOutOfSwallowedByKrakenActionState");

	USwallowedByKrakenActionStateId_PopCharacterOutOfSwallowedByKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USwallowedByKrakenActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void USwallowedByKrakenActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void USwimmingCreatureDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void USwimmingCreatureDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.SwimmingCreaturePawn.SetAIStrategy
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InStrategy                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void ASwimmingCreaturePawn::SetAIStrategy(class UClass* InStrategy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreaturePawn.SetAIStrategy");

	ASwimmingCreaturePawn_SetAIStrategy_Params params;
	params.InStrategy = InStrategy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwimmingCreaturePawn.OnRep_CurrentAIStrategy
// (Final, Native, Protected)
// Parameters:
// class UClass*                  OldAIStrategy                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void ASwimmingCreaturePawn::OnRep_CurrentAIStrategy(class UClass* OldAIStrategy)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreaturePawn.OnRep_CurrentAIStrategy");

	ASwimmingCreaturePawn_OnRep_CurrentAIStrategy_Params params;
	params.OldAIStrategy = OldAIStrategy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwimmingCreaturePawn.Multicast_DespawnRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void ASwimmingCreaturePawn::Multicast_DespawnRPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreaturePawn.Multicast_DespawnRPC");

	ASwimmingCreaturePawn_Multicast_DespawnRPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwimmingCreaturePawn.GetCreatureDistanceFromWaterHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASwimmingCreaturePawn::GetCreatureDistanceFromWaterHeight()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreaturePawn.GetCreatureDistanceFromWaterHeight");

	ASwimmingCreaturePawn_GetCreatureDistanceFromWaterHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SwimmingCreaturePawn.GetAIStrategy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* ASwimmingCreaturePawn::GetAIStrategy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwimmingCreaturePawn.GetAIStrategy");

	ASwimmingCreaturePawn_GetAIStrategy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASwimmingCreaturePawn::AfterRead()
{
	APawn::AfterRead();

	READ_PTR_FULL(ActionStateMachineComponent, UActionStateMachineComponent);
	READ_PTR_FULL(ActionStatePriorityTableData, UActionStatePriorityTableData);
	READ_PTR_FULL(ActionStateCreatorDefinition, UClass);
	READ_PTR_FULL(AIControllerParams, UAthenaAIControllerParamsDataAsset);
	READ_PTR_FULL(CollisionComponent, UShapeComponent);
	READ_PTR_FULL(Mesh, USkeletalMeshMemoryConstraintComponent);
	READ_PTR_FULL(FloatingMovementComponent, USwimmingCreatureMovementComponent);
	READ_PTR_FULL(RewindComponent, URewindComponent);
	READ_PTR_FULL(ProjectileTraceHitVolume, UPrimitiveComponent);
	READ_PTR_FULL(HealthComponent, UHealthComponent);
	READ_PTR_FULL(DamageableComponent, UActorDamageableComponent);
	READ_PTR_FULL(DitherComponent, UDitherComponent);
	READ_PTR_FULL(AIPartsRetrievalComponent, UAIPartsRetrievalComponent);
	READ_PTR_FULL(NetworkSyncedAnimationComponent, UNetworkSyncedAnimationComponent);
	READ_PTR_FULL(NetworkTriggeredVFXComponent, UNetworkTriggeredVFXComponent);
	READ_PTR_FULL(WaterHeightProviderComponent, UWaterHeightProviderComponent);
	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
	READ_PTR_FULL(CurrentAIStrategy, UClass);
}

void ASwimmingCreaturePawn::BeforeDelete()
{
	APawn::BeforeDelete();

	DELE_PTR_FULL(ActionStateMachineComponent);
	DELE_PTR_FULL(ActionStatePriorityTableData);
	DELE_PTR_FULL(ActionStateCreatorDefinition);
	DELE_PTR_FULL(AIControllerParams);
	DELE_PTR_FULL(CollisionComponent);
	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(FloatingMovementComponent);
	DELE_PTR_FULL(RewindComponent);
	DELE_PTR_FULL(ProjectileTraceHitVolume);
	DELE_PTR_FULL(HealthComponent);
	DELE_PTR_FULL(DamageableComponent);
	DELE_PTR_FULL(DitherComponent);
	DELE_PTR_FULL(AIPartsRetrievalComponent);
	DELE_PTR_FULL(NetworkSyncedAnimationComponent);
	DELE_PTR_FULL(NetworkTriggeredVFXComponent);
	DELE_PTR_FULL(WaterHeightProviderComponent);
	DELE_PTR_FULL(WaterInteractionComponent);
	DELE_PTR_FULL(CurrentAIStrategy);
}

// Function Athena.SharkPawn.Multicast_PlayMontageRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            AnimIndex                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           PlayAsDynamicMontage           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ASharkPawn::Multicast_PlayMontageRPC(int AnimIndex, bool PlayAsDynamicMontage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SharkPawn.Multicast_PlayMontageRPC");

	ASharkPawn_Multicast_PlayMontageRPC_Params params;
	params.AnimIndex = AnimIndex;
	params.PlayAsDynamicMontage = PlayAsDynamicMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SharkPawn.IsDoingQuickDeath
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ASharkPawn::IsDoingQuickDeath()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SharkPawn.IsDoingQuickDeath");

	ASharkPawn_IsDoingQuickDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SharkPawn.GetIndexForMontage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                 Montage                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ASharkPawn::GetIndexForMontage(class UObject* Montage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SharkPawn.GetIndexForMontage");

	ASharkPawn_GetIndexForMontage_Params params;
	params.Montage = Montage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASharkPawn::AfterRead()
{
	ASwimmingCreaturePawn::AfterRead();

	READ_PTR_FULL(RammerComponent, URammerComponent);
	READ_PTR_FULL(SharkAudioComponent, USharkAICharacterAudioComponent);
}

void ASharkPawn::BeforeDelete()
{
	ASwimmingCreaturePawn::BeforeDelete();

	DELE_PTR_FULL(RammerComponent);
	DELE_PTR_FULL(SharkAudioComponent);
}

void ATinyShark::AfterRead()
{
	ASharkPawn::AfterRead();

	READ_PTR_FULL(AnimNotifyWwiseEmitterComponent, UAnimNotifyWwiseEmitterComponent);
}

void ATinyShark::BeforeDelete()
{
	ASharkPawn::BeforeDelete();

	DELE_PTR_FULL(AnimNotifyWwiseEmitterComponent);
}

// Function Athena.SirenPawn.WieldItem
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           InShouldFastWield              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> ASirenPawn::WieldItem(bool InShouldFastWield)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenPawn.WieldItem");

	ASirenPawn_WieldItem_Params params;
	params.InShouldFastWield = InShouldFastWield;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SirenPawn.PickUpItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               InItemInfo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InAndWield                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ASirenPawn::PickUpItem(class AItemInfo* InItemInfo, bool InAndWield)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenPawn.PickUpItem");

	ASirenPawn_PickUpItem_Params params;
	params.InItemInfo = InItemInfo;
	params.InAndWield = InAndWield;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SirenPawn.HandleNotificationInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  InNotificationInputId          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ASirenPawn::HandleNotificationInput(class UClass* InNotificationInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenPawn.HandleNotificationInput");

	ASirenPawn_HandleNotificationInput_Params params;
	params.InNotificationInputId = InNotificationInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SirenPawn.HandleAnalogInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  InAnalogInputId                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                          InInputDelta                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> ASirenPawn::HandleAnalogInput(class UClass* InAnalogInputId, float InInputDelta)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SirenPawn.HandleAnalogInput");

	ASirenPawn_HandleAnalogInput_Params params;
	params.InAnalogInputId = InAnalogInputId;
	params.InInputDelta = InInputDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASirenPawn::AfterRead()
{
	ASwimmingCreaturePawn::AfterRead();

	READ_PTR_FULL(StatusEffectComponent, UStatusEffectManagerComponent);
	READ_PTR_FULL(HitDetectionComponent, UHitDetectionComponent);
	READ_PTR_FULL(InventoryManipulatorComponent, UInventoryManipulatorComponent);
	READ_PTR_FULL(WieldedItemComponent, UWieldedItemComponent);
	READ_PTR_FULL(WieldableItemSetComponent, UWieldableItemSetComponent);
	READ_PTR_FULL(LoadoutComponent, ULoadoutComponent);
	READ_PTR_FULL(ItemLoadoutComponent, UItemLoadoutComponent);
	READ_PTR_FULL(MeleeAttackProcessorComponent, UMeleeAttackProcessorComponent);
	READ_PTR_FULL(AnimationDataStoreComponent, UAnimationDataStoreComponent);
	READ_PTR_FULL(CustomAnimationMontageComponent, UCustomAnimationMontageComponent);
	READ_PTR_FULL(FiringIntentionComponent, UAIProjectileWeaponFiringIntentionComponent);
	READ_PTR_FULL(HealthGemComponent, UHealthGemComponent);
	READ_PTR_FULL(CharacterHitReactionComponent, UCharacterHitReactionComponent);
	READ_PTR_FULL(AnimationID, UClass);
}

void ASirenPawn::BeforeDelete()
{
	ASwimmingCreaturePawn::BeforeDelete();

	DELE_PTR_FULL(StatusEffectComponent);
	DELE_PTR_FULL(HitDetectionComponent);
	DELE_PTR_FULL(InventoryManipulatorComponent);
	DELE_PTR_FULL(WieldedItemComponent);
	DELE_PTR_FULL(WieldableItemSetComponent);
	DELE_PTR_FULL(LoadoutComponent);
	DELE_PTR_FULL(ItemLoadoutComponent);
	DELE_PTR_FULL(MeleeAttackProcessorComponent);
	DELE_PTR_FULL(AnimationDataStoreComponent);
	DELE_PTR_FULL(CustomAnimationMontageComponent);
	DELE_PTR_FULL(FiringIntentionComponent);
	DELE_PTR_FULL(HealthGemComponent);
	DELE_PTR_FULL(CharacterHitReactionComponent);
	DELE_PTR_FULL(AnimationID);
}

void USwimToSurfaceAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void USwimToSurfaceAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UTaleDoorMigrationAction::AfterRead()
{
	UTaleMigrationAction::AfterRead();

	READ_PTR_FULL(Door, ASlidingDoor);
}

void UTaleDoorMigrationAction::BeforeDelete()
{
	UTaleMigrationAction::BeforeDelete();

	DELE_PTR_FULL(Door);
}

void UTaleEnchantedSpyglassService::AfterRead()
{
	UTaleQuestToolService::AfterRead();

}

void UTaleEnchantedSpyglassService::BeforeDelete()
{
	UTaleQuestToolService::BeforeDelete();

}

void UTaleEnchantedSpyglassServiceDesc::AfterRead()
{
	UTaleQuestToolServiceDesc::AfterRead();

	READ_PTR_FULL(EnchantedSpyglassDesc, UClass);
}

void UTaleEnchantedSpyglassServiceDesc::BeforeDelete()
{
	UTaleQuestToolServiceDesc::BeforeDelete();

	DELE_PTR_FULL(EnchantedSpyglassDesc);
}

// Function Athena.TaleProgressStatue.EnableStatue
// (Final, Native, Public, BlueprintCallable)
void ATaleProgressStatue::EnableStatue()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleProgressStatue.EnableStatue");

	ATaleProgressStatue_EnableStatue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TaleProgressStatue.DisableStatue
// (Final, Native, Public, BlueprintCallable)
void ATaleProgressStatue::DisableStatue()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleProgressStatue.DisableStatue");

	ATaleProgressStatue_DisableStatue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATaleProgressStatue::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(InteractableComponent, UTaleProgressStatueInteractableComponent);
	READ_PTR_FULL(DynamicGlowMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(ResumeFromTaleProgressParticleSystem, UParticleSystemComponent);
}

void ATaleProgressStatue::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(StaticMeshComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(DynamicGlowMaterialInstance);
	DELE_PTR_FULL(ResumeFromTaleProgressParticleSystem);
}

// Function Athena.TaleProgressStatueInteractableComponent.OnRep_StatueInteractionState
// (Final, Native, Private)
void UTaleProgressStatueInteractableComponent::OnRep_StatueInteractionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleProgressStatueInteractableComponent.OnRep_StatueInteractionState");

	UTaleProgressStatueInteractableComponent_OnRep_StatueInteractionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTaleProgressStatueInteractableComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(ReturnToShipInteractionInputID, UClass);
	READ_PTR_FULL(ReturnToShipInteractionReleasedInputID, UClass);
	READ_PTR_FULL(ResumeFromTaleProgressInteractionInputID, UClass);
	READ_PTR_FULL(ResumeFromTaleProgressInteractionReleasedInputID, UClass);
	READ_PTR_FULL(OwningStatue, ATaleProgressStatue);
}

void UTaleProgressStatueInteractableComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(ReturnToShipInteractionInputID);
	DELE_PTR_FULL(ReturnToShipInteractionReleasedInputID);
	DELE_PTR_FULL(ResumeFromTaleProgressInteractionInputID);
	DELE_PTR_FULL(ResumeFromTaleProgressInteractionReleasedInputID);
	DELE_PTR_FULL(OwningStatue);
}

void UTaleQuestAddTemporaryEntitlementStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleQuestAddTemporaryEntitlementStepDesc);
}

void UTaleQuestAddTemporaryEntitlementStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UTaleQuestSpawnAIDioramaStepDesc::AfterRead()
{
	UTaleQuestSpawnAIStepDesc::AfterRead();

}

void UTaleQuestSpawnAIDioramaStepDesc::BeforeDelete()
{
	UTaleQuestSpawnAIStepDesc::BeforeDelete();

}

void UTaleQuestBranchStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestBranchStepDesc);
	READ_PTR_FULL(Step, UTaleQuestStep);
}

void UTaleQuestBranchStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(Step);
}

void UTaleQuestBranchStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(IfCondition, UTaleQuestStepDesc);
	READ_PTR_FULL(ElseCondition, UTaleQuestStepDesc);
}

void UTaleQuestBranchStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(IfCondition);
	DELE_PTR_FULL(ElseCondition);
}

void UTaleQuestCheckpointService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestCheckpointServiceDesc);
}

void UTaleQuestCheckpointService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestCheckpointServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

	READ_PTR_FULL(Notification, UPopUpMessageDesc);
}

void UTaleQuestCheckpointServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

	DELE_PTR_FULL(Notification);
}

void UTaleQuestCommonToolService::AfterRead()
{
	UTaleQuestToolService::AfterRead();

}

void UTaleQuestCommonToolService::BeforeDelete()
{
	UTaleQuestToolService::BeforeDelete();

}

void UTaleQuestCommonToolServiceDesc::AfterRead()
{
	UTaleQuestToolServiceDesc::AfterRead();

}

void UTaleQuestCommonToolServiceDesc::BeforeDelete()
{
	UTaleQuestToolServiceDesc::BeforeDelete();

}

void UTaleQuestGenericBannerStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestGenericBannerStepDesc);
}

void UTaleQuestGenericBannerStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestGenericBannerStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestGenericBannerStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestLoopStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(LoopDesc, UTaleQuestStepDesc);
}

void UTaleQuestLoopStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(LoopDesc);
}

void UTaleQuestNotificationStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestNotificationStepDesc);
}

void UTaleQuestNotificationStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestSequenceStep::AfterRead()
{
	UTaleQuestFramedStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestSequenceStepDesc);
	READ_PTR_FULL(CurrentStep, UTaleQuestStep);
}

void UTaleQuestSequenceStep::BeforeDelete()
{
	UTaleQuestFramedStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(CurrentStep);
}

void UTaleQuestSequenceStepDesc::AfterRead()
{
	UTaleQuestFramedStepDesc::AfterRead();

}

void UTaleQuestSequenceStepDesc::BeforeDelete()
{
	UTaleQuestFramedStepDesc::BeforeDelete();

}

void UTaleQuestSetNPCDialogKeyStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestSetNPCDialogKeyStepDesc);
}

void UTaleQuestSetNPCDialogKeyStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestSetNPCDialogKeyStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestSetNPCDialogKeyStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestStartingBannerStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestStartingBannerStepDesc);
}

void UTaleQuestStartingBannerStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestStartingBannerStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestStartingBannerStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void AChaliceStatue::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMeshComponent);
}

void AChaliceStatue::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Mesh);
}

void UCharacterMovementAINoiseEventComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(WalkingSpeedToNoiseRange, UCurveFloat);
}

void UCharacterMovementAINoiseEventComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(WalkingSpeedToNoiseRange);
}

void UCharacterAINoiseEventComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Params, UCharacterMovementAINoiseEventComponentParams);
	READ_PTR_FULL(AthenaCharacter, AAthenaCharacter);
	READ_PTR_FULL(CharacterMovementComponent, UAthenaCharacterMovementComponent);
}

void UCharacterAINoiseEventComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Params);
	DELE_PTR_FULL(AthenaCharacter);
	DELE_PTR_FULL(CharacterMovementComponent);
}

void UCharacterAudioInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterAudioInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CharacterAudioComponent.SetNamedState
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   StateName                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Active                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterAudioComponent::SetNamedState(const struct FName& StateName, bool Active)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.SetNamedState");

	UCharacterAudioComponent_SetNamedState_Params params;
	params.StateName = StateName;
	params.Active = Active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.Server_SendAudioMonitoringData
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint64_t                       AudioFlags                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint64_t                       AudioFlagsExtended             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCharacterAudioComponent::Server_SendAudioMonitoringData(uint64_t AudioFlags, uint64_t AudioFlagsExtended)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.Server_SendAudioMonitoringData");

	UCharacterAudioComponent_Server_SendAudioMonitoringData_Params params;
	params.AudioFlags = AudioFlags;
	params.AudioFlagsExtended = AudioFlagsExtended;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterAudioComponent.ResetNamedStates
// (Final, Native, Public, BlueprintCallable)
void UCharacterAudioComponent::ResetNamedStates()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.ResetNamedStates");

	UCharacterAudioComponent_ResetNamedStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterAudioComponent.GetSpaceRtpcValueFromRtpcName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   RTPCName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCharacterAudioComponent::GetSpaceRtpcValueFromRtpcName(const struct FName& RTPCName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.GetSpaceRtpcValueFromRtpcName");

	UCharacterAudioComponent_GetSpaceRtpcValueFromRtpcName_Params params;
	params.RTPCName = RTPCName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.GetNumberOfSkeletonsAffectingMusicSystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCharacterAudioComponent::GetNumberOfSkeletonsAffectingMusicSystem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.GetNumberOfSkeletonsAffectingMusicSystem");

	UCharacterAudioComponent_GetNumberOfSkeletonsAffectingMusicSystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.GetIsPlayerInCave
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterAudioComponent::GetIsPlayerInCave()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.GetIsPlayerInCave");

	UCharacterAudioComponent_GetIsPlayerInCave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.GetEmitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWwiseEmitter           ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWwiseEmitter UCharacterAudioComponent::GetEmitter()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.GetEmitter");

	UCharacterAudioComponent_GetEmitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.Client_PostAudioEventToLocalClientOnly
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UWwiseEvent*             Event                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCharacterAudioComponent::Client_PostAudioEventToLocalClientOnly(class UWwiseEvent* Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterAudioComponent.Client_PostAudioEventToLocalClientOnly");

	UCharacterAudioComponent_Client_PostAudioEventToLocalClientOnly_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCharacterAudioComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Params, UCharacterAudioComponentParams);
	READ_PTR_FULL(MonsterCallEvent, UWwiseEvent);
	READ_PTR_FULL(FootfallParams, UCharacterAudioFootfallControllerParams);
	READ_PTR_FULL(EventParams, UCharacterAudioEventControllerParams);
	READ_PTR_FULL(PegLegCategory, UClass);
	READ_PTR_FULL(BootsCategory, UClass);
	READ_PTR_FULL(AudioSpaceTracker, UAudioSpaceTrackerComponent);
	READ_PTR_FULL(AthenaPlayerCharacter, AAthenaPlayerCharacter);
	READ_PTR_FULL(CurrentSpace, UAudioSpaceDataAsset);
	READ_PTR_FULL(CurrentShip, AShip);
}

void UCharacterAudioComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Params);
	DELE_PTR_FULL(MonsterCallEvent);
	DELE_PTR_FULL(FootfallParams);
	DELE_PTR_FULL(EventParams);
	DELE_PTR_FULL(PegLegCategory);
	DELE_PTR_FULL(BootsCategory);
	DELE_PTR_FULL(AudioSpaceTracker);
	DELE_PTR_FULL(AthenaPlayerCharacter);
	DELE_PTR_FULL(CurrentSpace);
	DELE_PTR_FULL(CurrentShip);
}

void UCharacterAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(CharacterAudioPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CausedDamageAudioEvent, UWwiseEvent);
	READ_PTR_FULL(CausedAIShipDamageAudioEvent, UWwiseEvent);
	READ_PTR_FULL(CausedAggressiveGhostShipDamageAudioEvent, UWwiseEvent);
	READ_PTR_FULL(CharacterDeadAudioEvent, UWwiseEvent);
	READ_PTR_FULL(KilledCharacterAudioEvent, UWwiseEvent);
	READ_PTR_FULL(LocalPlayerFireStart, UWwiseEvent);
	READ_PTR_FULL(LocalPlayerFireStop, UWwiseEvent);
	READ_PTR_FULL(RemotePlayerFireStart, UWwiseEvent);
	READ_PTR_FULL(RemotePlayerFireStop, UWwiseEvent);
	READ_PTR_FULL(LocalPlayerExtinguished, UWwiseEvent);
	READ_PTR_FULL(RemotePlayerExtinguished, UWwiseEvent);
	READ_PTR_FULL(PlayCharacterRespawn, UWwiseEvent);
	READ_PTR_FULL(PlayPlayerVengeance, UWwiseEvent);
	READ_PTR_FULL(StopPlayerVengeance, UWwiseEvent);
	READ_PTR_FULL(PlayPlayerVengeanceFinished, UWwiseEvent);
	READ_PTR_FULL(PlayPlayerSlidingDownLadder, UWwiseEvent);
	READ_PTR_FULL(StopPlayerSlidingDownLadder, UWwiseEvent);
	READ_PTR_FULL(LadderUse, UWwiseEvent);
	READ_PTR_FULL(CannonUse, UWwiseEvent);
	READ_PTR_FULL(WheelUse, UWwiseEvent);
	READ_PTR_FULL(SailManipulatorUse, UWwiseEvent);
	READ_PTR_FULL(CharacterTorsoEnteredWater, UWwiseEvent);
	READ_PTR_FULL(CharacterTorsoExitedWater, UWwiseEvent);
	READ_PTR_FULL(LocalPlayerTeleportPlay, UWwiseEvent);
	READ_PTR_FULL(LocalPlayerTeleportStop, UWwiseEvent);
	READ_PTR_FULL(LargeShipMapDeck, UAudioSpaceDataAsset);
	READ_PTR_FULL(LargeShipBrigDeck, UAudioSpaceDataAsset);
	READ_PTR_FULL(LargeShipCaptainsCabin, UAudioSpaceDataAsset);
	READ_PTR_FULL(IslandTavern, UAudioSpaceDataAsset);
	READ_PTR_FULL(IslandCave, UAudioSpaceDataAsset);
	READ_PTR_FULL(FogMusicPlayEvent, UWwiseEvent);
	READ_PTR_FULL(FogMusicStopEvent, UWwiseEvent);
	READ_PTR_FULL(TrapTriggeredEvent, UWwiseEvent);
	READ_PTR_FULL(EmoteCameraStart, UWwiseEvent);
	READ_PTR_FULL(EmoteCameraStop, UWwiseEvent);
	READ_PTR_FULL(ReviveSuccessful, UWwiseEvent);
	READ_PTR_FULL(OtherPlayers_BodyEvaporates, UWwiseEvent);
}

void UCharacterAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(CharacterAudioPool);
	DELE_PTR_FULL(CausedDamageAudioEvent);
	DELE_PTR_FULL(CausedAIShipDamageAudioEvent);
	DELE_PTR_FULL(CausedAggressiveGhostShipDamageAudioEvent);
	DELE_PTR_FULL(CharacterDeadAudioEvent);
	DELE_PTR_FULL(KilledCharacterAudioEvent);
	DELE_PTR_FULL(LocalPlayerFireStart);
	DELE_PTR_FULL(LocalPlayerFireStop);
	DELE_PTR_FULL(RemotePlayerFireStart);
	DELE_PTR_FULL(RemotePlayerFireStop);
	DELE_PTR_FULL(LocalPlayerExtinguished);
	DELE_PTR_FULL(RemotePlayerExtinguished);
	DELE_PTR_FULL(PlayCharacterRespawn);
	DELE_PTR_FULL(PlayPlayerVengeance);
	DELE_PTR_FULL(StopPlayerVengeance);
	DELE_PTR_FULL(PlayPlayerVengeanceFinished);
	DELE_PTR_FULL(PlayPlayerSlidingDownLadder);
	DELE_PTR_FULL(StopPlayerSlidingDownLadder);
	DELE_PTR_FULL(LadderUse);
	DELE_PTR_FULL(CannonUse);
	DELE_PTR_FULL(WheelUse);
	DELE_PTR_FULL(SailManipulatorUse);
	DELE_PTR_FULL(CharacterTorsoEnteredWater);
	DELE_PTR_FULL(CharacterTorsoExitedWater);
	DELE_PTR_FULL(LocalPlayerTeleportPlay);
	DELE_PTR_FULL(LocalPlayerTeleportStop);
	DELE_PTR_FULL(LargeShipMapDeck);
	DELE_PTR_FULL(LargeShipBrigDeck);
	DELE_PTR_FULL(LargeShipCaptainsCabin);
	DELE_PTR_FULL(IslandTavern);
	DELE_PTR_FULL(IslandCave);
	DELE_PTR_FULL(FogMusicPlayEvent);
	DELE_PTR_FULL(FogMusicStopEvent);
	DELE_PTR_FULL(TrapTriggeredEvent);
	DELE_PTR_FULL(EmoteCameraStart);
	DELE_PTR_FULL(EmoteCameraStop);
	DELE_PTR_FULL(ReviveSuccessful);
	DELE_PTR_FULL(OtherPlayers_BodyEvaporates);
}

void UCharacterAudioEventControllerParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(WieldEvent, UWwiseEvent);
	READ_PTR_FULL(StowEvent, UWwiseEvent);
	READ_PTR_FULL(EnemyHitNotifyEvent, UWwiseEvent);
	READ_PTR_FULL(EnemyHitNotifyPool, UWwiseObjectPoolWrapper);
}

void UCharacterAudioEventControllerParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(WieldEvent);
	DELE_PTR_FULL(StowEvent);
	DELE_PTR_FULL(EnemyHitNotifyEvent);
	DELE_PTR_FULL(EnemyHitNotifyPool);
}

void UCharacterAudioFootfallControllerParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(FootfallEvent, UWwiseEvent);
	READ_PTR_FULL(FootfallPacingEvent, UWwiseEvent);
	READ_PTR_FULL(CharacterCleanLandEvent, UWwiseEvent);
	READ_PTR_FULL(CharacterJumpEvent, UWwiseEvent);
	READ_PTR_FULL(CharacterSplashEvent, UWwiseEvent);
	READ_PTR_FULL(FootfallsPool, UWwiseObjectPoolWrapper);
}

void UCharacterAudioFootfallControllerParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(FootfallEvent);
	DELE_PTR_FULL(FootfallPacingEvent);
	DELE_PTR_FULL(CharacterCleanLandEvent);
	DELE_PTR_FULL(CharacterJumpEvent);
	DELE_PTR_FULL(CharacterSplashEvent);
	DELE_PTR_FULL(FootfallsPool);
}

void USkeletonAudioFootfallControllerParams::AfterRead()
{
	UCharacterAudioFootfallControllerParams::AfterRead();

	READ_PTR_FULL(SkeletonLayerFootfallEvent, UWwiseEvent);
}

void USkeletonAudioFootfallControllerParams::BeforeDelete()
{
	UCharacterAudioFootfallControllerParams::BeforeDelete();

	DELE_PTR_FULL(SkeletonLayerFootfallEvent);
}

void UCharacterFootImpactInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterFootImpactInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCharacterSocketCollisionDelegate::AfterRead()
{
	UObject::AfterRead();

}

void UCharacterSocketCollisionDelegate::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.CharacterSocketCollisionServiceInterface.UnregisterSocket
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCharacterSocketCollisionHandle Handle                         (Parm, OutParm, ReferenceParm)
void UCharacterSocketCollisionServiceInterface::UnregisterSocket(struct FCharacterSocketCollisionHandle* Handle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterSocketCollisionServiceInterface.UnregisterSocket");

	UCharacterSocketCollisionServiceInterface_UnregisterSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Handle != nullptr)
		*Handle = params.Handle;

}


// Function Athena.CharacterSocketCollisionServiceInterface.RegisterSocket
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCharacterSocketCollisionDesc InDesc                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FCharacterSocketCollisionHandle ReturnValue                    (Parm, OutParm, ReturnParm)
struct FCharacterSocketCollisionHandle UCharacterSocketCollisionServiceInterface::RegisterSocket(class AAthenaCharacter* InCharacter, const struct FCharacterSocketCollisionDesc& InDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterSocketCollisionServiceInterface.RegisterSocket");

	UCharacterSocketCollisionServiceInterface_RegisterSocket_Params params;
	params.InCharacter = InCharacter;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionServiceInterface.IsSocketRegistered
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCharacterSocketCollisionHandle Handle                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterSocketCollisionServiceInterface::IsSocketRegistered(const struct FCharacterSocketCollisionHandle& Handle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterSocketCollisionServiceInterface.IsSocketRegistered");

	UCharacterSocketCollisionServiceInterface_IsSocketRegistered_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterSocketCollisionServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterSocketCollisionServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCharacterFootImpactComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCharacterFootImpactComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCharacterInputBinder::AfterRead()
{
	UInputBinder::AfterRead();

}

void UCharacterInputBinder::BeforeDelete()
{
	UInputBinder::BeforeDelete();

}

void UAthenaPlayerCharacterTestInputBinder::AfterRead()
{
	UCharacterInputBinder::AfterRead();

	READ_PTR_FULL(LastAnalogInputId, UClass);
	READ_PTR_FULL(LastNotificationInputId, UClass);
}

void UAthenaPlayerCharacterTestInputBinder::BeforeDelete()
{
	UCharacterInputBinder::BeforeDelete();

	DELE_PTR_FULL(LastAnalogInputId);
	DELE_PTR_FULL(LastNotificationInputId);
}

// Function Athena.CharacterInteractionComponentTestFunctions.PushCanInteractValidatorToInteractionComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCharacterInteractionComponent* InCharacterInteractionComponent (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCharacterInteractionComponentTestFunctions::STATIC_PushCanInteractValidatorToInteractionComponent(class UCharacterInteractionComponent* InCharacterInteractionComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterInteractionComponentTestFunctions.PushCanInteractValidatorToInteractionComponent");

	UCharacterInteractionComponentTestFunctions_PushCanInteractValidatorToInteractionComponent_Params params;
	params.InCharacterInteractionComponent = InCharacterInteractionComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCharacterInteractionComponentTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCharacterInteractionComponentTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.CharacterPossessedEventTestComponent.HasReceivedPlayerStateReplicatedEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterPossessedEventTestComponent::HasReceivedPlayerStateReplicatedEvent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterPossessedEventTestComponent.HasReceivedPlayerStateReplicatedEvent");

	UCharacterPossessedEventTestComponent_HasReceivedPlayerStateReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterPossessedEventTestComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCharacterPossessedEventTestComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.CharacterSocketCollisionFunctionLibrary.NotEqual
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterSocketCollisionHandle A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FCharacterSocketCollisionHandle B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterSocketCollisionFunctionLibrary::STATIC_NotEqual(const struct FCharacterSocketCollisionHandle& A, const struct FCharacterSocketCollisionHandle& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterSocketCollisionFunctionLibrary.NotEqual");

	UCharacterSocketCollisionFunctionLibrary_NotEqual_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionFunctionLibrary.IsValid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterSocketCollisionHandle Handle                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterSocketCollisionFunctionLibrary::STATIC_IsValid(const struct FCharacterSocketCollisionHandle& Handle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterSocketCollisionFunctionLibrary.IsValid");

	UCharacterSocketCollisionFunctionLibrary_IsValid_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionFunctionLibrary.Equal
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterSocketCollisionHandle A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FCharacterSocketCollisionHandle B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterSocketCollisionFunctionLibrary::STATIC_Equal(const struct FCharacterSocketCollisionHandle& A, const struct FCharacterSocketCollisionHandle& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterSocketCollisionFunctionLibrary.Equal");

	UCharacterSocketCollisionFunctionLibrary_Equal_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterSocketCollisionFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCharacterSocketCollisionFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void ACharacterSocketCollisionService::AfterRead()
{
	AActor::AfterRead();

}

void ACharacterSocketCollisionService::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.CharacterVfxComponent.WindVFX_SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsEnabled                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UCharacterVfxComponent::WindVFX_SetEnabled(bool IsEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterVfxComponent.WindVFX_SetEnabled");

	UCharacterVfxComponent_WindVFX_SetEnabled_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CharacterVfxComponent.WindVFX_CanProcessWind
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterVfxComponent::WindVFX_CanProcessWind()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterVfxComponent.WindVFX_CanProcessWind");

	UCharacterVfxComponent_WindVFX_CanProcessWind_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterVfxComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(WindVFX, UParticleSystemComponent);
	READ_PTR_FULL(OwnerCharacter, AAthenaPlayerCharacter);
}

void UCharacterVfxComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(WindVFX);
	DELE_PTR_FULL(OwnerCharacter);
}

void UChargedProjectileDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UChargedProjectileDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.ChatboxCompositeInputHandler.OnOpenChatbox
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UChatboxCompositeInputHandler::OnOpenChatbox()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChatboxCompositeInputHandler.OnOpenChatbox");

	UChatboxCompositeInputHandler_OnOpenChatbox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UChatboxCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UChatboxCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void UCheerAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UCheerAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UCheerAnimationStateId::AfterRead()
{
	UAIAnimationStateId::AfterRead();

}

void UCheerAnimationStateId::BeforeDelete()
{
	UAIAnimationStateId::BeforeDelete();

}

// Function Athena.ChestOfRageComponent.SetForceIsUnderwater
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InForceIsUnderwater            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UChestOfRageComponent::SetForceIsUnderwater(bool InForceIsUnderwater)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChestOfRageComponent.SetForceIsUnderwater");

	UChestOfRageComponent_SetForceIsUnderwater_Params params;
	params.InForceIsUnderwater = InForceIsUnderwater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ChestOfRageComponent.OnRep_ReplicatedData
// (Final, RequiredAPI, Native, Private)
void UChestOfRageComponent::OnRep_ReplicatedData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChestOfRageComponent.OnRep_ReplicatedData");

	UChestOfRageComponent_OnRep_ReplicatedData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ChestOfRageComponent.Multicast_PlaySteamBlastEffect
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void UChestOfRageComponent::Multicast_PlaySteamBlastEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChestOfRageComponent.Multicast_PlaySteamBlastEffect");

	UChestOfRageComponent_Multicast_PlaySteamBlastEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ChestOfRageComponent.Multicast_PlayStartWhistlingOneShotSfx
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void UChestOfRageComponent::Multicast_PlayStartWhistlingOneShotSfx()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChestOfRageComponent.Multicast_PlayStartWhistlingOneShotSfx");

	UChestOfRageComponent_Multicast_PlayStartWhistlingOneShotSfx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ChestOfRageComponent.Multicast_PlayExplosionEffect
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void UChestOfRageComponent::Multicast_PlayExplosionEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChestOfRageComponent.Multicast_PlayExplosionEffect");

	UChestOfRageComponent_Multicast_PlayExplosionEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UChestOfRageComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ChestOfRageDataAsset, UChestOfRageDataAsset);
	READ_PTR_FULL(RageBuildingVfxEmitter, UParticleSystemComponent);
	READ_PTR_FULL(SteamingVfxEmitter, UParticleSystemComponent);
	READ_PTR_FULL(OnFireVfxEmitter, UParticleSystemComponent);
}

void UChestOfRageComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ChestOfRageDataAsset);
	DELE_PTR_FULL(RageBuildingVfxEmitter);
	DELE_PTR_FULL(SteamingVfxEmitter);
	DELE_PTR_FULL(OnFireVfxEmitter);
}

void UChestOfRageDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TimeToRemovePerSplash, UCurveFloat);
	READ_PTR_FULL(RageBuildingVfx, UObject);
	READ_PTR_FULL(SteamingVfx, UObject);
	READ_PTR_FULL(OnFireVfx, UObject);
	READ_PTR_FULL(ExplosionVfx, UObject);
	READ_PTR_FULL(CooledDownSteamBlast, UObject);
	READ_PTR_FULL(OnTakingDamageVfx, UObject);
	READ_PTR_FULL(OnTakingDamageSfx, UWwiseEvent);
	READ_PTR_FULL(StartWhistlingOneShotSfx, UWwiseEvent);
	READ_PTR_FULL(StartWhistlingSfx, UWwiseEvent);
	READ_PTR_FULL(StopWhistlingSfx, UWwiseEvent);
	READ_PTR_FULL(StartRageBuildingSfx, UWwiseEvent);
	READ_PTR_FULL(StopRageBuildingSfx, UWwiseEvent);
	READ_PTR_FULL(ExplosionSfx, UWwiseEvent);
	READ_PTR_FULL(ExtinguishedSfx, UWwiseEvent);
	READ_PTR_FULL(AudioSFXPool, UWwiseObjectPoolWrapper);
}

void UChestOfRageDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TimeToRemovePerSplash);
	DELE_PTR_FULL(RageBuildingVfx);
	DELE_PTR_FULL(SteamingVfx);
	DELE_PTR_FULL(OnFireVfx);
	DELE_PTR_FULL(ExplosionVfx);
	DELE_PTR_FULL(CooledDownSteamBlast);
	DELE_PTR_FULL(OnTakingDamageVfx);
	DELE_PTR_FULL(OnTakingDamageSfx);
	DELE_PTR_FULL(StartWhistlingOneShotSfx);
	DELE_PTR_FULL(StartWhistlingSfx);
	DELE_PTR_FULL(StopWhistlingSfx);
	DELE_PTR_FULL(StartRageBuildingSfx);
	DELE_PTR_FULL(StopRageBuildingSfx);
	DELE_PTR_FULL(ExplosionSfx);
	DELE_PTR_FULL(ExtinguishedSfx);
	DELE_PTR_FULL(AudioSFXPool);
}

void UChooseIslandStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UChooseIslandStepDesc);
}

void UChooseIslandStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void AEmissaryVoteInteractionActor::AfterRead()
{
	AActor::AfterRead();

}

void AEmissaryVoteInteractionActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.EmoteActionStateId.PushCharacterIntoEmoteActionStateUsingEmoteData
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEmoteData              EmoteData                      (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ForcedEmote                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UEmoteActionStateId::STATIC_PushCharacterIntoEmoteActionStateUsingEmoteData(class AActor* Character, const struct FEmoteData& EmoteData, bool ForcedEmote)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteActionStateId.PushCharacterIntoEmoteActionStateUsingEmoteData");

	UEmoteActionStateId_PushCharacterIntoEmoteActionStateUsingEmoteData_Params params;
	params.Character = Character;
	params.EmoteData = EmoteData;
	params.ForcedEmote = ForcedEmote;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EmoteActionStateId.PushCharacterIntoEmoteActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   EmoteIdentifier                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ForcedEmote                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UEmoteActionStateId::STATIC_PushCharacterIntoEmoteActionState(class AActor* Character, const struct FName& EmoteIdentifier, bool ForcedEmote)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteActionStateId.PushCharacterIntoEmoteActionState");

	UEmoteActionStateId_PushCharacterIntoEmoteActionState_Params params;
	params.Character = Character;
	params.EmoteIdentifier = EmoteIdentifier;
	params.ForcedEmote = ForcedEmote;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEmoteActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UEmoteActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.EmoteCompositeInputHandler.OnZoomOut
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnZoomOut(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnZoomOut");

	UEmoteCompositeInputHandler_OnZoomOut_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnZoomMouse
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnZoomMouse(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnZoomMouse");

	UEmoteCompositeInputHandler_OnZoomMouse_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnZoomIn
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnZoomIn(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnZoomIn");

	UEmoteCompositeInputHandler_OnZoomIn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnTurnRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnTurnRate");

	UEmoteCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnTurn
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnTurn(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnTurn");

	UEmoteCompositeInputHandler_OnTurn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnMoveRight
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnMoveRight");

	UEmoteCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnMoveForward
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnMoveForward");

	UEmoteCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnLookUpRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnLookUpRate");

	UEmoteCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnLookUp
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnLookUp");

	UEmoteCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnJump
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnJump()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnJump");

	UEmoteCompositeInputHandler_OnJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnCancel
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UEmoteCompositeInputHandler::OnCancel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmoteCompositeInputHandler.OnCancel");

	UEmoteCompositeInputHandler_OnCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UEmoteCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UEmoteCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UEmoteItemCategoriesListingAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEmoteItemCategoriesListingAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEmoteRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

	READ_PTR_FULL(EmoteSettings, UEmoteSettings);
}

void UEmoteRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

	DELE_PTR_FULL(EmoteSettings);
}

void UCostumeEmoteRadialContentRule::AfterRead()
{
	UEmoteRadialContentRule::AfterRead();

}

void UCostumeEmoteRadialContentRule::BeforeDelete()
{
	UEmoteRadialContentRule::BeforeDelete();

}

void UEmotesRadialDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UEmotesRadialDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEmoteZoomInAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UEmoteZoomInAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UEmoteZoomMouseAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UEmoteZoomMouseAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UEmoteZoomOutAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UEmoteZoomOutAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void AEnchantedSpyglassItemInfo::AfterRead()
{
	AActor::AfterRead();

}

void AEnchantedSpyglassItemInfo::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UEntitlementInformationComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UEntitlementInformationComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UEnvQueryContext_AllMermaidsInWorld::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_AllMermaidsInWorld::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_AllPlayerCharactersOnIsland::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_AllPlayerCharactersOnIsland::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_MembersOfNamedCrewOnIsland::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_MembersOfNamedCrewOnIsland::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_NamedActor::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_NamedActor::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_NamedActorOnIsland::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_NamedActorOnIsland::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_OccupiedLocationsInRegion::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_OccupiedLocationsInRegion::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_OccupiedPositionsOnIsland::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_OccupiedPositionsOnIsland::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryContext_TargetPosition::AfterRead()
{
	UEnvQueryContext::AfterRead();

}

void UEnvQueryContext_TargetPosition::BeforeDelete()
{
	UEnvQueryContext::BeforeDelete();

}

void UEnvQueryGenerator_IslandAISpawnLocations::AfterRead()
{
	UEnvQueryGenerator::AfterRead();

}

void UEnvQueryGenerator_IslandAISpawnLocations::BeforeDelete()
{
	UEnvQueryGenerator::BeforeDelete();

}

void UEnvQueryGenerator_IslandTreasureLocations::AfterRead()
{
	UEnvQueryGenerator::AfterRead();

}

void UEnvQueryGenerator_IslandTreasureLocations::BeforeDelete()
{
	UEnvQueryGenerator::BeforeDelete();

}

void UTreasureVaultItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

}

void UTreasureVaultItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

}

// Function Athena.TreasureVaultTable.InitBPVariables
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class APuzzleVault*            PuzzleVault                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstance*> TableMaterials                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void ATreasureVaultTable::InitBPVariables(class APuzzleVault* PuzzleVault, TArray<class UMaterialInstance*> TableMaterials)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TreasureVaultTable.InitBPVariables");

	ATreasureVaultTable_InitBPVariables_Params params;
	params.PuzzleVault = PuzzleVault;
	params.TableMaterials = TableMaterials;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATreasureVaultTable::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(VaultKeyMapping, UVaultKeyMappingDataAsset);
}

void ATreasureVaultTable::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(VaultKeyMapping);
}

// Function Athena.TriggerObject.Trigger
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATriggerObject::Trigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TriggerObject.Trigger");

	ATriggerObject_Trigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TriggerObject.OnTriggerServer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATriggerObject::OnTriggerServer(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TriggerObject.OnTriggerServer");

	ATriggerObject_OnTriggerServer_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TriggerObject.OnTriggerClient
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATriggerObject::OnTriggerClient(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TriggerObject.OnTriggerClient");

	ATriggerObject_OnTriggerClient_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TriggerObject.MulticastTrigger
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATriggerObject::MulticastTrigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TriggerObject.MulticastTrigger");

	ATriggerObject_MulticastTrigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TriggerObject.CanActorTrigger
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ATriggerObject::CanActorTrigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TriggerObject.CanActorTrigger");

	ATriggerObject_CanActorTrigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ATriggerObject::AfterRead()
{
	AActor::AfterRead();

}

void ATriggerObject::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.TeleportTriggerObject.OnTriggerTeleportServer
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATeleportTriggerObject::OnTriggerTeleportServer(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportTriggerObject.OnTriggerTeleportServer");

	ATeleportTriggerObject_OnTriggerTeleportServer_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATeleportTriggerObject::AfterRead()
{
	ATriggerObject::AfterRead();

	READ_PTR_FULL(TargetTeleportActor, AActor);
}

void ATeleportTriggerObject::BeforeDelete()
{
	ATriggerObject::BeforeDelete();

	DELE_PTR_FULL(TargetTeleportActor);
}

void UTurnOnTheSpotAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UTurnOnTheSpotAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UTurnRateAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UTurnRateAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UTurnToNextPageNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UTurnToNextPageNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UTurnToPreviousPageNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UTurnToPreviousPageNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.TutorialComponent.OnRep_HasBegun
// (Final, Native, Private)
void UTutorialComponent::OnRep_HasBegun()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TutorialComponent.OnRep_HasBegun");

	UTutorialComponent_OnRep_HasBegun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTutorialComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UTutorialComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UAthenaTutorialComponent::AfterRead()
{
	UTutorialComponent::AfterRead();

}

void UAthenaTutorialComponent::BeforeDelete()
{
	UTutorialComponent::BeforeDelete();

}

// Function Athena.TutorialFunctionLibrary.TriggerAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthenaPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DelayBeforeFadeIn              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          FadeInDuration                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTutorialAnimationResult ReturnValue                    (Parm, OutParm, ReturnParm)
struct FTutorialAnimationResult UTutorialFunctionLibrary::STATIC_TriggerAnimation(class AAthenaPlayerCharacter* Character, class AAthenaPlayerController* Controller, float DelayBeforeFadeIn, float FadeInDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TutorialFunctionLibrary.TriggerAnimation");

	UTutorialFunctionLibrary_TriggerAnimation_Params params;
	params.Character = Character;
	params.Controller = Controller;
	params.DelayBeforeFadeIn = DelayBeforeFadeIn;
	params.FadeInDuration = FadeInDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TutorialFunctionLibrary.SendTutorialStepCompletedTelemetry
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 InSequenceName                 (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FString                 InStepName                     (Parm, ZeroConstructor, HasGetValueTypeHash)
// int                            StepIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            SequenceLength                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InStepCompleted                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTutorialFunctionLibrary::STATIC_SendTutorialStepCompletedTelemetry(class UObject* WorldContextObject, const struct FString& InSequenceName, const struct FString& InStepName, int StepIndex, int SequenceLength, bool InStepCompleted)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TutorialFunctionLibrary.SendTutorialStepCompletedTelemetry");

	UTutorialFunctionLibrary_SendTutorialStepCompletedTelemetry_Params params;
	params.WorldContextObject = WorldContextObject;
	params.InSequenceName = InSequenceName;
	params.InStepName = InStepName;
	params.StepIndex = StepIndex;
	params.SequenceLength = SequenceLength;
	params.InStepCompleted = InStepCompleted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTutorialFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UTutorialFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void ATutorialMap::AfterRead()
{
	ATreasureMap::AfterRead();

}

void ATutorialMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

}

void UTutorialTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UTutorialTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UTutorialTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTutorialTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UUITelemetryComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UUITelemetryComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UUnarmedCombatDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UUnarmedCombatDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UUnderwaterEffectsComponent::AfterRead()
{
	UWwiseEmitterComponent::AfterRead();

	READ_PTR_FULL(UnderwaterEffectsData, UUnderwaterEffectsDataAsset);
	READ_PTR_FULL(SpawnedVfx, UParticleSystemComponent);
}

void UUnderwaterEffectsComponent::BeforeDelete()
{
	UWwiseEmitterComponent::BeforeDelete();

	DELE_PTR_FULL(UnderwaterEffectsData);
	DELE_PTR_FULL(SpawnedVfx);
}

void UUnderwaterEffectsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(StartUnderwaterSfx, UWwiseEvent);
	READ_PTR_FULL(StopUnderwaterSfx, UWwiseEvent);
	READ_PTR_FULL(UnderwaterVfx, UObject);
}

void UUnderwaterEffectsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(StartUnderwaterSfx);
	DELE_PTR_FULL(StopUnderwaterSfx);
	DELE_PTR_FULL(UnderwaterVfx);
}

// Function Athena.UnifiedDelegateTestUnifiedDelegate.UnbindDelegate
// (Final, Native, Public, BlueprintCallable)
void UUnifiedDelegateTestUnifiedDelegate::UnbindDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UnifiedDelegateTestUnifiedDelegate.UnbindDelegate");

	UUnifiedDelegateTestUnifiedDelegate_UnbindDelegate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.MakeTestUnifiedDelegate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUnifiedDelegateTestUnifiedDelegate* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UUnifiedDelegateTestUnifiedDelegate* UUnifiedDelegateTestUnifiedDelegate::STATIC_MakeTestUnifiedDelegate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UnifiedDelegateTestUnifiedDelegate.MakeTestUnifiedDelegate");

	UUnifiedDelegateTestUnifiedDelegate_MakeTestUnifiedDelegate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.IsDelegateBound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UUnifiedDelegateTestUnifiedDelegate::IsDelegateBound()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UnifiedDelegateTestUnifiedDelegate.IsDelegateBound");

	UUnifiedDelegateTestUnifiedDelegate_IsDelegateBound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.BindDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate         InDynamicDelegate              (Parm, ZeroConstructor, NoDestructor)
void UUnifiedDelegateTestUnifiedDelegate::BindDelegate(const struct FScriptDelegate& InDynamicDelegate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UnifiedDelegateTestUnifiedDelegate.BindDelegate");

	UUnifiedDelegateTestUnifiedDelegate_BindDelegate_Params params;
	params.InDynamicDelegate = InDynamicDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUnifiedDelegateTestUnifiedDelegate::AfterRead()
{
	UObject::AfterRead();

}

void UUnifiedDelegateTestUnifiedDelegate::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.UnloadItemActionStateId.PushCharacterIntoUnloadItemActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  UnloadableActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Interactable                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUnloadItemActionStateId::STATIC_PushCharacterIntoUnloadItemActionState(class AActor* Character, class AActor* UnloadableActor, class AActor* Interactable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UnloadItemActionStateId.PushCharacterIntoUnloadItemActionState");

	UUnloadItemActionStateId_PushCharacterIntoUnloadItemActionState_Params params;
	params.Character = Character;
	params.UnloadableActor = UnloadableActor;
	params.Interactable = Interactable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UnloadItemActionStateId.PopCharacterOutOfUnloadItemActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUnloadItemActionStateId::STATIC_PopCharacterOutOfUnloadItemActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UnloadItemActionStateId.PopCharacterOutOfUnloadItemActionState");

	UUnloadItemActionStateId_PopCharacterOutOfUnloadItemActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUnloadItemActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UUnloadItemActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UUnmanagedSalvageItemSpawnComponent::AfterRead()
{
	USalvageItemSpawnComponent::AfterRead();

}

void UUnmanagedSalvageItemSpawnComponent::BeforeDelete()
{
	USalvageItemSpawnComponent::BeforeDelete();

}

void UIslandWatercraftSpawnComponent::AfterRead()
{
	UUnmanagedSalvageItemSpawnComponent::AfterRead();

}

void UIslandWatercraftSpawnComponent::BeforeDelete()
{
	UUnmanagedSalvageItemSpawnComponent::BeforeDelete();

}

void UUnmanagedSalvageItemSpawnComponentMock::AfterRead()
{
	UUnmanagedSalvageItemSpawnComponent::AfterRead();

}

void UUnmanagedSalvageItemSpawnComponentMock::BeforeDelete()
{
	UUnmanagedSalvageItemSpawnComponent::BeforeDelete();

}

// Function Athena.UseCannonActionStateId.PushCharacterIntoUseCannonActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  CannonActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUseCannonActionStateId::STATIC_PushCharacterIntoUseCannonActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* CannonActor, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseCannonActionStateId.PushCharacterIntoUseCannonActionState");

	UUseCannonActionStateId_PushCharacterIntoUseCannonActionState_Params params;
	params.TrackId = TrackId;
	params.CannonActor = CannonActor;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUseCannonActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UUseCannonActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UUseConcealingObjectNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UUseConcealingObjectNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UUseHarpoonLauncherActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UUseHarpoonLauncherActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.UseLadderActionStateId.PushCharacterIntoUseLadderActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  LadderActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InteractingHeight              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  ClimbId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLadderDefinition       LadderDefinition               (ConstParm, Parm, OutParm, ReferenceParm)
void UUseLadderActionStateId::STATIC_PushCharacterIntoUseLadderActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseLadderActionStateId.PushCharacterIntoUseLadderActionState");

	UUseLadderActionStateId_PushCharacterIntoUseLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUseLadderActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UUseLadderActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.UseMapTableActionStateId.PushCharacterIntoUseMapTableActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  MapTableActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUseMapTableActionStateId::STATIC_PushCharacterIntoUseMapTableActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* MapTableActor, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableActionStateId.PushCharacterIntoUseMapTableActionState");

	UUseMapTableActionStateId_PushCharacterIntoUseMapTableActionState_Params params;
	params.TrackId = TrackId;
	params.MapTableActor = MapTableActor;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUseMapTableActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UUseMapTableActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.UseMapTableCompositeInputHandler.OnZoomOut
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnZoomOut(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnZoomOut");

	UUseMapTableCompositeInputHandler_OnZoomOut_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnZoomIn
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnZoomIn(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnZoomIn");

	UUseMapTableCompositeInputHandler_OnZoomIn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnToggleTooltip
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnToggleTooltip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnToggleTooltip");

	UUseMapTableCompositeInputHandler_OnToggleTooltip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnTogglePin
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnTogglePin()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnTogglePin");

	UUseMapTableCompositeInputHandler_OnTogglePin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnPanY
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnPanY(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnPanY");

	UUseMapTableCompositeInputHandler_OnPanY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnPanX
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnPanX(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnPanX");

	UUseMapTableCompositeInputHandler_OnPanX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnMouseZoom
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnMouseZoom(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnMouseZoom");

	UUseMapTableCompositeInputHandler_OnMouseZoom_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnMousePanY
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnMousePanY(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnMousePanY");

	UUseMapTableCompositeInputHandler_OnMousePanY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnMousePanX
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UUseMapTableCompositeInputHandler::OnMousePanX(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseMapTableCompositeInputHandler.OnMousePanX");

	UUseMapTableCompositeInputHandler_OnMousePanX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UUseMapTableCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(MapTable, AMapTable);
}

void UUseMapTableCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(MapTable);
}

void UNPCOnSurfaceCannonManagerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DefaultCannonballItemDesc, UClass);
}

void UNPCOnSurfaceCannonManagerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DefaultCannonballItemDesc);
}

void UWeightedItemDescSpawnDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeightedItemDescSpawnDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.CargoRunParticipantInterface.SetPickUpPointForCargo
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FGuid                   InCargoBatchId                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UClass*                  InCrateItemDesc                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FGuid                   InDeliveryLocationId           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InDeliveryDeadlineInMinutes    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UCargoRunParticipantInterface::SetPickUpPointForCargo(const struct FGuid& InCrewId, const struct FGuid& InCargoBatchId, class UClass* InCrateItemDesc, const struct FGuid& InDeliveryLocationId, int InDeliveryDeadlineInMinutes)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CargoRunParticipantInterface.SetPickUpPointForCargo");

	UCargoRunParticipantInterface_SetPickUpPointForCargo_Params params;
	params.InCrewId = InCrewId;
	params.InCargoBatchId = InCargoBatchId;
	params.InCrateItemDesc = InCrateItemDesc;
	params.InDeliveryLocationId = InDeliveryLocationId;
	params.InDeliveryDeadlineInMinutes = InDeliveryDeadlineInMinutes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CargoRunParticipantInterface.ClearPickUp
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   InCrewId                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FGuid                   InCargoBatchId                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FGuid                   InPickUpId                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UCargoRunParticipantInterface::ClearPickUp(const struct FGuid& InCrewId, const struct FGuid& InCargoBatchId, const struct FGuid& InPickUpId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CargoRunParticipantInterface.ClearPickUp");

	UCargoRunParticipantInterface_ClearPickUp_Params params;
	params.InCrewId = InCrewId;
	params.InCargoBatchId = InCargoBatchId;
	params.InPickUpId = InPickUpId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCargoRunParticipantInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCargoRunParticipantInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCargoRunServiceQueryInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCargoRunServiceQueryInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCargoRunServicePickUpInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCargoRunServicePickUpInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AItemSpawnTelemetryDispatchingItemInfo::AfterRead()
{
	AItemInfo::AfterRead();

}

void AItemSpawnTelemetryDispatchingItemInfo::BeforeDelete()
{
	AItemInfo::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Artifact::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Artifact::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Bait::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Bait::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Barrel::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Barrel::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_CollectorsChest::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_CollectorsChest::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Crate_Animal::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Crate_Animal::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Crate_Bottles::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Crate_Bottles::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Crate_Cloth::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Crate_Cloth::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Crate_Goods::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Crate_Goods::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Crate_Plants::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Crate_Plants::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_CursedChest_Drunken::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_CursedChest_Drunken::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_CursedChest_Rage::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_CursedChest_Rage::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_CursedChest_Weeping::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_CursedChest_Weeping::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_EmissaryFlotsam::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_EmissaryFlotsam::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_FishedItem_Comedy::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_FishedItem_Comedy::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Gem::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Gem::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_GunpowderBarrel::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_GunpowderBarrel::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Key_Disc::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Key_Disc::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Key_Traditional::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Key_Traditional::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Skull::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Skull::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Tome::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Tome::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_Totem::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_Totem::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_TreasureChest::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_TreasureChest::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UMeshMemoryConstraintCategory_WoodPlank::AfterRead()
{
	UMeshMemoryConstraintCategory::AfterRead();

}

void UMeshMemoryConstraintCategory_WoodPlank::BeforeDelete()
{
	UMeshMemoryConstraintCategory::BeforeDelete();

}

void UObscuringItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UObscuringItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URetractableItemProxyComponent::AfterRead()
{
	URetractableComponent::AfterRead();

}

void URetractableItemProxyComponent::BeforeDelete()
{
	URetractableComponent::BeforeDelete();

}

void USharkPartsDesc::AfterRead()
{
	UMeshMemoryConstraintsAIPartsDesc::AfterRead();

}

void USharkPartsDesc::BeforeDelete()
{
	UMeshMemoryConstraintsAIPartsDesc::BeforeDelete();

}

// Function Athena.AISpawnActionStateId.PushCharacterIntoAISpawnActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAISpawnActionStateId::STATIC_PushCharacterIntoAISpawnActionState(class AActor* InCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AISpawnActionStateId.PushCharacterIntoAISpawnActionState");

	UAISpawnActionStateId_PushCharacterIntoAISpawnActionState_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAISpawnActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UAISpawnActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UAttackAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UAttackAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UFleeAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UFleeAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UPursuitAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UPursuitAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UWanderAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UWanderAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UTeleportAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UTeleportAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UBountyMapLayout::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBountyMapLayout::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void AOneShotAnimatedMechanismAction::AfterRead()
{
	AAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(Pivot, USceneComponent);
	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
}

void AOneShotAnimatedMechanismAction::BeforeDelete()
{
	AAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Pivot);
	DELE_PTR_FULL(AudioEmitterPool);
}

void UStormServiceAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UStormServiceAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UStormServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStormServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTaleAddStormAvoidanceAreaStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleAddStormAvoidanceAreaStepDesc);
}

void UTaleAddStormAvoidanceAreaStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UTaleStormService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UTaleStormService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UTaleStormServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleStormServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void UTaleAddStormAvoidanceAreaStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleAddStormAvoidanceAreaStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleRemoveStormAvoidanceAreaStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleRemoveStormAvoidanceAreaStepDesc);
}

void UTaleRemoveStormAvoidanceAreaStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UContestZoneRespawnLocationsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContestZoneRespawnLocationsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UContestZoneServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UContestZoneServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ContestZoneService.SelectAndInitialiseContestZone
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InContestZoneNameToSelect      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AContestZoneService::SelectAndInitialiseContestZone(const struct FName& InContestZoneNameToSelect)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestZoneService.SelectAndInitialiseContestZone");

	AContestZoneService_SelectAndInitialiseContestZone_Params params;
	params.InContestZoneNameToSelect = InContestZoneNameToSelect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestZoneService.OnLevelAddedToWorld
// (Final, Native, Private)
// Parameters:
// class ULevel*                  InLevel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWorld*                  InWorld                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AContestZoneService::OnLevelAddedToWorld(class ULevel* InLevel, class UWorld* InWorld)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestZoneService.OnLevelAddedToWorld");

	AContestZoneService_OnLevelAddedToWorld_Params params;
	params.InLevel = InLevel;
	params.InWorld = InWorld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestZoneService.ActivateContestZone
// (Native, Public, BlueprintCallable)
void AContestZoneService::ActivateContestZone()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestZoneService.ActivateContestZone");

	AContestZoneService_ActivateContestZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AContestZoneService::AfterRead()
{
	AActor::AfterRead();

}

void AContestZoneService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UArenaWorldMarkerOnProxyComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MarkerVariant, UClass);
}

void UArenaWorldMarkerOnProxyComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MarkerVariant);
}

void UArenaWorldMarkerOnWieldComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(MarkerVariant, UClass);
}

void UArenaWorldMarkerOnWieldComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(MarkerVariant);
}

void UArenaWorldMarkerVariant::AfterRead()
{
	UWorldMarkerVariant::AfterRead();

}

void UArenaWorldMarkerVariant::BeforeDelete()
{
	UWorldMarkerVariant::BeforeDelete();

}

void UContestModuleSettingsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ArenaRowboatClass, UClass);
}

void UContestModuleSettingsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ArenaRowboatClass);
}

void UUsableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UUsableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.UsableItemsActionRulesBlueprintFunctionLibrary.AddOneShotUseActionRule
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  StartInput                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUsableItemsActionRulesBlueprintFunctionLibrary::STATIC_AddOneShotUseActionRule(class UClass* StartInput, class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableItemsActionRulesBlueprintFunctionLibrary.AddOneShotUseActionRule");

	UUsableItemsActionRulesBlueprintFunctionLibrary_AddOneShotUseActionRule_Params params;
	params.StartInput = StartInput;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UsableItemsActionRulesBlueprintFunctionLibrary.AddHoldToUseActionRule
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  StartInput                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UClass*                  EndInput                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           SplitActionRules               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackToUse                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IgnoreEventsFromOtherTracks    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           IgnoreStopEventsFromInterrupts (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UUsableItemsActionRulesBlueprintFunctionLibrary::STATIC_AddHoldToUseActionRule(class UClass* StartInput, class UClass* EndInput, class AActor* Item, bool SplitActionRules, TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackToUse, bool IgnoreEventsFromOtherTracks, bool IgnoreStopEventsFromInterrupts)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableItemsActionRulesBlueprintFunctionLibrary.AddHoldToUseActionRule");

	UUsableItemsActionRulesBlueprintFunctionLibrary_AddHoldToUseActionRule_Params params;
	params.StartInput = StartInput;
	params.EndInput = EndInput;
	params.Item = Item;
	params.SplitActionRules = SplitActionRules;
	params.TrackToUse = TrackToUse;
	params.IgnoreEventsFromOtherTracks = IgnoreEventsFromOtherTracks;
	params.IgnoreStopEventsFromInterrupts = IgnoreStopEventsFromInterrupts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUsableItemsActionRulesBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UUsableItemsActionRulesBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.UsableWieldableComponent.Server_TriggerOneShotUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UUsableWieldableComponent::Server_TriggerOneShotUse(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableWieldableComponent.Server_TriggerOneShotUse");

	UUsableWieldableComponent_Server_TriggerOneShotUse_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UsableWieldableComponent.Multicast_TriggerOneShotUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UUsableWieldableComponent::Multicast_TriggerOneShotUse(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableWieldableComponent.Multicast_TriggerOneShotUse");

	UUsableWieldableComponent_Multicast_TriggerOneShotUse_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUsableWieldableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UUsableWieldableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.UseItemActionStateId.PushCharacterIntoUseItemActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Usable                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackToUse                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUseItemActionStateId::STATIC_PushCharacterIntoUseItemActionState(class AActor* Character, class AActor* Usable, class UClass* InputID, TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackToUse)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseItemActionStateId.PushCharacterIntoUseItemActionState");

	UUseItemActionStateId_PushCharacterIntoUseItemActionState_Params params;
	params.Character = Character;
	params.Usable = Usable;
	params.InputID = InputID;
	params.TrackToUse = TrackToUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UseItemActionStateId.PopCharacterOutOfUseItemActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackToUse                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUseItemActionStateId::STATIC_PopCharacterOutOfUseItemActionState(class AActor* Character, TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackToUse)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UseItemActionStateId.PopCharacterOutOfUseItemActionState");

	UUseItemActionStateId_PopCharacterOutOfUseItemActionState_Params params;
	params.Character = Character;
	params.TrackToUse = TrackToUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UUseItemActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UUseItemActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UWieldableInteractableComponent::AfterRead()
{
	UActionRulesInteractableComponent::AfterRead();

	READ_PTR_FULL(WieldableItem, AWieldableItem);
}

void UWieldableInteractableComponent::BeforeDelete()
{
	UActionRulesInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(WieldableItem);
}

// Function Athena.WieldableItemAnimationInterface.TriggerOneShotAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UWieldableItemAnimationInterface::TriggerOneShotAnimation(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.TriggerOneShotAnimation");

	UWieldableItemAnimationInterface_TriggerOneShotAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.StartUnequipAnimation
// (Native, Public, BlueprintCallable)
void UWieldableItemAnimationInterface::StartUnequipAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.StartUnequipAnimation");

	UWieldableItemAnimationInterface_StartUnequipAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.StartOutOfContinuousUseAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UWieldableItemAnimationInterface::StartOutOfContinuousUseAnimation(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.StartOutOfContinuousUseAnimation");

	UWieldableItemAnimationInterface_StartOutOfContinuousUseAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.StartIntoContinuousAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UWieldableItemAnimationInterface::StartIntoContinuousAnimation(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.StartIntoContinuousAnimation");

	UWieldableItemAnimationInterface_StartIntoContinuousAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.StartEquipAnimation
// (Native, Public, BlueprintCallable)
void UWieldableItemAnimationInterface::StartEquipAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.StartEquipAnimation");

	UWieldableItemAnimationInterface_StartEquipAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.StartContinuousAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UWieldableItemAnimationInterface::StartContinuousAnimation(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.StartContinuousAnimation");

	UWieldableItemAnimationInterface_StartContinuousAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.ReturnToIdle
// (Native, Public, BlueprintCallable)
void UWieldableItemAnimationInterface::ReturnToIdle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.ReturnToIdle");

	UWieldableItemAnimationInterface_ReturnToIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemAnimationInterface.IsEquipAnimationPlaying
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemAnimationInterface::IsEquipAnimationPlaying()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemAnimationInterface.IsEquipAnimationPlaying");

	UWieldableItemAnimationInterface_IsEquipAnimationPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWieldableItemAnimationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldableItemAnimationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWieldableItemAnimationStoreId::AfterRead()
{
	UAnimationDataStoreId::AfterRead();

}

void UWieldableItemAnimationStoreId::BeforeDelete()
{
	UAnimationDataStoreId::BeforeDelete();

}

void UUnarmedCombatWieldableItemAnimationStoreId::AfterRead()
{
	UWieldableItemAnimationStoreId::AfterRead();

}

void UUnarmedCombatWieldableItemAnimationStoreId::BeforeDelete()
{
	UWieldableItemAnimationStoreId::BeforeDelete();

}

void UWieldableItemPersistentCooldownInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldableItemPersistentCooldownInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWieldableItemPersistentCooldownComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWieldableItemPersistentCooldownComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.WieldableItemSetInterface.RemoveItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetInterface::RemoveItem(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.RemoveItem");

	UWieldableItemSetInterface_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetSlotForItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UWieldableItemSetInterface::GetSlotForItem(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetSlotForItem");

	UWieldableItemSetInterface_GetSlotForItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetNumItemsOfType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetInterface::GetNumItemsOfType(class UClass* Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetNumItemsOfType");

	UWieldableItemSetInterface_GetNumItemsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetNumItemsOfCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetInterface::GetNumItemsOfCategory(class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetNumItemsOfCategory");

	UWieldableItemSetInterface_GetNumItemsOfCategory_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetNumItems
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetInterface::GetNumItems()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetNumItems");

	UWieldableItemSetInterface_GetNumItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemsOfCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UWieldableItemSetInterface::GetItemsOfCategory(class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetItemsOfCategory");

	UWieldableItemSetInterface_GetItemsOfCategory_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemIndexInCategorySet
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetInterface::GetItemIndexInCategorySet(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetItemIndexInCategorySet");

	UWieldableItemSetInterface_GetItemIndexInCategorySet_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetInterface::GetItemIndex(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetItemIndex");

	UWieldableItemSetInterface_GetItemIndex_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemFromSlot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UWieldableItemSetInterface::GetItemFromSlot(class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetItemFromSlot");

	UWieldableItemSetInterface_GetItemFromSlot_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UWieldableItemSetInterface::GetItem(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.GetItem");

	UWieldableItemSetInterface_GetItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.ContainsItemOfType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetInterface::ContainsItemOfType(class UClass* ItemType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.ContainsItemOfType");

	UWieldableItemSetInterface_ContainsItemOfType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.Contains
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetInterface::Contains(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.Contains");

	UWieldableItemSetInterface_Contains_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.AddItemToSlot
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetInterface::AddItemToSlot(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.AddItemToSlot");

	UWieldableItemSetInterface_AddItemToSlot_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.AddItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetInterface::AddItem(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetInterface.AddItem");

	UWieldableItemSetInterface_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWieldableItemSetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldableItemSetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWieldableItemVfxComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ActiveVfx, UParticleSystemComponent);
	READ_PTR_FULL(WieldedVfxTemplate, UObject);
}

void UWieldableItemVfxComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ActiveVfx);
	DELE_PTR_FULL(WieldedVfxTemplate);
}

void ASkeletalMeshWieldableReplica::AfterRead()
{
	AWieldableReplica::AfterRead();

}

void ASkeletalMeshWieldableReplica::BeforeDelete()
{
	AWieldableReplica::BeforeDelete();

}

void UWieldableStashPointInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldableStashPointInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WieldedItemInterface.WieldItem
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           Fast                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> UWieldedItemInterface::WieldItem(bool Fast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.WieldItem");

	UWieldedItemInterface_WieldItem_Params params;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldedItemInterface.UnstashItem
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStashReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemInterface::UnstashItem(TEnumAsByte<Athena_EStashReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.UnstashItem");

	UWieldedItemInterface_UnstashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemInterface.StashItem
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStashReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemInterface::StashItem(TEnumAsByte<Athena_EStashReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.StashItem");

	UWieldedItemInterface_StashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemInterface.SlowStashItem
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStashReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemInterface::SlowStashItem(TEnumAsByte<Athena_EStashReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.SlowStashItem");

	UWieldedItemInterface_SlowStashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemInterface.ShouldDropLargeItemOnDestroy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldedItemInterface::ShouldDropLargeItemOnDestroy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.ShouldDropLargeItemOnDestroy");

	UWieldedItemInterface_ShouldDropLargeItemOnDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldedItemInterface.GetWieldedItemIfNotStashed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
void UWieldedItemInterface::GetWieldedItemIfNotStashed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.GetWieldedItemIfNotStashed");

	UWieldedItemInterface_GetWieldedItemIfNotStashed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemInterface.GetWieldedItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
void UWieldedItemInterface::GetWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemInterface.GetWieldedItem");

	UWieldedItemInterface_GetWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWieldedItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldedItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWieldedItemSizeOneShotInteractableFilterDesc::AfterRead()
{
	UOneShotInteractableFilterDesc::AfterRead();

}

void UWieldedItemSizeOneShotInteractableFilterDesc::BeforeDelete()
{
	UOneShotInteractableFilterDesc::BeforeDelete();

}

// Function Athena.WielderAnimationInterface.SetItemVisibility
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           Visibility                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UWielderAnimationInterface::SetItemVisibility(bool Visibility)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WielderAnimationInterface.SetItemVisibility");

	UWielderAnimationInterface_SetItemVisibility_Params params;
	params.Visibility = Visibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WielderAnimationInterface.ItemWielded
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FWieldAnimationParams   AnimParams                     (Parm, OutParm)
void UWielderAnimationInterface::ItemWielded(struct FWieldAnimationParams* AnimParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WielderAnimationInterface.ItemWielded");

	UWielderAnimationInterface_ItemWielded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AnimParams != nullptr)
		*AnimParams = params.AnimParams;

}


// Function Athena.WielderAnimationInterface.ItemStowed
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool                           FastStow                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UWielderAnimationInterface::ItemStowed(bool FastStow)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WielderAnimationInterface.ItemStowed");

	UWielderAnimationInterface_ItemStowed_Params params;
	params.FastStow = FastStow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WielderAnimationInterface.GetWieldedItemMesh
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UPrimitiveComponent* UWielderAnimationInterface::GetWieldedItemMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WielderAnimationInterface.GetWieldedItemMesh");

	UWielderAnimationInterface_GetWieldedItemMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WielderAnimationInterface.DetachWieldedItem
// (Native, Event, Public, HasOutParms, BlueprintEvent)
void UWielderAnimationInterface::DetachWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WielderAnimationInterface.DetachWieldedItem");

	UWielderAnimationInterface_DetachWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WielderAnimationInterface.AttachWieldedItem
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FWieldAnimationParams   AnimParams                     (ConstParm, Parm, OutParm, ReferenceParm)
void UWielderAnimationInterface::AttachWieldedItem(const struct FWieldAnimationParams& AnimParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WielderAnimationInterface.AttachWieldedItem");

	UWielderAnimationInterface_AttachWieldedItem_Params params;
	params.AnimParams = AnimParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWielderAnimationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWielderAnimationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWielderWwiseEmitterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWielderWwiseEmitterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWieldingParamsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWieldingParamsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UConstellationAudioEventsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UConstellationAudioEventsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UConstellationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UConstellationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AConstellation::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ConstellationMesh, UStaticMeshComponent);
	READ_PTR_FULL(StartBespokeSFX, UWwiseEvent);
	READ_PTR_FULL(StopBespokeSFX, UWwiseEvent);
	READ_PTR_FULL(StartInitialRevealSFX, UWwiseEvent);
	READ_PTR_FULL(StopInitialRevealSFX, UWwiseEvent);
	READ_PTR_FULL(StartFullyRevealedSFX, UWwiseEvent);
	READ_PTR_FULL(StopFullyRevealedSFX, UWwiseEvent);
	READ_PTR_FULL(StartInitialRevealMusic, UWwiseEvent);
	READ_PTR_FULL(StopInitialRevealMusic, UWwiseEvent);
}

void AConstellation::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ConstellationMesh);
	DELE_PTR_FULL(StartBespokeSFX);
	DELE_PTR_FULL(StopBespokeSFX);
	DELE_PTR_FULL(StartInitialRevealSFX);
	DELE_PTR_FULL(StopInitialRevealSFX);
	DELE_PTR_FULL(StartFullyRevealedSFX);
	DELE_PTR_FULL(StopFullyRevealedSFX);
	DELE_PTR_FULL(StartInitialRevealMusic);
	DELE_PTR_FULL(StopInitialRevealMusic);
}

void UConstellationsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UConstellationsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMerchantQuestRequiredItemsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMerchantQuestRequiredItemsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.Mermaid.OnRep_State
// (Final, Native, Private)
void AMermaid::OnRep_State()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mermaid.OnRep_State");

	AMermaid_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Mermaid.IsBeaconActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AMermaid::IsBeaconActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mermaid.IsBeaconActive");

	AMermaid_IsBeaconActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mermaid.GetUniqueMermaidId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AMermaid::GetUniqueMermaidId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mermaid.GetUniqueMermaidId");

	AMermaid_GetUniqueMermaidId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mermaid.GetCrewIdsResponsibleForSavingAsCopy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGuid>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FGuid> AMermaid::GetCrewIdsResponsibleForSavingAsCopy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mermaid.GetCrewIdsResponsibleForSavingAsCopy");

	AMermaid_GetCrewIdsResponsibleForSavingAsCopy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Mermaid.AddCrewResponsibleForSaving
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   CrewId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMermaid::AddCrewResponsibleForSaving(const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Mermaid.AddCrewResponsibleForSaving");

	AMermaid_AddCrewResponsibleForSaving_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMermaid::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(AIPartsRetrievalComponent, UAIPartsRetrievalComponent);
	READ_PTR_FULL(BuoyancyScalarWhenDisappearing, UCurveFloat);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(BeaconVfx, UObject);
	READ_PTR_FULL(BeaconVfxUnderwater, UObject);
	READ_PTR_FULL(SurfacingSplash, UObject);
	READ_PTR_FULL(DiveSplash, UObject);
	READ_PTR_FULL(TorchVfx, UObject);
	READ_PTR_FULL(PlaySongEvent, UWwiseEvent);
	READ_PTR_FULL(StopSongEvent, UWwiseEvent);
	READ_PTR_FULL(PlayTorchCrackleFx, UWwiseEvent);
	READ_PTR_FULL(StopTorchCrackleFx, UWwiseEvent);
	READ_PTR_FULL(SurfacingAudioEvent, UWwiseEvent);
	READ_PTR_FULL(DiveAudioEvent, UWwiseEvent);
	READ_PTR_FULL(TeleportSfxEvent, UWwiseEvent);
	READ_PTR_FULL(Mesh, USkeletalMeshMemoryConstraintComponent);
	READ_PTR_FULL(PrimitiveRootComponent, UPrimitiveComponent);
	READ_PTR_FULL(BeaconParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(UnderwaterBeaconParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(TorchParticleSystem, UParticleSystemComponent);
}

void AMermaid::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(AIPartsRetrievalComponent);
	DELE_PTR_FULL(BuoyancyScalarWhenDisappearing);
	DELE_PTR_FULL(SfxPool);
	DELE_PTR_FULL(BeaconVfx);
	DELE_PTR_FULL(BeaconVfxUnderwater);
	DELE_PTR_FULL(SurfacingSplash);
	DELE_PTR_FULL(DiveSplash);
	DELE_PTR_FULL(TorchVfx);
	DELE_PTR_FULL(PlaySongEvent);
	DELE_PTR_FULL(StopSongEvent);
	DELE_PTR_FULL(PlayTorchCrackleFx);
	DELE_PTR_FULL(StopTorchCrackleFx);
	DELE_PTR_FULL(SurfacingAudioEvent);
	DELE_PTR_FULL(DiveAudioEvent);
	DELE_PTR_FULL(TeleportSfxEvent);
	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(PrimitiveRootComponent);
	DELE_PTR_FULL(BeaconParticleSystem);
	DELE_PTR_FULL(UnderwaterBeaconParticleSystem);
	DELE_PTR_FULL(TorchParticleSystem);
}

// Function Athena.MermaidServiceInterface.SpawnMermaidForCrewWhoLostShip
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 LostShipPos                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMermaidServiceInterface::SpawnMermaidForCrewWhoLostShip(const struct FGuid& CrewId, const struct FVector& LostShipPos)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MermaidServiceInterface.SpawnMermaidForCrewWhoLostShip");

	UMermaidServiceInterface_SpawnMermaidForCrewWhoLostShip_Params params;
	params.CrewId = CrewId;
	params.LostShipPos = LostShipPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MermaidServiceInterface.DebugEnableMermaidSpawning
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           Flag                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UMermaidServiceInterface::DebugEnableMermaidSpawning(bool Flag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MermaidServiceInterface.DebugEnableMermaidSpawning");

	UMermaidServiceInterface_DebugEnableMermaidSpawning_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMermaidServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMermaidServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MermaidService.SetParams
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMermaidServiceParams   P                              (ConstParm, Parm, OutParm, ReferenceParm)
void AMermaidService::SetParams(const struct FMermaidServiceParams& P)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MermaidService.SetParams");

	AMermaidService_SetParams_Params params;
	params.P = P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MermaidService.IsMermaidActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMermaid*                M                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AMermaidService::IsMermaidActive(class AMermaid* M)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MermaidService.IsMermaidActive");

	AMermaidService_IsMermaidActive_Params params;
	params.M = M;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MermaidService.GetParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMermaidServiceParams   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)
struct FMermaidServiceParams AMermaidService::GetParams()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MermaidService.GetParams");

	AMermaidService_GetParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MermaidService.GetNumActiveMermaids
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AMermaidService::GetNumActiveMermaids()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MermaidService.GetNumActiveMermaids");

	AMermaidService_GetNumActiveMermaids_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AMermaidService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MermaidBP, UClass);
	READ_PTR_FULL(MermaidPartsCategory, UAIPartsCategory);
}

void AMermaidService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MermaidBP);
	DELE_PTR_FULL(MermaidPartsCategory);
}

void AMessageInABottleItemProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

	READ_PTR_FULL(OnBottleOpenedSfx, UWwiseEvent);
}

void AMessageInABottleItemProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

	DELE_PTR_FULL(OnBottleOpenedSfx);
}

void UMetalAIFormDataAsset::AfterRead()
{
	UAthenaAIFormDataAsset::AfterRead();

}

void UMetalAIFormDataAsset::BeforeDelete()
{
	UAthenaAIFormDataAsset::BeforeDelete();

}

// Function Athena.MigrationActionStateId.PushCharacterIntoMigrationActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           EnableMigrationUI              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UMigrationActionStateId::STATIC_PushCharacterIntoMigrationActionState(class AAthenaCharacter* Character, bool EnableMigrationUI)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MigrationActionStateId.PushCharacterIntoMigrationActionState");

	UMigrationActionStateId_PushCharacterIntoMigrationActionState_Params params;
	params.Character = Character;
	params.EnableMigrationUI = EnableMigrationUI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMigrationActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UMigrationActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UMigrationCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UMigrationCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void UMigrationService::AfterRead()
{
	UObject::AfterRead();

}

void UMigrationService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UContestAwardScoreForItemDugUpStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UContestAwardScoreForItemDugUpStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTavernCeremonyInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTavernCeremonyInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UContestCeremonyEventsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UContestCeremonyEventsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UShipLiveryCatalogueDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShipLiveryCatalogueDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCrewServiceCostumeInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCrewServiceCostumeInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UServerNotificationsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UServerNotificationsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UServerNotificationsService::AfterRead()
{
	UObject::AfterRead();

}

void UServerNotificationsService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.ContestCeremoniesComponent.MulticastTriggerLaunchLeaderboardBlind
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<struct FCrewScore>      SortedScores                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FShipIdentityOwnership> CrewShipData                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FText>           SortedLeaderboardMessages      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// float                          ScoreboardHoldDuration         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UContestCeremoniesComponent::MulticastTriggerLaunchLeaderboardBlind(TArray<struct FCrewScore> SortedScores, TArray<struct FShipIdentityOwnership> CrewShipData, TArray<struct FText> SortedLeaderboardMessages, float ScoreboardHoldDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestCeremoniesComponent.MulticastTriggerLaunchLeaderboardBlind");

	UContestCeremoniesComponent_MulticastTriggerLaunchLeaderboardBlind_Params params;
	params.SortedScores = SortedScores;
	params.CrewShipData = CrewShipData;
	params.SortedLeaderboardMessages = SortedLeaderboardMessages;
	params.ScoreboardHoldDuration = ScoreboardHoldDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestCeremoniesComponent.MulticastTriggerLaunchContestStartBlind
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FString                 ContestName                    (Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<struct FShipIdentityOwnership> CrewShipData                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// float                          BlindHoldDuration              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UContestCeremoniesComponent::MulticastTriggerLaunchContestStartBlind(const struct FString& ContestName, TArray<struct FShipIdentityOwnership> CrewShipData, float BlindHoldDuration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestCeremoniesComponent.MulticastTriggerLaunchContestStartBlind");

	UContestCeremoniesComponent_MulticastTriggerLaunchContestStartBlind_Params params;
	params.ContestName = ContestName;
	params.CrewShipData = CrewShipData;
	params.BlindHoldDuration = BlindHoldDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestCeremoniesComponent.MulticastTriggerAudioEvent
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<class UWwiseEvent*>     EmitterEvents                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void UContestCeremoniesComponent::MulticastTriggerAudioEvent(TArray<class UWwiseEvent*> EmitterEvents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestCeremoniesComponent.MulticastTriggerAudioEvent");

	UContestCeremoniesComponent_MulticastTriggerAudioEvent_Params params;
	params.EmitterEvents = EmitterEvents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ContestCeremoniesComponent.MulticastStopAllCeremonyAudioEvent
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<class UWwiseEvent*>     EmitterEvents                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)
void UContestCeremoniesComponent::MulticastStopAllCeremonyAudioEvent(TArray<class UWwiseEvent*> EmitterEvents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestCeremoniesComponent.MulticastStopAllCeremonyAudioEvent");

	UContestCeremoniesComponent_MulticastStopAllCeremonyAudioEvent_Params params;
	params.EmitterEvents = EmitterEvents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UContestCeremoniesComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ContestEventsDataAsset, UContestCeremonyEventsDataAsset);
}

void UContestCeremoniesComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ContestEventsDataAsset);
}

// Function Athena.ContestManagerDebugRepActor.OnRep_CrewContestInfoList
// (Final, Native, Private)
void AContestManagerDebugRepActor::OnRep_CrewContestInfoList()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ContestManagerDebugRepActor.OnRep_CrewContestInfoList");

	AContestManagerDebugRepActor_OnRep_CrewContestInfoList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AContestManagerDebugRepActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ContestManagerService, AContestManagerService);
}

void AContestManagerDebugRepActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ContestManagerService);
}

// Function Athena.OffBottomTransitionLadderActionStateId.PushCharacterIntoOffBottomTransitionLadderActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  LadderActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InteractingHeight              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  ClimbId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLadderDefinition       LadderDefinition               (ConstParm, Parm, OutParm, ReferenceParm)
void UOffBottomTransitionLadderActionStateId::STATIC_PushCharacterIntoOffBottomTransitionLadderActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OffBottomTransitionLadderActionStateId.PushCharacterIntoOffBottomTransitionLadderActionState");

	UOffBottomTransitionLadderActionStateId_PushCharacterIntoOffBottomTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOffBottomTransitionLadderActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UOffBottomTransitionLadderActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.OffTopTransitionLadderActionStateId.PushCharacterIntoOffTopTransitionLadderActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  LadderActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InteractingHeight              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  ClimbId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLadderDefinition       LadderDefinition               (ConstParm, Parm, OutParm, ReferenceParm)
void UOffTopTransitionLadderActionStateId::STATIC_PushCharacterIntoOffTopTransitionLadderActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OffTopTransitionLadderActionStateId.PushCharacterIntoOffTopTransitionLadderActionState");

	UOffTopTransitionLadderActionStateId_PushCharacterIntoOffTopTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOffTopTransitionLadderActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UOffTopTransitionLadderActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UOffworldStrainDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UOffworldStrainDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UOnboardCharacterTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UOnboardCharacterTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.OnboardingFunctionLibrary.TriggerUIWithTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       LocalPlayerController          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TAssetPtr<class UTexture2D>    Texture                        (ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash)
// float                          FadeUpTime                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DisplayTime                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          FadeDownTime                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStartGameNarrativePositionX> AlignX                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStartGameNarrativePositionY> AlignY                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStartGameNarrativeMediaSize> Size                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UOnboardingFunctionLibrary::STATIC_TriggerUIWithTexture(class APlayerController* LocalPlayerController, TAssetPtr<class UTexture2D> Texture, float FadeUpTime, float DisplayTime, float FadeDownTime, TEnumAsByte<Athena_EStartGameNarrativePositionX> AlignX, TEnumAsByte<Athena_EStartGameNarrativePositionY> AlignY, TEnumAsByte<Athena_EStartGameNarrativeMediaSize> Size)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OnboardingFunctionLibrary.TriggerUIWithTexture");

	UOnboardingFunctionLibrary_TriggerUIWithTexture_Params params;
	params.LocalPlayerController = LocalPlayerController;
	params.Texture = Texture;
	params.FadeUpTime = FadeUpTime;
	params.DisplayTime = DisplayTime;
	params.FadeDownTime = FadeDownTime;
	params.AlignX = AlignX;
	params.AlignY = AlignY;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OnboardingFunctionLibrary.TriggerUIWithText
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController*       LocalPlayerController          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FText                   Text                           (ConstParm, Parm, OutParm, ReferenceParm)
// float                          FadeUpTime                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DisplayTime                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          FadeDownTime                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStartGameNarrativePositionX> AlignX                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStartGameNarrativePositionY> AlignY                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStartGameNarrativeMediaSize> Size                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UOnboardingFunctionLibrary::STATIC_TriggerUIWithText(class APlayerController* LocalPlayerController, const struct FText& Text, float FadeUpTime, float DisplayTime, float FadeDownTime, TEnumAsByte<Athena_EStartGameNarrativePositionX> AlignX, TEnumAsByte<Athena_EStartGameNarrativePositionY> AlignY, TEnumAsByte<Athena_EStartGameNarrativeMediaSize> Size)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OnboardingFunctionLibrary.TriggerUIWithText");

	UOnboardingFunctionLibrary_TriggerUIWithText_Params params;
	params.LocalPlayerController = LocalPlayerController;
	params.Text = Text;
	params.FadeUpTime = FadeUpTime;
	params.DisplayTime = DisplayTime;
	params.FadeDownTime = FadeDownTime;
	params.AlignX = AlignX;
	params.AlignY = AlignY;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOnboardingFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UOnboardingFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.OnBottomTransitionLadderActionStateId.PushCharacterIntoOnBottomTransitionLadderActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  LadderActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InteractingHeight              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  ClimbId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLadderDefinition       LadderDefinition               (ConstParm, Parm, OutParm, ReferenceParm)
void UOnBottomTransitionLadderActionStateId::STATIC_PushCharacterIntoOnBottomTransitionLadderActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OnBottomTransitionLadderActionStateId.PushCharacterIntoOnBottomTransitionLadderActionState");

	UOnBottomTransitionLadderActionStateId_PushCharacterIntoOnBottomTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOnBottomTransitionLadderActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UOnBottomTransitionLadderActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UOnDigStrategy::AfterRead()
{
	UObject::AfterRead();

}

void UOnDigStrategy::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UOnDigTriggerFuse::AfterRead()
{
	UOnDigStrategy::AfterRead();

}

void UOnDigTriggerFuse::BeforeDelete()
{
	UOnDigStrategy::BeforeDelete();

}

void UOneShotUsableMock::AfterRead()
{
	UObject::AfterRead();

}

void UOneShotUsableMock::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UOnHitByLightningInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UOnHitByLightningInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.OnTopTransitionLadderActionStateId.PushCharacterIntoOnTopTransitionLadderActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  LadderActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InteractingHeight              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  ClimbId                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLadderDefinition       LadderDefinition               (ConstParm, Parm, OutParm, ReferenceParm)
void UOnTopTransitionLadderActionStateId::STATIC_PushCharacterIntoOnTopTransitionLadderActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<Athena_ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OnTopTransitionLadderActionStateId.PushCharacterIntoOnTopTransitionLadderActionState");

	UOnTopTransitionLadderActionStateId_PushCharacterIntoOnTopTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOnTopTransitionLadderActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UOnTopTransitionLadderActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UOnTutorialStepNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UOnTutorialStepNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UOpenChatboxNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UOpenChatboxNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UOpenEscapeMenuNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UOpenEscapeMenuNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UOtherCrewNameplatesToggleInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UOtherCrewNameplatesToggleInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UOverrideProgressSpawnStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UOverrideProgressSpawnStepDesc);
}

void UOverrideProgressSpawnStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UOverrideProgressSpawnStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(ProgressId, UClass);
}

void UOverrideProgressSpawnStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(ProgressId);
}

void UPacingComponentPublicData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PacingCameraCurve, UCurveFloat);
	READ_PTR_FULL(TakingAStepRumble, UForceFeedbackEffect);
	READ_PTR_FULL(TakingAStepAudioStateEvent, UWwiseEvent);
}

void UPacingComponentPublicData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PacingCameraCurve);
	DELE_PTR_FULL(TakingAStepRumble);
	DELE_PTR_FULL(TakingAStepAudioStateEvent);
}

// Function Athena.PacingComponent.StopPacing
// (Final, Native, Public, BlueprintCallable)
void UPacingComponent::StopPacing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PacingComponent.StopPacing");

	UPacingComponent_StopPacing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PacingComponent.StartPacing
// (Final, Native, Public, BlueprintCallable)
void UPacingComponent::StartPacing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PacingComponent.StartPacing");

	UPacingComponent_StartPacing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PacingComponent.IsPacing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPacingComponent::IsPacing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PacingComponent.IsPacing");

	UPacingComponent_IsPacing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPacingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PublicData, UPacingComponentPublicData);
	READ_PTR_FULL(Player, AAthenaPlayerCharacter);
}

void UPacingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PublicData);
	DELE_PTR_FULL(Player);
}

void UShipCustomizationChestViewModelComponent::AfterRead()
{
	UPossessionsChestViewModel::AfterRead();

	READ_PTR_FULL(AllianceFlagCategory, UClass);
	READ_PTR_FULL(JoinAllianceDesc, UClass);
	READ_PTR_FULL(LeaveAllianceDesc, UClass);
	READ_PTR_FULL(LastRequestedCategory, UClass);
}

void UShipCustomizationChestViewModelComponent::BeforeDelete()
{
	UPossessionsChestViewModel::BeforeDelete();

	DELE_PTR_FULL(AllianceFlagCategory);
	DELE_PTR_FULL(JoinAllianceDesc);
	DELE_PTR_FULL(LeaveAllianceDesc);
	DELE_PTR_FULL(LastRequestedCategory);
}

void UPremiumCatalogLandingPageItemDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPremiumCatalogLandingPageItemDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URiddleTextPhrasebookDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URiddleTextPhrasebookDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ASharkActionStateCreatorDefinition::AfterRead()
{
	AActionStateCreatorDefinition::AfterRead();

}

void ASharkActionStateCreatorDefinition::BeforeDelete()
{
	AActionStateCreatorDefinition::BeforeDelete();

}

void USharkAICharacterAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlaySharkAttackTellLoop, UWwiseEvent);
	READ_PTR_FULL(StopSharkAttackTellLoop, UWwiseEvent);
	READ_PTR_FULL(PlaySharkDeath, UWwiseEvent);
	READ_PTR_FULL(PlaySharkHit, UWwiseEvent);
	READ_PTR_FULL(PlaySharkFinLoop, UWwiseEvent);
	READ_PTR_FULL(StopSharkFinLoop, UWwiseEvent);
}

void USharkAICharacterAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlaySharkAttackTellLoop);
	DELE_PTR_FULL(StopSharkAttackTellLoop);
	DELE_PTR_FULL(PlaySharkDeath);
	DELE_PTR_FULL(PlaySharkHit);
	DELE_PTR_FULL(PlaySharkFinLoop);
	DELE_PTR_FULL(StopSharkFinLoop);
}

void USharkAICharacterAudioComponent::AfterRead()
{
	UAICharacterAudioComponent::AfterRead();

	READ_PTR_FULL(SharkAudioParams, USharkAICharacterAudioComponentParams);
	READ_PTR_FULL(CachedStrategyID, UClass);
}

void USharkAICharacterAudioComponent::BeforeDelete()
{
	UAICharacterAudioComponent::BeforeDelete();

	DELE_PTR_FULL(SharkAudioParams);
	DELE_PTR_FULL(CachedStrategyID);
}

void ADebugRegisterDynamicsShip::AfterRead()
{
	AShip::AfterRead();

}

void ADebugRegisterDynamicsShip::BeforeDelete()
{
	AShip::BeforeDelete();

}

void AShipErrorOnNonAuthorityPhysicsChange::AfterRead()
{
	AShip::AfterRead();

	READ_PTR_FULL(HullDragDynamicsDesc, UBaseHullDragDynamicsDesc);
}

void AShipErrorOnNonAuthorityPhysicsChange::BeforeDelete()
{
	AShip::BeforeDelete();

	DELE_PTR_FULL(HullDragDynamicsDesc);
}

void ATestShipActorPhysicsErrorCorrection::AfterRead()
{
	AShip::AfterRead();

}

void ATestShipActorPhysicsErrorCorrection::BeforeDelete()
{
	AShip::BeforeDelete();

}

void UShipAssetClassDatabaseInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipAssetClassDatabaseInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShipAssetClassDatabaseService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(StringToAssetClassMap, UStringToAssetClassMap);
}

void UShipAssetClassDatabaseService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(StringToAssetClassMap);
}

void AShipAudio::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ParentShip, AShip);
}

void AShipAudio::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ParentShip);
}

void UShipAudioEmitterComponent::AfterRead()
{
	UWwiseEmitterComponent::AfterRead();

	READ_PTR_FULL(WwiseEvent, UWwiseEvent);
}

void UShipAudioEmitterComponent::BeforeDelete()
{
	UWwiseEmitterComponent::BeforeDelete();

	DELE_PTR_FULL(WwiseEvent);
}

// Function Athena.ShipHullAudio.StopShroudBreakerShieldSound
// (Final, Native, Public, BlueprintCallable)
void AShipHullAudio::StopShroudBreakerShieldSound()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullAudio.StopShroudBreakerShieldSound");

	AShipHullAudio_StopShroudBreakerShieldSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipHullAudio.PlayShroudBreakerShieldSound
// (Final, Native, Public, BlueprintCallable)
void AShipHullAudio::PlayShroudBreakerShieldSound()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullAudio.PlayShroudBreakerShieldSound");

	AShipHullAudio_PlayShroudBreakerShieldSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShipHullAudio::AfterRead()
{
	AShipAudio::AfterRead();

	READ_PTR_FULL(WwiseEvent_ShipSinking, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_ShipSinkingExceededRollThreshold, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_FloodDamage_Play, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_FloodDamage_Stop, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_SuperheatedWater_Play, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_SuperheatedWater_Stop, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_ShipSinking_Music, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_ShroudBreakerShield, UWwiseEvent);
	READ_PTR_FULL(WwiseEvent_ShipSinking_Music_Pool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(Emitter_MidShip_Pool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ShipAudioRootComponent, USceneComponent);
	READ_PTR_FULL(InternalWater, AShipInternalWater);
}

void AShipHullAudio::BeforeDelete()
{
	AShipAudio::BeforeDelete();

	DELE_PTR_FULL(WwiseEvent_ShipSinking);
	DELE_PTR_FULL(WwiseEvent_ShipSinkingExceededRollThreshold);
	DELE_PTR_FULL(WwiseEvent_FloodDamage_Play);
	DELE_PTR_FULL(WwiseEvent_FloodDamage_Stop);
	DELE_PTR_FULL(WwiseEvent_SuperheatedWater_Play);
	DELE_PTR_FULL(WwiseEvent_SuperheatedWater_Stop);
	DELE_PTR_FULL(WwiseEvent_ShipSinking_Music);
	DELE_PTR_FULL(WwiseEvent_ShroudBreakerShield);
	DELE_PTR_FULL(WwiseEvent_ShipSinking_Music_Pool);
	DELE_PTR_FULL(Emitter_MidShip_Pool);
	DELE_PTR_FULL(ShipAudioRootComponent);
	DELE_PTR_FULL(InternalWater);
}

void UShipBuilder::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Template, AShip);
}

void UShipBuilder::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Template);
}

void AShipCompass::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CompassMesh, UPoseableMeshComponent);
	READ_PTR_FULL(SpinComponent, UCompassSpinComponent);
}

void AShipCompass::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CompassMesh);
	DELE_PTR_FULL(SpinComponent);
}

// Function Athena.ShipFunctionLibrary.SpawnShip
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UShipFunctionLibrary::STATIC_SpawnShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.SpawnShip");

	UShipFunctionLibrary_SpawnShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShipWithCrewId
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGuid                   CrewId                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UShipFunctionLibrary::STATIC_SpawnFunctioningSmallShipWithCrewId(const struct FVector& Pos, const struct FRotator& Rotation, const struct FGuid& CrewId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShipWithCrewId");

	UShipFunctionLibrary_SpawnFunctioningSmallShipWithCrewId_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShip
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UShipFunctionLibrary::STATIC_SpawnFunctioningSmallShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShip");

	UShipFunctionLibrary_SpawnFunctioningSmallShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningMediumShip
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UShipFunctionLibrary::STATIC_SpawnFunctioningMediumShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.SpawnFunctioningMediumShip");

	UShipFunctionLibrary_SpawnFunctioningMediumShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningLargeShip
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Pos                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UShipFunctionLibrary::STATIC_SpawnFunctioningLargeShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.SpawnFunctioningLargeShip");

	UShipFunctionLibrary_SpawnFunctioningLargeShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipFunctionLibrary.GetWheels
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AWheel*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AWheel*> UShipFunctionLibrary::STATIC_GetWheels(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetWheels");

	UShipFunctionLibrary_GetWheels_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetSailHoists
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ASailHoist*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ASailHoist*> UShipFunctionLibrary::STATIC_GetSailHoists(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetSailHoists");

	UShipFunctionLibrary_GetSailHoists_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetSailAnglers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ASailAngle*>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ASailAngle*> UShipFunctionLibrary::STATIC_GetSailAnglers(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetSailAnglers");

	UShipFunctionLibrary_GetSailAnglers_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetLadders
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ALadder*>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ALadder*> UShipFunctionLibrary::STATIC_GetLadders(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetLadders");

	UShipFunctionLibrary_GetLadders_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetInteractablesOfClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Class                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UShipFunctionLibrary::STATIC_GetInteractablesOfClass(class AActor* Actor, class UClass* Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetInteractablesOfClass");

	UShipFunctionLibrary_GetInteractablesOfClass_Params params;
	params.Actor = Actor;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetInteractables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UShipFunctionLibrary::STATIC_GetInteractables(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetInteractables");

	UShipFunctionLibrary_GetInteractables_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetCannons
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ACannon*>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ACannon*> UShipFunctionLibrary::STATIC_GetCannons(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.GetCannons");

	UShipFunctionLibrary_GetCannons_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.CalculateShipRegionBoundsInShipSpace
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EShipRegion> Region                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBox                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FBox UShipFunctionLibrary::STATIC_CalculateShipRegionBoundsInShipSpace(class AActor* Actor, TEnumAsByte<Athena_EShipRegion> Region)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipFunctionLibrary.CalculateShipRegionBoundsInShipSpace");

	UShipFunctionLibrary_CalculateShipRegionBoundsInShipSpace_Params params;
	params.Actor = Actor;
	params.Region = Region;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UShipFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.ShipHullCollisionComponent.PlayShipImpactSfx_RPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void UShipHullCollisionComponent::PlayShipImpactSfx_RPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullCollisionComponent.PlayShipImpactSfx_RPC");

	UShipHullCollisionComponent_PlayShipImpactSfx_RPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipHullCollisionComponent.PlayShipBarrelBumpSfx_RPC
// (Final, Net, Native, Event, NetMulticast, Private)
void UShipHullCollisionComponent::PlayShipBarrelBumpSfx_RPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullCollisionComponent.PlayShipBarrelBumpSfx_RPC");

	UShipHullCollisionComponent_PlayShipBarrelBumpSfx_RPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideHull
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipHullCollisionComponent::IsWorldSpacePositionInsideHull(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideHull");

	UShipHullCollisionComponent_IsWorldSpacePositionInsideHull_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideCabin
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipHullCollisionComponent::IsWorldSpacePositionInsideCabin(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideCabin");

	UShipHullCollisionComponent_IsWorldSpacePositionInsideCabin_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithSolidHits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipHullCollisionComponent::GetIsShipInContactWithSolidHits()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithSolidHits");

	UShipHullCollisionComponent_GetIsShipInContactWithSolidHits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithLand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShipHullCollisionComponent::GetIsShipInContactWithLand()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithLand");

	UShipHullCollisionComponent_GetIsShipInContactWithLand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipHullCollisionComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ImpactStrengthToDamageLevelMapping, UCurveFloat);
	READ_PTR_FULL(HullDamageDataAsset, UShipHullDamageDataAsset);
	READ_PTR_FULL(ShipFwdSpeedToFeedbackAmplitude, UCurveFloat);
	READ_PTR_FULL(FeedbackStrengthToRumbleIndexMapping, UCurveFloat);
	READ_PTR_FULL(CameraShake, UClass);
	READ_PTR_FULL(StartScrapingEvent, UWwiseEvent);
	READ_PTR_FULL(StopScrapingEvent, UWwiseEvent);
	READ_PTR_FULL(BarrelBumpEvent, UWwiseEvent);
	READ_PTR_FULL(ShipDamagePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(Ship, AShip);
}

void UShipHullCollisionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ImpactStrengthToDamageLevelMapping);
	DELE_PTR_FULL(HullDamageDataAsset);
	DELE_PTR_FULL(ShipFwdSpeedToFeedbackAmplitude);
	DELE_PTR_FULL(FeedbackStrengthToRumbleIndexMapping);
	DELE_PTR_FULL(CameraShake);
	DELE_PTR_FULL(StartScrapingEvent);
	DELE_PTR_FULL(StopScrapingEvent);
	DELE_PTR_FULL(BarrelBumpEvent);
	DELE_PTR_FULL(ShipDamagePool);
	DELE_PTR_FULL(Ship);
}

// Function Athena.ShipLightComponent.OnRep_OnLightStateChanged
// (Final, Native, Public)
void UShipLightComponent::OnRep_OnLightStateChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipLightComponent.OnRep_OnLightStateChanged");

	UShipLightComponent_OnRep_OnLightStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipLightComponent.LightStateChanged
// (Event, Public, BlueprintEvent)
void UShipLightComponent::LightStateChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipLightComponent.LightStateChanged");

	UShipLightComponent_LightStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShipLightComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(LightParameters, UInteractableLightParameters);
	READ_PTR_FULL(Ship, AShip);
}

void UShipLightComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(LightParameters);
	DELE_PTR_FULL(Ship);
}

// Function Athena.VoyageGeneratorSimBlackboardFunctions.PrintBlackboard
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVoyageGeneratorSimBlackboard Blackboard                     (ConstParm, Parm, OutParm, ReferenceParm)
void UVoyageGeneratorSimBlackboardFunctions::STATIC_PrintBlackboard(const struct FVoyageGeneratorSimBlackboard& Blackboard)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimBlackboardFunctions.PrintBlackboard");

	UVoyageGeneratorSimBlackboardFunctions_PrintBlackboard_Params params;
	params.Blackboard = Blackboard;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByNameInt
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVoyageGeneratorSimBlackboard Blackboard                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   Name                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<int> UVoyageGeneratorSimBlackboardFunctions::STATIC_GetValuesFromBlackboardByNameInt(const struct FVoyageGeneratorSimBlackboard& Blackboard, const struct FName& Name)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByNameInt");

	UVoyageGeneratorSimBlackboardFunctions_GetValuesFromBlackboardByNameInt_Params params;
	params.Blackboard = Blackboard;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVoyageGeneratorSimBlackboard Blackboard                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   Name                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FString>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FString> UVoyageGeneratorSimBlackboardFunctions::STATIC_GetValuesFromBlackboardByName(const struct FVoyageGeneratorSimBlackboard& Blackboard, const struct FName& Name)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByName");

	UVoyageGeneratorSimBlackboardFunctions_GetValuesFromBlackboardByName_Params params;
	params.Blackboard = Blackboard;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.CombineBlackboards
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FVoyageGeneratorSimBlackboard A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVoyageGeneratorSimBlackboard B                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVoyageGeneratorSimBlackboard ReturnValue                    (Parm, OutParm, ReturnParm)
struct FVoyageGeneratorSimBlackboard UVoyageGeneratorSimBlackboardFunctions::STATIC_CombineBlackboards(const struct FVoyageGeneratorSimBlackboard& A, const struct FVoyageGeneratorSimBlackboard& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimBlackboardFunctions.CombineBlackboards");

	UVoyageGeneratorSimBlackboardFunctions_CombineBlackboards_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVoyageGeneratorSimBlackboardFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UVoyageGeneratorSimBlackboardFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.VoyageGeneratorSimFunctions.GetIslandLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FIsland>         Islands                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FName                   InName                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UVoyageGeneratorSimFunctions::STATIC_GetIslandLocation(TArray<struct FIsland> Islands, const struct FName& InName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimFunctions.GetIslandLocation");

	UVoyageGeneratorSimFunctions_GetIslandLocation_Params params;
	params.Islands = Islands;
	params.InName = InName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimFunctions.GenerateVoyageFromRecipe
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 StartingLocation               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UVoyageRecipeDataAsset*  Recipe                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FIsland>         Islands                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            Seed                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVoyageGeneratorSimResult* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UVoyageGeneratorSimResult* UVoyageGeneratorSimFunctions::STATIC_GenerateVoyageFromRecipe(const struct FVector& StartingLocation, class UVoyageRecipeDataAsset* Recipe, TArray<struct FIsland> Islands, int Seed, class UObject* WorldContextObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimFunctions.GenerateVoyageFromRecipe");

	UVoyageGeneratorSimFunctions_GenerateVoyageFromRecipe_Params params;
	params.StartingLocation = StartingLocation;
	params.Recipe = Recipe;
	params.Islands = Islands;
	params.Seed = Seed;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimFunctions.GenerateDistributionFromRecipe
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UVoyageRecipeDataAsset*  Recipe                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Seed                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<int> UVoyageGeneratorSimFunctions::STATIC_GenerateDistributionFromRecipe(class UVoyageRecipeDataAsset* Recipe, int Seed)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimFunctions.GenerateDistributionFromRecipe");

	UVoyageGeneratorSimFunctions_GenerateDistributionFromRecipe_Params params;
	params.Recipe = Recipe;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVoyageGeneratorSimFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UVoyageGeneratorSimFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.VoyageGeneratorSimResult.VisitChapter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVoyageGeneratorSimBlackboard ReturnValue                    (Parm, OutParm, ReturnParm)
struct FVoyageGeneratorSimBlackboard UVoyageGeneratorSimResult::VisitChapter(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimResult.VisitChapter");

	UVoyageGeneratorSimResult_VisitChapter_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.Visit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVoyageGeneratorSimBlackboard ReturnValue                    (Parm, OutParm, ReturnParm)
struct FVoyageGeneratorSimBlackboard UVoyageGeneratorSimResult::Visit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimResult.Visit");

	UVoyageGeneratorSimResult_Visit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)
struct FText UVoyageGeneratorSimResult::GetTitle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimResult.GetTitle");

	UVoyageGeneratorSimResult_GetTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.GetNumQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UVoyageGeneratorSimResult::GetNumQuests()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimResult.GetNumQuests");

	UVoyageGeneratorSimResult_GetNumQuests_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.GetNumChapters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UVoyageGeneratorSimResult::GetNumChapters()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSimResult.GetNumChapters");

	UVoyageGeneratorSimResult_GetNumChapters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVoyageGeneratorSimResult::AfterRead()
{
	UObject::AfterRead();

}

void UVoyageGeneratorSimResult::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.VoyageInAContainerWieldableItem.Multicast_Opened
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void AVoyageInAContainerWieldableItem::Multicast_Opened()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageInAContainerWieldableItem.Multicast_Opened");

	AVoyageInAContainerWieldableItem_Multicast_Opened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVoyageInAContainerWieldableItem::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(OnOpenedSfx, UWwiseEvent);
}

void AVoyageInAContainerWieldableItem::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(OnOpenedSfx);
}

void UVoyageInventoryViewModelComponent::AfterRead()
{
	UViewModelComponentBase::AfterRead();

	READ_PTR_FULL(PlayerController, APlayerController);
}

void UVoyageInventoryViewModelComponent::BeforeDelete()
{
	UViewModelComponentBase::BeforeDelete();

	DELE_PTR_FULL(PlayerController);
}

void UWaitForUnlockStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForUnlockStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWaitForVaultCompletionStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForVaultCompletionStepDesc);
}

void UWaitForVaultCompletionStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UWaitForVaultCompletionStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForVaultCompletionStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.WaitingToSpawnActionStateId.PushCharacterIntoWaitingToSpawnActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InStartSpot                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportActionStateReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InReceiveLoadout               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           InReceiveEntitlement           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           InWaitForRelevancy             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int                            InStreamOutLevel               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InStreamInLevel                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWaitingToSpawnActionStateId::STATIC_PushCharacterIntoWaitingToSpawnActionState(class AAthenaCharacter* InCharacter, class AActor* InStartSpot, TEnumAsByte<Athena_ETeleportActionStateReason> Reason, bool InReceiveLoadout, bool InReceiveEntitlement, bool InWaitForRelevancy, int InStreamOutLevel, int InStreamInLevel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaitingToSpawnActionStateId.PushCharacterIntoWaitingToSpawnActionState");

	UWaitingToSpawnActionStateId_PushCharacterIntoWaitingToSpawnActionState_Params params;
	params.InCharacter = InCharacter;
	params.InStartSpot = InStartSpot;
	params.Reason = Reason;
	params.InReceiveLoadout = InReceiveLoadout;
	params.InReceiveEntitlement = InReceiveEntitlement;
	params.InWaitForRelevancy = InWaitForRelevancy;
	params.InStreamOutLevel = InStreamOutLevel;
	params.InStreamInLevel = InStreamInLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaitingToSpawnActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UWaitingToSpawnActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UWaitOnCollectableQuestObjectStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UWaitOnCollectableQuestObjectStepDesc);
}

void UWaitOnCollectableQuestObjectStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

// Function Athena.Wheel.UpdateWheelDamageState
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> RepairableState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::UpdateWheelDamageState(TEnumAsByte<Repair_ERepairableState> RepairableState, TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.UpdateWheelDamageState");

	AWheel_UpdateWheelDamageState_Params params;
	params.RepairableState = RepairableState;
	params.InPreviousRepairableState = InPreviousRepairableState;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.SetFullyRepaired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InRepairer                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::SetFullyRepaired(class AActor* InRepairer)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.SetFullyRepaired");

	AWheel_SetFullyRepaired_Params params;
	params.InRepairer = InRepairer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.SetFullyDamaged
// (Final, Native, Public, BlueprintCallable)
void AWheel::SetFullyDamaged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.SetFullyDamaged");

	AWheel_SetFullyDamaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.Server_SetWheelAngle
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float                          WheelAngleIncrement            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::Server_SetWheelAngle(float WheelAngleIncrement)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.Server_SetWheelAngle");

	AWheel_Server_SetWheelAngle_Params params;
	params.WheelAngleIncrement = WheelAngleIncrement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.ReactToRepairableStateChangedWest
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> RepairableState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::ReactToRepairableStateChangedWest(TEnumAsByte<Repair_ERepairableState> RepairableState, TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ReactToRepairableStateChangedWest");

	AWheel_ReactToRepairableStateChangedWest_Params params;
	params.RepairableState = RepairableState;
	params.InPreviousRepairableState = InPreviousRepairableState;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.ReactToRepairableStateChangedSouth
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> RepairableState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::ReactToRepairableStateChangedSouth(TEnumAsByte<Repair_ERepairableState> RepairableState, TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ReactToRepairableStateChangedSouth");

	AWheel_ReactToRepairableStateChangedSouth_Params params;
	params.RepairableState = RepairableState;
	params.InPreviousRepairableState = InPreviousRepairableState;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.ReactToRepairableStateChangedEast
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> RepairableState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::ReactToRepairableStateChangedEast(TEnumAsByte<Repair_ERepairableState> RepairableState, TEnumAsByte<Repair_ERepairableState> InPreviousRepairableState, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ReactToRepairableStateChangedEast");

	AWheel_ReactToRepairableStateChangedEast_Params params;
	params.RepairableState = RepairableState;
	params.InPreviousRepairableState = InPreviousRepairableState;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.ReactToDamage
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void AWheel::ReactToDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ReactToDamage");

	AWheel_ReactToDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.OnRep_ServerWheelAngle
// (Final, Native, Private)
void AWheel::OnRep_ServerWheelAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.OnRep_ServerWheelAngle");

	AWheel_OnRep_ServerWheelAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.Multicast_ForceSetWheelAngle
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::Multicast_ForceSetWheelAngle(float Angle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.Multicast_ForceSetWheelAngle");

	AWheel_Multicast_ForceSetWheelAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.GetWheelMesh
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class USkeletalMeshComponent* AWheel::GetWheelMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.GetWheelMesh");

	AWheel_GetWheelMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Wheel.GetRepairableComponentByLabel
// (Final, Native, Public, HasOutParms, Const)
// Parameters:
// TEnumAsByte<Athena_EWheelFractureLabel> Label                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class URepairableComponent* AWheel::GetRepairableComponentByLabel(TEnumAsByte<Athena_EWheelFractureLabel> Label)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.GetRepairableComponentByLabel");

	AWheel_GetRepairableComponentByLabel_Params params;
	params.Label = Label;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Wheel.GetMinWheelAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AWheel::GetMinWheelAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.GetMinWheelAngle");

	AWheel_GetMinWheelAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Wheel.GetMaxWheelAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AWheel::GetMaxWheelAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.GetMaxWheelAngle");

	AWheel_GetMaxWheelAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Wheel.GetMaxLevelOfDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AWheel::GetMaxLevelOfDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.GetMaxLevelOfDamage");

	AWheel_GetMaxLevelOfDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Wheel.GetLevelOfDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AWheel::GetLevelOfDamage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.GetLevelOfDamage");

	AWheel_GetLevelOfDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Wheel.ForceSetWheelAngle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                          Angle                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::ForceSetWheelAngle(float Angle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ForceSetWheelAngle");

	AWheel_ForceSetWheelAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.BindToRepairableComponents
// (Final, Native, Protected)
void AWheel::BindToRepairableComponents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.BindToRepairableComponents");

	AWheel_BindToRepairableComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.BindToDamageComponent
// (Final, Native, Protected)
void AWheel::BindToDamageComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.BindToDamageComponent");

	AWheel_BindToDamageComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.ApplyWheelInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWheel::ApplyWheelInput(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ApplyWheelInput");

	AWheel_ApplyWheelInput_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Wheel.ApplyDamage
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void AWheel::ApplyDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Wheel.ApplyDamage");

	AWheel_ApplyDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AWheel::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(CustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(CenteredForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(TurbulenceForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(SteeringForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(EmitterPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(WheelStartedMovingEvent, UWwiseEvent);
	READ_PTR_FULL(WheelHasStoppedEvent, UWwiseEvent);
	READ_PTR_FULL(WheelIsStoppingEvent, UWwiseEvent);
	READ_PTR_FULL(DamagedWheelStartedMovingEvent, UWwiseEvent);
	READ_PTR_FULL(DamagedWheelHasStoppedEvent, UWwiseEvent);
	READ_PTR_FULL(DamagedWheelIsStoppingEvent, UWwiseEvent);
	READ_PTR_FULL(WheelCenteredEvent, UWwiseEvent);
	READ_PTR_FULL(FightingTurbulenceStartEvent, UWwiseEvent);
	READ_PTR_FULL(FightingTurbulenceStopEvent, UWwiseEvent);
	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(PlayerCollisionComponent, UBoxComponent);
	READ_PTR_FULL(WheelDamageComponent, UShipDamageableComponent);
	READ_PTR_FULL(RepairableComponentWest, URepairableComponent);
	READ_PTR_FULL(RepairableComponentEast, URepairableComponent);
	READ_PTR_FULL(RepairableComponentSouth, URepairableComponent);
	READ_PTR_FULL(WheelDamageParticleSystem, UParticleSystem);
	READ_PTR_FULL(WheelDamageLevelAudio, UDamageableShipPartAudioParams);
}

void AWheel::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(CustomizationComponent);
	DELE_PTR_FULL(CenteredForceFeedbackEffect);
	DELE_PTR_FULL(TurbulenceForceFeedbackEffect);
	DELE_PTR_FULL(SteeringForceFeedbackEffect);
	DELE_PTR_FULL(EmitterPool);
	DELE_PTR_FULL(WheelStartedMovingEvent);
	DELE_PTR_FULL(WheelHasStoppedEvent);
	DELE_PTR_FULL(WheelIsStoppingEvent);
	DELE_PTR_FULL(DamagedWheelStartedMovingEvent);
	DELE_PTR_FULL(DamagedWheelHasStoppedEvent);
	DELE_PTR_FULL(DamagedWheelIsStoppingEvent);
	DELE_PTR_FULL(WheelCenteredEvent);
	DELE_PTR_FULL(FightingTurbulenceStartEvent);
	DELE_PTR_FULL(FightingTurbulenceStopEvent);
	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(PlayerCollisionComponent);
	DELE_PTR_FULL(WheelDamageComponent);
	DELE_PTR_FULL(RepairableComponentWest);
	DELE_PTR_FULL(RepairableComponentEast);
	DELE_PTR_FULL(RepairableComponentSouth);
	DELE_PTR_FULL(WheelDamageParticleSystem);
	DELE_PTR_FULL(WheelDamageLevelAudio);
}

// Function Athena.WheelAnimInstance.ReactToWheelDamageStateChanged
// (Final, Native, Protected)
void UWheelAnimInstance::ReactToWheelDamageStateChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelAnimInstance.ReactToWheelDamageStateChanged");

	UWheelAnimInstance_ReactToWheelDamageStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WheelAnimInstance.BindToWheelDamageEvent
// (Final, Native, Private)
// Parameters:
// class AWheel*                  Wheel                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWheelAnimInstance::BindToWheelDamageEvent(class AWheel* Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelAnimInstance.BindToWheelDamageEvent");

	UWheelAnimInstance_BindToWheelDamageEvent_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWheelAnimInstance::AfterRead()
{
	UAnimInstance::AfterRead();

}

void UWheelAnimInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

}

void UNPCOnSurfaceVODataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCOnSurfaceVODataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URemoveNPCOnShipStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, URemoveNPCOnShipStepDesc);
}

void URemoveNPCOnShipStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void URemoveNPCOnShipStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void URemoveNPCOnShipStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void URemoveNPCOnSurfaceStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, URemoveNPCOnSurfaceStepDesc);
}

void URemoveNPCOnSurfaceStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UEntitlementSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UEntitlementSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UPlayerEntitlementControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerEntitlementControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerEntitlementViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerEntitlementViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URadialCreationRuleAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URadialCreationRuleAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URadialInputBinder::AfterRead()
{
	UInputBinder::AfterRead();

}

void URadialInputBinder::BeforeDelete()
{
	UInputBinder::BeforeDelete();

}

void URadialInventorySelectionXAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void URadialInventorySelectionXAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void URadialInventorySelectionYAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void URadialInventorySelectionYAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void URadialInventorySelectorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URadialInventorySelectorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URadialManagerInputReceiverInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URadialManagerInputReceiverInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URadialManagerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URadialManagerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.RadialManagerComponent.ForceCloseAllRadials
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void URadialManagerComponent::ForceCloseAllRadials()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerComponent.ForceCloseAllRadials");

	URadialManagerComponent_ForceCloseAllRadials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URadialManagerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(RadialSettings, URadialSettingsAsset);
	READ_PTR_FULL(InputHandler, URadialManagerCompositeInputHandler);
	READ_PTR_FULL(CurrentClosingId, UClass);
	READ_PTR_FULL(DockedObject, AActor);
	READ_PTR_FULL(ManagerInputBinder, URadialManagerInputBinder);
	READ_PTR_FULL(CachedInputSettings, UAthenaInputSettings);
	READ_PTR_FULL(LastInputId, UClass);
}

void URadialManagerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(RadialSettings);
	DELE_PTR_FULL(InputHandler);
	DELE_PTR_FULL(CurrentClosingId);
	DELE_PTR_FULL(DockedObject);
	DELE_PTR_FULL(ManagerInputBinder);
	DELE_PTR_FULL(CachedInputSettings);
	DELE_PTR_FULL(LastInputId);
}

// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex7Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex7Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex7Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex7Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex6Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex6Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex6Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex6Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex5Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex5Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex5Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex5Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex4Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex4Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex4Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex4Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex3Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex3Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex3Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex3Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex2Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex2Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex2Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex2Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex1Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex1Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex1Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex1Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex0Selected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotIndex0Selected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotIndex0Selected");

	URadialManagerCompositeInputHandler_OnSlotIndex0Selected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotCounterClockwiseSelected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotCounterClockwiseSelected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotCounterClockwiseSelected");

	URadialManagerCompositeInputHandler_OnSlotCounterClockwiseSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnSlotClockwiseSelected
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnSlotClockwiseSelected()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnSlotClockwiseSelected");

	URadialManagerCompositeInputHandler_OnSlotClockwiseSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnRadialY
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnRadialY(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnRadialY");

	URadialManagerCompositeInputHandler_OnRadialY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.RadialManagerCompositeInputHandler.OnRadialX
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> URadialManagerCompositeInputHandler::OnRadialX(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RadialManagerCompositeInputHandler.OnRadialX");

	URadialManagerCompositeInputHandler_OnRadialX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void URadialManagerCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void URadialManagerCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void URadialManagerInputBinder::AfterRead()
{
	UInputBinder::AfterRead();

}

void URadialManagerInputBinder::BeforeDelete()
{
	UInputBinder::BeforeDelete();

}

void URadialMiniIconInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URadialMiniIconInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URadialSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URadialSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URadialVisibilityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URadialVisibilityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDisengageNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UDisengageNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.DockToObjectCompositeInputHandler.OnDisengage
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDockToObjectCompositeInputHandler::OnDisengage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockToObjectCompositeInputHandler.OnDisengage");

	UDockToObjectCompositeInputHandler_OnDisengage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDockToObjectCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UDockToObjectCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void UDoubleIntentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDoubleIntentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIntentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIntentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UClamberableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UClamberableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayersSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UPlayersSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

// Function Athena.WheelInterface.GetWheelRate
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWheelInterface::GetWheelRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetWheelRate");

	UWheelInterface_GetWheelRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetWheelAngle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWheelInterface::GetWheelAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetWheelAngle");

	UWheelInterface_GetWheelAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetWantedWheelAngle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWheelInterface::GetWantedWheelAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetWantedWheelAngle");

	UWheelInterface_GetWantedWheelAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetServerWheelAngle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWheelInterface::GetServerWheelAngle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetServerWheelAngle");

	UWheelInterface_GetServerWheelAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetNormalizedWheelPosition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWheelInterface::GetNormalizedWheelPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetNormalizedWheelPosition");

	UWheelInterface_GetNormalizedWheelPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetAnimationType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EWheelAnimationType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWheelAnimationType> UWheelInterface::GetAnimationType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetAnimationType");

	UWheelInterface_GetAnimationType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetAnimationTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWheelInterface::GetAnimationTime()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInterface.GetAnimationTime");

	UWheelInterface_GetAnimationTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWheelInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWheelInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAnimatableMeshInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAnimatableMeshInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAnimationMontageInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAnimationMontageInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAnimNotify_WieldableAnimationInterruptPoint::AfterRead()
{
	UAnimNotify::AfterRead();

}

void UAnimNotify_WieldableAnimationInterruptPoint::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

}

// Function Athena.AthenaAnimationCapstanBlueprintFunctions.SetAnimationRemapSpeed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAthenaAnimationCapstan Capstan                        (Parm, OutParm, ReferenceParm)
// float                          Speed                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaAnimationCapstanBlueprintFunctions::STATIC_SetAnimationRemapSpeed(struct FAthenaAnimationCapstan* Capstan, float Speed)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationCapstanBlueprintFunctions.SetAnimationRemapSpeed");

	UAthenaAnimationCapstanBlueprintFunctions_SetAnimationRemapSpeed_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Capstan != nullptr)
		*Capstan = params.Capstan;

}


// Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetCapstanState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationCapstan Capstan                        (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_EAthenaAnimationCapstanState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAthenaAnimationCapstanState> UAthenaAnimationCapstanBlueprintFunctions::STATIC_GetCapstanState(const struct FAthenaAnimationCapstan& Capstan)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetCapstanState");

	UAthenaAnimationCapstanBlueprintFunctions_GetCapstanState_Params params;
	params.Capstan = Capstan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetAngularVelocityWanted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationCapstan Capstan                        (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationCapstanBlueprintFunctions::STATIC_GetAngularVelocityWanted(const struct FAthenaAnimationCapstan& Capstan)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetAngularVelocityWanted");

	UAthenaAnimationCapstanBlueprintFunctions_GetAngularVelocityWanted_Params params;
	params.Capstan = Capstan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationCapstanBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationCapstanBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void ACampaignService::AfterRead()
{
	AActor::AfterRead();

}

void ACampaignService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UAICharacterPartsDesc::AfterRead()
{
	UMeshMemoryConstraintsAIPartsDesc::AfterRead();

}

void UAICharacterPartsDesc::BeforeDelete()
{
	UMeshMemoryConstraintsAIPartsDesc::BeforeDelete();

}

void UMermaidPartsDesc::AfterRead()
{
	UMeshMemoryConstraintsAIPartsDesc::AfterRead();

}

void UMermaidPartsDesc::BeforeDelete()
{
	UMeshMemoryConstraintsAIPartsDesc::BeforeDelete();

}

void UTeleportAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

	READ_PTR_FULL(QueryTemplate, UEnvQuery);
}

void UTeleportAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

	DELE_PTR_FULL(QueryTemplate);
}

void UTeleportAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UTeleportAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

// Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UOverlapTriggerComponent::OnActivationRegionOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapEnd");

	UOverlapTriggerComponent_OnActivationRegionOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              OverlapInfo                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UOverlapTriggerComponent::OnActivationRegionOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapBegin");

	UOverlapTriggerComponent_OnActivationRegionOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOverlapTriggerComponent::AfterRead()
{
	UCapsuleComponent::AfterRead();

}

void UOverlapTriggerComponent::BeforeDelete()
{
	UCapsuleComponent::BeforeDelete();

}

// Function Athena.OverlapTriggerActor.SetZone
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 WorldLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AOverlapTriggerActor::SetZone(const struct FVector& WorldLocation, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerActor.SetZone");

	AOverlapTriggerActor_SetZone_Params params;
	params.WorldLocation = WorldLocation;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OverlapTriggerActor.SetDelegatesForActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InActorToTrack                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScriptDelegate         OnEnteredZoneDelegate          (Parm, ZeroConstructor, NoDestructor)
// struct FScriptDelegate         OnLeftZoneDelegate             (Parm, ZeroConstructor, NoDestructor)
void AOverlapTriggerActor::SetDelegatesForActor(class AActor* InActorToTrack, const struct FScriptDelegate& OnEnteredZoneDelegate, const struct FScriptDelegate& OnLeftZoneDelegate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerActor.SetDelegatesForActor");

	AOverlapTriggerActor_SetDelegatesForActor_Params params;
	params.InActorToTrack = InActorToTrack;
	params.OnEnteredZoneDelegate = OnEnteredZoneDelegate;
	params.OnLeftZoneDelegate = OnLeftZoneDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OverlapTriggerActor.SetDelegates
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate         OnEnteredZoneDelegate          (Parm, ZeroConstructor, NoDestructor)
// struct FScriptDelegate         OnLeftZoneDelegate             (Parm, ZeroConstructor, NoDestructor)
void AOverlapTriggerActor::SetDelegates(const struct FScriptDelegate& OnEnteredZoneDelegate, const struct FScriptDelegate& OnLeftZoneDelegate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerActor.SetDelegates");

	AOverlapTriggerActor_SetDelegates_Params params;
	params.OnEnteredZoneDelegate = OnEnteredZoneDelegate;
	params.OnLeftZoneDelegate = OnLeftZoneDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OverlapTriggerActor.CreateOverlapTriggerActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 WorldLocation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AOverlapTriggerActor*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AOverlapTriggerActor* AOverlapTriggerActor::STATIC_CreateOverlapTriggerActor(class UObject* WorldContext, const struct FVector& WorldLocation, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerActor.CreateOverlapTriggerActor");

	AOverlapTriggerActor_CreateOverlapTriggerActor_Params params;
	params.WorldContext = WorldContext;
	params.WorldLocation = WorldLocation;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.OverlapTriggerActor.ClearDelegatesAndDestroy
// (Final, Native, Public, BlueprintCallable)
void AOverlapTriggerActor::ClearDelegatesAndDestroy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerActor.ClearDelegatesAndDestroy");

	AOverlapTriggerActor_ClearDelegatesAndDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OverlapTriggerActor.ClearDelegates
// (Final, Native, Public, BlueprintCallable)
void AOverlapTriggerActor::ClearDelegates()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OverlapTriggerActor.ClearDelegates");

	AOverlapTriggerActor_ClearDelegates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AOverlapTriggerActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SceneComponent, UCapsuleComponent);
	READ_PTR_FULL(OverlapComponent, UOverlapTriggerComponent);
}

void AOverlapTriggerActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SceneComponent);
	DELE_PTR_FULL(OverlapComponent);
}

void UCompleteVoyageChapterConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UCompleteVoyageChapterConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UQuestDescDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UQuestDescDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoyageLocationOnlyNamedIslandListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVoyageLocationOnlyNamedIslandListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoyageModuleSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UVoyageModuleSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UVoyageParticipantInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UVoyageParticipantInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.NPCInterface.GetId
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UNPCInterface::GetId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NPCInterface.GetId");

	UNPCInterface_GetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNPCInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNPCMeshRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCMeshRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNPCPriorityTickInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCPriorityTickInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UNPCServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNPCServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AICombatDialogue.Start
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UAICombatDialogue::Start(class UObject* WorldContextObject, const struct FVector& Location)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.Start");

	UAICombatDialogue_Start_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AICombatDialogue.RemoveLinkedListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             LinkedListener                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAICombatDialogue::RemoveLinkedListener(class AController* LinkedListener)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.RemoveLinkedListener");

	UAICombatDialogue_RemoveLinkedListener_Params params;
	params.LinkedListener = LinkedListener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AICombatDialogue.RemoveAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAICombatDialogue::RemoveAI(class APawn* Pawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.RemoveAI");

	UAICombatDialogue_RemoveAI_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AICombatDialogue.End
// (Final, Native, Public, BlueprintCallable)
void UAICombatDialogue::End()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.End");

	UAICombatDialogue_End_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AICombatDialogue.BP_GeneratePawnNameAndSlot
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class APawn*                   InPawn                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FText                   OutLocalisableName             (Parm, OutParm)
// int                            OutActorSlot                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAICombatDialogue::BP_GeneratePawnNameAndSlot(class APawn* InPawn, struct FText* OutLocalisableName, int* OutActorSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.BP_GeneratePawnNameAndSlot");

	UAICombatDialogue_BP_GeneratePawnNameAndSlot_Params params;
	params.InPawn = InPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocalisableName != nullptr)
		*OutLocalisableName = params.OutLocalisableName;
	if (OutActorSlot != nullptr)
		*OutActorSlot = params.OutActorSlot;

}


// Function Athena.AICombatDialogue.AddLinkedListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             LinkedListener                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAICombatDialogue::AddLinkedListener(class AController* LinkedListener)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.AddLinkedListener");

	UAICombatDialogue_AddLinkedListener_Params params;
	params.LinkedListener = LinkedListener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AICombatDialogue.AddAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAICombatDialogue::AddAI(class APawn* Pawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AICombatDialogue.AddAI");

	UAICombatDialogue_AddAI_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAICombatDialogue::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(DialogueCoordinator, ASceneDialogueCoordinator);
	READ_PTR_FULL(DialogueData, USceneDialogueData);
	READ_PTR_FULL(StateProvider, USimpleDialogueStateProvider);
}

void UAICombatDialogue::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(DialogueCoordinator);
	DELE_PTR_FULL(DialogueData);
	DELE_PTR_FULL(StateProvider);
}

void USceneDialogueCoordinatorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USceneDialogueCoordinatorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USceneDialoguePoint::AfterRead()
{
	UObject::AfterRead();

}

void USceneDialoguePoint::BeforeDelete()
{
	UObject::BeforeDelete();

}

void USceneDialogueExit::AfterRead()
{
	USceneDialoguePoint::AfterRead();

}

void USceneDialogueExit::BeforeDelete()
{
	USceneDialoguePoint::BeforeDelete();

}

void USceneDialogueSectionRedirect::AfterRead()
{
	USceneDialoguePoint::AfterRead();

}

void USceneDialogueSectionRedirect::BeforeDelete()
{
	USceneDialoguePoint::BeforeDelete();

}

void USceneDialogueTextPoint::AfterRead()
{
	USceneDialoguePoint::AfterRead();

	READ_PTR_FULL(Animation, UAnimationAsset);
	READ_PTR_FULL(Speech, UWwiseEvent);
}

void USceneDialogueTextPoint::BeforeDelete()
{
	USceneDialoguePoint::BeforeDelete();

	DELE_PTR_FULL(Animation);
	DELE_PTR_FULL(Speech);
}

void USceneDialogueSection::AfterRead()
{
	UObject::AfterRead();

}

void USceneDialogueSection::BeforeDelete()
{
	UObject::BeforeDelete();

}

void USceneDialogueContext::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Section, USceneDialogueSection);
}

void USceneDialogueContext::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Section);
}

void USceneDialoguePointWithConditional::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Point, USceneDialoguePoint);
	READ_PTR_FULL(Conditional, UNPCDialogConditional);
}

void USceneDialoguePointWithConditional::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Point);
	DELE_PTR_FULL(Conditional);
}

void USceneDialogueData::AfterRead()
{
	UObject::AfterRead();

}

void USceneDialogueData::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UInlineVotingInteractionComponent::AfterRead()
{
	UVotingInteractionComponentBase::AfterRead();

}

void UInlineVotingInteractionComponent::BeforeDelete()
{
	UVotingInteractionComponentBase::BeforeDelete();

}

void UVotingInteractionComponent::AfterRead()
{
	UVotingInteractionComponentBase::AfterRead();

}

void UVotingInteractionComponent::BeforeDelete()
{
	UVotingInteractionComponentBase::BeforeDelete();

}

void AForceSpot::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(InteractionSplineComponent, USplineComponent);
}

void AForceSpot::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(InteractionSplineComponent);
}

void UMoveableObjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMoveableObjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URammableDamageDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URammableDamageDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URammableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URammableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USampledMovementInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USampledMovementInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URammableComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DamageSettings, URammableDamageDataAsset);
}

void URammableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DamageSettings);
}

void URammerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URammerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URammerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(RammerType, UClass);
}

void URammerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(RammerType);
}

void UMastDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UMastDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UMastInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMastInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionStateWithCustomTeleportLocation
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       TeleportLocation               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TEnumAsByte<Athena_ETeleportActionStateReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportActionStateFadeType> TeleportFadeType               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportActionStateConditions> TeleportConditions             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportTransformSpace> TeleportSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamOutLevelId               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamInLevelId                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ShouldPlayTeleportSFX          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTeleportActionStateId::STATIC_PushCharacterIntoTeleportActionStateWithCustomTeleportLocation(class AActor* Character, const struct FTeleportLocation& TeleportLocation, TEnumAsByte<Athena_ETeleportActionStateReason> Reason, TEnumAsByte<Athena_ETeleportActionStateFadeType> TeleportFadeType, TEnumAsByte<Athena_ETeleportActionStateConditions> TeleportConditions, TEnumAsByte<Athena_ETeleportTransformSpace> TeleportSpace, int StreamOutLevelId, int StreamInLevelId, bool ShouldPlayTeleportSFX)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionStateWithCustomTeleportLocation");

	UTeleportActionStateId_PushCharacterIntoTeleportActionStateWithCustomTeleportLocation_Params params;
	params.Character = Character;
	params.TeleportLocation = TeleportLocation;
	params.Reason = Reason;
	params.TeleportFadeType = TeleportFadeType;
	params.TeleportConditions = TeleportConditions;
	params.TeleportSpace = TeleportSpace;
	params.StreamOutLevelId = StreamOutLevelId;
	params.StreamInLevelId = StreamInLevelId;
	params.ShouldPlayTeleportSFX = ShouldPlayTeleportSFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportActionStateReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportActionStateFadeType> TeleportFadeType               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportActionStateConditions> TeleportConditions             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ETeleportTransformSpace> TeleportSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamOutLevelId               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamInLevelId                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ShouldPlayTeleportSFX          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ShouldWaitForLoadout           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ShouldWaitForEntitlements      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           CallFinishSpawningOnEnd        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTeleportActionStateId::STATIC_PushCharacterIntoTeleportActionState(class AActor* Character, TEnumAsByte<Athena_ETeleportActionStateReason> Reason, TEnumAsByte<Athena_ETeleportActionStateFadeType> TeleportFadeType, TEnumAsByte<Athena_ETeleportActionStateConditions> TeleportConditions, TEnumAsByte<Athena_ETeleportTransformSpace> TeleportSpace, int StreamOutLevelId, int StreamInLevelId, bool ShouldPlayTeleportSFX, bool ShouldWaitForLoadout, bool ShouldWaitForEntitlements, bool CallFinishSpawningOnEnd)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionState");

	UTeleportActionStateId_PushCharacterIntoTeleportActionState_Params params;
	params.Character = Character;
	params.Reason = Reason;
	params.TeleportFadeType = TeleportFadeType;
	params.TeleportConditions = TeleportConditions;
	params.TeleportSpace = TeleportSpace;
	params.StreamOutLevelId = StreamOutLevelId;
	params.StreamInLevelId = StreamInLevelId;
	params.ShouldPlayTeleportSFX = ShouldPlayTeleportSFX;
	params.ShouldWaitForLoadout = ShouldWaitForLoadout;
	params.ShouldWaitForEntitlements = ShouldWaitForEntitlements;
	params.CallFinishSpawningOnEnd = CallFinishSpawningOnEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTeleportActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UTeleportActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UTeleportLocationRetrievalComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UTeleportLocationRetrievalComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UEjectFromTunnelOfTheDamnedActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UEjectFromTunnelOfTheDamnedActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UEnterTunnelOfTheDamnedActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UEnterTunnelOfTheDamnedActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UExitTunnelOfTheDamnedActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UExitTunnelOfTheDamnedActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UTunnelDesc::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(VignetteSequence, ULevelSequence);
	READ_PTR_FULL(DialogueData, USceneDialogueData);
	READ_PTR_FULL(Endpoint, UClass);
	READ_PTR_FULL(MusicOfTheSeasEvent, UWwiseEvent);
	READ_PTR_FULL(MusicOfTheSeasStop, UWwiseEvent);
	READ_PTR_FULL(MusicOfTheSeasPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(AmbienceSfxEvent, UWwiseEvent);
	READ_PTR_FULL(AmbienceSfxStop, UWwiseEvent);
	READ_PTR_FULL(AmbienceSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ShipTeleportEffectsClass, UClass);
}

void UTunnelDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(VignetteSequence);
	DELE_PTR_FULL(DialogueData);
	DELE_PTR_FULL(Endpoint);
	DELE_PTR_FULL(MusicOfTheSeasEvent);
	DELE_PTR_FULL(MusicOfTheSeasStop);
	DELE_PTR_FULL(MusicOfTheSeasPool);
	DELE_PTR_FULL(AmbienceSfxEvent);
	DELE_PTR_FULL(AmbienceSfxStop);
	DELE_PTR_FULL(AmbienceSfxPool);
	DELE_PTR_FULL(ShipTeleportEffectsClass);
}

void UTunnelsOfTheDamnedLootFilterDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTunnelsOfTheDamnedLootFilterDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTunnelOfTheDamnedInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTunnelOfTheDamnedInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.TunnelOfTheDamned.StartSequences
// (Final, Native, Public, BlueprintCallable)
void ATunnelOfTheDamned::StartSequences()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.StartSequences");

	ATunnelOfTheDamned_StartSequences_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.SetDescription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTunnelDesc*             Desc                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATunnelOfTheDamned::SetDescription(class UTunnelDesc* Desc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.SetDescription");

	ATunnelOfTheDamned_SetDescription_Params params;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.OnRep_TunnelStreamingLevelId
// (Final, Native, Private)
void ATunnelOfTheDamned::OnRep_TunnelStreamingLevelId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.OnRep_TunnelStreamingLevelId");

	ATunnelOfTheDamned_OnRep_TunnelStreamingLevelId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.OnRep_ShipInTunnel
// (Final, Native, Private)
// Parameters:
// class AActor*                  PreviousShipInTunnel           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATunnelOfTheDamned::OnRep_ShipInTunnel(class AActor* PreviousShipInTunnel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.OnRep_ShipInTunnel");

	ATunnelOfTheDamned_OnRep_ShipInTunnel_Params params;
	params.PreviousShipInTunnel = PreviousShipInTunnel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.OnRep_Desc
// (Final, Native, Private)
void ATunnelOfTheDamned::OnRep_Desc()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.OnRep_Desc");

	ATunnelOfTheDamned_OnRep_Desc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.OnActorLeftTunnelOverlapZone
// (Final, Native, Public)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            BodyIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATunnelOfTheDamned::OnActorLeftTunnelOverlapZone(class AActor* Actor, class UPrimitiveComponent* Component, int BodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.OnActorLeftTunnelOverlapZone");

	ATunnelOfTheDamned_OnActorLeftTunnelOverlapZone_Params params;
	params.Actor = Actor;
	params.Component = Component;
	params.BodyIndex = BodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.OnActorEnteredTunnelOverlapZone
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            BodyIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           FromSweep                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ATunnelOfTheDamned::OnActorEnteredTunnelOverlapZone(class AActor* Actor, class UPrimitiveComponent* Component, int BodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.OnActorEnteredTunnelOverlapZone");

	ATunnelOfTheDamned_OnActorEnteredTunnelOverlapZone_Params params;
	params.Actor = Actor;
	params.Component = Component;
	params.BodyIndex = BodyIndex;
	params.FromSweep = FromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelOfTheDamned.DestroyTunnel
// (Native, Public, BlueprintCallable)
void ATunnelOfTheDamned::DestroyTunnel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelOfTheDamned.DestroyTunnel");

	ATunnelOfTheDamned_DestroyTunnel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATunnelOfTheDamned::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(TunnelCollisions, UStaticMeshComponent);
	READ_PTR_FULL(TunnelOverlapZone, UBoxComponent);
	READ_PTR_FULL(VoyageVotingTableType, UClass);
	READ_PTR_FULL(CapstanType, UClass);
	READ_PTR_FULL(WheelType, UClass);
	READ_PTR_FULL(CannonPlayerLoadingInteractionPointType, UClass);
	READ_PTR_FULL(HarpoonType, UClass);
	READ_PTR_FULL(RowboatAttachPointType, UClass);
	READ_PTR_FULL(MapTableType, UClass);
	READ_PTR_FULL(LootFilterDataAsset, UTunnelsOfTheDamnedLootFilterDataAsset);
	READ_PTR_FULL(Desc, UTunnelDesc);
	READ_PTR_FULL(ShipInTunnel, AActor);
	READ_PTR_FULL(Endpoint, AActor);
	READ_PTR_FULL(SequencerLevelActor, ASequencerCutSceneActor);
	READ_PTR_FULL(ShipSpecificSequencerLevelActor, ASequencerCutSceneActor);
	READ_PTR_FULL(FailureFallbackShipSpawnLocation, AShipSpawnLocation);
}

void ATunnelOfTheDamned::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(TunnelCollisions);
	DELE_PTR_FULL(TunnelOverlapZone);
	DELE_PTR_FULL(VoyageVotingTableType);
	DELE_PTR_FULL(CapstanType);
	DELE_PTR_FULL(WheelType);
	DELE_PTR_FULL(CannonPlayerLoadingInteractionPointType);
	DELE_PTR_FULL(HarpoonType);
	DELE_PTR_FULL(RowboatAttachPointType);
	DELE_PTR_FULL(MapTableType);
	DELE_PTR_FULL(LootFilterDataAsset);
	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(ShipInTunnel);
	DELE_PTR_FULL(Endpoint);
	DELE_PTR_FULL(SequencerLevelActor);
	DELE_PTR_FULL(ShipSpecificSequencerLevelActor);
	DELE_PTR_FULL(FailureFallbackShipSpawnLocation);
}

void UTunnelOfTheDamnedLocatorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTunnelOfTheDamnedLocatorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ATunnelOfTheDamnedLocator::AfterRead()
{
	AActor::AfterRead();

}

void ATunnelOfTheDamnedLocator::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UTunnelOfTheDamnedTaleService::AfterRead()
{
	UTaleQuestService::AfterRead();

}

void UTunnelOfTheDamnedTaleService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

}

void UTunnelOfTheDamnedTaleServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTunnelOfTheDamnedTaleServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

// Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.SimulateTunnelFailure
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATunnelOfTheDamned*      Tunnel                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTunnelsOfTheDamnedBlueprintFunctionLibrary::STATIC_SimulateTunnelFailure(class ATunnelOfTheDamned* Tunnel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.SimulateTunnelFailure");

	UTunnelsOfTheDamnedBlueprintFunctionLibrary_SimulateTunnelFailure_Params params;
	params.Tunnel = Tunnel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.SimulateReplicatedCutscenePlayData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATunnelOfTheDamned*      Tunnel                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTunnelsOfTheDamnedBlueprintFunctionLibrary::STATIC_SimulateReplicatedCutscenePlayData(class ATunnelOfTheDamned* Tunnel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.SimulateReplicatedCutscenePlayData");

	UTunnelsOfTheDamnedBlueprintFunctionLibrary_SimulateReplicatedCutscenePlayData_Params params;
	params.Tunnel = Tunnel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.SimulateReplicatedCutscene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ATunnelOfTheDamned*      Tunnel                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTunnelsOfTheDamnedBlueprintFunctionLibrary::STATIC_SimulateReplicatedCutscene(class ATunnelOfTheDamned* Tunnel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.SimulateReplicatedCutscene");

	UTunnelsOfTheDamnedBlueprintFunctionLibrary_SimulateReplicatedCutscene_Params params;
	params.Tunnel = Tunnel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.DoesShipHaveBootyOnboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTunnelsOfTheDamnedLootFilterDataAsset* LootFilterDataAsset            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UTunnelsOfTheDamnedBlueprintFunctionLibrary::STATIC_DoesShipHaveBootyOnboard(class AActor* Ship, class UTunnelsOfTheDamnedLootFilterDataAsset* LootFilterDataAsset)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TunnelsOfTheDamnedBlueprintFunctionLibrary.DoesShipHaveBootyOnboard");

	UTunnelsOfTheDamnedBlueprintFunctionLibrary_DoesShipHaveBootyOnboard_Params params;
	params.Ship = Ship;
	params.LootFilterDataAsset = LootFilterDataAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTunnelsOfTheDamnedBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UTunnelsOfTheDamnedBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UTunnelsOfTheDamnedServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTunnelsOfTheDamnedServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTunnelsOfTheDamnedService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Params, UTunnelsOfTheDamnedServiceParams);
	READ_PTR_FULL(World, UWorld);
}

void UTunnelsOfTheDamnedService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Params);
	DELE_PTR_FULL(World);
}

void UWaitForCrewToArriveInTunnelOfTheDamnedTaleQuestStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForCrewToArriveInTunnelOfTheDamnedTaleQuestStepDesc);
}

void UWaitForCrewToArriveInTunnelOfTheDamnedTaleQuestStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UWaitForCrewToArriveInTunnelOfTheDamnedTaleQuestStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForCrewToArriveInTunnelOfTheDamnedTaleQuestStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWaitForTunnelOfTheDamnedMigrationTaleQuestStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForTunnelOfTheDamnedMigrationTaleQuestStepDesc);
}

void UWaitForTunnelOfTheDamnedMigrationTaleQuestStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UWaitForTunnelOfTheDamnedMigrationTaleQuestStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForTunnelOfTheDamnedMigrationTaleQuestStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USeaRockDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void USeaRockDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UShipwreckInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipwreckInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTaleQuestLockCaptainCabinDoorStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestLockCaptainCabinDoorStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UIsOnActiveFortStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsOnActiveFortStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

// Function Athena.AdjustableWaterLevelPuzzleInterface.ResetPuzzle_Server
// (Native, Public, BlueprintCallable)
void UAdjustableWaterLevelPuzzleInterface::ResetPuzzle_Server()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AdjustableWaterLevelPuzzleInterface.ResetPuzzle_Server");

	UAdjustableWaterLevelPuzzleInterface_ResetPuzzle_Server_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UAdjustableWaterLevelPuzzleInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAdjustableWaterLevelPuzzleInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MechanismActionInterface.SignalActionCompleted
// (Native, Public, BlueprintCallable)
void UMechanismActionInterface::SignalActionCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.SignalActionCompleted");

	UMechanismActionInterface_SignalActionCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismActionInterface.SetActionActivationMode
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionActivationMode> Mode                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismActionInterface::SetActionActivationMode(TEnumAsByte<Athena_EMechanismActionActivationMode> Mode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.SetActionActivationMode");

	UMechanismActionInterface_SetActionActivationMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismActionInterface.GetActionType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EMechanismActionType> UMechanismActionInterface::GetActionType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.GetActionType");

	UMechanismActionInterface_GetActionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismActionInterface.GetActionState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EMechanismActionState> UMechanismActionInterface::GetActionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.GetActionState");

	UMechanismActionInterface_GetActionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismActionInterface.GetActionProgressRateOfChange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMechanismActionInterface::GetActionProgressRateOfChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.GetActionProgressRateOfChange");

	UMechanismActionInterface_GetActionProgressRateOfChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismActionInterface.GetActionProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMechanismActionInterface::GetActionProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.GetActionProgress");

	UMechanismActionInterface_GetActionProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismActionInterface.GetActionName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName UMechanismActionInterface::GetActionName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.GetActionName");

	UMechanismActionInterface_GetActionName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismActionInterface.GetActionActivationMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionActivationMode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EMechanismActionActivationMode> UMechanismActionInterface::GetActionActivationMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismActionInterface.GetActionActivationMode");

	UMechanismActionInterface_GetActionActivationMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMechanismActionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismActionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MechanismResetInterface.ResetMechanism
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMechanismResetInterface::ResetMechanism()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismResetInterface.ResetMechanism");

	UMechanismResetInterface_ResetMechanism_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMechanismResetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismResetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MechanismTriggerInterface.SetTriggerProgressRateOfChange
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ProgressRateOfChange           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismTriggerInterface::SetTriggerProgressRateOfChange(float ProgressRateOfChange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.SetTriggerProgressRateOfChange");

	UMechanismTriggerInterface_SetTriggerProgressRateOfChange_Params params;
	params.ProgressRateOfChange = ProgressRateOfChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismTriggerInterface.SetTriggerProgress
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Progress                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismTriggerInterface::SetTriggerProgress(float Progress)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.SetTriggerProgress");

	UMechanismTriggerInterface_SetTriggerProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismTriggerInterface.GetTriggerType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EMechanismTriggerType> UMechanismTriggerInterface::GetTriggerType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.GetTriggerType");

	UMechanismTriggerInterface_GetTriggerType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.GetTriggerState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EMechanismTriggerState> UMechanismTriggerInterface::GetTriggerState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.GetTriggerState");

	UMechanismTriggerInterface_GetTriggerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.GetTriggerProgressRateOfChange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMechanismTriggerInterface::GetTriggerProgressRateOfChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.GetTriggerProgressRateOfChange");

	UMechanismTriggerInterface_GetTriggerProgressRateOfChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.GetTriggerProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMechanismTriggerInterface::GetTriggerProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.GetTriggerProgress");

	UMechanismTriggerInterface_GetTriggerProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.GetTriggerName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName UMechanismTriggerInterface::GetTriggerName()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.GetTriggerName");

	UMechanismTriggerInterface_GetTriggerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.DisableTrigger
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMechanismTriggerInterface::DisableTrigger(class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.DisableTrigger");

	UMechanismTriggerInterface_DisableTrigger_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.DeactivateTrigger
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMechanismTriggerInterface::DeactivateTrigger(class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.DeactivateTrigger");

	UMechanismTriggerInterface_DeactivateTrigger_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MechanismTriggerInterface.ActivateTrigger
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMechanismTriggerInterface::ActivateTrigger(class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerInterface.ActivateTrigger");

	UMechanismTriggerInterface_ActivateTrigger_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMechanismTriggerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismTriggerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMechanismMaterialGroup::AfterRead()
{
	UObject::AfterRead();

}

void UMechanismMaterialGroup::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UDefaultMechanismMaterialGroup::AfterRead()
{
	UMechanismMaterialGroup::AfterRead();

}

void UDefaultMechanismMaterialGroup::BeforeDelete()
{
	UMechanismMaterialGroup::BeforeDelete();

}

void AAnimatedMaterialMechanismAction::AfterRead()
{
	AAnimatedMechanismAction::AfterRead();

}

void AAnimatedMaterialMechanismAction::BeforeDelete()
{
	AAnimatedMechanismAction::BeforeDelete();

}

// Function Athena.DeepSeaRegion.SetCollisionComponent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UShapeComponent*         InCollisionComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADeepSeaRegion::SetCollisionComponent(class UShapeComponent* InCollisionComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DeepSeaRegion.SetCollisionComponent");

	ADeepSeaRegion_SetCollisionComponent_Params params;
	params.InCollisionComponent = InCollisionComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DeepSeaRegion.ComponentEndOverlapCallBack
// (Final, Native, Private)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InOtherBodyIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADeepSeaRegion::ComponentEndOverlapCallBack(class AActor* InActor, class UPrimitiveComponent* InComponent, int InOtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DeepSeaRegion.ComponentEndOverlapCallBack");

	ADeepSeaRegion_ComponentEndOverlapCallBack_Params params;
	params.InActor = InActor;
	params.InComponent = InComponent;
	params.InOtherBodyIndex = InOtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DeepSeaRegion.ComponentBeginOverlapCallBack
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InOtherBodyIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InFromSweep                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              InSweepResult                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ADeepSeaRegion::ComponentBeginOverlapCallBack(class AActor* InActor, class UPrimitiveComponent* InComponent, int InOtherBodyIndex, bool InFromSweep, const struct FHitResult& InSweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DeepSeaRegion.ComponentBeginOverlapCallBack");

	ADeepSeaRegion_ComponentBeginOverlapCallBack_Params params;
	params.InActor = InActor;
	params.InComponent = InComponent;
	params.InOtherBodyIndex = InOtherBodyIndex;
	params.InFromSweep = InFromSweep;
	params.InSweepResult = InSweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADeepSeaRegion::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(CollisionComponent, UShapeComponent);
}

void ADeepSeaRegion::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(CollisionComponent);
}

void ULinearTransitionActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void ULinearTransitionActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UPlayDockableKeyedInstrumentActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UPlayDockableKeyedInstrumentActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UInstrumentKeyInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInstrumentKeyInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UKeyedInstrumentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UKeyedInstrumentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DockableKeyedInstrument.Server_HandleKey
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            KeyID                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InIsPressed                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ADockableKeyedInstrument::Server_HandleKey(int KeyID, bool InIsPressed)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableKeyedInstrument.Server_HandleKey");

	ADockableKeyedInstrument_Server_HandleKey_Params params;
	params.KeyID = KeyID;
	params.InIsPressed = InIsPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DockableKeyedInstrument.Multicast_TriggerFX
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            KeyID                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InIsPressed                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ADockableKeyedInstrument::Multicast_TriggerFX(int KeyID, bool InIsPressed)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableKeyedInstrument.Multicast_TriggerFX");

	ADockableKeyedInstrument_Multicast_TriggerFX_Params params;
	params.KeyID = KeyID;
	params.InIsPressed = InIsPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADockableKeyedInstrument::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(PipeVFXObject, UParticleSystem);
	READ_PTR_FULL(BaseMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(PlayerPositionComponent, USceneComponent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CurrentVFXSpawner, UParticleSystemComponent);
}

void ADockableKeyedInstrument::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(PipeVFXObject);
	DELE_PTR_FULL(BaseMeshComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(PlayerPositionComponent);
	DELE_PTR_FULL(SfxPool);
	DELE_PTR_FULL(CurrentVFXSpawner);
}

// Function Athena.SequenceComponent.Server_CheckSequenceInput
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            InId                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USequenceComponent::Server_CheckSequenceInput(int InId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequenceComponent.Server_CheckSequenceInput");

	USequenceComponent_Server_CheckSequenceInput_Params params;
	params.InId = InId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SequenceComponent.ResetComponent
// (Final, Native, Public, BlueprintCallable)
void USequenceComponent::ResetComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SequenceComponent.ResetComponent");

	USequenceComponent_ResetComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USequenceComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void USequenceComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.PuzzleKeyedInstrument.SetShouldSpawnSheetMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InShouldShowSheetMusic         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void APuzzleKeyedInstrument::SetShouldSpawnSheetMusic(bool InShouldShowSheetMusic)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleKeyedInstrument.SetShouldSpawnSheetMusic");

	APuzzleKeyedInstrument_SetShouldSpawnSheetMusic_Params params;
	params.InShouldShowSheetMusic = InShouldShowSheetMusic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleKeyedInstrument.OnRep_ShouldShowSheetMusic
// (Final, Native, Private)
void APuzzleKeyedInstrument::OnRep_ShouldShowSheetMusic()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleKeyedInstrument.OnRep_ShouldShowSheetMusic");

	APuzzleKeyedInstrument_OnRep_ShouldShowSheetMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APuzzleKeyedInstrument::AfterRead()
{
	ADockableKeyedInstrument::AfterRead();

	READ_PTR_FULL(SequenceComponent, USequenceComponent);
	READ_PTR_FULL(SheetMusicMeshComponent, UStaticMeshComponent);
}

void APuzzleKeyedInstrument::BeforeDelete()
{
	ADockableKeyedInstrument::BeforeDelete();

	DELE_PTR_FULL(SequenceComponent);
	DELE_PTR_FULL(SheetMusicMeshComponent);
}

void UDockableKeyedInstrumentMoveYInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UDockableKeyedInstrumentMoveYInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UDockableKeyedInstrumentMoveXInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UDockableKeyedInstrumentMoveXInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UDockableKeyedInstrumentKeyPressNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UDockableKeyedInstrumentKeyPressNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UDockableKeyedInstrumentKeyPressNotificationReleasedInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UDockableKeyedInstrumentKeyPressNotificationReleasedInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnStopPlayKey
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDockableKeyedInstrumentCompositeInputHandler::OnStopPlayKey()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnStopPlayKey");

	UDockableKeyedInstrumentCompositeInputHandler_OnStopPlayKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnPlayKey
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDockableKeyedInstrumentCompositeInputHandler::OnPlayKey()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnPlayKey");

	UDockableKeyedInstrumentCompositeInputHandler_OnPlayKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnMoveY
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDockableKeyedInstrumentCompositeInputHandler::OnMoveY(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnMoveY");

	UDockableKeyedInstrumentCompositeInputHandler_OnMoveY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnMoveX
// (Final, Native, Private)
// Parameters:
// float                          Value                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDockableKeyedInstrumentCompositeInputHandler::OnMoveX(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableKeyedInstrumentCompositeInputHandler.OnMoveX");

	UDockableKeyedInstrumentCompositeInputHandler_OnMoveX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDockableKeyedInstrumentCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void UDockableKeyedInstrumentCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UInstrumentKeyComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(DynamicMaterialInstance, UMaterialInstanceDynamic);
	READ_PTR_FULL(KeyPressSFX, UWwiseEvent);
	READ_PTR_FULL(KeyReleaseSFX, UWwiseEvent);
}

void UInstrumentKeyComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(DynamicMaterialInstance);
	DELE_PTR_FULL(KeyPressSFX);
	DELE_PTR_FULL(KeyReleaseSFX);
}

// Function Athena.SailAngleInterface.GetSailTurnRate
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USailAngleInterface::GetSailTurnRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailAngleInterface.GetSailTurnRate");

	USailAngleInterface_GetSailTurnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetSailAngleRatio
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USailAngleInterface::GetSailAngleRatio()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailAngleInterface.GetSailAngleRatio");

	USailAngleInterface_GetSailAngleRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USailAngleInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USailAngleInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SailHoistInterface.GetSailRaisedPercentage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USailHoistInterface::GetSailRaisedPercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailHoistInterface.GetSailRaisedPercentage");

	USailHoistInterface_GetSailRaisedPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SailHoistInterface.GetSailMovementRate
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float USailHoistInterface::GetSailMovementRate()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SailHoistInterface.GetSailMovementRate");

	USailHoistInterface_GetSailMovementRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void USailHoistInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USailHoistInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UBootyItemWithCutscenesAnimationInstance::AfterRead()
{
	UWieldableItemAnimationInstance::AfterRead();

	READ_PTR_FULL(BootyItemSkeletalMesh, USkeletalMeshComponent);
	READ_PTR_FULL(CutsceneAnimationData, UCutsceneAnimationDataAsset);
	READ_PTR_FULL(CurrentCutscene, UAnimMontage);
}

void UBootyItemWithCutscenesAnimationInstance::BeforeDelete()
{
	UWieldableItemAnimationInstance::BeforeDelete();

	DELE_PTR_FULL(BootyItemSkeletalMesh);
	DELE_PTR_FULL(CutsceneAnimationData);
	DELE_PTR_FULL(CurrentCutscene);
}

void UTotallyPointlessClass::AfterRead()
{
	UObject::AfterRead();

}

void UTotallyPointlessClass::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.CoordinatedCutsceneTrigger.TryChangingActivatonState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ECutsceneActivatonState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedCutsceneTrigger::TryChangingActivatonState(TEnumAsByte<Athena_ECutsceneActivatonState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.TryChangingActivatonState");

	ACoordinatedCutsceneTrigger_TryChangingActivatonState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedCutsceneTrigger.SetCurrentState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ECutsceneActivatonState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedCutsceneTrigger::SetCurrentState(TEnumAsByte<Athena_ECutsceneActivatonState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.SetCurrentState");

	ACoordinatedCutsceneTrigger_SetCurrentState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedCutsceneTrigger.SetActivationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_ECutsceneActivatonState> InActivationState              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedCutsceneTrigger::SetActivationState(TEnumAsByte<Athena_ECutsceneActivatonState> InActivationState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.SetActivationState");

	ACoordinatedCutsceneTrigger_SetActivationState_Params params;
	params.InActivationState = InActivationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedCutsceneTrigger.PrintStateChangeToScreenInEditor
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_ECutsceneActivatonState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedCutsceneTrigger::PrintStateChangeToScreenInEditor(TEnumAsByte<Athena_ECutsceneActivatonState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.PrintStateChangeToScreenInEditor");

	ACoordinatedCutsceneTrigger_PrintStateChangeToScreenInEditor_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CoordinatedCutsceneTrigger.GetCutsceneStartDelayWhenReattemptingActivation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ACoordinatedCutsceneTrigger::GetCutsceneStartDelayWhenReattemptingActivation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.GetCutsceneStartDelayWhenReattemptingActivation");

	ACoordinatedCutsceneTrigger_GetCutsceneStartDelayWhenReattemptingActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoordinatedCutsceneTrigger.GetCurrentActivationState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_ECutsceneActivatonState> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_ECutsceneActivatonState> ACoordinatedCutsceneTrigger::GetCurrentActivationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.GetCurrentActivationState");

	ACoordinatedCutsceneTrigger_GetCurrentActivationState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CoordinatedCutsceneTrigger.ChangeCutsceneTriggerStateInBlueprints
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<Athena_ECutsceneActivatonState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACoordinatedCutsceneTrigger::ChangeCutsceneTriggerStateInBlueprints(TEnumAsByte<Athena_ECutsceneActivatonState> NewState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CoordinatedCutsceneTrigger.ChangeCutsceneTriggerStateInBlueprints");

	ACoordinatedCutsceneTrigger_ChangeCutsceneTriggerStateInBlueprints_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACoordinatedCutsceneTrigger::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(EditorOnlyIcon, UBillboardComponent);
	READ_PTR_FULL(EditorOnlyCutsceneNameDisplay, UTextRenderComponent);
}

void ACoordinatedCutsceneTrigger::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(EditorOnlyIcon);
	DELE_PTR_FULL(EditorOnlyCutsceneNameDisplay);
}

void UCutsceneActorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneActorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCutsceneAnimationDataAssetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCutsceneAnimationDataAssetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShipCustomizationLoadoutComponent.OnRep_Loadout
// (Final, Native, Private)
void UShipCustomizationLoadoutComponent::OnRep_Loadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipCustomizationLoadoutComponent.OnRep_Loadout");

	UShipCustomizationLoadoutComponent_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UShipCustomizationLoadoutComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Ship, AShip);
	READ_PTR_FULL(ShipSize, UClass);
}

void UShipCustomizationLoadoutComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(ShipSize);
}

// Function Athena.CrewShipManifest.SetProposedVoyage
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UVoyageProposalDesc*     Proposal                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACrewShipManifest::SetProposedVoyage(class UVoyageProposalDesc* Proposal, int SlotIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.SetProposedVoyage");

	ACrewShipManifest_SetProposedVoyage_Params params;
	params.Proposal = Proposal;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_VoyageSelectionVoteData
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_VoyageSelectionVoteData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_VoyageSelectionVoteData");

	ACrewShipManifest_OnRep_VoyageSelectionVoteData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_VoyageCancelVoteData
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_VoyageCancelVoteData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_VoyageCancelVoteData");

	ACrewShipManifest_OnRep_VoyageCancelVoteData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_TaleSelectionVoteData
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_TaleSelectionVoteData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_TaleSelectionVoteData");

	ACrewShipManifest_OnRep_TaleSelectionVoteData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_TaleCancelVoteData
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_TaleCancelVoteData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_TaleCancelVoteData");

	ACrewShipManifest_OnRep_TaleCancelVoteData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_ProposedVoyages
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_ProposedVoyages()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_ProposedVoyages");

	ACrewShipManifest_OnRep_ProposedVoyages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_ProposedTales
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_ProposedTales()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_ProposedTales");

	ACrewShipManifest_OnRep_ProposedTales_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_CurrentActiveVoyage
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_CurrentActiveVoyage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_CurrentActiveVoyage");

	ACrewShipManifest_OnRep_CurrentActiveVoyage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnRep_CurrentActiveTale
// (Final, Native, Protected)
void ACrewShipManifest::OnRep_CurrentActiveTale()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnRep_CurrentActiveTale");

	ACrewShipManifest_OnRep_CurrentActiveTale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.OnCrewUpdated
// (Final, Native, Protected)
void ACrewShipManifest::OnCrewUpdated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.OnCrewUpdated");

	ACrewShipManifest_OnCrewUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewShipManifest.IsCurrentVoyageActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UVoyageProposalDesc*     Proposal                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ACrewShipManifest::IsCurrentVoyageActive(class UVoyageProposalDesc* Proposal)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.IsCurrentVoyageActive");

	ACrewShipManifest_IsCurrentVoyageActive_Params params;
	params.Proposal = Proposal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewShipManifest.HasPlayerProposedVoyage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAthenaPlayerState*      Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ACrewShipManifest::HasPlayerProposedVoyage(class AAthenaPlayerState* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.HasPlayerProposedVoyage");

	ACrewShipManifest_HasPlayerProposedVoyage_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewShipManifest.HasPlayerProposedParticularVoyage
// (Final, RequiredAPI, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAthenaPlayerState*      Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Proposal                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ACrewShipManifest::HasPlayerProposedParticularVoyage(class AAthenaPlayerState* Player, class UClass* Proposal)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.HasPlayerProposedParticularVoyage");

	ACrewShipManifest_HasPlayerProposedParticularVoyage_Params params;
	params.Player = Player;
	params.Proposal = Proposal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CrewShipManifest.GetProposedVoyages
// (Final, RequiredAPI, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FProposedVoyageEntry> OutProposedVoyages             (Parm, OutParm, ZeroConstructor)
void ACrewShipManifest::GetProposedVoyages(TArray<struct FProposedVoyageEntry>* OutProposedVoyages)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewShipManifest.GetProposedVoyages");

	ACrewShipManifest_GetProposedVoyages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutProposedVoyages != nullptr)
		*OutProposedVoyages = params.OutProposedVoyages;

}


void ACrewShipManifest::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(NPCIdList, UNPCIdAsset);
	READ_PTR_FULL(AssociatedShipSize, UClass);
	READ_PTR_FULL(CurrentActiveVoyage, UVoyageProposalDesc);
	READ_PTR_FULL(CurrentActiveTale, UVoyageDescDataAsset);
	READ_PTR_FULL(ShipCustomizationLoadoutComponent, UShipCustomizationLoadoutComponent);
	READ_PTR_FULL(CurrentActiveEmissaryCompany, UCompany);
}

void ACrewShipManifest::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(NPCIdList);
	DELE_PTR_FULL(AssociatedShipSize);
	DELE_PTR_FULL(CurrentActiveVoyage);
	DELE_PTR_FULL(CurrentActiveTale);
	DELE_PTR_FULL(ShipCustomizationLoadoutComponent);
	DELE_PTR_FULL(CurrentActiveEmissaryCompany);
}

void UCrewSpawnLocationVariablesListAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCrewSpawnLocationVariablesListAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ACrewSpawnLocations::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SpawnVariablesAsset, UCrewSpawnLocationVariablesListAsset);
}

void ACrewSpawnLocations::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SpawnVariablesAsset);
}

// Function Athena.CrewVoyageParticipant.OnPlayerStateEndPlay
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Engine_EEndPlayReason> InReason                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCrewVoyageParticipant::OnPlayerStateEndPlay(TEnumAsByte<Engine_EEndPlayReason> InReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewVoyageParticipant.OnPlayerStateEndPlay");

	UCrewVoyageParticipant_OnPlayerStateEndPlay_Params params;
	params.InReason = InReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CrewVoyageParticipant.OnPlayerStateDestroyed
// (Final, Native, Private)
void UCrewVoyageParticipant::OnPlayerStateDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewVoyageParticipant.OnPlayerStateDestroyed");

	UCrewVoyageParticipant_OnPlayerStateDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UCrewVoyageParticipant::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(PlayerState, APlayerState);
}

void UCrewVoyageParticipant::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(PlayerState);
}

void UCursedCannonballData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCursedCannonballData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCurseStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UCurseStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.CustomisationPreviewShip.UpdateVisuals
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ACustomisationPreviewShip::UpdateVisuals()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.UpdateVisuals");

	ACustomisationPreviewShip_UpdateVisuals_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomisationPreviewShip.StartParticles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACustomisationPreviewShip* OriginalActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACustomisationPreviewShip::StartParticles(class ACustomisationPreviewShip* OriginalActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.StartParticles");

	ACustomisationPreviewShip_StartParticles_Params params;
	params.OriginalActor = OriginalActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomisationPreviewShip.SpawnParticles
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ACustomisationPreviewShip::SpawnParticles()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.SpawnParticles");

	ACustomisationPreviewShip_SpawnParticles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomisationPreviewShip.SetShipCustomizationInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UShipCustomizationInfo*  NewShipCustomizationInfo       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACustomisationPreviewShip::SetShipCustomizationInfo(class UShipCustomizationInfo* NewShipCustomizationInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.SetShipCustomizationInfo");

	ACustomisationPreviewShip_SetShipCustomizationInfo_Params params;
	params.NewShipCustomizationInfo = NewShipCustomizationInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomisationPreviewShip.SetLiveryCustomiser
// (Final, Native, Public, BlueprintCallable)
void ACustomisationPreviewShip::SetLiveryCustomiser()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.SetLiveryCustomiser");

	ACustomisationPreviewShip_SetLiveryCustomiser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomisationPreviewShip.SetCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   NewCategory                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACustomisationPreviewShip::SetCategory(const struct FName& NewCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.SetCategory");

	ACustomisationPreviewShip_SetCategory_Params params;
	params.NewCategory = NewCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomisationPreviewShip.GetShipCustomizationInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UShipCustomizationInfo*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UShipCustomizationInfo* ACustomisationPreviewShip::GetShipCustomizationInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.GetShipCustomizationInfo");

	ACustomisationPreviewShip_GetShipCustomizationInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CustomisationPreviewShip.GetCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName ACustomisationPreviewShip::GetCategory()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomisationPreviewShip.GetCategory");

	ACustomisationPreviewShip_GetCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ACustomisationPreviewShip::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ShipCustomizationInfo, UShipCustomizationInfo);
	READ_PTR_FULL(LiveryComponent, UShipLiveryComponent);
	READ_PTR_FULL(HullLiveryCustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(SailsLiveryCustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(CannonEnchantmentCustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(MastChildActorComponent, UChildActorComponent);
	READ_PTR_FULL(WheelChildActorComponent, UChildActorComponent);
	READ_PTR_FULL(CapstanChildActorComponent, UChildActorComponent);
	READ_PTR_FULL(CannonChildActorComponent, UChildActorComponent);
}

void ACustomisationPreviewShip::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ShipCustomizationInfo);
	DELE_PTR_FULL(LiveryComponent);
	DELE_PTR_FULL(HullLiveryCustomizationComponent);
	DELE_PTR_FULL(SailsLiveryCustomizationComponent);
	DELE_PTR_FULL(CannonEnchantmentCustomizationComponent);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(MastChildActorComponent);
	DELE_PTR_FULL(WheelChildActorComponent);
	DELE_PTR_FULL(CapstanChildActorComponent);
	DELE_PTR_FULL(CannonChildActorComponent);
}

void UCustomizableShipServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCustomizableShipServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CustomizableTriggerInterface.RemoveTrigger
// (Native, Public)
// Parameters:
// int                            TriggerId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCustomizableTriggerInterface::RemoveTrigger(int TriggerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerInterface.RemoveTrigger");

	UCustomizableTriggerInterface_RemoveTrigger_Params params;
	params.TriggerId = TriggerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CustomizableTriggerInterface.CreateSphereTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCustomizableTriggerInterface::CreateSphereTrigger(class UWorld* World, const struct FVector& Location, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerInterface.CreateSphereTrigger");

	UCustomizableTriggerInterface_CreateSphereTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CustomizableTriggerInterface.CreateBoxTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 Extent                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCustomizableTriggerInterface::CreateBoxTrigger(class UWorld* World, const struct FVector& Location, const struct FVector& Extent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerInterface.CreateBoxTrigger");

	UCustomizableTriggerInterface_CreateBoxTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Extent = Extent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCustomizableTriggerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCustomizableTriggerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CustomizableTriggerService.RemoveTrigger
// (Native, Public)
// Parameters:
// int                            TriggerId                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCustomizableTriggerService::RemoveTrigger(int TriggerId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerService.RemoveTrigger");

	UCustomizableTriggerService_RemoveTrigger_Params params;
	params.TriggerId = TriggerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CustomizableTriggerService.OnTriggerBeginOverlap
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UCustomizableTriggerService::OnTriggerBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerService.OnTriggerBeginOverlap");

	UCustomizableTriggerService_OnTriggerBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CustomizableTriggerService.CreateSphereTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCustomizableTriggerService::CreateSphereTrigger(class UWorld* World, const struct FVector& Location, float Radius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerService.CreateSphereTrigger");

	UCustomizableTriggerService_CreateSphereTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CustomizableTriggerService.CreateBoxTrigger
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 Extent                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCustomizableTriggerService::CreateBoxTrigger(class UWorld* World, const struct FVector& Location, const struct FVector& Extent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CustomizableTriggerService.CreateBoxTrigger");

	UCustomizableTriggerService_CreateBoxTrigger_Params params;
	params.World = World;
	params.Location = Location;
	params.Extent = Extent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCustomizableTriggerService::AfterRead()
{
	UObject::AfterRead();

}

void UCustomizableTriggerService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UCutlassDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UCutlassDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

// Function Athena.CutSceneActor.StartLocalAnimation
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InTargetActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InAnimationNameToPlay          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InLocalMusicZone               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class APlaceableReaction*      InPlaceableReaction            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ACutSceneActor::StartLocalAnimation(class AActor* InTargetActor, const struct FName& InAnimationNameToPlay, class UClass* InLocalMusicZone, class APlaceableReaction* InPlaceableReaction)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutSceneActor.StartLocalAnimation");

	ACutSceneActor_StartLocalAnimation_Params params;
	params.InTargetActor = InTargetActor;
	params.InAnimationNameToPlay = InAnimationNameToPlay;
	params.InLocalMusicZone = InLocalMusicZone;
	params.InPlaceableReaction = InPlaceableReaction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutSceneActor.SetDialogueData
// (Final, RequiredAPI, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USceneDialogueData*      DialogueData                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FText>           InLocalisableNames             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void ACutSceneActor::SetDialogueData(class USceneDialogueData* DialogueData, TArray<struct FText> InLocalisableNames)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutSceneActor.SetDialogueData");

	ACutSceneActor_SetDialogueData_Params params;
	params.DialogueData = DialogueData;
	params.InLocalisableNames = InLocalisableNames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutSceneActor.OnRep_TargetActor
// (Final, RequiredAPI, Native, Private)
void ACutSceneActor::OnRep_TargetActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutSceneActor.OnRep_TargetActor");

	ACutSceneActor_OnRep_TargetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CutSceneActor.OnRep_CutsceneActivated
// (Final, RequiredAPI, Native, Private)
void ACutSceneActor::OnRep_CutsceneActivated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CutSceneActor.OnRep_CutsceneActivated");

	ACutSceneActor_OnRep_CutsceneActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ACutSceneActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(DefaultSceneRoot, USceneComponent);
	READ_PTR_FULL(CutSceneSubtitlesComponent, UCutSceneSubtitlesComponent);
	READ_PTR_FULL(LocalMusicZone, UClass);
	READ_PTR_FULL(PlaceableReaction, APlaceableReaction);
	READ_PTR_FULL(DialogueData, USceneDialogueData);
}

void ACutSceneActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(DefaultSceneRoot);
	DELE_PTR_FULL(CutSceneSubtitlesComponent);
	DELE_PTR_FULL(LocalMusicZone);
	DELE_PTR_FULL(PlaceableReaction);
	DELE_PTR_FULL(DialogueData);
}

// Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLookAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Strength                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          IgnoreList                     (ConstParm, Parm, ZeroConstructor)
void UDamageBlueprintFunctionLibrary::STATIC_TriggerShipImpactDamageFromLookAt(class AAthenaPlayerCharacter* AthenaCharacter, float Strength, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLookAt");

	UDamageBlueprintFunctionLibrary_TriggerShipImpactDamageFromLookAt_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Strength = Strength;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLocationAndDirection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Strength                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AActor*>          IgnoreList                     (ConstParm, Parm, ZeroConstructor)
void UDamageBlueprintFunctionLibrary::STATIC_TriggerShipImpactDamageFromLocationAndDirection(class UObject* WorldContext, float Strength, const struct FVector& Location, const struct FVector& Direction, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLocationAndDirection");

	UDamageBlueprintFunctionLibrary_TriggerShipImpactDamageFromLocationAndDirection_Params params;
	params.WorldContext = WorldContext;
	params.Strength = Strength;
	params.Location = Location;
	params.Direction = Direction;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AShip*                   Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int                            NumHoles                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  DamagerType                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UDamageBlueprintFunctionLibrary::STATIC_TriggerShipImpactDamageAtLocation(class AShip* Ship, const struct FVector& Location, int NumHoles, class UClass* DamagerType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageAtLocation");

	UDamageBlueprintFunctionLibrary_TriggerShipImpactDamageAtLocation_Params params;
	params.Ship = Ship;
	params.Location = Location;
	params.NumHoles = NumHoles;
	params.DamagerType = DamagerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLookAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaCharacter                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Strength                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          IgnoreList                     (ConstParm, Parm, ZeroConstructor)
void UDamageBlueprintFunctionLibrary::STATIC_TriggerPlayerImpactDamageFromLookAt(class AAthenaPlayerCharacter* AthenaCharacter, float Strength, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLookAt");

	UDamageBlueprintFunctionLibrary_TriggerPlayerImpactDamageFromLookAt_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Strength = Strength;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLocationAndDirection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Strength                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 Direction                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AActor*>          IgnoreList                     (ConstParm, Parm, ZeroConstructor)
void UDamageBlueprintFunctionLibrary::STATIC_TriggerPlayerImpactDamageFromLocationAndDirection(class UObject* WorldContext, float Strength, const struct FVector& Location, const struct FVector& Direction, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLocationAndDirection");

	UDamageBlueprintFunctionLibrary_TriggerPlayerImpactDamageFromLocationAndDirection_Params params;
	params.WorldContext = WorldContext;
	params.Strength = Strength;
	params.Location = Location;
	params.Direction = Direction;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDamageBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UDamageBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.LeakableInterface.GetLeakAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ULeakableInterface::GetLeakAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LeakableInterface.GetLeakAmount");

	ULeakableInterface_GetLeakAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULeakableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULeakableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DamageZone.ShouldBeDescribed
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InInteractor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ADamageZone::ShouldBeDescribed(class AActor* InInteractor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.ShouldBeDescribed");

	ADamageZone_ShouldBeDescribed_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.SetPreventLeakingForTesting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InPreventLeaking               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ADamageZone::SetPreventLeakingForTesting(bool InPreventLeaking)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.SetPreventLeakingForTesting");

	ADamageZone_SetPreventLeakingForTesting_Params params;
	params.InPreventLeaking = InPreventLeaking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.PlayHitVFX
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UParticleSystem*         VFX                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADamageZone::PlayHitVFX(class UParticleSystem* VFX)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.PlayHitVFX");

	ADamageZone_PlayHitVFX_Params params;
	params.VFX = VFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnUnderwaterStateChanged
// (Event, Protected, BlueprintEvent)
void ADamageZone::OnUnderwaterStateChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnUnderwaterStateChanged");

	ADamageZone_OnUnderwaterStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnShipSet
// (Event, Public, BlueprintCallable, BlueprintEvent)
void ADamageZone::OnShipSet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnShipSet");

	ADamageZone_OnShipSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnShipCleared
// (Event, Public, BlueprintCallable, BlueprintEvent)
void ADamageZone::OnShipCleared()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnShipCleared");

	ADamageZone_OnShipCleared_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnShipBeginsToSink
// (Event, Protected, BlueprintEvent)
void ADamageZone::OnShipBeginsToSink()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnShipBeginsToSink");

	ADamageZone_OnShipBeginsToSink_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnRepairMounted
// (Event, Public, BlueprintCallable, BlueprintEvent)
void ADamageZone::OnRepairMounted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnRepairMounted");

	ADamageZone_OnRepairMounted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnRepairableStateUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> InRepairableState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADamageZone::OnRepairableStateUpdate(TEnumAsByte<Repair_ERepairableState> InRepairableState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnRepairableStateUpdate");

	ADamageZone_OnRepairableStateUpdate_Params params;
	params.InRepairableState = InRepairableState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnRep_DamageLevel
// (Final, Native, Private)
void ADamageZone::OnRep_DamageLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnRep_DamageLevel");

	ADamageZone_OnRep_DamageLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnRep_AuthorityRepairableState
// (Final, Native, Private)
void ADamageZone::OnRep_AuthorityRepairableState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnRep_AuthorityRepairableState");

	ADamageZone_OnRep_AuthorityRepairableState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnInitialise
// (Event, Public, BlueprintEvent)
void ADamageZone::OnInitialise()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnInitialise");

	ADamageZone_OnInitialise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.OnDecalMaterialUpdatedToRepaired
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
void ADamageZone::OnDecalMaterialUpdatedToRepaired()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.OnDecalMaterialUpdatedToRepaired");

	ADamageZone_OnDecalMaterialUpdatedToRepaired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.Multicast_PlayDamageEffectsRPC
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// bool                           PlaySfx                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           PlayVFX                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ADamageZone::Multicast_PlayDamageEffectsRPC(bool PlaySfx, bool PlayVFX)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.Multicast_PlayDamageEffectsRPC");

	ADamageZone_Multicast_PlayDamageEffectsRPC_Params params;
	params.PlaySfx = PlaySfx;
	params.PlayVFX = PlayVFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.IsOnSinkingShip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ADamageZone::IsOnSinkingShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.IsOnSinkingShip");

	ADamageZone_IsOnSinkingShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.IsAboutToBlow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ADamageZone::IsAboutToBlow()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.IsAboutToBlow");

	ADamageZone_IsAboutToBlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.InitialiseInternalWaterSamplePositions
// (Final, Exec, Native, Private)
void ADamageZone::InitialiseInternalWaterSamplePositions()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.InitialiseInternalWaterSamplePositions");

	ADamageZone_InitialiseInternalWaterSamplePositions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DamageZone.GetShipOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AShip*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AShip* ADamageZone::GetShipOwner()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetShipOwner");

	ADamageZone_GetShipOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetRepairMountLocation
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         MountLocation                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   MountSocket                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ADamageZone::GetRepairMountLocation(class USceneComponent** MountLocation, struct FName* MountSocket)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetRepairMountLocation");

	ADamageZone_GetRepairMountLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MountLocation != nullptr)
		*MountLocation = params.MountLocation;
	if (MountSocket != nullptr)
		*MountSocket = params.MountSocket;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetPropertiesForSpecificLevelOfDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            InLevelOfDamage                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLevelOfDamageProperties ReturnValue                    (Parm, OutParm, ReturnParm)
struct FLevelOfDamageProperties ADamageZone::GetPropertiesForSpecificLevelOfDamage(int InLevelOfDamage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetPropertiesForSpecificLevelOfDamage");

	ADamageZone_GetPropertiesForSpecificLevelOfDamage_Params params;
	params.InLevelOfDamage = InLevelOfDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetMaxDamageLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ADamageZone::GetMaxDamageLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetMaxDamageLevel");

	ADamageZone_GetMaxDamageLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetLeakAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ADamageZone::GetLeakAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetLeakAmount");

	ADamageZone_GetLeakAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetHoleDecalPositionWorldSpace
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ADamageZone::GetHoleDecalPositionWorldSpace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetHoleDecalPositionWorldSpace");

	ADamageZone_GetHoleDecalPositionWorldSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetHoleDecalPositionLocalSpace
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ADamageZone::GetHoleDecalPositionLocalSpace()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetHoleDecalPositionLocalSpace");

	ADamageZone_GetHoleDecalPositionLocalSpace_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetDamagePercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ADamageZone::GetDamagePercentage()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetDamagePercentage");

	ADamageZone_GetDamagePercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetDamageLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int ADamageZone::GetDamageLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetDamageLevel");

	ADamageZone_GetDamageLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.GetCurrentLevelOfDamageProperties
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLevelOfDamageProperties ReturnValue                    (Parm, OutParm, ReturnParm)
struct FLevelOfDamageProperties ADamageZone::GetCurrentLevelOfDamageProperties()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.GetCurrentLevelOfDamageProperties");

	ADamageZone_GetCurrentLevelOfDamageProperties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DamageZone.ApplyDamage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FImpactDamageEvent      InHit                          (ConstParm, Parm, OutParm, ReferenceParm)
void ADamageZone::ApplyDamage(const struct FImpactDamageEvent& InHit)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageZone.ApplyDamage");

	ADamageZone_ApplyDamage_Params params;
	params.InHit = InHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADamageZone::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(SceneRootComponent, USceneComponent);
	READ_PTR_FULL(InteractionComponent, UInteractableComponent);
	READ_PTR_FULL(RepairType, UClass);
	READ_PTR_FULL(InternalWater, AShipInternalWater);
	READ_PTR_FULL(HoleDecalComponent, UDecalComponent);
	READ_PTR_FULL(WaterLeakParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(WaterLeakParticleSystemRepairing, UParticleSystemComponent);
	READ_PTR_FULL(BubbleLeakParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(BubbleLeakParticleSystemRepairing, UParticleSystemComponent);
	READ_PTR_FULL(SplashParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(InternalHitVfx, UParticleSystem);
	READ_PTR_FULL(WaterLeakSfx_Play, UWwiseEvent);
	READ_PTR_FULL(WaterLeakSfx_Stop, UWwiseEvent);
	READ_PTR_FULL(WaterLeakRepairSfx_Play, UWwiseEvent);
	READ_PTR_FULL(WaterLeakRepairSfx_Stop, UWwiseEvent);
	READ_PTR_FULL(WaterLeakWisePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(Strain_DamageSfx, UWwiseEvent);
	READ_PTR_FULL(StrainDamagePool, UWwiseObjectPoolWrapper);
}

void ADamageZone::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(SceneRootComponent);
	DELE_PTR_FULL(InteractionComponent);
	DELE_PTR_FULL(RepairType);
	DELE_PTR_FULL(InternalWater);
	DELE_PTR_FULL(HoleDecalComponent);
	DELE_PTR_FULL(WaterLeakParticleSystem);
	DELE_PTR_FULL(WaterLeakParticleSystemRepairing);
	DELE_PTR_FULL(BubbleLeakParticleSystem);
	DELE_PTR_FULL(BubbleLeakParticleSystemRepairing);
	DELE_PTR_FULL(SplashParticleSystem);
	DELE_PTR_FULL(InternalHitVfx);
	DELE_PTR_FULL(WaterLeakSfx_Play);
	DELE_PTR_FULL(WaterLeakSfx_Stop);
	DELE_PTR_FULL(WaterLeakRepairSfx_Play);
	DELE_PTR_FULL(WaterLeakRepairSfx_Stop);
	DELE_PTR_FULL(WaterLeakWisePool);
	DELE_PTR_FULL(Strain_DamageSfx);
	DELE_PTR_FULL(StrainDamagePool);
}

void UDamageZoneAIInteractableType::AfterRead()
{
	UAIInteractableType::AfterRead();

}

void UDamageZoneAIInteractableType::BeforeDelete()
{
	UAIInteractableType::BeforeDelete();

}

void UDebugCreateAndPlayNpcAnimationStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UDebugCreateAndPlayNpcAnimationStepDesc);
	READ_PTR_FULL(NPCDialogComponent, UNPCDialogComponent);
	READ_PTR_FULL(CutSceneActor, ACutSceneActor);
	READ_PTR_FULL(SpawnedActor, AActor);
	READ_PTR_FULL(PlaceableReactionActor, APlaceableReaction);
}

void UDebugCreateAndPlayNpcAnimationStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
	DELE_PTR_FULL(NPCDialogComponent);
	DELE_PTR_FULL(CutSceneActor);
	DELE_PTR_FULL(SpawnedActor);
	DELE_PTR_FULL(PlaceableReactionActor);
}

void UDebugCreateAndPlayNpcAnimationStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(NpcToSpawn, UClass);
	READ_PTR_FULL(AnimationParameters, UPlayNpcAnimationResource);
}

void UDebugCreateAndPlayNpcAnimationStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(NpcToSpawn);
	DELE_PTR_FULL(AnimationParameters);
}

// Function Athena.DebugFlyingActionStateId.PushCharacterIntoDebugFlyingActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugFlyingActionStateId::STATIC_PushCharacterIntoDebugFlyingActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingActionStateId.PushCharacterIntoDebugFlyingActionState");

	UDebugFlyingActionStateId_PushCharacterIntoDebugFlyingActionState_Params params;
	params.TrackId = TrackId;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDebugFlyingActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UDebugFlyingActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.DebugFlyingCompositeInputHandler.OnTurnRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnTurnRate");

	UDebugFlyingCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnTurn
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnTurn(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnTurn");

	UDebugFlyingCompositeInputHandler_OnTurn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnToggleItem
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnToggleItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnToggleItem");

	UDebugFlyingCompositeInputHandler_OnToggleItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnPrimaryItemUseReleased
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnPrimaryItemUseReleased()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnPrimaryItemUseReleased");

	UDebugFlyingCompositeInputHandler_OnPrimaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnPrimaryItemUsePressed
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnPrimaryItemUsePressed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnPrimaryItemUsePressed");

	UDebugFlyingCompositeInputHandler_OnPrimaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnMoveUp
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnMoveUp(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnMoveUp");

	UDebugFlyingCompositeInputHandler_OnMoveUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnMoveRight
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnMoveRight");

	UDebugFlyingCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnMoveForward
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnMoveForward");

	UDebugFlyingCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnLookUpRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnLookUpRate");

	UDebugFlyingCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnLookUp
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnLookUp");

	UDebugFlyingCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnDisengageInput
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnDisengageInput()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugFlyingCompositeInputHandler.OnDisengageInput");

	UDebugFlyingCompositeInputHandler_OnDisengageInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDebugFlyingCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UDebugFlyingCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

// Function Athena.DebugLandmarkLocation.EnableDrawingForAllMachines_RPC
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Flag                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ADebugLandmarkLocation::EnableDrawingForAllMachines_RPC(bool Flag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugLandmarkLocation.EnableDrawingForAllMachines_RPC");

	ADebugLandmarkLocation_EnableDrawingForAllMachines_RPC_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADebugLandmarkLocation::AfterRead()
{
	AActor::AfterRead();

}

void ADebugLandmarkLocation::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.DebugShipControlActionStateId.PushCharacterIntoDebugShipControlActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADebugShipController*    DebugShipController            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipControlActionStateId::STATIC_PushCharacterIntoDebugShipControlActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class ADebugShipController* DebugShipController, class AActor* Owner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipControlActionStateId.PushCharacterIntoDebugShipControlActionState");

	UDebugShipControlActionStateId_PushCharacterIntoDebugShipControlActionState_Params params;
	params.TrackId = TrackId;
	params.DebugShipController = DebugShipController;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDebugShipControlActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UDebugShipControlActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.DebugShipControlCompositeInputHandler.OnTurnRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipControlCompositeInputHandler.OnTurnRate");

	UDebugShipControlCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnMoveRight
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipControlCompositeInputHandler.OnMoveRight");

	UDebugShipControlCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnLookUpRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipControlCompositeInputHandler.OnLookUpRate");

	UDebugShipControlCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnJump
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnJump()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipControlCompositeInputHandler.OnJump");

	UDebugShipControlCompositeInputHandler_OnJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDebugShipControlCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UDebugShipControlCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

// Function Athena.DebugShipController.Server_RequestUpdateSailsLowered
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InRateOfChange                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADebugShipController::Server_RequestUpdateSailsLowered(float InRateOfChange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipController.Server_RequestUpdateSailsLowered");

	ADebugShipController_Server_RequestUpdateSailsLowered_Params params;
	params.InRateOfChange = InRateOfChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipController.Server_RequestUpdateSailsAngle
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InRateOfChange                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADebugShipController::Server_RequestUpdateSailsAngle(float InRateOfChange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipController.Server_RequestUpdateSailsAngle");

	ADebugShipController_Server_RequestUpdateSailsAngle_Params params;
	params.InRateOfChange = InRateOfChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipController.Server_RequestToggleAnchorState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ADebugShipController::Server_RequestToggleAnchorState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipController.Server_RequestToggleAnchorState");

	ADebugShipController_Server_RequestToggleAnchorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipController.Server_RequestSetRuddersAngleRatio
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InRateOfChange                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADebugShipController::Server_RequestSetRuddersAngleRatio(float InRateOfChange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipController.Server_RequestSetRuddersAngleRatio");

	ADebugShipController_Server_RequestSetRuddersAngleRatio_Params params;
	params.InRateOfChange = InRateOfChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADebugShipController::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(ControlledActor, AActor);
}

void ADebugShipController::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(ControlledActor);
}

// Function Athena.DebugShipFunctionLibrary.ToggleShipWheelDestroyedEveryXSecond
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          SecondsBetweenToggle           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Accumulator                    (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_ToggleShipWheelDestroyedEveryXSecond(class AActor* Ship, float DeltaSeconds, float SecondsBetweenToggle, float* Accumulator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.ToggleShipWheelDestroyedEveryXSecond");

	UDebugShipFunctionLibrary_ToggleShipWheelDestroyedEveryXSecond_Params params;
	params.Ship = Ship;
	params.DeltaSeconds = DeltaSeconds;
	params.SecondsBetweenToggle = SecondsBetweenToggle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Accumulator != nullptr)
		*Accumulator = params.Accumulator;

}


// Function Athena.DebugShipFunctionLibrary.ToggleShipCapstanDestroyedEveryXSecond
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          SecondsBetweenToggle           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Accumulator                    (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_ToggleShipCapstanDestroyedEveryXSecond(class AActor* Ship, float DeltaSeconds, float SecondsBetweenToggle, float* Accumulator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.ToggleShipCapstanDestroyedEveryXSecond");

	UDebugShipFunctionLibrary_ToggleShipCapstanDestroyedEveryXSecond_Params params;
	params.Ship = Ship;
	params.DeltaSeconds = DeltaSeconds;
	params.SecondsBetweenToggle = SecondsBetweenToggle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Accumulator != nullptr)
		*Accumulator = params.Accumulator;

}


// Function Athena.DebugShipFunctionLibrary.ToggleAllMastsDestroyedEveryXSecond
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Masts                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          SecondsBetweenToggle           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Accumulator                    (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_ToggleAllMastsDestroyedEveryXSecond(TArray<class AActor*> Masts, float DeltaSeconds, float SecondsBetweenToggle, float* Accumulator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.ToggleAllMastsDestroyedEveryXSecond");

	UDebugShipFunctionLibrary_ToggleAllMastsDestroyedEveryXSecond_Params params;
	params.Masts = Masts;
	params.DeltaSeconds = DeltaSeconds;
	params.SecondsBetweenToggle = SecondsBetweenToggle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Accumulator != nullptr)
		*Accumulator = params.Accumulator;

}


// Function Athena.DebugShipFunctionLibrary.SetAllWheelAngle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Angle                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllWheelAngle(class AActor* Ship, float Angle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllWheelAngle");

	UDebugShipFunctionLibrary_SetAllWheelAngle_Params params;
	params.Ship = Ship;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllSailsLoweredProportion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Proportion                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllSailsLoweredProportion(class AActor* Ship, float Proportion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllSailsLoweredProportion");

	UDebugShipFunctionLibrary_SetAllSailsLoweredProportion_Params params;
	params.Ship = Ship;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllSailsDamageScalar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Proportion                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllSailsDamageScalar(class AActor* Ship, float Proportion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllSailsDamageScalar");

	UDebugShipFunctionLibrary_SetAllSailsDamageScalar_Params params;
	params.Ship = Ship;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllSailsAngle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Angle                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllSailsAngle(class AActor* Ship, float Angle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllSailsAngle");

	UDebugShipFunctionLibrary_SetAllSailsAngle_Params params;
	params.Ship = Ship;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllRuddersAngleRatio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InRudderAngleRatio             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllRuddersAngleRatio(class AActor* Ship, float InRudderAngleRatio)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllRuddersAngleRatio");

	UDebugShipFunctionLibrary_SetAllRuddersAngleRatio_Params params;
	params.Ship = Ship;
	params.InRudderAngleRatio = InRudderAngleRatio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllCapstansPosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Position                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllCapstansPosition(class AActor* Ship, float Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllCapstansPosition");

	UDebugShipFunctionLibrary_SetAllCapstansPosition_Params params;
	params.Ship = Ship;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllCannonsAim
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Pitch                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Yaw                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllCannonsAim(class AActor* Ship, float Pitch, float Yaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllCannonsAim");

	UDebugShipFunctionLibrary_SetAllCannonsAim_Params params;
	params.Ship = Ship;
	params.Pitch = Pitch;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.SetAllAnchorsLoweredProportion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InLoweredProportion            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_SetAllAnchorsLoweredProportion(class AActor* Ship, float InLoweredProportion)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.SetAllAnchorsLoweredProportion");

	UDebugShipFunctionLibrary_SetAllAnchorsLoweredProportion_Params params;
	params.Ship = Ship;
	params.InLoweredProportion = InLoweredProportion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.RotateAllMastsSailAngles
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Masts                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          PercentPerSec                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_RotateAllMastsSailAngles(TArray<class AActor*> Masts, float DeltaSeconds, float* PercentPerSec)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.RotateAllMastsSailAngles");

	UDebugShipFunctionLibrary_RotateAllMastsSailAngles_Params params;
	params.Masts = Masts;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PercentPerSec != nullptr)
		*PercentPerSec = params.PercentPerSec;

}


// Function Athena.DebugShipFunctionLibrary.FireEveryNthCannons
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            EveryNthCannons                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_FireEveryNthCannons(class AActor* Ship, int EveryNthCannons)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.FireEveryNthCannons");

	UDebugShipFunctionLibrary_FireEveryNthCannons_Params params;
	params.Ship = Ship;
	params.EveryNthCannons = EveryNthCannons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.FireCannonEveryXSecond
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Cannons                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          SecondsBetweenShots            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Accumulator                    (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            CannonIndex                    (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_FireCannonEveryXSecond(TArray<class AActor*> Cannons, float DeltaSeconds, float SecondsBetweenShots, float* Accumulator, int* CannonIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.FireCannonEveryXSecond");

	UDebugShipFunctionLibrary_FireCannonEveryXSecond_Params params;
	params.Cannons = Cannons;
	params.DeltaSeconds = DeltaSeconds;
	params.SecondsBetweenShots = SecondsBetweenShots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Accumulator != nullptr)
		*Accumulator = params.Accumulator;
	if (CannonIndex != nullptr)
		*CannonIndex = params.CannonIndex;

}


// Function Athena.DebugShipFunctionLibrary.FireAllCannons
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Ship                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_FireAllCannons(class AActor* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.FireAllCannons");

	UDebugShipFunctionLibrary_FireAllCannons_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DebugShipFunctionLibrary.CycleAllMastsSailLowered
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AActor*>          Masts                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          PercentPerSec                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugShipFunctionLibrary::STATIC_CycleAllMastsSailLowered(TArray<class AActor*> Masts, float DeltaSeconds, float* PercentPerSec)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugShipFunctionLibrary.CycleAllMastsSailLowered");

	UDebugShipFunctionLibrary_CycleAllMastsSailLowered_Params params;
	params.Masts = Masts;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (PercentPerSec != nullptr)
		*PercentPerSec = params.PercentPerSec;

}


void UDebugShipFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UDebugShipFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UDebugShipInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDebugShipInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDebugShipService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(PlayerShip, AShip);
}

void UDebugShipService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(PlayerShip);
}

void UDebugSkipToStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UDebugSkipToStepDesc);
	READ_PTR_FULL(NextStep, UTaleQuestStep);
}

void UDebugSkipToStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(NextStep);
}

void UDebugSkipToStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(NextDesc, UTaleQuestStepDesc);
}

void UDebugSkipToStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(NextDesc);
}

// Function Athena.DebugSuperSailorActionStateId.PushCharacterIntoDebugSuperSailorActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDebugSuperSailorActionStateId::STATIC_PushCharacterIntoDebugSuperSailorActionState(TEnumAsByte<ActionStateMachine_EActionStateMachineTrackId> TrackId, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugSuperSailorActionStateId.PushCharacterIntoDebugSuperSailorActionState");

	UDebugSuperSailorActionStateId_PushCharacterIntoDebugSuperSailorActionState_Params params;
	params.TrackId = TrackId;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDebugSuperSailorActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UDebugSuperSailorActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.DebugSuperSailorCompositeInputHandler.OnRightTrigger
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnRightTrigger(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugSuperSailorCompositeInputHandler.OnRightTrigger");

	UDebugSuperSailorCompositeInputHandler_OnRightTrigger_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveRight
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveRight");

	UDebugSuperSailorCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveForward
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveForward");

	UDebugSuperSailorCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnDisengageInput
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnDisengageInput()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugSuperSailorCompositeInputHandler.OnDisengageInput");

	UDebugSuperSailorCompositeInputHandler_OnDisengageInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDebugSuperSailorCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UDebugSuperSailorCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void UDebugTeleportCrewStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UDebugTeleportCrewStepDesc);
}

void UDebugTeleportCrewStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UDebugTeleportCrewStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UDebugTeleportCrewStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.DebugTreasureLocation.EnableDrawingForAllMachines_RPC
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Flag                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ADebugTreasureLocation::EnableDrawingForAllMachines_RPC(bool Flag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DebugTreasureLocation.EnableDrawingForAllMachines_RPC");

	ADebugTreasureLocation_EnableDrawingForAllMachines_RPC_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADebugTreasureLocation::AfterRead()
{
	AActor::AfterRead();

}

void ADebugTreasureLocation::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UDebugWieldablesData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UDebugWieldablesData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void AOpinionatedNameplateAttitudeTestActor::AfterRead()
{
	AActor::AfterRead();

}

void AOpinionatedNameplateAttitudeTestActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void ADeferredNameplateAttitudeTestActor::AfterRead()
{
	APawn::AfterRead();

}

void ADeferredNameplateAttitudeTestActor::BeforeDelete()
{
	APawn::BeforeDelete();

}

// Function Athena.DelayLoadService.ShouldWaitForLoads
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDelayLoadService::ShouldWaitForLoads()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DelayLoadService.ShouldWaitForLoads");

	UDelayLoadService_ShouldWaitForLoads_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DelayLoadService.AreFrontEndLoadsComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UDelayLoadService::AreFrontEndLoadsComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DelayLoadService.AreFrontEndLoadsComplete");

	UDelayLoadService_AreFrontEndLoadsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UDelayLoadService::AfterRead()
{
	UObject::AfterRead();

}

void UDelayLoadService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UDelayStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UDelayStepDesc);
}

void UDelayStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UDelayStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UDelayStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UDeliverableCompanyRequirement::AfterRead()
{
	UDeliverableRequirementBase::AfterRead();

}

void UDeliverableCompanyRequirement::BeforeDelete()
{
	UDeliverableRequirementBase::BeforeDelete();

}

void UDiggableParentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDiggableParentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDiggingAnimationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Default, UItemDiggingAnimationConfig);
}

void UDiggingAnimationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Default);
}

void UDiggingAudioDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Default, UItemDiggingAudioConfig);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
}

void UDiggingAudioDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Default);
	DELE_PTR_FULL(SfxPool);
}

void UDiggingBaseParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Default, UItemDiggingBaseConfig);
}

void UDiggingBaseParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Default);
}

void UExhumableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UExhumableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DiggingComponent.OnRep_State
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EDiggingState> OldState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDiggingComponent::OnRep_State(TEnumAsByte<Athena_EDiggingState> OldState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DiggingComponent.OnRep_State");

	UDiggingComponent_OnRep_State_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DiggingComponent.OnRep_NumDigsLeft
// (Final, Native, Private)
// Parameters:
// int                            PrevNumDigsLeft                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDiggingComponent::OnRep_NumDigsLeft(int PrevNumDigsLeft)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DiggingComponent.OnRep_NumDigsLeft");

	UDiggingComponent_OnRep_NumDigsLeft_Params params;
	params.PrevNumDigsLeft = PrevNumDigsLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDiggingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Discoverer, AActor);
	READ_PTR_FULL(ItemDynamicMaterial, UMaterialInstanceDynamic);
	READ_PTR_FULL(CachedSfxPool, UWwiseObjectPoolWrapper);
}

void UDiggingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Discoverer);
	DELE_PTR_FULL(ItemDynamicMaterial);
	DELE_PTR_FULL(CachedSfxPool);
}

void UDiggingEffectsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Default, UItemDiggingEffectsConfig);
}

void UDiggingEffectsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Default);
}

void UDiggingConfigResolverDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AudioDataAsset, UDiggingAudioDataAsset);
	READ_PTR_FULL(AnimationDataAsset, UDiggingAnimationDataAsset);
	READ_PTR_FULL(EffectsDataAsset, UDiggingEffectsDataAsset);
	READ_PTR_FULL(BaseParamsDataAsset, UDiggingBaseParamsDataAsset);
}

void UDiggingConfigResolverDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AudioDataAsset);
	DELE_PTR_FULL(AnimationDataAsset);
	DELE_PTR_FULL(EffectsDataAsset);
	DELE_PTR_FULL(BaseParamsDataAsset);
}

void UDioramaDebugMenuEntries::AfterRead()
{
	UDataAsset::AfterRead();

}

void UDioramaDebugMenuEntries::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UDisableShipContainersStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UDisableShipContainersStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UDivingAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UDivingAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.DockableCutsceneInterface.ExecuteDockableCutsceneAction
// (Native, Event, Public, BlueprintEvent)
void UDockableCutsceneInterface::ExecuteDockableCutsceneAction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableCutsceneInterface.ExecuteDockableCutsceneAction");

	UDockableCutsceneInterface_ExecuteDockableCutsceneAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDockableCutsceneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDockableCutsceneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DockableCutscene.PickAnimationBasedOnGender
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFirstPersonAnimationInstance* FirstPersonAnimInstance        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADockableCutscene::PickAnimationBasedOnGender(class UFirstPersonAnimationInstance* FirstPersonAnimInstance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableCutscene.PickAnimationBasedOnGender");

	ADockableCutscene_PickAnimationBasedOnGender_Params params;
	params.FirstPersonAnimInstance = FirstPersonAnimInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DockableCutscene.OnInteract_Client_Implementation
// (Event, Protected, BlueprintEvent)
void ADockableCutscene::OnInteract_Client_Implementation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableCutscene.OnInteract_Client_Implementation");

	ADockableCutscene_OnInteract_Client_Implementation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DockableCutscene.ActivateMesh
// (Event, Public, BlueprintEvent)
void ADockableCutscene::ActivateMesh()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableCutscene.ActivateMesh");

	ADockableCutscene_ActivateMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADockableCutscene::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(FirstPersonAnimToPlay, UAnimSequence);
	READ_PTR_FULL(DockableAnimToPlay, UAnimMontage);
	READ_PTR_FULL(SkeletalMeshComponent, USkeletalMeshComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
}

void ADockableCutscene::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(FirstPersonAnimToPlay);
	DELE_PTR_FULL(DockableAnimToPlay);
	DELE_PTR_FULL(SkeletalMeshComponent);
	DELE_PTR_FULL(InteractableComponent);
}

void ATestDockableCutscene::AfterRead()
{
	ADockableCutscene::AfterRead();

}

void ATestDockableCutscene::BeforeDelete()
{
	ADockableCutscene::BeforeDelete();

}

// Function Athena.DockableCutsceneActionStateId.PushCharacterIntoDockableCutsceneActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ADockableCutscene*       ControlledObject               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDockableCutsceneActionStateId::STATIC_PushCharacterIntoDockableCutsceneActionState(class ADockableCutscene* ControlledObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DockableCutsceneActionStateId.PushCharacterIntoDockableCutsceneActionState");

	UDockableCutsceneActionStateId_PushCharacterIntoDockableCutsceneActionState_Params params;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDockableCutsceneActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UDockableCutsceneActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UDockableCutsceneInputComponent::AfterRead()
{
	ULookAtOffsetInputComponent::AfterRead();

}

void UDockableCutsceneInputComponent::BeforeDelete()
{
	ULookAtOffsetInputComponent::BeforeDelete();

}

void UDockedToInteractableAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UDockedToInteractableAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.DoubleActionItem.SetSecondaryAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemActionComponent*    InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADoubleActionItem::SetSecondaryAction(class UItemActionComponent* InComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DoubleActionItem.SetSecondaryAction");

	ADoubleActionItem_SetSecondaryAction_Params params;
	params.InComponent = InComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DoubleActionItem.SetPrimaryAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemActionComponent*    InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADoubleActionItem::SetPrimaryAction(class UItemActionComponent* InComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DoubleActionItem.SetPrimaryAction");

	ADoubleActionItem_SetPrimaryAction_Params params;
	params.InComponent = InComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADoubleActionItem::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(PrimaryAction, UItemActionComponent);
	READ_PTR_FULL(SecondaryAction, UItemActionComponent);
}

void ADoubleActionItem::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(PrimaryAction);
	DELE_PTR_FULL(SecondaryAction);
}

// Function Athena.DoubleActionItemWithAmmo.OnRep_AmmoLeft
// (Final, Native, Protected)
// Parameters:
// int                            PreviousAmmo                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ADoubleActionItemWithAmmo::OnRep_AmmoLeft(int PreviousAmmo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DoubleActionItemWithAmmo.OnRep_AmmoLeft");

	ADoubleActionItemWithAmmo_OnRep_AmmoLeft_Params params;
	params.PreviousAmmo = PreviousAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADoubleActionItemWithAmmo::AfterRead()
{
	ADoubleActionItem::AfterRead();

}

void ADoubleActionItemWithAmmo::BeforeDelete()
{
	ADoubleActionItem::BeforeDelete();

}

void UDropItemsOnDeathComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PlayerBuriedItemsMapBundleItemDesc, UClass);
	READ_PTR_FULL(AmmoPouchItemDesc, UClass);
}

void UDropItemsOnDeathComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PlayerBuriedItemsMapBundleItemDesc);
	DELE_PTR_FULL(AmmoPouchItemDesc);
}

// Function Athena.DroppedPouchItemProxy.Multicast_Open
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void ADroppedPouchItemProxy::Multicast_Open()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DroppedPouchItemProxy.Multicast_Open");

	ADroppedPouchItemProxy_Multicast_Open_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADroppedPouchItemProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

	READ_PTR_FULL(OnPouchOpenedSfx, UWwiseEvent);
}

void ADroppedPouchItemProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

	DELE_PTR_FULL(OnPouchOpenedSfx);
}

void AAmmoPouchItemProxy::AfterRead()
{
	ADroppedPouchItemProxy::AfterRead();

}

void AAmmoPouchItemProxy::BeforeDelete()
{
	ADroppedPouchItemProxy::BeforeDelete();

}

void ARewardPouchItemProxy::AfterRead()
{
	ADroppedPouchItemProxy::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void ARewardPouchItemProxy::BeforeDelete()
{
	ADroppedPouchItemProxy::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UDrunkennessComponentPublicData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DrunkennessRemappingCurveForScreenVfx, UCurveFloat);
	READ_PTR_FULL(DrunkennessRemappingCurveForStaggering, UCurveFloat);
	READ_PTR_FULL(DrunkennessComponentPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(StartDrunkennessSfx, UWwiseEvent);
	READ_PTR_FULL(StopDrunkennessSfx, UWwiseEvent);
	READ_PTR_FULL(StartDrunkennessSfxRemotePlayer, UWwiseEvent);
	READ_PTR_FULL(StopDrunkennessSfxRemotePlayer, UWwiseEvent);
}

void UDrunkennessComponentPublicData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DrunkennessRemappingCurveForScreenVfx);
	DELE_PTR_FULL(DrunkennessRemappingCurveForStaggering);
	DELE_PTR_FULL(DrunkennessComponentPool);
	DELE_PTR_FULL(StartDrunkennessSfx);
	DELE_PTR_FULL(StopDrunkennessSfx);
	DELE_PTR_FULL(StartDrunkennessSfxRemotePlayer);
	DELE_PTR_FULL(StopDrunkennessSfxRemotePlayer);
}

void UDrunkennessInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDrunkennessInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.DrunkennessComponent.TestForceVomiting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Duration                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDrunkennessComponent::TestForceVomiting(float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.TestForceVomiting");

	UDrunkennessComponent_TestForceVomiting_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrunkennessComponent.SetTargetDrunkenness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EDrunkennessType> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InTargetValue                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDrunkennessComponent::SetTargetDrunkenness(TEnumAsByte<Athena_EDrunkennessType> Type, float InTargetValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.SetTargetDrunkenness");

	UDrunkennessComponent_SetTargetDrunkenness_Params params;
	params.Type = Type;
	params.InTargetValue = InTargetValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrunkennessComponent.Reset
// (Final, Native, Public, BlueprintCallable)
void UDrunkennessComponent::Reset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.Reset");

	UDrunkennessComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrunkennessComponent.OnRep_TargetDrunkenness
// (Final, Native, Private)
void UDrunkennessComponent::OnRep_TargetDrunkenness()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.OnRep_TargetDrunkenness");

	UDrunkennessComponent_OnRep_TargetDrunkenness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrunkennessComponent.OnRep_RemainingAmountToSoberUpDueToWaterSplash
// (Final, Native, Private)
void UDrunkennessComponent::OnRep_RemainingAmountToSoberUpDueToWaterSplash()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.OnRep_RemainingAmountToSoberUpDueToWaterSplash");

	UDrunkennessComponent_OnRep_RemainingAmountToSoberUpDueToWaterSplash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrunkennessComponent.OnRep_CurrentDrunkenness
// (Final, Native, Private)
void UDrunkennessComponent::OnRep_CurrentDrunkenness()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.OnRep_CurrentDrunkenness");

	UDrunkennessComponent_OnRep_CurrentDrunkenness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrunkennessComponent.GetStaggerAmplitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UDrunkennessComponent::GetStaggerAmplitude()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.GetStaggerAmplitude");

	UDrunkennessComponent_GetStaggerAmplitude_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DrunkennessComponent.GetOverallCurrentDrunkenness
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UDrunkennessComponent::GetOverallCurrentDrunkenness()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.GetOverallCurrentDrunkenness");

	UDrunkennessComponent_GetOverallCurrentDrunkenness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DrunkennessComponent.ChangeDrunkenness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EDrunkennessType> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DrunkennessChange              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDrunkennessComponent::ChangeDrunkenness(TEnumAsByte<Athena_EDrunkennessType> Type, float DrunkennessChange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrunkennessComponent.ChangeDrunkenness");

	UDrunkennessComponent_ChangeDrunkenness_Params params;
	params.Type = Type;
	params.DrunkennessChange = DrunkennessChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDrunkennessComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PublicData, UDrunkennessComponentPublicData);
}

void UDrunkennessComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PublicData);
}

void UDrunkenChestComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OnPickedUpLocalPlayerOnlyEvent, UWwiseEvent);
	READ_PTR_FULL(DrunkennessComponent, UDrunkennessComponent);
	READ_PTR_FULL(Wielder, AActor);
}

void UDrunkenChestComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OnPickedUpLocalPlayerOnlyEvent);
	DELE_PTR_FULL(DrunkennessComponent);
	DELE_PTR_FULL(Wielder);
}

void UDrunkStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UDrunkStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UDuringAbilityAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UDuringAbilityAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.DynamicFlowComponent.SetTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                SourceTexture                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UDynamicFlowComponent::SetTexture(class UObject* WorldContextObject, class UTexture* SourceTexture)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DynamicFlowComponent.SetTexture");

	UDynamicFlowComponent_SetTexture_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SourceTexture = SourceTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DynamicFlowComponent.GetTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* UDynamicFlowComponent::GetTexture()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DynamicFlowComponent.GetTexture");

	UDynamicFlowComponent_GetTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DynamicFlowComponent.ClearTexture
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            ClearColor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UDynamicFlowComponent::ClearTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DynamicFlowComponent.ClearTexture");

	UDynamicFlowComponent_ClearTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDynamicFlowComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(FlowTexture, UTexture2D);
	READ_PTR_FULL(RenderTargetTexture, UTextureRenderTarget2D);
	READ_PTR_FULL(RenderTargetTexturePingPong, UTextureRenderTarget2D);
}

void UDynamicFlowComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(FlowTexture);
	DELE_PTR_FULL(RenderTargetTexture);
	DELE_PTR_FULL(RenderTargetTexturePingPong);
}

void UEatingAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UEatingAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UEmblemComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UEmblemComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UEmblemServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEmblemServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEmblemService::AfterRead()
{
	UObject::AfterRead();

}

void UEmblemService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.EmissaryFlag.OnEmissaryFlagStaticMeshLoaded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UStaticMesh*             EmissaryFlagMesh               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AEmissaryFlag::OnEmissaryFlagStaticMeshLoaded(class UStaticMesh* EmissaryFlagMesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EmissaryFlag.OnEmissaryFlagStaticMeshLoaded");

	AEmissaryFlag_OnEmissaryFlagStaticMeshLoaded_Params params;
	params.EmissaryFlagMesh = EmissaryFlagMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AEmissaryFlag::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CustomizationComponent, UReplicatedShipPartCustomizationComponent);
	READ_PTR_FULL(StartAmbientFlagSfx, UWwiseEvent);
	READ_PTR_FULL(StopAmbientFlagSfx, UWwiseEvent);
	READ_PTR_FULL(AttachFlagSfx, UWwiseEvent);
	READ_PTR_FULL(DetachFlagSfx, UWwiseEvent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(EmissaryFlagStaticMeshComponent, UStaticMeshComponent);
}

void AEmissaryFlag::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CustomizationComponent);
	DELE_PTR_FULL(StartAmbientFlagSfx);
	DELE_PTR_FULL(StopAmbientFlagSfx);
	DELE_PTR_FULL(AttachFlagSfx);
	DELE_PTR_FULL(DetachFlagSfx);
	DELE_PTR_FULL(SfxPool);
	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(EmissaryFlagStaticMeshComponent);
}

void AMastEmissaryFlag::AfterRead()
{
	AEmissaryFlag::AfterRead();

}

void AMastEmissaryFlag::BeforeDelete()
{
	AEmissaryFlag::BeforeDelete();

}

void UMeleeWeaponMovementSpeedConfig::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMeleeWeaponMovementSpeedConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UMeleeWeaponDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(MovementSpeedConfig, UMeleeWeaponMovementSpeedConfig);
	READ_PTR_FULL(HeavyAttack, UMeleeAttackDataAsset);
	READ_PTR_FULL(BlockingPhysicalMaterial, UPhysicalMaterial);
	READ_PTR_FULL(TrailParticleSystem_FP, UParticleSystem);
	READ_PTR_FULL(TrailParticleSystem_TP, UParticleSystem);
}

void UMeleeWeaponDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(MovementSpeedConfig);
	DELE_PTR_FULL(HeavyAttack);
	DELE_PTR_FULL(BlockingPhysicalMaterial);
	DELE_PTR_FULL(TrailParticleSystem_FP);
	DELE_PTR_FULL(TrailParticleSystem_TP);
}

void UMeleeWeaponFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UMeleeWeaponFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.MemoryTestPawn.Server_SetActorLocationAndRotation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMemoryTestPawn::Server_SetActorLocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MemoryTestPawn.Server_SetActorLocationAndRotation");

	AMemoryTestPawn_Server_SetActorLocationAndRotation_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MemoryTestPawn.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AMemoryTestPawn::IsFinished()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MemoryTestPawn.IsFinished");

	AMemoryTestPawn_IsFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AMemoryTestPawn::AfterRead()
{
	APawn::AfterRead();

}

void AMemoryTestPawn::BeforeDelete()
{
	APawn::BeforeDelete();

}

// Function Athena.MenuInputHandler.OnToggleScrambleGamertags
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnToggleScrambleGamertags()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnToggleScrambleGamertags");

	UMenuInputHandler_OnToggleScrambleGamertags_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnTogglePhotoMode
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnTogglePhotoMode()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnTogglePhotoMode");

	UMenuInputHandler_OnTogglePhotoMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnToggleOtherCrewNameplates
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnToggleOtherCrewNameplates()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnToggleOtherCrewNameplates");

	UMenuInputHandler_OnToggleOtherCrewNameplates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnToggleNonCrewMuteState
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnToggleNonCrewMuteState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnToggleNonCrewMuteState");

	UMenuInputHandler_OnToggleNonCrewMuteState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnToggleCrewNameplates
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnToggleCrewNameplates()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnToggleCrewNameplates");

	UMenuInputHandler_OnToggleCrewNameplates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnOpenQuickMenu
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnOpenQuickMenu()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnOpenQuickMenu");

	UMenuInputHandler_OnOpenQuickMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnOpenEscapeMenu
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMenuInputHandler::OnOpenEscapeMenu()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MenuInputHandler.OnOpenEscapeMenu");

	UMenuInputHandler_OnOpenEscapeMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMenuInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void UMenuInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void ACargoRunCrate::AfterRead()
{
	AMerchantCrate::AfterRead();

	READ_PTR_FULL(CargoRunCrateComponent, UCargoRunCrateComponent);
}

void ACargoRunCrate::BeforeDelete()
{
	AMerchantCrate::BeforeDelete();

	DELE_PTR_FULL(CargoRunCrateComponent);
}

void AStaticCargoRunCrate::AfterRead()
{
	AStaticMerchantCrate::AfterRead();

	READ_PTR_FULL(CargoRunCrateComponent, UCargoRunCrateComponent);
}

void AStaticCargoRunCrate::BeforeDelete()
{
	AStaticMerchantCrate::BeforeDelete();

	DELE_PTR_FULL(CargoRunCrateComponent);
}

void ADamageableCargoRunCrate::AfterRead()
{
	ACargoRunCrate::AfterRead();

	READ_PTR_FULL(GatedHealthComponent, UGatedHealthComponent);
	READ_PTR_FULL(VisualHealthResponseComponent, UVisualHealthResponseComponent);
}

void ADamageableCargoRunCrate::BeforeDelete()
{
	ACargoRunCrate::BeforeDelete();

	DELE_PTR_FULL(GatedHealthComponent);
	DELE_PTR_FULL(VisualHealthResponseComponent);
}

void AStaticDamageableCargoRunCrate::AfterRead()
{
	AStaticCargoRunCrate::AfterRead();

	READ_PTR_FULL(GatedHealthComponent, UGatedHealthComponent);
	READ_PTR_FULL(VisualHealthResponseComponent, UVisualHealthResponseComponent);
}

void AStaticDamageableCargoRunCrate::BeforeDelete()
{
	AStaticCargoRunCrate::BeforeDelete();

	DELE_PTR_FULL(GatedHealthComponent);
	DELE_PTR_FULL(VisualHealthResponseComponent);
}

void UMerchantCrateProviderComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMerchantCrateProviderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UMerchantQuestItemData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DisplayNameLookup, UMerchantQuestItemPluralisationData);
	READ_PTR_FULL(CrateDesc, UClass);
	READ_PTR_FULL(IconImage, UTexture);
	READ_PTR_FULL(FaunaSpecies, UClass);
	READ_PTR_FULL(FaunaBreed, UClass);
	READ_PTR_FULL(CrateFilledPopupDesc, UPopUpMessageDesc);
}

void UMerchantQuestItemData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DisplayNameLookup);
	DELE_PTR_FULL(CrateDesc);
	DELE_PTR_FULL(IconImage);
	DELE_PTR_FULL(FaunaSpecies);
	DELE_PTR_FULL(FaunaBreed);
	DELE_PTR_FULL(CrateFilledPopupDesc);
}

// Function Athena.MerchantMap.RefreshContents
// (Final, Native, Public, BlueprintCallable)
void AMerchantMap::RefreshContents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MerchantMap.RefreshContents");

	AMerchantMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MerchantMap.OnTextCanvasUpdate
// (Final, Native, Private)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Height                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMerchantMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MerchantMap.OnTextCanvasUpdate");

	AMerchantMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MerchantMap.OnRep_Contents
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FMerchantMapContents    InPreviousContents             (ConstParm, Parm, OutParm, ReferenceParm)
void AMerchantMap::OnRep_Contents(const struct FMerchantMapContents& InPreviousContents)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MerchantMap.OnRep_Contents");

	AMerchantMap_OnRep_Contents_Params params;
	params.InPreviousContents = InPreviousContents;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMerchantMap::AfterRead()
{
	ATreasureMap::AfterRead();

	READ_PTR_FULL(Font, UFont);
	READ_PTR_FULL(MerchantMapLayout, UMerchantMapLayout);
}

void AMerchantMap::BeforeDelete()
{
	ATreasureMap::BeforeDelete();

	DELE_PTR_FULL(Font);
	DELE_PTR_FULL(MerchantMapLayout);
}

void UMerchantQuestData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ContractCompletePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(ContractExpiredPopupDesc, UPopUpMessageDesc);
}

void UMerchantQuestData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ContractCompletePopupDesc);
	DELE_PTR_FULL(ContractExpiredPopupDesc);
}

void UMerchantQuestDescData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(CollectCratesFromTraderPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(MerchantCompany, UClass);
}

void UMerchantQuestDescData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(CollectCratesFromTraderPopupDesc);
	DELE_PTR_FULL(MerchantCompany);
}

void UMerchantQuestItemPluralisationData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UMerchantQuestItemPluralisationData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UNPCDialogHeaderByCondition::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogHeaderByCondition::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UNPCDialogHeaderByRank::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogHeaderByRank::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UNPCDialogHeaderDynamic::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogHeaderDynamic::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UNPCDialogHeaderStorageContainer::AfterRead()
{
	UNPCDialogHeader::AfterRead();

}

void UNPCDialogHeaderStorageContainer::BeforeDelete()
{
	UNPCDialogHeader::BeforeDelete();

}

void UNPCDialogOption::AfterRead()
{
	UObject::AfterRead();

}

void UNPCDialogOption::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UNPCDialogOptionClose::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionClose::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionDialogSelect::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionDialogSelect::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionDialogSelectDynamic::AfterRead()
{
	UNPCDialogOptionDialogSelect::AfterRead();

}

void UNPCDialogOptionDialogSelectDynamic::BeforeDelete()
{
	UNPCDialogOptionDialogSelect::BeforeDelete();

}

void UNPCDialogOptionFireEvent::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionFireEvent::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionFireNPCDialogInteraction::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionFireNPCDialogInteraction::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionFireTutorialDialogOptionSelectedEvent::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionFireTutorialDialogOptionSelectedEvent::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionFireTutorialEvent::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionFireTutorialEvent::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionGiveClue::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionGiveClue::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionGiveItem::AfterRead()
{
	UNPCDialogOption::AfterRead();

	READ_PTR_FULL(ItemClassToBeGiven, UClass);
}

void UNPCDialogOptionGiveItem::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

	DELE_PTR_FULL(ItemClassToBeGiven);
}

void UNPCDialogOptionGiveMap::AfterRead()
{
	UNPCDialogOption::AfterRead();

	READ_PTR_FULL(VoyageRecipe, UVoyageRecipeDataAsset);
}

void UNPCDialogOptionGiveMap::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

	DELE_PTR_FULL(VoyageRecipe);
}

void UNPCDialogOptionGiveReward::AfterRead()
{
	UNPCDialogOption::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void UNPCDialogOptionGiveReward::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

	DELE_PTR_FULL(Company);
}

// Function Athena.TalkToNPCActionStateId.PopCharOutOfActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNPCDialogComponent*     NPCDialogComp                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTalkToNPCActionStateId::STATIC_PopCharOutOfActionState(class UNPCDialogComponent* NPCDialogComp, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TalkToNPCActionStateId.PopCharOutOfActionState");

	UTalkToNPCActionStateId_PopCharOutOfActionState_Params params;
	params.NPCDialogComp = NPCDialogComp;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTalkToNPCActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UTalkToNPCActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UNPCDialogOptionNoUIPurchase::AfterRead()
{
	UNPCDialogOption::AfterRead();

	READ_PTR_FULL(Catalog, UCatalogDataAsset);
	READ_PTR_FULL(CatalogOffer, UCatalogOfferDataAsset);
	READ_PTR_FULL(OfferTriggeredPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(Interactor, AController);
}

void UNPCDialogOptionNoUIPurchase::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

	DELE_PTR_FULL(Catalog);
	DELE_PTR_FULL(CatalogOffer);
	DELE_PTR_FULL(OfferTriggeredPopupDesc);
	DELE_PTR_FULL(Interactor);
}

void UNPCDialogOptionRefillTankard::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionRefillTankard::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionSellBooty::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionSellBooty::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionShop::AfterRead()
{
	UNPCDialogOption::AfterRead();

	READ_PTR_FULL(ShopDesc, UShopDesc);
	READ_PTR_FULL(Interactor, AController);
}

void UNPCDialogOptionShop::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

	DELE_PTR_FULL(ShopDesc);
	DELE_PTR_FULL(Interactor);
}

void UNPCDialogOptionStorageContainerStore::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionStorageContainerStore::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogOptionStorageContainerTake::AfterRead()
{
	UNPCDialogOption::AfterRead();

}

void UNPCDialogOptionStorageContainerTake::BeforeDelete()
{
	UNPCDialogOption::BeforeDelete();

}

void UNPCDialogPredicateIsTrue::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateIsTrue::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateIntEquals::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateIntEquals::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateEquals::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateEquals::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateHasEmblem::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateHasEmblem::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateHasEntitlement::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

	READ_PTR_FULL(Entitlement, UClass);
}

void UNPCDialogPredicateHasEntitlement::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

	DELE_PTR_FULL(Entitlement);
}

void UNPCDialogPredicateHasFeature::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateHasFeature::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateHasRank::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

	READ_PTR_FULL(Rank, UClass);
}

void UNPCDialogPredicateHasRank::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

	DELE_PTR_FULL(Rank);
}

void UNPCDialogPredicateHasSubsetOfEntitlements::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateHasSubsetOfEntitlements::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateIsWearingAny::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateIsWearingAny::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateIsWearingAll::AfterRead()
{
	UNPCDialogPredicateIsWearingAny::AfterRead();

}

void UNPCDialogPredicateIsWearingAll::BeforeDelete()
{
	UNPCDialogPredicateIsWearingAny::BeforeDelete();

}

void UNPCDialogPredicateOnTutorialStep::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateOnTutorialStep::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogPredicateReadAllOf::AfterRead()
{
	UNPCDialogPredicate::AfterRead();

}

void UNPCDialogPredicateReadAllOf::BeforeDelete()
{
	UNPCDialogPredicate::BeforeDelete();

}

void UNPCDialogTreeData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCDialogTreeData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ANPCService::AfterRead()
{
	AActor::AfterRead();

}

void ANPCService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UNullEntitlementDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UNullEntitlementDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

// Function Athena.ObjectProximityResetComponent.OnPlayerLeftOverlap
// (Final, Native, Private)
// Parameters:
// int                            RemainingPlayers               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UObjectProximityResetComponent::OnPlayerLeftOverlap(int RemainingPlayers)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ObjectProximityResetComponent.OnPlayerLeftOverlap");

	UObjectProximityResetComponent_OnPlayerLeftOverlap_Params params;
	params.RemainingPlayers = RemainingPlayers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ObjectProximityResetComponent.OnPlayerEnteredOverlap
// (Final, Native, Private)
void UObjectProximityResetComponent::OnPlayerEnteredOverlap()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ObjectProximityResetComponent.OnPlayerEnteredOverlap");

	UObjectProximityResetComponent_OnPlayerEnteredOverlap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UObjectProximityResetComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UObjectProximityResetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ObjectUtilities.GetDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UObject* UObjectUtilities::STATIC_GetDefaultObject(class UClass* Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ObjectUtilities.GetDefaultObject");

	UObjectUtilities_GetDefaultObject_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ObjectUtilities.CreateObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UObject* UObjectUtilities::STATIC_CreateObject(class UClass* Class)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ObjectUtilities.CreateObject");

	UObjectUtilities_CreateObject_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UObjectUtilities::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UObjectUtilities::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AProjectileService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ProjectileThrottledTickData, UAthenaProjectilesThrottledTickCollectionAsset);
}

void AProjectileService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ProjectileThrottledTickData);
}

void UProjectileServiceDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TrailsMesh, UStaticMesh);
	READ_PTR_FULL(Material, UMaterialInterface);
}

void UProjectileServiceDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TrailsMesh);
	DELE_PTR_FULL(Material);
}

void UWaitForMechanismActivationStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForMechanismActivationStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWaitForNPCDialogOptionEventStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForNPCDialogOptionEventStepDesc);
	READ_PTR_FULL(ActorVar, AActor);
}

void UWaitForNPCDialogOptionEventStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(ActorVar);
}

void UWaitForNPCDialogOptionEventStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForNPCDialogOptionEventStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWaitForUnlockStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForUnlockStepDesc);
}

void UWaitForUnlockStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.WieldablePetAnimationInstance.IsNearFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Tolerance                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldablePetAnimationInstance::IsNearFloor(float Tolerance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.IsNearFloor");

	UWieldablePetAnimationInstance_IsNearFloor_Params params;
	params.Tolerance = Tolerance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldablePetAnimationInstance.InitialiseAnimationData
// (Native, Event, Protected, BlueprintEvent)
void UWieldablePetAnimationInstance::InitialiseAnimationData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.InitialiseAnimationData");

	UWieldablePetAnimationInstance_InitialiseAnimationData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldablePetAnimationInstance.GetPetRoamingAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPetAnimationDataRoaming ReturnValue                    (Parm, OutParm, ReturnParm)
struct FPetAnimationDataRoaming UWieldablePetAnimationInstance::GetPetRoamingAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.GetPetRoamingAnimations");

	UWieldablePetAnimationInstance_GetPetRoamingAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldablePetAnimationInstance.GetPetHeldAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPetAnimationDataBeingHeld ReturnValue                    (Parm, OutParm, ReturnParm)
struct FPetAnimationDataBeingHeld UWieldablePetAnimationInstance::GetPetHeldAnimations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.GetPetHeldAnimations");

	UWieldablePetAnimationInstance_GetPetHeldAnimations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldablePetAnimationInstance.AssignNewPetHeldBaseIdleAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsIdleA                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UWieldablePetAnimationInstance::AssignNewPetHeldBaseIdleAnimation(bool IsIdleA)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.AssignNewPetHeldBaseIdleAnimation");

	UWieldablePetAnimationInstance_AssignNewPetHeldBaseIdleAnimation_Params params;
	params.IsIdleA = IsIdleA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldablePetAnimationInstance.AssignNewPetCurrentRoamingState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaAnimationPetRoamingState> WantedRoamingState             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldablePetAnimationInstance::AssignNewPetCurrentRoamingState(TEnumAsByte<Athena_EAthenaAnimationPetRoamingState> WantedRoamingState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.AssignNewPetCurrentRoamingState");

	UWieldablePetAnimationInstance_AssignNewPetCurrentRoamingState_Params params;
	params.WantedRoamingState = WantedRoamingState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldablePetAnimationInstance.AssignNewPetCurrentHeldState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EAthenaAnimationPetHeldState> WantedHeldState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldablePetAnimationInstance::AssignNewPetCurrentHeldState(TEnumAsByte<Athena_EAthenaAnimationPetHeldState> WantedHeldState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldablePetAnimationInstance.AssignNewPetCurrentHeldState");

	UWieldablePetAnimationInstance_AssignNewPetCurrentHeldState_Params params;
	params.WantedHeldState = WantedHeldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWieldablePetAnimationInstance::AfterRead()
{
	UWieldableItemAnimationInstance::AfterRead();

	READ_PTR_FULL(WeightedAnimSequenceLoadOnDemandRoaming, UWeightedAnimSequenceLoadOnDemand);
	READ_PTR_FULL(WeightedAnimSequenceLoadOnDemandHeld, UWeightedAnimSequenceLoadOnDemand);
	READ_PTR_FULL(WeightedAnimSequenceLoadOnDemandShow, UWeightedAnimSequenceLoadOnDemand);
	READ_PTR_FULL(PetCurrentPlayingAnimMontage, UAnimMontage);
	READ_PTR_FULL(Pet, APet);
	READ_PTR_FULL(CharacterMovementComponent, UCharacterMovementComponent);
}

void UWieldablePetAnimationInstance::BeforeDelete()
{
	UWieldableItemAnimationInstance::BeforeDelete();

	DELE_PTR_FULL(WeightedAnimSequenceLoadOnDemandRoaming);
	DELE_PTR_FULL(WeightedAnimSequenceLoadOnDemandHeld);
	DELE_PTR_FULL(WeightedAnimSequenceLoadOnDemandShow);
	DELE_PTR_FULL(PetCurrentPlayingAnimMontage);
	DELE_PTR_FULL(Pet);
	DELE_PTR_FULL(CharacterMovementComponent);
}

// Function Athena.WieldableTestFunctions.ChangeItemSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWieldableItem*          InWieldable                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EWieldableItemSize> InNewSize                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldableTestFunctions::STATIC_ChangeItemSize(class AWieldableItem* InWieldable, TEnumAsByte<Athena_EWieldableItemSize> InNewSize)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableTestFunctions.ChangeItemSize");

	UWieldableTestFunctions_ChangeItemSize_Params params;
	params.InWieldable = InWieldable;
	params.InNewSize = InNewSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWieldableTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWieldableTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AWieldableWeaponMock::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void AWieldableWeaponMock::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
}

// Function Athena.WieldedItemComponent.WieldItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Fast                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> UWieldedItemComponent::WieldItem(bool Fast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.WieldItem");

	UWieldedItemComponent_WieldItem_Params params;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.UnstashItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStashReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemComponent::UnstashItem(TEnumAsByte<Athena_EStashReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.UnstashItem");

	UWieldedItemComponent_UnstashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.StashItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStashReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemComponent::StashItem(TEnumAsByte<Athena_EStashReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.StashItem");

	UWieldedItemComponent_StashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.SlowStashItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EStashReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemComponent::SlowStashItem(TEnumAsByte<Athena_EStashReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.SlowStashItem");

	UWieldedItemComponent_SlowStashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.Server_WieldRPC
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InEpochId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemComponent::Server_WieldRPC(class AActor* Item, int InEpochId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.Server_WieldRPC");

	UWieldedItemComponent_Server_WieldRPC_Params params;
	params.Item = Item;
	params.InEpochId = InEpochId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.OnRep_HeldItem
// (Final, Native, Private)
void UWieldedItemComponent::OnRep_HeldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.OnRep_HeldItem");

	UWieldedItemComponent_OnRep_HeldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.IsItemWielded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ItemActor                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldedItemComponent::IsItemWielded(class AActor* ItemActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.IsItemWielded");

	UWieldedItemComponent_IsItemWielded_Params params;
	params.ItemActor = ItemActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.IsItemStashed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldedItemComponent::IsItemStashed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.IsItemStashed");

	UWieldedItemComponent_IsItemStashed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.GetWieldedItemIfNotStashed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
void UWieldedItemComponent::GetWieldedItemIfNotStashed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.GetWieldedItemIfNotStashed");

	UWieldedItemComponent_GetWieldedItemIfNotStashed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.GetWieldedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
void UWieldedItemComponent::GetWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.GetWieldedItem");

	UWieldedItemComponent_GetWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.Client_WieldItemCorrectionRPC
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldedItemComponent::Client_WieldItemCorrectionRPC(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.Client_WieldItemCorrectionRPC");

	UWieldedItemComponent_Client_WieldItemCorrectionRPC_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldedItemComponent.Client_WieldItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FNetActorPtr            Item                           (Parm)
// int                            InEpochId                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Fast                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UWieldedItemComponent::Client_WieldItem(const struct FNetActorPtr& Item, int InEpochId, bool Fast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldedItemComponent.Client_WieldItem");

	UWieldedItemComponent_Client_WieldItem_Params params;
	params.Item = Item;
	params.InEpochId = InEpochId;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWieldedItemComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(WieldableItemSetComponent, UWieldableItemSetComponent);
	READ_PTR_FULL(ReplicatedCurrentlyWieldedItem, AActor);
	READ_PTR_FULL(CurrentlyWieldedItem, AActor);
}

void UWieldedItemComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(WieldableItemSetComponent);
	DELE_PTR_FULL(ReplicatedCurrentlyWieldedItem);
	DELE_PTR_FULL(CurrentlyWieldedItem);
}

void UWieldedItemNamedContextualOpenRadialAction::AfterRead()
{
	UOpenRadialAction::AfterRead();

}

void UWieldedItemNamedContextualOpenRadialAction::BeforeDelete()
{
	UOpenRadialAction::BeforeDelete();

}

void AWoodPlank::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(ConsumableWieldable, UConsumableWieldableComponent);
}

void AWoodPlank::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(ConsumableWieldable);
}

void UWorldEndAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UWorldEndAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UWorldEndAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UWorldEndAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UWorldEndAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

	READ_PTR_FULL(Owner, APawn);
	READ_PTR_FULL(SetupAbilityParams, UWorldEndAIAbilityParams);
	READ_PTR_FULL(VolcanicEmitter, AAshenLordVolcano);
	READ_PTR_FULL(GeyserManager, AGeyserManager);
	READ_PTR_FULL(OwnedSuperHeatedWater, ASuperheatedWater);
	READ_PTR_FULL(LoadedCloudAsset, UClass);
}

void UWorldEndAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

	DELE_PTR_FULL(Owner);
	DELE_PTR_FULL(SetupAbilityParams);
	DELE_PTR_FULL(VolcanicEmitter);
	DELE_PTR_FULL(GeyserManager);
	DELE_PTR_FULL(OwnedSuperHeatedWater);
	DELE_PTR_FULL(LoadedCloudAsset);
}

void UWorldEndAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

	READ_PTR_FULL(GeyserManagerSetup, UGeyserManagerSetupDataAsset);
	READ_PTR_FULL(VolcanicEmitterClass, UClass);
	READ_PTR_FULL(SuperHeatedWaterClass, UClass);
}

void UWorldEndAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

	DELE_PTR_FULL(GeyserManagerSetup);
	DELE_PTR_FULL(VolcanicEmitterClass);
	DELE_PTR_FULL(SuperHeatedWaterClass);
}

void AWorldEventZoneService::AfterRead()
{
	AActor::AfterRead();

}

void AWorldEventZoneService::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.WorldRegionBlueprintFunctionLibrary.GetSeaIdFromWorldSpaceLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UWorldRegionBlueprintFunctionLibrary::STATIC_GetSeaIdFromWorldSpaceLocation(const struct FVector& InLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WorldRegionBlueprintFunctionLibrary.GetSeaIdFromWorldSpaceLocation");

	UWorldRegionBlueprintFunctionLibrary_GetSeaIdFromWorldSpaceLocation_Params params;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWorldRegionBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWorldRegionBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UWorldResourceRegistry::AfterRead()
{
	UObject::AfterRead();

}

void UWorldResourceRegistry::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.WorldResourceRegistryTestLibrary.Test_GetNumVaultsRegistered
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaGameState*        GameState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWorldResourceRegistryTestLibrary::STATIC_Test_GetNumVaultsRegistered(class AAthenaGameState* GameState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WorldResourceRegistryTestLibrary.Test_GetNumVaultsRegistered");

	UWorldResourceRegistryTestLibrary_Test_GetNumVaultsRegistered_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWorldResourceRegistryTestLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWorldResourceRegistryTestLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void AContestSafeRegion::AfterRead()
{
	AWorldSafeRegion::AfterRead();

	READ_PTR_FULL(ParentContestZone, AContestZone);
}

void AContestSafeRegion::BeforeDelete()
{
	AWorldSafeRegion::BeforeDelete();

	DELE_PTR_FULL(ParentContestZone);
}

void UWeightedTreasureChestDescAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeightedTreasureChestDescAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.WieldableIngestible.Multicast_IngestRPC
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AWieldableIngestible::Multicast_IngestRPC()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableIngestible.Multicast_IngestRPC");

	AWieldableIngestible_Multicast_IngestRPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AWieldableIngestible::AfterRead()
{
	AWieldableItem::AfterRead();

	READ_PTR_FULL(GiveItemUponConsumptionComponent, UGiveItemUponConsumptionComponent);
	READ_PTR_FULL(ApplyStatusToConsumerComponent, UApplyStatusToConsumerComponent);
	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(FeedableComponent, UFeedableComponent);
	READ_PTR_FULL(IngestAudioEvent, UWwiseEvent);
}

void AWieldableIngestible::BeforeDelete()
{
	AWieldableItem::BeforeDelete();

	DELE_PTR_FULL(GiveItemUponConsumptionComponent);
	DELE_PTR_FULL(ApplyStatusToConsumerComponent);
	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(FeedableComponent);
	DELE_PTR_FULL(IngestAudioEvent);
}

void AStaticWieldableIngestible::AfterRead()
{
	AWieldableIngestible::AfterRead();

}

void AStaticWieldableIngestible::BeforeDelete()
{
	AWieldableIngestible::BeforeDelete();

}

void ASkeletalWieldableIngestible::AfterRead()
{
	AWieldableIngestible::AfterRead();

}

void ASkeletalWieldableIngestible::BeforeDelete()
{
	AWieldableIngestible::BeforeDelete();

}

void UCampaignServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCampaignServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UChainLightningDeveloperSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UChainLightningDeveloperSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UChainLightningReceiverInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UChainLightningReceiverInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UVulnerabilityLayerStateManagerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UVulnerabilityLayerStateManagerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UStunnableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStunnableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAICharacterEngageEnemyMethod::AfterRead()
{
	UObject::AfterRead();

}

void UAICharacterEngageEnemyMethod::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UInteractableAICharacterEngageEnemyMethod::AfterRead()
{
	UAICharacterEngageEnemyMethod::AfterRead();

}

void UInteractableAICharacterEngageEnemyMethod::BeforeDelete()
{
	UAICharacterEngageEnemyMethod::BeforeDelete();

}

void ULongRangeGunAICharacterEngageEnemyMethod::AfterRead()
{
	UAICharacterEngageEnemyMethod::AfterRead();

}

void ULongRangeGunAICharacterEngageEnemyMethod::BeforeDelete()
{
	UAICharacterEngageEnemyMethod::BeforeDelete();

}

void UShortRangeGunAICharacterEngageEnemyMethod::AfterRead()
{
	UAICharacterEngageEnemyMethod::AfterRead();

}

void UShortRangeGunAICharacterEngageEnemyMethod::BeforeDelete()
{
	UAICharacterEngageEnemyMethod::BeforeDelete();

}

void UMeleeWeaponAICharacterEngageEnemyMethod::AfterRead()
{
	UAICharacterEngageEnemyMethod::AfterRead();

}

void UMeleeWeaponAICharacterEngageEnemyMethod::BeforeDelete()
{
	UAICharacterEngageEnemyMethod::BeforeDelete();

}

void UExplosiveAICharacterEngageEnemyMethod::AfterRead()
{
	UAICharacterEngageEnemyMethod::AfterRead();

}

void UExplosiveAICharacterEngageEnemyMethod::BeforeDelete()
{
	UAICharacterEngageEnemyMethod::BeforeDelete();

}

void UThrowableAICharacterEngageEnemyMethod::AfterRead()
{
	UAICharacterEngageEnemyMethod::AfterRead();

}

void UThrowableAICharacterEngageEnemyMethod::BeforeDelete()
{
	UAICharacterEngageEnemyMethod::BeforeDelete();

}

void UAIItemSpawnComponent::AfterRead()
{
	UItemSpawnComponent::AfterRead();

}

void UAIItemSpawnComponent::BeforeDelete()
{
	UItemSpawnComponent::BeforeDelete();

}

void UIslandDataDefaultAssetEntry::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AISpawner, UAISpawner);
	READ_PTR_FULL(CannonsAISpawner, UAISpawner);
	READ_PTR_FULL(EmergentCaptainSpawner, UAISpawner);
}

void UIslandDataDefaultAssetEntry::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AISpawner);
	DELE_PTR_FULL(CannonsAISpawner);
	DELE_PTR_FULL(EmergentCaptainSpawner);
}

void UFortIslandDataDefaultAssetEntry::AfterRead()
{
	UIslandDataDefaultAssetEntry::AfterRead();

	READ_PTR_FULL(AISpawnerWhenFortActive, UAISpawner);
	READ_PTR_FULL(CannonsAISpawnerWhenFortActive, UAISpawner);
}

void UFortIslandDataDefaultAssetEntry::BeforeDelete()
{
	UIslandDataDefaultAssetEntry::BeforeDelete();

	DELE_PTR_FULL(AISpawnerWhenFortActive);
	DELE_PTR_FULL(CannonsAISpawnerWhenFortActive);
}

void UIslandDataAssetEntry::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(WorldMapData, UWorldMapIslandDataAsset);
	READ_PTR_FULL(UndergroundTreasureLocationsSource, UGeneratedLocationsDataAsset);
	READ_PTR_FULL(LandmarkTreasureLocationsSource, ULandmarkTreasureLocationsDataAsset);
	READ_PTR_FULL(AISpawnLocationsSource, UGeneratedLocationsDataAsset);
	READ_PTR_FULL(AISpawner, UAISpawner);
	READ_PTR_FULL(CannonsAISpawner, UAISpawner);
	READ_PTR_FULL(EmergentCaptainSpawner, UAISpawner);
	READ_PTR_FULL(IslandMaterialStatusZone, UIslandMaterialStatusZone);
}

void UIslandDataAssetEntry::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(WorldMapData);
	DELE_PTR_FULL(UndergroundTreasureLocationsSource);
	DELE_PTR_FULL(LandmarkTreasureLocationsSource);
	DELE_PTR_FULL(AISpawnLocationsSource);
	DELE_PTR_FULL(AISpawner);
	DELE_PTR_FULL(CannonsAISpawner);
	DELE_PTR_FULL(EmergentCaptainSpawner);
	DELE_PTR_FULL(IslandMaterialStatusZone);
}

void UIslandDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AncientSkeletonSpawner, UAISpawner);
}

void UIslandDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AncientSkeletonSpawner);
}

void UIslandFrameworkSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UIslandFrameworkSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UIslandReservationServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandReservationServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandReservationService::AfterRead()
{
	UObject::AfterRead();

}

void UIslandReservationService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UIslandSalvageSpawnerCollection::AfterRead()
{
	UDataAsset::AfterRead();

}

void UIslandSalvageSpawnerCollection::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void USalvageSpawnerLocationReservationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USalvageSpawnerLocationReservationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.IslandSalvageSpawnerManager.SetAllowNewSpawnRequests
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InAllowNewSpawnRequests        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AIslandSalvageSpawnerManager::SetAllowNewSpawnRequests(bool InAllowNewSpawnRequests)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandSalvageSpawnerManager.SetAllowNewSpawnRequests");

	AIslandSalvageSpawnerManager_SetAllowNewSpawnRequests_Params params;
	params.InAllowNewSpawnRequests = InAllowNewSpawnRequests;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AIslandSalvageSpawnerManager::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(IslandData, AIslandData);
}

void AIslandSalvageSpawnerManager::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(IslandData);
}

void UIslandVisitorCallbackInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandVisitorCallbackInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandVisitorCallbackComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandVisitorCallbackComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UIslandVisitorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandVisitorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandWorldSettingsInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandWorldSettingsInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URelinquishIslandSalvageSpawnLocationOnDestructionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URelinquishIslandSalvageSpawnLocationOnDestructionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCollectorsChestItemSlotDefinitionDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UCollectorsChestItemSlotDefinitionDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPetRoamingAnimationStateDefinitionDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPetRoamingAnimationStateDefinitionDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTornMapParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTornMapParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UTornMapSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

	READ_PTR_FULL(TornMapItemDescClass, UClass);
}

void UTornMapSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

	DELE_PTR_FULL(TornMapItemDescClass);
}

void UFishingLineRenderComponent::AfterRead()
{
	URopeCatenaryRenderComponent::AfterRead();

}

void UFishingLineRenderComponent::BeforeDelete()
{
	URopeCatenaryRenderComponent::BeforeDelete();

}

void UFishingMiniGameFishDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFishingMiniGameFishDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UEnvQueryTest_FacingAwayFromActor::AfterRead()
{
	UEnvQueryTest::AfterRead();

	READ_PTR_FULL(CentreContext, UClass);
	READ_PTR_FULL(ActorContext, UClass);
}

void UEnvQueryTest_FacingAwayFromActor::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

	DELE_PTR_FULL(CentreContext);
	DELE_PTR_FULL(ActorContext);
}

void UEnvQueryTest_InIslandSafeZone::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InIslandSafeZone::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_InKrakenZone::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InKrakenZone::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_InSeaRockZone::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InSeaRockZone::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_InShipwreckZone::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InShipwreckZone::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_InsideTinySharkExperience::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InsideTinySharkExperience::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_InsideWorldBounds::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InsideWorldBounds::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_InSunkenIslandSurfaceZone::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InSunkenIslandSurfaceZone::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UWorldEventZoneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldEventZoneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWorldEventZoneServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldEventZoneServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEnvQueryTest_InWorldEventZone::AfterRead()
{
	UEnvQueryTest::AfterRead();

}

void UEnvQueryTest_InWorldEventZone::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

}

void UEnvQueryTest_TraceByProfile::AfterRead()
{
	UEnvQueryTest::AfterRead();

	READ_PTR_FULL(Context, UClass);
}

void UEnvQueryTest_TraceByProfile::BeforeDelete()
{
	UEnvQueryTest::BeforeDelete();

	DELE_PTR_FULL(Context);
}

void UEquippedWithClothingStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UEquippedWithClothingStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UEquippedWithItemStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UEquippedWithItemStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UEventBroadcastStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UEventBroadcastStepDesc);
}

void UEventBroadcastStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void AFlyingCreature::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CreatureSoundPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(CreatureSoundToPlay, UWwiseEvent);
	READ_PTR_FULL(CreatureSoundToStop, UWwiseEvent);
}

void AFlyingCreature::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CreatureSoundPool);
	DELE_PTR_FULL(CreatureSoundToPlay);
	DELE_PTR_FULL(CreatureSoundToStop);
}

// Function Athena.FogBank.OnRep_Settings
// (Final, Native, Private)
void AFogBank::OnRep_Settings()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FogBank.OnRep_Settings");

	AFogBank_OnRep_Settings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFogBank::AfterRead()
{
	AFogVolume::AfterRead();

	READ_PTR_FULL(FogBankDataAsset, UFogBankDataAsset);
}

void AFogBank::BeforeDelete()
{
	AFogVolume::BeforeDelete();

	DELE_PTR_FULL(FogBankDataAsset);
}

void UFogBankDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFogBankDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFogBankManagerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFogBankManagerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFogPresenceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFogPresenceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UFogTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UFogTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UFollowShipAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UFollowShipAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UFoodPoisoningStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UFoodPoisoningStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UFootstepIDAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFootstepIDAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.PanicTeleportVolume.OnOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APanicTeleportVolume::OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PanicTeleportVolume.OnOverlapEnd");

	APanicTeleportVolume_OnOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PanicTeleportVolume.OnOverlapBegin
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           FromSweep                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void APanicTeleportVolume::OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PanicTeleportVolume.OnOverlapBegin");

	APanicTeleportVolume_OnOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.FromSweep = FromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APanicTeleportVolume::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AreaComponent, UBoxComponent);
}

void APanicTeleportVolume::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AreaComponent);
}

// Function Athena.PartConnectionMock.Tick
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPartConnectionMock::Tick(class UObject* WorldContextObject, float DeltaSeconds)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PartConnectionMock.Tick");

	UPartConnectionMock_Tick_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PartConnectionMock.AddMultipleConnection
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMockShipConnectionPartType> ConnectionType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          ActorFromList                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                  ActorTo                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPartConnectionMock::AddMultipleConnection(class UObject* WorldContextObject, TEnumAsByte<Athena_EMockShipConnectionPartType> ConnectionType, TArray<class AActor*> ActorFromList, class AActor* ActorTo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PartConnectionMock.AddMultipleConnection");

	UPartConnectionMock_AddMultipleConnection_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ConnectionType = ConnectionType;
	params.ActorFromList = ActorFromList;
	params.ActorTo = ActorTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PartConnectionMock.AddConnection
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMockShipConnectionPartType> ConnectionType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActorFrom                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActorTo                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPartConnectionMock::AddConnection(class UObject* WorldContextObject, TEnumAsByte<Athena_EMockShipConnectionPartType> ConnectionType, class AActor* ActorFrom, class AActor* ActorTo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PartConnectionMock.AddConnection");

	UPartConnectionMock_AddConnection_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ConnectionType = ConnectionType;
	params.ActorFrom = ActorFrom;
	params.ActorTo = ActorTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPartConnectionMock::AfterRead()
{
	UObject::AfterRead();

}

void UPartConnectionMock::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UPerformActionStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

	READ_PTR_FULL(RequiredAction, UClass);
}

void UPerformActionStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

	DELE_PTR_FULL(RequiredAction);
}

void UMatchmakingVoyageRecipeDesc::AfterRead()
{
	UVoyageRecipeDataAsset::AfterRead();

}

void UMatchmakingVoyageRecipeDesc::BeforeDelete()
{
	UVoyageRecipeDataAsset::BeforeDelete();

}

void UVoyageRecipesDebugMenuEntryGenerator::AfterRead()
{
	UDebugMenuEntryGenerator::AfterRead();

}

void UVoyageRecipesDebugMenuEntryGenerator::BeforeDelete()
{
	UDebugMenuEntryGenerator::BeforeDelete();

}

void UVulnerabilityAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UVulnerabilityAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UVulnerabilityAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UVulnerabilityAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UVulnerabilityAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

	READ_PTR_FULL(Owner, APawn);
	READ_PTR_FULL(SetupAbilityParams, UVulnerabilityAIAbilityParams);
}

void UVulnerabilityAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

	DELE_PTR_FULL(Owner);
	DELE_PTR_FULL(SetupAbilityParams);
}

void UVulnerabilityAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

}

void UVulnerabilityAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

}

// Function Athena.WaitForDemoResetActionStateId.PushCharacterIntoWaitForDemoResetActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWaitForDemoResetActionStateId::STATIC_PushCharacterIntoWaitForDemoResetActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaitForDemoResetActionStateId.PushCharacterIntoWaitForDemoResetActionState");

	UWaitForDemoResetActionStateId_PushCharacterIntoWaitForDemoResetActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaitForDemoResetActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UWaitForDemoResetActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.WaitForMechanismActionCompletionStep.OnMechanismActionCompleted
// (Final, Native, Private)
void UWaitForMechanismActionCompletionStep::OnMechanismActionCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaitForMechanismActionCompletionStep.OnMechanismActionCompleted");

	UWaitForMechanismActionCompletionStep_OnMechanismActionCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaitForMechanismActionCompletionStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForMechanismActionCompletionStepDesc);
}

void UWaitForMechanismActionCompletionStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.WaitForMechanismActivationStep.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWaitForMechanismActivationStep::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaitForMechanismActivationStep.OnMechanismActionStateChanged");

	UWaitForMechanismActivationStep_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaitForMechanismActivationStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UWaitForMechanismActivationStepDesc);
}

void UWaitForMechanismActivationStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UWaitForMechanismActionCompletionStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForMechanismActionCompletionStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWheelDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UWheelDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UMaterialManipulationSettingsComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OverrideMaterial, UMaterialInstance);
}

void UMaterialManipulationSettingsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OverrideMaterial);
}

// Function Athena.MeshAnimatorComponent.StopAnimation
// (Final, Native, Public, BlueprintCallable)
void UMeshAnimatorComponent::StopAnimation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeshAnimatorComponent.StopAnimation");

	UMeshAnimatorComponent_StopAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeshAnimatorComponent.SetBaseTransform
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              InBaseTransform                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
void UMeshAnimatorComponent::SetBaseTransform(const struct FTransform& InBaseTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeshAnimatorComponent.SetBaseTransform");

	UMeshAnimatorComponent_SetBaseTransform_Params params;
	params.InBaseTransform = InBaseTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeshAnimatorComponent.PlayAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   AnimationName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMeshAnimatorComponent::PlayAnimation(const struct FName& AnimationName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeshAnimatorComponent.PlayAnimation");

	UMeshAnimatorComponent_PlayAnimation_Params params;
	params.AnimationName = AnimationName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeshAnimatorComponent.OnRep_ServerSyncData
// (Final, Native, Private)
void UMeshAnimatorComponent::OnRep_ServerSyncData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeshAnimatorComponent.OnRep_ServerSyncData");

	UMeshAnimatorComponent_OnRep_ServerSyncData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.MeshAnimatorComponent.MeshAnimatorDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FName                   AnimationName                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMeshAnimatorComponent::MeshAnimatorDelegate__DelegateSignature(const struct FName& AnimationName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.MeshAnimatorComponent.MeshAnimatorDelegate__DelegateSignature");

	UMeshAnimatorComponent_MeshAnimatorDelegate__DelegateSignature_Params params;
	params.AnimationName = AnimationName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeshAnimatorComponent.GetAnimationDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   AnimationName                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMeshAnimatorComponent::GetAnimationDuration(const struct FName& AnimationName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeshAnimatorComponent.GetAnimationDuration");

	UMeshAnimatorComponent_GetAnimationDuration_Params params;
	params.AnimationName = AnimationName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MeshAnimatorComponent.AssignSpecificMeshes
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UMeshComponent*>  Meshes                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
void UMeshAnimatorComponent::AssignSpecificMeshes(TArray<class UMeshComponent*> Meshes)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeshAnimatorComponent.AssignSpecificMeshes");

	UMeshAnimatorComponent_AssignSpecificMeshes_Params params;
	params.Meshes = Meshes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMeshAnimatorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMeshAnimatorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UObjectMeshInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UObjectMeshInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UObjectMeshRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UObjectMeshRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SurfaceWaterComponent.SetSimulationActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsActive                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void USurfaceWaterComponent::SetSimulationActive(bool IsActive)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.SetSimulationActive");

	USurfaceWaterComponent_SetSimulationActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SurfaceWaterComponent.OnRep_AddWater
// (Final, Native, Private)
void USurfaceWaterComponent::OnRep_AddWater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.OnRep_AddWater");

	USurfaceWaterComponent_OnRep_AddWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SurfaceWaterComponent.GetWaterTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* USurfaceWaterComponent::GetWaterTexture()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.GetWaterTexture");

	USurfaceWaterComponent_GetWaterTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.GetNormalTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTexture* USurfaceWaterComponent::GetNormalTexture()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.GetNormalTexture");

	USurfaceWaterComponent_GetNormalTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.ConvertToWaterSpace
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 WorldSpacePosition             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector USurfaceWaterComponent::ConvertToWaterSpace(const struct FVector& WorldSpacePosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.ConvertToWaterSpace");

	USurfaceWaterComponent_ConvertToWaterSpace_Params params;
	params.WorldSpacePosition = WorldSpacePosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.ClearWaterTexture
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            ClearColor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void USurfaceWaterComponent::ClearWaterTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.ClearWaterTexture");

	USurfaceWaterComponent_ClearWaterTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SurfaceWaterComponent.AddWater
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Strength                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           CheckBounds                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void USurfaceWaterComponent::AddWater(const struct FVector& Position, float Radius, float Strength, bool CheckBounds)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SurfaceWaterComponent.AddWater");

	USurfaceWaterComponent_AddWater_Params params;
	params.Position = Position;
	params.Radius = Radius;
	params.Strength = Strength;
	params.CheckBounds = CheckBounds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USurfaceWaterComponent::AfterRead()
{
	UPrimitiveComponent::AfterRead();

	READ_PTR_FULL(AddWaterMaskTexture, UTexture2D);
	READ_PTR_FULL(BaseHeightTexture, UTexture2D);
	READ_PTR_FULL(WaterHeightTexture, UTextureRenderTarget2D);
	READ_PTR_FULL(WaterHeightTexturePingPong, UTextureRenderTarget2D);
	READ_PTR_FULL(NormalTexture, UTextureRenderTarget2D);
	READ_PTR_FULL(OutflowTexture, UTextureRenderTarget2D);
	READ_PTR_FULL(OutflowTexturePingPong, UTextureRenderTarget2D);
}

void USurfaceWaterComponent::BeforeDelete()
{
	UPrimitiveComponent::BeforeDelete();

	DELE_PTR_FULL(AddWaterMaskTexture);
	DELE_PTR_FULL(BaseHeightTexture);
	DELE_PTR_FULL(WaterHeightTexture);
	DELE_PTR_FULL(WaterHeightTexturePingPong);
	DELE_PTR_FULL(NormalTexture);
	DELE_PTR_FULL(OutflowTexture);
	DELE_PTR_FULL(OutflowTexturePingPong);
}

// Function Athena.NetDormancyHelpers.SetNetDormancy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_ENetDormancy> DormancyMode                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNetDormancyHelpers::STATIC_SetNetDormancy(class AActor* TargetActor, TEnumAsByte<Engine_ENetDormancy> DormancyMode)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NetDormancyHelpers.SetNetDormancy");

	UNetDormancyHelpers_SetNetDormancy_Params params;
	params.TargetActor = TargetActor;
	params.DormancyMode = DormancyMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.NetDormancyHelpers.FlushNetDormancy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UNetDormancyHelpers::STATIC_FlushNetDormancy(class AActor* TargetActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NetDormancyHelpers.FlushNetDormancy");

	UNetDormancyHelpers_FlushNetDormancy_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UNetDormancyHelpers::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UNetDormancyHelpers::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UNetworkedEventsWhitelistInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNetworkedEventsWhitelistInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USharedObjectReplicationServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USharedObjectReplicationServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ASharedObjectReplicationService::AfterRead()
{
	AActor::AfterRead();

}

void ASharedObjectReplicationService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UMaterialInformationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMaterialInformationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMaterialInformationService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(MaterialTranslationTable, UDataTable);
	READ_PTR_FULL(MaterialAudioTable, UDataTable);
	READ_PTR_FULL(MaterialVFXTable, UDataTable);
}

void UMaterialInformationService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(MaterialTranslationTable);
	DELE_PTR_FULL(MaterialAudioTable);
	DELE_PTR_FULL(MaterialVFXTable);
}

// Function Athena.PhysicsCollisionFunctions.IsWorldSpacePositionInsideVolume
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    Volume                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPhysicsCollisionFunctions::STATIC_IsWorldSpacePositionInsideVolume(class UStaticMeshComponent* Volume, const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PhysicsCollisionFunctions.IsWorldSpacePositionInsideVolume");

	UPhysicsCollisionFunctions_IsWorldSpacePositionInsideVolume_Params params;
	params.Volume = Volume;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPhysicsCollisionFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPhysicsCollisionFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UTrackedActorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTrackedActorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTrackedActorServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTrackedActorServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTrackedOwnerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UTrackedOwnerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void USpawnDependentTrackedOwnerComponent::AfterRead()
{
	UTrackedOwnerComponent::AfterRead();

}

void USpawnDependentTrackedOwnerComponent::BeforeDelete()
{
	UTrackedOwnerComponent::BeforeDelete();

}

void UShipSize::AfterRead()
{
	UObject::AfterRead();

}

void UShipSize::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAILargeShip::AfterRead()
{
	UShipSize::AfterRead();

}

void UAILargeShip::BeforeDelete()
{
	UShipSize::BeforeDelete();

}

void UAISmallShip::AfterRead()
{
	UShipSize::AfterRead();

}

void UAISmallShip::BeforeDelete()
{
	UShipSize::BeforeDelete();

}

void ULargeShip::AfterRead()
{
	UShipSize::AfterRead();

}

void ULargeShip::BeforeDelete()
{
	UShipSize::BeforeDelete();

}

void UMediumShip::AfterRead()
{
	UShipSize::AfterRead();

}

void UMediumShip::BeforeDelete()
{
	UShipSize::BeforeDelete();

}

void USmallShip::AfterRead()
{
	UShipSize::AfterRead();

}

void USmallShip::BeforeDelete()
{
	UShipSize::BeforeDelete();

}

// Function Athena.ShipTrackerInterface.GetCurrentShip
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UShipTrackerInterface::GetCurrentShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipTrackerInterface.GetCurrentShip");

	UShipTrackerInterface_GetCurrentShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShipTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAnimNotify_PlayWorldCameraShake::AfterRead()
{
	UAnimNotify::AfterRead();

	READ_PTR_FULL(CameraShake, UClass);
}

void UAnimNotify_PlayWorldCameraShake::BeforeDelete()
{
	UAnimNotify::BeforeDelete();

	DELE_PTR_FULL(CameraShake);
}

// Function Athena.EffectBlendControllerComponent.SetCurrentTime
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                          InCurrentTime                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEffectBlendControllerComponent::SetCurrentTime(float InCurrentTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EffectBlendControllerComponent.SetCurrentTime");

	UEffectBlendControllerComponent_SetCurrentTime_Params params;
	params.InCurrentTime = InCurrentTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EffectBlendControllerComponent.Reset
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void UEffectBlendControllerComponent::Reset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EffectBlendControllerComponent.Reset");

	UEffectBlendControllerComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EffectBlendControllerComponent.BlendOut
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void UEffectBlendControllerComponent::BlendOut()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EffectBlendControllerComponent.BlendOut");

	UEffectBlendControllerComponent_BlendOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EffectBlendControllerComponent.BlendIn
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void UEffectBlendControllerComponent::BlendIn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EffectBlendControllerComponent.BlendIn");

	UEffectBlendControllerComponent_BlendIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEffectBlendControllerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UEffectBlendControllerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void ULightIntensityBlend::AfterRead()
{
	UEffectBlendObjectBase::AfterRead();

}

void ULightIntensityBlend::BeforeDelete()
{
	UEffectBlendObjectBase::BeforeDelete();

}

void UMaterialScalarParameterBlend::AfterRead()
{
	UMaterialParameterBlendBase::AfterRead();

}

void UMaterialScalarParameterBlend::BeforeDelete()
{
	UMaterialParameterBlendBase::BeforeDelete();

}

void UFirstPersonAnimaticList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFirstPersonAnimaticList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAthenaAnimationData::AfterRead()
{
	UAnimationData::AfterRead();

	READ_PTR_FULL(DeathDataAsset, UAthenaAnimationDeathDataAsset);
	READ_PTR_FULL(WaterSlideDataAsset, UAthenaAnimationWaterSlideDataAsset);
}

void UAthenaAnimationData::BeforeDelete()
{
	UAnimationData::BeforeDelete();

	DELE_PTR_FULL(DeathDataAsset);
	DELE_PTR_FULL(WaterSlideDataAsset);
}

void UFirstPersonAnimationData::AfterRead()
{
	UAthenaAnimationData::AfterRead();

	READ_PTR_FULL(FirstPersonAnimaticList, UFirstPersonAnimaticList);
}

void UFirstPersonAnimationData::BeforeDelete()
{
	UAthenaAnimationData::BeforeDelete();

	DELE_PTR_FULL(FirstPersonAnimaticList);
}

void UIslandMaterialStatusZone::AfterRead()
{
	UObject::AfterRead();

}

void UIslandMaterialStatusZone::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UCollectorsChestItemDescSpawnData::AfterRead()
{
	UItemSpawnData::AfterRead();

	READ_PTR_FULL(GoldToSpawnInsideCollectorsChest, UWeightedGoldRewardsDataAsset);
}

void UCollectorsChestItemDescSpawnData::BeforeDelete()
{
	UItemSpawnData::BeforeDelete();

	DELE_PTR_FULL(GoldToSpawnInsideCollectorsChest);
}

void ULayerInContainerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULayerInContainerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ACollectorsChestItemInfo::AfterRead()
{
	ATreasureChestItemInfo::AfterRead();

	READ_PTR_FULL(GoldInContainerDataAsset, UGoldInContainerDataAsset);
	READ_PTR_FULL(CollectorsChestSharedParams, UCollectorsChestSharedParamsDataAsset);
	READ_PTR_FULL(PagesInContainerDataAsset, UQuestBookPagesInContainerDataAsset);
	READ_PTR_FULL(CollectorsChestShipOwnershipPropagationComponent, UCollectorsChestShipOwnershipPropagationComponent);
}

void ACollectorsChestItemInfo::BeforeDelete()
{
	ATreasureChestItemInfo::BeforeDelete();

	DELE_PTR_FULL(GoldInContainerDataAsset);
	DELE_PTR_FULL(CollectorsChestSharedParams);
	DELE_PTR_FULL(PagesInContainerDataAsset);
	DELE_PTR_FULL(CollectorsChestShipOwnershipPropagationComponent);
}

// Function Athena.LauncherParentInterface.GetProjectileIgnoreActors
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> ULauncherParentInterface::GetProjectileIgnoreActors()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LauncherParentInterface.GetProjectileIgnoreActors");

	ULauncherParentInterface_GetProjectileIgnoreActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LauncherParentInterface.GetInheritedLaunchVelocity
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector ULauncherParentInterface::GetInheritedLaunchVelocity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LauncherParentInterface.GetInheritedLaunchVelocity");

	ULauncherParentInterface_GetInheritedLaunchVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULauncherParentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULauncherParentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MountedWeaponInterface.GetYaw
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMountedWeaponInterface::GetYaw()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MountedWeaponInterface.GetYaw");

	UMountedWeaponInterface_GetYaw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MountedWeaponInterface.GetPitch
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UMountedWeaponInterface::GetPitch()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MountedWeaponInterface.GetPitch");

	UMountedWeaponInterface_GetPitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMountedWeaponInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMountedWeaponInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URammerType::AfterRead()
{
	UObject::AfterRead();

}

void URammerType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAthenaStreamedLevelService::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaStreamedLevelService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.AthenaStreamedLevelServiceBlueprintLibrary.StreamInLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamedLevelId                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UAthenaStreamedLevelServiceBlueprintLibrary::STATIC_StreamInLevel(class UObject* WorldContext, int StreamedLevelId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaStreamedLevelServiceBlueprintLibrary.StreamInLevel");

	UAthenaStreamedLevelServiceBlueprintLibrary_StreamInLevel_Params params;
	params.WorldContext = WorldContext;
	params.StreamedLevelId = StreamedLevelId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaStreamedLevelServiceBlueprintLibrary.SetLevelVisiblity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            StreamedLevelId                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsVisible                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UAthenaStreamedLevelServiceBlueprintLibrary::STATIC_SetLevelVisiblity(class UObject* WorldContext, int StreamedLevelId, bool IsVisible)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaStreamedLevelServiceBlueprintLibrary.SetLevelVisiblity");

	UAthenaStreamedLevelServiceBlueprintLibrary_SetLevelVisiblity_Params params;
	params.WorldContext = WorldContext;
	params.StreamedLevelId = StreamedLevelId;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AthenaStreamedLevelServiceBlueprintLibrary.AreAnyLevelsStreaming
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaStreamedLevelServiceBlueprintLibrary::STATIC_AreAnyLevelsStreaming(class UObject* WorldContext)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaStreamedLevelServiceBlueprintLibrary.AreAnyLevelsStreaming");

	UAthenaStreamedLevelServiceBlueprintLibrary_AreAnyLevelsStreaming_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaStreamedLevelServiceBlueprintLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaStreamedLevelServiceBlueprintLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UInstancedLevelGetterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInstancedLevelGetterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.NamedPointsBlueprintFunctionLibrary.FindUsedGroupTagsInSubAsset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UNamedPointsCollectionDataAsset* SubAssetToSearch               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<TEnumAsByte<Athena_ENamedPointGroupSearchTag>> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<TEnumAsByte<Athena_ENamedPointGroupSearchTag>> UNamedPointsBlueprintFunctionLibrary::STATIC_FindUsedGroupTagsInSubAsset(class UNamedPointsCollectionDataAsset* SubAssetToSearch)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsBlueprintFunctionLibrary.FindUsedGroupTagsInSubAsset");

	UNamedPointsBlueprintFunctionLibrary_FindUsedGroupTagsInSubAsset_Params params;
	params.SubAssetToSearch = SubAssetToSearch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NamedPointsBlueprintFunctionLibrary.FindSubAssetOnActorByTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToSearch                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ENamedPointCollectionSearchTag> CollectionTag                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNamedPointsCollectionDataAsset* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UNamedPointsCollectionDataAsset* UNamedPointsBlueprintFunctionLibrary::STATIC_FindSubAssetOnActorByTag(class AActor* ActorToSearch, TEnumAsByte<Athena_ENamedPointCollectionSearchTag> CollectionTag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsBlueprintFunctionLibrary.FindSubAssetOnActorByTag");

	UNamedPointsBlueprintFunctionLibrary_FindSubAssetOnActorByTag_Params params;
	params.ActorToSearch = ActorToSearch;
	params.CollectionTag = CollectionTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NamedPointsBlueprintFunctionLibrary.FindNamedPointOnActorAsVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToSearch                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ESpaceType> ReturnInSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UNamedPointsBlueprintFunctionLibrary::STATIC_FindNamedPointOnActorAsVector(class AActor* ActorToSearch, const struct FName& GroupName, TEnumAsByte<Athena_ESpaceType> ReturnInSpace, TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsBlueprintFunctionLibrary.FindNamedPointOnActorAsVector");

	UNamedPointsBlueprintFunctionLibrary_FindNamedPointOnActorAsVector_Params params;
	params.ActorToSearch = ActorToSearch;
	params.GroupName = GroupName;
	params.ReturnInSpace = ReturnInSpace;
	params.SearchMethod = SearchMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NamedPointsBlueprintFunctionLibrary.FindNamedPointOnActorAsTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToSearch                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ESpaceType> ReturnInSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform UNamedPointsBlueprintFunctionLibrary::STATIC_FindNamedPointOnActorAsTransform(class AActor* ActorToSearch, const struct FName& GroupName, TEnumAsByte<Athena_ESpaceType> ReturnInSpace, TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsBlueprintFunctionLibrary.FindNamedPointOnActorAsTransform");

	UNamedPointsBlueprintFunctionLibrary_FindNamedPointOnActorAsTransform_Params params;
	params.ActorToSearch = ActorToSearch;
	params.GroupName = GroupName;
	params.ReturnInSpace = ReturnInSpace;
	params.SearchMethod = SearchMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NamedPointsBlueprintFunctionLibrary.FindNamedPointOnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToSearch                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ESpaceType> ReturnInSpace                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOrientedPoint          ReturnValue                    (Parm, OutParm, ReturnParm)
struct FOrientedPoint UNamedPointsBlueprintFunctionLibrary::STATIC_FindNamedPointOnActor(class AActor* ActorToSearch, const struct FName& GroupName, TEnumAsByte<Athena_ESpaceType> ReturnInSpace, TEnumAsByte<Athena_EPointSelectionMethod> SearchMethod)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsBlueprintFunctionLibrary.FindNamedPointOnActor");

	UNamedPointsBlueprintFunctionLibrary_FindNamedPointOnActor_Params params;
	params.ActorToSearch = ActorToSearch;
	params.GroupName = GroupName;
	params.ReturnInSpace = ReturnInSpace;
	params.SearchMethod = SearchMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.NamedPointsBlueprintFunctionLibrary.FindGroupIndicesInSubAssetByTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UNamedPointsCollectionDataAsset* SubAssetToSearch               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ENamedPointGroupSearchTag> SearchTag                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<int> UNamedPointsBlueprintFunctionLibrary::STATIC_FindGroupIndicesInSubAssetByTag(class UNamedPointsCollectionDataAsset* SubAssetToSearch, TEnumAsByte<Athena_ENamedPointGroupSearchTag> SearchTag)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsBlueprintFunctionLibrary.FindGroupIndicesInSubAssetByTag");

	UNamedPointsBlueprintFunctionLibrary_FindGroupIndicesInSubAssetByTag_Params params;
	params.SubAssetToSearch = SubAssetToSearch;
	params.SearchTag = SearchTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UNamedPointsBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UNamedPointsBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UNamedPointsCollectionDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNamedPointsCollectionDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UNamedPointsCollectionListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNamedPointsCollectionListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.NamedPointsComponentInterface.SearchForWorldSpacePointInGroup
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOrientedPoint          OutOrientedPoint               (Parm, OutParm)
// TEnumAsByte<Athena_EPointSelectionMethod> Method                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNamedPointsComponentInterface::SearchForWorldSpacePointInGroup(const struct FName& GroupName, struct FOrientedPoint* OutOrientedPoint, TEnumAsByte<Athena_EPointSelectionMethod> Method)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsComponentInterface.SearchForWorldSpacePointInGroup");

	UNamedPointsComponentInterface_SearchForWorldSpacePointInGroup_Params params;
	params.GroupName = GroupName;
	params.Method = Method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOrientedPoint != nullptr)
		*OutOrientedPoint = params.OutOrientedPoint;


	return params.ReturnValue;
}


// Function Athena.NamedPointsComponentInterface.SearchForPointInGroup
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOrientedPoint          OutOrientedPoint               (Parm, OutParm)
// TEnumAsByte<Athena_EPointSelectionMethod> Method                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNamedPointsComponentInterface::SearchForPointInGroup(const struct FName& GroupName, struct FOrientedPoint* OutOrientedPoint, TEnumAsByte<Athena_EPointSelectionMethod> Method)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsComponentInterface.SearchForPointInGroup");

	UNamedPointsComponentInterface_SearchForPointInGroup_Params params;
	params.GroupName = GroupName;
	params.Method = Method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOrientedPoint != nullptr)
		*OutOrientedPoint = params.OutOrientedPoint;


	return params.ReturnValue;
}


void UNamedPointsComponentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UNamedPointsComponentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.NamedPointsComponent.SearchForWorldSpacePointInGroup
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOrientedPoint          OutOrientedPoint               (Parm, OutParm)
// TEnumAsByte<Athena_EPointSelectionMethod> Method                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNamedPointsComponent::SearchForWorldSpacePointInGroup(const struct FName& GroupName, struct FOrientedPoint* OutOrientedPoint, TEnumAsByte<Athena_EPointSelectionMethod> Method)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsComponent.SearchForWorldSpacePointInGroup");

	UNamedPointsComponent_SearchForWorldSpacePointInGroup_Params params;
	params.GroupName = GroupName;
	params.Method = Method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOrientedPoint != nullptr)
		*OutOrientedPoint = params.OutOrientedPoint;


	return params.ReturnValue;
}


// Function Athena.NamedPointsComponent.SearchForPointInGroup
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   GroupName                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOrientedPoint          OutOrientedPoint               (Parm, OutParm)
// TEnumAsByte<Athena_EPointSelectionMethod> Method                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UNamedPointsComponent::SearchForPointInGroup(const struct FName& GroupName, struct FOrientedPoint* OutOrientedPoint, TEnumAsByte<Athena_EPointSelectionMethod> Method)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.NamedPointsComponent.SearchForPointInGroup");

	UNamedPointsComponent_SearchForPointInGroup_Params params;
	params.GroupName = GroupName;
	params.Method = Method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutOrientedPoint != nullptr)
		*OutOrientedPoint = params.OutOrientedPoint;


	return params.ReturnValue;
}


void UNamedPointsComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(NamedPointsAsset, UNamedPointsCollectionListDataAsset);
}

void UNamedPointsComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(NamedPointsAsset);
}

void ANamedPointsContainer::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(NamedPoints, UNamedPointsComponent);
}

void ANamedPointsContainer::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(NamedPoints);
}

void UClientNotificationsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UClientNotificationsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCutSceneSubtitlesComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCutSceneSubtitlesComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UActorPhasingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ActorToHide, AActor);
}

void UActorPhasingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ActorToHide);
}

void UPhasedActorComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(SpawnedMapActor, AActor);
	READ_PTR_FULL(ClusterRoot, APhasedClusterRoot);
}

void UPhasedActorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(SpawnedMapActor);
	DELE_PTR_FULL(ClusterRoot);
}

void UPhasedActorSourceComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PhasingSourceActor, AActor);
}

void UPhasedActorSourceComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PhasingSourceActor);
}

void APhasedClusterRoot::AfterRead()
{
	AActor::AfterRead();

}

void APhasedClusterRoot::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UWorldSequenceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldSequenceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWorldSequenceService::AfterRead()
{
	UObject::AfterRead();

}

void UWorldSequenceService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTaleQuestDefinition::AfterRead()
{
	UObject::AfterRead();

}

void UTaleQuestDefinition::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTaleQuestDescAsset::AfterRead()
{
	UQuestDescDataAsset::AfterRead();

	READ_PTR_FULL(Root, UTaleQuestStepDesc);
	READ_PTR_FULL(Definition, UClass);
	READ_PTR_FULL(DevDefinition, UClass);
}

void UTaleQuestDescAsset::BeforeDelete()
{
	UQuestDescDataAsset::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Definition);
	DELE_PTR_FULL(DevDefinition);
}

void UTaleQuestRootFrame::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Definition, UObject);
}

void UTaleQuestRootFrame::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Definition);
}

void UTaleResourceBrokerServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

}

void UTaleResourceBrokerServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

}

void USpawnActorBaseStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(BaseDesc, USpawnActorStepDescBase);
}

void USpawnActorBaseStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(BaseDesc);
}

void USpawnActorStep::AfterRead()
{
	USpawnActorBaseStep::AfterRead();

	READ_PTR_FULL(Desc, USpawnActorStepDesc);
}

void USpawnActorStep::BeforeDelete()
{
	USpawnActorBaseStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USpawnActorAtPointStep::AfterRead()
{
	USpawnActorBaseStep::AfterRead();

	READ_PTR_FULL(Desc, USpawnActorAtPointStepDesc);
}

void USpawnActorAtPointStep::BeforeDelete()
{
	USpawnActorBaseStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USpawnPhasedActorStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USpawnPhasedActorStepDesc);
}

void USpawnPhasedActorStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USpawnActorAtPointStepDesc::AfterRead()
{
	USpawnActorStepDescBase::AfterRead();

}

void USpawnActorAtPointStepDesc::BeforeDelete()
{
	USpawnActorStepDescBase::BeforeDelete();

}

void UMechanismAnimationCurve_Transform::AfterRead()
{
	UMechanismAnimation::AfterRead();

}

void UMechanismAnimationCurve_Transform::BeforeDelete()
{
	UMechanismAnimation::BeforeDelete();

}

// Function Athena.TimedDoorMechanismAction.OnRep_ServerDoorState
// (Final, Native, Private)
void ATimedDoorMechanismAction::OnRep_ServerDoorState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TimedDoorMechanismAction.OnRep_ServerDoorState");

	ATimedDoorMechanismAction_OnRep_ServerDoorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TimedDoorMechanismAction.OnRep_CurrentKeyDesc
// (Final, Native, Private)
void ATimedDoorMechanismAction::OnRep_CurrentKeyDesc()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TimedDoorMechanismAction.OnRep_CurrentKeyDesc");

	ATimedDoorMechanismAction_OnRep_CurrentKeyDesc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATimedDoorMechanismAction::AfterRead()
{
	ABaseToggleAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(InternalTrigger, UMechanismTriggerComponent);
	READ_PTR_FULL(LandmarkReactionPlayer, ALandmarkReactionPlayer);
	READ_PTR_FULL(CurrentKeyDesc, UClass);
}

void ATimedDoorMechanismAction::BeforeDelete()
{
	ABaseToggleAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(InternalTrigger);
	DELE_PTR_FULL(LandmarkReactionPlayer);
	DELE_PTR_FULL(CurrentKeyDesc);
}

void ADoorMechanism::AfterRead()
{
	AToggleAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(DoorMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(RewindComponent, URewindComponent);
}

void ADoorMechanism::BeforeDelete()
{
	AToggleAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(DoorMeshComponent);
	DELE_PTR_FULL(RewindComponent);
}

void AWaterPuzzleAlterationMechanismAction::AfterRead()
{
	AToggleAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(PuzzleActor, AActor);
	READ_PTR_FULL(AlterationMechanismAudioParams, UWaterPuzzleAlterationMechanismAudioParams);
	READ_PTR_FULL(MouthSFXPosition, USceneComponent);
	READ_PTR_FULL(WaterSpoutComponent, UWaterSpoutVFXComponent);
	READ_PTR_FULL(GlowComponent, UStoneFaceGlowComponent);
}

void AWaterPuzzleAlterationMechanismAction::BeforeDelete()
{
	AToggleAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(PuzzleActor);
	DELE_PTR_FULL(AlterationMechanismAudioParams);
	DELE_PTR_FULL(MouthSFXPosition);
	DELE_PTR_FULL(WaterSpoutComponent);
	DELE_PTR_FULL(GlowComponent);
}

void UMechanismAnimationCurve_Float::AfterRead()
{
	UMechanismAnimation::AfterRead();

}

void UMechanismAnimationCurve_Float::BeforeDelete()
{
	UMechanismAnimation::BeforeDelete();

}

// Function Athena.SimpleAnimatedMechanismAction.CalculateAnimationDuration
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ASimpleAnimatedMechanismAction::CalculateAnimationDuration()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SimpleAnimatedMechanismAction.CalculateAnimationDuration");

	ASimpleAnimatedMechanismAction_CalculateAnimationDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASimpleAnimatedMechanismAction::AfterRead()
{
	AAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
}

void ASimpleAnimatedMechanismAction::BeforeDelete()
{
	AAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(AudioEmitterPool);
}

void UMechanismVirtualSceneComponentTransformInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismVirtualSceneComponentTransformInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAggressiveGhostShipEncounterFormationsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipEncounterFormationsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipFixedSplinesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipFixedSplinesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipLocationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipLocationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void AAggressiveGhostShipMine::AfterRead()
{
	ABuoyantActor::AfterRead();

	READ_PTR_FULL(PhysicsRootComponent, UPrimitiveComponent);
	READ_PTR_FULL(FuseComponent, UFuseComponent);
	READ_PTR_FULL(ExplosiveComponent, UExplosiveComponent);
	READ_PTR_FULL(HealthComponent, UHealthComponent);
}

void AAggressiveGhostShipMine::BeforeDelete()
{
	ABuoyantActor::BeforeDelete();

	DELE_PTR_FULL(PhysicsRootComponent);
	DELE_PTR_FULL(FuseComponent);
	DELE_PTR_FULL(ExplosiveComponent);
	DELE_PTR_FULL(HealthComponent);
}

void UAggressiveGhostShipShotSelectionDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipShotSelectionDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAggressiveGhostShipVisualsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(AppearAnimation, UAggressiveGhostShipAnimationDataAsset);
	READ_PTR_FULL(DisappearAnimation, UAggressiveGhostShipAnimationDataAsset);
	READ_PTR_FULL(SinkingAnimation, UAggressiveGhostShipAnimationDataAsset);
}

void UAggressiveGhostShipVisualsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(AppearAnimation);
	DELE_PTR_FULL(DisappearAnimation);
	DELE_PTR_FULL(SinkingAnimation);
}

void UMeleeChargeAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UMeleeChargeAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UMeleeChargeAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UMeleeChargeAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UMeleeSpinAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

}

void UMeleeSpinAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

}

void UMeleeSpinAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

}

void UMeleeSpinAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

}

void UAirGivingService::AfterRead()
{
	UObject::AfterRead();

}

void UAirGivingService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UAirPocketStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UAirPocketStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.DrowningComponent.OnRep_CurrentState
// (Final, Native, Private)
void UDrowningComponent::OnRep_CurrentState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrowningComponent.OnRep_CurrentState");

	UDrowningComponent_OnRep_CurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrowningComponent.OnRep_CurrentOxygen
// (Final, Native, Private)
void UDrowningComponent::OnRep_CurrentOxygen()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrowningComponent.OnRep_CurrentOxygen");

	UDrowningComponent_OnRep_CurrentOxygen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.DrowningComponent.GetOxygenLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UDrowningComponent::GetOxygenLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrowningComponent.GetOxygenLevel");

	UDrowningComponent_GetOxygenLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.DrowningComponent.CompleteOxygenLevelResetTimer
// (Final, Native, Private)
void UDrowningComponent::CompleteOxygenLevelResetTimer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DrowningComponent.CompleteOxygenLevelResetTimer");

	UDrowningComponent_CompleteOxygenLevelResetTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDrowningComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Params, UDrowningComponentParams);
	READ_PTR_FULL(BubbleVFXComponent, UParticleSystemComponent);
	READ_PTR_FULL(ExtraBubblesFirstPersonVFXComponent, UParticleSystemComponent);
	READ_PTR_FULL(OwnerCharacter, AActor);
	READ_PTR_FULL(OwnerHealthComponent, UHealthComponent);
}

void UDrowningComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Params);
	DELE_PTR_FULL(BubbleVFXComponent);
	DELE_PTR_FULL(ExtraBubblesFirstPersonVFXComponent);
	DELE_PTR_FULL(OwnerCharacter);
	DELE_PTR_FULL(OwnerHealthComponent);
}

void UStatusResponsePreventDrowning::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponsePreventDrowning::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UFireBreathAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

	READ_PTR_FULL(FireBreathObject, UClass);
	READ_PTR_FULL(VfxSpawner, UClass);
}

void UFireBreathAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

	DELE_PTR_FULL(FireBreathObject);
	DELE_PTR_FULL(VfxSpawner);
}

void UFireCannonNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UFireCannonNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UFireChargedAttackAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

}

void UFireChargedAttackAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

}

// Function Athena.GenericMarkerService.OnRep_GenericMarkers
// (Final, Native, Private)
void AGenericMarkerService::OnRep_GenericMarkers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GenericMarkerService.OnRep_GenericMarkers");

	AGenericMarkerService_OnRep_GenericMarkers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AGenericMarkerService::AfterRead()
{
	AActor::AfterRead();

}

void AGenericMarkerService::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.GenericPart.GetMeshComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UStaticMeshComponent* AGenericPart::GetMeshComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GenericPart.GetMeshComponent");

	AGenericPart_GetMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AGenericPart::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CustomizationComponent, UReplicatedShipPartCustomizationComponent);
}

void AGenericPart::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CustomizationComponent);
}

// Function Athena.GenericPartWithVFX.GetVFXComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UParticleSystemComponent* AGenericPartWithVFX::GetVFXComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GenericPartWithVFX.GetVFXComponent");

	AGenericPartWithVFX_GetVFXComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AGenericPartWithVFX::AfterRead()
{
	AGenericPart::AfterRead();

}

void AGenericPartWithVFX::BeforeDelete()
{
	AGenericPart::BeforeDelete();

}

void UPerformancePetSpawnDefinitionsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SpawnQuery, UEnvQuery);
	READ_PTR_FULL(ShipSpawnQuery, UEnvQuery);
}

void UPerformancePetSpawnDefinitionsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SpawnQuery);
	DELE_PTR_FULL(ShipSpawnQuery);
}

// Function Athena.PerformancePetSpawnerActor.SpawnPets
// (Final, Native, Public, BlueprintCallable)
void APerformancePetSpawnerActor::SpawnPets()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.SpawnPets");

	APerformancePetSpawnerActor_SpawnPets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PerformancePetSpawnerActor.SetOverridePetOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  NewOwner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APerformancePetSpawnerActor::SetOverridePetOwner(class AActor* NewOwner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.SetOverridePetOwner");

	APerformancePetSpawnerActor_SetOverridePetOwner_Params params;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PerformancePetSpawnerActor.RequestReactWithName
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InReactName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APerformancePetSpawnerActor::RequestReactWithName(const struct FName& InReactName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.RequestReactWithName");

	APerformancePetSpawnerActor_RequestReactWithName_Params params;
	params.InReactName = InReactName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PerformancePetSpawnerActor.HavePetsFinishedSpawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool APerformancePetSpawnerActor::HavePetsFinishedSpawning()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.HavePetsFinishedSpawning");

	APerformancePetSpawnerActor_HavePetsFinishedSpawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PerformancePetSpawnerActor.GetSpawnedPets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSpawnedPetData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FSpawnedPetData> APerformancePetSpawnerActor::GetSpawnedPets()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.GetSpawnedPets");

	APerformancePetSpawnerActor_GetSpawnedPets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PerformancePetSpawnerActor.DespawnPets
// (Final, Native, Public, BlueprintCallable)
void APerformancePetSpawnerActor::DespawnPets()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.DespawnPets");

	APerformancePetSpawnerActor_DespawnPets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PerformancePetSpawnerActor.CancelReactWithName
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InReactName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APerformancePetSpawnerActor::CancelReactWithName(const struct FName& InReactName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PerformancePetSpawnerActor.CancelReactWithName");

	APerformancePetSpawnerActor_CancelReactWithName_Params params;
	params.InReactName = InReactName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APerformancePetSpawnerActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(PerformancePetSpawnDefinitionsDataAsset, UPerformancePetSpawnDefinitionsDataAsset);
	READ_PTR_FULL(ShipActor, AActor);
	READ_PTR_FULL(Spawner, UAIPetsOnDemandSpawner);
	READ_PTR_FULL(OverridePetOwner, AActor);
}

void APerformancePetSpawnerActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(PerformancePetSpawnDefinitionsDataAsset);
	DELE_PTR_FULL(ShipActor);
	DELE_PTR_FULL(Spawner);
	DELE_PTR_FULL(OverridePetOwner);
}

void UPremiumCatalogDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPremiumCatalogDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPremiumCatalogListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPremiumCatalogListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoyageProposalAssetSelector::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVoyageProposalAssetSelector::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UResolveActorStringReferenceStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UResolveActorStringReferenceStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWaterSensitiveComponentDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWaterSensitiveComponentDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// DelegateFunction Athena.WaterSplashComponent.OnWaterSplashReachedTooDeepDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void UWaterSplashComponent::OnWaterSplashReachedTooDeepDelegate__DelegateSignature()
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.WaterSplashComponent.OnWaterSplashReachedTooDeepDelegate__DelegateSignature");

	UWaterSplashComponent_OnWaterSplashReachedTooDeepDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.WaterSplashComponent.OnWaterSplashExitWaterDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void UWaterSplashComponent::OnWaterSplashExitWaterDelegate__DelegateSignature()
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.WaterSplashComponent.OnWaterSplashExitWaterDelegate__DelegateSignature");

	UWaterSplashComponent_OnWaterSplashExitWaterDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.WaterSplashComponent.OnWaterSplashEnterWaterDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void UWaterSplashComponent::OnWaterSplashEnterWaterDelegate__DelegateSignature()
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.WaterSplashComponent.OnWaterSplashEnterWaterDelegate__DelegateSignature");

	UWaterSplashComponent_OnWaterSplashEnterWaterDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWaterSplashComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(EnterWaterParticleSystem, UObject);
	READ_PTR_FULL(EnterWaterSfx, UWwiseEvent);
	READ_PTR_FULL(EnterWaterSfxWisePoolToUse, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ExitWaterParticleSystem, UObject);
	READ_PTR_FULL(ExitWaterSfx, UWwiseEvent);
	READ_PTR_FULL(ExitWaterSfxWisePoolToUse, UWwiseObjectPoolWrapper);
}

void UWaterSplashComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(EnterWaterParticleSystem);
	DELE_PTR_FULL(EnterWaterSfx);
	DELE_PTR_FULL(EnterWaterSfxWisePoolToUse);
	DELE_PTR_FULL(ExitWaterParticleSystem);
	DELE_PTR_FULL(ExitWaterSfx);
	DELE_PTR_FULL(ExitWaterSfxWisePoolToUse);
}

// Function Athena.WeakActorHandleTestsFunctionLib.TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWeakActorHandleTestsFunctionLib::STATIC_TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WeakActorHandleTestsFunctionLib.TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName");

	UWeakActorHandleTestsFunctionLib_TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWeakActorHandleTestsFunctionLib::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWeakActorHandleTestsFunctionLib::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UWeaponInterruptedStatusType::AfterRead()
{
	UStatusBase::AfterRead();

}

void UWeaponInterruptedStatusType::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.WeepingComponent.OnRep_State
// (Final, Native, Private)
void UWeepingComponent::OnRep_State()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WeepingComponent.OnRep_State");

	UWeepingComponent_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWeepingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(StartWeepingSFX, UWwiseEvent);
	READ_PTR_FULL(StopWeepingSFX, UWwiseEvent);
	READ_PTR_FULL(WeepingSFXPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(DecalMaterial, UMaterialInstanceDynamic);
}

void UWeepingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(StartWeepingSFX);
	DELE_PTR_FULL(StopWeepingSFX);
	DELE_PTR_FULL(WeepingSFXPool);
	DELE_PTR_FULL(DecalMaterial);
}

void UMaterialManipulationSettingsInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMaterialManipulationSettingsInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.HealthRegenerationPoolComponent.OnRep_RegenerationState
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FHealthRegenState       OldRegenerationState           (ConstParm, Parm, OutParm, ReferenceParm)
void UHealthRegenerationPoolComponent::OnRep_RegenerationState(const struct FHealthRegenState& OldRegenerationState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthRegenerationPoolComponent.OnRep_RegenerationState");

	UHealthRegenerationPoolComponent_OnRep_RegenerationState_Params params;
	params.OldRegenerationState = OldRegenerationState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHealthRegenerationPoolComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UHealthRegenerationPoolComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UHealthStageHandlerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHealthStageHandlerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHealthStageHandlerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UHealthStageHandlerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UItemDiggingEffectsConfig::AfterRead()
{
	UObject::AfterRead();

}

void UItemDiggingEffectsConfig::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UItemDiggingAudioConfig::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ShovelEnterSurfaceSfx, UWwiseEvent);
	READ_PTR_FULL(ExhumeStepSfx, UWwiseEvent);
	READ_PTR_FULL(FullyDugUpSfx, UWwiseEvent);
}

void UItemDiggingAudioConfig::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ShovelEnterSurfaceSfx);
	DELE_PTR_FULL(ExhumeStepSfx);
	DELE_PTR_FULL(FullyDugUpSfx);
}

void UEncounterListenerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UEncounterListenerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UEncounterListenerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEncounterListenerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEncounterServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEncounterServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStorageContainerSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UStorageContainerSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UStorageContainerSpecialTypeSelectorEntries::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(NumSpawners, UStorageContainerSpawnerCount);
}

void UStorageContainerSpecialTypeSelectorEntries::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(NumSpawners);
}

void UTakesItemFromStorageContainerConditionalTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UTakesItemFromStorageContainerConditionalTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void ALockedCollectorsChestItemInfo::AfterRead()
{
	ACollectorsChestItemInfo::AfterRead();

}

void ALockedCollectorsChestItemInfo::BeforeDelete()
{
	ACollectorsChestItemInfo::BeforeDelete();

}

void ATreasureChestItemProxy::AfterRead()
{
	ABootyProxy::AfterRead();

	READ_PTR_FULL(ShovelEnterSurfaceSfx, UWwiseEvent);
	READ_PTR_FULL(ExhumeStepSfx, UWwiseEvent);
	READ_PTR_FULL(FullyDugUpSfx, UWwiseEvent);
	READ_PTR_FULL(ChestAmbiencePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ChestAmbiencePlay, UWwiseEvent);
	READ_PTR_FULL(ChestAmbienceStop, UWwiseEvent);
	READ_PTR_FULL(DitherComponent, UDitherComponent);
	READ_PTR_FULL(CachedAudioConfig, UItemDiggingAudioConfig);
}

void ATreasureChestItemProxy::BeforeDelete()
{
	ABootyProxy::BeforeDelete();

	DELE_PTR_FULL(ShovelEnterSurfaceSfx);
	DELE_PTR_FULL(ExhumeStepSfx);
	DELE_PTR_FULL(FullyDugUpSfx);
	DELE_PTR_FULL(ChestAmbiencePool);
	DELE_PTR_FULL(ChestAmbiencePlay);
	DELE_PTR_FULL(ChestAmbienceStop);
	DELE_PTR_FULL(DitherComponent);
	DELE_PTR_FULL(CachedAudioConfig);
}

void ATreasureChestItemProxySkeletal::AfterRead()
{
	ATreasureChestItemProxy::AfterRead();

}

void ATreasureChestItemProxySkeletal::BeforeDelete()
{
	ATreasureChestItemProxy::BeforeDelete();

}

void ACollectorsChestItemProxy::AfterRead()
{
	ATreasureChestItemProxySkeletal::AfterRead();

	READ_PTR_FULL(OpenableItemComponent, UOpenableItemComponent);
}

void ACollectorsChestItemProxy::BeforeDelete()
{
	ATreasureChestItemProxySkeletal::BeforeDelete();

	DELE_PTR_FULL(OpenableItemComponent);
}

void ATreasureChestItemProxyStatic::AfterRead()
{
	ATreasureChestItemProxy::AfterRead();

}

void ATreasureChestItemProxyStatic::BeforeDelete()
{
	ATreasureChestItemProxy::BeforeDelete();

}

void ACollectorsChestItemProxyStatic::AfterRead()
{
	ATreasureChestItemProxyStatic::AfterRead();

	READ_PTR_FULL(OpenableItemComponent, UOpenableItemComponent);
}

void ACollectorsChestItemProxyStatic::BeforeDelete()
{
	ATreasureChestItemProxyStatic::BeforeDelete();

	DELE_PTR_FULL(OpenableItemComponent);
}

void UGoldInContainerDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGoldInContainerDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCircleMapSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UCircleMapSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UMapIslandTextureProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMapIslandTextureProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandServiceIslandTextureProviderComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandServiceIslandTextureProviderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UMapMarkId::AfterRead()
{
	UObject::AfterRead();

}

void UMapMarkId::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UMapTextureRenderResource::AfterRead()
{
	UMapRenderResource::AfterRead();

}

void UMapTextureRenderResource::BeforeDelete()
{
	UMapRenderResource::BeforeDelete();

}

void UGenericPartDescAsset::AfterRead()
{
	UShipPartDescAsset::AfterRead();

}

void UGenericPartDescAsset::BeforeDelete()
{
	UShipPartDescAsset::BeforeDelete();

}

void UGenericPartWithVFXDescAsset::AfterRead()
{
	UGenericPartDescAsset::AfterRead();

	READ_PTR_FULL(VFX, UParticleSystem);
}

void UGenericPartWithVFXDescAsset::BeforeDelete()
{
	UGenericPartDescAsset::BeforeDelete();

	DELE_PTR_FULL(VFX);
}

void UGenericWorldMapMarker::AfterRead()
{
	UActorComponent::AfterRead();

}

void UGenericWorldMapMarker::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPLQuestLocationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPLQuestLocationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPLQuestLocationDataBundle::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPLQuestLocationDataBundle::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.TaleQuestStructGenService.GetNextQuestInChain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTQStructGenSelection   ReturnValue                    (Parm, OutParm, ReturnParm)
struct FTQStructGenSelection UTaleQuestStructGenService::GetNextQuestInChain()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestStructGenService.GetNextQuestInChain");

	UTaleQuestStructGenService_GetNextQuestInChain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TaleQuestStructGenService.GetCurrentLocationData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPLQuestLocationDataAsset* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UPLQuestLocationDataAsset* UTaleQuestStructGenService::GetCurrentLocationData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestStructGenService.GetCurrentLocationData");

	UTaleQuestStructGenService_GetCurrentLocationData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTaleQuestStructGenService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(ResourceBroker, UTaleResourceBrokerService);
	READ_PTR_FULL(GameEventExclusionZoneService, UGameEventExclusionZoneTaleService);
}

void UTaleQuestStructGenService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(ResourceBroker);
	DELE_PTR_FULL(GameEventExclusionZoneService);
}

void UGetCurrentLocationDataStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UGetCurrentLocationDataStepDesc);
}

void UGetCurrentLocationDataStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UGetCurrentLocationDataStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UGetCurrentLocationDataStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UGetCurrentQuestInfoStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UGetCurrentQuestInfoStepDesc);
}

void UGetCurrentQuestInfoStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UGetCurrentQuestInfoStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UGetCurrentQuestInfoStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UGetIntoAttackPositionAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UGetIntoAttackPositionAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UGetNextQuestInChainStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UGetNextQuestInChainStepDesc);
}

void UGetNextQuestInChainStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UGetNextQuestInChainStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UGetNextQuestInChainStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UGhostAIFormComponent::AfterRead()
{
	UAthenaAIFormComponent::AfterRead();

}

void UGhostAIFormComponent::BeforeDelete()
{
	UAthenaAIFormComponent::BeforeDelete();

}

void UGhostAIFormDataAsset::AfterRead()
{
	UAthenaAIFormDataAsset::AfterRead();

	READ_PTR_FULL(GhostShroudStaticMesh, UStaticMesh);
}

void UGhostAIFormDataAsset::BeforeDelete()
{
	UAthenaAIFormDataAsset::BeforeDelete();

	DELE_PTR_FULL(GhostShroudStaticMesh);
}

void UGhostCharacterAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGhostCharacterAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UGhostCharacterAudioComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(GhostShipWaterphonePlay, UWwiseEvent);
	READ_PTR_FULL(GhostShipMusicStopAll, UWwiseEvent);
	READ_PTR_FULL(GhostShipAmbiencePlay, UWwiseEvent);
	READ_PTR_FULL(GhostShipAmbienceStop, UWwiseEvent);
	READ_PTR_FULL(GhostCharacterAudioParams, UGhostCharacterAudioComponentParams);
	READ_PTR_FULL(FootfallParams, UCharacterAudioFootfallControllerParams);
}

void UGhostCharacterAudioComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(GhostShipWaterphonePlay);
	DELE_PTR_FULL(GhostShipMusicStopAll);
	DELE_PTR_FULL(GhostShipAmbiencePlay);
	DELE_PTR_FULL(GhostShipAmbienceStop);
	DELE_PTR_FULL(GhostCharacterAudioParams);
	DELE_PTR_FULL(FootfallParams);
}

// Function Athena.GhostShipDoor.OpenForPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGhostShipDoor::OpenForPlayer(class APawn* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GhostShipDoor.OpenForPlayer");

	AGhostShipDoor_OpenForPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Athena.GhostShipDoor.OnDoorOpenedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class APawn*                   OpenedForPlayer                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGhostShipDoor::OnDoorOpenedDelegate__DelegateSignature(class APawn* OpenedForPlayer)
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.GhostShipDoor.OnDoorOpenedDelegate__DelegateSignature");

	AGhostShipDoor_OnDoorOpenedDelegate__DelegateSignature_Params params;
	params.OpenedForPlayer = OpenedForPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GhostShipDoor.Multicast_ResetForPlayer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APawn*                   Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGhostShipDoor::Multicast_ResetForPlayer(class APawn* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GhostShipDoor.Multicast_ResetForPlayer");

	AGhostShipDoor_Multicast_ResetForPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GhostShipDoor.Multicast_OpenForPlayer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APawn*                   Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGhostShipDoor::Multicast_OpenForPlayer(class APawn* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GhostShipDoor.Multicast_OpenForPlayer");

	AGhostShipDoor_Multicast_OpenForPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GhostShipDoor.Multicast_OnDoorFullyOpen
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class APawn*                   Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AGhostShipDoor::Multicast_OnDoorFullyOpen(class APawn* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GhostShipDoor.Multicast_OnDoorFullyOpen");

	AGhostShipDoor_Multicast_OnDoorFullyOpen_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AGhostShipDoor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(DoorMesh, UClientSkeletalMeshComponent);
	READ_PTR_FULL(DoorOpeningAnimation, UAnimSequence);
	READ_PTR_FULL(DoorOpeningSfx, UWwiseEvent);
}

void AGhostShipDoor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(DoorMesh);
	DELE_PTR_FULL(DoorOpeningAnimation);
	DELE_PTR_FULL(DoorOpeningSfx);
}

void AGhostShipStreamingProbe::AfterRead()
{
	AActor::AfterRead();

}

void AGhostShipStreamingProbe::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.GhostShipTickManager.EnableActorsOnGhostShip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AGhostShipTickManager::EnableActorsOnGhostShip(bool bEnable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GhostShipTickManager.EnableActorsOnGhostShip");

	AGhostShipTickManager_EnableActorsOnGhostShip_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AGhostShipTickManager::AfterRead()
{
	AActor::AfterRead();

}

void AGhostShipTickManager::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UGiveVoyageOnWieldItemComponent::AfterRead()
{
	UOnItemWieldedComponent::AfterRead();

	READ_PTR_FULL(VoyageRecipe, UVoyageRecipeDataAsset);
}

void UGiveVoyageOnWieldItemComponent::BeforeDelete()
{
	UOnItemWieldedComponent::BeforeDelete();

	DELE_PTR_FULL(VoyageRecipe);
}

// Function Athena.GlintComponent.OnEnteredShipDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  EnteredShip                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UGlintComponent::OnEnteredShipDestroyed(class AActor* EnteredShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GlintComponent.OnEnteredShipDestroyed");

	UGlintComponent_OnEnteredShipDestroyed_Params params;
	params.EnteredShip = EnteredShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGlintComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(GlintComponentDataAsset, UGlintComponentDataAsset);
}

void UGlintComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(GlintComponentDataAsset);
}

void UGlintComponentDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGlintComponentDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UGlobalEmitterServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGlobalEmitterServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AGlobalEmitterService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ImpactListDataAsset, UImpactListDataAsset);
}

void AGlobalEmitterService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ImpactListDataAsset);
}

void UGrantPagesStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UGrantPagesStepDesc);
}

void UGrantPagesStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UQuestBookPageBundle::AfterRead()
{
	UDataAsset::AfterRead();

}

void UQuestBookPageBundle::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UGrantPagesStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UGrantPagesStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UGrantPagesStepFromLayoutsDesc::AfterRead()
{
	UGrantPagesStepDesc::AfterRead();

}

void UGrantPagesStepFromLayoutsDesc::BeforeDelete()
{
	UGrantPagesStepDesc::BeforeDelete();

}

// Function Athena.IslandService.OnRep_ReplicatedIslandArray
// (Final, Native, Private)
void AIslandService::OnRep_ReplicatedIslandArray()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandService.OnRep_ReplicatedIslandArray");

	AIslandService_OnRep_ReplicatedIslandArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IslandService.CollectLandmarksFromWorld
// (Final, Native, Public)
void AIslandService::CollectLandmarksFromWorld()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandService.CollectLandmarksFromWorld");

	AIslandService_CollectLandmarksFromWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IslandService.CollectIslandDataFromWorld
// (Final, Native, Private)
void AIslandService::CollectIslandDataFromWorld()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandService.CollectIslandDataFromWorld");

	AIslandService_CollectIslandDataFromWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AIslandService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(IslandFrameworkSettings, UIslandFrameworkSettings);
	READ_PTR_FULL(IslandDataAsset, UIslandDataAsset);
}

void AIslandService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(IslandFrameworkSettings);
	DELE_PTR_FULL(IslandDataAsset);
}

void ACustomizableIslandService::AfterRead()
{
	AIslandService::AfterRead();

}

void ACustomizableIslandService::BeforeDelete()
{
	AIslandService::BeforeDelete();

}

void APerfTestIslandService::AfterRead()
{
	AIslandService::AfterRead();

}

void APerfTestIslandService::BeforeDelete()
{
	AIslandService::BeforeDelete();

}

void UIsOnFerryRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UIsOnFerryRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

void UIsPirateLegendNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UIsPirateLegendNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UIsPirateLegendStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsPirateLegendStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UIsPlayerInIslandBoundsStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsPlayerInIslandBoundsStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UIsPlayingOnCustomServerNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UIsPlayingOnCustomServerNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UIsPlayModeStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsPlayModeStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UIsProjectileOfGivenImpactProjectileId::AfterRead()
{
	UStatCondition::AfterRead();

	READ_PTR_FULL(ImpactProjectileId, UClass);
}

void UIsProjectileOfGivenImpactProjectileId::BeforeDelete()
{
	UStatCondition::BeforeDelete();

	DELE_PTR_FULL(ImpactProjectileId);
}

void UIsRunningReapersFlagStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsRunningReapersFlagStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UIsShipCustomizedWithStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsShipCustomizedWithStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UIsWearingClothingNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UIsWearingClothingNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UIsWearingClothingStatConditional::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsWearingClothingStatConditional::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UIsWieldingItemNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UIsWieldingItemNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UIsWieldingItemRadialContext::AfterRead()
{
	URadialContextBase::AfterRead();

}

void UIsWieldingItemRadialContext::BeforeDelete()
{
	URadialContextBase::BeforeDelete();

}

void UItemDescList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UItemDescList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UItemLoaderComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UItemLoaderComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ItemLoadoutComponent.OnRep_Slots
// (Final, Native, Private)
void UItemLoadoutComponent::OnRep_Slots()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutComponent.OnRep_Slots");

	UItemLoadoutComponent_OnRep_Slots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemLoadoutComponent.OnItemDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UItemLoadoutComponent::OnItemDestroyed(class AActor* InActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutComponent.OnItemDestroyed");

	UItemLoadoutComponent_OnItemDestroyed_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UItemLoadoutComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UItemLoadoutComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UItemPreviewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemPreviewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AItemPreviewActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(PendingAnim, UAnimationAsset);
	READ_PTR_FULL(CosmeticItemAnimationComponent, UCosmeticItemAnimationComponent);
	READ_PTR_FULL(DefaultAnimation, UAnimationAsset);
}

void AItemPreviewActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(PendingAnim);
	DELE_PTR_FULL(CosmeticItemAnimationComponent);
	DELE_PTR_FULL(DefaultAnimation);
}

void UItemPreviewDataInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemPreviewDataInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemPreviewDataObject::AfterRead()
{
	UObject::AfterRead();

}

void UItemPreviewDataObject::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UItemPreviewComponent::AfterRead()
{
	UCoherentUIGTRenderToTextureLiveView::AfterRead();

	READ_PTR_FULL(RequiredPreviewObjectClass, UClass);
	READ_PTR_FULL(ClassToSpawn, UClass);
	READ_PTR_FULL(Details, URenderToTextureSceneDetails);
	READ_PTR_FULL(InteractionActor, AActor);
}

void UItemPreviewComponent::BeforeDelete()
{
	UCoherentUIGTRenderToTextureLiveView::BeforeDelete();

	DELE_PTR_FULL(RequiredPreviewObjectClass);
	DELE_PTR_FULL(ClassToSpawn);
	DELE_PTR_FULL(Details);
	DELE_PTR_FULL(InteractionActor);
}

void UPetPreviewDataObject::AfterRead()
{
	UItemPreviewDataObject::AfterRead();

	READ_PTR_FULL(CurrentPetDesc, UClass);
}

void UPetPreviewDataObject::BeforeDelete()
{
	UItemPreviewDataObject::BeforeDelete();

	DELE_PTR_FULL(CurrentPetDesc);
}

void UItemRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

	READ_PTR_FULL(RemappingAsset, UInventoryItemCategoryToSlotRemappingAsset);
}

void UItemRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

	DELE_PTR_FULL(RemappingAsset);
}

void UItemsByCategoryRadialContentRule::AfterRead()
{
	URadialContentRule::AfterRead();

	READ_PTR_FULL(RemappingAsset, UInventoryItemDescToSlotRemappingPolicyAsset);
	READ_PTR_FULL(CustomItemCategory, UClass);
}

void UItemsByCategoryRadialContentRule::BeforeDelete()
{
	URadialContentRule::BeforeDelete();

	DELE_PTR_FULL(RemappingAsset);
	DELE_PTR_FULL(CustomItemCategory);
}

void UIteratorFrame::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestParallelForeachStepDesc);
	READ_PTR_FULL(StructForCollector, UScriptStruct);
}

void UIteratorFrame::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Desc);
	DELE_PTR_FULL(StructForCollector);
}

// Function Athena.TaleQuestParallelForeachStep.ToContext
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGenericStruct          InStruct                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UTaleQuestParallelForeachStep::ToContext(const struct FGenericStruct& InStruct)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.ToContext");

	UTaleQuestParallelForeachStep_ToContext_Params params;
	params.InStruct = InStruct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TaleQuestParallelForeachStep.Start
// (Event, Protected, BlueprintEvent)
void UTaleQuestParallelForeachStep::Start()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.Start");

	UTaleQuestParallelForeachStep_Start_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TaleQuestParallelForeachStep.GetVariables
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGenericStruct          OutStruct                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTaleQuestParallelForeachStep::GetVariables(struct FGenericStruct* OutStruct)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.GetVariables");

	UTaleQuestParallelForeachStep_GetVariables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutStruct != nullptr)
		*OutStruct = params.OutStruct;

}


// Function Athena.TaleQuestParallelForeachStep.GetTaleService
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass*                  ServiceClass                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UTaleQuestService*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UTaleQuestService* UTaleQuestParallelForeachStep::GetTaleService(class UClass* ServiceClass)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.GetTaleService");

	UTaleQuestParallelForeachStep_GetTaleService_Params params;
	params.ServiceClass = ServiceClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TaleQuestParallelForeachStep.GetDefinition
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UObject* UTaleQuestParallelForeachStep::GetDefinition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.GetDefinition");

	UTaleQuestParallelForeachStep_GetDefinition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TaleQuestParallelForeachStep.GetCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UTaleQuestParallelForeachStep::GetCount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.GetCount");

	UTaleQuestParallelForeachStep_GetCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TaleQuestParallelForeachStep.ForIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UTaleQuestParallelForeachStep::ForIndex(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestParallelForeachStep.ForIndex");

	UTaleQuestParallelForeachStep_ForIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTaleQuestParallelForeachStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestParallelForeachStepDesc);
}

void UTaleQuestParallelForeachStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UKeepStillAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UKeepStillAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UKnockbackAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UKnockbackAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UKnockbackAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UKnockbackAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

// Function Athena.KnockbackAIAbilityTriggerComponent.Multicast_Explode
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FExplosionForceFeedbackInfo ForceFeedbackInfo              (Parm)
void UKnockbackAIAbilityTriggerComponent::Multicast_Explode(const struct FExplosionForceFeedbackInfo& ForceFeedbackInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KnockbackAIAbilityTriggerComponent.Multicast_Explode");

	UKnockbackAIAbilityTriggerComponent_Multicast_Explode_Params params;
	params.ForceFeedbackInfo = ForceFeedbackInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKnockbackAIAbilityTriggerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UKnockbackAIAbilityTriggerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UKnockbackAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

	READ_PTR_FULL(PawnExplosion, UExplosionComponent);
}

void UKnockbackAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

	DELE_PTR_FULL(PawnExplosion);
}

void UClawPummelAIAbility::AfterRead()
{
	UKnockbackAIAbility::AfterRead();

}

void UClawPummelAIAbility::BeforeDelete()
{
	UKnockbackAIAbility::BeforeDelete();

}

void UKnockbackAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

}

void UKnockbackAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

}

void UClawPummelAIAbilityParams::AfterRead()
{
	UKnockbackAIAbilityParams::AfterRead();

}

void UClawPummelAIAbilityParams::BeforeDelete()
{
	UKnockbackAIAbilityParams::BeforeDelete();

}

// Function Athena.KrakenActionCoordinatorComponent.OnRep_NextAction
// (Final, RequiredAPI, Native, Protected)
void UKrakenActionCoordinatorComponent::OnRep_NextAction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenActionCoordinatorComponent.OnRep_NextAction");

	UKrakenActionCoordinatorComponent_OnRep_NextAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.KrakenActionCoordinatorComponent.OnRep_CurrentAction
// (Final, RequiredAPI, Native, Protected)
void UKrakenActionCoordinatorComponent::OnRep_CurrentAction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.KrakenActionCoordinatorComponent.OnRep_CurrentAction");

	UKrakenActionCoordinatorComponent_OnRep_CurrentAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UKrakenActionCoordinatorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UKrakenActionCoordinatorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UKrakenAICharacterAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PlayKrakenAmbience, UWwiseEvent);
	READ_PTR_FULL(StopKrakenAmbience, UWwiseEvent);
	READ_PTR_FULL(PlayKrakenTell, UWwiseEvent);
}

void UKrakenAICharacterAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PlayKrakenAmbience);
	DELE_PTR_FULL(StopKrakenAmbience);
	DELE_PTR_FULL(PlayKrakenTell);
}

void UKrakenAICharacterAudioComponent::AfterRead()
{
	UAICharacterAudioComponent::AfterRead();

	READ_PTR_FULL(AICharacterAudioParams, UKrakenAICharacterAudioComponentParams);
}

void UKrakenAICharacterAudioComponent::BeforeDelete()
{
	UAICharacterAudioComponent::BeforeDelete();

	DELE_PTR_FULL(AICharacterAudioParams);
}

void UVaultMaterialSetDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVaultMaterialSetDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.VenomComponent.SprayVenomInDirection
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 SourceLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class AActor*                  CrateToIgnore                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVenomComponent::SprayVenomInDirection(const struct FVector& SourceLocation, const struct FVector& Direction, class AActor* CrateToIgnore)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VenomComponent.SprayVenomInDirection");

	UVenomComponent_SprayVenomInDirection_Params params;
	params.SourceLocation = SourceLocation;
	params.Direction = Direction;
	params.CrateToIgnore = CrateToIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VenomComponent.SprayVenomAtClosestTarget
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 SourceLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UVenomComponent::SprayVenomAtClosestTarget(const struct FVector& SourceLocation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VenomComponent.SprayVenomAtClosestTarget");

	UVenomComponent_SprayVenomAtClosestTarget_Params params;
	params.SourceLocation = SourceLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VenomComponent.ApplyVenomToTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVenomComponent::ApplyVenomToTarget(class AActor* Target)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VenomComponent.ApplyVenomToTarget");

	UVenomComponent_ApplyVenomToTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVenomComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(VenomSource, UClass);
}

void UVenomComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(VenomSource);
}

void UVenomStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UVenomStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UVerticalPulleyAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UVerticalPulleyAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

// DelegateFunction Athena.VisualHealthResponseComponent.MeshChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            NumGate                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVisualHealthResponseComponent::MeshChangeDelegate__DelegateSignature(int NumGate)
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.VisualHealthResponseComponent.MeshChangeDelegate__DelegateSignature");

	UVisualHealthResponseComponent_MeshChangeDelegate__DelegateSignature_Params params;
	params.NumGate = NumGate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VisualHealthResponseComponent.GetMaterialInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UMaterialInstanceDynamic*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class UMaterialInstanceDynamic*> UVisualHealthResponseComponent::GetMaterialInstances()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VisualHealthResponseComponent.GetMaterialInstances");

	UVisualHealthResponseComponent_GetMaterialInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Athena.VisualHealthResponseComponent.GateChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            NumGate                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsNewDamage                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UVisualHealthResponseComponent::GateChangeDelegate__DelegateSignature(int NumGate, bool IsNewDamage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("DelegateFunction Athena.VisualHealthResponseComponent.GateChangeDelegate__DelegateSignature");

	UVisualHealthResponseComponent_GateChangeDelegate__DelegateSignature_Params params;
	params.NumGate = NumGate;
	params.IsNewDamage = IsNewDamage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVisualHealthResponseComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ActiveVfx, UParticleSystemComponent);
	READ_PTR_FULL(VisualHealthResponseData, UVisualHealthResponseDataAsset);
}

void UVisualHealthResponseComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ActiveVfx);
	DELE_PTR_FULL(VisualHealthResponseData);
}

void UVisualHealthResponseDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVisualHealthResponseDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVoiceChatComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UVoiceChatComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void UVomitBoutData::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVomitBoutData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.VomitComponent.VomitActivate
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   VomitType                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Duration                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVomitComponent::VomitActivate(const struct FName& VomitType, float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.VomitActivate");

	UVomitComponent_VomitActivate_Params params;
	params.VomitType = VomitType;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VomitComponent.OnOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UVomitComponent::OnOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.OnOverlapBegin");

	UVomitComponent_OnOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VomitComponent.Multicast_VomitImpact
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FHitResult              Result                         (ConstParm, Parm, ReferenceParm, ContainsInstancedReference)
void UVomitComponent::Multicast_VomitImpact(const struct FHitResult& Result)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.Multicast_VomitImpact");

	UVomitComponent_Multicast_VomitImpact_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VomitComponent.Multicast_VomitActivate
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName                   VomitType                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVomitComponent::Multicast_VomitActivate(const struct FName& VomitType, float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.Multicast_VomitActivate");

	UVomitComponent_Multicast_VomitActivate_Params params;
	params.VomitType = VomitType;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VomitComponent.IsFaceCoveredWithVomit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UVomitComponent::IsFaceCoveredWithVomit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.IsFaceCoveredWithVomit");

	UVomitComponent_IsFaceCoveredWithVomit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VomitComponent.DidVomitVFXSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UVomitComponent::DidVomitVFXSpawn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.DidVomitVFXSpawn");

	UVomitComponent_DidVomitVFXSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VomitComponent.Client_VomitHit
// (Net, NetReliable, Native, Event, Public, NetClient)
void UVomitComponent::Client_VomitHit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VomitComponent.Client_VomitHit");

	UVomitComponent_Client_VomitHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UVomitComponent::AfterRead()
{
	UCapsuleComponent::AfterRead();

	READ_PTR_FULL(BoutData, UVomitBoutData);
}

void UVomitComponent::BeforeDelete()
{
	UCapsuleComponent::BeforeDelete();

	DELE_PTR_FULL(BoutData);
}

void UVomitStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UVomitStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.VotableObjectView.OnVoteRemoved
// (Event, Public, HasOutParms, BlueprintEvent)
void AVotableObjectView::OnVoteRemoved()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableObjectView.OnVoteRemoved");

	AVotableObjectView_OnVoteRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VotableObjectView.OnVoteCompleted
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           IsWinner                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AVotableObjectView::OnVoteCompleted(bool IsWinner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableObjectView.OnVoteCompleted");

	AVotableObjectView_OnVoteCompleted_Params params;
	params.IsWinner = IsWinner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VotableObjectView.OnVoteAdded
// (Event, Public, HasOutParms, BlueprintEvent)
void AVotableObjectView::OnVoteAdded()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableObjectView.OnVoteAdded");

	AVotableObjectView_OnVoteAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VotableObjectView.GetVoter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVotableObjectView::GetVoter(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableObjectView.GetVoter");

	AVotableObjectView_GetVoter_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVotableObjectView::AfterRead()
{
	AInteractableBase::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(VotableObject, UVotableBaseComponent);
}

void AVotableObjectView::BeforeDelete()
{
	AInteractableBase::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(VotableObject);
}

void UVotableBaseComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UVotableBaseComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.VotableWithSessionComponent.SetVoteDataIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InVoteDataIndex                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UVotableWithSessionComponent::SetVoteDataIndex(int InVoteDataIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableWithSessionComponent.SetVoteDataIndex");

	UVotableWithSessionComponent_SetVoteDataIndex_Params params;
	params.InVoteDataIndex = InVoteDataIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VotableWithSessionComponent.IsSessionLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UVotableWithSessionComponent::IsSessionLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableWithSessionComponent.IsSessionLocked");

	UVotableWithSessionComponent_IsSessionLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.VotableWithSessionComponent.GetVoteDataIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UVotableWithSessionComponent::GetVoteDataIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VotableWithSessionComponent.GetVoteDataIndex");

	UVotableWithSessionComponent_GetVoteDataIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UVotableWithSessionComponent::AfterRead()
{
	UVotableBaseComponent::AfterRead();

	READ_PTR_FULL(VoteActionInputId, UClass);
	READ_PTR_FULL(VoteActionReleaseInputId, UClass);
}

void UVotableWithSessionComponent::BeforeDelete()
{
	UVotableBaseComponent::BeforeDelete();

	DELE_PTR_FULL(VoteActionInputId);
	DELE_PTR_FULL(VoteActionReleaseInputId);
}

void UVotableVoyageProposalComponent::AfterRead()
{
	UVotableWithSessionComponent::AfterRead();

	READ_PTR_FULL(VotableMeshComponent, UStaticMeshComponent);
}

void UVotableVoyageProposalComponent::BeforeDelete()
{
	UVotableWithSessionComponent::BeforeDelete();

	DELE_PTR_FULL(VotableMeshComponent);
}

void UCancelVoyageVotableComponent::AfterRead()
{
	UVotableVoyageProposalComponent::AfterRead();

}

void UCancelVoyageVotableComponent::BeforeDelete()
{
	UVotableVoyageProposalComponent::BeforeDelete();

}

void UVoteOnVoyageVotableComponent::AfterRead()
{
	UVotableVoyageProposalComponent::AfterRead();

	READ_PTR_FULL(WithdrawActionInputId, UClass);
	READ_PTR_FULL(WithdrawActionReleasedInputId, UClass);
}

void UVoteOnVoyageVotableComponent::BeforeDelete()
{
	UVotableVoyageProposalComponent::BeforeDelete();

	DELE_PTR_FULL(WithdrawActionInputId);
	DELE_PTR_FULL(WithdrawActionReleasedInputId);
}

void UVoyageDescList::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVoyageDescList::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.VoyageGeneratorSim.SimulateVoyageChain
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int                            Count                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Seed                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            MaxHistory                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 StartingLocation               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TArray<struct FIsland>         Islands                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UVoyageRecipeDataAsset*  Recipe                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVoyageGeneratorSim::SimulateVoyageChain(int Count, int Seed, int MaxHistory, const struct FVector& StartingLocation, TArray<struct FIsland> Islands, class UVoyageRecipeDataAsset* Recipe)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSim.SimulateVoyageChain");

	AVoyageGeneratorSim_SimulateVoyageChain_Params params;
	params.Count = Count;
	params.Seed = Seed;
	params.MaxHistory = MaxHistory;
	params.StartingLocation = StartingLocation;
	params.Islands = Islands;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VoyageGeneratorSim.ProcessSimulatedVoyage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UVoyageGeneratorSimResult* Voyage                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AVoyageGeneratorSim::ProcessSimulatedVoyage(class UVoyageGeneratorSimResult* Voyage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSim.ProcessSimulatedVoyage");

	AVoyageGeneratorSim_ProcessSimulatedVoyage_Params params;
	params.Voyage = Voyage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VoyageGeneratorSim.OnEndSimulationRun
// (Event, Protected, BlueprintEvent)
void AVoyageGeneratorSim::OnEndSimulationRun()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSim.OnEndSimulationRun");

	AVoyageGeneratorSim_OnEndSimulationRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.VoyageGeneratorSim.OnBeginSimulationRun
// (Event, Protected, BlueprintEvent)
void AVoyageGeneratorSim::OnBeginSimulationRun()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.VoyageGeneratorSim.OnBeginSimulationRun");

	AVoyageGeneratorSim_OnBeginSimulationRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AVoyageGeneratorSim::AfterRead()
{
	AActor::AfterRead();

}

void AVoyageGeneratorSim::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UInterpolatingMountpointComponent::AfterRead()
{
	UMountpointComponent::AfterRead();

}

void UInterpolatingMountpointComponent::BeforeDelete()
{
	UMountpointComponent::BeforeDelete();

}

void UProjectileCooldownServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProjectileCooldownServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ProjectileCooldownService.SetValidationEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InIsValidationEnabled          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AProjectileCooldownService::SetValidationEnabled(bool InIsValidationEnabled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileCooldownService.SetValidationEnabled");

	AProjectileCooldownService_SetValidationEnabled_Params params;
	params.InIsValidationEnabled = InIsValidationEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AProjectileCooldownService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ProjectileCooldownSettings, UProjectileCooldownServiceSettings);
}

void AProjectileCooldownService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ProjectileCooldownSettings);
}

void UProjectileCooldownServiceSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UProjectileCooldownServiceSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UProjectileTraceHitVolumeProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProjectileTraceHitVolumeProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UImpactProjectileId::AfterRead()
{
	UObject::AfterRead();

}

void UImpactProjectileId::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UImpactMeleeAttackId::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactMeleeAttackId::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UMeleeAttackDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DamagerType, UClass);
	READ_PTR_FULL(ImpactId, UClass);
	READ_PTR_FULL(AttackerHitLandedCameraShake, UClass);
	READ_PTR_FULL(AttackerHitLandedForceFeedbackEffect, UForceFeedbackEffect);
	READ_PTR_FULL(DefenderHitReceivedCameraShake, UClass);
	READ_PTR_FULL(DefenderHitReceivedForceFeedbackEffect, UForceFeedbackEffect);
}

void UMeleeAttackDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DamagerType);
	DELE_PTR_FULL(ImpactId);
	DELE_PTR_FULL(AttackerHitLandedCameraShake);
	DELE_PTR_FULL(AttackerHitLandedForceFeedbackEffect);
	DELE_PTR_FULL(DefenderHitReceivedCameraShake);
	DELE_PTR_FULL(DefenderHitReceivedForceFeedbackEffect);
}

void UAlliancePennantAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAlliancePennantAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAllianceServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAllianceServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIsTargetAllianceMemberStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsTargetAllianceMemberStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UPlayerNameDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPlayerNameDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPlayerNameRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerNameRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerNameServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerNameServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerNameService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(PlayerNameDataAsset, UPlayerNameDataAsset);
}

void UPlayerNameService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(PlayerNameDataAsset);
}

void UAthenaAnimationServerData::AfterRead()
{
	UAnimationServerData::AfterRead();

}

void UAthenaAnimationServerData::BeforeDelete()
{
	UAnimationServerData::BeforeDelete();

}

void UAthenaAnimationDeathDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SwimmingSurfaceDeath, UAnimSequence);
	READ_PTR_FULL(LocomotionDeath, UAnimSequence);
	READ_PTR_FULL(DrowningDeath, UAnimSequence);
	READ_PTR_FULL(DrowningDeathBS, UBlendSpace1D);
	READ_PTR_FULL(RevivingStateId, UClass);
	READ_PTR_FULL(DeadStateId, UClass);
}

void UAthenaAnimationDeathDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SwimmingSurfaceDeath);
	DELE_PTR_FULL(LocomotionDeath);
	DELE_PTR_FULL(DrowningDeath);
	DELE_PTR_FULL(DrowningDeathBS);
	DELE_PTR_FULL(RevivingStateId);
	DELE_PTR_FULL(DeadStateId);
}

void UAthenaAnimationWaterSlideDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Into, UAnimSequence);
	READ_PTR_FULL(Action, UAnimSequence);
	READ_PTR_FULL(Outof, UAnimSequence);
}

void UAthenaAnimationWaterSlideDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Into);
	DELE_PTR_FULL(Action);
	DELE_PTR_FULL(Outof);
}

void UAthenaAnimationThirdPersonAnimationData::AfterRead()
{
	UAthenaAnimationData::AfterRead();

	READ_PTR_FULL(PulleyAnimationsDataAsset, UAthenaAnimationPulleyDataAsset);
	READ_PTR_FULL(EmoteListingAsset, UAthenaAnimationEmoteListingAsset);
	READ_PTR_FULL(KeyedInstrumentDataAsset, UAthenaAnimationKeyedInstrumentDataAsset);
}

void UAthenaAnimationThirdPersonAnimationData::BeforeDelete()
{
	UAthenaAnimationData::BeforeDelete();

	DELE_PTR_FULL(PulleyAnimationsDataAsset);
	DELE_PTR_FULL(EmoteListingAsset);
	DELE_PTR_FULL(KeyedInstrumentDataAsset);
}

// Function Athena.AtmosphericPressureZoneInterface.GetPressureZoneParameters
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FAtmosphericPressureZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAtmosphericPressureZoneParametersAndLocation UAtmosphericPressureZoneInterface::GetPressureZoneParameters()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AtmosphericPressureZoneInterface.GetPressureZoneParameters");

	UAtmosphericPressureZoneInterface_GetPressureZoneParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAtmosphericPressureZoneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAtmosphericPressureZoneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.AtmosphericPressureServiceInterface.UnregisterAtmosphericPressureZoneFromService
// (Native, Public, BlueprintCallable)
void UAtmosphericPressureServiceInterface::UnregisterAtmosphericPressureZoneFromService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AtmosphericPressureServiceInterface.UnregisterAtmosphericPressureZoneFromService");

	UAtmosphericPressureServiceInterface_UnregisterAtmosphericPressureZoneFromService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AtmosphericPressureServiceInterface.RegisterAtmosphericPressureZoneWithService
// (Native, Public, BlueprintCallable)
void UAtmosphericPressureServiceInterface::RegisterAtmosphericPressureZoneWithService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AtmosphericPressureServiceInterface.RegisterAtmosphericPressureZoneWithService");

	UAtmosphericPressureServiceInterface_RegisterAtmosphericPressureZoneWithService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.AtmosphericPressureServiceInterface.GetNumberOfAtmosphericPressureZones
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UAtmosphericPressureServiceInterface::GetNumberOfAtmosphericPressureZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AtmosphericPressureServiceInterface.GetNumberOfAtmosphericPressureZones");

	UAtmosphericPressureServiceInterface_GetNumberOfAtmosphericPressureZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AtmosphericPressureServiceInterface.GetAtmosphericPressureZone
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            PressureZoneIndex              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAtmosphericPressureZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FAtmosphericPressureZoneParametersAndLocation UAtmosphericPressureServiceInterface::GetAtmosphericPressureZone(int PressureZoneIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AtmosphericPressureServiceInterface.GetAtmosphericPressureZone");

	UAtmosphericPressureServiceInterface_GetAtmosphericPressureZone_Params params;
	params.PressureZoneIndex = PressureZoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AtmosphericPressureServiceInterface.GetAllAtmosphericPressureZones
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FAtmosphericPressureZoneParametersAndLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FAtmosphericPressureZoneParametersAndLocation> UAtmosphericPressureServiceInterface::GetAllAtmosphericPressureZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AtmosphericPressureServiceInterface.GetAllAtmosphericPressureZones");

	UAtmosphericPressureServiceInterface_GetAllAtmosphericPressureZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAtmosphericPressureServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAtmosphericPressureServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.GameplayEventSignal.UpdateMaterialVisibility
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor            SignalVisibilityLerpValue      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AGameplayEventSignal::UpdateMaterialVisibility(const struct FLinearColor& SignalVisibilityLerpValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameplayEventSignal.UpdateMaterialVisibility");

	AGameplayEventSignal_UpdateMaterialVisibility_Params params;
	params.SignalVisibilityLerpValue = SignalVisibilityLerpValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.GameplayEventSignal.DeactivateAndDestroy
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
void AGameplayEventSignal::DeactivateAndDestroy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameplayEventSignal.DeactivateAndDestroy");

	AGameplayEventSignal_DeactivateAndDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AGameplayEventSignal::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ProxyClass, UClass);
	READ_PTR_FULL(AtmosphericPressureZoneComponent, UAtmosphericPressureZoneComponent);
	READ_PTR_FULL(LightingZoneComponent, ULightingZoneComponent);
	READ_PTR_FULL(RotateMeshToActorComponent, URotateMeshToActorComponent);
	READ_PTR_FULL(SignalMesh, UMeshComponent);
	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(SignalMaterial, UMaterialInstanceDynamic);
}

void AGameplayEventSignal::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ProxyClass);
	DELE_PTR_FULL(AtmosphericPressureZoneComponent);
	DELE_PTR_FULL(LightingZoneComponent);
	DELE_PTR_FULL(RotateMeshToActorComponent);
	DELE_PTR_FULL(SignalMesh);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(SignalMaterial);
}

void AGameplayEventSignal_StaticMesh::AfterRead()
{
	AGameplayEventSignal::AfterRead();

}

void AGameplayEventSignal_StaticMesh::BeforeDelete()
{
	AGameplayEventSignal::BeforeDelete();

}

void AGameplayEventSignal_SkinnedMesh::AfterRead()
{
	AGameplayEventSignal::AfterRead();

}

void AGameplayEventSignal_SkinnedMesh::BeforeDelete()
{
	AGameplayEventSignal::BeforeDelete();

}

void UGameEventType::AfterRead()
{
	UObject::AfterRead();

}

void UGameEventType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UGameEventSchedulerSettingsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UGameEventSchedulerSettingsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCustomizableGameEventSchedulerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCustomizableGameEventSchedulerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCustomizableGameEventServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCustomizableGameEventServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UGameEventSchedulerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGameEventSchedulerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCustomizableGameEventService::AfterRead()
{
	UObject::AfterRead();

}

void UCustomizableGameEventService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.EncounterStateInterface.OnSignalSpawnedForEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Encounter                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnSignalSpawnedForEncounter(class AActor* Encounter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnSignalSpawnedForEncounter");

	UEncounterStateInterface_OnSignalSpawnedForEncounter_Params params;
	params.Encounter = Encounter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnShipLeftEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnShipLeftEncounter(class AActor* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnShipLeftEncounter");

	UEncounterStateInterface_OnShipLeftEncounter_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnShipEnteredOuterRadiusEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnShipEnteredOuterRadiusEncounter(class AActor* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnShipEnteredOuterRadiusEncounter");

	UEncounterStateInterface_OnShipEnteredOuterRadiusEncounter_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnShipEnteredInnerRadiusEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnShipEnteredInnerRadiusEncounter(class AActor* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnShipEnteredInnerRadiusEncounter");

	UEncounterStateInterface_OnShipEnteredInnerRadiusEncounter_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnShipEnteredEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnShipEnteredEncounter(class AActor* Ship)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnShipEnteredEncounter");

	UEncounterStateInterface_OnShipEnteredEncounter_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnPlayerLeftEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnPlayerLeftEncounter(class AActor* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnPlayerLeftEncounter");

	UEncounterStateInterface_OnPlayerLeftEncounter_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnPlayerEnteredEncounter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnPlayerEnteredEncounter(class AActor* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnPlayerEnteredEncounter");

	UEncounterStateInterface_OnPlayerEnteredEncounter_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnEncounterActorTargetedActor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Ship                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  TargetedActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnEncounterActorTargetedActor(class AActor* Ship, class AActor* TargetedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnEncounterActorTargetedActor");

	UEncounterStateInterface_OnEncounterActorTargetedActor_Params params;
	params.Ship = Ship;
	params.TargetedActor = TargetedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnEncounterActorSpawnedActor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  SpawningActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  SpawnedActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnEncounterActorSpawnedActor(class AActor* SpawningActor, class AActor* SpawnedActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnEncounterActorSpawnedActor");

	UEncounterStateInterface_OnEncounterActorSpawnedActor_Params params;
	params.SpawningActor = SpawningActor;
	params.SpawnedActor = SpawnedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnEncounterActorRemoved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EEncounterActorRemovedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnEncounterActorRemoved(class AActor* Actor, TEnumAsByte<Athena_EEncounterActorRemovedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnEncounterActorRemoved");

	UEncounterStateInterface_OnEncounterActorRemoved_Params params;
	params.Actor = Actor;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnEncounterActorKilled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  KilledByActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnEncounterActorKilled(class AActor* Actor, class AActor* KilledByActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnEncounterActorKilled");

	UEncounterStateInterface_OnEncounterActorKilled_Params params;
	params.Actor = Actor;
	params.KilledByActor = KilledByActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnEncounterActorDamaged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  DamagedByActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnEncounterActorDamaged(class AActor* Actor, class AActor* DamagedByActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnEncounterActorDamaged");

	UEncounterStateInterface_OnEncounterActorDamaged_Params params;
	params.Actor = Actor;
	params.DamagedByActor = DamagedByActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EncounterStateInterface.OnEncounterActorAdded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterStateInterface::OnEncounterActorAdded(class AActor* Player)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterStateInterface.OnEncounterActorAdded");

	UEncounterStateInterface_OnEncounterActorAdded_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEncounterStateInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEncounterStateInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UGameEventInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGameEventInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.GameEventSchedulerService.Debug_ClearRegistrations
// (Final, Native, Public, BlueprintCallable)
void UGameEventSchedulerService::Debug_ClearRegistrations()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GameEventSchedulerService.Debug_ClearRegistrations");

	UGameEventSchedulerService_Debug_ClearRegistrations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UGameEventSchedulerService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Settings, UGameEventSchedulerSettingsAsset);
	READ_PTR_FULL(World, UWorld);
}

void UGameEventSchedulerService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Settings);
	DELE_PTR_FULL(World);
}

void UCustomizableGameEventSchedulerService::AfterRead()
{
	UGameEventSchedulerService::AfterRead();

}

void UCustomizableGameEventSchedulerService::BeforeDelete()
{
	UGameEventSchedulerService::BeforeDelete();

}

void UGameEventSchedulerSettingsInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGameEventSchedulerSettingsInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAggressiveGhostShipsEncounterGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UAggressiveGhostShipsEncounterGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void UAIShipBattleGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UAIShipBattleGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void UAIShipPassiveGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UAIShipPassiveGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void UAIShipAggressiveGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UAIShipAggressiveGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void UAshenLordEncounterGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UAshenLordEncounterGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void UKrakenGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UKrakenGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void USkellyFortGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void USkellyFortGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void ULegendarySkellyFortGameEventType::AfterRead()
{
	USkellyFortGameEventType::AfterRead();

}

void ULegendarySkellyFortGameEventType::BeforeDelete()
{
	USkellyFortGameEventType::BeforeDelete();

}

void UFortOfTheDamnedGameEventType::AfterRead()
{
	USkellyFortGameEventType::AfterRead();

}

void UFortOfTheDamnedGameEventType::BeforeDelete()
{
	USkellyFortGameEventType::BeforeDelete();

}

void UTinySharkGameEventType::AfterRead()
{
	UGameEventType::AfterRead();

}

void UTinySharkGameEventType::BeforeDelete()
{
	UGameEventType::BeforeDelete();

}

void UCompassSpinComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UCompassSpinComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UNavigationSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UNavigationSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UGameSessionIdProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGameSessionIdProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDiggingSfxProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDiggingSfxProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemDiggingBaseConfig::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(OnDigTrigger, UClass);
}

void UItemDiggingBaseConfig::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(OnDigTrigger);
}

void UItemDiggingAnimationConfig::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(PitchRollAngleRandomCurve, UCurveFloat);
	READ_PTR_FULL(PitchRollRattleCurveWhileMoving, UCurveFloat);
}

void UItemDiggingAnimationConfig::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(PitchRollAngleRandomCurve);
	DELE_PTR_FULL(PitchRollRattleCurveWhileMoving);
}

void ABountyRewardItemProxy::AfterRead()
{
	ABootyProxy::AfterRead();

	READ_PTR_FULL(AmbiencePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(AmbiencePlay, UWwiseEvent);
	READ_PTR_FULL(AmbienceStop, UWwiseEvent);
}

void ABountyRewardItemProxy::BeforeDelete()
{
	ABootyProxy::BeforeDelete();

	DELE_PTR_FULL(AmbiencePool);
	DELE_PTR_FULL(AmbiencePlay);
	DELE_PTR_FULL(AmbienceStop);
}

void ASkeletalMeshFloatingItemProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

}

void ASkeletalMeshFloatingItemProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

}

void AStaticMeshFloatingItemProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

}

void AStaticMeshFloatingItemProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

}

void UConsumableWieldableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UConsumableWieldableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UGiveItemUponConsumptionComponent::AfterRead()
{
	UConsumableWieldableComponent::AfterRead();

	READ_PTR_FULL(ItemToGive, UClass);
}

void UGiveItemUponConsumptionComponent::BeforeDelete()
{
	UConsumableWieldableComponent::BeforeDelete();

	DELE_PTR_FULL(ItemToGive);
}

// Function Athena.GoldMoundItemProxy.OnRep_DelayedDestroyStarted
// (Final, Native, Private)
void AGoldMoundItemProxy::OnRep_DelayedDestroyStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.GoldMoundItemProxy.OnRep_DelayedDestroyStarted");

	AGoldMoundItemProxy_OnRep_DelayedDestroyStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AGoldMoundItemProxy::AfterRead()
{
	AItemProxy::AfterRead();

	READ_PTR_FULL(OnMoundInteractStartLoopingSfx, UWwiseEvent);
	READ_PTR_FULL(OnMoundInteractStopLoopingSfx, UWwiseEvent);
	READ_PTR_FULL(OnMoundCancelPickupSfx, UWwiseEvent);
	READ_PTR_FULL(OnMoundPickupCompleteSfx, UWwiseEvent);
	READ_PTR_FULL(GoldMoundSfxPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(AmbientVfx, UObject);
	READ_PTR_FULL(PickupVfx, UObject);
	READ_PTR_FULL(AmbientParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(PickupParticleSystem, UParticleSystemComponent);
}

void AGoldMoundItemProxy::BeforeDelete()
{
	AItemProxy::BeforeDelete();

	DELE_PTR_FULL(OnMoundInteractStartLoopingSfx);
	DELE_PTR_FULL(OnMoundInteractStopLoopingSfx);
	DELE_PTR_FULL(OnMoundCancelPickupSfx);
	DELE_PTR_FULL(OnMoundPickupCompleteSfx);
	DELE_PTR_FULL(GoldMoundSfxPool);
	DELE_PTR_FULL(AmbientVfx);
	DELE_PTR_FULL(PickupVfx);
	DELE_PTR_FULL(AmbientParticleSystem);
	DELE_PTR_FULL(PickupParticleSystem);
}

void UIsBootyItemSpawnSourceStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsBootyItemSpawnSourceStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UIsItemOwnedStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsItemOwnedStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UIsWieldingBootyTypeStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsWieldingBootyTypeStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UItemFirstDroppedByMeOnMyShipConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UItemFirstDroppedByMeOnMyShipConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UItemFirstDroppedByMeOnOtherShipConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UItemFirstDroppedByMeOnOtherShipConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UItemFirstDroppedOnShipConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UItemFirstDroppedOnShipConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UItemProxyShipTrackerComponentDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UItemProxyShipTrackerComponentDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.MechanismMaterialMap.ApplyMaterialOverridesForMesh
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  MaterialGroup                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FAthenaAsyncAssetLoaderWrapper AssetLoader                    (Parm, OutParm, ReferenceParm)
void UMechanismMaterialMap::ApplyMaterialOverridesForMesh(class UMeshComponent* Mesh, class UClass* MaterialGroup, struct FAthenaAsyncAssetLoaderWrapper* AssetLoader)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismMaterialMap.ApplyMaterialOverridesForMesh");

	UMechanismMaterialMap_ApplyMaterialOverridesForMesh_Params params;
	params.Mesh = Mesh;
	params.MaterialGroup = MaterialGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AssetLoader != nullptr)
		*AssetLoader = params.AssetLoader;

}


// Function Athena.MechanismMaterialMap.ApplyMaterialOverridesForActor
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  MaterialGroup                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FAthenaAsyncAssetLoaderWrapper AssetLoader                    (Parm, OutParm, ReferenceParm)
void UMechanismMaterialMap::ApplyMaterialOverridesForActor(class AActor* Actor, class UClass* MaterialGroup, struct FAthenaAsyncAssetLoaderWrapper* AssetLoader)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismMaterialMap.ApplyMaterialOverridesForActor");

	UMechanismMaterialMap_ApplyMaterialOverridesForActor_Params params;
	params.Actor = Actor;
	params.MaterialGroup = MaterialGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AssetLoader != nullptr)
		*AssetLoader = params.AssetLoader;

}


void UMechanismMaterialMap::AfterRead()
{
	UObject::AfterRead();

}

void UMechanismMaterialMap::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.AnimatedMechanismInterface.IsAnimating
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAnimatedMechanismInterface::IsAnimating()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismInterface.IsAnimating");

	UAnimatedMechanismInterface_IsAnimating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AnimatedMechanismInterface.GetTickCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EAnimatedMechanismTickCost> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EAnimatedMechanismTickCost> UAnimatedMechanismInterface::GetTickCost()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismInterface.GetTickCost");

	UAnimatedMechanismInterface_GetTickCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AnimatedMechanismInterface.GetSecondsSinceAnimationStarted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAnimatedMechanismInterface::GetSecondsSinceAnimationStarted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AnimatedMechanismInterface.GetSecondsSinceAnimationStarted");

	UAnimatedMechanismInterface_GetSecondsSinceAnimationStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAnimatedMechanismInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAnimatedMechanismInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMechanismAudioEmitterInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismAudioEmitterInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MechanismInteractionInterface.AddComplexCollisionShape
// (Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     InCollisionShape               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismInteractionInterface::AddComplexCollisionShape(class UPrimitiveComponent* InCollisionShape)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismInteractionInterface.AddComplexCollisionShape");

	UMechanismInteractionInterface_AddComplexCollisionShape_Params params;
	params.InCollisionShape = InCollisionShape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismInteractionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismInteractionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UBeachNPCSpawnFlowLocationComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UBeachNPCSpawnFlowLocationComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void UGrantPagesStepFromBundleDesc::AfterRead()
{
	UGrantPagesStepDesc::AfterRead();

}

void UGrantPagesStepFromBundleDesc::BeforeDelete()
{
	UGrantPagesStepDesc::BeforeDelete();

}

void UGreatFallStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UGreatFallStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UGrenadeDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UGrenadeDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UGrenadeSetupDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PitchToProjectileSpeedCurve, UCurveFloat);
	READ_PTR_FULL(ProjectileSpeedToAngleVarianceCurve, UCurveFloat);
	READ_PTR_FULL(ExtraPitchCurve, UCurveFloat);
}

void UGrenadeSetupDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PitchToProjectileSpeedCurve);
	DELE_PTR_FULL(ProjectileSpeedToAngleVarianceCurve);
	DELE_PTR_FULL(ExtraPitchCurve);
}

void UGrenadeSplashDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UGrenadeSplashDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UGuildShip::AfterRead()
{
	UShipType::AfterRead();

}

void UGuildShip::BeforeDelete()
{
	UShipType::BeforeDelete();

}

// Function Athena.HalfSkellyInteractableObject.OnInteract_Client_Implementation
// (Event, Protected, BlueprintEvent)
void AHalfSkellyInteractableObject::OnInteract_Client_Implementation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HalfSkellyInteractableObject.OnInteract_Client_Implementation");

	AHalfSkellyInteractableObject_OnInteract_Client_Implementation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHalfSkellyInteractableObject::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(SkeletalMeshComponent, USkeletalMeshComponent);
}

void AHalfSkellyInteractableObject::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(SkeletalMeshComponent);
}

// Function Athena.HandHatch.SetHandsMeshesVisiblity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsVisible                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AHandHatch::SetHandsMeshesVisiblity(bool IsVisible)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HandHatch.SetHandsMeshesVisiblity");

	AHandHatch_SetHandsMeshesVisiblity_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HandHatch.OnRep_IsHatchActive
// (Final, Native, Private)
void AHandHatch::OnRep_IsHatchActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HandHatch.OnRep_IsHatchActive");

	AHandHatch_OnRep_IsHatchActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HandHatch.MoveHandsMeshes
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           IsRetreat                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AHandHatch::MoveHandsMeshes(bool IsRetreat)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HandHatch.MoveHandsMeshes");

	AHandHatch_MoveHandsMeshes_Params params;
	params.IsRetreat = IsRetreat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHandHatch::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Mesh, UStaticMeshComponent);
	READ_PTR_FULL(GlowMesh, UStaticMeshComponent);
	READ_PTR_FULL(HatchLight, UPointLightComponent);
	READ_PTR_FULL(GlowDynamicMaterialInstance, UMaterialInstanceDynamic);
}

void AHandHatch::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Mesh);
	DELE_PTR_FULL(GlowMesh);
	DELE_PTR_FULL(HatchLight);
	DELE_PTR_FULL(GlowDynamicMaterialInstance);
}

// Function Athena.HandlesFunctionLibrary.NotEqual
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintableIntegerHandle A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBlueprintableIntegerHandle B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHandlesFunctionLibrary::STATIC_NotEqual(const struct FBlueprintableIntegerHandle& A, const struct FBlueprintableIntegerHandle& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HandlesFunctionLibrary.NotEqual");

	UHandlesFunctionLibrary_NotEqual_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HandlesFunctionLibrary.IsValid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintableIntegerHandle Handle                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHandlesFunctionLibrary::STATIC_IsValid(const struct FBlueprintableIntegerHandle& Handle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HandlesFunctionLibrary.IsValid");

	UHandlesFunctionLibrary_IsValid_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HandlesFunctionLibrary.Equal
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintableIntegerHandle A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBlueprintableIntegerHandle B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UHandlesFunctionLibrary::STATIC_Equal(const struct FBlueprintableIntegerHandle& A, const struct FBlueprintableIntegerHandle& B)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HandlesFunctionLibrary.Equal");

	UHandlesFunctionLibrary_Equal_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UHandlesFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UHandlesFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UHangerComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UHangerComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void UHarpoonDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UHarpoonDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void UHarpoonFireAndRetractNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UHarpoonFireAndRetractNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UHarpoonReelInPressedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UHarpoonReelInPressedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UHarpoonReelInReleasedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UHarpoonReelInReleasedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UHarpoonReelLockPressedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UHarpoonReelLockPressedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UHarpoonReelLockReleasedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UHarpoonReelLockReleasedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.HarpoonLauncher.Server_RequestRetractHarpoon
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
void AHarpoonLauncher::Server_RequestRetractHarpoon()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Server_RequestRetractHarpoon");

	AHarpoonLauncher_Server_RequestRetractHarpoon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Server_RequestReleaseRetractable
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InPitch                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InYaw                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHarpoonLauncher::Server_RequestReleaseRetractable(float InPitch, float InYaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Server_RequestReleaseRetractable");

	AHarpoonLauncher_Server_RequestReleaseRetractable_Params params;
	params.InPitch = InPitch;
	params.InYaw = InYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Server_RequestReel
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<Athena_EHarpoonLauncherReelingState> InState                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHarpoonLauncher::Server_RequestReel(TEnumAsByte<Athena_EHarpoonLauncherReelingState> InState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Server_RequestReel");

	AHarpoonLauncher_Server_RequestReel_Params params;
	params.InState = InState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Server_RequestFire
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InPitch                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InYaw                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     ClientDesiredTargetComponent   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHarpoonLauncher::Server_RequestFire(float InPitch, float InYaw, class UPrimitiveComponent* ClientDesiredTargetComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Server_RequestFire");

	AHarpoonLauncher_Server_RequestFire_Params params;
	params.InPitch = InPitch;
	params.InYaw = InYaw;
	params.ClientDesiredTargetComponent = ClientDesiredTargetComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Server_RequestAim
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          InPitch                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InYaw                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHarpoonLauncher::Server_RequestAim(float InPitch, float InYaw)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Server_RequestAim");

	AHarpoonLauncher_Server_RequestAim_Params params;
	params.InPitch = InPitch;
	params.InYaw = InYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.ReactToDamage
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void AHarpoonLauncher::ReactToDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.ReactToDamage");

	AHarpoonLauncher_ReactToDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Multicast_PlayRetractFX
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// TEnumAsByte<Athena_EHarpoonLauncherRetractReason> InRetractReason                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHarpoonLauncher::Multicast_PlayRetractFX(TEnumAsByte<Athena_EHarpoonLauncherRetractReason> InRetractReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Multicast_PlayRetractFX");

	AHarpoonLauncher_Multicast_PlayRetractFX_Params params;
	params.InRetractReason = InRetractReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Multicast_PlayReleaseRetractableFX
// (Final, Net, Native, Event, NetMulticast, Private)
void AHarpoonLauncher::Multicast_PlayReleaseRetractableFX()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Multicast_PlayReleaseRetractableFX");

	AHarpoonLauncher_Multicast_PlayReleaseRetractableFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Multicast_NonOwningClientsPlayReleaseRetractableFX
// (Final, Net, Native, Event, NetMulticast, Private)
void AHarpoonLauncher::Multicast_NonOwningClientsPlayReleaseRetractableFX()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Multicast_NonOwningClientsPlayReleaseRetractableFX");

	AHarpoonLauncher_Multicast_NonOwningClientsPlayReleaseRetractableFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HarpoonLauncher.Multicast_NonOwningClientsPlayFireFX
// (Final, Net, Native, Event, NetMulticast, Private)
void AHarpoonLauncher::Multicast_NonOwningClientsPlayFireFX()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HarpoonLauncher.Multicast_NonOwningClientsPlayFireFX");

	AHarpoonLauncher_Multicast_NonOwningClientsPlayFireFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHarpoonLauncher::AfterRead()
{
	AControllableObject::AfterRead();

	READ_PTR_FULL(TetherChildActorComponent, UChildActorComponent);
	READ_PTR_FULL(BaseMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(MountMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(BarrelMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(LeftSpinnerMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(RightSpinnerMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(RopeSpoolMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(RetractorComponent, URetractorComponent);
	READ_PTR_FULL(ProjectileChildActorComponent, UChildActorComponent);
	READ_PTR_FULL(LauncherDamageComponent, UDamageableComponent);
	READ_PTR_FULL(TetherCustomisationComponent, UTetherCustomisationComponent);
	READ_PTR_FULL(AudioParams, UHarpoonLauncherAudioParamsDataAsset);
	READ_PTR_FULL(VFXParams, UHarpoonLauncherVFXDataAsset);
	READ_PTR_FULL(HarpoonImpactRumble, UForceFeedbackEffect);
	READ_PTR_FULL(HarpoonDockedRumble, UForceFeedbackEffect);
	READ_PTR_FULL(HarpoonDockedCameraShake, UClass);
	READ_PTR_FULL(EstimatedRetractionTimeScalarCurve, UCurveFloat);
	READ_PTR_FULL(StartControllingNotificationInputId, UClass);
}

void AHarpoonLauncher::BeforeDelete()
{
	AControllableObject::BeforeDelete();

	DELE_PTR_FULL(TetherChildActorComponent);
	DELE_PTR_FULL(BaseMeshComponent);
	DELE_PTR_FULL(MountMeshComponent);
	DELE_PTR_FULL(BarrelMeshComponent);
	DELE_PTR_FULL(LeftSpinnerMeshComponent);
	DELE_PTR_FULL(RightSpinnerMeshComponent);
	DELE_PTR_FULL(RopeSpoolMeshComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(RetractorComponent);
	DELE_PTR_FULL(ProjectileChildActorComponent);
	DELE_PTR_FULL(LauncherDamageComponent);
	DELE_PTR_FULL(TetherCustomisationComponent);
	DELE_PTR_FULL(AudioParams);
	DELE_PTR_FULL(VFXParams);
	DELE_PTR_FULL(HarpoonImpactRumble);
	DELE_PTR_FULL(HarpoonDockedRumble);
	DELE_PTR_FULL(HarpoonDockedCameraShake);
	DELE_PTR_FULL(EstimatedRetractionTimeScalarCurve);
	DELE_PTR_FULL(StartControllingNotificationInputId);
}

void UHarpoonLauncherAudioParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(StartMovePitchAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopMovePitchAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StartMoveYawAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StopMoveYawAudioLoopEvent, UWwiseEvent);
	READ_PTR_FULL(StoppedAimAtEdgeOfRangeAudioEvent, UWwiseEvent);
	READ_PTR_FULL(FireAudioEvent, UWwiseEvent);
	READ_PTR_FULL(RetractTriggeredAudioEvent, UWwiseEvent);
	READ_PTR_FULL(RetractFinishedAudioEvent, UWwiseEvent);
	READ_PTR_FULL(ReleaseRetractableAudioEvent, UWwiseEvent);
	READ_PTR_FULL(StartSpoolingAudioEvent, UWwiseEvent);
	READ_PTR_FULL(StopSpoolingAudioEvent, UWwiseEvent);
	READ_PTR_FULL(TetherExtentReachedAudioEvent, UWwiseEvent);
	READ_PTR_FULL(ReelLockInputPressedAudioEvent, UWwiseEvent);
	READ_PTR_FULL(ReelLockInputReleasedAudioEvent, UWwiseEvent);
	READ_PTR_FULL(AudioEmitterPool, UWwiseObjectPoolWrapper);
}

void UHarpoonLauncherAudioParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(StartMovePitchAudioLoopEvent);
	DELE_PTR_FULL(StopMovePitchAudioLoopEvent);
	DELE_PTR_FULL(StartMoveYawAudioLoopEvent);
	DELE_PTR_FULL(StopMoveYawAudioLoopEvent);
	DELE_PTR_FULL(StoppedAimAtEdgeOfRangeAudioEvent);
	DELE_PTR_FULL(FireAudioEvent);
	DELE_PTR_FULL(RetractTriggeredAudioEvent);
	DELE_PTR_FULL(RetractFinishedAudioEvent);
	DELE_PTR_FULL(ReleaseRetractableAudioEvent);
	DELE_PTR_FULL(StartSpoolingAudioEvent);
	DELE_PTR_FULL(StopSpoolingAudioEvent);
	DELE_PTR_FULL(TetherExtentReachedAudioEvent);
	DELE_PTR_FULL(ReelLockInputPressedAudioEvent);
	DELE_PTR_FULL(ReelLockInputReleasedAudioEvent);
	DELE_PTR_FULL(AudioEmitterPool);
}

void UHarpoonLauncherVFXDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(MuzzleFlashVfxFirstPerson, UObject);
	READ_PTR_FULL(MuzzleFlashVfxThirdPerson, UObject);
}

void UHarpoonLauncherVFXDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(MuzzleFlashVfxFirstPerson);
	DELE_PTR_FULL(MuzzleFlashVfxThirdPerson);
}

void UHasEmblemNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UHasEmblemNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UHasEntitlementStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UHasEntitlementStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UHealStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UHealStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.HealthTestFunctions.MakeDamageInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  From                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EHealthChangedReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDamageInstance         ReturnValue                    (Parm, OutParm, ReturnParm)
struct FDamageInstance UHealthTestFunctions::STATIC_MakeDamageInstance(float Amount, class AActor* From, TEnumAsByte<Athena_EHealthChangedReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.MakeDamageInstance");

	UHealthTestFunctions_MakeDamageInstance_Params params;
	params.Amount = Amount;
	params.From = From;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HealthTestFunctions.InvincibleEverythingMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_InvincibleEverythingMode(bool Enable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.InvincibleEverythingMode");

	UHealthTestFunctions_InvincibleEverythingMode_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_YetToBeInteractedWith
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_YetToBeInteractedWith(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_YetToBeInteractedWith");

	UHealthTestFunctions_EnableAdjustHealth_YetToBeInteractedWith_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_TavernPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_TavernPlayerCharacter(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_TavernPlayerCharacter");

	UHealthTestFunctions_EnableAdjustHealth_TavernPlayerCharacter_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_SkeletonShadowForm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_SkeletonShadowForm(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_SkeletonShadowForm");

	UHealthTestFunctions_EnableAdjustHealth_SkeletonShadowForm_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_ServerMigration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_ServerMigration(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_ServerMigration");

	UHealthTestFunctions_EnableAdjustHealth_ServerMigration_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_SecurelyStored
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_SecurelyStored(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_SecurelyStored");

	UHealthTestFunctions_EnableAdjustHealth_SecurelyStored_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_IsTeleporting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_IsTeleporting(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_IsTeleporting");

	UHealthTestFunctions_EnableAdjustHealth_IsTeleporting_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_IsInert
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_IsInert(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_IsInert");

	UHealthTestFunctions_EnableAdjustHealth_IsInert_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_Invincible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_Invincible(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_Invincible");

	UHealthTestFunctions_EnableAdjustHealth_Invincible_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.EnableAdjustHealth_Dead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_EnableAdjustHealth_Dead(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.EnableAdjustHealth_Dead");

	UHealthTestFunctions_EnableAdjustHealth_Dead_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_YetToBeInteractedWith
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_YetToBeInteractedWith(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_YetToBeInteractedWith");

	UHealthTestFunctions_DisableAdjustHealth_YetToBeInteractedWith_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_TavernPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_TavernPlayerCharacter(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_TavernPlayerCharacter");

	UHealthTestFunctions_DisableAdjustHealth_TavernPlayerCharacter_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_SkeletonShadowForm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_SkeletonShadowForm(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_SkeletonShadowForm");

	UHealthTestFunctions_DisableAdjustHealth_SkeletonShadowForm_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_ServerMigration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_ServerMigration(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_ServerMigration");

	UHealthTestFunctions_DisableAdjustHealth_ServerMigration_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_SecurelyStored
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_SecurelyStored(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_SecurelyStored");

	UHealthTestFunctions_DisableAdjustHealth_SecurelyStored_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_IsTeleporting
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_IsTeleporting(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_IsTeleporting");

	UHealthTestFunctions_DisableAdjustHealth_IsTeleporting_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_IsInert
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_IsInert(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_IsInert");

	UHealthTestFunctions_DisableAdjustHealth_IsInert_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_Invincible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_Invincible(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_Invincible");

	UHealthTestFunctions_DisableAdjustHealth_Invincible_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HealthTestFunctions.DisableAdjustHealth_Dead
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHealthComponent*        Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsStrict                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UHealthTestFunctions::STATIC_DisableAdjustHealth_Dead(class UHealthComponent* Component, bool IsStrict)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HealthTestFunctions.DisableAdjustHealth_Dead");

	UHealthTestFunctions_DisableAdjustHealth_Dead_Params params;
	params.Component = Component;
	params.IsStrict = IsStrict;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHealthTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UHealthTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.HideInObjectCompositeInputHandler.OnUseConcealingObjectNotificationRecieved
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UHideInObjectCompositeInputHandler::OnUseConcealingObjectNotificationRecieved()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HideInObjectCompositeInputHandler.OnUseConcealingObjectNotificationRecieved");

	UHideInObjectCompositeInputHandler_OnUseConcealingObjectNotificationRecieved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UHideInObjectCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UHideInObjectCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

// Function Athena.Hideout.OnPlayerInViewOfHideout
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              OverlapInfo                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AHideout::OnPlayerInViewOfHideout(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Hideout.OnPlayerInViewOfHideout");

	AHideout_OnPlayerInViewOfHideout_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHideout::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RevealTriggerVolume, UPrimitiveComponent);
}

void AHideout::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RevealTriggerVolume);
}

// Function Athena.HideoutEntrance.OnBeginOverlap
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AHideoutEntrance::OnBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HideoutEntrance.OnBeginOverlap");

	AHideoutEntrance_OnBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHideoutEntrance::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(TriggerZoneComponent, UBoxComponent);
}

void AHideoutEntrance::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(TriggerZoneComponent);
}

// Function Athena.HideoutExit.OnBeginOverlap
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AHideoutExit::OnBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HideoutExit.OnBeginOverlap");

	AHideoutExit_OnBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHideoutExit::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(TriggerZoneComponent, UBoxComponent);
}

void AHideoutExit::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(TriggerZoneComponent);
}

void UHideoutService::AfterRead()
{
	UObject::AfterRead();

}

void UHideoutService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UHighFlyAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UHighFlyAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UHitDetectionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHitDetectionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHitDetectionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UHitDetectionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UHitReactionDisableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHitReactionDisableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.HitReactionComponent.OnHitReactionImpact
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
void UHitReactionComponent::OnHitReactionImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HitReactionComponent.OnHitReactionImpact");

	UHitReactionComponent_OnHitReactionImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HitReactionComponent.Multicast_ProcessHitReaction
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FImpactDamageEvent      DamageEvent                    (ConstParm, Parm, ReferenceParm)
void UHitReactionComponent::Multicast_ProcessHitReaction(const struct FImpactDamageEvent& DamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HitReactionComponent.Multicast_ProcessHitReaction");

	UHitReactionComponent_Multicast_ProcessHitReaction_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHitReactionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UHitReactionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCharacterHitReactionComponent::AfterRead()
{
	UHitReactionComponent::AfterRead();

	READ_PTR_FULL(DamagerTypeToAnimTypeLayer, UCharacterHitReactionDamagerTypeToAnimTypeLayer);
}

void UCharacterHitReactionComponent::BeforeDelete()
{
	UHitReactionComponent::BeforeDelete();

	DELE_PTR_FULL(DamagerTypeToAnimTypeLayer);
}

// Function Athena.MockHitReactionComponent.SetServerAuthoritiveReactions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ServerAuthoritive              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UMockHitReactionComponent::SetServerAuthoritiveReactions(bool ServerAuthoritive)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockHitReactionComponent.SetServerAuthoritiveReactions");

	UMockHitReactionComponent_SetServerAuthoritiveReactions_Params params;
	params.ServerAuthoritive = ServerAuthoritive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MockHitReactionComponent.ResetMockHitReactionComponent
// (Final, Native, Public, BlueprintCallable)
void UMockHitReactionComponent::ResetMockHitReactionComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MockHitReactionComponent.ResetMockHitReactionComponent");

	UMockHitReactionComponent_ResetMockHitReactionComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMockHitReactionComponent::AfterRead()
{
	UHitReactionComponent::AfterRead();

}

void UMockHitReactionComponent::BeforeDelete()
{
	UHitReactionComponent::BeforeDelete();

}

void AMockHitReactionActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MockHitReactionComponent, UMockHitReactionComponent);
}

void AMockHitReactionActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MockHitReactionComponent);
}

// Function Athena.Hole.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<Athena_EHoleState> InState                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHole::OnStateChanged(TEnumAsByte<Athena_EHoleState> InState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Hole.OnStateChanged");

	AHole_OnStateChanged_Params params;
	params.InState = InState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Hole.OnRep_State
// (Final, Native, Private)
void AHole::OnRep_State()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Hole.OnRep_State");

	AHole_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AHole::AfterRead()
{
	AActor::AfterRead();

}

void AHole::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.ShovelHole.OnRep_ParallaxValue
// (Final, Native, Private)
void AShovelHole::OnRep_ParallaxValue()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShovelHole.OnRep_ParallaxValue");

	AShovelHole_OnRep_ParallaxValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShovelHole::AfterRead()
{
	AHole::AfterRead();

	READ_PTR_FULL(Decal, UDecalComponent);
	READ_PTR_FULL(ContainedActor, AActor);
	READ_PTR_FULL(DiggingComponent, UDiggingComponent);
	READ_PTR_FULL(StatTriggerForDiggingItems, UClass);
}

void AShovelHole::BeforeDelete()
{
	AHole::BeforeDelete();

	DELE_PTR_FULL(Decal);
	DELE_PTR_FULL(ContainedActor);
	DELE_PTR_FULL(DiggingComponent);
	DELE_PTR_FULL(StatTriggerForDiggingItems);
}

void UHoleDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UHoleDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UHoleServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHoleServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AHoleService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(HoleDataAsset, UHoleDataAsset);
}

void AHoleService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(HoleDataAsset);
}

void UHorizontalPulleyAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UHorizontalPulleyAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UHotFootStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UHotFootStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.HotTub.SetLiquidLevel
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                          Level                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHotTub::SetLiquidLevel(float Level)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.SetLiquidLevel");

	AHotTub_SetLiquidLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HotTub.GetWantedLiquidLevel
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AHotTub::GetWantedLiquidLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.GetWantedLiquidLevel");

	AHotTub_GetWantedLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HotTub.GetMaxLiquidCollectionAmount
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AHotTub::GetMaxLiquidCollectionAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.GetMaxLiquidCollectionAmount");

	AHotTub_GetMaxLiquidCollectionAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HotTub.GetLiquidLevel
// (RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AHotTub::GetLiquidLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.GetLiquidLevel");

	AHotTub_GetLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HotTub.ComponentEndOverlapCallBack
// (Final, Native, Private)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InOtherBodyIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AHotTub::ComponentEndOverlapCallBack(class AActor* InActor, class UPrimitiveComponent* InComponent, int InOtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.ComponentEndOverlapCallBack");

	AHotTub_ComponentEndOverlapCallBack_Params params;
	params.InActor = InActor;
	params.InComponent = InComponent;
	params.InOtherBodyIndex = InOtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HotTub.ComponentBeginOverlapCallBack
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InOtherBodyIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InFromSweep                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              InSweepResult                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AHotTub::ComponentBeginOverlapCallBack(class AActor* InActor, class UPrimitiveComponent* InComponent, int InOtherBodyIndex, bool InFromSweep, const struct FHitResult& InSweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.ComponentBeginOverlapCallBack");

	AHotTub_ComponentBeginOverlapCallBack_Params params;
	params.InActor = InActor;
	params.InComponent = InComponent;
	params.InOtherBodyIndex = InOtherBodyIndex;
	params.InFromSweep = InFromSweep;
	params.InSweepResult = InSweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HotTub.CollectLiquidAmount
// (RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                          DesiredAmount                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AHotTub::CollectLiquidAmount(float DesiredAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HotTub.CollectLiquidAmount");

	AHotTub_CollectLiquidAmount_Params params;
	params.DesiredAmount = DesiredAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AHotTub::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(CollisionComponent, UShapeComponent);
}

void AHotTub::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(CollisionComponent);
}

void AHull::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(HullDragDynamicsDesc, UBaseHullDragDynamicsDesc);
}

void AHull::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(HullDragDynamicsDesc);
}

// Function Athena.HullDamage.ShouldHitGenerateDecal
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 HitVelocity                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          HitStrength                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AHullDamage::ShouldHitGenerateDecal(const struct FVector& HitNormal, const struct FVector& HitVelocity, float HitStrength)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.ShouldHitGenerateDecal");

	AHullDamage_ShouldHitGenerateDecal_Params params;
	params.HitNormal = HitNormal;
	params.HitVelocity = HitVelocity;
	params.HitStrength = HitStrength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HullDamage.SetRepairPlankInstanceTransform
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class URepairableComponent*    InRepairable                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform              InPlankWorldTransform          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
void AHullDamage::SetRepairPlankInstanceTransform(class URepairableComponent* InRepairable, const struct FTransform& InPlankWorldTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.SetRepairPlankInstanceTransform");

	AHullDamage_SetRepairPlankInstanceTransform_Params params;
	params.InRepairable = InRepairable;
	params.InPlankWorldTransform = InPlankWorldTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HullDamage.SetAllowHullDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InAllowHullDamage              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AHullDamage::SetAllowHullDamage(bool InAllowHullDamage)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.SetAllowHullDamage");

	AHullDamage_SetAllowHullDamage_Params params;
	params.InAllowHullDamage = InAllowHullDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HullDamage.IsShipSinking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AHullDamage::IsShipSinking()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.IsShipSinking");

	AHullDamage_IsShipSinking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HullDamage.IsShipLeaking
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AHullDamage::IsShipLeaking()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.IsShipLeaking");

	AHullDamage_IsShipLeaking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HullDamage.GetDamageZonesByDamagerType
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  InDamagerType                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FVector                 InPosition                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// int                            InNumDamageZones               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ADamageZone*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class ADamageZone*> AHullDamage::GetDamageZonesByDamagerType(class UClass* InDamagerType, const struct FVector& InPosition, int InNumDamageZones)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.GetDamageZonesByDamagerType");

	AHullDamage_GetDamageZonesByDamagerType_Params params;
	params.InDamagerType = InDamagerType;
	params.InPosition = InPosition;
	params.InNumDamageZones = InNumDamageZones;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HullDamage.CalculateHitStrengthForImpact
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 HitNormal                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FVector                 HitVelocity                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          HitStrength                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float AHullDamage::CalculateHitStrengthForImpact(const struct FVector& HitNormal, const struct FVector& HitVelocity, float HitStrength)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage.CalculateHitStrengthForImpact");

	AHullDamage_CalculateHitStrengthForImpact_Params params;
	params.HitNormal = HitNormal;
	params.HitVelocity = HitVelocity;
	params.HitStrength = HitStrength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AHullDamage::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(RepairPlanksMesh, UMobileInstancedStaticMeshComponent);
	READ_PTR_FULL(ShipDamageComponent, UShipDamageableComponent);
	READ_PTR_FULL(InternalWater, AShipInternalWater);
}

void AHullDamage::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(RepairPlanksMesh);
	DELE_PTR_FULL(ShipDamageComponent);
	DELE_PTR_FULL(InternalWater);
}

// Function Athena.ShipLeakerComponent.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InDeltaTime                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EShipLeakerUpdateType> InUpdateTpe                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShipLeakerComponent::Update(float InDeltaTime, TEnumAsByte<Athena_EShipLeakerUpdateType> InUpdateTpe)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipLeakerComponent.Update");

	UShipLeakerComponent_Update_Params params;
	params.InDeltaTime = InDeltaTime;
	params.InUpdateTpe = InUpdateTpe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipLeakerComponent.SetShip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AShip*                   InShip                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShipLeakerComponent::SetShip(class AShip* InShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipLeakerComponent.SetShip");

	UShipLeakerComponent_SetShip_Params params;
	params.InShip = InShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipLeakerComponent.AddLeak
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              InWhere                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FShipLeakParams         InParams                       (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UShipLeakerComponent::AddLeak(const struct FTransform& InWhere, float InAmount, const struct FShipLeakParams& InParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipLeakerComponent.AddLeak");

	UShipLeakerComponent_AddLeak_Params params;
	params.InWhere = InWhere;
	params.InAmount = InAmount;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShipLeakerComponent::AfterRead()
{
	ULeakerComponent::AfterRead();

	READ_PTR_FULL(ParticleSystem_SplashOnInternalWaterSurface, UParticleSystem);
	READ_PTR_FULL(Ship, AShip);
	READ_PTR_FULL(InternalWater, AShipInternalWater);
}

void UShipLeakerComponent::BeforeDelete()
{
	ULeakerComponent::BeforeDelete();

	DELE_PTR_FULL(ParticleSystem_SplashOnInternalWaterSurface);
	DELE_PTR_FULL(Ship);
	DELE_PTR_FULL(InternalWater);
}

// Function Athena.HullDamage2.ReactToImpactOnServer
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      InImpact                       (ConstParm, Parm, OutParm, ReferenceParm)
void AHullDamage2::ReactToImpactOnServer(const struct FImpactDamageEvent& InImpact)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage2.ReactToImpactOnServer");

	AHullDamage2_ReactToImpactOnServer_Params params;
	params.InImpact = InImpact;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HullDamage2.OnRep_Hits
// (Final, Native, Private)
void AHullDamage2::OnRep_Hits()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage2.OnRep_Hits");

	AHullDamage2_OnRep_Hits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HullDamage2.Multicast_TriggerDamageFX
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// int                            InIndex                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           InPlaySFX                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           InPlayVFX                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AHullDamage2::Multicast_TriggerDamageFX(int InIndex, bool InPlaySFX, bool InPlayVFX)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage2.Multicast_TriggerDamageFX");

	AHullDamage2_Multicast_TriggerDamageFX_Params params;
	params.InIndex = InIndex;
	params.InPlaySFX = InPlaySFX;
	params.InPlayVFX = InPlayVFX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.HullDamage2.MakeInternalHoleDecal
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              InTransform                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UDecalComponent* AHullDamage2::MakeInternalHoleDecal(const struct FTransform& InTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage2.MakeInternalHoleDecal");

	AHullDamage2_MakeInternalHoleDecal_Params params;
	params.InTransform = InTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HullDamage2.LookupParamsByIndex
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            InIndex                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHullDamageParamSet     ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FHullDamageParamSet AHullDamage2::LookupParamsByIndex(int InIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage2.LookupParamsByIndex");

	AHullDamage2_LookupParamsByIndex_Params params;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.HullDamage2.IndexOfParamsForComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UActorComponent*         InComponent                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AHullDamage2::IndexOfParamsForComponent(class UActorComponent* InComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamage2.IndexOfParamsForComponent");

	AHullDamage2_IndexOfParamsForComponent_Params params;
	params.InComponent = InComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AHullDamage2::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(InternalHoleDecal, UMaterialInstance);
	READ_PTR_FULL(InternalHitVfx, UParticleSystem);
	READ_PTR_FULL(Strain_DamageSfx, UWwiseEvent);
	READ_PTR_FULL(StrainDamagePool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(ImpactDecalComponent, UBakedDecalComponent);
	READ_PTR_FULL(ShipDamageComponent, UShipDamageableComponent);
	READ_PTR_FULL(TetherCustomisationComponent, UTetherCustomisationComponent);
	READ_PTR_FULL(ShipLeakerComponent, UShipLeakerComponent);
	READ_PTR_FULL(InstancedPlanksComponent, UMobileInstancedStaticMeshComponent);
	READ_PTR_FULL(Ship, AShip);
}

void AHullDamage2::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(InternalHoleDecal);
	DELE_PTR_FULL(InternalHitVfx);
	DELE_PTR_FULL(Strain_DamageSfx);
	DELE_PTR_FULL(StrainDamagePool);
	DELE_PTR_FULL(ImpactDecalComponent);
	DELE_PTR_FULL(ShipDamageComponent);
	DELE_PTR_FULL(TetherCustomisationComponent);
	DELE_PTR_FULL(ShipLeakerComponent);
	DELE_PTR_FULL(InstancedPlanksComponent);
	DELE_PTR_FULL(Ship);
}

// Function Athena.HullDamagePointProxy.ReactToRepairableStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Repair_ERepairableState> InNewState                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Repair_ERepairableState> InPreviousState                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URepairableComponent*    InRepairableComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UHullDamagePointProxy::ReactToRepairableStateChanged(TEnumAsByte<Repair_ERepairableState> InNewState, TEnumAsByte<Repair_ERepairableState> InPreviousState, class URepairableComponent* InRepairableComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.HullDamagePointProxy.ReactToRepairableStateChanged");

	UHullDamagePointProxy_ReactToRepairableStateChanged_Params params;
	params.InNewState = InNewState;
	params.InPreviousState = InPreviousState;
	params.InRepairableComponent = InRepairableComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UHullDamagePointProxy::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Repairable, URepairableComponent);
}

void UHullDamagePointProxy::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Repairable);
}

void AHumanoidActionStateCreatorDefinition::AfterRead()
{
	AActionStateCreatorDefinition::AfterRead();

}

void AHumanoidActionStateCreatorDefinition::BeforeDelete()
{
	AActionStateCreatorDefinition::BeforeDelete();

}

void AHungeringDeep::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SpawnableVolume, USphereComponent);
	READ_PTR_FULL(RequiredTattoo, UClass);
}

void AHungeringDeep::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SpawnableVolume);
	DELE_PTR_FULL(RequiredTattoo);
}

void UIdleCircleAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UIdleCircleAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.ImpactDecalParamModifier.SetParamValues
// (Native, Public, HasOutParms, Const)
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UMaterialInstanceDynamic* DecalMatInstance               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UImpactDecalParamModifier::SetParamValues(const struct FHitResult& HitResult, class UMaterialInstanceDynamic* DecalMatInstance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ImpactDecalParamModifier.SetParamValues");

	UImpactDecalParamModifier_SetParamValues_Params params;
	params.HitResult = HitResult;
	params.DecalMatInstance = DecalMatInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UImpactDecalParamModifier::AfterRead()
{
	UObject::AfterRead();

}

void UImpactDecalParamModifier::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UImpactDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DecalMaterial, UMaterialInterface);
	READ_PTR_FULL(Particles, UObject);
	READ_PTR_FULL(TriggeredForClientParticles, UObject);
	READ_PTR_FULL(SplashParticles, UObject);
	READ_PTR_FULL(WwiseEvent, UWwiseEvent);
	READ_PTR_FULL(WwiseEventLayer, UWwiseEvent);
	READ_PTR_FULL(WwiseObjectPool, UWwiseObjectPoolWrapper);
}

void UImpactDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DecalMaterial);
	DELE_PTR_FULL(Particles);
	DELE_PTR_FULL(TriggeredForClientParticles);
	DELE_PTR_FULL(SplashParticles);
	DELE_PTR_FULL(WwiseEvent);
	DELE_PTR_FULL(WwiseEventLayer);
	DELE_PTR_FULL(WwiseObjectPool);
}

void UImpactListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UImpactListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.ImpactDecalParamModifierTime.SetParamValues
// (Native, Public, HasOutParms, Const)
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UMaterialInstanceDynamic* DecalMatInstance               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UImpactDecalParamModifierTime::SetParamValues(const struct FHitResult& HitResult, class UMaterialInstanceDynamic* DecalMatInstance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ImpactDecalParamModifierTime.SetParamValues");

	UImpactDecalParamModifierTime_SetParamValues_Params params;
	params.HitResult = HitResult;
	params.DecalMatInstance = DecalMatInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UImpactDecalParamModifierTime::AfterRead()
{
	UImpactDecalParamModifier::AfterRead();

}

void UImpactDecalParamModifierTime::BeforeDelete()
{
	UImpactDecalParamModifier::BeforeDelete();

}

// Function Athena.ImpactDecalParamModifierVomit.SetParamValues
// (Native, Public, HasOutParms, Const)
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UMaterialInstanceDynamic* DecalMatInstance               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UImpactDecalParamModifierVomit::SetParamValues(const struct FHitResult& HitResult, class UMaterialInstanceDynamic* DecalMatInstance)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ImpactDecalParamModifierVomit.SetParamValues");

	UImpactDecalParamModifierVomit_SetParamValues_Params params;
	params.HitResult = HitResult;
	params.DecalMatInstance = DecalMatInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UImpactDecalParamModifierVomit::AfterRead()
{
	UImpactDecalParamModifier::AfterRead();

}

void UImpactDecalParamModifierVomit::BeforeDelete()
{
	UImpactDecalParamModifier::BeforeDelete();

}

void UImpactFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UImpactFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UImpactProjectileIdAshenLordVolcanoRockMedium::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdAshenLordVolcanoRockMedium::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdAshenLordVolcanoRockMini::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdAshenLordVolcanoRockMini::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdAshenLordVolcanoRockSmall::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdAshenLordVolcanoRockSmall::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdBlunderbomb::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdBlunderbomb::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdBlunderbomb_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdBlunderbomb_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdBoilingWater::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdBoilingWater::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdBoilingWaterNoSplash::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdBoilingWaterNoSplash::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Boogie::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Boogie::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Boogie_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Boogie_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Fire::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Fire::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Fire_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Fire_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_FireRock::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_FireRock::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_FireRock_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_FireRock_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Grog::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Grog::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Grog_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Grog_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Limp::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Limp::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Limp_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Limp_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_MoltenFireball::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_MoltenFireball::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_MoltenFireball_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_MoltenFireball_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Anchor::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Anchor::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Anchor_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Anchor_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Ballast::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Ballast::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Ballast_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Ballast_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Barrel::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Barrel::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Barrel_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Barrel_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Passive::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Passive::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Passive_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Passive_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rigging::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rigging::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rigging_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rigging_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rudder::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rudder::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rudder_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Ship_Rudder_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Silence::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Silence::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Snake::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Snake::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Snake_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Snake_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Snooze::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Snooze::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Cur_Snooze_Thrown::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Cur_Snooze_Thrown::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Phantom::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Phantom::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonball_Wraith::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonball_Wraith::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdCannonballFirePhantom::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdCannonballFirePhantom::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdChainShot::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdChainShot::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdEelThrow::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdEelThrow::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdGrenade::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdGrenade::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdHarpoonProjectile::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdHarpoonProjectile::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdLightning::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdLightning::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdScatterGhostly::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdScatterGhostly::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdSirenTridentLarge::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdSirenTridentLarge::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdSirenTridentMedium::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdSirenTridentMedium::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdSirenTridentSmall::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdSirenTridentSmall::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdSmallShot::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdSmallShot::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdSmallShotGhostly::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdSmallShotGhostly::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdSmallShotScatter::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdSmallShotScatter::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdVolcanoRockLarge::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdVolcanoRockLarge::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdVolcanoRockMedium::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdVolcanoRockMedium::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdVolcanoRockMini::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdVolcanoRockMini::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdVolcanoRockSmall::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdVolcanoRockSmall::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdVomit::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdVomit::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdVomitNoSplash::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdVomitNoSplash::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdWater::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdWater::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactProjectileIdWaterNoSplash::AfterRead()
{
	UImpactProjectileId::AfterRead();

}

void UImpactProjectileIdWaterNoSplash::BeforeDelete()
{
	UImpactProjectileId::BeforeDelete();

}

void UImpactSettings::AfterRead()
{
	UObject::AfterRead();

}

void UImpactSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UImpulseThrottlerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UImpulseThrottlerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UImpulseThrottlerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UImpulseThrottlerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UInactivityDetectionServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInactivityDetectionServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UInactivityDetectionService::AfterRead()
{
	UObject::AfterRead();

}

void UInactivityDetectionService::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.IngestedByKrakenActionStateId.PushCharacterIntoIngestedByKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AKrakenAnimatedTentacle* Tentacle                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIngestedByKrakenActionStateId::STATIC_PushCharacterIntoIngestedByKrakenActionState(class AActor* Character, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IngestedByKrakenActionStateId.PushCharacterIntoIngestedByKrakenActionState");

	UIngestedByKrakenActionStateId_PushCharacterIntoIngestedByKrakenActionState_Params params;
	params.Character = Character;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IngestedByKrakenActionStateId.PopCharacterOutOfIngestedByKrakenActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIngestedByKrakenActionStateId::STATIC_PopCharacterOutOfIngestedByKrakenActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IngestedByKrakenActionStateId.PopCharacterOutOfIngestedByKrakenActionState");

	UIngestedByKrakenActionStateId_PopCharacterOutOfIngestedByKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UIngestedByKrakenActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UIngestedByKrakenActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUpRate
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UIngestedByKrakenCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUpRate");

	UIngestedByKrakenCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUp
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UIngestedByKrakenCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUp");

	UIngestedByKrakenCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIngestedByKrakenCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UIngestedByKrakenCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UInitialisePuzzleVaultStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UInitialisePuzzleVaultStepDesc);
}

void UInitialisePuzzleVaultStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UPuzzleVaultAudioParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(PuzzleVaultPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PuzzleVaultWaterFillPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(PuzzleVaultDoorOpening, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultDoorClosing, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultTriggered, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultComplete, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultCorrectSolution, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultIncorrectSolution, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultIncorrectSolutionDelayStart, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultIncorrectSolutionDelayEnd, UWwiseEvent);
	READ_PTR_FULL(PuzzleVaultTurnBlock, UWwiseEvent);
	READ_PTR_FULL(WaterLeakStart, UWwiseEvent);
	READ_PTR_FULL(WaterLeakStop, UWwiseEvent);
	READ_PTR_FULL(WaterLeakEndClunk, UWwiseEvent);
}

void UPuzzleVaultAudioParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(PuzzleVaultPool);
	DELE_PTR_FULL(PuzzleVaultWaterFillPool);
	DELE_PTR_FULL(PuzzleVaultDoorOpening);
	DELE_PTR_FULL(PuzzleVaultDoorClosing);
	DELE_PTR_FULL(PuzzleVaultTriggered);
	DELE_PTR_FULL(PuzzleVaultComplete);
	DELE_PTR_FULL(PuzzleVaultCorrectSolution);
	DELE_PTR_FULL(PuzzleVaultIncorrectSolution);
	DELE_PTR_FULL(PuzzleVaultIncorrectSolutionDelayStart);
	DELE_PTR_FULL(PuzzleVaultIncorrectSolutionDelayEnd);
	DELE_PTR_FULL(PuzzleVaultTurnBlock);
	DELE_PTR_FULL(WaterLeakStart);
	DELE_PTR_FULL(WaterLeakStop);
	DELE_PTR_FULL(WaterLeakEndClunk);
}

void UVaultPuzzleDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVaultPuzzleDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UInitialisePuzzleVaultStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UInitialisePuzzleVaultStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.InstigatorTrackerInterface.GetInstigator
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UInstigatorTrackerInterface::GetInstigator()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InstigatorTrackerInterface.GetInstigator");

	UInstigatorTrackerInterface_GetInstigator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInstigatorTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInstigatorTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UInstigatorTrackerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UInstigatorTrackerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.IntentCombinerComponent.SetIntentProviders
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UControllableIntentComponent*> InIntentProviders              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
void UIntentCombinerComponent::SetIntentProviders(TArray<class UControllableIntentComponent*> InIntentProviders)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentCombinerComponent.SetIntentProviders");

	UIntentCombinerComponent_SetIntentProviders_Params params;
	params.InIntentProviders = InIntentProviders;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.IntentCombinerComponent.GetCombinedIntent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           IsMoving                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UIntentCombinerComponent::GetCombinedIntent(bool IsMoving)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IntentCombinerComponent.GetCombinedIntent");

	UIntentCombinerComponent_GetCombinedIntent_Params params;
	params.IsMoving = IsMoving;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIntentCombinerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIntentCombinerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UControllableIntentCombinerComponent::AfterRead()
{
	UIntentCombinerComponent::AfterRead();

}

void UControllableIntentCombinerComponent::BeforeDelete()
{
	UIntentCombinerComponent::BeforeDelete();

}

void UInteractableLightParameters::AfterRead()
{
	UDataAsset::AfterRead();

}

void UInteractableLightParameters::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.InteractableLight.OnRep_OnLightDataChanged
// (Final, Native, Public)
void AInteractableLight::OnRep_OnLightDataChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableLight.OnRep_OnLightDataChanged");

	AInteractableLight_OnRep_OnLightDataChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InteractableLight.LightStateChanged
// (Event, Public, BlueprintEvent)
void AInteractableLight::LightStateChanged()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableLight.LightStateChanged");

	AInteractableLight_LightStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InteractableLight.IsLightOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AInteractableLight::IsLightOn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableLight.IsLightOn");

	AInteractableLight_IsLightOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractableLight.IsFlameOfFateLit
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool AInteractableLight::IsFlameOfFateLit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableLight.IsFlameOfFateLit");

	AInteractableLight_IsFlameOfFateLit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractableLight.GetFlameOfFateType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EFlameOfFateType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EFlameOfFateType> AInteractableLight::GetFlameOfFateType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractableLight.GetFlameOfFateType");

	AInteractableLight_GetFlameOfFateType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AInteractableLight::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(InteractableLightParameters, UInteractableLightParameters);
	READ_PTR_FULL(SfxSwitchOn, UWwiseEvent);
	READ_PTR_FULL(SfxSwitchOff, UWwiseEvent);
	READ_PTR_FULL(SfxBurningPlay, UWwiseEvent);
	READ_PTR_FULL(SfxBurningStop, UWwiseEvent);
	READ_PTR_FULL(SfxSetFlame, UWwiseEvent);
	READ_PTR_FULL(SfxPool, UWwiseObjectPoolWrapper);
}

void AInteractableLight::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(InteractableLightParameters);
	DELE_PTR_FULL(SfxSwitchOn);
	DELE_PTR_FULL(SfxSwitchOff);
	DELE_PTR_FULL(SfxBurningPlay);
	DELE_PTR_FULL(SfxBurningStop);
	DELE_PTR_FULL(SfxSetFlame);
	DELE_PTR_FULL(SfxPool);
}

void AInteractableLightMock::AfterRead()
{
	AInteractableLight::AfterRead();

}

void AInteractableLightMock::BeforeDelete()
{
	AInteractableLight::BeforeDelete();

}

void AShipInteractableLight::AfterRead()
{
	AInteractableLight::AfterRead();

	READ_PTR_FULL(Ship, AShip);
}

void AShipInteractableLight::BeforeDelete()
{
	AInteractableLight::BeforeDelete();

	DELE_PTR_FULL(Ship);
}

void UInteractableMock::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ActorThatInteracted, AActor);
}

void UInteractableMock::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ActorThatInteracted);
}

void AInteractableMockActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ActorThatInteracted, AActor);
	READ_PTR_FULL(PrimitiveComponent, UCapsuleComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
}

void AInteractableMockActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ActorThatInteracted);
	DELE_PTR_FULL(PrimitiveComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(ActionRulesComponent);
}

// Function Athena.InteractionCompositeInputHandler.OnSecondaryInteractReleased
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UInteractionCompositeInputHandler::OnSecondaryInteractReleased()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionCompositeInputHandler.OnSecondaryInteractReleased");

	UInteractionCompositeInputHandler_OnSecondaryInteractReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnSecondaryInteract
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UInteractionCompositeInputHandler::OnSecondaryInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionCompositeInputHandler.OnSecondaryInteract");

	UInteractionCompositeInputHandler_OnSecondaryInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnPrimaryInteractReleased
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UInteractionCompositeInputHandler::OnPrimaryInteractReleased()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionCompositeInputHandler.OnPrimaryInteractReleased");

	UInteractionCompositeInputHandler_OnPrimaryInteractReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnPrimaryInteract
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UInteractionCompositeInputHandler::OnPrimaryInteract()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionCompositeInputHandler.OnPrimaryInteract");

	UInteractionCompositeInputHandler_OnPrimaryInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInteractionCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UInteractionCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

// Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInteractionPoliciesTestFunctions::STATIC_WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse(class AAthenaCharacter* InCharacter, class AActor* InInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse");

	UInteractionPoliciesTestFunctions_WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse_Params params;
	params.InCharacter = InCharacter;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InInteractionRegionDegrees     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInteractableArea*       InRegionInteractor             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInteractionPoliciesTestFunctions::STATIC_WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue(class AAthenaCharacter* InCharacter, float InInteractionRegionDegrees, class UInteractableArea* InRegionInteractor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue");

	UInteractionPoliciesTestFunctions_WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue_Params params;
	params.InCharacter = InCharacter;
	params.InInteractionRegionDegrees = InInteractionRegionDegrees;
	params.InRegionInteractor = InRegionInteractor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InInteractionRegionDegrees     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInteractableArea*       InOutOfRegionInteractor        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInteractionPoliciesTestFunctions::STATIC_WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse(class AAthenaCharacter* InCharacter, float InInteractionRegionDegrees, class UInteractableArea* InOutOfRegionInteractor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse");

	UInteractionPoliciesTestFunctions_WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse_Params params;
	params.InCharacter = InCharacter;
	params.InInteractionRegionDegrees = InInteractionRegionDegrees;
	params.InOutOfRegionInteractor = InOutOfRegionInteractor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInteractableArea*       InClosestInteractable          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInteractableArea*       InFurthestInteractable         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInteractionPoliciesTestFunctions::STATIC_ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent(class AAthenaCharacter* InCharacter, class UInteractableArea* InClosestInteractable, class UInteractableArea* InFurthestInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionPoliciesTestFunctions.ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent");

	UInteractionPoliciesTestFunctions_ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent_Params params;
	params.InCharacter = InCharacter;
	params.InClosestInteractable = InClosestInteractable;
	params.InFurthestInteractable = InFurthestInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInteractableArea*       InLhsInteractor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInteractableArea*       InRhsInteractor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InPlayerDistanceDelta          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InCenterDistanceDelta          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInteractionPoliciesTestFunctions::STATIC_CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent(class AAthenaCharacter* InCharacter, class UInteractableArea* InLhsInteractor, class UInteractableArea* InRhsInteractor, float InPlayerDistanceDelta, float InCenterDistanceDelta)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionPoliciesTestFunctions.CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent");

	UInteractionPoliciesTestFunctions_CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent_Params params;
	params.InCharacter = InCharacter;
	params.InLhsInteractor = InLhsInteractor;
	params.InRhsInteractor = InRhsInteractor;
	params.InPlayerDistanceDelta = InPlayerDistanceDelta;
	params.InCenterDistanceDelta = InCenterDistanceDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.AirbornePolicy_ExecuteCanInteract
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInteractable                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInteractionPoliciesTestFunctions::STATIC_AirbornePolicy_ExecuteCanInteract(class AAthenaCharacter* InCharacter, class AActor* InInteractable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractionPoliciesTestFunctions.AirbornePolicy_ExecuteCanInteract");

	UInteractionPoliciesTestFunctions_AirbornePolicy_ExecuteCanInteract_Params params;
	params.InCharacter = InCharacter;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInteractionPoliciesTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UInteractionPoliciesTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UInteractOrDisengageNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UInteractOrDisengageNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UInteractOrDisengageReleasedNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UInteractOrDisengageReleasedNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void AInteractorTestProxyObject::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(WieldableItemForTest, UClass);
}

void AInteractorTestProxyObject::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(WieldableItemForTest);
}

void AInterruptibleProjectileActionItem::AfterRead()
{
	ADoubleActionItem::AfterRead();

}

void AInterruptibleProjectileActionItem::BeforeDelete()
{
	ADoubleActionItem::BeforeDelete();

}

void UInventoryItemCategoryToSlotRemappingAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UInventoryItemCategoryToSlotRemappingAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UInventoryItemDescToSlotRemappingPolicyAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UInventoryItemDescToSlotRemappingPolicyAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UInventoryListenerMock::AfterRead()
{
	UObject::AfterRead();

}

void UInventoryListenerMock::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWieldableMock::AfterRead()
{
	UObject::AfterRead();

}

void UWieldableMock::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.InventoryManipulatorComponent.WieldItemByActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           UnwieldFast                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> UInventoryManipulatorComponent::WieldItemByActor(class AActor* Item, bool UnwieldFast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.WieldItemByActor");

	UInventoryManipulatorComponent_WieldItemByActor_Params params;
	params.Item = Item;
	params.UnwieldFast = UnwieldFast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.WieldItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Fast                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UInventoryManipulatorComponent::WieldItem(int ItemIndex, bool Fast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.WieldItem");

	UInventoryManipulatorComponent_WieldItem_Params params;
	params.ItemIndex = ItemIndex;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.ToggleWieldItem
// (Native, Public, BlueprintCallable)
void UInventoryManipulatorComponent::ToggleWieldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.ToggleWieldItem");

	UInventoryManipulatorComponent_ToggleWieldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.Server_DropItemRPC
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorComponent::Server_DropItemRPC(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.Server_DropItemRPC");

	UInventoryManipulatorComponent_Server_DropItemRPC_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.RemoveItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorComponent::RemoveItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.RemoveItem");

	UInventoryManipulatorComponent_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.RemoveAndUnwieldItem
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorComponent::RemoveAndUnwieldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.RemoveAndUnwieldItem");

	UInventoryManipulatorComponent_RemoveAndUnwieldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.QuickSelectItemOfType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            TypedItemIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorComponent::QuickSelectItemOfType(TEnumAsByte<Athena_EItemType> ItemType, int TypedItemIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.QuickSelectItemOfType");

	UInventoryManipulatorComponent_QuickSelectItemOfType_Params params;
	params.ItemType = ItemType;
	params.TypedItemIndex = TypedItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.QuickSelectItemOfCategory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            IndexIntoCategory              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorComponent::QuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.QuickSelectItemOfCategory");

	UInventoryManipulatorComponent_QuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.QuickSelectItem
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorComponent::QuickSelectItem(int ItemIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.QuickSelectItem");

	UInventoryManipulatorComponent_QuickSelectItem_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.PickUpItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               ItemInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           AndWield                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ShouldNotifyClients            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorComponent::PickUpItem(class AItemInfo* ItemInfo, bool AndWield, bool ShouldNotifyClients)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.PickUpItem");

	UInventoryManipulatorComponent_PickUpItem_Params params;
	params.ItemInfo = ItemInfo;
	params.AndWield = AndWield;
	params.ShouldNotifyClients = ShouldNotifyClients;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.Multicast_ItemPickedUpRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// TEnumAsByte<Athena_EWieldableItemSize> ItemSize                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           WasEmptyHanded                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UInventoryManipulatorComponent::Multicast_ItemPickedUpRPC(TEnumAsByte<Athena_EWieldableItemSize> ItemSize, bool WasEmptyHanded)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.Multicast_ItemPickedUpRPC");

	UInventoryManipulatorComponent_Multicast_ItemPickedUpRPC_Params params;
	params.ItemSize = ItemSize;
	params.WasEmptyHanded = WasEmptyHanded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.Multicast_CurrentItemActorIndexChangedRPC
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            NewIndex                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorComponent::Multicast_CurrentItemActorIndexChangedRPC(int NewIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.Multicast_CurrentItemActorIndexChangedRPC");

	UInventoryManipulatorComponent_Multicast_CurrentItemActorIndexChangedRPC_Params params;
	params.NewIndex = NewIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.IsIdle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorComponent::IsIdle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.IsIdle");

	UInventoryManipulatorComponent_IsIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.GetNumberOfItemsOfItemCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UInventoryManipulatorComponent::GetNumberOfItemsOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.GetNumberOfItemsOfItemCategory");

	UInventoryManipulatorComponent_GetNumberOfItemsOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.GetCurrentItemIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UInventoryManipulatorComponent::GetCurrentItemIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.GetCurrentItemIndex");

	UInventoryManipulatorComponent_GetCurrentItemIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.DropWieldedItem
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EDropItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EDropItemReturnCode> UInventoryManipulatorComponent::DropWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.DropWieldedItem");

	UInventoryManipulatorComponent_DropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.DropOrDestroyLargeWieldedItem
// (Final, Native, Public, BlueprintCallable)
void UInventoryManipulatorComponent::DropOrDestroyLargeWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.DropOrDestroyLargeWieldedItem");

	UInventoryManipulatorComponent_DropOrDestroyLargeWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.CycleItemUp
// (Native, Public, BlueprintCallable)
void UInventoryManipulatorComponent::CycleItemUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.CycleItemUp");

	UInventoryManipulatorComponent_CycleItemUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.CycleItemType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorComponent::CycleItemType(TEnumAsByte<Athena_EItemType> ItemType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.CycleItemType");

	UInventoryManipulatorComponent_CycleItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.CycleItemDown
// (Native, Public, BlueprintCallable)
void UInventoryManipulatorComponent::CycleItemDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.CycleItemDown");

	UInventoryManipulatorComponent_CycleItemDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.CycleItemCategory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UInventoryManipulatorComponent::CycleItemCategory(class UClass* Category)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.CycleItemCategory");

	UInventoryManipulatorComponent_CycleItemCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorComponent.ConsumeItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorComponent::ConsumeItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.ConsumeItem");

	UInventoryManipulatorComponent_ConsumeItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.CanDropWieldedItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EDropItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EDropItemReturnCode> UInventoryManipulatorComponent::CanDropWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.CanDropWieldedItem");

	UInventoryManipulatorComponent_CanDropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.CanAddItemOfItemCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<Athena_ECanAddItemQueryResult> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_ECanAddItemQueryResult> UInventoryManipulatorComponent::CanAddItemOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.CanAddItemOfItemCategory");

	UInventoryManipulatorComponent_CanAddItemOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.AddItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorComponent::AddItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorComponent.AddItem");

	UInventoryManipulatorComponent_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInventoryManipulatorComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(PickupSfx, UWwiseEvent);
	READ_PTR_FULL(ItemWieldingParamsLookup, UDataTable);
	READ_PTR_FULL(CachedWieldParamsAsset, UWieldingParamsAsset);
}

void UInventoryManipulatorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(PickupSfx);
	DELE_PTR_FULL(ItemWieldingParamsLookup);
	DELE_PTR_FULL(CachedWieldParamsAsset);
}

void UInviteReceivedPopUpSettings::AfterRead()
{
	UObject::AfterRead();

}

void UInviteReceivedPopUpSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UIsCampaignActiveNPCDialogConditional::AfterRead()
{
	UNPCDialogConditional::AfterRead();

}

void UIsCampaignActiveNPCDialogConditional::BeforeDelete()
{
	UNPCDialogConditional::BeforeDelete();

}

void UIslandEventComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(EventType, UClass);
}

void UIslandEventComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(EventType);
}

void UIslandEventDataInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandEventDataInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandEventTooltipProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandEventTooltipProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.IslandEventTooltipComponent.UnregisterEvents
// (Final, Native, Private)
void UIslandEventTooltipComponent::UnregisterEvents()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandEventTooltipComponent.UnregisterEvents");

	UIslandEventTooltipComponent_UnregisterEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UIslandEventTooltipComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UIslandEventTooltipComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UIslandFaunaSettings::AfterRead()
{
	UDataAsset::AfterRead();

}

void UIslandFaunaSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UIslandFaunaSpawnComponent::AfterRead()
{
	UIslandItemSpawnComponent::AfterRead();

	READ_PTR_FULL(FaunaSettings, UIslandFaunaSettings);
}

void UIslandFaunaSpawnComponent::BeforeDelete()
{
	UIslandItemSpawnComponent::BeforeDelete();

	DELE_PTR_FULL(FaunaSettings);
}

// Function Athena.IslandFunctions.IsClosestIslandOfType
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 InWorldContext                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 InLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EIslandType> SearchType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UIslandFunctions::STATIC_IsClosestIslandOfType(class UObject* InWorldContext, const struct FVector& InLocation, TEnumAsByte<Athena_EIslandType> SearchType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandFunctions.IsClosestIslandOfType");

	UIslandFunctions_IsClosestIslandOfType_Params params;
	params.InWorldContext = InWorldContext;
	params.InLocation = InLocation;
	params.SearchType = SearchType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.IslandFunctions.GetLocalisedIslandName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   IslandName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)
struct FText UIslandFunctions::STATIC_GetLocalisedIslandName(class AActor* InActor, const struct FName& IslandName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandFunctions.GetLocalisedIslandName");

	UIslandFunctions_GetLocalisedIslandName_Params params;
	params.InActor = InActor;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.IslandFunctions.GetIslandTriggerCircle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 InWorldContext                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   InIslandName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           OutHasFoundIsland              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 OutCircleCentre                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                          OutCircleRadius                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UIslandFunctions::STATIC_GetIslandTriggerCircle(class UObject* InWorldContext, const struct FName& InIslandName, bool* OutHasFoundIsland, struct FVector* OutCircleCentre, float* OutCircleRadius)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandFunctions.GetIslandTriggerCircle");

	UIslandFunctions_GetIslandTriggerCircle_Params params;
	params.InWorldContext = InWorldContext;
	params.InIslandName = InIslandName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHasFoundIsland != nullptr)
		*OutHasFoundIsland = params.OutHasFoundIsland;
	if (OutCircleCentre != nullptr)
		*OutCircleCentre = params.OutCircleCentre;
	if (OutCircleRadius != nullptr)
		*OutCircleRadius = params.OutCircleRadius;

}


// Function Athena.IslandFunctions.GetIslandPositionByName
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   IslandName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           OutSearchResult                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UIslandFunctions::STATIC_GetIslandPositionByName(class UObject* WorldContext, const struct FName& IslandName, bool* OutSearchResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandFunctions.GetIslandPositionByName");

	UIslandFunctions_GetIslandPositionByName_Params params;
	params.WorldContext = WorldContext;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutSearchResult != nullptr)
		*OutSearchResult = params.OutSearchResult;


	return params.ReturnValue;
}


// Function Athena.IslandFunctions.GetClosestIslandOfType
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  InActor                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EIslandType> SearchType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           OutHasFoundIslandOfType        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FIsland                 Island                         (Parm, OutParm)
void UIslandFunctions::STATIC_GetClosestIslandOfType(class AActor* InActor, TEnumAsByte<Athena_EIslandType> SearchType, bool* OutHasFoundIslandOfType, struct FIsland* Island)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandFunctions.GetClosestIslandOfType");

	UIslandFunctions_GetClosestIslandOfType_Params params;
	params.InActor = InActor;
	params.SearchType = SearchType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHasFoundIslandOfType != nullptr)
		*OutHasFoundIslandOfType = params.OutHasFoundIslandOfType;
	if (Island != nullptr)
		*Island = params.Island;

}


// Function Athena.IslandFunctions.GetActorsCurrentIslandName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  TheActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
struct FName UIslandFunctions::STATIC_GetActorsCurrentIslandName(class AActor* TheActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandFunctions.GetActorsCurrentIslandName");

	UIslandFunctions_GetActorsCurrentIslandName_Params params;
	params.TheActor = TheActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIslandFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UIslandFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UIslandItemSpawnComponentMock::AfterRead()
{
	UIslandItemSpawnComponent::AfterRead();

}

void UIslandItemSpawnComponentMock::BeforeDelete()
{
	UIslandItemSpawnComponent::BeforeDelete();

}

// Function Athena.IslandLocationVerifierInterface.VerifyLocation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           RequiresNavMesh                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FIslandLocationVerifierResult ReturnValue                    (Parm, OutParm, ReturnParm)
struct FIslandLocationVerifierResult UIslandLocationVerifierInterface::VerifyLocation(const struct FVector& Location, bool RequiresNavMesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.IslandLocationVerifierInterface.VerifyLocation");

	UIslandLocationVerifierInterface_VerifyLocation_Params params;
	params.Location = Location;
	params.RequiresNavMesh = RequiresNavMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UIslandLocationVerifierInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandLocationVerifierInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PetLoadoutControlInterface.SetPetLoadout
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPetLoadout             InLoadout                      (ConstParm, Parm, OutParm, ReferenceParm)
void UPetLoadoutControlInterface::SetPetLoadout(const struct FPetLoadout& InLoadout)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetLoadoutControlInterface.SetPetLoadout");

	UPetLoadoutControlInterface_SetPetLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPetLoadoutControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPetLoadoutControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PetLoadoutComponent.OnRep_Loadout
// (Final, Native, Private)
void UPetLoadoutComponent::OnRep_Loadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PetLoadoutComponent.OnRep_Loadout");

	UPetLoadoutComponent_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPetLoadoutComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(OwningPlayer, AActor);
}

void UPetLoadoutComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(OwningPlayer);
}

void UPlayerAtmosphericsAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(WindStartEvent, UWwiseEvent);
	READ_PTR_FULL(WindStopEvent, UWwiseEvent);
	READ_PTR_FULL(RainStartEvent, UWwiseEvent);
	READ_PTR_FULL(RainStopEvent, UWwiseEvent);
}

void UPlayerAtmosphericsAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(WindStartEvent);
	DELE_PTR_FULL(WindStopEvent);
	DELE_PTR_FULL(RainStartEvent);
	DELE_PTR_FULL(RainStopEvent);
}

// Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWwiseObjectPoolWrapper* PoolDensityWrapper             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UPlayerAtmosphericsAudioComponent::GetPoolDensityFactor(class UWwiseObjectPoolWrapper* PoolDensityWrapper)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityFactor");

	UPlayerAtmosphericsAudioComponent_GetPoolDensityFactor_Params params;
	params.PoolDensityWrapper = PoolDensityWrapper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityAveragePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWwiseObjectPoolWrapper* PoolDensityWrapper             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UPlayerAtmosphericsAudioComponent::GetPoolDensityAveragePosition(class UWwiseObjectPoolWrapper* PoolDensityWrapper)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityAveragePosition");

	UPlayerAtmosphericsAudioComponent_GetPoolDensityAveragePosition_Params params;
	params.PoolDensityWrapper = PoolDensityWrapper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerAtmosphericsAudioComponent.GetIsWindAudioPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerAtmosphericsAudioComponent::GetIsWindAudioPlaying()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerAtmosphericsAudioComponent.GetIsWindAudioPlaying");

	UPlayerAtmosphericsAudioComponent_GetIsWindAudioPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerAtmosphericsAudioComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(AtmosphericParams, UPlayerAtmosphericsAudioComponentParams);
	READ_PTR_FULL(AthenaPlayerCharacter, AAthenaPlayerCharacter);
}

void UPlayerAtmosphericsAudioComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(AtmosphericParams);
	DELE_PTR_FULL(AthenaPlayerCharacter);
}

void APlayerBuriedItemsMapBundleItemProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

	READ_PTR_FULL(OnPickedUpSfx, UWwiseEvent);
}

void APlayerBuriedItemsMapBundleItemProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

	DELE_PTR_FULL(OnPickedUpSfx);
}

void UPlayerBuriedTreasureServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerBuriedTreasureServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PlayerBuriedTreasureService.Multicast_PlayerBuriedChestDiscoveredByPlayer
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FGuid                   DiscoveredByCrewId             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ACharacter*              DiscoveredByCharacter          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FString                 BuriedByPlayerName             (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FName                   Rarity                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPopUpMessageDesc*       TemplatePopupDesc              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlayerBuriedTreasureService::Multicast_PlayerBuriedChestDiscoveredByPlayer(const struct FGuid& DiscoveredByCrewId, class ACharacter* DiscoveredByCharacter, const struct FString& BuriedByPlayerName, const struct FName& Rarity, class UPopUpMessageDesc* TemplatePopupDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerBuriedTreasureService.Multicast_PlayerBuriedChestDiscoveredByPlayer");

	APlayerBuriedTreasureService_Multicast_PlayerBuriedChestDiscoveredByPlayer_Params params;
	params.DiscoveredByCrewId = DiscoveredByCrewId;
	params.DiscoveredByCharacter = DiscoveredByCharacter;
	params.BuriedByPlayerName = BuriedByPlayerName;
	params.Rarity = Rarity;
	params.TemplatePopupDesc = TemplatePopupDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerBuriedTreasureService.Multicast_PlayerBuriedChest
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// bool                           MapWasAdded                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGuid                   BuriedByCrewId                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ACharacter*              BuriedByCharacter              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   Rarity                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPopUpMessageDesc*       TemplatePopupDesc              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlayerBuriedTreasureService::Multicast_PlayerBuriedChest(bool MapWasAdded, const struct FGuid& BuriedByCrewId, class ACharacter* BuriedByCharacter, const struct FName& Rarity, class UPopUpMessageDesc* TemplatePopupDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerBuriedTreasureService.Multicast_PlayerBuriedChest");

	APlayerBuriedTreasureService_Multicast_PlayerBuriedChest_Params params;
	params.MapWasAdded = MapWasAdded;
	params.BuriedByCrewId = BuriedByCrewId;
	params.BuriedByCharacter = BuriedByCharacter;
	params.Rarity = Rarity;
	params.TemplatePopupDesc = TemplatePopupDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerBuriedTreasureService.Multicast_MapBundleStolen
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FGuid                   DroppedByCrewId                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGuid                   StolenByCrewId                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FString                 StolenFromPlayersName          (Parm, ZeroConstructor, HasGetValueTypeHash)
void APlayerBuriedTreasureService::Multicast_MapBundleStolen(const struct FGuid& DroppedByCrewId, const struct FGuid& StolenByCrewId, const struct FString& StolenFromPlayersName)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerBuriedTreasureService.Multicast_MapBundleStolen");

	APlayerBuriedTreasureService_Multicast_MapBundleStolen_Params params;
	params.DroppedByCrewId = DroppedByCrewId;
	params.StolenByCrewId = StolenByCrewId;
	params.StolenFromPlayersName = StolenFromPlayersName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APlayerBuriedTreasureService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(DataAsset, UPlayerBuriedTreasureServiceDataAsset);
}

void APlayerBuriedTreasureService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(DataAsset);
}

void UPlayerBuriedTreasureServiceDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(TreasureDiscoveredMessage, UPopUpMessageDesc);
	READ_PTR_FULL(TreasureBuriedMapAddedMessage, UPopUpMessageDesc);
	READ_PTR_FULL(TreasureBuriedMapUpdatedMessage, UPopUpMessageDesc);
	READ_PTR_FULL(MapBundleStolenVictimMessage, UPopUpMessageDesc);
	READ_PTR_FULL(MapBundleStolenPerpetratorMessage, UPopUpMessageDesc);
}

void UPlayerBuriedTreasureServiceDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(TreasureDiscoveredMessage);
	DELE_PTR_FULL(TreasureBuriedMapAddedMessage);
	DELE_PTR_FULL(TreasureBuriedMapUpdatedMessage);
	DELE_PTR_FULL(MapBundleStolenVictimMessage);
	DELE_PTR_FULL(MapBundleStolenPerpetratorMessage);
}

void UPlayerCompanyControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerCompanyControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerCompanyViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerCompanyViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URewardDistributionModelDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void URewardDistributionModelDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void URewardGenTaleQuestServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

	READ_PTR_FULL(SpawnData, UPirateLegendWeightedItemDescSpawnDataAsset);
}

void URewardGenTaleQuestServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

	DELE_PTR_FULL(SpawnData);
}

void URewardHandInInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URewardHandInInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URewardHandInComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void URewardHandInComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UShipwreckSiteGeneratorRandom::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(ShipwreckDepthDistribution, UCurveFloat);
}

void UShipwreckSiteGeneratorRandom::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(ShipwreckDepthDistribution);
}

void UShipwreckSiteGeneratorRandomComponent::AfterRead()
{
	UShipwreckSiteGeneratorComponent::AfterRead();

	READ_PTR_FULL(SiteGenAsset, UShipwreckSiteGeneratorRandom);
}

void UShipwreckSiteGeneratorRandomComponent::BeforeDelete()
{
	UShipwreckSiteGeneratorComponent::BeforeDelete();

	DELE_PTR_FULL(SiteGenAsset);
}

void UStatusResponseShipAddAnchor::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseShipAddAnchor::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseShipCurseFX::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseShipCurseFX::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseShipPreventServerMigrationCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseShipPreventServerMigrationCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseSickness::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseSickness::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseSicknessInterrupt::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseSicknessInterrupt::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseSleepCurse::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseSleepCurse::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseStun::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseStun::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseToggleCapstan::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseToggleCapstan::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseToggleInteractionPoint::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseToggleInteractionPoint::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseToggleWheelLock::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseToggleWheelLock::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UStatusResponseTriggerDrunkenness::AfterRead()
{
	UStatusResponse::AfterRead();

}

void UStatusResponseTriggerDrunkenness::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

}

void UNPCOnSurfaceCannonManagerCrewSizeSettingsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCOnSurfaceCannonManagerCrewSizeSettingsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UNPCOnSurfaceCannonManager::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(CannonManagerDataAsset, UNPCOnSurfaceCannonManagerDataAsset);
	READ_PTR_FULL(CannonManagerCrewSizeSettingsDataAsset, UNPCOnSurfaceCannonManagerCrewSizeSettingsDataAsset);
}

void UNPCOnSurfaceCannonManager::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(CannonManagerDataAsset);
	DELE_PTR_FULL(CannonManagerCrewSizeSettingsDataAsset);
}

void URemoveNPCOnSurfaceStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void URemoveNPCOnSurfaceStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UWaitForNPCOnSurfaceToSpawnStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UWaitForNPCOnSurfaceToSpawnStepDesc);
	READ_PTR_FULL(SelectedManager, UNPCOnSurfaceManager);
}

void UWaitForNPCOnSurfaceToSpawnStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
	DELE_PTR_FULL(SelectedManager);
}

void UWaitForNPCOnSurfaceToSpawnStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UWaitForNPCOnSurfaceToSpawnStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UOpenableItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UOpenableItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UOpenableItemAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(ClosedTransitionAnim, UAnimSequence);
	READ_PTR_FULL(ClosedLoopAnim, UAnimSequence);
	READ_PTR_FULL(OpenTransitionAnim, UAnimSequence);
	READ_PTR_FULL(FirstOpenTransitionAnim, UAnimSequence);
	READ_PTR_FULL(OpenLoopAnim, UAnimSequence);
	READ_PTR_FULL(CurrentMontage, UAnimMontage);
	READ_PTR_FULL(NextAnim, UAnimSequence);
}

void UOpenableItemAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(ClosedTransitionAnim);
	DELE_PTR_FULL(ClosedLoopAnim);
	DELE_PTR_FULL(OpenTransitionAnim);
	DELE_PTR_FULL(FirstOpenTransitionAnim);
	DELE_PTR_FULL(OpenLoopAnim);
	DELE_PTR_FULL(CurrentMontage);
	DELE_PTR_FULL(NextAnim);
}

// Function Athena.OpenableItemComponent.Server_RequestOpenState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<Athena_EOpenableItemState> InOpenState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UOpenableItemComponent::Server_RequestOpenState(TEnumAsByte<Athena_EOpenableItemState> InOpenState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OpenableItemComponent.Server_RequestOpenState");

	UOpenableItemComponent_Server_RequestOpenState_Params params;
	params.InOpenState = InOpenState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OpenableItemComponent.OnRep_OpenState
// (Final, Native, Private)
void UOpenableItemComponent::OnRep_OpenState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OpenableItemComponent.OnRep_OpenState");

	UOpenableItemComponent_OnRep_OpenState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UOpenableItemComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UOpenableItemComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UOpenableItemReactionComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UOpenableItemReactionComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UOpenableItemMaterialAnimationReactionComponent::AfterRead()
{
	UOpenableItemReactionComponent::AfterRead();

	READ_PTR_FULL(MaterialAnimatorComponent, UMaterialAnimatorComponent);
}

void UOpenableItemMaterialAnimationReactionComponent::BeforeDelete()
{
	UOpenableItemReactionComponent::BeforeDelete();

	DELE_PTR_FULL(MaterialAnimatorComponent);
}

void UOpenableItemMeshAnimationReactionComponent::AfterRead()
{
	UOpenableItemReactionComponent::AfterRead();

	READ_PTR_FULL(MeshAnimatorComponent, UMeshAnimatorComponent);
}

void UOpenableItemMeshAnimationReactionComponent::BeforeDelete()
{
	UOpenableItemReactionComponent::BeforeDelete();

	DELE_PTR_FULL(MeshAnimatorComponent);
}

void UCharacterHitReactionDamagerTypeToAnimTypeLayer::AfterRead()
{
	UObject::AfterRead();

}

void UCharacterHitReactionDamagerTypeToAnimTypeLayer::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.CharacterInertInterface.SetInert
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterInertInterface::SetInert()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterInertInterface.SetInert");

	UCharacterInertInterface_SetInert_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterInertInterface.IsInert
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterInertInterface::IsInert()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterInertInterface.IsInert");

	UCharacterInertInterface_IsInert_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CharacterInertInterface.ClearInert
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCharacterInertInterface::ClearInert()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CharacterInertInterface.ClearInert");

	UCharacterInertInterface_ClearInert_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCharacterInertInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterInertInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCharacterMovementBaseNotificationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterMovementBaseNotificationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCharacterOrientationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCharacterOrientationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDeferredSpawnInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDeferredSpawnInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.FiredFromActorActionStateId.PushCharacterIntoFiredFromActorActionState
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  FiringActor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 LaunchVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UFiredFromActorActionStateId::STATIC_PushCharacterIntoFiredFromActorActionState(class AActor* Character, class AActor* FiringActor, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FiredFromActorActionStateId.PushCharacterIntoFiredFromActorActionState");

	UFiredFromActorActionStateId_PushCharacterIntoFiredFromActorActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FiredFromActorActionStateId.PopCharacterOutOfFiredFromActorActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFiredFromActorActionStateId::STATIC_PopCharacterOutOfFiredFromActorActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FiredFromActorActionStateId.PopCharacterOutOfFiredFromActorActionState");

	UFiredFromActorActionStateId_PopCharacterOutOfFiredFromActorActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFiredFromActorActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UFiredFromActorActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UFirstPersonCameraOrientationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFirstPersonCameraOrientationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIdentifiedAsPlayerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIdentifiedAsPlayerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UInactivityTrackerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInactivityTrackerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMeshMemoryConstraintScoringPlayerDistance::AfterRead()
{
	UMeshMemoryConstraintScoringObject::AfterRead();

}

void UMeshMemoryConstraintScoringPlayerDistance::BeforeDelete()
{
	UMeshMemoryConstraintScoringObject::BeforeDelete();

}

void UMeshMemoryConstraintScoringPlayerView::AfterRead()
{
	UMeshMemoryConstraintScoringObject::AfterRead();

}

void UMeshMemoryConstraintScoringPlayerView::BeforeDelete()
{
	UMeshMemoryConstraintScoringObject::BeforeDelete();

}

void UMeshSocketsFinderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeshSocketsFinderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMovementModeInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMovementModeInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPacingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPacingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerTrackerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerTrackerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URotationControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URotationControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USwimmingMovementInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USwimmingMovementInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UConditionalStatsAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UConditionalStatsAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UConditionalStatsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UConditionalStatsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UConditionalStatsService::AfterRead()
{
	UObject::AfterRead();

}

void UConditionalStatsService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UStandardSailDynamicsDesc::AfterRead()
{
	UBaseSailDynamicsDesc::AfterRead();

	READ_PTR_FULL(SailSetFractionToSailForceAmp, UCurveFloat);
}

void UStandardSailDynamicsDesc::BeforeDelete()
{
	UBaseSailDynamicsDesc::BeforeDelete();

	DELE_PTR_FULL(SailSetFractionToSailForceAmp);
}

// Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UWaterModifierZoneInterface::GetWaterModifierZoneType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneType");

	UWaterModifierZoneInterface_GetWaterModifierZoneType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneParameters
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWaterModifierZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWaterModifierZoneParametersAndLocation UWaterModifierZoneInterface::GetWaterModifierZoneParameters()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneParameters");

	UWaterModifierZoneInterface_GetWaterModifierZoneParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWaterModifierZoneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWaterModifierZoneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WaterModifierZoneServiceInterface.UnregisterWaterModifierZoneFromService
// (Native, Public, BlueprintCallable)
void UWaterModifierZoneServiceInterface::UnregisterWaterModifierZoneFromService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.UnregisterWaterModifierZoneFromService");

	UWaterModifierZoneServiceInterface_UnregisterWaterModifierZoneFromService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterModifierZoneServiceInterface.RegisterWaterModifierZoneWithService
// (Native, Public, BlueprintCallable)
void UWaterModifierZoneServiceInterface::RegisterWaterModifierZoneWithService()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.RegisterWaterModifierZoneWithService");

	UWaterModifierZoneServiceInterface_RegisterWaterModifierZoneWithService_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZones
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<struct FWaterModifierZoneParametersAndLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FWaterModifierZoneParametersAndLocation> UWaterModifierZoneServiceInterface::GetWaterModifierZones(class UClass* Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZones");

	UWaterModifierZoneServiceInterface_GetWaterModifierZones_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            WaterModifierZoneIndex         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWaterModifierZoneParametersAndLocation ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWaterModifierZoneParametersAndLocation UWaterModifierZoneServiceInterface::GetWaterModifierZone(int WaterModifierZoneIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZone");

	UWaterModifierZoneServiceInterface_GetWaterModifierZone_Params params;
	params.WaterModifierZoneIndex = WaterModifierZoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierStrength
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWaterModifierZoneServiceInterface::GetWaterModifierStrength(class UClass* Type, const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierStrength");

	UWaterModifierZoneServiceInterface_GetWaterModifierStrength_Params params;
	params.Type = Type;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZonesByType
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWaterModifierZoneServiceInterface::GetNumberOfWaterModifierZonesByType(class UClass* Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZonesByType");

	UWaterModifierZoneServiceInterface_GetNumberOfWaterModifierZonesByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZones
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWaterModifierZoneServiceInterface::GetNumberOfWaterModifierZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZones");

	UWaterModifierZoneServiceInterface_GetNumberOfWaterModifierZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetDragScalarAtLocation
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UWaterModifierZoneServiceInterface::GetDragScalarAtLocation(const struct FVector& Position)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetDragScalarAtLocation");

	UWaterModifierZoneServiceInterface_GetDragScalarAtLocation_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetAllWaterModifierZones
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FWaterModifierZoneParametersAndLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FWaterModifierZoneParametersAndLocation> UWaterModifierZoneServiceInterface::GetAllWaterModifierZones()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterModifierZoneServiceInterface.GetAllWaterModifierZones");

	UWaterModifierZoneServiceInterface_GetAllWaterModifierZones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWaterModifierZoneServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWaterModifierZoneServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWaterStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UWaterStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.WaterVolume.RegisterComponents
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFlatWaterMeshComponent* FlatWaterMesh                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFlatWaterPlaneComponent* FlatWaterPlane                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AWaterVolume::RegisterComponents(class UFlatWaterMeshComponent* FlatWaterMesh, class UFlatWaterPlaneComponent* FlatWaterPlane)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WaterVolume.RegisterComponents");

	AWaterVolume_RegisterComponents_Params params;
	params.FlatWaterMesh = FlatWaterMesh;
	params.FlatWaterPlane = FlatWaterPlane;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AWaterVolume::AfterRead()
{
	AActor::AfterRead();

}

void AWaterVolume::BeforeDelete()
{
	AActor::BeforeDelete();

}

void AVariableFillRateWaterVolume::AfterRead()
{
	AWaterVolume::AfterRead();

}

void AVariableFillRateWaterVolume::BeforeDelete()
{
	AWaterVolume::BeforeDelete();

}

void UAthenaUserSettingsDefaults::AfterRead()
{
	UObject::AfterRead();

}

void UAthenaUserSettingsDefaults::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UUserGameSettingsRetrievalInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UUserGameSettingsRetrievalInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAutoMoveInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAutoMoveInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAthenaSpringArmComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaSpringArmComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UCameraFieldOfViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCameraFieldOfViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CameraFunctionLib.UpdateCameraAdditiveType
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<Athena_ECameraLookatAnimationType> EnumControllableType           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CameraAdditiveBlendValue       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          IsCameraAdditive               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CameraPitchTime                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CameraYawTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CameraYawAngle                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          CameraPitchAngle               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MinPitchAngle                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MaxPitchAngle                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MaxYawAngle                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MinYawAngle                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCameraFunctionLib::STATIC_UpdateCameraAdditiveType(TEnumAsByte<Athena_ECameraLookatAnimationType> EnumControllableType, float CameraAdditiveBlendValue, float* IsCameraAdditive, float* CameraPitchTime, float* CameraYawTime, float CameraYawAngle, float CameraPitchAngle, float MinPitchAngle, float MaxPitchAngle, float MaxYawAngle, float MinYawAngle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CameraFunctionLib.UpdateCameraAdditiveType");

	UCameraFunctionLib_UpdateCameraAdditiveType_Params params;
	params.EnumControllableType = EnumControllableType;
	params.CameraAdditiveBlendValue = CameraAdditiveBlendValue;
	params.CameraYawAngle = CameraYawAngle;
	params.CameraPitchAngle = CameraPitchAngle;
	params.MinPitchAngle = MinPitchAngle;
	params.MaxPitchAngle = MaxPitchAngle;
	params.MaxYawAngle = MaxYawAngle;
	params.MinYawAngle = MinYawAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (IsCameraAdditive != nullptr)
		*IsCameraAdditive = params.IsCameraAdditive;
	if (CameraPitchTime != nullptr)
		*CameraPitchTime = params.CameraPitchTime;
	if (CameraYawTime != nullptr)
		*CameraYawTime = params.CameraYawTime;

}


void UCameraFunctionLib::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCameraFunctionLib::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCameraPitchModifier::AfterRead()
{
	UCameraModifier::AfterRead();

}

void UCameraPitchModifier::BeforeDelete()
{
	UCameraModifier::BeforeDelete();

}

void UCameraRollModifier::AfterRead()
{
	UCameraModifier::AfterRead();

}

void UCameraRollModifier::BeforeDelete()
{
	UCameraModifier::BeforeDelete();

}

void UCameraYawModifier::AfterRead()
{
	UCameraModifier::AfterRead();

}

void UCameraYawModifier::BeforeDelete()
{
	UCameraModifier::BeforeDelete();

}

void ULookAtInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULookAtInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ULookAtLocationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULookAtLocationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CapstanArmInterface.SetIntent
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          NewIntent                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCapstanArmInterface::SetIntent(float NewIntent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArmInterface.SetIntent");

	UCapstanArmInterface_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CapstanArmInterface.IsLocked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCapstanArmInterface::IsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArmInterface.IsLocked");

	UCapstanArmInterface_IsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.IsArmInUse
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCapstanArmInterface::IsArmInUse()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArmInterface.IsArmInUse");

	UCapstanArmInterface_IsArmInUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.GetPlayerAnimationOnCapstanMultiplier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanArmInterface::GetPlayerAnimationOnCapstanMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArmInterface.GetPlayerAnimationOnCapstanMultiplier");

	UCapstanArmInterface_GetPlayerAnimationOnCapstanMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.GetCurrentIntent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanArmInterface::GetCurrentIntent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArmInterface.GetCurrentIntent");

	UCapstanArmInterface_GetCurrentIntent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.GetCapstanRatioVelocity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanArmInterface::GetCapstanRatioVelocity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanArmInterface.GetCapstanRatioVelocity");

	UCapstanArmInterface_GetCapstanRatioVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCapstanArmInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCapstanArmInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CapstanInterface.IsLocked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCapstanInterface::IsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.IsLocked");

	UCapstanInterface_IsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetPlayerAnimationOnCapstanMultiplier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanInterface::GetPlayerAnimationOnCapstanMultiplier()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.GetPlayerAnimationOnCapstanMultiplier");

	UCapstanInterface_GetPlayerAnimationOnCapstanMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanInterface::GetCapstanState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.GetCapstanState");

	UCapstanInterface_GetCapstanState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanRatioVelocity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanInterface::GetCapstanRatioVelocity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.GetCapstanRatioVelocity");

	UCapstanInterface_GetCapstanRatioVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanNumCurrentUsers
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UCapstanInterface::GetCapstanNumCurrentUsers()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.GetCapstanNumCurrentUsers");

	UCapstanInterface_GetCapstanNumCurrentUsers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanMaxVelocityPerPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanInterface::GetCapstanMaxVelocityPerPlayer()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.GetCapstanMaxVelocityPerPlayer");

	UCapstanInterface_GetCapstanMaxVelocityPerPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanMaxRatioVelocity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UCapstanInterface::GetCapstanMaxRatioVelocity()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CapstanInterface.GetCapstanMaxRatioVelocity");

	UCapstanInterface_GetCapstanMaxRatioVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCapstanInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCapstanInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMeleeAttackBlockerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeleeAttackBlockerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URewindBaseProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void URewindBaseProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void URewindComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URewindComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void URewindPhysicsService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void URewindPhysicsService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(World);
}

void UActionRulesProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UActionRulesProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UActionRulesComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UActionRulesComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UBaseTooltipDescriptorId::AfterRead()
{
	UObject::AfterRead();

}

void UBaseTooltipDescriptorId::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UTooltipDescriptorId::AfterRead()
{
	UBaseTooltipDescriptorId::AfterRead();

}

void UTooltipDescriptorId::BeforeDelete()
{
	UBaseTooltipDescriptorId::BeforeDelete();

}

void UCameraViewRestrictableInteractorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCameraViewRestrictableInteractorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UOneShotInteractableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UOneShotInteractableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UInteractionSettings::AfterRead()
{
	UObject::AfterRead();

}

void UInteractionSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.InteractObjectActionStateId.PushCharacterIntoInteractObjectActionState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FNetSubObjectPtr        InteractObject                 (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInteractObjectActionStateId::STATIC_PushCharacterIntoInteractObjectActionState(const struct FNetSubObjectPtr& InteractObject, class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InteractObjectActionStateId.PushCharacterIntoInteractObjectActionState");

	UInteractObjectActionStateId_PushCharacterIntoInteractObjectActionState_Params params;
	params.InteractObject = InteractObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UInteractObjectActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UInteractObjectActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void URestrictedInteractionCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

}

void URestrictedInteractionCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

}

void UActivitiesServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UActivitiesServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UActivitiesService::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(ActivityIconDataAsset, UPlayerActivityIconCatalogueDataAsset);
}

void UActivitiesService::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(ActivityIconDataAsset);
}

void UPlayerActivityComponentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerActivityComponentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerActivityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPlayerActivityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPlayerActivityComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPlayerActivityComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlayerActivityFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPlayerActivityFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void ACargoRunService::AfterRead()
{
	AActor::AfterRead();

}

void ACargoRunService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UQuickSwitchWeaponNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickSwitchWeaponNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.ItemLoadoutViewInterface.HasCapacity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  InItemCategory                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemLoadoutViewInterface::HasCapacity(class UClass* InItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.HasCapacity");

	UItemLoadoutViewInterface_HasCapacity_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetWeaponsLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper)
TArray<class UClass*> UItemLoadoutViewInterface::GetWeaponsLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetWeaponsLoadout");

	UItemLoadoutViewInterface_GetWeaponsLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetNumItems
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  InItemCategory                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UItemLoadoutViewInterface::GetNumItems(class UClass* InItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetNumItems");

	UItemLoadoutViewInterface_GetNumItems_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetNumCategories
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UItemLoadoutViewInterface::GetNumCategories()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetNumCategories");

	UItemLoadoutViewInterface_GetNumCategories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItems
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InItemCategory                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class AItemInfo*>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AItemInfo*> UItemLoadoutViewInterface::GetItems(class UClass* InItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetItems");

	UItemLoadoutViewInterface_GetItems_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItemLoadout
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemLoadout            ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
struct FItemLoadout UItemLoadoutViewInterface::GetItemLoadout()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetItemLoadout");

	UItemLoadoutViewInterface_GetItemLoadout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItemByIndex
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InItemCategory                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UItemLoadoutViewInterface::GetItemByIndex(class UClass* InItemCategory, int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetItemByIndex");

	UItemLoadoutViewInterface_GetItemByIndex_Params params;
	params.InItemCategory = InItemCategory;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  InItemCategory                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UItemLoadoutViewInterface::GetItem(class UClass* InItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetItem");

	UItemLoadoutViewInterface_GetItem_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetCategories
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UItemLoadoutViewInterface::GetCategories()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetCategories");

	UItemLoadoutViewInterface_GetCategories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetCapacity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  InItemCategory                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UItemLoadoutViewInterface::GetCapacity(class UClass* InItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetCapacity");

	UItemLoadoutViewInterface_GetCapacity_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetAllItems
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AItemInfo*>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AItemInfo*> UItemLoadoutViewInterface::GetAllItems()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemLoadoutViewInterface.GetAllItems");

	UItemLoadoutViewInterface_GetAllItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UItemLoadoutViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemLoadoutViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAwardableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAwardableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UAchievementReward::AfterRead()
{
	UReward::AfterRead();

}

void UAchievementReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UEntitlementReward::AfterRead()
{
	UReward::AfterRead();

	READ_PTR_FULL(EntitlementDesc, UClass);
}

void UEntitlementReward::BeforeDelete()
{
	UReward::BeforeDelete();

	DELE_PTR_FULL(EntitlementDesc);
}

void UGoldReward::AfterRead()
{
	UReward::AfterRead();

}

void UGoldReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void ULevelReward::AfterRead()
{
	UReward::AfterRead();

}

void ULevelReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UNullReward::AfterRead()
{
	UReward::AfterRead();

}

void UNullReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UPremiumCurrencyReward::AfterRead()
{
	UReward::AfterRead();

}

void UPremiumCurrencyReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UWaywardTokensReward::AfterRead()
{
	UReward::AfterRead();

}

void UWaywardTokensReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UXPReward::AfterRead()
{
	UReward::AfterRead();

}

void UXPReward::BeforeDelete()
{
	UReward::BeforeDelete();

}

void UTreasureMapDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UTreasureMapDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UWorldMapIslandDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Texture, UTexture);
}

void UWorldMapIslandDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Texture);
}

void USeaRegionComponent::AfterRead()
{
	UWorldRegionComponent::AfterRead();

	READ_PTR_FULL(SeaId, UClass);
}

void USeaRegionComponent::BeforeDelete()
{
	UWorldRegionComponent::BeforeDelete();

	DELE_PTR_FULL(SeaId);
}

// Function Athena.CompanyNPCInterface.PurchaseWieldedBooty
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Vendor                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UCompanyNPCInterface::PurchaseWieldedBooty(class AActor* Vendor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CompanyNPCInterface.PurchaseWieldedBooty");

	UCompanyNPCInterface_PurchaseWieldedBooty_Params params;
	params.Vendor = Vendor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.CompanyNPCInterface.CanPurchaseBootyOfType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EBootyTypes> BootType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UCompanyNPCInterface::CanPurchaseBootyOfType(TEnumAsByte<Athena_EBootyTypes> BootType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CompanyNPCInterface.CanPurchaseBootyOfType");

	UCompanyNPCInterface_CanPurchaseBootyOfType_Params params;
	params.BootType = BootType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCompanyNPCInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCompanyNPCInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDoesCompanyNPCNameContainStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UDoesCompanyNPCNameContainStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void UNPCIdAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCIdAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UAmmoChangeEffect::AfterRead()
{
	UAmmoBaseEffect::AfterRead();

}

void UAmmoChangeEffect::BeforeDelete()
{
	UAmmoBaseEffect::BeforeDelete();

}

void UBlockInteractEffect::AfterRead()
{
	UAmmoBaseEffect::AfterRead();

	READ_PTR_FULL(OwningActor, AActor);
}

void UBlockInteractEffect::BeforeDelete()
{
	UAmmoBaseEffect::BeforeDelete();

	DELE_PTR_FULL(OwningActor);
}

void UVaultKeyMappingDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVaultKeyMappingDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UVaultTableMaterialSetDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UVaultTableMaterialSetDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.LockableInterface.TakeKey
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* ULockableInterface::TakeKey()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockableInterface.TakeKey");

	ULockableInterface_TakeKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LockableInterface.Relock
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           InShouldFlush                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ULockableInterface::Relock(bool InShouldFlush)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockableInterface.Relock");

	ULockableInterface_Relock_Params params;
	params.InShouldFlush = InShouldFlush;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LockableInterface.OpenLock
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AItemInfo*               KeyItem                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         SourceAttachParent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SourceAttachSocket             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActionSource                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULockableInterface::OpenLock(class AItemInfo* KeyItem, class USceneComponent* SourceAttachParent, const struct FName& SourceAttachSocket, class AActor* ActionSource)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockableInterface.OpenLock");

	ULockableInterface_OpenLock_Params params;
	params.KeyItem = KeyItem;
	params.SourceAttachParent = SourceAttachParent;
	params.SourceAttachSocket = SourceAttachSocket;
	params.ActionSource = ActionSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LockableInterface.Lock
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          Locks                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper)
void ULockableInterface::Lock(TArray<class UClass*> Locks)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockableInterface.Lock");

	ULockableInterface_Lock_Params params;
	params.Locks = Locks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LockableInterface.IsLocked
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULockableInterface::IsLocked()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockableInterface.IsLocked");

	ULockableInterface_IsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULockableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULockableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.LockComponent.SetLockKeyMeshAttachParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         InAttachParent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULockComponent::SetLockKeyMeshAttachParent(class USceneComponent* InAttachParent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockComponent.SetLockKeyMeshAttachParent");

	ULockComponent_SetLockKeyMeshAttachParent_Params params;
	params.InAttachParent = InAttachParent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LockComponent.Multicast_UseKey
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AItemInfo*               KeyItem                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            LockIdx                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*         SourceAttachParent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FName                   SourceAttachSocket             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULockComponent::Multicast_UseKey(class AItemInfo* KeyItem, int LockIdx, class USceneComponent* SourceAttachParent, const struct FName& SourceAttachSocket)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockComponent.Multicast_UseKey");

	ULockComponent_Multicast_UseKey_Params params;
	params.KeyItem = KeyItem;
	params.LockIdx = LockIdx;
	params.SourceAttachParent = SourceAttachParent;
	params.SourceAttachSocket = SourceAttachSocket;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LockComponent.Initialise
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActionRulesComponent*   InActionRules                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ULockComponent::Initialise(class UActionRulesComponent* InActionRules)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockComponent.Initialise");

	ULockComponent_Initialise_Params params;
	params.InActionRules = InActionRules;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.LockComponent.Client_SetupLocks
// (Final, Native, Private)
void ULockComponent::Client_SetupLocks()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LockComponent.Client_SetupLocks");

	ULockComponent_Client_SetupLocks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ULockComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(KeyUsedToUnlock, UClass);
	READ_PTR_FULL(LockKeyMeshAttachParent, USceneComponent);
	READ_PTR_FULL(UnlockInputId, UClass);
	READ_PTR_FULL(ActionRules, UActionRulesComponent);
	READ_PTR_FULL(AssociatedOwnerObject, AActor);
}

void ULockComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(KeyUsedToUnlock);
	DELE_PTR_FULL(LockKeyMeshAttachParent);
	DELE_PTR_FULL(UnlockInputId);
	DELE_PTR_FULL(ActionRules);
	DELE_PTR_FULL(AssociatedOwnerObject);
}

void UAmmoStoreMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UAmmoStoreMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UCargoRunCrateMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UCargoRunCrateMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UItemHealthMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UItemHealthMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UItemInfoHealthMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UItemInfoHealthMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void ULockMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void ULockMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UOpenableItemMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UOpenableItemMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UStorageContainerMetaGenerator::AfterRead()
{
	UItemSnapshotMetaGenerator::AfterRead();

}

void UStorageContainerMetaGenerator::BeforeDelete()
{
	UItemSnapshotMetaGenerator::BeforeDelete();

}

void UItemSnapshotSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UItemSnapshotSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UCollectorsChestInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCollectorsChestInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWeightedGoldRewardsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UWeightedGoldRewardsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void APivotAnimatedMechanismAction::AfterRead()
{
	ASimpleAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(Pivot, USceneComponent);
}

void APivotAnimatedMechanismAction::BeforeDelete()
{
	ASimpleAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(Pivot);
}

// Function Athena.MechanismInteractionComponent.OnRadiusCollisionEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismInteractionComponent::OnRadiusCollisionEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismInteractionComponent.OnRadiusCollisionEndOverlap");

	UMechanismInteractionComponent_OnRadiusCollisionEndOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismInteractionComponent.OnRadiusCollisionBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UMechanismInteractionComponent::OnRadiusCollisionBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismInteractionComponent.OnRadiusCollisionBeginOverlap");

	UMechanismInteractionComponent_OnRadiusCollisionBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismInteractionComponent.OnComplexCollisionEndOverlap
// (Final, Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismInteractionComponent::OnComplexCollisionEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismInteractionComponent.OnComplexCollisionEndOverlap");

	UMechanismInteractionComponent_OnComplexCollisionEndOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismInteractionComponent.OnComplexCollisionBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UMechanismInteractionComponent::OnComplexCollisionBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismInteractionComponent.OnComplexCollisionBeginOverlap");

	UMechanismInteractionComponent_OnComplexCollisionBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismInteractionComponent.AddComplexCollisionShape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     InCollisionShape               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismInteractionComponent::AddComplexCollisionShape(class UPrimitiveComponent* InCollisionShape)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismInteractionComponent.AddComplexCollisionShape");

	UMechanismInteractionComponent_AddComplexCollisionShape_Params params;
	params.InCollisionShape = InCollisionShape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismInteractionComponent::AfterRead()
{
	UShapeComponent::AfterRead();

}

void UMechanismInteractionComponent::BeforeDelete()
{
	UShapeComponent::BeforeDelete();

}

void UMeshMaterialLoadListenerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeshMaterialLoadListenerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SpikeMechanismAction.OnComplexCollisionShapeBeginOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASpikeMechanismAction::OnComplexCollisionShapeBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpikeMechanismAction.OnComplexCollisionShapeBeginOverlap");

	ASpikeMechanismAction_OnComplexCollisionShapeBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SpikeMechanismAction.Blueprint_PreInitializeAnimationState
// (Event, Protected, BlueprintEvent)
void ASpikeMechanismAction::Blueprint_PreInitializeAnimationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpikeMechanismAction.Blueprint_PreInitializeAnimationState");

	ASpikeMechanismAction_Blueprint_PreInitializeAnimationState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SpikeMechanismAction.AddMaterialAnimatedMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UMeshComponent*          AnimatedMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASpikeMechanismAction::AddMaterialAnimatedMesh(class UMeshComponent* AnimatedMesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpikeMechanismAction.AddMaterialAnimatedMesh");

	ASpikeMechanismAction_AddMaterialAnimatedMesh_Params params;
	params.AnimatedMesh = AnimatedMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASpikeMechanismAction::AfterRead()
{
	APivotAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(MechanismInteractionComponent, UMechanismInteractionComponent);
}

void ASpikeMechanismAction::BeforeDelete()
{
	APivotAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(MechanismInteractionComponent);
}

void USwingMechanismInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USwingMechanismInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.SwingMechanismAction.OnComplexCollisionShapeBeginOverlap
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASwingMechanismAction::OnComplexCollisionShapeBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingMechanismAction.OnComplexCollisionShapeBeginOverlap");

	ASwingMechanismAction_OnComplexCollisionShapeBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwingMechanismAction.Blueprint_PreInitializeAnimationState
// (Event, Protected, BlueprintEvent)
void ASwingMechanismAction::Blueprint_PreInitializeAnimationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingMechanismAction.Blueprint_PreInitializeAnimationState");

	ASwingMechanismAction_Blueprint_PreInitializeAnimationState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SwingMechanismAction.AddMaterialAnimatedMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UMeshComponent*          AnimatedMesh                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASwingMechanismAction::AddMaterialAnimatedMesh(class UMeshComponent* AnimatedMesh)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SwingMechanismAction.AddMaterialAnimatedMesh");

	ASwingMechanismAction_AddMaterialAnimatedMesh_Params params;
	params.AnimatedMesh = AnimatedMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASwingMechanismAction::AfterRead()
{
	APivotAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(MechanismInteractionComponent, UMechanismInteractionComponent);
}

void ASwingMechanismAction::BeforeDelete()
{
	APivotAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(MechanismInteractionComponent);
}

void AIntentBasedContinuousAnimatedMechanismAction::AfterRead()
{
	ABaseContinuousAnimatedMechanismAction::AfterRead();

	READ_PTR_FULL(IntentBasedMechanismActionComponent, UIntentBasedMechanismActionComponent);
}

void AIntentBasedContinuousAnimatedMechanismAction::BeforeDelete()
{
	ABaseContinuousAnimatedMechanismAction::BeforeDelete();

	DELE_PTR_FULL(IntentBasedMechanismActionComponent);
}

void UBlueprintMechanismResetComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UBlueprintMechanismResetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void ASpikeMechanismActionProxy::AfterRead()
{
	APivotAnimatedMechanismActionProxy::AfterRead();

}

void ASpikeMechanismActionProxy::BeforeDelete()
{
	APivotAnimatedMechanismActionProxy::BeforeDelete();

}

void ACapstanMechanismTriggerProxy::AfterRead()
{
	AMechanismElementProxy::AfterRead();

}

void ACapstanMechanismTriggerProxy::BeforeDelete()
{
	AMechanismElementProxy::BeforeDelete();

}

void AIgnitableMechanismTriggerProxy::AfterRead()
{
	AMechanismElementProxy::AfterRead();

	READ_PTR_FULL(RecipientResponseList, UStatusRecipientResponseList);
}

void AIgnitableMechanismTriggerProxy::BeforeDelete()
{
	AMechanismElementProxy::BeforeDelete();

	DELE_PTR_FULL(RecipientResponseList);
}

void APressurePlateMechanismProgressTrigger::AfterRead()
{
	APressurePlateMechanismTriggerBase::AfterRead();

}

void APressurePlateMechanismProgressTrigger::BeforeDelete()
{
	APressurePlateMechanismTriggerBase::BeforeDelete();

}

void UMechanismsSettings::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(MaterialMap, UClass);
}

void UMechanismsSettings::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(MaterialMap);
}

// Function Athena.MechanismTriggerComponent.OnRep_TriggerState
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismTriggerComponent::OnRep_TriggerState(TEnumAsByte<Athena_EMechanismTriggerState> PreviousState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerComponent.OnRep_TriggerState");

	UMechanismTriggerComponent_OnRep_TriggerState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismTriggerComponent.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismTriggerComponent::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismTriggerComponent.OnMechanismActionStateChanged");

	UMechanismTriggerComponent_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismTriggerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMechanismTriggerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UCapstanMechanismTriggerComponent::AfterRead()
{
	UMechanismTriggerComponent::AfterRead();

}

void UCapstanMechanismTriggerComponent::BeforeDelete()
{
	UMechanismTriggerComponent::BeforeDelete();

}

void USignalMechanismTargetComponent::AfterRead()
{
	UMechanismTriggerComponent::AfterRead();

}

void USignalMechanismTargetComponent::BeforeDelete()
{
	UMechanismTriggerComponent::BeforeDelete();

}

// Function Athena.OneShotToggleCollisionAction.SetBlockingVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AOneShotToggleCollisionAction::SetBlockingVolume(class UPrimitiveComponent* InComponent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotToggleCollisionAction.SetBlockingVolume");

	AOneShotToggleCollisionAction_SetBlockingVolume_Params params;
	params.InComponent = InComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OneShotToggleCollisionAction.OnReset
// (Final, Native, Private)
void AOneShotToggleCollisionAction::OnReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotToggleCollisionAction.OnReset");

	AOneShotToggleCollisionAction_OnReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OneShotToggleCollisionAction.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AOneShotToggleCollisionAction::OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotToggleCollisionAction.OnOverlapEnd");

	AOneShotToggleCollisionAction_OnOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OneShotToggleCollisionAction.OnOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void AOneShotToggleCollisionAction::OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotToggleCollisionAction.OnOverlapBegin");

	AOneShotToggleCollisionAction_OnOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OneShotToggleCollisionAction.OnMechanismActionStateChanged
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AOneShotToggleCollisionAction::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotToggleCollisionAction.OnMechanismActionStateChanged");

	AOneShotToggleCollisionAction_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AOneShotToggleCollisionAction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CollisionActionRoot, USceneComponent);
	READ_PTR_FULL(BlockingPrimitive, UPrimitiveComponent);
	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
	READ_PTR_FULL(KnockbackArrowComponent, UArrowComponent);
}

void AOneShotToggleCollisionAction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CollisionActionRoot);
	DELE_PTR_FULL(BlockingPrimitive);
	DELE_PTR_FULL(MechanismActionComponent);
	DELE_PTR_FULL(KnockbackArrowComponent);
}

// Function Athena.PlaceableReactionMechanismAction.TriggerReactionInternal
// (Final, Native, Private)
void APlaceableReactionMechanismAction::TriggerReactionInternal()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlaceableReactionMechanismAction.TriggerReactionInternal");

	APlaceableReactionMechanismAction_TriggerReactionInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlaceableReactionMechanismAction.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActionInstigator               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlaceableReactionMechanismAction::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* ActionInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlaceableReactionMechanismAction.OnMechanismActionStateChanged");

	APlaceableReactionMechanismAction_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.ActionInstigator = ActionInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APlaceableReactionMechanismAction::AfterRead()
{
	APlaceableReaction::AfterRead();

	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
}

void APlaceableReactionMechanismAction::BeforeDelete()
{
	APlaceableReaction::BeforeDelete();

	DELE_PTR_FULL(MechanismActionComponent);
}

// Function Athena.PulleyMechanism.SetUnconnectedActorToTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InUnconnectedActorToTrack      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APulleyMechanism::SetUnconnectedActorToTrack(class AActor* InUnconnectedActorToTrack)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PulleyMechanism.SetUnconnectedActorToTrack");

	APulleyMechanism_SetUnconnectedActorToTrack_Params params;
	params.InUnconnectedActorToTrack = InUnconnectedActorToTrack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PulleyMechanism.SetCameraTracksMechanismsBeingPulled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InCameraTracksMechanismsBeingPulled (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void APulleyMechanism::SetCameraTracksMechanismsBeingPulled(bool InCameraTracksMechanismsBeingPulled)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PulleyMechanism.SetCameraTracksMechanismsBeingPulled");

	APulleyMechanism_SetCameraTracksMechanismsBeingPulled_Params params;
	params.InCameraTracksMechanismsBeingPulled = InCameraTracksMechanismsBeingPulled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APulleyMechanism::AfterRead()
{
	AControllablePulley::AfterRead();

	READ_PTR_FULL(PulleyMesh, UStaticMeshComponent);
	READ_PTR_FULL(PulleyMechanismTriggerComponent, UIntentBasedMechanismTriggerComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
	READ_PTR_FULL(UnconnectedActorToTrack, AActor);
	READ_PTR_FULL(AnalogControls, UClass);
}

void APulleyMechanism::BeforeDelete()
{
	AControllablePulley::BeforeDelete();

	DELE_PTR_FULL(PulleyMesh);
	DELE_PTR_FULL(PulleyMechanismTriggerComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(UnconnectedActorToTrack);
	DELE_PTR_FULL(AnalogControls);
}

void UScorchStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UScorchStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.SignalMechanism.SetSignalActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Active                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ASignalMechanism::SetSignalActive(bool Active)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SignalMechanism.SetSignalActive");

	ASignalMechanism_SetSignalActive_Params params;
	params.Active = Active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SignalMechanism.IsSignalActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ASignalMechanism::IsSignalActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SignalMechanism.IsSignalActive");

	ASignalMechanism_IsSignalActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ASignalMechanism::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Root, USceneComponent);
	READ_PTR_FULL(Arrow, UArrowComponent);
}

void ASignalMechanism::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Root);
	DELE_PTR_FULL(Arrow);
}

// Function Athena.SpawnAIWaveMechanismAction.OnSpawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASpawnAIWaveMechanismAction::OnSpawn(class APawn* Pawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpawnAIWaveMechanismAction.OnSpawn");

	ASpawnAIWaveMechanismAction_OnSpawn_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SpawnAIWaveMechanismAction.OnDespawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_ECharacterDeathType> DeathType                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASpawnAIWaveMechanismAction::OnDespawn(class APawn* Pawn, TEnumAsByte<Athena_ECharacterDeathType> DeathType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpawnAIWaveMechanismAction.OnDespawn");

	ASpawnAIWaveMechanismAction_OnDespawn_Params params;
	params.Pawn = Pawn;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SpawnAIWaveMechanismAction.OnActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASpawnAIWaveMechanismAction::OnActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpawnAIWaveMechanismAction.OnActionStateChanged");

	ASpawnAIWaveMechanismAction_OnActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SpawnAIWaveMechanismAction.OnActionReset
// (Final, Native, Private)
void ASpawnAIWaveMechanismAction::OnActionReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SpawnAIWaveMechanismAction.OnActionReset");

	ASpawnAIWaveMechanismAction_OnActionReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASpawnAIWaveMechanismAction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
	READ_PTR_FULL(ProgressiveWavesSpawnerTemplate, UAIProgressiveWavesSpawner);
	READ_PTR_FULL(OnePlayerCrewSpawnerTemplateOverride, UAIProgressiveWavesSpawner);
	READ_PTR_FULL(TwoPlayerCrewSpawnerTemplateOverride, UAIProgressiveWavesSpawner);
	READ_PTR_FULL(ThreePlayerCrewSpawnerTemplateOverride, UAIProgressiveWavesSpawner);
	READ_PTR_FULL(FourOrMorePlayerCrewSpawnerTemplateOverride, UAIProgressiveWavesSpawner);
	READ_PTR_FULL(ActorWithTargetAIRegion, AActor);
	READ_PTR_FULL(ProximityPlayerTracker, UAIProximityPlayerTracker);
	READ_PTR_FULL(MusicZoneComponent, UAISpawnerMusicZoneComponent);
}

void ASpawnAIWaveMechanismAction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismActionComponent);
	DELE_PTR_FULL(ProgressiveWavesSpawnerTemplate);
	DELE_PTR_FULL(OnePlayerCrewSpawnerTemplateOverride);
	DELE_PTR_FULL(TwoPlayerCrewSpawnerTemplateOverride);
	DELE_PTR_FULL(ThreePlayerCrewSpawnerTemplateOverride);
	DELE_PTR_FULL(FourOrMorePlayerCrewSpawnerTemplateOverride);
	DELE_PTR_FULL(ActorWithTargetAIRegion);
	DELE_PTR_FULL(ProximityPlayerTracker);
	DELE_PTR_FULL(MusicZoneComponent);
}

void USpectacleMechanismInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USpectacleMechanismInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStoneFaceGlowComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(FullToEmptyGlowCurve, UCurveFloat);
	READ_PTR_FULL(EmptyToFullGlowCurve, UCurveFloat);
}

void UStoneFaceGlowComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(FullToEmptyGlowCurve);
	DELE_PTR_FULL(EmptyToFullGlowCurve);
}

// Function Athena.TripwireMechanismTrigger.OnTripwireStateChangedOnServer
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismTriggerState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATripwireMechanismTrigger::OnTripwireStateChangedOnServer(TEnumAsByte<Athena_EMechanismTriggerState> PreviousState, TEnumAsByte<Athena_EMechanismTriggerState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TripwireMechanismTrigger.OnTripwireStateChangedOnServer");

	ATripwireMechanismTrigger_OnTripwireStateChangedOnServer_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TripwireMechanismTrigger.OnTripwireStateChangedOnClient
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismTriggerState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismTriggerState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATripwireMechanismTrigger::OnTripwireStateChangedOnClient(TEnumAsByte<Athena_EMechanismTriggerState> PreviousState, TEnumAsByte<Athena_EMechanismTriggerState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TripwireMechanismTrigger.OnTripwireStateChangedOnClient");

	ATripwireMechanismTrigger_OnTripwireStateChangedOnClient_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TripwireMechanismTrigger.OnCollisionWithTriggerBox
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ATripwireMechanismTrigger::OnCollisionWithTriggerBox(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TripwireMechanismTrigger.OnCollisionWithTriggerBox");

	ATripwireMechanismTrigger_OnCollisionWithTriggerBox_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATripwireMechanismTrigger::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(MechanismTriggerComponent, UMechanismTriggerComponent);
	READ_PTR_FULL(BoxCollisionThatTriggersWireSnap, UBoxComponent);
	READ_PTR_FULL(WireStaticMesh, UStaticMeshComponent);
}

void ATripwireMechanismTrigger::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(MechanismTriggerComponent);
	DELE_PTR_FULL(BoxCollisionThatTriggersWireSnap);
	DELE_PTR_FULL(WireStaticMesh);
}

void UBattleElevatorEventRoomPhasesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UBattleElevatorEventRoomPhasesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.MapTableTestFunctions.ZoomOut
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ZoomValue                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMapTableTestFunctions::STATIC_ZoomOut(class AMapTable* MapTable, float ZoomValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.ZoomOut");

	UMapTableTestFunctions_ZoomOut_Params params;
	params.MapTable = MapTable;
	params.ZoomValue = ZoomValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.ZoomIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ZoomValue                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMapTableTestFunctions::STATIC_ZoomIn(class AMapTable* MapTable, float ZoomValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.ZoomIn");

	UMapTableTestFunctions_ZoomIn_Params params;
	params.MapTable = MapTable;
	params.ZoomValue = ZoomValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.SetMinZoom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MinValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMapTableTestFunctions::STATIC_SetMinZoom(class AMapTable* MapTable, float MinValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.SetMinZoom");

	UMapTableTestFunctions_SetMinZoom_Params params;
	params.MapTable = MapTable;
	params.MinValue = MinValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.SetMinPan
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D               MinValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UMapTableTestFunctions::STATIC_SetMinPan(class AMapTable* MapTable, const struct FVector2D& MinValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.SetMinPan");

	UMapTableTestFunctions_SetMinPan_Params params;
	params.MapTable = MapTable;
	params.MinValue = MinValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.SetMaxZoom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          MaxValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMapTableTestFunctions::STATIC_SetMaxZoom(class AMapTable* MapTable, float MaxValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.SetMaxZoom");

	UMapTableTestFunctions_SetMaxZoom_Params params;
	params.MapTable = MapTable;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.SetMaxPan
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D               MaxValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UMapTableTestFunctions::STATIC_SetMaxPan(class AMapTable* MapTable, const struct FVector2D& MaxValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.SetMaxPan");

	UMapTableTestFunctions_SetMaxPan_Params params;
	params.MapTable = MapTable;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.PanY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          PanValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMapTableTestFunctions::STATIC_PanY(class AMapTable* MapTable, float PanValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.PanY");

	UMapTableTestFunctions_PanY_Params params;
	params.MapTable = MapTable;
	params.PanValue = PanValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.PanX
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          PanValue                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMapTableTestFunctions::STATIC_PanX(class AMapTable* MapTable, float PanValue)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.PanX");

	UMapTableTestFunctions_PanX_Params params;
	params.MapTable = MapTable;
	params.PanValue = PanValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MapTableTestFunctions.IsUnderLocalControl
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMapTableTestFunctions::STATIC_IsUnderLocalControl(class AMapTable* MapTable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.IsUnderLocalControl");

	UMapTableTestFunctions_IsUnderLocalControl_Params params;
	params.MapTable = MapTable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MapTableTestFunctions.IsLocationDirty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMapTableTestFunctions::STATIC_IsLocationDirty(class AMapTable* MapTable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.IsLocationDirty");

	UMapTableTestFunctions_IsLocationDirty_Params params;
	params.MapTable = MapTable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MapTableTestFunctions.GetControlPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            PointIndex                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMapTableControlPoint*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AMapTableControlPoint* UMapTableTestFunctions::STATIC_GetControlPoint(class AMapTable* MapTable, int PointIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.GetControlPoint");

	UMapTableTestFunctions_GetControlPoint_Params params;
	params.MapTable = MapTable;
	params.PointIndex = PointIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MapTableTestFunctions.ConsumeLocationChange
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AMapTable*               MapTable                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWorldMapSetLocation    Event                          (Parm, OutParm)
void UMapTableTestFunctions::STATIC_ConsumeLocationChange(class AMapTable* MapTable, struct FWorldMapSetLocation* Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MapTableTestFunctions.ConsumeLocationChange");

	UMapTableTestFunctions_ConsumeLocationChange_Params params;
	params.MapTable = MapTable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;

}


void UMapTableTestFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UMapTableTestFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UMapTableTogglePinNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UMapTableTogglePinNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UMapTableToggleTooltipNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UMapTableToggleTooltipNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UMastRepairableComponent::AfterRead()
{
	URepairableComponent::AfterRead();

}

void UMastRepairableComponent::BeforeDelete()
{
	URepairableComponent::BeforeDelete();

}

// Function Athena.MastHinge.SetHingeTransform
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              NewTransform                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
void UMastHinge::SetHingeTransform(const struct FTransform& NewTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MastHinge.SetHingeTransform");

	UMastHinge_SetHingeTransform_Params params;
	params.NewTransform = NewTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MastHinge.RotateTransformAroundTheHinge
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform              TransformToRotate              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// float                          PitchAngle                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform UMastHinge::RotateTransformAroundTheHinge(const struct FTransform& TransformToRotate, float PitchAngle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MastHinge.RotateTransformAroundTheHinge");

	UMastHinge_RotateTransformAroundTheHinge_Params params;
	params.TransformToRotate = TransformToRotate;
	params.PitchAngle = PitchAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MastHinge.GetTransformRelativeToTheHinge
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform              TransformToMakeRelative        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform UMastHinge::GetTransformRelativeToTheHinge(const struct FTransform& TransformToMakeRelative)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MastHinge.GetTransformRelativeToTheHinge");

	UMastHinge_GetTransformRelativeToTheHinge_Params params;
	params.TransformToMakeRelative = TransformToMakeRelative;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MastHinge.GetHingeTransformBP
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform              OutTransform                   (Parm, OutParm, IsPlainOldData, NoDestructor)
void UMastHinge::GetHingeTransformBP(struct FTransform* OutTransform)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MastHinge.GetHingeTransformBP");

	UMastHinge_GetHingeTransformBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;

}


// Function Athena.MastHinge.CreateAndSetHingeTransform
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          HingeHeight                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DistanceFromCentre             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          DirectionAngle                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMastHinge::CreateAndSetHingeTransform(float HingeHeight, float DistanceFromCentre, float DirectionAngle)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MastHinge.CreateAndSetHingeTransform");

	UMastHinge_CreateAndSetHingeTransform_Params params;
	params.HingeHeight = HingeHeight;
	params.DistanceFromCentre = DistanceFromCentre;
	params.DirectionAngle = DirectionAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMastHinge::AfterRead()
{
	UObject::AfterRead();

}

void UMastHinge::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.MaterialInformationServiceBlueprintFunctions.GetVFXInformationForSurface
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EPhysicalSurface> SurfaceType                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMaterialInformationVFXData VFXSurfaceData                 (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMaterialInformationServiceBlueprintFunctions::STATIC_GetVFXInformationForSurface(class UObject* WorldContextObject, TEnumAsByte<Engine_EPhysicalSurface> SurfaceType, struct FMaterialInformationVFXData* VFXSurfaceData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MaterialInformationServiceBlueprintFunctions.GetVFXInformationForSurface");

	UMaterialInformationServiceBlueprintFunctions_GetVFXInformationForSurface_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SurfaceType = SurfaceType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (VFXSurfaceData != nullptr)
		*VFXSurfaceData = params.VFXSurfaceData;


	return params.ReturnValue;
}


// Function Athena.MaterialInformationServiceBlueprintFunctions.GetAudioInformationForSurface
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Engine_EPhysicalSurface> SurfaceType                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMaterialInformationAudioData AudioSurfaceData               (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UMaterialInformationServiceBlueprintFunctions::STATIC_GetAudioInformationForSurface(class UObject* WorldContextObject, TEnumAsByte<Engine_EPhysicalSurface> SurfaceType, struct FMaterialInformationAudioData* AudioSurfaceData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MaterialInformationServiceBlueprintFunctions.GetAudioInformationForSurface");

	UMaterialInformationServiceBlueprintFunctions_GetAudioInformationForSurface_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SurfaceType = SurfaceType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (AudioSurfaceData != nullptr)
		*AudioSurfaceData = params.AudioSurfaceData;


	return params.ReturnValue;
}


void UMaterialInformationServiceBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UMaterialInformationServiceBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.MatineeUtility.Multicast_BroadcastStop
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AMatineeActor*           MatineeActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMatineeUtility::Multicast_BroadcastStop(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.Multicast_BroadcastStop");

	AMatineeUtility_Multicast_BroadcastStop_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.Multicast_BroadcastSetPosition
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AMatineeActor*           MatineeActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InterpolationPosition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Jump                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMatineeUtility::Multicast_BroadcastSetPosition(class AMatineeActor* MatineeActor, float InterpolationPosition, bool Jump)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.Multicast_BroadcastSetPosition");

	AMatineeUtility_Multicast_BroadcastSetPosition_Params params;
	params.MatineeActor = MatineeActor;
	params.InterpolationPosition = InterpolationPosition;
	params.Jump = Jump;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.Multicast_BroadcastPlay
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AMatineeActor*           MatineeActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMatineeUtility::Multicast_BroadcastPlay(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.Multicast_BroadcastPlay");

	AMatineeUtility_Multicast_BroadcastPlay_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.HandleCharacterEndPlay
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Engine_EEndPlayReason> EndPlayReason                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMatineeUtility::HandleCharacterEndPlay(TEnumAsByte<Engine_EEndPlayReason> EndPlayReason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.HandleCharacterEndPlay");

	AMatineeUtility_HandleCharacterEndPlay_Params params;
	params.EndPlayReason = EndPlayReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.HandleCharacterDestroyed
// (Final, Native, Private)
void AMatineeUtility::HandleCharacterDestroyed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.HandleCharacterDestroyed");

	AMatineeUtility_HandleCharacterDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.BroadcastStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatineeActor*           MatineeActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMatineeUtility::BroadcastStop(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.BroadcastStop");

	AMatineeUtility_BroadcastStop_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.BroadcastSetPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatineeActor*           MatineeActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InterpolationPosition          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           Jump                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMatineeUtility::BroadcastSetPosition(class AMatineeActor* MatineeActor, float InterpolationPosition, bool Jump)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.BroadcastSetPosition");

	AMatineeUtility_BroadcastSetPosition_Params params;
	params.MatineeActor = MatineeActor;
	params.InterpolationPosition = InterpolationPosition;
	params.Jump = Jump;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MatineeUtility.BroadcastPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatineeActor*           MatineeActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AMatineeUtility::BroadcastPlay(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MatineeUtility.BroadcastPlay");

	AMatineeUtility_BroadcastPlay_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMatineeUtility::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(BoundCharacter, AAthenaPlayerCharacter);
}

void AMatineeUtility::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(BoundCharacter);
}

void UMaximumTrackedActorTypePopulationSpawnRequirement::AfterRead()
{
	USpawnRequirement::AfterRead();

}

void UMaximumTrackedActorTypePopulationSpawnRequirement::BeforeDelete()
{
	USpawnRequirement::BeforeDelete();

}

void UMeleeAttackFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UMeleeAttackFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UMeleeAttackLockOnComponentSettings::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(CameraModifierSettings, ULockOnCameraModifierSettings);
}

void UMeleeAttackLockOnComponentSettings::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(CameraModifierSettings);
}

void UMeleeAttackLockOnComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(ComponentSettings, UMeleeAttackLockOnComponentSettings);
	READ_PTR_FULL(LockOnCameraModifier, ULockOnCameraModifier);
}

void UMeleeAttackLockOnComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(ComponentSettings);
	DELE_PTR_FULL(LockOnCameraModifier);
}

void UMeleeAttackProcessorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMeleeAttackProcessorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.MeleeAttackProcessorComponent.Multicast_RespondToHit
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// struct FMeleeAttackHitResponseData HitResponseData                (ConstParm, Parm, ReferenceParm, ContainsInstancedReference)
void UMeleeAttackProcessorComponent::Multicast_RespondToHit(const struct FMeleeAttackHitResponseData& HitResponseData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeAttackProcessorComponent.Multicast_RespondToHit");

	UMeleeAttackProcessorComponent_Multicast_RespondToHit_Params params;
	params.HitResponseData = HitResponseData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeleeAttackProcessorComponent.Multicast_AttackInterrupted
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UMeleeAttackDataAsset*   AttackCompleted                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMeleeAttackInterruptReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMeleeAttackProcessorComponent::Multicast_AttackInterrupted(class UMeleeAttackDataAsset* AttackCompleted, TEnumAsByte<Athena_EMeleeAttackInterruptReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeAttackProcessorComponent.Multicast_AttackInterrupted");

	UMeleeAttackProcessorComponent_Multicast_AttackInterrupted_Params params;
	params.AttackCompleted = AttackCompleted;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMeleeAttackProcessorComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UMeleeAttackProcessorComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UMeleeAttackProcessorComponentMock::AfterRead()
{
	UMeleeAttackProcessorComponent::AfterRead();

}

void UMeleeAttackProcessorComponentMock::BeforeDelete()
{
	UMeleeAttackProcessorComponent::BeforeDelete();

}

// Function Athena.MeleeBlockingActionStateId.PushCharacterIntoMeleeBlockingActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                          BlockMovementTime              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMeleeBlockingActionStateId::STATIC_PushCharacterIntoMeleeBlockingActionState(class AActor* Character, class UClass* InputID, float BlockMovementTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeBlockingActionStateId.PushCharacterIntoMeleeBlockingActionState");

	UMeleeBlockingActionStateId_PushCharacterIntoMeleeBlockingActionState_Params params;
	params.Character = Character;
	params.InputID = InputID;
	params.BlockMovementTime = BlockMovementTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeleeBlockingActionStateId.PopCharacterOutOfMeleeBlockingActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMeleeBlockingActionStateId::STATIC_PopCharacterOutOfMeleeBlockingActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeBlockingActionStateId.PopCharacterOutOfMeleeBlockingActionState");

	UMeleeBlockingActionStateId_PopCharacterOutOfMeleeBlockingActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMeleeBlockingActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UMeleeBlockingActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

// Function Athena.MeleeBlockingCompositeInputHandler.OnDodge
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UMeleeBlockingCompositeInputHandler::OnDodge()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeBlockingCompositeInputHandler.OnDodge");

	UMeleeBlockingCompositeInputHandler_OnDodge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UMeleeBlockingCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AAthenaCharacter);
}

void UMeleeBlockingCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UMeleeChargeAfterEndStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UMeleeChargeAfterEndStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void UMeleeChargeEndStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void UMeleeChargeEndStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

// Function Athena.MeleeItemActionComponent.Server_RequestAttack
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// TEnumAsByte<Athena_EMeleeWeaponAttackType> InType                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InIndex                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                         InTimeStamp                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 InLocation                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                InRotation                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGuid                   InId                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void UMeleeItemActionComponent::Server_RequestAttack(TEnumAsByte<Athena_EMeleeWeaponAttackType> InType, int InIndex, double InTimeStamp, const struct FVector& InLocation, const struct FRotator& InRotation, const struct FGuid& InId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeItemActionComponent.Server_RequestAttack");

	UMeleeItemActionComponent_Server_RequestAttack_Params params;
	params.InType = InType;
	params.InIndex = InIndex;
	params.InTimeStamp = InTimeStamp;
	params.InLocation = InLocation;
	params.InRotation = InRotation;
	params.InId = InId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeleeItemActionComponent.Multicast_TriggerAttack
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// TEnumAsByte<Athena_EMeleeWeaponAttackType> InType                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            InIndex                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 InLocation                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                InRotation                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UMeleeItemActionComponent::Multicast_TriggerAttack(TEnumAsByte<Athena_EMeleeWeaponAttackType> InType, int InIndex, const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeItemActionComponent.Multicast_TriggerAttack");

	UMeleeItemActionComponent_Multicast_TriggerAttack_Params params;
	params.InType = InType;
	params.InIndex = InIndex;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMeleeItemActionComponent::AfterRead()
{
	UItemActionComponent::AfterRead();

	READ_PTR_FULL(TrailParticleSystem_FP, UParticleSystemComponent);
	READ_PTR_FULL(TrailParticleSystem_TP, UParticleSystemComponent);
	READ_PTR_FULL(WeaponData, UMeleeWeaponDataAsset);
	READ_PTR_FULL(WieldersAttackProcessor, UMeleeAttackProcessorComponent);
	READ_PTR_FULL(WieldersInventoryManipulator, UInventoryManipulatorComponent);
}

void UMeleeItemActionComponent::BeforeDelete()
{
	UItemActionComponent::BeforeDelete();

	DELE_PTR_FULL(TrailParticleSystem_FP);
	DELE_PTR_FULL(TrailParticleSystem_TP);
	DELE_PTR_FULL(WeaponData);
	DELE_PTR_FULL(WieldersAttackProcessor);
	DELE_PTR_FULL(WieldersInventoryManipulator);
}

// Function Athena.MeleeWeapon.Server_RequestAttack
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// TEnumAsByte<Athena_EMeleeWeaponAttackType> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                         TimeStamp                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 AttackLocation                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                AttackRotation                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGuid                   AttackId                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void AMeleeWeapon::Server_RequestAttack(TEnumAsByte<Athena_EMeleeWeaponAttackType> Type, int Index, double TimeStamp, const struct FVector& AttackLocation, const struct FRotator& AttackRotation, const struct FGuid& AttackId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeWeapon.Server_RequestAttack");

	AMeleeWeapon_Server_RequestAttack_Params params;
	params.Type = Type;
	params.Index = Index;
	params.TimeStamp = TimeStamp;
	params.AttackLocation = AttackLocation;
	params.AttackRotation = AttackRotation;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeleeWeapon.OnBlockedAttack
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FEventBlocked           Event                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
void AMeleeWeapon::OnBlockedAttack(const struct FEventBlocked& Event)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeWeapon.OnBlockedAttack");

	AMeleeWeapon_OnBlockedAttack_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeleeWeapon.Multicast_TriggerAttack
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// TEnumAsByte<Athena_EMeleeWeaponAttackType> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 AttackLocation                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                AttackRotation                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMeleeWeapon::Multicast_TriggerAttack(TEnumAsByte<Athena_EMeleeWeaponAttackType> Type, int Index, const struct FVector& AttackLocation, const struct FRotator& AttackRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeWeapon.Multicast_TriggerAttack");

	AMeleeWeapon_Multicast_TriggerAttack_Params params;
	params.Type = Type;
	params.Index = Index;
	params.AttackLocation = AttackLocation;
	params.AttackRotation = AttackRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MeleeWeapon.GetIndexForSpecialAttackNotification
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  InNotificationInputId          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AMeleeWeapon::GetIndexForSpecialAttackNotification(class UClass* InNotificationInputId)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeWeapon.GetIndexForSpecialAttackNotification");

	AMeleeWeapon_GetIndexForSpecialAttackNotification_Params params;
	params.InNotificationInputId = InNotificationInputId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.MeleeWeapon.Client_RequestAttackResponse
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// bool                           Accepted                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AMeleeWeapon::Client_RequestAttackResponse(bool Accepted)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MeleeWeapon.Client_RequestAttackResponse");

	AMeleeWeapon_Client_RequestAttackResponse_Params params;
	params.Accepted = Accepted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AMeleeWeapon::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(TrailParticleSystem_FP, UParticleSystemComponent);
	READ_PTR_FULL(TrailParticleSystem_TP, UParticleSystemComponent);
	READ_PTR_FULL(DataAsset, UMeleeWeaponDataAsset);
	READ_PTR_FULL(InventoryManipulator, UInventoryManipulatorComponent);
	READ_PTR_FULL(WieldersAttackProcessor, UMeleeAttackProcessorComponent);
}

void AMeleeWeapon::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(TrailParticleSystem_FP);
	DELE_PTR_FULL(TrailParticleSystem_TP);
	DELE_PTR_FULL(DataAsset);
	DELE_PTR_FULL(InventoryManipulator);
	DELE_PTR_FULL(WieldersAttackProcessor);
}

// Function Athena.PlayerMeleeWeapon.Server_SetWasBlockingAtStartOfAttack
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           InWasBlocking                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void APlayerMeleeWeapon::Server_SetWasBlockingAtStartOfAttack(bool InWasBlocking)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerMeleeWeapon.Server_SetWasBlockingAtStartOfAttack");

	APlayerMeleeWeapon_Server_SetWasBlockingAtStartOfAttack_Params params;
	params.InWasBlocking = InWasBlocking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerMeleeWeapon.Server_AttackAnimationStart
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<Athena_EMeleeWeaponAttackType> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlayerMeleeWeapon::Server_AttackAnimationStart(TEnumAsByte<Athena_EMeleeWeaponAttackType> Type, int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerMeleeWeapon.Server_AttackAnimationStart");

	APlayerMeleeWeapon_Server_AttackAnimationStart_Params params;
	params.Type = Type;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PlayerMeleeWeapon.Multicast_StartAttackAnimation
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// TEnumAsByte<Athena_EMeleeWeaponAttackType> Type                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APlayerMeleeWeapon::Multicast_StartAttackAnimation(TEnumAsByte<Athena_EMeleeWeaponAttackType> Type, int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerMeleeWeapon.Multicast_StartAttackAnimation");

	APlayerMeleeWeapon_Multicast_StartAttackAnimation_Params params;
	params.Type = Type;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APlayerMeleeWeapon::AfterRead()
{
	AMeleeWeapon::AfterRead();

}

void APlayerMeleeWeapon::BeforeDelete()
{
	AMeleeWeapon::BeforeDelete();

}

void UPiratePreviewComponent::AfterRead()
{
	UCoherentUIGTRenderToTextureLiveView::AfterRead();

	READ_PTR_FULL(Details, URenderToTextureSceneDetails);
}

void UPiratePreviewComponent::BeforeDelete()
{
	UCoherentUIGTRenderToTextureLiveView::BeforeDelete();

	DELE_PTR_FULL(Details);
}

void UPiratePreviewComponentFrontend::AfterRead()
{
	UPiratePreviewComponent::AfterRead();

	READ_PTR_FULL(AnimationDataStore, UAnimationDataStore);
	READ_PTR_FULL(ThirdPersonAnimSetDataId, UClass);
	READ_PTR_FULL(PirateSelectorComponent, UPirateSelector);
}

void UPiratePreviewComponentFrontend::BeforeDelete()
{
	UPiratePreviewComponent::BeforeDelete();

	DELE_PTR_FULL(AnimationDataStore);
	DELE_PTR_FULL(ThirdPersonAnimSetDataId);
	DELE_PTR_FULL(PirateSelectorComponent);
}

void UPiratePreviewComponentPirateProfileRTT::AfterRead()
{
	UPiratePreviewComponent::AfterRead();

	READ_PTR_FULL(OwningPlayerController, AController);
}

void UPiratePreviewComponentPirateProfileRTT::BeforeDelete()
{
	UPiratePreviewComponent::BeforeDelete();

	DELE_PTR_FULL(OwningPlayerController);
}

// Function Athena.PirateSelector.RequestOpenAccountPicker
// (Final, Native, Public, BlueprintCallable)
void UPirateSelector::RequestOpenAccountPicker()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.RequestOpenAccountPicker");

	UPirateSelector_RequestOpenAccountPicker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PirateSelector.QuitGame
// (Final, Native, Public, BlueprintCallable, Const)
void UPirateSelector::QuitGame()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.QuitGame");

	UPirateSelector_QuitGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PirateSelector.OnPirateGenerateRequested
// (Final, Native, Public, BlueprintCallable)
void UPirateSelector::OnPirateGenerateRequested()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.OnPirateGenerateRequested");

	UPirateSelector_OnPirateGenerateRequested_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PirateSelector.IsSelectedPirateSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPirateSelector::IsSelectedPirateSet()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.IsSelectedPirateSet");

	UPirateSelector_IsSelectedPirateSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PirateSelector.IsInPirateSelectionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPirateSelector::IsInPirateSelectionState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.IsInPirateSelectionState");

	UPirateSelector_IsInPirateSelectionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PirateSelector.GetSelectedPirateOutfit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UPirateSelector::GetSelectedPirateOutfit()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.GetSelectedPirateOutfit");

	UPirateSelector_GetSelectedPirateOutfit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PirateSelector.GetSelectedPirateDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPirateDescription      ReturnValue                    (Parm, OutParm, ReturnParm)
struct FPirateDescription UPirateSelector::GetSelectedPirateDescription()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.GetSelectedPirateDescription");

	UPirateSelector_GetSelectedPirateDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PirateSelector.EndCelebration
// (Final, Native, Public, BlueprintCallable)
void UPirateSelector::EndCelebration()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.EndCelebration");

	UPirateSelector_EndCelebration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PirateSelector.ConfirmAndSavePirate
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FPirateDescription      Description                    (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>          Outfit                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper)
void UPirateSelector::ConfirmAndSavePirate(const struct FPirateDescription& Description, TArray<class UClass*> Outfit)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.ConfirmAndSavePirate");

	UPirateSelector_ConfirmAndSavePirate_Params params;
	params.Description = Description;
	params.Outfit = Outfit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PirateSelector.CanPiratesSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPirateSelector::CanPiratesSpawn()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateSelector.CanPiratesSpawn");

	UPirateSelector_CanPiratesSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPirateSelector::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPirateSelector::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UPlanarReflectionPlaneComponent::AfterRead()
{
	USceneComponent::AfterRead();

}

void UPlanarReflectionPlaneComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

}

void UPlantAIFormDataAsset::AfterRead()
{
	UAthenaAIFormDataAsset::AfterRead();

}

void UPlantAIFormDataAsset::BeforeDelete()
{
	UAthenaAIFormDataAsset::BeforeDelete();

}

void UPremiumCatalogBundleSetDataAsset::AfterRead()
{
	UPremiumCatalogLandingPageItemDataAsset::AfterRead();

	READ_PTR_FULL(Offer, UCatalogOfferDataAsset);
}

void UPremiumCatalogBundleSetDataAsset::BeforeDelete()
{
	UPremiumCatalogLandingPageItemDataAsset::BeforeDelete();

	DELE_PTR_FULL(Offer);
}

void UPremiumCatalogItemSetDataAsset::AfterRead()
{
	UPremiumCatalogLandingPageItemDataAsset::AfterRead();

}

void UPremiumCatalogItemSetDataAsset::BeforeDelete()
{
	UPremiumCatalogLandingPageItemDataAsset::BeforeDelete();

}

void UPremiumCatalogCardsDataAsset::AfterRead()
{
	UPremiumCatalogLandingPageItemDataAsset::AfterRead();

}

void UPremiumCatalogCardsDataAsset::BeforeDelete()
{
	UPremiumCatalogLandingPageItemDataAsset::BeforeDelete();

}

void UPremiumCatalogOfferDataAsset::AfterRead()
{
	UPremiumCatalogLandingPageItemDataAsset::AfterRead();

	READ_PTR_FULL(Offer, UCatalogOfferDataAsset);
}

void UPremiumCatalogOfferDataAsset::BeforeDelete()
{
	UPremiumCatalogLandingPageItemDataAsset::BeforeDelete();

	DELE_PTR_FULL(Offer);
}

void AShipwreckService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(WreckClass, UClass);
	READ_PTR_FULL(SiteGenerator, UShipwreckSiteGeneratorComponent);
	READ_PTR_FULL(NameGenerator, UShipwreckNameGeneratorAbstract);
}

void AShipwreckService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(WreckClass);
	DELE_PTR_FULL(SiteGenerator);
	DELE_PTR_FULL(NameGenerator);
}

void UShipwreckSiteGeneratorNoneComponent::AfterRead()
{
	UShipwreckSiteGeneratorComponent::AfterRead();

}

void UShipwreckSiteGeneratorNoneComponent::BeforeDelete()
{
	UShipwreckSiteGeneratorComponent::BeforeDelete();

}

void UShipwreckSiteGeneratorRandomEditorComponent::AfterRead()
{
	UShipwreckSiteGeneratorRandomComponent::AfterRead();

}

void UShipwreckSiteGeneratorRandomEditorComponent::BeforeDelete()
{
	UShipwreckSiteGeneratorRandomComponent::BeforeDelete();

}

// Function Athena.ShipwreckSiteGeneratorSimulator.SetIslands
// (Final, Native, Public, BlueprintCallable)
void AShipwreckSiteGeneratorSimulator::SetIslands()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipwreckSiteGeneratorSimulator.SetIslands");

	AShipwreckSiteGeneratorSimulator_SetIslands_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipwreckSiteGeneratorSimulator.ResetShipwrecks
// (Final, Native, Public, BlueprintCallable)
void AShipwreckSiteGeneratorSimulator::ResetShipwrecks()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipwreckSiteGeneratorSimulator.ResetShipwrecks");

	AShipwreckSiteGeneratorSimulator_ResetShipwrecks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipwreckSiteGeneratorSimulator.ResetDebugDrawing
// (Final, Native, Public, BlueprintCallable)
void AShipwreckSiteGeneratorSimulator::ResetDebugDrawing()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipwreckSiteGeneratorSimulator.ResetDebugDrawing");

	AShipwreckSiteGeneratorSimulator_ResetDebugDrawing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShipwreckSiteGeneratorSimulator.GetIslands
// (Event, Protected, BlueprintEvent)
// Parameters:
// TArray<struct FIsland>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<struct FIsland> AShipwreckSiteGeneratorSimulator::GetIslands()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipwreckSiteGeneratorSimulator.GetIslands");

	AShipwreckSiteGeneratorSimulator_GetIslands_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShipwreckSiteGeneratorSimulator.GenerateWreck
// (Final, Native, Public, BlueprintCallable)
void AShipwreckSiteGeneratorSimulator::GenerateWreck()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShipwreckSiteGeneratorSimulator.GenerateWreck");

	AShipwreckSiteGeneratorSimulator_GenerateWreck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShipwreckSiteGeneratorSimulator::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(SiteGenerator, UShipwreckSiteGeneratorRandomEditorComponent);
}

void AShipwreckSiteGeneratorSimulator::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(SiteGenerator);
}

void UShipwreckTrackerService::AfterRead()
{
	UObject::AfterRead();

}

void UShipwreckTrackerService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UShockwaveDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void UShockwaveDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void ASkeletonActionStateCreatorDefinition::AfterRead()
{
	AActionStateCreatorDefinition::AfterRead();

}

void ASkeletonActionStateCreatorDefinition::BeforeDelete()
{
	AActionStateCreatorDefinition::BeforeDelete();

}

void USkeletonAICharacterAudioComponentParams::AfterRead()
{
	UDataAsset::AfterRead();

}

void USkeletonAICharacterAudioComponentParams::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void USkeletonAICharacterAudioComponent::AfterRead()
{
	UAICharacterAudioComponent::AfterRead();

	READ_PTR_FULL(AICharacterAudioParams, USkeletonAICharacterAudioComponentParams);
	READ_PTR_FULL(FootfallParams, USkeletonAudioFootfallControllerParams);
	READ_PTR_FULL(CachedStrategyID, UClass);
	READ_PTR_FULL(CachedWieldedItemCategory, UClass);
}

void USkeletonAICharacterAudioComponent::BeforeDelete()
{
	UAICharacterAudioComponent::BeforeDelete();

	DELE_PTR_FULL(AICharacterAudioParams);
	DELE_PTR_FULL(FootfallParams);
	DELE_PTR_FULL(CachedStrategyID);
	DELE_PTR_FULL(CachedWieldedItemCategory);
}

void USkeletonFortAIToggler::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(WorldContext, UObject);
}

void USkeletonFortAIToggler::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(WorldContext);
}

// Function Athena.SkeletonFortDoor.ResetDoor
// (Final, Native, Public, BlueprintCallable)
void ASkeletonFortDoor::ResetDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonFortDoor.ResetDoor");

	ASkeletonFortDoor_ResetDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkeletonFortDoor.OpenDoor
// (Final, Native, Public, BlueprintCallable)
void ASkeletonFortDoor::OpenDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonFortDoor.OpenDoor");

	ASkeletonFortDoor_OpenDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkeletonFortDoor.OnRep_ServerDoorState
// (Final, Native, Private)
void ASkeletonFortDoor::OnRep_ServerDoorState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonFortDoor.OnRep_ServerDoorState");

	ASkeletonFortDoor_OnRep_ServerDoorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASkeletonFortDoor::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(ItemToWieldToUnlockDoor, UClass);
	READ_PTR_FULL(DoorMesh, UStaticMeshComponent);
	READ_PTR_FULL(LandmarkReactionPlayer, ALandmarkReactionPlayer);
	READ_PTR_FULL(InteractionRegion, UInteractableComponent);
	READ_PTR_FULL(DoorUnlockSound, UWwiseEvent);
	READ_PTR_FULL(DoorUnlockPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(OverrideItemToWieldToUnlockDoor, UClass);
}

void ASkeletonFortDoor::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(ItemToWieldToUnlockDoor);
	DELE_PTR_FULL(DoorMesh);
	DELE_PTR_FULL(LandmarkReactionPlayer);
	DELE_PTR_FULL(InteractionRegion);
	DELE_PTR_FULL(DoorUnlockSound);
	DELE_PTR_FULL(DoorUnlockPool);
	DELE_PTR_FULL(OverrideItemToWieldToUnlockDoor);
}

// Function Athena.SkeletonThrone.Multicast_PlaySatOnStatFiredReactions
// (Final, Net, Native, Event, NetMulticast, Private)
void ASkeletonThrone::Multicast_PlaySatOnStatFiredReactions()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkeletonThrone.Multicast_PlaySatOnStatFiredReactions");

	ASkeletonThrone_Multicast_PlaySatOnStatFiredReactions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASkeletonThrone::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RootSceneComponent, USceneComponent);
	READ_PTR_FULL(MeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(EmoteCollisionComponent, UShapeComponent);
	READ_PTR_FULL(ReactionPlayer, ALandmarkReactionPlayer);
}

void ASkeletonThrone::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RootSceneComponent);
	DELE_PTR_FULL(MeshComponent);
	DELE_PTR_FULL(EmoteCollisionComponent);
	DELE_PTR_FULL(ReactionPlayer);
}

void AMultiCrewSkeletonThrone::AfterRead()
{
	ASkeletonThrone::AfterRead();

}

void AMultiCrewSkeletonThrone::BeforeDelete()
{
	ASkeletonThrone::BeforeDelete();

}

// Function Athena.SkellyFort.Multicast_OnWaveGroupSpawned
// (Final, RequiredAPI, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UWwiseEvent*             AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           IsFinalWave                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void ASkellyFort::Multicast_OnWaveGroupSpawned(class UWwiseEvent* AudioEvent, bool IsFinalWave)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkellyFort.Multicast_OnWaveGroupSpawned");

	ASkellyFort_Multicast_OnWaveGroupSpawned_Params params;
	params.AudioEvent = AudioEvent;
	params.IsFinalWave = IsFinalWave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SkellyFort.Multicast_OnFortComplete
// (Final, RequiredAPI, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class UWwiseEvent*             AudioEvent                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASkellyFort::Multicast_OnFortComplete(class UWwiseEvent* AudioEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkellyFort.Multicast_OnFortComplete");

	ASkellyFort_Multicast_OnFortComplete_Params params;
	params.AudioEvent = AudioEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASkellyFort::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(FortDoor, ASkeletonFortDoor);
	READ_PTR_FULL(FortVaultTeleportVolume, APanicTeleportVolume);
	READ_PTR_FULL(AIEncounterGenerationRecipeRankOrderListOverride, UAIEncounterGenerationRecipeRankOrderList);
	READ_PTR_FULL(Spawner, UAIBountySpawner);
	READ_PTR_FULL(SkullCloud, AGameplayEventSignal);
	READ_PTR_FULL(WaveGroupSpawnedEvent, UWwiseEvent);
	READ_PTR_FULL(FinalWaveGroupSpawnedEvent, UWwiseEvent);
	READ_PTR_FULL(FortCompleteEvent, UWwiseEvent);
	READ_PTR_FULL(ActionAudioZoneComponent, UOverlapTriggerComponent);
	READ_PTR_FULL(AnticipationAudioZoneComponent, UOverlapTriggerComponent);
	READ_PTR_FULL(ActiveFortType, UClass);
}

void ASkellyFort::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(FortDoor);
	DELE_PTR_FULL(FortVaultTeleportVolume);
	DELE_PTR_FULL(AIEncounterGenerationRecipeRankOrderListOverride);
	DELE_PTR_FULL(Spawner);
	DELE_PTR_FULL(SkullCloud);
	DELE_PTR_FULL(WaveGroupSpawnedEvent);
	DELE_PTR_FULL(FinalWaveGroupSpawnedEvent);
	DELE_PTR_FULL(FortCompleteEvent);
	DELE_PTR_FULL(ActionAudioZoneComponent);
	DELE_PTR_FULL(AnticipationAudioZoneComponent);
	DELE_PTR_FULL(ActiveFortType);
}

// Function Athena.SkellyFortOfTheDamned.OnRep_CurrentAudioState
// (Final, RequiredAPI, Native, Protected, HasOutParms)
// Parameters:
// TEnumAsByte<Athena_EDamnedFortAudioState> PreviousType                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ASkellyFortOfTheDamned::OnRep_CurrentAudioState(TEnumAsByte<Athena_EDamnedFortAudioState> PreviousType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SkellyFortOfTheDamned.OnRep_CurrentAudioState");

	ASkellyFortOfTheDamned_OnRep_CurrentAudioState_Params params;
	params.PreviousType = PreviousType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ASkellyFortOfTheDamned::AfterRead()
{
	ASkellyFort::AfterRead();

	READ_PTR_FULL(PreBossMusicZone, UMusicZoneComponent);
	READ_PTR_FULL(BossMusicZone, UMusicZoneComponent);
	READ_PTR_FULL(FortBellPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(FortBellOneshot, UWwiseEvent);
}

void ASkellyFortOfTheDamned::BeforeDelete()
{
	ASkellyFort::BeforeDelete();

	DELE_PTR_FULL(PreBossMusicZone);
	DELE_PTR_FULL(BossMusicZone);
	DELE_PTR_FULL(FortBellPool);
	DELE_PTR_FULL(FortBellOneshot);
}

void USkellyFortDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(GameEventType, UClass);
	READ_PTR_FULL(FortSignalClass, UClass);
	READ_PTR_FULL(BountyQuestDescData, UBountyQuestDescData);
	READ_PTR_FULL(NamedAIDataAsset, UNamedAIDataAsset);
	READ_PTR_FULL(CrewSkillset, UAISkillsetRankProgression);
	READ_PTR_FULL(CaptainSkillset, UAISkillsetRankProgression);
	READ_PTR_FULL(CrewItemDrops, UAIItemSpawnRankProgression);
	READ_PTR_FULL(CaptainItemDrops, UAIItemSpawnRankProgression);
	READ_PTR_FULL(FindSpawnPosQuery, UEnvQuery);
	READ_PTR_FULL(AISpawnerWhenFortInactive, UAISpawner);
	READ_PTR_FULL(CannonsAISpawnerWhenFortInactive, UAISpawner);
	READ_PTR_FULL(AISpawnerWhenFortActive, UAISpawner);
	READ_PTR_FULL(CannonsAISpawnerWhenFortActive, UAISpawner);
	READ_PTR_FULL(WaveSpawnSoundEffect, UWwiseEvent);
	READ_PTR_FULL(FinalWaveSpawnSoundEffect, UWwiseEvent);
	READ_PTR_FULL(FortCompleteSoundEffect, UWwiseEvent);
	READ_PTR_FULL(KeyItemToUnlockDoor, UClass);
	READ_PTR_FULL(KeySpawnData, UItemDescSpawnData);
}

void USkellyFortDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(GameEventType);
	DELE_PTR_FULL(FortSignalClass);
	DELE_PTR_FULL(BountyQuestDescData);
	DELE_PTR_FULL(NamedAIDataAsset);
	DELE_PTR_FULL(CrewSkillset);
	DELE_PTR_FULL(CaptainSkillset);
	DELE_PTR_FULL(CrewItemDrops);
	DELE_PTR_FULL(CaptainItemDrops);
	DELE_PTR_FULL(FindSpawnPosQuery);
	DELE_PTR_FULL(AISpawnerWhenFortInactive);
	DELE_PTR_FULL(CannonsAISpawnerWhenFortInactive);
	DELE_PTR_FULL(AISpawnerWhenFortActive);
	DELE_PTR_FULL(CannonsAISpawnerWhenFortActive);
	DELE_PTR_FULL(WaveSpawnSoundEffect);
	DELE_PTR_FULL(FinalWaveSpawnSoundEffect);
	DELE_PTR_FULL(FortCompleteSoundEffect);
	DELE_PTR_FULL(KeyItemToUnlockDoor);
	DELE_PTR_FULL(KeySpawnData);
}

void USkellyFortListDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void USkellyFortListDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void USkeletonFortTrackerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USkeletonFortTrackerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USkellyFortServiceInterface::AfterRead()
{
	USkeletonFortTrackerServiceInterface::AfterRead();

}

void USkellyFortServiceInterface::BeforeDelete()
{
	USkeletonFortTrackerServiceInterface::BeforeDelete();

}

void UStatusResponseVenom::AfterRead()
{
	UStatusResponse::AfterRead();

	READ_PTR_FULL(VenomSource, UClass);
}

void UStatusResponseVenom::BeforeDelete()
{
	UStatusResponse::BeforeDelete();

	DELE_PTR_FULL(VenomSource);
}

void UAshenLordSummonAIAbility::AfterRead()
{
	USummonAIAbility::AfterRead();

	READ_PTR_FULL(OwnerPawn, APawn);
	READ_PTR_FULL(FireShroudVFX, UVFXSpawnerComponent);
	READ_PTR_FULL(SetupAbilityParams, UAshenLordSummonAIAbilityParams);
}

void UAshenLordSummonAIAbility::BeforeDelete()
{
	USummonAIAbility::BeforeDelete();

	DELE_PTR_FULL(OwnerPawn);
	DELE_PTR_FULL(FireShroudVFX);
	DELE_PTR_FULL(SetupAbilityParams);
}

void UNPCOnSurfaceStatesDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UNPCOnSurfaceStatesDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void ATradeRoute::AfterRead()
{
	AActor::AfterRead();

}

void ATradeRoute::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UStandardAnchorDynamicsDesc::AfterRead()
{
	UBaseAnchorDynamicsDesc::AfterRead();

}

void UStandardAnchorDynamicsDesc::BeforeDelete()
{
	UBaseAnchorDynamicsDesc::BeforeDelete();

}

void UStandardHullDragDynamicsDesc::AfterRead()
{
	UBaseHullDragDynamicsDesc::AfterRead();

	READ_PTR_FULL(WaterDragScalarIfAllSailsUp, UCurveFloat);
	READ_PTR_FULL(WaterDragScalarIfInReef, UCurveFloat);
}

void UStandardHullDragDynamicsDesc::BeforeDelete()
{
	UBaseHullDragDynamicsDesc::BeforeDelete();

	DELE_PTR_FULL(WaterDragScalarIfAllSailsUp);
	DELE_PTR_FULL(WaterDragScalarIfInReef);
}

void UStandardRudderDynamicsDesc::AfterRead()
{
	UBaseRudderDynamicsDesc::AfterRead();

	READ_PTR_FULL(ShipSpeedToSteeringBoostCurve, UCurveFloat);
}

void UStandardRudderDynamicsDesc::BeforeDelete()
{
	UBaseRudderDynamicsDesc::BeforeDelete();

	DELE_PTR_FULL(ShipSpeedToSteeringBoostCurve);
}

void UPlayerActivityIconCatalogueDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPlayerActivityIconCatalogueDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.EncounterService.StopListeningForEncounters
// (Native, Public)
// Parameters:
// class AActor*                  EncounterListenerActor         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UEncounterService::StopListeningForEncounters(class AActor* EncounterListenerActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EncounterService.StopListeningForEncounters");

	UEncounterService_StopListeningForEncounters_Params params;
	params.EncounterListenerActor = EncounterListenerActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UEncounterService::AfterRead()
{
	UObject::AfterRead();

}

void UEncounterService::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UFeedableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFeedableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UFeedableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UFeedableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UFeedingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFeedingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.FeedingComponent.OnRep_ActorToFeedStruct
// (Final, Native, Private)
void UFeedingComponent::OnRep_ActorToFeedStruct()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FeedingComponent.OnRep_ActorToFeedStruct");

	UFeedingComponent_OnRep_ActorToFeedStruct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFeedingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(LastActorToBeFedBy, AActor);
}

void UFeedingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(LastActorToBeFedBy);
}

void UForceFeedbackCondition_LastPlayerToFeedPet::AfterRead()
{
	UForceFeedbackCondition::AfterRead();

}

void UForceFeedbackCondition_LastPlayerToFeedPet::BeforeDelete()
{
	UForceFeedbackCondition::BeforeDelete();

}

void USicknessInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USicknessInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStarvingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UStarvingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UStarvingComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UStarvingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UClusterStaticMeshComponent::AfterRead()
{
	UStaticMeshComponent::AfterRead();

	READ_PTR_FULL(ItemToSpawn, UClass);
	READ_PTR_FULL(ItemDescSpawnData, UItemDescSpawnData);
}

void UClusterStaticMeshComponent::BeforeDelete()
{
	UStaticMeshComponent::BeforeDelete();

	DELE_PTR_FULL(ItemToSpawn);
	DELE_PTR_FULL(ItemDescSpawnData);
}

void ACluster::AfterRead()
{
	AActor::AfterRead();

}

void ACluster::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UClusterDescription::AfterRead()
{
	UItemWithoutIconsDesc::AfterRead();

}

void UClusterDescription::BeforeDelete()
{
	UItemWithoutIconsDesc::BeforeDelete();

}

// Function Athena.Landmark.TriggerLandmarkReactionForNearbyPlayersExplicitList
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int                            LandmarkReactionIndex          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>          Players                        (Parm, ZeroConstructor)
void ALandmark::TriggerLandmarkReactionForNearbyPlayersExplicitList(int LandmarkReactionIndex, TArray<class AActor*> Players)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Landmark.TriggerLandmarkReactionForNearbyPlayersExplicitList");

	ALandmark_TriggerLandmarkReactionForNearbyPlayersExplicitList_Params params;
	params.LandmarkReactionIndex = LandmarkReactionIndex;
	params.Players = Players;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ALandmark::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AudioZoneComponent, UOverlapTriggerComponent);
}

void ALandmark::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AudioZoneComponent);
}

void ALandmarkSphere::AfterRead()
{
	ALandmark::AfterRead();

	READ_PTR_FULL(DefaultShape, UShapeComponent);
}

void ALandmarkSphere::BeforeDelete()
{
	ALandmark::BeforeDelete();

	DELE_PTR_FULL(DefaultShape);
}

void ALandmarkBox::AfterRead()
{
	ALandmark::AfterRead();

	READ_PTR_FULL(DefaultShape, UShapeComponent);
}

void ALandmarkBox::BeforeDelete()
{
	ALandmark::BeforeDelete();

	DELE_PTR_FULL(DefaultShape);
}

void ALandmarkCapsule::AfterRead()
{
	ALandmark::AfterRead();

	READ_PTR_FULL(DefaultShape, UShapeComponent);
}

void ALandmarkCapsule::BeforeDelete()
{
	ALandmark::BeforeDelete();

	DELE_PTR_FULL(DefaultShape);
}

void ULandmarkFrameworkSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void ULandmarkFrameworkSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

// Function Athena.LandmarkReactionInterface.StopReaction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULandmarkReactionInterface::StopReaction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LandmarkReactionInterface.StopReaction");

	ULandmarkReactionInterface_StopReaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.LandmarkReactionInterface.StartReaction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool ULandmarkReactionInterface::StartReaction()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.LandmarkReactionInterface.StartReaction");

	ULandmarkReactionInterface_StartReaction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ULandmarkReactionInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULandmarkReactionInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ALandmarkReactionPlayer::AfterRead()
{
	AActor::AfterRead();

}

void ALandmarkReactionPlayer::BeforeDelete()
{
	AActor::BeforeDelete();

}

void ULandmarkReactionTriggerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void ULandmarkReactionTriggerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIslandItemDataAsset::AfterRead()
{
	UGeneratedLocationsDataAsset::AfterRead();

}

void UIslandItemDataAsset::BeforeDelete()
{
	UGeneratedLocationsDataAsset::BeforeDelete();

}

void USunkenItemDataAsset::AfterRead()
{
	UIslandItemDataAsset::AfterRead();

}

void USunkenItemDataAsset::BeforeDelete()
{
	UIslandItemDataAsset::BeforeDelete();

}

void UWashedUpItemDataAsset::AfterRead()
{
	UIslandItemDataAsset::AfterRead();

}

void UWashedUpItemDataAsset::BeforeDelete()
{
	UIslandItemDataAsset::BeforeDelete();

}

void UIsAnotherCrewOnSameIslandStatCondition::AfterRead()
{
	UStatCondition::AfterRead();

}

void UIsAnotherCrewOnSameIslandStatCondition::BeforeDelete()
{
	UStatCondition::BeforeDelete();

}

void UIslandAirPocketComponentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UIslandAirPocketComponentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UMapSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UMapSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void ATreasureMapItemInfo::AfterRead()
{
	AItemInfo::AfterRead();

}

void ATreasureMapItemInfo::BeforeDelete()
{
	AItemInfo::BeforeDelete();

}

void UTreasureMapItemDesc::AfterRead()
{
	UItemWithoutIconsDesc::AfterRead();

}

void UTreasureMapItemDesc::BeforeDelete()
{
	UItemWithoutIconsDesc::BeforeDelete();

}

void USpawnPortalTaleStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(PortalDesc, UPortalDesc);
}

void USpawnPortalTaleStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(PortalDesc);
}

void UPortalTaleService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(Desc, UPortalTaleServiceDesc);
}

void UPortalTaleService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UPortalTaleServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

	READ_PTR_FULL(FallbackPortalDesc, UPortalDesc);
}

void UPortalTaleServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

	DELE_PTR_FULL(FallbackPortalDesc);
}

void UCrewMemberInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCrewMemberInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.CrewMembershipFunctions.GetCrewId
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGuid                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FGuid UCrewMembershipFunctions::STATIC_GetCrewId()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.CrewMembershipFunctions.GetCrewId");

	UCrewMembershipFunctions_GetCrewId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UCrewMembershipFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UCrewMembershipFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UCrewServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCrewServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UCrewSpawnLocationsInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCrewSpawnLocationsInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIsTargetCrewMemberStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsTargetCrewMemberStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

// Function Athena.AuxiliarySlotsInventoryEnablerInterface.ShouldDisplayItem
// (Native, Public, HasOutParms, Const)
// Parameters:
// class UClass*                  ItemToDisplay                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAuxiliarySlotsInventoryEnablerInterface::ShouldDisplayItem(class UClass* ItemToDisplay)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AuxiliarySlotsInventoryEnablerInterface.ShouldDisplayItem");

	UAuxiliarySlotsInventoryEnablerInterface_ShouldDisplayItem_Params params;
	params.ItemToDisplay = ItemToDisplay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AuxiliarySlotsInventoryEnablerInterface.OnAuxiliaryItemSelected
// (Native, Public)
// Parameters:
// class AActor*                  SelectedItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UAuxiliarySlotsInventoryEnablerInterface::OnAuxiliaryItemSelected(class AActor* SelectedItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AuxiliarySlotsInventoryEnablerInterface.OnAuxiliaryItemSelected");

	UAuxiliarySlotsInventoryEnablerInterface_OnAuxiliaryItemSelected_Params params;
	params.SelectedItem = SelectedItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AuxiliarySlotsInventoryEnablerInterface.GetPromptText
// (Native, Public, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)
struct FText UAuxiliarySlotsInventoryEnablerInterface::GetPromptText()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AuxiliarySlotsInventoryEnablerInterface.GetPromptText");

	UAuxiliarySlotsInventoryEnablerInterface_GetPromptText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AuxiliarySlotsInventoryEnablerInterface.GetCategoryFilter
// (Native, Public, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UAuxiliarySlotsInventoryEnablerInterface::GetCategoryFilter()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AuxiliarySlotsInventoryEnablerInterface.GetCategoryFilter");

	UAuxiliarySlotsInventoryEnablerInterface_GetCategoryFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAuxiliarySlotsInventoryEnablerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UAuxiliarySlotsInventoryEnablerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AConditionalStatTriggerArea::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AreaBoxComponent, UBoxComponent);
	READ_PTR_FULL(RequiredInputId, UClass);
}

void AConditionalStatTriggerArea::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AreaBoxComponent);
	DELE_PTR_FULL(RequiredInputId);
}

void UConsumableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UConsumableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UDestroyableUsableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UDestroyableUsableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemPlacedOnActorReceiverInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemPlacedOnActorReceiverInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void ADestroyItemWhenPlacedOnActor::AfterRead()
{
	AActor::AfterRead();

}

void ADestroyItemWhenPlacedOnActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UDropLargeWieldedItemNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UDropLargeWieldedItemNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

// Function Athena.WieldableInterface.GetItemInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UWieldableInterface::GetItemInfo()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableInterface.GetItemInfo");

	UWieldableInterface_GetItemInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableInterface.GetAnimationKey
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UWieldableInterface::GetAnimationKey()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableInterface.GetAnimationKey");

	UWieldableInterface_GetAnimationKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableInterface.GetActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UWieldableInterface::GetActor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableInterface.GetActor");

	UWieldableInterface_GetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWieldableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWieldableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UForceFeedbackCondition_LocalPlayerUsingWieldable::AfterRead()
{
	UForceFeedbackCondition::AfterRead();

}

void UForceFeedbackCondition_LocalPlayerUsingWieldable::BeforeDelete()
{
	UForceFeedbackCondition::BeforeDelete();

}

void UHandOverableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UHandOverableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UHoldToUseInputVisualModifier::AfterRead()
{
	UObject::AfterRead();

}

void UHoldToUseInputVisualModifier::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UHoldToUseInputVisualModifier_RandomiseAlternate::AfterRead()
{
	UHoldToUseInputVisualModifier::AfterRead();

}

void UHoldToUseInputVisualModifier_RandomiseAlternate::BeforeDelete()
{
	UHoldToUseInputVisualModifier::BeforeDelete();

}

void AInterpolatingItem::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(FirstPersonMesh, UStaticMeshMemoryConstraintComponent);
	READ_PTR_FULL(ThirdPersonMesh, UStaticMeshMemoryConstraintComponent);
	READ_PTR_FULL(FromParent1P, USceneComponent);
	READ_PTR_FULL(FromParent3P, USceneComponent);
	READ_PTR_FULL(ToParent, USceneComponent);
}

void AInterpolatingItem::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(FirstPersonMesh);
	DELE_PTR_FULL(ThirdPersonMesh);
	DELE_PTR_FULL(FromParent1P);
	DELE_PTR_FULL(FromParent3P);
	DELE_PTR_FULL(ToParent);
}

// Function Athena.InventoryItemInterface.SetItemType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  InType                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryItemInterface::SetItemType(TEnumAsByte<Athena_EItemType> InType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.SetItemType");

	UInventoryItemInterface_SetItemType_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryItemInterface.OnAddedToInventory
// (Native, Public, BlueprintCallable, Const)
void UInventoryItemInterface::OnAddedToInventory()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.OnAddedToInventory");

	UInventoryItemInterface_OnAddedToInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryItemInterface.GetItemType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EItemType> UInventoryItemInterface::GetItemType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.GetItemType");

	UInventoryItemInterface_GetItemType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetIconURL
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UInventoryItemInterface::GetIconURL()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.GetIconURL");

	UInventoryItemInterface_GetIconURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetIconScale
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UInventoryItemInterface::GetIconScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.GetIconScale");

	UInventoryItemInterface_GetIconScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetIconRotation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UInventoryItemInterface::GetIconRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.GetIconRotation");

	UInventoryItemInterface_GetIconRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetBackgroundImageURL
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UInventoryItemInterface::GetBackgroundImageURL()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemInterface.GetBackgroundImageURL");

	UInventoryItemInterface_GetBackgroundImageURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInventoryItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInventoryItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.InventoryItemComponent.SetItemType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  InType                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryItemComponent::SetItemType(TEnumAsByte<Athena_EItemType> InType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.SetItemType");

	UInventoryItemComponent_SetItemType_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryItemComponent.SetIconURL
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FStringAssetReference   InIconURL                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void UInventoryItemComponent::SetIconURL(const struct FStringAssetReference& InIconURL)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.SetIconURL");

	UInventoryItemComponent_SetIconURL_Params params;
	params.InIconURL = InIconURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryItemComponent.SetIconRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InIconRotation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryItemComponent::SetIconRotation(float InIconRotation)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.SetIconRotation");

	UInventoryItemComponent_SetIconRotation_Params params;
	params.InIconRotation = InIconRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryItemComponent.OnAddedToInventory
// (Native, Public, BlueprintCallable, Const)
void UInventoryItemComponent::OnAddedToInventory()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.OnAddedToInventory");

	UInventoryItemComponent_OnAddedToInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryItemComponent.GetItemType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EItemType> UInventoryItemComponent::GetItemType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.GetItemType");

	UInventoryItemComponent_GetItemType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetIconURL
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UInventoryItemComponent::GetIconURL()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.GetIconURL");

	UInventoryItemComponent_GetIconURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetIconScale
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UInventoryItemComponent::GetIconScale()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.GetIconScale");

	UInventoryItemComponent_GetIconScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetIconRotation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UInventoryItemComponent::GetIconRotation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.GetIconRotation");

	UInventoryItemComponent_GetIconRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetBackgroundImageURL
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UInventoryItemComponent::GetBackgroundImageURL()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryItemComponent.GetBackgroundImageURL");

	UInventoryItemComponent_GetBackgroundImageURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInventoryItemComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UInventoryItemComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.InventoryManipulatorInterface.WieldItemByActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           UnwieldFast                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWieldItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWieldItemReturnCode> UInventoryManipulatorInterface::WieldItemByActor(class AActor* Item, bool UnwieldFast)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.WieldItemByActor");

	UInventoryManipulatorInterface_WieldItemByActor_Params params;
	params.Item = Item;
	params.UnwieldFast = UnwieldFast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.ToggleWieldItem
// (Native, Public, BlueprintCallable)
void UInventoryManipulatorInterface::ToggleWieldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.ToggleWieldItem");

	UInventoryManipulatorInterface_ToggleWieldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.RemoveItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::RemoveItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.RemoveItem");

	UInventoryManipulatorInterface_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.RemoveAndUnwieldItem
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::RemoveAndUnwieldItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.RemoveAndUnwieldItem");

	UInventoryManipulatorInterface_RemoveAndUnwieldItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.QuickSelectItemOfType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            TypedItemIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorInterface::QuickSelectItemOfType(TEnumAsByte<Athena_EItemType> ItemType, int TypedItemIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.QuickSelectItemOfType");

	UInventoryManipulatorInterface_QuickSelectItemOfType_Params params;
	params.ItemType = ItemType;
	params.TypedItemIndex = TypedItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.QuickSelectItemOfCategory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            IndexIntoCategory              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorInterface::QuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.QuickSelectItemOfCategory");

	UInventoryManipulatorInterface_QuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.QuickSelectItem
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorInterface::QuickSelectItem(int ItemIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.QuickSelectItem");

	UInventoryManipulatorInterface_QuickSelectItem_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.PickUpItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           AndWield                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ShouldNotifyClients            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::PickUpItem(class AItemInfo* Item, bool AndWield, bool ShouldNotifyClients)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.PickUpItem");

	UInventoryManipulatorInterface_PickUpItem_Params params;
	params.Item = Item;
	params.AndWield = AndWield;
	params.ShouldNotifyClients = ShouldNotifyClients;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.IsIdle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::IsIdle()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.IsIdle");

	UInventoryManipulatorInterface_IsIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.GetNumberOfItemsOfItemCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UInventoryManipulatorInterface::GetNumberOfItemsOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.GetNumberOfItemsOfItemCategory");

	UInventoryManipulatorInterface_GetNumberOfItemsOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.GetItems
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper)
TArray<class UClass*> UInventoryManipulatorInterface::GetItems()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.GetItems");

	UInventoryManipulatorInterface_GetItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.GetCurrentItemIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UInventoryManipulatorInterface::GetCurrentItemIndex()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.GetCurrentItemIndex");

	UInventoryManipulatorInterface_GetCurrentItemIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.DropWieldedItem
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EDropItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EDropItemReturnCode> UInventoryManipulatorInterface::DropWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.DropWieldedItem");

	UInventoryManipulatorInterface_DropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.CycleItemUp
// (Native, Public, BlueprintCallable)
void UInventoryManipulatorInterface::CycleItemUp()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.CycleItemUp");

	UInventoryManipulatorInterface_CycleItemUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.CycleItemType
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<Athena_EItemType>  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UInventoryManipulatorInterface::CycleItemType(TEnumAsByte<Athena_EItemType> ItemType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.CycleItemType");

	UInventoryManipulatorInterface_CycleItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.CycleItemDown
// (Native, Public, BlueprintCallable)
void UInventoryManipulatorInterface::CycleItemDown()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.CycleItemDown");

	UInventoryManipulatorInterface_CycleItemDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.CycleItemCategory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Category                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UInventoryManipulatorInterface::CycleItemCategory(class UClass* Category)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.CycleItemCategory");

	UInventoryManipulatorInterface_CycleItemCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.InventoryManipulatorInterface.ConsumeItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::ConsumeItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.ConsumeItem");

	UInventoryManipulatorInterface_ConsumeItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.CanDropWieldedItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<Athena_EDropItemReturnCode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EDropItemReturnCode> UInventoryManipulatorInterface::CanDropWieldedItem()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.CanDropWieldedItem");

	UInventoryManipulatorInterface_CanDropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.CanAddItemOfItemCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemSlot                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TEnumAsByte<Athena_ECanAddItemQueryResult> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_ECanAddItemQueryResult> UInventoryManipulatorInterface::CanAddItemOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.CanAddItemOfItemCategory");

	UInventoryManipulatorInterface_CanAddItemOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.AddItemOfSubclass
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  InItem                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::AddItemOfSubclass(class UClass* InItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.AddItemOfSubclass");

	UInventoryManipulatorInterface_AddItemOfSubclass_Params params;
	params.InItem = InItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.AddItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AItemInfo*               Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UInventoryManipulatorInterface::AddItem(class AItemInfo* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.InventoryManipulatorInterface.AddItem");

	UInventoryManipulatorInterface_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UInventoryManipulatorInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInventoryManipulatorInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UIsItemOfClassStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

	READ_PTR_FULL(ItemType, UClass);
}

void UIsItemOfClassStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

	DELE_PTR_FULL(ItemType);
}

void UIsWieldingItemStatCondition::AfterRead()
{
	UTargetedStatCondition::AfterRead();

}

void UIsWieldingItemStatCondition::BeforeDelete()
{
	UTargetedStatCondition::BeforeDelete();

}

void URadialBlurItemActionEffect::AfterRead()
{
	UItemActionEffect::AfterRead();

	READ_PTR_FULL(MaterialInstance, UMaterialInterface);
}

void URadialBlurItemActionEffect::BeforeDelete()
{
	UItemActionEffect::BeforeDelete();

	DELE_PTR_FULL(MaterialInstance);
}

void UInvalidItemCategory::AfterRead()
{
	UItemCategory::AfterRead();

}

void UInvalidItemCategory::BeforeDelete()
{
	UItemCategory::BeforeDelete();

}

// Function Athena.ItemDropFunctions.OnItemDroppedOnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorDropped                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActorDroppedOn                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     SceneComponentDroppedOn        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UItemDropFunctions::STATIC_OnItemDroppedOnActor(class AActor* ActorDropped, class AActor* ActorDroppedOn, class UPrimitiveComponent* SceneComponentDroppedOn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemDropFunctions.OnItemDroppedOnActor");

	UItemDropFunctions_OnItemDroppedOnActor_Params params;
	params.ActorDropped = ActorDropped;
	params.ActorDroppedOn = ActorDroppedOn;
	params.SceneComponentDroppedOn = SceneComponentDroppedOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemDropFunctions.OnItemDestroyedWhenOnActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorDestroyed                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ActorDroppedOn                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UItemDropFunctions::STATIC_OnItemDestroyedWhenOnActor(class AActor* ActorDestroyed, class AActor* ActorDroppedOn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemDropFunctions.OnItemDestroyedWhenOnActor");

	UItemDropFunctions_OnItemDestroyedWhenOnActor_Params params;
	params.ActorDestroyed = ActorDestroyed;
	params.ActorDroppedOn = ActorDroppedOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ItemDropFunctions.DetermineDropPos
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  SrcActor                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  DroppedActor                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 InSpawnPos                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FDropItemParams         DropItemParams                 (ConstParm, Parm, OutParm, ReferenceParm)
// struct FHitResult              OutHit                         (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FHitResult>      OutSweepHits                   (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemDropFunctions::STATIC_DetermineDropPos(class AActor* SrcActor, class AActor* DroppedActor, const struct FVector& InSpawnPos, const struct FDropItemParams& DropItemParams, struct FHitResult* OutHit, TArray<struct FHitResult>* OutSweepHits)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemDropFunctions.DetermineDropPos");

	UItemDropFunctions_DetermineDropPos_Params params;
	params.SrcActor = SrcActor;
	params.DroppedActor = DroppedActor;
	params.InSpawnPos = InSpawnPos;
	params.DropItemParams = DropItemParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;
	if (OutSweepHits != nullptr)
		*OutSweepHits = params.OutSweepHits;


	return params.ReturnValue;
}


// Function Athena.ItemDropFunctions.CreateProxyItemAndDrop
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  SrcActor                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AItemInfo*               ItemInfo                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                 ReleasePos                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FDropItemParams         DropItemParams                 (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_EItemLifetimeManagement> ItemLifetimeManagement         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UItemDropFunctions::STATIC_CreateProxyItemAndDrop(class AActor* SrcActor, class AItemInfo* ItemInfo, const struct FVector& ReleasePos, const struct FDropItemParams& DropItemParams, TEnumAsByte<Athena_EItemLifetimeManagement> ItemLifetimeManagement)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemDropFunctions.CreateProxyItemAndDrop");

	UItemDropFunctions_CreateProxyItemAndDrop_Params params;
	params.SrcActor = SrcActor;
	params.ItemInfo = ItemInfo;
	params.ReleasePos = ReleasePos;
	params.DropItemParams = DropItemParams;
	params.ItemLifetimeManagement = ItemLifetimeManagement;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemDropFunctions.AreHitLocationsWithinTolerance
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitResult              HitOne                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FHitResult              HitTwo                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FDropItemParams         DropItemParams                 (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemDropFunctions::STATIC_AreHitLocationsWithinTolerance(const struct FHitResult& HitOne, const struct FHitResult& HitTwo, const struct FDropItemParams& DropItemParams)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemDropFunctions.AreHitLocationsWithinTolerance");

	UItemDropFunctions_AreHitLocationsWithinTolerance_Params params;
	params.HitOne = HitOne;
	params.HitTwo = HitTwo;
	params.DropItemParams = DropItemParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UItemDropFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UItemDropFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UItemDropperInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemDropperInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemEquipInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemEquipInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ItemFactoryFunctions.SpawnProxyItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  What                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              Where                          (Parm, IsPlainOldData, NoDestructor)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UItemFactoryFunctions::STATIC_SpawnProxyItem(class UObject* WorldContext, class UClass* What, const struct FTransform& Where)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemFactoryFunctions.SpawnProxyItem");

	UItemFactoryFunctions_SpawnProxyItem_Params params;
	params.WorldContext = WorldContext;
	params.What = What;
	params.Where = Where;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemFactoryFunctions.SpawnItemAsWieldable
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  What                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              Where                          (Parm, IsPlainOldData, NoDestructor)
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWieldableItem*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AWieldableItem* UItemFactoryFunctions::STATIC_SpawnItemAsWieldable(class UObject* WorldContext, class UClass* What, const struct FTransform& Where, class AActor* Owner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemFactoryFunctions.SpawnItemAsWieldable");

	UItemFactoryFunctions_SpawnItemAsWieldable_Params params;
	params.WorldContext = WorldContext;
	params.What = What;
	params.Where = Where;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemFactoryFunctions.SpawnItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  What                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FTransform              Where                          (Parm, IsPlainOldData, NoDestructor)
// class AItemInfo*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AItemInfo* UItemFactoryFunctions::STATIC_SpawnItem(class UObject* WorldContext, class UClass* What, const struct FTransform& Where)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemFactoryFunctions.SpawnItem");

	UItemFactoryFunctions_SpawnItem_Params params;
	params.WorldContext = WorldContext;
	params.What = What;
	params.Where = Where;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UItemFactoryFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UItemFactoryFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UItemKeepAliveSourceServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemKeepAliveSourceServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ItemPickupBlueprintFunctionLibrary.IsActorWieldingLargeItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  WieldingActor                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UItemPickupBlueprintFunctionLibrary::STATIC_IsActorWieldingLargeItem(class AActor* WieldingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemPickupBlueprintFunctionLibrary.IsActorWieldingLargeItem");

	UItemPickupBlueprintFunctionLibrary_IsActorWieldingLargeItem_Params params;
	params.WieldingActor = WieldingActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ItemPickupBlueprintFunctionLibrary.GetActorsWieldedItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  WieldingActor                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UItemPickupBlueprintFunctionLibrary::STATIC_GetActorsWieldedItem(class AActor* WieldingActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemPickupBlueprintFunctionLibrary.GetActorsWieldedItem");

	UItemPickupBlueprintFunctionLibrary_GetActorsWieldedItem_Params params;
	params.WieldingActor = WieldingActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UItemPickupBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UItemPickupBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UItemProxyLifetimeParentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemProxyLifetimeParentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemRarityInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemRarityInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UItemSettings::AfterRead()
{
	UDeveloperSettings::AfterRead();

}

void UItemSettings::BeforeDelete()
{
	UDeveloperSettings::BeforeDelete();

}

void UItemUserInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UItemUserInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.OneShotUsable.Trigger
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UOneShotUsable::Trigger(class UClass* InputID, class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotUsable.Trigger");

	UOneShotUsable_Trigger_Params params;
	params.InputID = InputID;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.OneShotUsable.CanTrigger
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  InTriggeringActor              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UOneShotUsable::CanTrigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.OneShotUsable.CanTrigger");

	UOneShotUsable_CanTrigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UOneShotUsable::AfterRead()
{
	UInterface::AfterRead();

}

void UOneShotUsable::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UOwnedByItemSpawnerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UOwnedByItemSpawnerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPickerUpperInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPickerUpperInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PickupableInterface.HandleDestroy
// (Native, Public)
void UPickupableInterface::HandleDestroy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PickupableInterface.HandleDestroy");

	UPickupableInterface_HandleDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPickupableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPickupableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UPickupableComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UPickupableComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UProxyItemInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UProxyItemInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ItemInteractionProxy.OnRep_AcquiredItemDesc
// (Final, Native, Private)
void AItemInteractionProxy::OnRep_AcquiredItemDesc()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ItemInteractionProxy.OnRep_AcquiredItemDesc");

	AItemInteractionProxy_OnRep_AcquiredItemDesc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AItemInteractionProxy::AfterRead()
{
	AItemProxy::AfterRead();

	READ_PTR_FULL(AcquiredItemDesc, UClass);
}

void AItemInteractionProxy::BeforeDelete()
{
	AItemProxy::BeforeDelete();

	DELE_PTR_FULL(AcquiredItemDesc);
}

void ASkeletalMeshItemProxy::AfterRead()
{
	AItemProxy::AfterRead();

}

void ASkeletalMeshItemProxy::BeforeDelete()
{
	AItemProxy::BeforeDelete();

}

void AStaticMeshItemProxy::AfterRead()
{
	AItemProxy::AfterRead();

}

void AStaticMeshItemProxy::BeforeDelete()
{
	AItemProxy::BeforeDelete();

}

void UPickupableTooltipCustomizerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPickupableTooltipCustomizerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PickupObjectActionStateId.PushCharacterIntoPickupObjectActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InPickupableObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UPickupObjectActionStateId::STATIC_PushCharacterIntoPickupObjectActionState(class AActor* InCharacter, class AActor* InPickupableObject)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PickupObjectActionStateId.PushCharacterIntoPickupObjectActionState");

	UPickupObjectActionStateId_PushCharacterIntoPickupObjectActionState_Params params;
	params.InCharacter = InCharacter;
	params.InPickupableObject = InPickupableObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPickupObjectActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UPickupObjectActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UPickUpObjectConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UPickUpObjectConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UPrimaryItemUseHeldNotificationInputId::AfterRead()
{
	UPrimaryItemUsePressedNotificationInputId::AfterRead();

}

void UPrimaryItemUseHeldNotificationInputId::BeforeDelete()
{
	UPrimaryItemUsePressedNotificationInputId::BeforeDelete();

}

void UQuickInventoryClientInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UQuickInventoryClientInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void USecondaryItemUseHeldNotificationInputId::AfterRead()
{
	USecondaryItemUsePressedNotificationInputId::AfterRead();

}

void USecondaryItemUseHeldNotificationInputId::BeforeDelete()
{
	USecondaryItemUsePressedNotificationInputId::BeforeDelete();

}

void USkeletalStashedMeshMemoryConstraintComponent::AfterRead()
{
	USkeletalMeshMemoryConstraintComponent::AfterRead();

}

void USkeletalStashedMeshMemoryConstraintComponent::BeforeDelete()
{
	USkeletalMeshMemoryConstraintComponent::BeforeDelete();

}

void UStatConditionProxyItemInfoTargetSelector::AfterRead()
{
	UStatConditionTargetSelector::AfterRead();

}

void UStatConditionProxyItemInfoTargetSelector::BeforeDelete()
{
	UStatConditionTargetSelector::BeforeDelete();

}

void UStatConditionWieldedItemInfoTargetSelector::AfterRead()
{
	UStatConditionTargetSelector::AfterRead();

}

void UStatConditionWieldedItemInfoTargetSelector::BeforeDelete()
{
	UStatConditionTargetSelector::BeforeDelete();

}

void UStaticStashedMeshMemoryConstraintComponent::AfterRead()
{
	UStaticMeshMemoryConstraintComponent::AfterRead();

}

void UStaticStashedMeshMemoryConstraintComponent::BeforeDelete()
{
	UStaticMeshMemoryConstraintComponent::BeforeDelete();

}

// Function Athena.UsableInterface.UpdateUsage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UUsableInterface::UpdateUsage(float DeltaTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableInterface.UpdateUsage");

	UUsableInterface_UpdateUsage_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UsableInterface.StopUsing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UUsableInterface::StopUsing(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableInterface.StopUsing");

	UUsableInterface_StopUsing_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UsableInterface.StartUsing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UUsableInterface::StartUsing(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableInterface.StartUsing");

	UUsableInterface_StartUsing_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.UsableInterface.IsInputBeingUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UUsableInterface::IsInputBeingUsed(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableInterface.IsInputBeingUsed");

	UUsableInterface_IsInputBeingUsed_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UsableInterface.IsBeingUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UUsableInterface::IsBeingUsed()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableInterface.IsBeingUsed");

	UUsableInterface_IsBeingUsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.UsableInterface.CanBeUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UClass*                  InputID                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UUsableInterface::CanBeUsed(class UClass* InputID)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.UsableInterface.CanBeUsed");

	UUsableInterface_CanBeUsed_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UUsableInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UUsableInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void APetCageSwitchMechanismTrigger::AfterRead()
{
	ASwitchMechanismTrigger::AfterRead();

}

void APetCageSwitchMechanismTrigger::BeforeDelete()
{
	ASwitchMechanismTrigger::BeforeDelete();

}

// Function Athena.PirateIdentityBlueprintFunctionLibrary.GetServicesScopeId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPirateIdentity         InPirateIdentity               (ConstParm, Parm, OutParm, ReferenceParm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
struct FString UPirateIdentityBlueprintFunctionLibrary::STATIC_GetServicesScopeId(const struct FPirateIdentity& InPirateIdentity)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateIdentityBlueprintFunctionLibrary.GetServicesScopeId");

	UPirateIdentityBlueprintFunctionLibrary_GetServicesScopeId_Params params;
	params.InPirateIdentity = InPirateIdentity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PirateIdentityBlueprintFunctionLibrary.GetPirateIdentity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  InPawn                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPirateIdentity         ReturnValue                    (Parm, OutParm, ReturnParm)
struct FPirateIdentity UPirateIdentityBlueprintFunctionLibrary::STATIC_GetPirateIdentity(class AActor* InPawn)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PirateIdentityBlueprintFunctionLibrary.GetPirateIdentity");

	UPirateIdentityBlueprintFunctionLibrary_GetPirateIdentity_Params params;
	params.InPawn = InPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPirateIdentityBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UPirateIdentityBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UPirateLegendCategory::AfterRead()
{
	UCategoryBase::AfterRead();

}

void UPirateLegendCategory::BeforeDelete()
{
	UCategoryBase::BeforeDelete();

}

void UPirateLegendDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UPirateLegendDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UPirateLegendSection::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(QuestDescription, UTaleQuestDescAsset);
}

void UPirateLegendSection::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(QuestDescription);
}

void AServiceStatusNotificationsService::AfterRead()
{
	AActor::AfterRead();

}

void AServiceStatusNotificationsService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void USetHiddenOnKeyTakenStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, USetHiddenOnKeyTakenStepDesc);
}

void USetHiddenOnKeyTakenStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void USetHiddenOnKeyTakenStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(LevelSequence, ULevelSequence);
}

void USetHiddenOnKeyTakenStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(LevelSequence);
}

void USetMechanismActionCutsceneActorStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USetMechanismActionCutsceneActorStepDesc);
}

void USetMechanismActionCutsceneActorStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USetMechanismActionCutsceneNameStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USetMechanismActionCutsceneNameStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

// Function Athena.SetMechanismActionStateStep.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void USetMechanismActionStateStep::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* Instigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SetMechanismActionStateStep.OnMechanismActionStateChanged");

	USetMechanismActionStateStep_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USetMechanismActionStateStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USetMechanismActionStateStepDesc);
}

void USetMechanismActionStateStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USetMechanismActionStateStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USetMechanismActionStateStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USetMechanismActivationModeStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, USetMechanismActivationModeStepDesc);
}

void USetMechanismActivationModeStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void USetMechanismActivationModeStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void USetMechanismActivationModeStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void USetSpawnProgressStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, USetSpawnProgressStepDesc);
}

void USetSpawnProgressStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void USteamAchievementPopUpSettings::AfterRead()
{
	UObject::AfterRead();

}

void USteamAchievementPopUpSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

void USteamImpactStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USteamImpactStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void AStorageCrateItemProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

	READ_PTR_FULL(RetractableComponent, URetractableComponent);
}

void AStorageCrateItemProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

	DELE_PTR_FULL(RetractableComponent);
}

// Function Athena.Storm.OnRep_AvoidAreaList
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<struct FStormAvoidanceArea> InPreviousAvoidAreaList        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
void AStorm::OnRep_AvoidAreaList(TArray<struct FStormAvoidanceArea> InPreviousAvoidAreaList)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Storm.OnRep_AvoidAreaList");

	AStorm_OnRep_AvoidAreaList_Params params;
	params.InPreviousAvoidAreaList = InPreviousAvoidAreaList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AStorm::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ExplosionComponent, UExplosionComponent);
	READ_PTR_FULL(WindZoneComponent, UWindZoneComponent);
	READ_PTR_FULL(RainZoneComponent, URainZoneComponent);
	READ_PTR_FULL(LightningComponent, ULightningComponent);
	READ_PTR_FULL(LightningManagerComponent, ULightningManagerComponent);
	READ_PTR_FULL(PressureZoneComponent, UAtmosphericPressureZoneComponent);
	READ_PTR_FULL(AngryWaterZoneComponent, UCalmWaterComponent);
	READ_PTR_FULL(BaseCloudMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(RainSheetOuterMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(RainSheetInnerMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(RingCloudMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(TopCloudMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(Params, UStormParams);
}

void AStorm::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ExplosionComponent);
	DELE_PTR_FULL(WindZoneComponent);
	DELE_PTR_FULL(RainZoneComponent);
	DELE_PTR_FULL(LightningComponent);
	DELE_PTR_FULL(LightningManagerComponent);
	DELE_PTR_FULL(PressureZoneComponent);
	DELE_PTR_FULL(AngryWaterZoneComponent);
	DELE_PTR_FULL(BaseCloudMeshComponent);
	DELE_PTR_FULL(RainSheetOuterMeshComponent);
	DELE_PTR_FULL(RainSheetInnerMeshComponent);
	DELE_PTR_FULL(RingCloudMeshComponent);
	DELE_PTR_FULL(TopCloudMeshComponent);
	DELE_PTR_FULL(Params);
}

void AStormService::AfterRead()
{
	AActor::AfterRead();

}

void AStormService::BeforeDelete()
{
	AActor::BeforeDelete();

}

void AStrongholdKey::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

}

void AStrongholdKey::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

}

void UPirateLegendSectionBundle::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPirateLegendSectionBundle::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPirateLegendSectionFilter::AfterRead()
{
	UDataAsset::AfterRead();

}

void UPirateLegendSectionFilter::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UPirateLegendTypeFilter::AfterRead()
{
	UPirateLegendSectionFilter::AfterRead();

}

void UPirateLegendTypeFilter::BeforeDelete()
{
	UPirateLegendSectionFilter::BeforeDelete();

}

void UPirateLegendWeightedItemDescSpawnDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(GemData, UItemSpawnData);
	READ_PTR_FULL(GemCollectorsChestData, UItemSpawnData);
}

void UPirateLegendWeightedItemDescSpawnDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(GemData);
	DELE_PTR_FULL(GemCollectorsChestData);
}

void URewardGenTaleQuestService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(SpawnData, UPirateLegendWeightedItemDescSpawnDataAsset);
}

void URewardGenTaleQuestService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(SpawnData);
}

void APiratePreviewActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CosmeticItemAnimationComponent, UCosmeticItemAnimationComponent);
	READ_PTR_FULL(CosmeticVfxComponent, UCosmeticVfxComponent);
	READ_PTR_FULL(PendingAnim, UAnimationAsset);
	READ_PTR_FULL(DefaultAnimation, UAnimationAsset);
	READ_PTR_FULL(LookAtSocket, USkeletalMeshSocket);
}

void APiratePreviewActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CosmeticItemAnimationComponent);
	DELE_PTR_FULL(CosmeticVfxComponent);
	DELE_PTR_FULL(PendingAnim);
	DELE_PTR_FULL(DefaultAnimation);
	DELE_PTR_FULL(LookAtSocket);
}

// Function Athena.PiratePreviewInterface.PreCreatePreview
// (Native, Public, BlueprintCallable)
void UPiratePreviewInterface::PreCreatePreview()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PiratePreviewInterface.PreCreatePreview");

	UPiratePreviewInterface_PreCreatePreview_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPiratePreviewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPiratePreviewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PlayerOceanAudioComponent.GetIsUnderwater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerOceanAudioComponent::GetIsUnderwater()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerOceanAudioComponent.GetIsUnderwater");

	UPlayerOceanAudioComponent_GetIsUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetIsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerOceanAudioComponent::GetIsPlaying()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerOceanAudioComponent.GetIsPlaying");

	UPlayerOceanAudioComponent_GetIsPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetIsOnIsland
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerOceanAudioComponent::GetIsOnIsland()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerOceanAudioComponent.GetIsOnIsland");

	UPlayerOceanAudioComponent_GetIsOnIsland_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetIsInDeepSeaRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPlayerOceanAudioComponent::GetIsInDeepSeaRegion()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerOceanAudioComponent.GetIsInDeepSeaRegion");

	UPlayerOceanAudioComponent_GetIsInDeepSeaRegion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetEmitterPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
struct FVector UPlayerOceanAudioComponent::GetEmitterPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PlayerOceanAudioComponent.GetEmitterPosition");

	UPlayerOceanAudioComponent_GetEmitterPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UPlayerOceanAudioComponent::AfterRead()
{
	USceneComponent::AfterRead();

	READ_PTR_FULL(WaterAudioEvent, UWwiseEvent);
	READ_PTR_FULL(WaterAudioStopEvent, UWwiseEvent);
	READ_PTR_FULL(WaterEmergeAudioEvent, UWwiseEvent);
	READ_PTR_FULL(WaterSubmergeAudioEvent, UWwiseEvent);
	READ_PTR_FULL(PlayerCharacter, AAthenaPlayerCharacter);
}

void UPlayerOceanAudioComponent::BeforeDelete()
{
	USceneComponent::BeforeDelete();

	DELE_PTR_FULL(WaterAudioEvent);
	DELE_PTR_FULL(WaterAudioStopEvent);
	DELE_PTR_FULL(WaterEmergeAudioEvent);
	DELE_PTR_FULL(WaterSubmergeAudioEvent);
	DELE_PTR_FULL(PlayerCharacter);
}

// Function Athena.TestPlayerPermissionsComponent.SetAllowExecuteOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           AllowAccess                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTestPlayerPermissionsComponent::SetAllowExecuteOnServer(bool AllowAccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestPlayerPermissionsComponent.SetAllowExecuteOnServer");

	UTestPlayerPermissionsComponent_SetAllowExecuteOnServer_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuButtonShortcutsAccess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           AllowAccess                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTestPlayerPermissionsComponent::SetAllowDebugMenuButtonShortcutsAccess(bool AllowAccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuButtonShortcutsAccess");

	UTestPlayerPermissionsComponent_SetAllowDebugMenuButtonShortcutsAccess_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuAccess
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           AllowAccess                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTestPlayerPermissionsComponent::SetAllowDebugMenuAccess(bool AllowAccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuAccess");

	UTestPlayerPermissionsComponent_SetAllowDebugMenuAccess_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TestPlayerPermissionsComponent.GrantDebugMenuPermissions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           AllowAccess                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTestPlayerPermissionsComponent::GrantDebugMenuPermissions(bool AllowAccess)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TestPlayerPermissionsComponent.GrantDebugMenuPermissions");

	UTestPlayerPermissionsComponent_GrantDebugMenuPermissions_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTestPlayerPermissionsComponent::AfterRead()
{
	UPlayerPermissionsComponent::AfterRead();

}

void UTestPlayerPermissionsComponent::BeforeDelete()
{
	UPlayerPermissionsComponent::BeforeDelete();

}

void APlayerPermissionsTestActor::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(PlayerPermissionsComponent, UPlayerPermissionsComponent);
}

void APlayerPermissionsTestActor::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(PlayerPermissionsComponent);
}

// Function Athena.ProjectileWeaponValidationFunctionLibrary.ClampAimPositionToWeapon
// (Final, Native, Static, Public, HasOutParms)
// Parameters:
// class AProjectileWeapon*       ProjectileWeapon               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FProjectileAim          InAim                          (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// double                         RewindTime                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FProjectileAim          ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference)
struct FProjectileAim UProjectileWeaponValidationFunctionLibrary::STATIC_ClampAimPositionToWeapon(class AProjectileWeapon* ProjectileWeapon, const struct FProjectileAim& InAim, double RewindTime)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ProjectileWeaponValidationFunctionLibrary.ClampAimPositionToWeapon");

	UProjectileWeaponValidationFunctionLibrary_ClampAimPositionToWeapon_Params params;
	params.ProjectileWeapon = ProjectileWeapon;
	params.InAim = InAim;
	params.RewindTime = RewindTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UProjectileWeaponValidationFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UProjectileWeaponValidationFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UPursuitCircleAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UPursuitCircleAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

// Function Athena.PuzzleConfigurationInterface.ResetToInitialConfigurationState
// (Native, Public, BlueprintCallable)
void UPuzzleConfigurationInterface::ResetToInitialConfigurationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleConfigurationInterface.ResetToInitialConfigurationState");

	UPuzzleConfigurationInterface_ResetToInitialConfigurationState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPuzzleConfigurationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPuzzleConfigurationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void APuzzleMechanism::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
}

void APuzzleMechanism::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(InteractableComponent);
}

// Function Athena.RotatingBlockPuzzle.OnRep_CurrentPosition
// (Final, Native, Private)
void ARotatingBlockPuzzle::OnRep_CurrentPosition()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RotatingBlockPuzzle.OnRep_CurrentPosition");

	ARotatingBlockPuzzle_OnRep_CurrentPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ARotatingBlockPuzzle::AfterRead()
{
	APuzzleMechanism::AfterRead();

	READ_PTR_FULL(StaticMesh, UPrimitiveComponent);
	READ_PTR_FULL(Position1Decal, UDecalComponent);
	READ_PTR_FULL(Position2Decal, UDecalComponent);
	READ_PTR_FULL(Position3Decal, UDecalComponent);
	READ_PTR_FULL(Position4Decal, UDecalComponent);
	READ_PTR_FULL(InteractVFX, UObject);
	READ_PTR_FULL(DefaultMaterialInstance, UMaterialInterface);
	READ_PTR_FULL(PuzzleVaultAudioParams, UPuzzleVaultAudioParams);
}

void ARotatingBlockPuzzle::BeforeDelete()
{
	APuzzleMechanism::BeforeDelete();

	DELE_PTR_FULL(StaticMesh);
	DELE_PTR_FULL(Position1Decal);
	DELE_PTR_FULL(Position2Decal);
	DELE_PTR_FULL(Position3Decal);
	DELE_PTR_FULL(Position4Decal);
	DELE_PTR_FULL(InteractVFX);
	DELE_PTR_FULL(DefaultMaterialInstance);
	DELE_PTR_FULL(PuzzleVaultAudioParams);
}

// Function Athena.PuzzleObjectInterface.ResetPuzzleObject
// (Native, Public, BlueprintCallable)
void UPuzzleObjectInterface::ResetPuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleObjectInterface.ResetPuzzleObject");

	UPuzzleObjectInterface_ResetPuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleObjectInterface.IsPuzzleObjectDisabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPuzzleObjectInterface::IsPuzzleObjectDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleObjectInterface.IsPuzzleObjectDisabled");

	UPuzzleObjectInterface_IsPuzzleObjectDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PuzzleObjectInterface.IsActivated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UPuzzleObjectInterface::IsActivated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleObjectInterface.IsActivated");

	UPuzzleObjectInterface_IsActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PuzzleObjectInterface.EnablePuzzleObject
// (Native, Public, BlueprintCallable)
void UPuzzleObjectInterface::EnablePuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleObjectInterface.EnablePuzzleObject");

	UPuzzleObjectInterface_EnablePuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleObjectInterface.DisablePuzzleObject
// (Native, Public, BlueprintCallable)
void UPuzzleObjectInterface::DisablePuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleObjectInterface.DisablePuzzleObject");

	UPuzzleObjectInterface_DisablePuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPuzzleObjectInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UPuzzleObjectInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.PuzzleStatueBase.ResetPuzzleObject
// (Native, Public, BlueprintCallable)
void APuzzleStatueBase::ResetPuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.ResetPuzzleObject");

	APuzzleStatueBase_ResetPuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleStatueBase.OnRep_IsStatueDisabled
// (Native, Protected)
void APuzzleStatueBase::OnRep_IsStatueDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.OnRep_IsStatueDisabled");

	APuzzleStatueBase_OnRep_IsStatueDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleStatueBase.OnRep_IsStatueActive
// (Native, Protected)
void APuzzleStatueBase::OnRep_IsStatueActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.OnRep_IsStatueActive");

	APuzzleStatueBase_OnRep_IsStatueActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleStatueBase.LockComponentOpened
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Interactor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APuzzleStatueBase::LockComponentOpened(class AActor* Interactor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.LockComponentOpened");

	APuzzleStatueBase_LockComponentOpened_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleStatueBase.IsPuzzleObjectDisabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool APuzzleStatueBase::IsPuzzleObjectDisabled()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.IsPuzzleObjectDisabled");

	APuzzleStatueBase_IsPuzzleObjectDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PuzzleStatueBase.IsActivated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool APuzzleStatueBase::IsActivated()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.IsActivated");

	APuzzleStatueBase_IsActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PuzzleStatueBase.EnablePuzzleObject
// (Native, Public, BlueprintCallable)
void APuzzleStatueBase::EnablePuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.EnablePuzzleObject");

	APuzzleStatueBase_EnablePuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleStatueBase.DisablePuzzleObject
// (Native, Public, BlueprintCallable)
void APuzzleStatueBase::DisablePuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueBase.DisablePuzzleObject");

	APuzzleStatueBase_DisablePuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APuzzleStatueBase::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(StaticMeshComponent, UStaticMeshComponent);
	READ_PTR_FULL(InteractableComponent, UPuzzleStatueInteractableComponent);
	READ_PTR_FULL(LockComponent, ULockComponent);
	READ_PTR_FULL(PuzzleStatueBaseAudioParams, UPuzzleStatueBaseAudioParamsDataAsset);
	READ_PTR_FULL(PuzzleStatueVFXComponent, UPuzzleStatueVFXComponent);
	READ_PTR_FULL(LockPositionParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(OneShotLockPositionParticleSystem, UParticleSystemComponent);
}

void APuzzleStatueBase::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(StaticMeshComponent);
	DELE_PTR_FULL(InteractableComponent);
	DELE_PTR_FULL(LockComponent);
	DELE_PTR_FULL(PuzzleStatueBaseAudioParams);
	DELE_PTR_FULL(PuzzleStatueVFXComponent);
	DELE_PTR_FULL(LockPositionParticleSystem);
	DELE_PTR_FULL(OneShotLockPositionParticleSystem);
}

// Function Athena.BroadcasterPuzzleStatue.ResetPuzzleObject
// (Native, Public, BlueprintCallable)
void ABroadcasterPuzzleStatue::ResetPuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BroadcasterPuzzleStatue.ResetPuzzleObject");

	ABroadcasterPuzzleStatue_ResetPuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BroadcasterPuzzleStatue.ResetBroadcasterReceiversAndMechanisms
// (Native, Public, BlueprintCallable)
void ABroadcasterPuzzleStatue::ResetBroadcasterReceiversAndMechanisms()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BroadcasterPuzzleStatue.ResetBroadcasterReceiversAndMechanisms");

	ABroadcasterPuzzleStatue_ResetBroadcasterReceiversAndMechanisms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BroadcasterPuzzleStatue.OnSignalActionComplete
// (Native, Protected)
void ABroadcasterPuzzleStatue::OnSignalActionComplete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BroadcasterPuzzleStatue.OnSignalActionComplete");

	ABroadcasterPuzzleStatue_OnSignalActionComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BroadcasterPuzzleStatue.OnRep_ReactionSequenceState
// (Native, Protected, HasOutParms)
// Parameters:
// struct FReactionSequenceStateInfo PreviousReactionSequenceState  (ConstParm, Parm, OutParm, ReferenceParm)
void ABroadcasterPuzzleStatue::OnRep_ReactionSequenceState(const struct FReactionSequenceStateInfo& PreviousReactionSequenceState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BroadcasterPuzzleStatue.OnRep_ReactionSequenceState");

	ABroadcasterPuzzleStatue_OnRep_ReactionSequenceState_Params params;
	params.PreviousReactionSequenceState = PreviousReactionSequenceState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.BroadcasterPuzzleStatue.DoShockwaveEffect
// (Native, Protected)
void ABroadcasterPuzzleStatue::DoShockwaveEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BroadcasterPuzzleStatue.DoShockwaveEffect");

	ABroadcasterPuzzleStatue_DoShockwaveEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ABroadcasterPuzzleStatue::AfterRead()
{
	APuzzleStatueBase::AfterRead();

	READ_PTR_FULL(ArmStaticMesh, UStaticMeshComponent);
	READ_PTR_FULL(IslandVisitorCallbackComponent, UIslandVisitorCallbackComponent);
	READ_PTR_FULL(ShockwaveParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(HornDustParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(BroadcasterAudioParams, UBroadcasterPuzzleStatueAudioParamsDataAsset);
}

void ABroadcasterPuzzleStatue::BeforeDelete()
{
	APuzzleStatueBase::BeforeDelete();

	DELE_PTR_FULL(ArmStaticMesh);
	DELE_PTR_FULL(IslandVisitorCallbackComponent);
	DELE_PTR_FULL(ShockwaveParticleSystem);
	DELE_PTR_FULL(HornDustParticleSystem);
	DELE_PTR_FULL(BroadcasterAudioParams);
}

// Function Athena.ReceiverPuzzleStatue.ResetToInitialConfigurationState
// (Native, Public, BlueprintCallable)
void AReceiverPuzzleStatue::ResetToInitialConfigurationState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReceiverPuzzleStatue.ResetToInitialConfigurationState");

	AReceiverPuzzleStatue_ResetToInitialConfigurationState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReceiverPuzzleStatue.ResetPuzzleObject
// (Native, Public, BlueprintCallable)
void AReceiverPuzzleStatue::ResetPuzzleObject()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReceiverPuzzleStatue.ResetPuzzleObject");

	AReceiverPuzzleStatue_ResetPuzzleObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReceiverPuzzleStatue.OnRep_CurrentStatueConfiguration
// (Final, Native, Private)
// Parameters:
// int8_t                         PreviousConfiguration          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AReceiverPuzzleStatue::OnRep_CurrentStatueConfiguration(int8_t PreviousConfiguration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReceiverPuzzleStatue.OnRep_CurrentStatueConfiguration");

	AReceiverPuzzleStatue_OnRep_CurrentStatueConfiguration_Params params;
	params.PreviousConfiguration = PreviousConfiguration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReceiverPuzzleStatue.OnConfigurationChangeAnimationStart
// (Native, Event, Protected, BlueprintEvent)
void AReceiverPuzzleStatue::OnConfigurationChangeAnimationStart()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReceiverPuzzleStatue.OnConfigurationChangeAnimationStart");

	AReceiverPuzzleStatue_OnConfigurationChangeAnimationStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ReceiverPuzzleStatue.OnConfigurationChangeAnimationFinish
// (Native, Event, Protected, BlueprintEvent)
void AReceiverPuzzleStatue::OnConfigurationChangeAnimationFinish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ReceiverPuzzleStatue.OnConfigurationChangeAnimationFinish");

	AReceiverPuzzleStatue_OnConfigurationChangeAnimationFinish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AReceiverPuzzleStatue::AfterRead()
{
	APuzzleStatueBase::AfterRead();

	READ_PTR_FULL(ConfigurationPositionPivot, USceneComponent);
	READ_PTR_FULL(PositionTransitionCurve, UCurveFloat);
	READ_PTR_FULL(ReceiverAudioParams, UReceiverPuzzleStatueAudioParamsDataAsset);
}

void AReceiverPuzzleStatue::BeforeDelete()
{
	APuzzleStatueBase::BeforeDelete();

	DELE_PTR_FULL(ConfigurationPositionPivot);
	DELE_PTR_FULL(PositionTransitionCurve);
	DELE_PTR_FULL(ReceiverAudioParams);
}

void UPuzzleStatueInteractableComponent::AfterRead()
{
	UInteractableComponent::AfterRead();

	READ_PTR_FULL(ActionRulesComponent, UActionRulesComponent);
}

void UPuzzleStatueInteractableComponent::BeforeDelete()
{
	UInteractableComponent::BeforeDelete();

	DELE_PTR_FULL(ActionRulesComponent);
}

// Function Athena.PuzzleStatueVFXComponent.BuildMaterialMap
// (Final, Native, Public)
void UPuzzleStatueVFXComponent::BuildMaterialMap()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleStatueVFXComponent.BuildMaterialMap");

	UPuzzleStatueVFXComponent_BuildMaterialMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UPuzzleStatueVFXComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(LockPositionParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(OneShotLockPositionParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(BroadcasterShockwaveParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(BroadcasterHornDustParticleSystem, UParticleSystemComponent);
	READ_PTR_FULL(HornVFXTemplate, UObject);
	READ_PTR_FULL(BroadcasterArmStaticMesh, UStaticMeshComponent);
	READ_PTR_FULL(PulseGlowCurve, UCurveFloat);
}

void UPuzzleStatueVFXComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(LockPositionParticleSystem);
	DELE_PTR_FULL(OneShotLockPositionParticleSystem);
	DELE_PTR_FULL(BroadcasterShockwaveParticleSystem);
	DELE_PTR_FULL(BroadcasterHornDustParticleSystem);
	DELE_PTR_FULL(HornVFXTemplate);
	DELE_PTR_FULL(BroadcasterArmStaticMesh);
	DELE_PTR_FULL(PulseGlowCurve);
}

// Function Athena.PuzzleVault.SubmitSolution
// (Final, Native, Public, BlueprintCallable)
void APuzzleVault::SubmitSolution()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.SubmitSolution");

	APuzzleVault_SubmitSolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OpenVaultRewardDoor
// (Final, Native, Public, BlueprintCallable)
void APuzzleVault::OpenVaultRewardDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OpenVaultRewardDoor");

	APuzzleVault_OpenVaultRewardDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OpenVaultDoor
// (Final, Native, Public, BlueprintCallable)
void APuzzleVault::OpenVaultDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OpenVaultDoor");

	APuzzleVault_OpenVaultDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_VaultAudioSetting
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_VaultAudioSetting()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_VaultAudioSetting");

	APuzzleVault_OnRep_VaultAudioSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_TimedDoorAnimationProgress
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_TimedDoorAnimationProgress()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_TimedDoorAnimationProgress");

	APuzzleVault_OnRep_TimedDoorAnimationProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_TallTaleVaultReservation
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_TallTaleVaultReservation()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_TallTaleVaultReservation");

	APuzzleVault_OnRep_TallTaleVaultReservation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_PuzzleMechanisms
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_PuzzleMechanisms()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_PuzzleMechanisms");

	APuzzleVault_OnRep_PuzzleMechanisms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_NumActiveWaterSpouts
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_NumActiveWaterSpouts()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_NumActiveWaterSpouts");

	APuzzleVault_OnRep_NumActiveWaterSpouts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_MaterialSetReferences
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_MaterialSetReferences()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_MaterialSetReferences");

	APuzzleVault_OnRep_MaterialSetReferences_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_IsCompleted
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_IsCompleted()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_IsCompleted");

	APuzzleVault_OnRep_IsCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_IsActive
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_IsActive()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_IsActive");

	APuzzleVault_OnRep_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_CurrentSolution
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_CurrentSolution()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_CurrentSolution");

	APuzzleVault_OnRep_CurrentSolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnRep_ActiveActionRule
// (Final, RequiredAPI, Native, Private)
void APuzzleVault::OnRep_ActiveActionRule()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnRep_ActiveActionRule");

	APuzzleVault_OnRep_ActiveActionRule_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnOverlapEnd
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void APuzzleVault::OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnOverlapEnd");

	APuzzleVault_OnOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnOverlapBegin
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           FromSweep                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void APuzzleVault::OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnOverlapBegin");

	APuzzleVault_OnOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.FromSweep = FromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnIncorrectAttempt
// (Net, Native, Event, NetMulticast, Public)
void APuzzleVault::OnIncorrectAttempt()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnIncorrectAttempt");

	APuzzleVault_OnIncorrectAttempt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.OnCorrectAttempt
// (Net, Native, Event, NetMulticast, Public)
void APuzzleVault::OnCorrectAttempt()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.OnCorrectAttempt");

	APuzzleVault_OnCorrectAttempt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.GetPlinthItemSpawnTransform
// (Final, RequiredAPI, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
struct FTransform APuzzleVault::GetPlinthItemSpawnTransform()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.GetPlinthItemSpawnTransform");

	APuzzleVault_GetPlinthItemSpawnTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.PuzzleVault.Complete
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void APuzzleVault::Complete()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.Complete");

	APuzzleVault_Complete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.CloseVaultDoor
// (Final, Native, Public, BlueprintCallable)
void APuzzleVault::CloseVaultDoor()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.CloseVaultDoor");

	APuzzleVault_CloseVaultDoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.PuzzleVault.ActivateVault
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void APuzzleVault::ActivateVault()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.PuzzleVault.ActivateVault");

	APuzzleVault_ActivateVault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void APuzzleVault::AfterRead()
{
	AInteractableObject::AfterRead();

	READ_PTR_FULL(PuzzleMechanism1ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(PuzzleMechanism2ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(PuzzleMechanism3ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(PuzzleMechanism4ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(Brazier1ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(Brazier2ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(Brazier3ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(Brazier4ActorComponent, USpawnActorComponent);
	READ_PTR_FULL(WaterActorComponent, USpawnActorComponent);
	READ_PTR_FULL(MainDoorActorComponent, USpawnActorComponent);
	READ_PTR_FULL(TimedMainDoorActorComponent, USpawnActorComponent);
	READ_PTR_FULL(RewardDoorActorComponent, USpawnActorComponent);
	READ_PTR_FULL(PlinthItemSpawnMesh, UStaticMeshComponent);
	READ_PTR_FULL(ButtonMesh, UStaticMeshComponent);
	READ_PTR_FULL(DefaultSceneRoot, USceneComponent);
	READ_PTR_FULL(VaultPassageOverlapVolume, UShapeComponent);
	READ_PTR_FULL(VaultRoomOverlapVolume, UShapeComponent);
	READ_PTR_FULL(SpoutParticleSystem, UObject);
	READ_PTR_FULL(OuterDoor, ASlidingDoor);
	READ_PTR_FULL(DefaultPuzzleData, UVaultPuzzleDataAsset);
	READ_PTR_FULL(TreasureVaultPuzzleData, UVaultPuzzleDataAsset);
	READ_PTR_FULL(DefaultVaultAudioParams, UPuzzleVaultAudioParams);
	READ_PTR_FULL(NoWaterVaultAudioParams, UPuzzleVaultAudioParams);
	READ_PTR_FULL(NoMusicVaultAudioParams, UPuzzleVaultAudioParams);
	READ_PTR_FULL(TreasureVaultAudioParams, UPuzzleVaultAudioParams);
	READ_PTR_FULL(WaterSpoutVFXComponent, UWaterSpoutVFXComponent);
	READ_PTR_FULL(TreasureVaultKeyTypes, UVaultKeyMappingDataAsset);
	READ_PTR_FULL(WaterModifierZoneComponent, UWaterModifierZoneComponent);
	READ_PTR_FULL(ReservationTotem, AActor);
	READ_PTR_FULL(VaultDoor, ASlidingDoor);
	READ_PTR_FULL(TimedVaultDoor, ATimedDoorMechanismAction);
	READ_PTR_FULL(VaultRewardDoor, ASlidingDoor);
	READ_PTR_FULL(WaterVolume, AWaterVolume);
	READ_PTR_FULL(VaultTable, ATreasureVaultTable);
	READ_PTR_FULL(VaultDataAsset, UVaultPuzzleDataAsset);
	READ_PTR_FULL(VaultAudioParams, UPuzzleVaultAudioParams);
	READ_PTR_FULL(ScaffoldingSpawner, UTreasureVaultItemSpawnComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
}

void APuzzleVault::BeforeDelete()
{
	AInteractableObject::BeforeDelete();

	DELE_PTR_FULL(PuzzleMechanism1ActorComponent);
	DELE_PTR_FULL(PuzzleMechanism2ActorComponent);
	DELE_PTR_FULL(PuzzleMechanism3ActorComponent);
	DELE_PTR_FULL(PuzzleMechanism4ActorComponent);
	DELE_PTR_FULL(Brazier1ActorComponent);
	DELE_PTR_FULL(Brazier2ActorComponent);
	DELE_PTR_FULL(Brazier3ActorComponent);
	DELE_PTR_FULL(Brazier4ActorComponent);
	DELE_PTR_FULL(WaterActorComponent);
	DELE_PTR_FULL(MainDoorActorComponent);
	DELE_PTR_FULL(TimedMainDoorActorComponent);
	DELE_PTR_FULL(RewardDoorActorComponent);
	DELE_PTR_FULL(PlinthItemSpawnMesh);
	DELE_PTR_FULL(ButtonMesh);
	DELE_PTR_FULL(DefaultSceneRoot);
	DELE_PTR_FULL(VaultPassageOverlapVolume);
	DELE_PTR_FULL(VaultRoomOverlapVolume);
	DELE_PTR_FULL(SpoutParticleSystem);
	DELE_PTR_FULL(OuterDoor);
	DELE_PTR_FULL(DefaultPuzzleData);
	DELE_PTR_FULL(TreasureVaultPuzzleData);
	DELE_PTR_FULL(DefaultVaultAudioParams);
	DELE_PTR_FULL(NoWaterVaultAudioParams);
	DELE_PTR_FULL(NoMusicVaultAudioParams);
	DELE_PTR_FULL(TreasureVaultAudioParams);
	DELE_PTR_FULL(WaterSpoutVFXComponent);
	DELE_PTR_FULL(TreasureVaultKeyTypes);
	DELE_PTR_FULL(WaterModifierZoneComponent);
	DELE_PTR_FULL(ReservationTotem);
	DELE_PTR_FULL(VaultDoor);
	DELE_PTR_FULL(TimedVaultDoor);
	DELE_PTR_FULL(VaultRewardDoor);
	DELE_PTR_FULL(WaterVolume);
	DELE_PTR_FULL(VaultTable);
	DELE_PTR_FULL(VaultDataAsset);
	DELE_PTR_FULL(VaultAudioParams);
	DELE_PTR_FULL(ScaffoldingSpawner);
	DELE_PTR_FULL(InteractableComponent);
}

void UQuestBookAnimationInstance::AfterRead()
{
	UWieldableItemAnimationInstance::AfterRead();

}

void UQuestBookAnimationInstance::BeforeDelete()
{
	UWieldableItemAnimationInstance::BeforeDelete();

}

void AQuestBookItemInfo::AfterRead()
{
	AItemInfo::AfterRead();

}

void AQuestBookItemInfo::BeforeDelete()
{
	AItemInfo::BeforeDelete();

}

void UQuestBookDoublePageLayout::AfterRead()
{
	UQuestBookPageLayout::AfterRead();

}

void UQuestBookDoublePageLayout::BeforeDelete()
{
	UQuestBookPageLayout::BeforeDelete();

}

void UQuestBookSinglePageLayout::AfterRead()
{
	UQuestBookPageLayout::AfterRead();

}

void UQuestBookSinglePageLayout::BeforeDelete()
{
	UQuestBookPageLayout::BeforeDelete();

}

void URiddleQuestData::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(DefaultGateCompletedAudioCue, UWwiseEvent);
	READ_PTR_FULL(DefaultGateCompletedMusicCue, UWwiseEvent);
}

void URiddleQuestData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(DefaultGateCompletedAudioCue);
	DELE_PTR_FULL(DefaultGateCompletedMusicCue);
}

void URiddleQuestDescGeneratorData::AfterRead()
{
	UDataAsset::AfterRead();

}

void URiddleQuestDescGeneratorData::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UQuestsConfig::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(NamedAIDataAsset, UNamedAIDataAsset);
	READ_PTR_FULL(XMarksTheSpotMapItemInfoDescClass, UClass);
	READ_PTR_FULL(RiddleMapItemInfoDescClass, UClass);
	READ_PTR_FULL(RiddlePhrasebookDataAsset, URiddleTextPhrasebookDataAsset);
	READ_PTR_FULL(RiddleQuestDataAsset, URiddleQuestData);
	READ_PTR_FULL(RiddleQuestDescGeneratorData, URiddleQuestDescGeneratorData);
	READ_PTR_FULL(RiddleQuestValidLocationGeneratorData, URiddleQuestValidLocationGeneratorData);
	READ_PTR_FULL(BountyMapItemInfoDescClass, UClass);
	READ_PTR_FULL(BountyQuestData, UBountyQuestData);
	READ_PTR_FULL(BountyQuestDescData, UBountyQuestDescData);
	READ_PTR_FULL(MerchantQuestDescData, UMerchantQuestDescData);
	READ_PTR_FULL(MerchantQuestData, UMerchantQuestData);
	READ_PTR_FULL(MerchantMapItemInfoDescClass, UClass);
	READ_PTR_FULL(CargoRunQuestData, UCargoRunQuestData);
	READ_PTR_FULL(CargoRunMapItemInfoDescClass, UClass);
	READ_PTR_FULL(VoyageProposalAssetData, UVoyageProposalAssetSelector);
	READ_PTR_FULL(VoyageSelectionVoteCompletedSound, UWwiseEvent);
	READ_PTR_FULL(VoyageProposal, UClass);
	READ_PTR_FULL(VoyageProposal2, UClass);
	READ_PTR_FULL(VoyageProposal3, UClass);
	READ_PTR_FULL(VoyageProposal4, UClass);
	READ_PTR_FULL(TutorialStepStartSfx, UWwiseEvent);
	READ_PTR_FULL(FoodToAddToInventoryInEatingTutorial, UClass);
	READ_PTR_FULL(TutorialEatBananaOpenRadial, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialSelectBananaPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialEatBananaPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialCycleWeaponPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialUseMapOpenRadial, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialSelectMap, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialUseMapPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialShowMapPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(MapToAddToInventoryInTutorial, UClass);
	READ_PTR_FULL(TutorialBuyVoyagePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialBuyVoyageNextOptionsDesc, UPopUpMessageDesc);
	READ_PTR_FULL(PlaceVoyageOnCaptainTablePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(ReturnBootyToTraderPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialBuyClothesPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialEquipItemPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(GoldHoarderToClothesShopFootstepID, UFootstepIDAsset);
	READ_PTR_FULL(ClothesShopToVanityChestFootstepID, UFootstepIDAsset);
	READ_PTR_FULL(MermaidTutorialPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(ChestInventoryInSellTreasureStep, UClass);
	READ_PTR_FULL(TutorialTalkToStrangerPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialTalkToFemaleStrangerPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialSellTreasurePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(TutorialPickUpChestPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(StrangerToGoldHoarderFootstepID, UFootstepIDAsset);
	READ_PTR_FULL(ReturnToStrangerPopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(ReturnToStrangerFemalePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(GoItAlonePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(BeginTallTalePopupDesc, UPopUpMessageDesc);
	READ_PTR_FULL(ContestMapItemInfoDescClass, UClass);
}

void UQuestsConfig::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(NamedAIDataAsset);
	DELE_PTR_FULL(XMarksTheSpotMapItemInfoDescClass);
	DELE_PTR_FULL(RiddleMapItemInfoDescClass);
	DELE_PTR_FULL(RiddlePhrasebookDataAsset);
	DELE_PTR_FULL(RiddleQuestDataAsset);
	DELE_PTR_FULL(RiddleQuestDescGeneratorData);
	DELE_PTR_FULL(RiddleQuestValidLocationGeneratorData);
	DELE_PTR_FULL(BountyMapItemInfoDescClass);
	DELE_PTR_FULL(BountyQuestData);
	DELE_PTR_FULL(BountyQuestDescData);
	DELE_PTR_FULL(MerchantQuestDescData);
	DELE_PTR_FULL(MerchantQuestData);
	DELE_PTR_FULL(MerchantMapItemInfoDescClass);
	DELE_PTR_FULL(CargoRunQuestData);
	DELE_PTR_FULL(CargoRunMapItemInfoDescClass);
	DELE_PTR_FULL(VoyageProposalAssetData);
	DELE_PTR_FULL(VoyageSelectionVoteCompletedSound);
	DELE_PTR_FULL(VoyageProposal);
	DELE_PTR_FULL(VoyageProposal2);
	DELE_PTR_FULL(VoyageProposal3);
	DELE_PTR_FULL(VoyageProposal4);
	DELE_PTR_FULL(TutorialStepStartSfx);
	DELE_PTR_FULL(FoodToAddToInventoryInEatingTutorial);
	DELE_PTR_FULL(TutorialEatBananaOpenRadial);
	DELE_PTR_FULL(TutorialSelectBananaPopupDesc);
	DELE_PTR_FULL(TutorialEatBananaPopupDesc);
	DELE_PTR_FULL(TutorialCycleWeaponPopupDesc);
	DELE_PTR_FULL(TutorialUseMapOpenRadial);
	DELE_PTR_FULL(TutorialSelectMap);
	DELE_PTR_FULL(TutorialUseMapPopupDesc);
	DELE_PTR_FULL(TutorialShowMapPopupDesc);
	DELE_PTR_FULL(MapToAddToInventoryInTutorial);
	DELE_PTR_FULL(TutorialBuyVoyagePopupDesc);
	DELE_PTR_FULL(TutorialBuyVoyageNextOptionsDesc);
	DELE_PTR_FULL(PlaceVoyageOnCaptainTablePopupDesc);
	DELE_PTR_FULL(ReturnBootyToTraderPopupDesc);
	DELE_PTR_FULL(TutorialBuyClothesPopupDesc);
	DELE_PTR_FULL(TutorialEquipItemPopupDesc);
	DELE_PTR_FULL(GoldHoarderToClothesShopFootstepID);
	DELE_PTR_FULL(ClothesShopToVanityChestFootstepID);
	DELE_PTR_FULL(MermaidTutorialPopupDesc);
	DELE_PTR_FULL(ChestInventoryInSellTreasureStep);
	DELE_PTR_FULL(TutorialTalkToStrangerPopupDesc);
	DELE_PTR_FULL(TutorialTalkToFemaleStrangerPopupDesc);
	DELE_PTR_FULL(TutorialSellTreasurePopupDesc);
	DELE_PTR_FULL(TutorialPickUpChestPopupDesc);
	DELE_PTR_FULL(StrangerToGoldHoarderFootstepID);
	DELE_PTR_FULL(ReturnToStrangerPopupDesc);
	DELE_PTR_FULL(ReturnToStrangerFemalePopupDesc);
	DELE_PTR_FULL(GoItAlonePopupDesc);
	DELE_PTR_FULL(BeginTallTalePopupDesc);
	DELE_PTR_FULL(ContestMapItemInfoDescClass);
}

void UQuickSwitchPrimaryWeaponNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickSwitchPrimaryWeaponNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void UQuickSwitchSecondaryWeaponNotificationInputId::AfterRead()
{
	UNotificationInputId::AfterRead();

}

void UQuickSwitchSecondaryWeaponNotificationInputId::BeforeDelete()
{
	UNotificationInputId::BeforeDelete();

}

void URandomPirateLegendSectionStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, URandomPirateLegendSectStepDesc);
}

void URandomPirateLegendSectionStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void URandomPirateLegendSectStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void URandomPirateLegendSectStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void URemoveFogBankAvoidanceAreaStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void URemoveFogBankAvoidanceAreaStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void URemoveMechanismTriggerStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, URemoveMechanismTriggerStepDesc);
}

void URemoveMechanismTriggerStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

// Function Athena.RewardComponent.Client_OnRewardRequestSucceededEvent
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FRewardRequestSucceededEvent RewardRequestSucceededEvent    (ConstParm, Parm, ReferenceParm)
void URewardComponent::Client_OnRewardRequestSucceededEvent(const struct FRewardRequestSucceededEvent& RewardRequestSucceededEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RewardComponent.Client_OnRewardRequestSucceededEvent");

	URewardComponent_Client_OnRewardRequestSucceededEvent_Params params;
	params.RewardRequestSucceededEvent = RewardRequestSucceededEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.RewardComponent.Client_OnRewardRequestFailedEvent
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FRewardRequestFailedEvent RewardRequestFailedEvent       (ConstParm, Parm, ReferenceParm)
void URewardComponent::Client_OnRewardRequestFailedEvent(const struct FRewardRequestFailedEvent& RewardRequestFailedEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.RewardComponent.Client_OnRewardRequestFailedEvent");

	URewardComponent_Client_OnRewardRequestFailedEvent_Params params;
	params.RewardRequestFailedEvent = RewardRequestFailedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void URewardComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void URewardComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UShopDesc::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Catalog, UCatalogDataAsset);
	READ_PTR_FULL(PremiumCatalog, UPremiumCatalogDataAsset);
	READ_PTR_FULL(Dialogue, UShopDialogue);
	READ_PTR_FULL(Company, UClass);
}

void UShopDesc::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Catalog);
	DELE_PTR_FULL(PremiumCatalog);
	DELE_PTR_FULL(Dialogue);
	DELE_PTR_FULL(Company);
}

void UShopDialogue::AfterRead()
{
	UDataAsset::AfterRead();

}

void UShopDialogue::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.ShopOfferBlueprintFunctionLibrary.IsOfferCategory
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 CategoryName                   (Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FShopOffer              Offer                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UShopOfferBlueprintFunctionLibrary::STATIC_IsOfferCategory(const struct FString& CategoryName, const struct FShopOffer& Offer)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShopOfferBlueprintFunctionLibrary.IsOfferCategory");

	UShopOfferBlueprintFunctionLibrary_IsOfferCategory_Params params;
	params.CategoryName = CategoryName;
	params.Offer = Offer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShopOfferBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UShopOfferBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UShopViewModelComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShopViewModelComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UShovelDigActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UShovelDigActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UShovelDigInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UShovelDigInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UShroudBreakerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UShroudBreakerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.ShroudBreakerOnShip.OnShroudBreakerActivationStateChange
// (Event, Protected, BlueprintEvent)
void AShroudBreakerOnShip::OnShroudBreakerActivationStateChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShroudBreakerOnShip.OnShroudBreakerActivationStateChange");

	AShroudBreakerOnShip_OnShroudBreakerActivationStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShroudBreakerOnShip.OnRep_ShroudBreakerActivationStateChange
// (Final, Native, Private)
void AShroudBreakerOnShip::OnRep_ShroudBreakerActivationStateChange()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShroudBreakerOnShip.OnRep_ShroudBreakerActivationStateChange");

	AShroudBreakerOnShip_OnRep_ShroudBreakerActivationStateChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShroudBreakerOnShip.GetShroudBreakerObjectEmitterComponent
// (RequiredAPI, Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWwiseEmitterComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UWwiseEmitterComponent* AShroudBreakerOnShip::GetShroudBreakerObjectEmitterComponent()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShroudBreakerOnShip.GetShroudBreakerObjectEmitterComponent");

	AShroudBreakerOnShip_GetShroudBreakerObjectEmitterComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShroudBreakerOnShip.DeactivateShroudBreakerCalculationsOnShip
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void AShroudBreakerOnShip::DeactivateShroudBreakerCalculationsOnShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShroudBreakerOnShip.DeactivateShroudBreakerCalculationsOnShip");

	AShroudBreakerOnShip_DeactivateShroudBreakerCalculationsOnShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShroudBreakerOnShip.ActivateShroudBreakerCalculationsOnShip
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
void AShroudBreakerOnShip::ActivateShroudBreakerCalculationsOnShip()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShroudBreakerOnShip.ActivateShroudBreakerCalculationsOnShip");

	AShroudBreakerOnShip_ActivateShroudBreakerCalculationsOnShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AShroudBreakerOnShip::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(AthenaWorldSettings, AAthenaWorldSettings);
}

void AShroudBreakerOnShip::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(AthenaWorldSettings);
}

void AShroudBreakerProxy::AfterRead()
{
	AFloatingItemProxy::AfterRead();

	READ_PTR_FULL(ShroudBreakerComponent, UShroudBreakerComponent);
	READ_PTR_FULL(ItemProxyShipTrackerComponent, UItemProxyShipTrackerComponent);
	READ_PTR_FULL(ItemProxyWatercraftTrackerComponent, UItemProxyWatercraftTrackerComponent);
	READ_PTR_FULL(InteractableComponent, UInteractableComponent);
}

void AShroudBreakerProxy::BeforeDelete()
{
	AFloatingItemProxy::BeforeDelete();

	DELE_PTR_FULL(ShroudBreakerComponent);
	DELE_PTR_FULL(ItemProxyShipTrackerComponent);
	DELE_PTR_FULL(ItemProxyWatercraftTrackerComponent);
	DELE_PTR_FULL(InteractableComponent);
}

void UShroudBreakerServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShroudBreakerServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AShroudBreakerService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(World, UWorld);
}

void AShroudBreakerService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(World);
}

void AShroudBreakerWieldable::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(ShroudBreakerComponent, UShroudBreakerComponent);
}

void AShroudBreakerWieldable::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(ShroudBreakerComponent);
}

// Function Athena.SicknessComponent.OnRep_SicknessScreenEffectStrength
// (Final, Native, Private)
void USicknessComponent::OnRep_SicknessScreenEffectStrength()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SicknessComponent.OnRep_SicknessScreenEffectStrength");

	USicknessComponent_OnRep_SicknessScreenEffectStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.SicknessComponent.OnRep_SicknessMaterialEffectStrength
// (Final, Native, Private)
void USicknessComponent::OnRep_SicknessMaterialEffectStrength()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.SicknessComponent.OnRep_SicknessMaterialEffectStrength");

	USicknessComponent_OnRep_SicknessMaterialEffectStrength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void USicknessComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void USicknessComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void USilenceStatus::AfterRead()
{
	UStatusBase::AfterRead();

}

void USilenceStatus::BeforeDelete()
{
	UStatusBase::BeforeDelete();

}

void USingleBulletGunDamagerType::AfterRead()
{
	UDamagerType::AfterRead();

}

void USingleBulletGunDamagerType::BeforeDelete()
{
	UDamagerType::BeforeDelete();

}

void ASirenActionStateCreatorDefinition::AfterRead()
{
	AActionStateCreatorDefinition::AfterRead();

}

void ASirenActionStateCreatorDefinition::BeforeDelete()
{
	AActionStateCreatorDefinition::BeforeDelete();

}

void USirenStatuesSelectorConfiguration::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Selector, USirenStatuesSelector);
}

void USirenStatuesSelectorConfiguration::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Selector);
}

// Function Athena.StaggerComponent.SetStaggerStrength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          UnaryStrength                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EStaggerReason> Reason                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UStaggerComponent::SetStaggerStrength(float UnaryStrength, TEnumAsByte<Athena_EStaggerReason> Reason)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StaggerComponent.SetStaggerStrength");

	UStaggerComponent_SetStaggerStrength_Params params;
	params.UnaryStrength = UnaryStrength;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStaggerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(XStickInputOverloaderAmplitude, UCurveFloat);
	READ_PTR_FULL(YStickInputOverloaderAmplitude, UCurveFloat);
}

void UStaggerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(XStickInputOverloaderAmplitude);
	DELE_PTR_FULL(YStickInputOverloaderAmplitude);
}

// Function Athena.StartAggressiveGhostShipEncounterStep.SpawnGhostShipEncounter
// (Final, Native, Private)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UStartAggressiveGhostShipEncounterStep::SpawnGhostShipEncounter(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.StartAggressiveGhostShipEncounterStep.SpawnGhostShipEncounter");

	UStartAggressiveGhostShipEncounterStep_SpawnGhostShipEncounter_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UStartAggressiveGhostShipEncounterStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UStartAggressiveGhostShipEncounterStepDesc);
	READ_PTR_FULL(EncounterIslandOverlapTrigger, AOverlapTriggerActor);
}

void UStartAggressiveGhostShipEncounterStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
	DELE_PTR_FULL(EncounterIslandOverlapTrigger);
}

void UTaleAggressiveGhostShipEncounterService::AfterRead()
{
	UTaleQuestService::AfterRead();

	READ_PTR_FULL(ServiceDesc, UTaleAggressiveGhostShipEncounterServiceDesc);
	READ_PTR_FULL(ActiveGhostShipEncounter, AAggressiveGhostShipsEncounter);
}

void UTaleAggressiveGhostShipEncounterService::BeforeDelete()
{
	UTaleQuestService::BeforeDelete();

	DELE_PTR_FULL(ServiceDesc);
	DELE_PTR_FULL(ActiveGhostShipEncounter);
}

void UTaleAggressiveGhostShipEncounterServiceDesc::AfterRead()
{
	UTaleQuestServiceDesc::AfterRead();

	READ_PTR_FULL(AggressiveGhostShipEncounterParams, UAggressiveGhostShipsEncounterParams);
}

void UTaleAggressiveGhostShipEncounterServiceDesc::BeforeDelete()
{
	UTaleQuestServiceDesc::BeforeDelete();

	DELE_PTR_FULL(AggressiveGhostShipEncounterParams);
}

void UStartAggressiveGhostShipEncounterStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(AggressiveGhostShipEncounterParams, UAggressiveGhostShipsEncounterParams);
	READ_PTR_FULL(ShipFleetNamesAsset, UAggressiveGhostShipNamesDataAsset);
	READ_PTR_FULL(IslandNamesAsset, UAggressiveGhostShipNamesDataAsset);
}

void UStartAggressiveGhostShipEncounterStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(AggressiveGhostShipEncounterParams);
	DELE_PTR_FULL(ShipFleetNamesAsset);
	DELE_PTR_FULL(IslandNamesAsset);
}

void UStartledAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UStartledAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void AStorageCrateWieldable::AfterRead()
{
	ALargeSkeletalMeshWieldableItem::AfterRead();

}

void AStorageCrateWieldable::BeforeDelete()
{
	ALargeSkeletalMeshWieldableItem::BeforeDelete();

}

void AStaticStorageCrateWieldable::AfterRead()
{
	ALargeStaticMeshWieldableItem::AfterRead();

}

void AStaticStorageCrateWieldable::BeforeDelete()
{
	ALargeStaticMeshWieldableItem::BeforeDelete();

}

void UStatProgressStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

}

void UStatProgressStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

}

void UTaleQuestNotificationUsingVariableStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestNotificationUsingVariableStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestParallelForeachStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(BodyDesc, UTaleQuestStepDesc);
	READ_PTR_FULL(Generator, UClass);
	READ_PTR_FULL(Variables, UScriptStruct);
}

void UTaleQuestParallelForeachStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(BodyDesc);
	DELE_PTR_FULL(Generator);
	DELE_PTR_FULL(Variables);
}

void UTaleQuestParallelStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(Desc, UTaleQuestParallelStepDesc);
}

void UTaleQuestParallelStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(Desc);
}

void UTaleQuestAnyStep::AfterRead()
{
	UTaleQuestParallelStep::AfterRead();

}

void UTaleQuestAnyStep::BeforeDelete()
{
	UTaleQuestParallelStep::BeforeDelete();

}

void UTaleQuestUnionStep::AfterRead()
{
	UTaleQuestParallelStep::AfterRead();

}

void UTaleQuestUnionStep::BeforeDelete()
{
	UTaleQuestParallelStep::BeforeDelete();

}

void UTaleQuestParallelStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestParallelStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestAnyStepDesc::AfterRead()
{
	UTaleQuestParallelStepDesc::AfterRead();

}

void UTaleQuestAnyStepDesc::BeforeDelete()
{
	UTaleQuestParallelStepDesc::BeforeDelete();

}

void UTaleQuestUnionStepDesc::AfterRead()
{
	UTaleQuestParallelStepDesc::AfterRead();

}

void UTaleQuestUnionStepDesc::BeforeDelete()
{
	UTaleQuestParallelStepDesc::BeforeDelete();

}

// Function Athena.TaleQuestPlankService.SetWoodenPlankDesc
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  PlankDesc                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
void UTaleQuestPlankService::SetWoodenPlankDesc(class UClass* PlankDesc)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TaleQuestPlankService.SetWoodenPlankDesc");

	UTaleQuestPlankService_SetWoodenPlankDesc_Params params;
	params.PlankDesc = PlankDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UTaleQuestPlankService::AfterRead()
{
	UTaleQuestToolService::AfterRead();

}

void UTaleQuestPlankService::BeforeDelete()
{
	UTaleQuestToolService::BeforeDelete();

}

void UTaleQuestPlankServiceDesc::AfterRead()
{
	UTaleQuestToolServiceDesc::AfterRead();

	READ_PTR_FULL(WoodenPlankDesc, UClass);
}

void UTaleQuestPlankServiceDesc::BeforeDelete()
{
	UTaleQuestToolServiceDesc::BeforeDelete();

	DELE_PTR_FULL(WoodenPlankDesc);
}

void UTaleQuestReactionStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleQuestReactionStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UTaleQuestReleaseContendedResourceStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTaleQuestReleaseContendedResourceStepDesc);
}

void UTaleQuestReleaseContendedResourceStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

// Function Athena.TallTaleService.OnRep_InTaleCrews
// (Final, Native, Public)
// Parameters:
// TArray<struct FGuid>           PrevInTaleCrews                (Parm, ZeroConstructor)
void ATallTaleService::OnRep_InTaleCrews(TArray<struct FGuid> PrevInTaleCrews)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TallTaleService.OnRep_InTaleCrews");

	ATallTaleService_OnRep_InTaleCrews_Params params;
	params.PrevInTaleCrews = PrevInTaleCrews;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATallTaleService::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(RankRequirementsAsset, UTaleRankRequirements);
}

void ATallTaleService::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(RankRequirementsAsset);
}

void UTankardInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UTankardInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.Tankard.SetLiquidLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Level                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATankard::SetLiquidLevel(float Level)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Tankard.SetLiquidLevel");

	ATankard_SetLiquidLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Tankard.OnRep_RemainingVolume
// (Final, Native, Private)
void ATankard::OnRep_RemainingVolume()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Tankard.OnRep_RemainingVolume");

	ATankard_OnRep_RemainingVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Tankard.GetWantedLiquidLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ATankard::GetWantedLiquidLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Tankard.GetWantedLiquidLevel");

	ATankard_GetWantedLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Tankard.GetMaxLiquidCollectionAmount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ATankard::GetMaxLiquidCollectionAmount()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Tankard.GetMaxLiquidCollectionAmount");

	ATankard_GetMaxLiquidCollectionAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Tankard.GetLiquidLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ATankard::GetLiquidLevel()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Tankard.GetLiquidLevel");

	ATankard_GetLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Tankard.CollectLiquidAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DesiredAmount                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float ATankard::CollectLiquidAmount(float DesiredAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Tankard.CollectLiquidAmount");

	ATankard_CollectLiquidAmount_Params params;
	params.DesiredAmount = DesiredAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void ATankard::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(StartDrinkingSfx, UWwiseEvent);
	READ_PTR_FULL(StopDrinkingSfx, UWwiseEvent);
	READ_PTR_FULL(SfxRefill, UWwiseEvent);
	READ_PTR_FULL(SfxTankardOnRaised, UWwiseEvent);
	READ_PTR_FULL(SfxTankardOnEquipWhenFullOverride, UWwiseEvent);
	READ_PTR_FULL(SfxTankardOnUnequipWhenFullOverride, UWwiseEvent);
	READ_PTR_FULL(SfxTankardSloshOnLandingAfterJump, UWwiseEvent);
	READ_PTR_FULL(SfxTankardSloshOnFootstep, UWwiseEvent);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(LiquidContainer, ULiquidContainerComponent);
}

void ATankard::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(StartDrinkingSfx);
	DELE_PTR_FULL(StopDrinkingSfx);
	DELE_PTR_FULL(SfxRefill);
	DELE_PTR_FULL(SfxTankardOnRaised);
	DELE_PTR_FULL(SfxTankardOnEquipWhenFullOverride);
	DELE_PTR_FULL(SfxTankardOnUnequipWhenFullOverride);
	DELE_PTR_FULL(SfxTankardSloshOnLandingAfterJump);
	DELE_PTR_FULL(SfxTankardSloshOnFootstep);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(LiquidContainer);
}

void UTankardRefillerComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(NotificationInputId, UClass);
}

void UTankardRefillerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(NotificationInputId);
}

void UTauntAIStrategyId::AfterRead()
{
	UAIStrategyId::AfterRead();

}

void UTauntAIStrategyId::BeforeDelete()
{
	UAIStrategyId::BeforeDelete();

}

void UTauntAnimationStateId::AfterRead()
{
	UAIAnimationStateId::AfterRead();

}

void UTauntAnimationStateId::BeforeDelete()
{
	UAIAnimationStateId::BeforeDelete();

}

// Function Athena.TavernStepsTrigger.OnRep_StepsState
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<Athena_EStepsTriggerState> LastState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATavernStepsTrigger::OnRep_StepsState(TEnumAsByte<Athena_EStepsTriggerState> LastState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TavernStepsTrigger.OnRep_StepsState");

	ATavernStepsTrigger_OnRep_StepsState_Params params;
	params.LastState = LastState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TavernStepsTrigger.OnEndOverlapTavern
// (Final, Native, Public)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATavernStepsTrigger::OnEndOverlapTavern(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TavernStepsTrigger.OnEndOverlapTavern");

	ATavernStepsTrigger_OnEndOverlapTavern_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TavernStepsTrigger.OnEndOverlapStepsListener
// (Final, Native, Public)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void ATavernStepsTrigger::OnEndOverlapStepsListener(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TavernStepsTrigger.OnEndOverlapStepsListener");

	ATavernStepsTrigger_OnEndOverlapStepsListener_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TavernStepsTrigger.OnBeginOverlapTavern
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ATavernStepsTrigger::OnBeginOverlapTavern(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TavernStepsTrigger.OnBeginOverlapTavern");

	ATavernStepsTrigger_OnBeginOverlapTavern_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TavernStepsTrigger.OnBeginOverlapStepsListener
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void ATavernStepsTrigger::OnBeginOverlapStepsListener(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TavernStepsTrigger.OnBeginOverlapStepsListener");

	ATavernStepsTrigger_OnBeginOverlapStepsListener_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.TavernStepsTrigger.Multicast_StartAnimatedStepsOpen
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
void ATavernStepsTrigger::Multicast_StartAnimatedStepsOpen()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TavernStepsTrigger.Multicast_StartAnimatedStepsOpen");

	ATavernStepsTrigger_Multicast_StartAnimatedStepsOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ATavernStepsTrigger::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(CollisionRoot, USceneComponent);
	READ_PTR_FULL(StepsListenerTriggerComponent, USphereComponent);
	READ_PTR_FULL(PlayersInTavernTriggerComponent, USphereComponent);
	READ_PTR_FULL(ShantyWorldRegionComponent, UWorldRegionComponent);
	READ_PTR_FULL(PlayMagicEvent, UWwiseEvent);
	READ_PTR_FULL(StopMagicEvent, UWwiseEvent);
	READ_PTR_FULL(ReactionEventPlayerOpen, ALandmarkReactionPlayer);
	READ_PTR_FULL(AnimatedSteps, UAnimatedStepsComponent);
}

void ATavernStepsTrigger::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(CollisionRoot);
	DELE_PTR_FULL(StepsListenerTriggerComponent);
	DELE_PTR_FULL(PlayersInTavernTriggerComponent);
	DELE_PTR_FULL(ShantyWorldRegionComponent);
	DELE_PTR_FULL(PlayMagicEvent);
	DELE_PTR_FULL(StopMagicEvent);
	DELE_PTR_FULL(ReactionEventPlayerOpen);
	DELE_PTR_FULL(AnimatedSteps);
}

void ATavernStrangersBarrel::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(BarrelMeshComponent, UStaticMeshComponent);
}

void ATavernStrangersBarrel::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(BarrelMeshComponent);
}

void ATelemetryDescriptorMockActor::AfterRead()
{
	AActor::AfterRead();

}

void ATelemetryDescriptorMockActor::BeforeDelete()
{
	AActor::BeforeDelete();

}

void UTelemetryProgressStep::AfterRead()
{
	UTaleQuestStep::AfterRead();

	READ_PTR_FULL(StepDesc, UTelemetryProgressStepDesc);
}

void UTelemetryProgressStep::BeforeDelete()
{
	UTaleQuestStep::BeforeDelete();

	DELE_PTR_FULL(StepDesc);
}

void UTelemetryTaskStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

	READ_PTR_FULL(TaskDesc, UTaleQuestStepDesc);
}

void UTelemetryTaskStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

	DELE_PTR_FULL(TaskDesc);
}

// Function Athena.TeleportFunctions.SortTeleportLocationsByProximity
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FTeleportLocation> Locations                      (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
// struct FVector                 Pivot                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void UTeleportFunctions::STATIC_SortTeleportLocationsByProximity(TArray<struct FTeleportLocation>* Locations, const struct FVector& Pivot)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.SortTeleportLocationsByProximity");

	UTeleportFunctions_SortTeleportLocationsByProximity_Params params;
	params.Pivot = Pivot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Locations != nullptr)
		*Locations = params.Locations;

}


// Function Athena.TeleportFunctions.GetTeleportLocationsOnShip
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AShip*                   InShip                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTeleportLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
TArray<struct FTeleportLocation> UTeleportFunctions::STATIC_GetTeleportLocationsOnShip(class AAthenaCharacter* InCharacter, class AShip* InShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.GetTeleportLocationsOnShip");

	UTeleportFunctions_GetTeleportLocationsOnShip_Params params;
	params.InCharacter = InCharacter;
	params.InShip = InShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetTeleportLocationsOnDeckOfShip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AShip*                   InShip                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EShipDeck>  InDeck                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTeleportLocation> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
TArray<struct FTeleportLocation> UTeleportFunctions::STATIC_GetTeleportLocationsOnDeckOfShip(class AAthenaCharacter* InCharacter, class AShip* InShip, TEnumAsByte<Athena_EShipDeck> InDeck)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.GetTeleportLocationsOnDeckOfShip");

	UTeleportFunctions_GetTeleportLocationsOnDeckOfShip_Params params;
	params.InCharacter = InCharacter;
	params.InShip = InShip;
	params.InDeck = InDeck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetTeleportLocationOnShip
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AShip*                   InShip                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference)
struct FTeleportLocation UTeleportFunctions::STATIC_GetTeleportLocationOnShip(class AAthenaCharacter* InCharacter, class AShip* InShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.GetTeleportLocationOnShip");

	UTeleportFunctions_GetTeleportLocationOnShip_Params params;
	params.InCharacter = InCharacter;
	params.InShip = InShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetTeleportLocationAroundTarget
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InTarget                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          InDistanceFromTarget           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference)
struct FTeleportLocation UTeleportFunctions::STATIC_GetTeleportLocationAroundTarget(class AAthenaCharacter* InCharacter, class AActor* InTarget, float InDistanceFromTarget)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.GetTeleportLocationAroundTarget");

	UTeleportFunctions_GetTeleportLocationAroundTarget_Params params;
	params.InCharacter = InCharacter;
	params.InTarget = InTarget;
	params.InDistanceFromTarget = InDistanceFromTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetNearestTeleportLocationOnLand
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTeleportLocation       ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference)
struct FTeleportLocation UTeleportFunctions::STATIC_GetNearestTeleportLocationOnLand(class AAthenaCharacter* InCharacter)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.GetNearestTeleportLocationOnLand");

	UTeleportFunctions_GetNearestTeleportLocationOnLand_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetDistanceToShipBoundingSphere
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InActor                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AShip*                   InShip                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UTeleportFunctions::STATIC_GetDistanceToShipBoundingSphere(class AActor* InActor, class AShip* InShip)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.TeleportFunctions.GetDistanceToShipBoundingSphere");

	UTeleportFunctions_GetDistanceToShipBoundingSphere_Params params;
	params.InActor = InActor;
	params.InShip = InShip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UTeleportFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UTeleportFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UTeleportLungeAIAbilityType::AfterRead()
{
	UAthenaAIAbilityType::AfterRead();

}

void UTeleportLungeAIAbilityType::BeforeDelete()
{
	UAthenaAIAbilityType::BeforeDelete();

}

void UTeleportLungeAbilityStageParams::AfterRead()
{
	UAthenaAIAbilityStageParams::AfterRead();

}

void UTeleportLungeAbilityStageParams::BeforeDelete()
{
	UAthenaAIAbilityStageParams::BeforeDelete();

}

void UTeleportLungeAIAbility::AfterRead()
{
	UAthenaAIAbility::AfterRead();

}

void UTeleportLungeAIAbility::BeforeDelete()
{
	UAthenaAIAbility::BeforeDelete();

}

void UTeleportLungeAIAbilityParams::AfterRead()
{
	UAthenaAIAbilityParams::AfterRead();

}

void UTeleportLungeAIAbilityParams::BeforeDelete()
{
	UAthenaAIAbilityParams::BeforeDelete();

}

// Function Athena.WheelInteractableFunctionLib.UpdateAdditiveIdles
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Rate                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          AnimationTime                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWheelAdditiveProperties WithinRange                    (ConstParm, Parm)
// struct FWheelAdditiveAlphaSets SetAdditiveIdles               (Parm)
// struct FBlendAdditiveValues    SetAdditiveBlendValues         (ConstParm, Parm)
// TEnumAsByte<Athena_EWheelAnimationType> WheelTurnType                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWheelAdditiveAlphaSets ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWheelAdditiveAlphaSets UWheelInteractableFunctionLib::STATIC_UpdateAdditiveIdles(float Rate, float AnimationTime, const struct FWheelAdditiveProperties& WithinRange, const struct FWheelAdditiveAlphaSets& SetAdditiveIdles, const struct FBlendAdditiveValues& SetAdditiveBlendValues, TEnumAsByte<Athena_EWheelAnimationType> WheelTurnType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInteractableFunctionLib.UpdateAdditiveIdles");

	UWheelInteractableFunctionLib_UpdateAdditiveIdles_Params params;
	params.Rate = Rate;
	params.AnimationTime = AnimationTime;
	params.WithinRange = WithinRange;
	params.SetAdditiveIdles = SetAdditiveIdles;
	params.SetAdditiveBlendValues = SetAdditiveBlendValues;
	params.WheelTurnType = WheelTurnType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WheelInteractableFunctionLib.CharacterWheelAnimationUpdate
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  Wheel                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSocketId               LeftHandSocketName             (ConstParm, Parm)
// struct FSocketId               RightHandSocketName            (ConstParm, Parm)
// struct FTransform              LeftHandTransform              (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FTransform              RightHandTransform             (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                          WheelTime                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                          Rate                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           LeftArm                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                           RightArm                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TEnumAsByte<Athena_EWheelAnimationType> WheelTurnType                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWheelArmIKDownWithinRange WithinRange                    (ConstParm, Parm)
// struct FWheelArmIKBoolSets     ReturnValue                    (Parm, OutParm, ReturnParm)
struct FWheelArmIKBoolSets UWheelInteractableFunctionLib::STATIC_CharacterWheelAnimationUpdate(class AActor* Wheel, const struct FSocketId& LeftHandSocketName, const struct FSocketId& RightHandSocketName, struct FTransform* LeftHandTransform, struct FTransform* RightHandTransform, float WheelTime, float Rate, bool LeftArm, bool RightArm, TEnumAsByte<Athena_EWheelAnimationType> WheelTurnType, const struct FWheelArmIKDownWithinRange& WithinRange)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WheelInteractableFunctionLib.CharacterWheelAnimationUpdate");

	UWheelInteractableFunctionLib_CharacterWheelAnimationUpdate_Params params;
	params.Wheel = Wheel;
	params.LeftHandSocketName = LeftHandSocketName;
	params.RightHandSocketName = RightHandSocketName;
	params.WheelTime = WheelTime;
	params.Rate = Rate;
	params.LeftArm = LeftArm;
	params.RightArm = RightArm;
	params.WheelTurnType = WheelTurnType;
	params.WithinRange = WithinRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (LeftHandTransform != nullptr)
		*LeftHandTransform = params.LeftHandTransform;
	if (RightHandTransform != nullptr)
		*RightHandTransform = params.RightHandTransform;


	return params.ReturnValue;
}


void UWheelInteractableFunctionLib::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWheelInteractableFunctionLib::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UIntentBasedMechanismTriggerComponent::AfterRead()
{
	UMechanismTriggerComponent::AfterRead();

}

void UIntentBasedMechanismTriggerComponent::BeforeDelete()
{
	UMechanismTriggerComponent::BeforeDelete();

}

void UWheelMechanismTriggerComponent::AfterRead()
{
	UIntentBasedMechanismTriggerComponent::AfterRead();

	READ_PTR_FULL(ParentWheel, AWheel);
}

void UWheelMechanismTriggerComponent::BeforeDelete()
{
	UIntentBasedMechanismTriggerComponent::BeforeDelete();

	DELE_PTR_FULL(ParentWheel);
}

void UWheelTurnAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UWheelTurnAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UWieldableFishingRodAnimationInstance::AfterRead()
{
	UWieldableItemAnimationInstance::AfterRead();

	READ_PTR_FULL(RodBendAnimation, UBlendSpace);
	READ_PTR_FULL(ReelAnimation, UAnimSequence);
}

void UWieldableFishingRodAnimationInstance::BeforeDelete()
{
	UWieldableItemAnimationInstance::BeforeDelete();

	DELE_PTR_FULL(RodBendAnimation);
	DELE_PTR_FULL(ReelAnimation);
}

void UWieldableItemCooldownBaseType::AfterRead()
{
	UObject::AfterRead();

}

void UWieldableItemCooldownBaseType::BeforeDelete()
{
	UObject::BeforeDelete();

}

void UWieldableItemCooldownBucketScoopType::AfterRead()
{
	UWieldableItemCooldownBaseType::AfterRead();

}

void UWieldableItemCooldownBucketScoopType::BeforeDelete()
{
	UWieldableItemCooldownBaseType::BeforeDelete();

}

void UWieldableItemCooldownBucketThrowType::AfterRead()
{
	UWieldableItemCooldownBaseType::AfterRead();

}

void UWieldableItemCooldownBucketThrowType::BeforeDelete()
{
	UWieldableItemCooldownBaseType::BeforeDelete();

}

void UWieldableItemCooldownChainBucketScoopAndBucketThrowType::AfterRead()
{
	UWieldableItemCooldownBaseType::AfterRead();

}

void UWieldableItemCooldownChainBucketScoopAndBucketThrowType::BeforeDelete()
{
	UWieldableItemCooldownBaseType::BeforeDelete();

}

void UWieldableItemCooldownShovelDigType::AfterRead()
{
	UWieldableItemCooldownBaseType::AfterRead();

}

void UWieldableItemCooldownShovelDigType::BeforeDelete()
{
	UWieldableItemCooldownBaseType::BeforeDelete();

}

// Function Athena.WieldableItemFunctionLibrary.IsThirdPersonMeshComponentTickEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWieldableItem*          InWieldable                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemFunctionLibrary::STATIC_IsThirdPersonMeshComponentTickEnabled(class AWieldableItem* InWieldable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemFunctionLibrary.IsThirdPersonMeshComponentTickEnabled");

	UWieldableItemFunctionLibrary_IsThirdPersonMeshComponentTickEnabled_Params params;
	params.InWieldable = InWieldable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemFunctionLibrary.IsFirstPersonMeshComponentTickEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWieldableItem*          InWieldable                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemFunctionLibrary::STATIC_IsFirstPersonMeshComponentTickEnabled(class AWieldableItem* InWieldable)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemFunctionLibrary.IsFirstPersonMeshComponentTickEnabled");

	UWieldableItemFunctionLibrary_IsFirstPersonMeshComponentTickEnabled_Params params;
	params.InWieldable = InWieldable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWieldableItemFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWieldableItemFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

// Function Athena.WieldableItemSetComponent.RemoveItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetComponent::RemoveItem(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.RemoveItem");

	UWieldableItemSetComponent_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.OnRep_Items
// (Final, Native, Protected)
void UWieldableItemSetComponent::OnRep_Items()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.OnRep_Items");

	UWieldableItemSetComponent_OnRep_Items_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemSetComponent.OnItemDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWieldableItemSetComponent::OnItemDestroyed(class AActor* Actor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.OnItemDestroyed");

	UWieldableItemSetComponent_OnItemDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WieldableItemSetComponent.GetSlotForItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
class UClass* UWieldableItemSetComponent::GetSlotForItem(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetSlotForItem");

	UWieldableItemSetComponent_GetSlotForItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetNumItemsOfType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetComponent::GetNumItemsOfType(class UClass* Type)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetNumItemsOfType");

	UWieldableItemSetComponent_GetNumItemsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetNumItemsOfCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetComponent::GetNumItemsOfCategory(class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetNumItemsOfCategory");

	UWieldableItemSetComponent_GetNumItemsOfCategory_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetNumItems
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetComponent::GetNumItems()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetNumItems");

	UWieldableItemSetComponent_GetNumItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemsOfCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)
TArray<class AActor*> UWieldableItemSetComponent::GetItemsOfCategory(class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetItemsOfCategory");

	UWieldableItemSetComponent_GetItemsOfCategory_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemIndexInCategorySet
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetComponent::GetItemIndexInCategorySet(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetItemIndexInCategorySet");

	UWieldableItemSetComponent_GetItemIndexInCategorySet_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UWieldableItemSetComponent::GetItemIndex(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetItemIndex");

	UWieldableItemSetComponent_GetItemIndex_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemFromSlot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UWieldableItemSetComponent::GetItemFromSlot(class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetItemFromSlot");

	UWieldableItemSetComponent_GetItemFromSlot_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class AActor* UWieldableItemSetComponent::GetItem(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.GetItem");

	UWieldableItemSetComponent_GetItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.ContainsItemOfType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ItemType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetComponent::ContainsItemOfType(class UClass* ItemType)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.ContainsItemOfType");

	UWieldableItemSetComponent_ContainsItemOfType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.Contains
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetComponent::Contains(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.Contains");

	UWieldableItemSetComponent_Contains_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.AddItemToSlot
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  ItemCategory                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetComponent::AddItemToSlot(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.AddItemToSlot");

	UWieldableItemSetComponent_AddItemToSlot_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.AddItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UWieldableItemSetComponent::AddItem(class AActor* Item)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WieldableItemSetComponent.AddItem");

	UWieldableItemSetComponent_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWieldableItemSetComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWieldableItemSetComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void AWieldableItemSetMockCharacter::AfterRead()
{
	ACharacter::AfterRead();

	READ_PTR_FULL(WieldableItemSetComponent, UWieldableItemSetComponent);
}

void AWieldableItemSetMockCharacter::BeforeDelete()
{
	ACharacter::BeforeDelete();

	DELE_PTR_FULL(WieldableItemSetComponent);
}

void AWieldableMockActor::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void AWieldableMockActor::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(InventoryItem);
}

void ALargeWieldableMockActor::AfterRead()
{
	AWieldableMockActor::AfterRead();

}

void ALargeWieldableMockActor::BeforeDelete()
{
	AWieldableMockActor::BeforeDelete();

}

void AWieldableOtherMockActor::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

}

void AWieldableOtherMockActor::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

}

void AWieldableNonStowableMockItem::AfterRead()
{
	AStaticMeshWieldableItem::AfterRead();

}

void AWieldableNonStowableMockItem::BeforeDelete()
{
	AStaticMeshWieldableItem::BeforeDelete();

}

void UAthenaAnimationWeaponDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAthenaAnimationWeaponDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelTime
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationWheelBlueprintFunctions::STATIC_GetWheelTime(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelTime");

	UAthenaAnimationWheelBlueprintFunctions_GetWheelTime_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelDirection
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationWheelBlueprintFunctions::STATIC_GetWheelDirection(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelDirection");

	UAthenaAnimationWheelBlueprintFunctions_GetWheelDirection_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelAnimationType
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<Athena_EWheelAnimationType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<Athena_EWheelAnimationType> UAthenaAnimationWheelBlueprintFunctions::STATIC_GetWheelAnimationType(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelAnimationType");

	UAthenaAnimationWheelBlueprintFunctions_GetWheelAnimationType_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightWheelArmDown
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationWheelBlueprintFunctions::STATIC_GetRightWheelArmDown(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightWheelArmDown");

	UAthenaAnimationWheelBlueprintFunctions_GetRightWheelArmDown_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightHandSocket
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// class UAnimInstance*           Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSocketId               ReturnValue                    (Parm, OutParm, ReturnParm)
struct FSocketId UAthenaAnimationWheelBlueprintFunctions::STATIC_GetRightHandSocket(const struct FAthenaAnimationWheel& Wheel, class UAnimInstance* Owner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightHandSocket");

	UAthenaAnimationWheelBlueprintFunctions_GetRightHandSocket_Params params;
	params.Wheel = Wheel;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightFingerAlpha
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationWheelBlueprintFunctions::STATIC_GetRightFingerAlpha(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightFingerAlpha");

	UAthenaAnimationWheelBlueprintFunctions_GetRightFingerAlpha_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftWheelArmDown
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UAthenaAnimationWheelBlueprintFunctions::STATIC_GetLeftWheelArmDown(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftWheelArmDown");

	UAthenaAnimationWheelBlueprintFunctions_GetLeftWheelArmDown_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftHandSocket
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// class UAnimInstance*           Owner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSocketId               ReturnValue                    (Parm, OutParm, ReturnParm)
struct FSocketId UAthenaAnimationWheelBlueprintFunctions::STATIC_GetLeftHandSocket(const struct FAthenaAnimationWheel& Wheel, class UAnimInstance* Owner)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftHandSocket");

	UAthenaAnimationWheelBlueprintFunctions_GetLeftHandSocket_Params params;
	params.Wheel = Wheel;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftFingerAlpha
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationWheelBlueprintFunctions::STATIC_GetLeftFingerAlpha(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftFingerAlpha");

	UAthenaAnimationWheelBlueprintFunctions_GetLeftFingerAlpha_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetFullBodyAlpha
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
float UAthenaAnimationWheelBlueprintFunctions::STATIC_GetFullBodyAlpha(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetFullBodyAlpha");

	UAthenaAnimationWheelBlueprintFunctions_GetFullBodyAlpha_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UAthenaAnimationWheelBlueprintFunctions::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UAthenaAnimationWheelBlueprintFunctions::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UServerAnimationSpawnDataProviderInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UServerAnimationSpawnDataProviderInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ChainLightningReceiverComponent.Multicast_VisualiseChainLightningData
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// struct FChainData              InChainData                    (ConstParm, Parm, ReferenceParm)
void UChainLightningReceiverComponent::Multicast_VisualiseChainLightningData(const struct FChainData& InChainData)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ChainLightningReceiverComponent.Multicast_VisualiseChainLightningData");

	UChainLightningReceiverComponent_Multicast_VisualiseChainLightningData_Params params;
	params.InChainData = InChainData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UChainLightningReceiverComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UChainLightningReceiverComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

// Function Athena.DestroyableMechanismTrigger.OnRecievedNewDamage
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      InDamageEvent                  (ConstParm, Parm, OutParm, ReferenceParm)
void ADestroyableMechanismTrigger::OnRecievedNewDamage(const struct FImpactDamageEvent& InDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DestroyableMechanismTrigger.OnRecievedNewDamage");

	ADestroyableMechanismTrigger_OnRecievedNewDamage_Params params;
	params.InDamageEvent = InDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void ADestroyableMechanismTrigger::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(HealthComponent, UHealthComponent);
	READ_PTR_FULL(DamageableComponent, UOptInDamageableComponent);
	READ_PTR_FULL(MechanismTriggerComponent, UMechanismTriggerComponent);
}

void ADestroyableMechanismTrigger::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(HealthComponent);
	DELE_PTR_FULL(DamageableComponent);
	DELE_PTR_FULL(MechanismTriggerComponent);
}

// Function Athena.ExplosionMechanismAction.OnMechanismActionStateChanged
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<Athena_EMechanismActionState> PreviousState                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EMechanismActionState> NewState                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                  InInstigator                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AExplosionMechanismAction::OnMechanismActionStateChanged(TEnumAsByte<Athena_EMechanismActionState> PreviousState, TEnumAsByte<Athena_EMechanismActionState> NewState, class AActor* InInstigator)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ExplosionMechanismAction.OnMechanismActionStateChanged");

	AExplosionMechanismAction_OnMechanismActionStateChanged_Params params;
	params.PreviousState = PreviousState;
	params.NewState = NewState;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ExplosionMechanismAction.OnMechanismActionReset
// (Final, Native, Private)
void AExplosionMechanismAction::OnMechanismActionReset()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ExplosionMechanismAction.OnMechanismActionReset");

	AExplosionMechanismAction_OnMechanismActionReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AExplosionMechanismAction::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(Base, USceneComponent);
	READ_PTR_FULL(MechanismActionComponent, UMechanismActionComponent);
	READ_PTR_FULL(ExplosiveComponent, UExplosiveComponent);
	READ_PTR_FULL(ExplosionComponent, UExplosionComponent);
}

void AExplosionMechanismAction::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(Base);
	DELE_PTR_FULL(MechanismActionComponent);
	DELE_PTR_FULL(ExplosiveComponent);
	DELE_PTR_FULL(ExplosionComponent);
}

// Function Athena.MechanismProximityResetComponent.OnComponentEndOverlapFunc
// (Final, Native, Private)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UMechanismProximityResetComponent::OnComponentEndOverlapFunc(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismProximityResetComponent.OnComponentEndOverlapFunc");

	UMechanismProximityResetComponent_OnComponentEndOverlapFunc_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.MechanismProximityResetComponent.OnComponentBeginOverlapFunc
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
void UMechanismProximityResetComponent::OnComponentBeginOverlapFunc(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.MechanismProximityResetComponent.OnComponentBeginOverlapFunc");

	UMechanismProximityResetComponent_OnComponentBeginOverlapFunc_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UMechanismProximityResetComponent::AfterRead()
{
	USphereComponent::AfterRead();

}

void UMechanismProximityResetComponent::BeforeDelete()
{
	USphereComponent::BeforeDelete();

}

void UMechanismsServiceInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UMechanismsServiceInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AMechanismsService::AfterRead()
{
	AActor::AfterRead();

}

void AMechanismsService::BeforeDelete()
{
	AActor::BeforeDelete();

}

// Function Athena.DamageableMechanismTrigger.OnDamageTaken
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FImpactDamageEvent      InImpactDamageEvent            (ConstParm, Parm, OutParm, ReferenceParm)
void UDamageableMechanismTrigger::OnDamageTaken(const struct FImpactDamageEvent& InImpactDamageEvent)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.DamageableMechanismTrigger.OnDamageTaken");

	UDamageableMechanismTrigger_OnDamageTaken_Params params;
	params.InImpactDamageEvent = InImpactDamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UDamageableMechanismTrigger::AfterRead()
{
	UMechanismTriggerComponent::AfterRead();

	READ_PTR_FULL(OwningDamageSource, UDamageableComponent);
	READ_PTR_FULL(CachedWorld, UWorld);
}

void UDamageableMechanismTrigger::BeforeDelete()
{
	UMechanismTriggerComponent::BeforeDelete();

	DELE_PTR_FULL(OwningDamageSource);
	DELE_PTR_FULL(CachedWorld);
}

void USignalMechanismTargetInterface::AfterRead()
{
	UInterface::AfterRead();

}

void USignalMechanismTargetInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AAshenWindsSkullItemInfo::AfterRead()
{
	ABootyItemInfo::AfterRead();

	READ_PTR_FULL(FlamethrowerChargeComponent, UFlamethrowerChargeComponent);
}

void AAshenWindsSkullItemInfo::BeforeDelete()
{
	ABootyItemInfo::BeforeDelete();

	DELE_PTR_FULL(FlamethrowerChargeComponent);
}

void AAshenWindsSkullItemProxy::AfterRead()
{
	ABountyRewardItemProxy::AfterRead();

	READ_PTR_FULL(FlamethrowerChargeParticleSystemComponent, UParticleSystemComponent);
	READ_PTR_FULL(FlamethrowerChargeVisuals, UFlamethrowerChargeVisuals);
}

void AAshenWindsSkullItemProxy::BeforeDelete()
{
	ABountyRewardItemProxy::BeforeDelete();

	DELE_PTR_FULL(FlamethrowerChargeParticleSystemComponent);
	DELE_PTR_FULL(FlamethrowerChargeVisuals);
}

void UBaseWorldMarker::AfterRead()
{
	UObject::AfterRead();

	READ_PTR_FULL(Variant, UClass);
}

void UBaseWorldMarker::BeforeDelete()
{
	UObject::BeforeDelete();

	DELE_PTR_FULL(Variant);
}

void UArenaWorldMarker::AfterRead()
{
	UBaseWorldMarker::AfterRead();

	READ_PTR_FULL(TrackedLocationOwner, AActor);
	READ_PTR_FULL(TrackedVelocityOwner, AActor);
}

void UArenaWorldMarker::BeforeDelete()
{
	UBaseWorldMarker::BeforeDelete();

	DELE_PTR_FULL(TrackedLocationOwner);
	DELE_PTR_FULL(TrackedVelocityOwner);
}

void UGenericWorldMapMarkerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UGenericWorldMapMarkerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WorldMarkerBlueprintFunctionLibrary.DestroyWorldMarker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBaseWorldMarker*        Marker                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UWorldMarkerBlueprintFunctionLibrary::STATIC_DestroyWorldMarker(class UObject* WorldContextObject, class UBaseWorldMarker* Marker)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WorldMarkerBlueprintFunctionLibrary.DestroyWorldMarker");

	UWorldMarkerBlueprintFunctionLibrary_DestroyWorldMarker_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Marker = Marker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.WorldMarkerBlueprintFunctionLibrary.CreateWorldMarker
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                  Variant                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FVector                 MarkerPosition                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// class UBaseWorldMarker*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
class UBaseWorldMarker* UWorldMarkerBlueprintFunctionLibrary::STATIC_CreateWorldMarker(class UObject* WorldContextObject, class UClass* Variant, const struct FVector& MarkerPosition)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WorldMarkerBlueprintFunctionLibrary.CreateWorldMarker");

	UWorldMarkerBlueprintFunctionLibrary_CreateWorldMarker_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Variant = Variant;
	params.MarkerPosition = MarkerPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UWorldMarkerBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UWorldMarkerBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UWorldMarkerListenerInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldMarkerListenerInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.WorldMarkerManagerComponent.OnRep_MarkerDataObjects
// (Final, Native, Private)
// Parameters:
// TArray<class UBaseWorldMarker*> InOldMarkerDataObjects         (ConstParm, Parm, ZeroConstructor)
void UWorldMarkerManagerComponent::OnRep_MarkerDataObjects(TArray<class UBaseWorldMarker*> InOldMarkerDataObjects)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.WorldMarkerManagerComponent.OnRep_MarkerDataObjects");

	UWorldMarkerManagerComponent_OnRep_MarkerDataObjects_Params params;
	params.InOldMarkerDataObjects = InOldMarkerDataObjects;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UWorldMarkerManagerComponent::AfterRead()
{
	UActorComponent::AfterRead();

}

void UWorldMarkerManagerComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

}

void UWorldMarkerRepresentationInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldMarkerRepresentationInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWorldMarkerRoutingInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UWorldMarkerRoutingInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UWorldMarkerRoutingComponent::AfterRead()
{
	UActorComponent::AfterRead();

	READ_PTR_FULL(DefaultListenerType, UClass);
}

void UWorldMarkerRoutingComponent::BeforeDelete()
{
	UActorComponent::BeforeDelete();

	DELE_PTR_FULL(DefaultListenerType);
}

// Function Athena.BootyStorageBlueprintFunctionLibrary.CanStoreItemInBootyStorage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AWieldableItem*          WieldedItem                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
bool UBootyStorageBlueprintFunctionLibrary::STATIC_CanStoreItemInBootyStorage(class UObject* WorldContextObject, class AWieldableItem* WieldedItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.BootyStorageBlueprintFunctionLibrary.CanStoreItemInBootyStorage");

	UBootyStorageBlueprintFunctionLibrary_CanStoreItemInBootyStorage_Params params;
	params.WorldContextObject = WorldContextObject;
	params.WieldedItem = WieldedItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UBootyStorageBlueprintFunctionLibrary::AfterRead()
{
	UBlueprintFunctionLibrary::AfterRead();

}

void UBootyStorageBlueprintFunctionLibrary::BeforeDelete()
{
	UBlueprintFunctionLibrary::BeforeDelete();

}

void UBootyStorageInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UBootyStorageInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UTaleRemoveStormAvoidanceAreaStepDesc::AfterRead()
{
	UTaleQuestStepDesc::AfterRead();

}

void UTaleRemoveStormAvoidanceAreaStepDesc::BeforeDelete()
{
	UTaleQuestStepDesc::BeforeDelete();

}

void UContestZoneInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UContestZoneInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEmblemDefinitionDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Company, UClass);
}

void UEmblemDefinitionDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Company);
}

void UEmblemSettings::AfterRead()
{
	UObject::AfterRead();

}

void UEmblemSettings::BeforeDelete()
{
	UObject::BeforeDelete();

}

// Function Athena.EnchantedCompass.TriggerRetargetEffect
// (Event, Protected, BlueprintEvent)
void AEnchantedCompass::TriggerRetargetEffect()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EnchantedCompass.TriggerRetargetEffect");

	AEnchantedCompass_TriggerRetargetEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.EnchantedCompass.OnRep_Target
// (Final, Native, Private)
void AEnchantedCompass::OnRep_Target()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.EnchantedCompass.OnRep_Target");

	AEnchantedCompass_OnRep_Target_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AEnchantedCompass::AfterRead()
{
	ACompass::AfterRead();

	READ_PTR_FULL(TargetReplacedForceFeedback, UForceFeedbackEffect);
	READ_PTR_FULL(TargetReplacedSFX, UWwiseEvent);
	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
}

void AEnchantedCompass::BeforeDelete()
{
	ACompass::BeforeDelete();

	DELE_PTR_FULL(TargetReplacedForceFeedback);
	DELE_PTR_FULL(TargetReplacedSFX);
	DELE_PTR_FULL(InventoryItem);
}

void UAggressiveGhostShipAnimationDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAggressiveGhostShipAnimationDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFishSizeWeightsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFishSizeWeightsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFishSpawnParamsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(Sea, UClass);
	READ_PTR_FULL(Islands, UVoyageLocationOnlyNamedIslandListDataAsset);
	READ_PTR_FULL(SizeWeights, UFishSizeWeightsDataAsset);
}

void UFishSpawnParamsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(Sea);
	DELE_PTR_FULL(Islands);
	DELE_PTR_FULL(SizeWeights);
}

void UAvailableFishForSpawning::AfterRead()
{
	UDataAsset::AfterRead();

}

void UAvailableFishForSpawning::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

// Function Athena.FishingFish.Multicast_SetVisible
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void AFishingFish::Multicast_SetVisible()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingFish.Multicast_SetVisible");

	AFishingFish_Multicast_SetVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFishingFish::AfterRead()
{
	ACharacter::AfterRead();

	READ_PTR_FULL(FishDataAsset, UFishDataAsset);
	READ_PTR_FULL(FishingMiniGameFishDataAsset, UFishingMiniGameFishDataAsset);
	READ_PTR_FULL(BattlingVFX, UParticleSystemComponent);
	READ_PTR_FULL(BeingTiredVFX, UParticleSystemComponent);
	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
	READ_PTR_FULL(CaughtFishItemDesc, UClass);
	READ_PTR_FULL(DitherComponent, UDitherComponent);
}

void AFishingFish::BeforeDelete()
{
	ACharacter::BeforeDelete();

	DELE_PTR_FULL(FishDataAsset);
	DELE_PTR_FULL(FishingMiniGameFishDataAsset);
	DELE_PTR_FULL(BattlingVFX);
	DELE_PTR_FULL(BeingTiredVFX);
	DELE_PTR_FULL(WaterInteractionComponent);
	DELE_PTR_FULL(CaughtFishItemDesc);
	DELE_PTR_FULL(DitherComponent);
}

void UFishAnimationInstance::AfterRead()
{
	UAnimInstance::AfterRead();

	READ_PTR_FULL(FishSkeletalMesh, USkeletalMesh);
	READ_PTR_FULL(FishingFishCharacter, AFishingFish);
	READ_PTR_FULL(CurrentPlayingMontage, UAnimMontage);
}

void UFishAnimationInstance::BeforeDelete()
{
	UAnimInstance::BeforeDelete();

	DELE_PTR_FULL(FishSkeletalMesh);
	DELE_PTR_FULL(FishingFishCharacter);
	DELE_PTR_FULL(CurrentPlayingMontage);
}

void UFishDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(SplashVFXWhenBeingTired, UObject);
	READ_PTR_FULL(SplashVFXWhenBattling, UObject);
	READ_PTR_FULL(SplashVFXWhenJumpingOutOfWater, UObject);
	READ_PTR_FULL(SplashVFXWhenLandingInToWater, UObject);
	READ_PTR_FULL(FishingFishPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(FishBiteAndStruggleStart, UWwiseEvent);
	READ_PTR_FULL(FishBiteAndStruggleStop, UWwiseEvent);
	READ_PTR_FULL(FishJumpOutOfWater, UWwiseEvent);
	READ_PTR_FULL(FishJumpIntoWater, UWwiseEvent);
	READ_PTR_FULL(FishBitingForceFeedback, UForceFeedbackEffect);
}

void UFishDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(SplashVFXWhenBeingTired);
	DELE_PTR_FULL(SplashVFXWhenBattling);
	DELE_PTR_FULL(SplashVFXWhenJumpingOutOfWater);
	DELE_PTR_FULL(SplashVFXWhenLandingInToWater);
	DELE_PTR_FULL(FishingFishPool);
	DELE_PTR_FULL(FishBiteAndStruggleStart);
	DELE_PTR_FULL(FishBiteAndStruggleStop);
	DELE_PTR_FULL(FishJumpOutOfWater);
	DELE_PTR_FULL(FishJumpIntoWater);
	DELE_PTR_FULL(FishBitingForceFeedback);
}

// Function Athena.FishingActionStateId.PushCharacterIntoFishingActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFishingActionStateId::STATIC_PushCharacterIntoFishingActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingActionStateId.PushCharacterIntoFishingActionState");

	UFishingActionStateId_PushCharacterIntoFishingActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingActionStateId.PopCharacterOutOfFishingActionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Character                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UFishingActionStateId::STATIC_PopCharacterOutOfFishingActionState(class AActor* Character)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingActionStateId.PopCharacterOutOfFishingActionState");

	UFishingActionStateId_PopCharacterOutOfFishingActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void UFishingActionStateId::AfterRead()
{
	UActionStateId::AfterRead();

}

void UFishingActionStateId::BeforeDelete()
{
	UActionStateId::BeforeDelete();

}

void UFishingRodActionStateInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFishingRodActionStateInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.FishingCompositeInputHandler.OnPrimaryItemUseReleasedRecieved
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnPrimaryItemUseReleasedRecieved()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnPrimaryItemUseReleasedRecieved");

	UFishingCompositeInputHandler_OnPrimaryItemUseReleasedRecieved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnPrimaryItemUsePressedRecieved
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnPrimaryItemUsePressedRecieved()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnPrimaryItemUsePressedRecieved");

	UFishingCompositeInputHandler_OnPrimaryItemUsePressedRecieved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnMovementInputY
// (Final, Native, Private)
// Parameters:
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnMovementInputY(float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnMovementInputY");

	UFishingCompositeInputHandler_OnMovementInputY_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnMovementInputX
// (Final, Native, Private)
// Parameters:
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnMovementInputX(float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnMovementInputX");

	UFishingCompositeInputHandler_OnMovementInputX_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnLookAroundRightStickInputY
// (Final, Native, Private)
// Parameters:
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnLookAroundRightStickInputY(float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnLookAroundRightStickInputY");

	UFishingCompositeInputHandler_OnLookAroundRightStickInputY_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnLookAroundRightStickInputX
// (Final, Native, Private)
// Parameters:
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnLookAroundRightStickInputX(float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnLookAroundRightStickInputX");

	UFishingCompositeInputHandler_OnLookAroundRightStickInputX_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnLookAroundMouseInputY
// (Final, Native, Private)
// Parameters:
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnLookAroundMouseInputY(float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnLookAroundMouseInputY");

	UFishingCompositeInputHandler_OnLookAroundMouseInputY_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnLookAroundMouseInputX
// (Final, Native, Private)
// Parameters:
// float                          InAmount                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnLookAroundMouseInputX(float InAmount)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnLookAroundMouseInputX");

	UFishingCompositeInputHandler_OnLookAroundMouseInputX_Params params;
	params.InAmount = InAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.FishingCompositeInputHandler.OnJumpNotificationRecieved
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<AthenaInput_EInputHandlerResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
TEnumAsByte<AthenaInput_EInputHandlerResult> UFishingCompositeInputHandler::OnJumpNotificationRecieved()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingCompositeInputHandler.OnJumpNotificationRecieved");

	UFishingCompositeInputHandler_OnJumpNotificationRecieved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UFishingCompositeInputHandler::AfterRead()
{
	UCompositeInputHandler::AfterRead();

	READ_PTR_FULL(Owner, AActor);
}

void UFishingCompositeInputHandler::BeforeDelete()
{
	UCompositeInputHandler::BeforeDelete();

	DELE_PTR_FULL(Owner);
}

void UFishingConditionStatTriggerType::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UFishingConditionStatTriggerType::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UFishingFloatInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFishingFloatInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UFishingRodInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UFishingRodInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void AFishingFloat::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(WaterInteractionComponent, UWaterInteractionComponent);
	READ_PTR_FULL(CollisionComponent, UBoxComponent);
	READ_PTR_FULL(FishingFloatSetupDataAsset, UFishingFloatSetupDataAsset);
	READ_PTR_FULL(FishingFloatMesh, UStaticMeshComponent);
}

void AFishingFloat::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(WaterInteractionComponent);
	DELE_PTR_FULL(CollisionComponent);
	DELE_PTR_FULL(FishingFloatSetupDataAsset);
	DELE_PTR_FULL(FishingFloatMesh);
}

void UFishingFloatSetupDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(FishingFloatPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(RodCastFloatLandInWater, UWwiseEvent);
	READ_PTR_FULL(CastingFloatMovementXY, UCurveFloat);
	READ_PTR_FULL(CastingFloatMovementZAtMinDistance, UCurveFloat);
	READ_PTR_FULL(CastingFloatMovementZAtMaxDistance, UCurveFloat);
	READ_PTR_FULL(ReelingInFloatMovementXY, UCurveFloat);
	READ_PTR_FULL(ReelingInFloatMovementZ, UCurveFloat);
	READ_PTR_FULL(SplashVFXWhenFloatLandsOnWater, UObject);
}

void UFishingFloatSetupDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(FishingFloatPool);
	DELE_PTR_FULL(RodCastFloatLandInWater);
	DELE_PTR_FULL(CastingFloatMovementXY);
	DELE_PTR_FULL(CastingFloatMovementZAtMinDistance);
	DELE_PTR_FULL(CastingFloatMovementZAtMaxDistance);
	DELE_PTR_FULL(ReelingInFloatMovementXY);
	DELE_PTR_FULL(ReelingInFloatMovementZ);
	DELE_PTR_FULL(SplashVFXWhenFloatLandsOnWater);
}

void UFishingFreeLookConstrainsDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFishingFreeLookConstrainsDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFishingMiniGameSetupDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFishingMiniGameSetupDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFishingMouseXAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UFishingMouseXAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UFishingMouseYAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UFishingMouseYAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UFishingMoveRightInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UFishingMoveRightInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UFishingMoveForwardInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UFishingMoveForwardInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UFishingRightStickXAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UFishingRightStickXAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

void UFishingRightStickYAnalogInputId::AfterRead()
{
	UAnalogInputId::AfterRead();

}

void UFishingRightStickYAnalogInputId::BeforeDelete()
{
	UAnalogInputId::BeforeDelete();

}

// Function Athena.FishingRod.Server_ToggleReeling
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           Reeling                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AFishingRod::Server_ToggleReeling(bool Reeling)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_ToggleReeling");

	AFishingRod_Server_ToggleReeling_Params params;
	params.Reeling = Reeling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Server_PlayerHasDetectedABlockedLine
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
void AFishingRod::Server_PlayerHasDetectedABlockedLine()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_PlayerHasDetectedABlockedLine");

	AFishingRod_Server_PlayerHasDetectedABlockedLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Server_PlayerHasDetectedABlockedFish
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
void AFishingRod::Server_PlayerHasDetectedABlockedFish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_PlayerHasDetectedABlockedFish");

	AFishingRod_Server_PlayerHasDetectedABlockedFish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Server_EndPreCasting
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Duration                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AFishingRod::Server_EndPreCasting(float Duration)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_EndPreCasting");

	AFishingRod_Server_EndPreCasting_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Server_BeginPreCasting
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
void AFishingRod::Server_BeginPreCasting()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_BeginPreCasting");

	AFishingRod_Server_BeginPreCasting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Server_BattlingStateChanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<Athena_EFishingMiniGamePlayerInputDirection> InputDirection                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// unsigned char                  BattlingDirection              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AFishingRod::Server_BattlingStateChanged(TEnumAsByte<Athena_EFishingMiniGamePlayerInputDirection> InputDirection, unsigned char BattlingDirection)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_BattlingStateChanged");

	AFishingRod_Server_BattlingStateChanged_Params params;
	params.InputDirection = InputDirection;
	params.BattlingDirection = BattlingDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Server_AddBaitToFloat
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AItemInfo*               SelectedItem                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AFishingRod::Server_AddBaitToFloat(class AItemInfo* SelectedItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Server_AddBaitToFloat");

	AFishingRod_Server_AddBaitToFloat_Params params;
	params.SelectedItem = SelectedItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_ServerState
// (Final, Native, Private)
void AFishingRod::OnRep_ServerState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_ServerState");

	AFishingRod_OnRep_ServerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_ReplicatedFishState
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FFishingRodReplicatedFishState PreviousReplicatedFishState    (ConstParm, Parm, OutParm, ReferenceParm)
void AFishingRod::OnRep_ReplicatedFishState(const struct FFishingRodReplicatedFishState& PreviousReplicatedFishState)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_ReplicatedFishState");

	AFishingRod_OnRep_ReplicatedFishState_Params params;
	params.PreviousReplicatedFishState = PreviousReplicatedFishState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_PlayerIsBattlingFish
// (Final, Native, Private)
void AFishingRod::OnRep_PlayerIsBattlingFish()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_PlayerIsBattlingFish");

	AFishingRod_OnRep_PlayerIsBattlingFish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_FishInteractionProxy
// (Final, Native, Private)
void AFishingRod::OnRep_FishInteractionProxy()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_FishInteractionProxy");

	AFishingRod_OnRep_FishInteractionProxy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_FishingMiniGamePlayerInput
// (Final, Native, Private)
void AFishingRod::OnRep_FishingMiniGamePlayerInput()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_FishingMiniGamePlayerInput");

	AFishingRod_OnRep_FishingMiniGamePlayerInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_ComedyItemOnFloat
// (Final, Native, Private)
void AFishingRod::OnRep_ComedyItemOnFloat()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_ComedyItemOnFloat");

	AFishingRod_OnRep_ComedyItemOnFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_CaughtFishClass
// (Final, Native, Private)
void AFishingRod::OnRep_CaughtFishClass()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_CaughtFishClass");

	AFishingRod_OnRep_CaughtFishClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_BattlingState
// (Final, Native, Private)
void AFishingRod::OnRep_BattlingState()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_BattlingState");

	AFishingRod_OnRep_BattlingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_BaitOnRodType
// (Final, Native, Private)
void AFishingRod::OnRep_BaitOnRodType()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_BaitOnRodType");

	AFishingRod_OnRep_BaitOnRodType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.OnRep_BaitOnFloat
// (Final, Native, Private)
void AFishingRod::OnRep_BaitOnFloat()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.OnRep_BaitOnFloat");

	AFishingRod_OnRep_BaitOnFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Multicast_RetractLine
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// TEnumAsByte<Athena_EFishingRodRetractLineVisuals> FishingRodRetractLineVisuals   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void AFishingRod::Multicast_RetractLine(TEnumAsByte<Athena_EFishingRodRetractLineVisuals> FishingRodRetractLineVisuals)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Multicast_RetractLine");

	AFishingRod_Multicast_RetractLine_Params params;
	params.FishingRodRetractLineVisuals = FishingRodRetractLineVisuals;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Multicast_RemoveFishInstant
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void AFishingRod::Multicast_RemoveFishInstant()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Multicast_RemoveFishInstant");

	AFishingRod_Multicast_RemoveFishInstant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Multicast_RemoveFishFromLine
// (Final, Net, Native, Event, NetMulticast, Private)
void AFishingRod::Multicast_RemoveFishFromLine()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Multicast_RemoveFishFromLine");

	AFishingRod_Multicast_RemoveFishFromLine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Multicast_FishEscaped
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
void AFishingRod::Multicast_FishEscaped()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Multicast_FishEscaped");

	AFishingRod_Multicast_FishEscaped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.FishingRod.Multicast_BringInACatch
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                           IsComedyItem                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
void AFishingRod::Multicast_BringInACatch(bool IsComedyItem)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.FishingRod.Multicast_BringInACatch");

	AFishingRod_Multicast_BringInACatch_Params params;
	params.IsComedyItem = IsComedyItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


void AFishingRod::AfterRead()
{
	ASkeletalMeshWieldableItem::AfterRead();

	READ_PTR_FULL(AuxiliaryRadialCategoryFilter, UClass);
	READ_PTR_FULL(NamedNotificationInputComponent, UNamedNotificationInputComponent);
	READ_PTR_FULL(InventoryItem, UInventoryItemComponent);
	READ_PTR_FULL(FishingRodSetupDataAsset, UFishingRodSetupDataAsset);
	READ_PTR_FULL(FishingSetupDataAssetInToSea, UFishingSetupDataAsset);
	READ_PTR_FULL(FishingSetupDataAssetInToPond, UFishingSetupDataAsset);
	READ_PTR_FULL(FishingMiniGameSetupDataAssetInToSea, UFishingMiniGameSetupDataAsset);
	READ_PTR_FULL(FishingMiniGameSetupDataAssetInToPond, UFishingMiniGameSetupDataAsset);
	READ_PTR_FULL(FishingFreeLookConstrainsDataAsset, UFishingFreeLookConstrainsDataAsset);
	READ_PTR_FULL(MaterialManipulationComponent, UMaterialManipulationComponent);
	READ_PTR_FULL(Rope, UFishingLineRenderComponent);
	READ_PTR_FULL(StatTriggerForCatchingAFish, UClass);
	READ_PTR_FULL(FishInteractionProxy, AActor);
	READ_PTR_FULL(BaitOnFloat, AItemProxy);
	READ_PTR_FULL(CaughtFishClass, UClass);
	READ_PTR_FULL(ComedyItemOnFloat, AItemProxy);
	READ_PTR_FULL(CaughtComedyItemDesc, UClass);
	READ_PTR_FULL(FishingFloatActor, AActor);
	READ_PTR_FULL(LocalOnlyBaitOnFloat, AItemProxy);
	READ_PTR_FULL(NonReplicatedLocalFishingFishOnRod, AFishingFish);
	READ_PTR_FULL(LocalOnlyComedyItemOnFloat, AItemProxy);
}

void AFishingRod::BeforeDelete()
{
	ASkeletalMeshWieldableItem::BeforeDelete();

	DELE_PTR_FULL(AuxiliaryRadialCategoryFilter);
	DELE_PTR_FULL(NamedNotificationInputComponent);
	DELE_PTR_FULL(InventoryItem);
	DELE_PTR_FULL(FishingRodSetupDataAsset);
	DELE_PTR_FULL(FishingSetupDataAssetInToSea);
	DELE_PTR_FULL(FishingSetupDataAssetInToPond);
	DELE_PTR_FULL(FishingMiniGameSetupDataAssetInToSea);
	DELE_PTR_FULL(FishingMiniGameSetupDataAssetInToPond);
	DELE_PTR_FULL(FishingFreeLookConstrainsDataAsset);
	DELE_PTR_FULL(MaterialManipulationComponent);
	DELE_PTR_FULL(Rope);
	DELE_PTR_FULL(StatTriggerForCatchingAFish);
	DELE_PTR_FULL(FishInteractionProxy);
	DELE_PTR_FULL(BaitOnFloat);
	DELE_PTR_FULL(CaughtFishClass);
	DELE_PTR_FULL(ComedyItemOnFloat);
	DELE_PTR_FULL(CaughtComedyItemDesc);
	DELE_PTR_FULL(FishingFloatActor);
	DELE_PTR_FULL(LocalOnlyBaitOnFloat);
	DELE_PTR_FULL(NonReplicatedLocalFishingFishOnRod);
	DELE_PTR_FULL(LocalOnlyComedyItemOnFloat);
}

void UFishingRodSetupDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

	READ_PTR_FULL(FishActorInteractionDesc, UClass);
	READ_PTR_FULL(FishingFloatType, UClass);
	READ_PTR_FULL(RodCastAudioDrawBack, UWwiseEvent);
	READ_PTR_FULL(RodCastAudioCast, UWwiseEvent);
	READ_PTR_FULL(RodBendStart, UWwiseEvent);
	READ_PTR_FULL(RodBendStop, UWwiseEvent);
	READ_PTR_FULL(RodCastReelLoopStart, UWwiseEvent);
	READ_PTR_FULL(RodCastReelLoopStop, UWwiseEvent);
	READ_PTR_FULL(FishingBendWrongDirectionStart, UWwiseEvent);
	READ_PTR_FULL(FishingBendWrongDirectionStop, UWwiseEvent);
	READ_PTR_FULL(FishingLineSnap, UWwiseEvent);
	READ_PTR_FULL(RodCastFishOutOfWaterWriggling, UWwiseEvent);
	READ_PTR_FULL(FishingRodPool, UWwiseObjectPoolWrapper);
	READ_PTR_FULL(FishTakenFromRod, UWwiseEvent);
	READ_PTR_FULL(BaitAddedToHook, UWwiseEvent);
}

void UFishingRodSetupDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

	DELE_PTR_FULL(FishActorInteractionDesc);
	DELE_PTR_FULL(FishingFloatType);
	DELE_PTR_FULL(RodCastAudioDrawBack);
	DELE_PTR_FULL(RodCastAudioCast);
	DELE_PTR_FULL(RodBendStart);
	DELE_PTR_FULL(RodBendStop);
	DELE_PTR_FULL(RodCastReelLoopStart);
	DELE_PTR_FULL(RodCastReelLoopStop);
	DELE_PTR_FULL(FishingBendWrongDirectionStart);
	DELE_PTR_FULL(FishingBendWrongDirectionStop);
	DELE_PTR_FULL(FishingLineSnap);
	DELE_PTR_FULL(RodCastFishOutOfWaterWriggling);
	DELE_PTR_FULL(FishingRodPool);
	DELE_PTR_FULL(FishTakenFromRod);
	DELE_PTR_FULL(BaitAddedToHook);
}

void UFishingSetupDataAsset::AfterRead()
{
	UDataAsset::AfterRead();

}

void UFishingSetupDataAsset::BeforeDelete()
{
	UDataAsset::BeforeDelete();

}

void UFishItemConditionalStatTrigger::AfterRead()
{
	UConditionalStatsTriggerType::AfterRead();

}

void UFishItemConditionalStatTrigger::BeforeDelete()
{
	UConditionalStatsTriggerType::BeforeDelete();

}

void UCanPlayEnsembleWithAnotherCrewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UCanPlayEnsembleWithAnotherCrewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEnsembleInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEnsembleInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UShantyUnlockDesc::AfterRead()
{
	UEntitlementDesc::AfterRead();

}

void UShantyUnlockDesc::BeforeDelete()
{
	UEntitlementDesc::BeforeDelete();

}

void UShantyCategory::AfterRead()
{
	UCategoryBase::AfterRead();

}

void UShantyCategory::BeforeDelete()
{
	UCategoryBase::BeforeDelete();

}

// Function Athena.Ensemble.OnRep_Instruments
// (Final, Native, Private)
void AEnsemble::OnRep_Instruments()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ensemble.OnRep_Instruments");

	AEnsemble_OnRep_Instruments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.Ensemble.GetNumInstruments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AEnsemble::GetNumInstruments()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ensemble.GetNumInstruments");

	AEnsemble_GetNumInstruments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ensemble.GetNumInstrumentData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AEnsemble::GetNumInstrumentData()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ensemble.GetNumInstrumentData");

	AEnsemble_GetNumInstrumentData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ensemble.GetInstruments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
TArray<class AActor*> AEnsemble::GetInstruments()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ensemble.GetInstruments");

	AEnsemble_GetInstruments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.Ensemble.GetInstrumentDataPlaybackPosition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int AEnsemble::GetInstrumentDataPlaybackPosition(int Index)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.Ensemble.GetInstrumentDataPlaybackPosition");

	AEnsemble_GetInstrumentDataPlaybackPosition_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void AEnsemble::AfterRead()
{
	AActor::AfterRead();

	READ_PTR_FULL(ShantyDesc, UShantyItemDesc);
}

void AEnsemble::BeforeDelete()
{
	AActor::BeforeDelete();

	DELE_PTR_FULL(ShantyDesc);
}

void UEnsembleContextControlInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEnsembleContextControlInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UEnsembleContextViewInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UEnsembleContextViewInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

void UInstrumentInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UInstrumentInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

// Function Athena.ShantyInterface.RequestInstrumentStop
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  InstrumentActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShantyInterface::RequestInstrumentStop(class AActor* InstrumentActor)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShantyInterface.RequestInstrumentStop");

	UShantyInterface_RequestInstrumentStop_Params params;
	params.InstrumentActor = InstrumentActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShantyInterface.RequestInstrumentPlay
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  InstrumentActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TEnumAsByte<Athena_EShantyEnsembleOption> EnsembleJoinOption             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShantyItemDesc*         InTargetShanty                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
void UShantyInterface::RequestInstrumentPlay(class AActor* InstrumentActor, TEnumAsByte<Athena_EShantyEnsembleOption> EnsembleJoinOption, class UShantyItemDesc* InTargetShanty)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShantyInterface.RequestInstrumentPlay");

	UShantyInterface_RequestInstrumentPlay_Params params;
	params.InstrumentActor = InstrumentActor;
	params.EnsembleJoinOption = EnsembleJoinOption;
	params.InTargetShanty = InTargetShanty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Athena.ShantyInterface.GetNumberOfShantiesPlaying
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UShantyInterface::GetNumberOfShantiesPlaying()
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShantyInterface.GetNumberOfShantiesPlaying");

	UShantyInterface_GetNumberOfShantiesPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Athena.ShantyInterface.GetNumberOfInstrumentsPlayingOnEnsemble
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            EnsembleIndex                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
int UShantyInterface::GetNumberOfInstrumentsPlayingOnEnsemble(int EnsembleIndex)
{
	static UFunction* fn = UObject::FindObject<UFunction>("Function Athena.ShantyInterface.GetNumberOfInstrumentsPlayingOnEnsemble");

	UShantyInterface_GetNumberOfInstrumentsPlayingOnEnsemble_Params params;
	params.EnsembleIndex = EnsembleIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


void UShantyInterface::AfterRead()
{
	UInterface::AfterRead();

}

void UShantyInterface::BeforeDelete()
{
	UInterface::BeforeDelete();

}

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
