#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x40 (Full Size[0x900] - InheritedSize[0x8c0]
class CustomMap: public RenderToTextureMapBase
{
public:
	char                                                         pad0x8_J6ATN[0x8];                                 // 0x8c0(0x8)
	class Font*                                                  Font;                                              // 0x8c8(0x8)
	TArray<class CustomMapDisplayObjectBase*>                    DisplayItems;                                      // 0x8d0(0x10)
	float                                                        LineSpacing;                                       // 0x8e0(0x4)
	char                                                         pad0x1c_0H772[0x1c];                               // 0x8e4(0x1c)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class CustomMapData: public DataAsset
{
public:
	class UClass*                                                CustomMapItemDescClass;                            // 0x28(0x8)
	class Font*                                                  Font;                                              // 0x30(0x8)
	TArray<class CustomMapDataTypeBase*>                         MapDisplayItemList;                                // 0x38(0x10)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class CustomMapDisplayObjectBase: public Object
{
public:
	bool                                                         Visible;                                           // 0x28(0x1)
	char                                                         pad0x3_HQI66[0x3];                                 // 0x29(0x3)
	struct Guid                                                  Guid;                                              // 0x2c(0x10)
	char                                                         pad0x4_0GS25[0x4];                                 // 0x3c(0x4)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class CustomMapCollectionInterface: public Interface
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class CustomMapDataTypeBase: public Object
{
public:
	bool                                                         Visible;                                           // 0x28(0x1)
	char                                                         pad0x3_0RWNN[0x3];                                 // 0x29(0x3)
	struct Guid                                                  Guid;                                              // 0x2c(0x10)
	char                                                         pad0x4_U03PK[0x4];                                 // 0x3c(0x4)
};


// Size 0x8 (Full Size[0x40] - InheritedSize[0x38]
class CustomMapSettings: public DeveloperSettings
{
public:
	class UClass*                                                CustomMapItemDescClass;                            // 0x38(0x8)
};


// Size 0x10 (Full Size[0x50] - InheritedSize[0x40]
class CustomMapDisplayObjectPositional: public CustomMapDisplayObjectBase
{
public:
	struct Vector2D                                              Position;                                          // 0x40(0x8)
	float                                                        Orientation;                                       // 0x48(0x4)
	char                                                         pad0x4_2DX57[0x4];                                 // 0x4c(0x4)
};


// Size 0x10 (Full Size[0x50] - InheritedSize[0x40]
class CustomMapDataTypePositional: public CustomMapDataTypeBase
{
public:
	struct Vector2D                                              Position;                                          // 0x40(0x8)
	float                                                        Orientation;                                       // 0x48(0x4)
	char                                                         pad0x4_OFYM1[0x4];                                 // 0x4c(0x4)
};


// Size 0x58 (Full Size[0xa8] - InheritedSize[0x50]
class CustomMapDataTypeText: public CustomMapDataTypePositional
{
public:
	struct FText                                                 Text;                                              // 0x50(0x38)
	float                                                        MaxTextWidth;                                      // 0x88(0x4)
	float                                                        FontScale;                                         // 0x8c(0x4)
	bool                                                         StrikeThrough;                                     // 0x90(0x1)
	char                                                         pad0x3_HU6LX[0x3];                                 // 0x91(0x3)
	float                                                        StrikethroughThickness;                            // 0x94(0x4)
	struct LinearColor                                           TextColour;                                        // 0x98(0x10)
};


// Size 0xb8 (Full Size[0x108] - InheritedSize[0x50]
class CustomMapDisplayObjectText: public CustomMapDisplayObjectPositional
{
public:
	struct FText                                                 Text;                                              // 0x50(0x38)
	float                                                        MaxTextWidth;                                      // 0x88(0x4)
	float                                                        FontScale;                                         // 0x8c(0x4)
	bool                                                         StrikeThrough;                                     // 0x90(0x1)
	char                                                         pad0x3_CF6ZV[0x3];                                 // 0x91(0x3)
	float                                                        StrikethroughThickness;                            // 0x94(0x4)
	struct LinearColor                                           TextColour;                                        // 0x98(0x10)
	TArray<struct TreasureMapTextEntry>                          TextArguments;                                     // 0xa8(0x10)
	char                                                         pad0x50_3G9OX[0x50];                               // 0xb8(0x50)
};


// Size 0x80 (Full Size[0xd0] - InheritedSize[0x50]
class CustomMapDisplayObjectImage: public CustomMapDisplayObjectPositional
{
public:
	struct StringAssetReference                                  WeakImage;                                         // 0x50(0x10)
	float                                                        Width;                                             // 0x60(0x4)
	float                                                        Height;                                            // 0x64(0x4)
	bool                                                         FlipX;                                             // 0x68(0x1)
	bool                                                         ScaleHeightOnMultipleLines;                        // 0x69(0x1)
	char                                                         pad0x2_Q6R7O[0x2];                                 // 0x6a(0x2)
	struct LinearColor                                           ImageColour;                                       // 0x6c(0x10)
	char                                                         ImageBlendMode;                                    // 0x7c(0x1)
	char                                                         pad0x3_YNN9I[0x3];                                 // 0x7d(0x3)
	struct TreasureMapWidgetTexture                              TreasureMapWidgetTexture;                          // 0x80(0x30)
	class Texture*                                               CurrentlySetImage;                                 // 0xb0(0x8)
	char                                                         pad0x18_JTNDE[0x18];                               // 0xb8(0x18)
};


// Size 0x40 (Full Size[0x90] - InheritedSize[0x50]
class CustomMapDataTypeImage: public CustomMapDataTypePositional
{
public:
	char                                                         pad0x20_F0VPG[0x20];                               // 0x50(0x20)
	float                                                        Width;                                             // 0x70(0x4)
	float                                                        Height;                                            // 0x74(0x4)
	bool                                                         FlipX;                                             // 0x78(0x1)
	bool                                                         ScaleHeightOnMultipleLines;                        // 0x79(0x1)
	char                                                         pad0x2_3X6K3[0x2];                                 // 0x7a(0x2)
	struct LinearColor                                           ImageColour;                                       // 0x7c(0x10)
	char                                                         ImageBlendMode;                                    // 0x8c(0x1)
	char                                                         pad0x3_5HQVY[0x3];                                 // 0x8d(0x3)
};


