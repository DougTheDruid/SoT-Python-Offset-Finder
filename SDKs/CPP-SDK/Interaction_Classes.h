#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "Interaction_Structs.h"


// Size 0xb0 (Full Size[0x690] - InheritedSize[0x5e0]
class MockActorWithCharacterInteractionComponent: public Character
{
public:
	class CharacterInteractionComponent*                         CharacterInteractionComponent;                     // 0x5e8(0x8)
};


// Size 0x48 (Full Size[0x70] - InheritedSize[0x28]
class InteractableService: public Object
{
public:
	TArray<class InteractableArea*>                              InteractableAreas;                                 // 0x38(0x10)
};


// Size 0x28 (Full Size[0xf0] - InheritedSize[0xc8]
class PlayerInteractionTrackerComponent: public ActorComponent
{
public:
	TArray<struct UniqueNetIdRepl>                               InteractedPlayers;                                 // 0xd0(0x10)
};


// Size 0x48 (Full Size[0x70] - InheritedSize[0x28]
class InteractableArea: public Object
{
public:
	struct BoxSphereBounds                                       Bounds;                                            // 0x28(0x1c)
	struct FName                                                 Name;                                              // 0x44(0x8)
	class Object*                                                Interactable;                                      // 0x50(0x8)
	class Actor*                                                 Parent;                                            // 0x58(0x8)
};


// Size 0xd0 (Full Size[0x6d0] - InheritedSize[0x600]
class CharacterInteractionComponent: public BoxComponent
{
public:
	class InteractableArea*                                      CurrentOptimalInteractable;                        // 0x600(0x8)
};


// Size 0x18 (Full Size[0xe0] - InheritedSize[0xc8]
class InteractionPreventionComponent: public ActorComponent
{
public:
	TArray<class Actor*>                                         ActorsToPreventInteractingWith;                    // 0xd0(0x10)
};


// Size 0x30 (Full Size[0x3f8] - InheritedSize[0x3c8]
class MockInteractorActor: public Actor
{
public:
	class Object*                                                FocusedInteractable;                               // 0x3d0(0x8)
	class Object*                                                InteractedObject;                                  // 0x3d8(0x8)
	class UClass*                                                InteractNotificationType;                          // 0x3e0(0x8)
	TArray<class Class*>                                         ValidInteractNotificationIds;                      // 0x3e8(0x10)
};


// Size 0x70 (Full Size[0x138] - InheritedSize[0xc8]
class InteractableComponent: public ActorComponent
{
public:
	struct FName                                                 FeatureFlag;                                       // 0xd0(0x8)
	struct Vector                                                BoxExtent;                                         // 0xd8(0xc)
	struct Vector                                                BoxOrigin;                                         // 0xe4(0xc)
	struct Rotator                                               BoxRotation;                                       // 0xf0(0xc)
	bool                                                         MayBeGrouped;                                      // 0xfc(0x1)
	bool                                                         ProxyForActorInteraction;                          // 0xfc(0x1)
	bool                                                         RequiresFacingFront;                               // 0xfc(0x1)
	bool                                                         RequiresNotAirborne;                               // 0xfc(0x1)
	bool                                                         RequiresNotSwimming;                               // 0xfc(0x1)
	float                                                        InteractionRadius;                                 // 0x100(0x4)
	TArray<class InteractionPrerequisiteBase*>                   InteractionPrerequisites;                          // 0x108(0x10)
	class InteractableArea*                                      InteractableArea;                                  // 0x118(0x8)
	char                                                         CurrentInteractionState;                           // 0x120(0x1)
};


