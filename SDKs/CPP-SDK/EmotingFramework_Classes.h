#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "EmotingFramework_Structs.h"


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class EmoteIdListingAsset: public DataAsset
{
public:
	TArray<struct Name>                                          EmoteIds;                                          // 0x28(0x10)
};


// Size 0x130 (Full Size[0x4d0] - InheritedSize[0x3a0]
class EmoteDice: public Actor
{
public:
	char                                                         pad0x130_X7273[0x130];                             // 0x3a0(0x130)
};


// Size 0x128 (Full Size[0x4c8] - InheritedSize[0x3a0]
class EmoteCoin: public Actor
{
public:
	char                                                         pad0x128_C6W1N[0x128];                             // 0x3a0(0x128)
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class BrokenOutOfWalkableDisguiseConditionalStatsTrigger: public ConditionalStatsTriggerType
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class DisguiseHandlerInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x38] - InheritedSize[0x38]
class EmoteZoomMouseAnalogInputId: public AnalogInputId
{
public:
};


// Size 0x0 (Full Size[0x38] - InheritedSize[0x38]
class EmoteZoomOutAnalogInputId: public AnalogInputId
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EmoteCameraInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x40] - InheritedSize[0x38]
class EmoteSettings: public DeveloperSettings
{
public:
	int                                                          NumPages;                                          // 0x38(0x4)
	char                                                         pad0x4_PLYW3[0x4];                                 // 0x3c(0x4)
};


// Size 0x0 (Full Size[0x38] - InheritedSize[0x38]
class EmoteZoomInAnalogInputId: public AnalogInputId
{
public:
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class IsTargetInDisguiseStatCondition: public TargetedStatCondition
{
public:
	TArray<char>                                                 TargetDisguiseTypes;                               // 0x30(0x10)
};


// Size 0x140 (Full Size[0x4e0] - InheritedSize[0x3a0]
class EmoteRandomObject: public Actor
{
public:
	char                                                         pad0x8_9DGXA[0x8];                                 // 0x3a0(0x8)
	class StaticMeshComponent*                                   MeshComponent;                                     // 0x3a8(0x8)
	class MaterialInstanceDynamic*                               DynamicMaterialInstance;                           // 0x3b0(0x8)
	char                                                         pad0x128_YG959[0x128];                             // 0x3b8(0x128)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EmoteInteractionObjectsProviderInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class WalkableEmotesInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class BreakWalkableDisguiseConditionalStatsTrigger: public ConditionalStatsTriggerType
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class WalkableEmoteDistanceConditionalStatsTrigger: public ConditionalStatsTriggerType
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EmotePropData: public DataAsset
{
public:
};


// Size 0x150 (Full Size[0x4f0] - InheritedSize[0x3a0]
class EmoteCard: public Actor
{
public:
	char                                                         pad0x8_9VWYE[0x8];                                 // 0x3a0(0x8)
	class MaterialInstanceDynamic*                               DynamicCardSelectionMaterialInstance;              // 0x3a8(0x8)
	class StaticMeshComponent*                                   MeshComponent;                                     // 0x3b0(0x8)
	struct FName                                                 RandomCardParameterName;                           // 0x3b8(0x8)
	struct Int32Range                                            RandomCardParameterRange;                          // 0x3c0(0x10)
	char                                                         pad0x120_W5UZG[0x120];                             // 0x3d0(0x120)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class EmoteRandomFromListAsset: public DataAsset
{
public:
	TArray<struct EmoteData>                                     EmoteDataList;                                     // 0x28(0x10)
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class WalkableEmoteDataAsset: public DataAsset
{
public:
	float                                                        ProjectileCapsuleZModifierWhenInBarrelDisguise;    // 0x28(0x4)
	float                                                        ProjectileCapsuleZModifierWhenInChestDisguise;     // 0x2c(0x4)
};


// Size 0xb8 (Full Size[0x170] - InheritedSize[0xb8]
class DisguiseHandlerComponent: public ActorComponent
{
public:
	char                                                         pad0x8_56MOZ[0x8];                                 // 0xb8(0x8)
	class DisguiseTypesDataAsset*                                DisguiseTypesDataAsset;                            // 0xc0(0x8)
	class CurveFloat*                                            BarrelDisguiseInvisibilityCurve;                   // 0xc8(0x8)
	class UClass*                                                BarrelDisguiseItemSpawnClass;                      // 0xd0(0x8)
	class CurveFloat*                                            ChestDisguiseInvisibilityCurve;                    // 0xd8(0x8)
	class UClass*                                                ChestDisguiseItemSpawnClass;                       // 0xe0(0x8)
	class CurveFloat*                                            DisguiseInvisibilityCurve;                         // 0xe8(0x8)
	struct DisguiseTypeData                                      DisguiseTypeData;                                  // 0xf0(0x3)
	char                                                         pad0x1_JSV66[0x1];                                 // 0xf3(0x1)
	float                                                        CurrentInvisibilityValue;                          // 0xf4(0x4)
	char                                                         pad0x18_2CUCH[0x18];                               // 0xf8(0x18)
	class MemoryConstrainedMeshInitializer*                      DisguiseMMCMeshInitializer;                        // 0x110(0x8)
	bool                                                         IsPiratePreviewActor;                              // 0x118(0x1)
	char                                                         pad0x57_2UC5F[0x57];                               // 0x119(0x57)
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class EmotePropDiceData: public EmotePropData
{
public:
	char                                                         DiceType;                                          // 0x28(0x1)
	char                                                         pad0x3_3KZ4E[0x3];                                 // 0x29(0x3)
	int                                                          Outcome;                                           // 0x2c(0x4)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class EmotePropRandomObjectData: public EmotePropData
{
public:
	TArray<struct EmotePropRandomObjectInfo>                     PossibleObjects;                                   // 0x28(0x10)
};


