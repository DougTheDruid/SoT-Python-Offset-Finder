// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x28
struct TargetedPayloadConditionBase
{
public:
	char                                                         pad0x8_79XTW[0x8];                                 // 0x0(0x8)
	struct ConditionContextPayloadSelectorInstance               PayloadSelector;                                   // 0x8(0x20)
};


// Size 0x8
struct ConditionBase
{
public:
	char                                                         pad0x8_1P17C[0x8];                                 // 0x0(0x8)
};


// Size 0x20
struct ConditionContextPayloadSelectorInstance
{
public:
	char                                                         pad0x20_MPTOG[0x20];                               // 0x0(0x20)
};


// Size 0x20
struct ConditionInstance
{
public:
	char                                                         pad0x20_73MIS[0x20];                               // 0x0(0x20)
};


// Size 0x18
struct ConditionContextPayloadSelectorBase
{
public:
	char                                                         pad0x8_KGI18[0x8];                                 // 0x0(0x8)
	struct ConditionContextPayloadTarget                         PayloadTarget;                                     // 0x8(0x10)
};


// Size 0x10
struct ConditionContextPayloadTarget
{
public:
	class ScriptStruct*                                          PayloadStruct;                                     // 0x0(0x8)
	struct FName                                                 PayloadMember;                                     // 0x8(0x8)
};


// Size 0x18
struct AndCondition
{
public:
	char                                                         pad0x8_2SUFK[0x8];                                 // 0x0(0x8)
	TArray<struct ConditionInstance>                             Conditions;                                        // 0x8(0x10)
};


// Size 0x10
struct ConditionFromAsset
{
public:
	char                                                         pad0x8_9UPKZ[0x8];                                 // 0x0(0x8)
	class ConditionRootAsset*                                    ConditionAsset;                                    // 0x8(0x8)
};


// Size 0x18
struct IsFeatureEnabledCondition
{
public:
	char                                                         pad0x8_ZKYFN[0x8];                                 // 0x0(0x8)
	struct FeatureFlag                                           Feature;                                           // 0x8(0xc)
	char                                                         pad0x4_XYESD[0x4];                                 // 0x14(0x4)
};


// Size 0x30
struct IsGameOnSpecificPlayModeCondition
{
public:
	char                                                         pad0x28_N79AZ[0x28];                               // 0x0(0x28)
	byte                                                         TargetMode;                                        // 0x28(0x1)
	char                                                         pad0x7_46QRX[0x7];                                 // 0x29(0x7)
};


// Size 0x30
struct IsGameOnSpecificPlayModeVariantCondition
{
public:
	char                                                         pad0x28_URTVC[0x28];                               // 0x0(0x28)
	byte                                                         TargetMode;                                        // 0x28(0x1)
	char                                                         pad0x7_GUU5H[0x7];                                 // 0x29(0x7)
};


// Size 0x38
struct IsObjectOfTypeCondition
{
public:
	char                                                         pad0x28_15727[0x28];                               // 0x0(0x28)
	TArray<Assetclass TargetObjectClasses>                       TargetObjectClasses;                               // 0x28(0x10)
};


// Size 0x48
struct IsSpecifiedActorCondition
{
public:
	char                                                         pad0x8_2GHYL[0x8];                                 // 0x0(0x8)
	struct ConditionContextPayloadSelectorInstance               SpecifyingActorPayloadSelector;                    // 0x8(0x20)
	struct ConditionContextPayloadSelectorInstance               TargetActorPayloadSelector;                        // 0x28(0x20)
};


// Size 0x28
struct NotCondition
{
public:
	char                                                         pad0x8_BCXVV[0x8];                                 // 0x0(0x8)
	struct ConditionInstance                                     Condition;                                         // 0x8(0x20)
};


// Size 0x18
struct OrCondition
{
public:
	char                                                         pad0x8_Y6XF6[0x8];                                 // 0x0(0x8)
	TArray<struct ConditionInstance>                             Conditions;                                        // 0x8(0x10)
};


// Size 0x8
struct ConditionContextPayloadBase
{
public:
	char                                                         pad0x8_C8BE7[0x8];                                 // 0x0(0x8)
};


// Size 0x10
struct WorldObjectConditionContextPayload
{
public:
	char                                                         pad0x8_FCAJY[0x8];                                 // 0x0(0x8)
	class World*                                                 WorldObject;                                       // 0x8(0x8)
};


// Size 0x10
struct TargetConditionContextPayload
{
public:
	char                                                         pad0x8_RVLOO[0x8];                                 // 0x0(0x8)
	class Actor*                                                 Target;                                            // 0x8(0x8)
};


// Size 0x10
struct InstigatorConditionContextPayload
{
public:
	char                                                         pad0x8_RLPWA[0x8];                                 // 0x0(0x8)
	class Actor*                                                 Instigator;                                        // 0x8(0x8)
};


// Size 0x18
struct ConditionContextPayloadComponentOwnerSelector
{
public:
	char                                                         pad0x18_1BTI4[0x18];                               // 0x0(0x18)
};


// Size 0x18
struct ConditionContextPayloadObjectSelector
{
public:
	char                                                         pad0x18_7SMWO[0x18];                               // 0x0(0x18)
};


}