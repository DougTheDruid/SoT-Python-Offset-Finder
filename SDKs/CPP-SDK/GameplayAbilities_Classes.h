// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class AttributeSet: public Object
{
public:
	char                                                         pad0x8_GTJUM[0x8];                                 // 0x28(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class GameplayCueInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AbilitySystemBlueprintLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x550 (Full Size[0x578] - InheritedSize[0x28]
class GameplayEffect: public Object
{
public:
	char                                                         pad0x8_NETM1[0x8];                                 // 0x28(0x8)
	byte                                                         DurationPolicy;                                    // 0x30(0x1)
	char                                                         pad0x7_ESTMW[0x7];                                 // 0x31(0x7)
	struct GameplayEffectModifierMagnitude                       DurationMagnitude;                                 // 0x38(0x170)
	struct ScalableFloat                                         Period;                                            // 0x1a8(0x20)
	bool                                                         bExecutePeriodicEffectOnApplication;               // 0x1c8(0x1)
	char                                                         pad0x7_E7JDJ[0x7];                                 // 0x1c9(0x7)
	TArray<struct GameplayModifierInfo>                          Modifiers;                                         // 0x1d0(0x10)
	TArray<struct GameplayEffectExecutionDefinition>             Executions;                                        // 0x1e0(0x10)
	struct ScalableFloat                                         ChanceToApplyToTarget;                             // 0x1f0(0x20)
	TArray<class Class*>                                         TargetEffectClasses;                               // 0x210(0x10)
	TArray<class GameplayEffect*>                                TargetEffects;                                     // 0x220(0x10)
	TArray<class Class*>                                         OverflowEffects;                                   // 0x230(0x10)
	bool                                                         bDenyOverflowApplication;                          // 0x240(0x1)
	bool                                                         bClearStackOnOverflow;                             // 0x241(0x1)
	char                                                         pad0x6_XD1KZ[0x6];                                 // 0x242(0x6)
	TArray<class Class*>                                         PrematureExpirationEffectClasses;                  // 0x248(0x10)
	TArray<class Class*>                                         RoutineExpirationEffectClasses;                    // 0x258(0x10)
	bool                                                         bRequireModifierSuccessToTriggerCues;              // 0x268(0x1)
	char                                                         pad0x7_1NGFE[0x7];                                 // 0x269(0x7)
	TArray<struct GameplayEffectCue>                             GameplayCues;                                      // 0x270(0x10)
	class GameplayEffectUIData*                                  UIData;                                            // 0x280(0x8)
	struct InheritedTagContainer                                 InheritableGameplayEffectTags;                     // 0x288(0x78)
	struct GameplayTagContainer                                  GameplayEffectTags;                                // 0x300(0x28)
	struct InheritedTagContainer                                 InheritableOwnedTagsContainer;                     // 0x328(0x78)
	struct GameplayTagContainer                                  OwnedTagsContainer;                                // 0x3a0(0x28)
	struct GameplayTagRequirements                               OngoingTagRequirements;                            // 0x3c8(0x50)
	struct GameplayTagRequirements                               ApplicationTagRequirements;                        // 0x418(0x50)
	struct InheritedTagContainer                                 RemoveGameplayEffectsWithTags;                     // 0x468(0x78)
	struct GameplayTagContainer                                  ClearTagsContainer;                                // 0x4e0(0x28)
	struct GameplayTagRequirements                               GrantedApplicationImmunityTags;                    // 0x508(0x50)
	byte                                                         StackingType;                                      // 0x558(0x1)
	char                                                         pad0x3_H1HT8[0x3];                                 // 0x559(0x3)
	int                                                          StackLimitCount;                                   // 0x55c(0x4)
	byte                                                         StackDurationRefreshPolicy;                        // 0x560(0x1)
	byte                                                         StackPeriodResetPolicy;                            // 0x561(0x1)
	char                                                         pad0x6_4Q5YV[0x6];                                 // 0x562(0x6)
	TArray<struct GameplayAbilitySpecDef>                        GrantedAbilities;                                  // 0x568(0x10)
};


// Size 0x420 (Full Size[0x448] - InheritedSize[0x28]
class GameplayAbility: public Object
{
public:
	char                                                         pad0x40_Q2CJ9[0x40];                               // 0x28(0x40)
	struct GameplayTagContainer                                  AbilityTags;                                       // 0x68(0x28)
	char                                                         pad0x18_RA7G9[0x18];                               // 0x90(0x18)
	bool                                                         bReplicateInputDirectly;                           // 0xa8(0x1)
	char                                                         pad0x27_ZN3CO[0x27];                               // 0xa9(0x27)
	byte                                                         ReplicationPolicy;                                 // 0xd0(0x1)
	byte                                                         InstancingPolicy;                                  // 0xd1(0x1)
	bool                                                         bServerRespectsRemoteAbilityCancellation;          // 0xd2(0x1)
	bool                                                         bRetriggerInstancedAbility;                        // 0xd3(0x1)
	char                                                         pad0x4_MKK1N[0x4];                                 // 0xd4(0x4)
	struct GameplayAbilityActivationInfo                         CurrentActivationInfo;                             // 0xd8(0x20)
	struct GameplayEventData                                     CurrentEventData;                                  // 0xf8(0xa0)
	byte                                                         NetExecutionPolicy;                                // 0x198(0x1)
	char                                                         pad0x7_JQOAC[0x7];                                 // 0x199(0x7)
	class UClass*                                                CostGameplayEffectClass;                           // 0x1a0(0x8)
	class GameplayEffect*                                        CostGameplayEffect;                                // 0x1a8(0x8)
	TArray<struct AbilityTriggerData>                            AbilityTriggers;                                   // 0x1b0(0x10)
	class UClass*                                                CooldownGameplayEffectClass;                       // 0x1c0(0x8)
	class GameplayEffect*                                        CooldownGameplayEffect;                            // 0x1c8(0x8)
	struct GameplayTagQuery                                      CancelAbilitiesMatchingTagQuery;                   // 0x1d0(0x48)
	struct GameplayTagQuery                                      ConstTagQuery;                                     // 0x218(0x48)
	struct GameplayTagContainer                                  CancelAbilitiesWithTag;                            // 0x260(0x28)
	struct GameplayTagContainer                                  BlockAbilitiesWithTag;                             // 0x288(0x28)
	struct GameplayTagContainer                                  ActivationOwnedTags;                               // 0x2b0(0x28)
	struct GameplayTagContainer                                  ActivationRequiredTags;                            // 0x2d8(0x28)
	struct GameplayTagContainer                                  ActivationBlockedTags;                             // 0x300(0x28)
	struct GameplayTagContainer                                  SourceRequiredTags;                                // 0x328(0x28)
	struct GameplayTagContainer                                  SourceBlockedTags;                                 // 0x350(0x28)
	struct GameplayTagContainer                                  TargetRequiredTags;                                // 0x378(0x28)
	struct GameplayTagContainer                                  TargetBlockedTags;                                 // 0x3a0(0x28)
	char                                                         pad0x70_BAGB3[0x70];                               // 0x3c8(0x70)
	class AnimMontage*                                           CurrentMontage;                                    // 0x438(0x8)
	bool                                                         bIsActive;                                         // 0x440(0x1)
	bool                                                         bIsCancelable;                                     // 0x441(0x1)
	bool                                                         bIsBlockingOtherAbilities;                         // 0x442(0x1)
	char                                                         pad0x5_2FVQT[0x5];                                 // 0x443(0x5)
};


// Size 0xb70 (Full Size[0xc98] - InheritedSize[0x128]
class AbilitySystemComponent: public GameplayTasksComponent
{
public:
	char                                                         pad0x8_WR2KY[0x8];                                 // 0x128(0x8)
	TArray<struct AttributeDefaults>                             DefaultStartingData;                               // 0x130(0x10)
	TArray<class AttributeSet*>                                  SpawnedAttributes;                                 // 0x140(0x10)
	struct PredictionKey                                         ReplicatedPredictionKey;                           // 0x150(0x18)
	char                                                         pad0x78_5018U[0x78];                               // 0x168(0x78)
	float                                                        OutgoingDuration;                                  // 0x1e0(0x4)
	float                                                        IncomingDuration;                                  // 0x1e4(0x4)
	struct GameplayAbilitySpecContainer                          ActivatableAbilities;                              // 0x1e8(0xc0)
	char                                                         pad0x50_N1Z2H[0x50];                               // 0x2a8(0x50)
	TArray<class GameplayAbility*>                               AllReplicatedInstancedAbilities;                   // 0x2f8(0x10)
	char                                                         pad0x1b0_GFEC9[0x1b0];                             // 0x308(0x1b0)
	TArray<class GameplayAbilityTargetActor*>                    SpawnedTargetActors;                               // 0x4b8(0x10)
	struct GameplayAbilityRepAnimMontage                         RepAnimMontageInfo;                                // 0x4c8(0x30)
	struct GameplayAbilityLocalAnimMontage                       LocalAnimMontageInfo;                              // 0x4f8(0x30)
	char                                                         pad0xa0_L0E1V[0xa0];                               // 0x528(0xa0)
	class Actor*                                                 OwnerActor;                                        // 0x5c8(0x8)
	class Actor*                                                 AvatarActor;                                       // 0x5d0(0x8)
	char                                                         pad0x18_X5E54[0x18];                               // 0x5d8(0x18)
	struct ActiveGameplayEffectsContainer                        ActiveGameplayEffects;                             // 0x5f0(0x368)
	struct ActiveGameplayCueContainer                            ActiveGameplayCues;                                // 0x958(0xc0)
	char                                                         pad0x130_KPMRQ[0x130];                             // 0xa18(0x130)
	TArray<Byte BlockedAbilityBindings>                          BlockedAbilityBindings;                            // 0xb48(0x10)
	char                                                         pad0x140_KEOLZ[0x140];                             // 0xb58(0x140)
};


// Size 0x0 (Full Size[0x4c0] - InheritedSize[0x4c0]
class AbilitySystemDebugHUD: public HUD
{
public:
};


// Size 0x108 (Full Size[0x130] - InheritedSize[0x28]
class AbilitySystemGlobals: public Object
{
public:
	struct StringClassReference                                  AbilitySystemGlobalsClassName;                     // 0x28(0x10)
	struct GameplayTag                                           ActivateFailCooldownTag;                           // 0x38(0x8)
	struct FName                                                 ActivateFailCooldownName;                          // 0x40(0x8)
	struct GameplayTag                                           ActivateFailCostTag;                               // 0x48(0x8)
	struct FName                                                 ActivateFailCostName;                              // 0x50(0x8)
	struct GameplayTag                                           ActivateFailTagsBlockedTag;                        // 0x58(0x8)
	struct FName                                                 ActivateFailTagsBlockedName;                       // 0x60(0x8)
	struct GameplayTag                                           ActivateFailTagsMissingTag;                        // 0x68(0x8)
	struct FName                                                 ActivateFailTagsMissingName;                       // 0x70(0x8)
	struct GameplayTag                                           ActivateFailNetworkingTag;                         // 0x78(0x8)
	struct FName                                                 ActivateFailNetworkingName;                        // 0x80(0x8)
	struct FString                                               GlobalCurveTableName;                              // 0x88(0x10)
	struct FString                                               GlobalAttributeMetaDataTableName;                  // 0x98(0x10)
	struct FString                                               GlobalAttributeSetDefaultsTableName;               // 0xa8(0x10)
	struct StringAssetReference                                  GlobalGameplayCueManagerName;                      // 0xb8(0x10)
	TArray<Str GameplayCueNotifyPaths>                           GameplayCueNotifyPaths;                            // 0xc8(0x10)
	struct StringAssetReference                                  GameplayTagResponseTableName;                      // 0xd8(0x10)
	class GameplayTagReponseTable*                               GameplayTagResponseTable;                          // 0xe8(0x8)
	bool                                                         PredictTargetGameplayEffects;                      // 0xf0(0x1)
	char                                                         pad0x7_DA6CY[0x7];                                 // 0xf1(0x7)
	class CurveTable*                                            GlobalCurveTable;                                  // 0xf8(0x8)
	class CurveTable*                                            GlobalAttributeDefaultsTable;                      // 0x100(0x8)
	class DataTable*                                             GlobalAttributeMetaDataTable;                      // 0x108(0x8)
	class GameplayCueManager*                                    GlobalGameplayCueManager;                          // 0x110(0x8)
	char                                                         pad0x18_BJXD2[0x18];                               // 0x118(0x18)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AbilitySystemInterface: public Interface
{
public:
};


// Size 0x20 (Full Size[0x488] - InheritedSize[0x468]
class AbilitySystemTestPawn: public DefaultPawn
{
public:
	char                                                         pad0x18_GB3CO[0x18];                               // 0x468(0x18)
	class AbilitySystemComponent*                                AbilitySystemComponent;                            // 0x480(0x8)
};


// Size 0x10 (Full Size[0x68] - InheritedSize[0x58]
class AbilityTask: public GameplayTask
{
public:
	char                                                         pad0x10_QN1IS[0x10];                               // 0x58(0x10)
};


// Size 0x48 (Full Size[0xb0] - InheritedSize[0x68]
class AbilityTask_MoveToLocation: public AbilityTask
{
public:
	char                                                         pad0x14_RQ28E[0x14];                               // 0x68(0x14)
	struct Vector                                                StartLocation;                                     // 0x7c(0xc)
	struct Vector                                                TargetLocation;                                    // 0x88(0xc)
	float                                                        DurationOfMovement;                                // 0x94(0x4)
	char                                                         pad0x8_QZDCL[0x8];                                 // 0x98(0x8)
	class CurveFloat*                                            LerpCurve;                                         // 0xa0(0x8)
	class CurveVector*                                           LerpCurveVector;                                   // 0xa8(0x8)
};


// Size 0x18 (Full Size[0x80] - InheritedSize[0x68]
class AbilityTask_NetworkSyncPoint: public AbilityTask
{
public:
	char                                                         pad0x18_OYFQT[0x18];                               // 0x68(0x18)
};


// Size 0x58 (Full Size[0xc0] - InheritedSize[0x68]
class AbilityTask_PlayMontageAndWait: public AbilityTask
{
public:
	char                                                         pad0x58_MVXTT[0x58];                               // 0x68(0x58)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class AbilityTask_Repeat: public AbilityTask
{
public:
	char                                                         pad0x30_ADILJ[0x30];                               // 0x68(0x30)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class AbilityTask_SpawnActor: public AbilityTask
{
public:
	char                                                         pad0x30_ADIHY[0x30];                               // 0x68(0x30)
};


// Size 0x38 (Full Size[0xa0] - InheritedSize[0x68]
class AbilityTask_StartAbilityState: public AbilityTask
{
public:
	char                                                         pad0x38_G9396[0x38];                               // 0x68(0x38)
};


// Size 0x20 (Full Size[0x3e8] - InheritedSize[0x3c8]
class GameplayAbilityWorldReticle: public Actor
{
public:
	struct WorldReticleParameters                                Parameters;                                        // 0x3c8(0xc)
	bool                                                         bFaceOwnerFlat;                                    // 0x3d4(0x1)
	bool                                                         bSnapToTargetedActor;                              // 0x3d5(0x1)
	bool                                                         bIsTargetValid;                                    // 0x3d6(0x1)
	bool                                                         bIsTargetAnActor;                                  // 0x3d7(0x1)
	class PlayerController*                                      MasterPC;                                          // 0x3d8(0x8)
	class Actor*                                                 TargetingActor;                                    // 0x3e0(0x8)
};


// Size 0x118 (Full Size[0x4e0] - InheritedSize[0x3c8]
class GameplayAbilityTargetActor: public Actor
{
public:
	bool                                                         ShouldProduceTargetDataOnServer;                   // 0x3c8(0x1)
	char                                                         pad0x7_MTFU9[0x7];                                 // 0x3c9(0x7)
	struct GameplayAbilityTargetingLocationInfo                  StartLocation;                                     // 0x3d0(0x70)
	char                                                         pad0x30_FA6D2[0x30];                               // 0x440(0x30)
	class PlayerController*                                      MasterPC;                                          // 0x470(0x8)
	class GameplayAbility*                                       OwningAbility;                                     // 0x478(0x8)
	bool                                                         bDestroyOnConfirmation;                            // 0x480(0x1)
	char                                                         pad0x7_HM86K[0x7];                                 // 0x481(0x7)
	class Actor*                                                 SourceActor;                                       // 0x488(0x8)
	struct WorldReticleParameters                                ReticleParams;                                     // 0x490(0xc)
	char                                                         pad0x4_174KO[0x4];                                 // 0x49c(0x4)
	class UClass*                                                ReticleClass;                                      // 0x4a0(0x8)
	struct GameplayTargetDataFilterHandle                        Filter;                                            // 0x4a8(0x18)
	bool                                                         bDebug;                                            // 0x4c0(0x1)
	char                                                         pad0x1f_FYGIC[0x1f];                               // 0x4c1(0x1f)
};


// Size 0x28 (Full Size[0x90] - InheritedSize[0x68]
class AbilityTask_VisualizeTargeting: public AbilityTask
{
public:
	char                                                         pad0x28_ZETCU[0x28];                               // 0x68(0x28)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class AbilityTask_WaitAbilityActivate: public AbilityTask
{
public:
	char                                                         pad0x30_G6EQX[0x30];                               // 0x68(0x30)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class AbilityTask_WaitAbilityCommit: public AbilityTask
{
public:
	char                                                         pad0x30_QGB65[0x30];                               // 0x68(0x30)
};


// Size 0x40 (Full Size[0xa8] - InheritedSize[0x68]
class AbilityTask_WaitAttributeChange: public AbilityTask
{
public:
	char                                                         pad0x40_26DAV[0x40];                               // 0x68(0x40)
};


// Size 0x18 (Full Size[0x80] - InheritedSize[0x68]
class AbilityTask_WaitCancel: public AbilityTask
{
public:
	char                                                         pad0x18_FBYJI[0x18];                               // 0x68(0x18)
};


// Size 0x20 (Full Size[0x88] - InheritedSize[0x68]
class AbilityTask_WaitConfirm: public AbilityTask
{
public:
	char                                                         pad0x20_AVXB5[0x20];                               // 0x68(0x20)
};


// Size 0x28 (Full Size[0x90] - InheritedSize[0x68]
class AbilityTask_WaitConfirmCancel: public AbilityTask
{
public:
	char                                                         pad0x28_13W4O[0x28];                               // 0x68(0x28)
};


// Size 0x18 (Full Size[0x80] - InheritedSize[0x68]
class AbilityTask_WaitDelay: public AbilityTask
{
public:
	char                                                         pad0x18_P6D1E[0x18];                               // 0x68(0x18)
};


// Size 0xc8 (Full Size[0x130] - InheritedSize[0x68]
class AbilityTask_WaitGameplayEffectApplied: public AbilityTask
{
public:
	char                                                         pad0xc8_3H10G[0xc8];                               // 0x68(0xc8)
};


// Size 0x18 (Full Size[0x148] - InheritedSize[0x130]
class AbilityTask_WaitGameplayEffectApplied_Self: public AbilityTask_WaitGameplayEffectApplied
{
public:
	char                                                         pad0x18_R8J5Q[0x18];                               // 0x130(0x18)
};


// Size 0x18 (Full Size[0x148] - InheritedSize[0x130]
class AbilityTask_WaitGameplayEffectApplied_Target: public AbilityTask_WaitGameplayEffectApplied
{
public:
	char                                                         pad0x18_XP86K[0x18];                               // 0x130(0x18)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class AbilityTask_WaitGameplayEffectRemoved: public AbilityTask
{
public:
	char                                                         pad0x30_WNN5P[0x30];                               // 0x68(0x30)
};


// Size 0x20 (Full Size[0x88] - InheritedSize[0x68]
class AbilityTask_WaitGameplayTag: public AbilityTask
{
public:
	char                                                         pad0x20_OMTI8[0x20];                               // 0x68(0x20)
};


// Size 0x10 (Full Size[0x98] - InheritedSize[0x88]
class AbilityTask_WaitGameplayTagAdded: public AbilityTask_WaitGameplayTag
{
public:
	char                                                         pad0x10_ILSKJ[0x10];                               // 0x88(0x10)
};


// Size 0x10 (Full Size[0x98] - InheritedSize[0x88]
class AbilityTask_WaitGameplayTagRemoved: public AbilityTask_WaitGameplayTag
{
public:
	char                                                         pad0x10_PKHBT[0x10];                               // 0x88(0x10)
};


// Size 0x20 (Full Size[0x88] - InheritedSize[0x68]
class AbilityTask_WaitInputPress: public AbilityTask
{
public:
	char                                                         pad0x20_WKDPO[0x20];                               // 0x68(0x20)
};


// Size 0x20 (Full Size[0x88] - InheritedSize[0x68]
class AbilityTask_WaitInputRelease: public AbilityTask
{
public:
	char                                                         pad0x20_L9AFH[0x20];                               // 0x68(0x20)
};


// Size 0x20 (Full Size[0x88] - InheritedSize[0x68]
class AbilityTask_WaitMovementModeChange: public AbilityTask
{
public:
	char                                                         pad0x20_HFN7F[0x20];                               // 0x68(0x20)
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class AbilityTask_WaitOverlap: public AbilityTask
{
public:
	char                                                         pad0x10_0N5DH[0x10];                               // 0x68(0x10)
};


// Size 0x40 (Full Size[0xa8] - InheritedSize[0x68]
class AbilityTask_WaitTargetData: public AbilityTask
{
public:
	char                                                         pad0x40_ZF6XI[0x40];                               // 0x68(0x40)
};


// Size 0x28 (Full Size[0x90] - InheritedSize[0x68]
class AbilityTask_WaitVelocityChange: public AbilityTask
{
public:
	char                                                         pad0x10_3KMNI[0x10];                               // 0x68(0x10)
	class MovementComponent*                                     CachedMovementComponent;                           // 0x78(0x8)
	char                                                         pad0x10_STHVG[0x10];                               // 0x80(0x10)
};


// Size 0x40 (Full Size[0x70] - InheritedSize[0x30]
class AbilitySystemTestAttributeSet: public AttributeSet
{
public:
	float                                                        MaxHealth;                                         // 0x30(0x4)
	float                                                        Health;                                            // 0x34(0x4)
	float                                                        Mana;                                              // 0x38(0x4)
	float                                                        MaxMana;                                           // 0x3c(0x4)
	float                                                        Damage;                                            // 0x40(0x4)
	float                                                        SpellDamage;                                       // 0x44(0x4)
	float                                                        PhysicalDamage;                                    // 0x48(0x4)
	float                                                        CritChance;                                        // 0x4c(0x4)
	float                                                        CritMultiplier;                                    // 0x50(0x4)
	float                                                        ArmorDamageReduction;                              // 0x54(0x4)
	float                                                        DodgeChance;                                       // 0x58(0x4)
	float                                                        LifeSteal;                                         // 0x5c(0x4)
	float                                                        Strength;                                          // 0x60(0x4)
	float                                                        StackingAttribute1;                                // 0x64(0x4)
	float                                                        StackingAttribute2;                                // 0x68(0x4)
	float                                                        NoStackAttribute;                                  // 0x6c(0x4)
};


// Size 0x0 (Full Size[0x448] - InheritedSize[0x448]
class GameplayAbility_CharacterJump: public GameplayAbility
{
public:
};


// Size 0x38 (Full Size[0x480] - InheritedSize[0x448]
class GameplayAbility_Montage: public GameplayAbility
{
public:
	class AnimMontage*                                           MontageToPlay;                                     // 0x448(0x8)
	float                                                        PlayRate;                                          // 0x450(0x4)
	struct FName                                                 SectionName;                                       // 0x454(0x8)
	char                                                         pad0x4_FRTBG[0x4];                                 // 0x45c(0x4)
	TArray<class Class*>                                         GameplayEffectClassesWhileAnimating;               // 0x460(0x10)
	TArray<class GameplayEffect*>                                GameplayEffectsWhileAnimating;                     // 0x470(0x10)
};


// Size 0x0 (Full Size[0xd8] - InheritedSize[0xd8]
class GameplayAbilityBlueprint: public Blueprint
{
public:
};


// Size 0x0 (Full Size[0x228] - InheritedSize[0x228]
class GameplayAbilityBlueprintGeneratedClass: public BlueprintGeneratedClass
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class GameplayAbilitySet: public DataAsset
{
public:
	TArray<struct GameplayAbilityBindInfo>                       Abilities;                                         // 0x28(0x10)
};


// Size 0x0 (Full Size[0x4e0] - InheritedSize[0x4e0]
class GameplayAbilityTargetActor_Radius: public GameplayAbilityTargetActor
{
public:
	float                                                        Radius;                                            // 0x4d8(0x4)
	char                                                         pad0x4_DCNAB[0x4];                                 // 0x4dc(0x4)
};


// Size 0x10 (Full Size[0x4f0] - InheritedSize[0x4e0]
class GameplayAbilityTargetActor_Trace: public GameplayAbilityTargetActor
{
public:
	float                                                        MaxRange;                                          // 0x4d8(0x4)
	struct CollisionProfileName                                  TraceProfile;                                      // 0x4dc(0x8)
	bool                                                         bTraceAffectsAimPitch;                             // 0x4e4(0x1)
	char                                                         pad0xb_TJHCW[0xb];                                 // 0x4e5(0xb)
};


// Size 0x20 (Full Size[0x510] - InheritedSize[0x4f0]
class GameplayAbilityTargetActor_GroundTrace: public GameplayAbilityTargetActor_Trace
{
public:
	float                                                        CollisionRadius;                                   // 0x4f0(0x4)
	float                                                        CollisionHeight;                                   // 0x4f4(0x4)
	char                                                         pad0x18_OXDRJ[0x18];                               // 0x4f8(0x18)
};


// Size 0x20 (Full Size[0x530] - InheritedSize[0x510]
class GameplayAbilityTargetActor_ActorPlacement: public GameplayAbilityTargetActor_GroundTrace
{
public:
	class UClass*                                                PlacedActorClass;                                  // 0x510(0x8)
	class MaterialInterface*                                     PlacedActorMaterial;                               // 0x518(0x8)
	char                                                         pad0x10_Z3DYR[0x10];                               // 0x520(0x10)
};


// Size 0x0 (Full Size[0x4f0] - InheritedSize[0x4f0]
class GameplayAbilityTargetActor_SingleLineTrace: public GameplayAbilityTargetActor_Trace
{
public:
};


// Size 0x18 (Full Size[0x400] - InheritedSize[0x3e8]
class GameplayAbilityWorldReticle_ActorVisualization: public GameplayAbilityWorldReticle
{
public:
	class CapsuleComponent*                                      CollisionComponent;                                // 0x3e8(0x8)
	TArray<class ActorComponent*>                                VisualizationComponents;                           // 0x3f0(0x10)
};


// Size 0x158 (Full Size[0x180] - InheritedSize[0x28]
class GameplayCueManager: public DataAsset
{
public:
	class GameplayCueSet*                                        GlobalCueSet;                                      // 0x28(0x8)
	class ObjectLibrary*                                         GameplayCueNotifyActorObjectLibrary;               // 0x30(0x8)
	class ObjectLibrary*                                         GameplayCueNotifyStaticObjectLibrary;              // 0x38(0x8)
	struct StreamableManager                                     StreamableManager;                                 // 0x40(0xc0)
	char                                                         pad0x60_UKUGR[0x60];                               // 0x100(0x60)
	TArray<struct GameplayCuePendingExecute>                     PendingExecuteCues;                                // 0x160(0x10)
	int                                                          GameplayCueSendContextCount;                       // 0x170(0x4)
	char                                                         pad0xc_W38FD[0xc];                                 // 0x174(0xc)
};


// Size 0x20 (Full Size[0x3e8] - InheritedSize[0x3c8]
class GameplayCueNotify_Actor: public Actor
{
public:
	struct GameplayTag                                           GameplayCueTag;                                    // 0x3c8(0x8)
	struct FName                                                 GameplayCueName;                                   // 0x3d0(0x8)
	bool                                                         bAutoDestroyOnRemove;                              // 0x3d8(0x1)
	char                                                         pad0x3_M5G6E[0x3];                                 // 0x3d9(0x3)
	float                                                        AutoDestroyDelay;                                  // 0x3dc(0x4)
	bool                                                         IsOverride;                                        // 0x3e0(0x1)
	bool                                                         bUniqueInstancePerInstigator;                      // 0x3e1(0x1)
	bool                                                         bUniqueInstancePerSourceObject;                    // 0x3e2(0x1)
	char                                                         pad0x5_WE931[0x5];                                 // 0x3e3(0x5)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class GameplayCueNotify_Static: public Object
{
public:
	struct GameplayTag                                           GameplayCueTag;                                    // 0x28(0x8)
	struct FName                                                 GameplayCueName;                                   // 0x30(0x8)
	bool                                                         IsOverride;                                        // 0x38(0x1)
	char                                                         pad0x7_PYC76[0x7];                                 // 0x39(0x7)
};


// Size 0x10 (Full Size[0x50] - InheritedSize[0x40]
class GameplayCueNotify_HitImpact: public GameplayCueNotify_Static
{
public:
	class SoundBase*                                             Sound;                                             // 0x40(0x8)
	class ParticleSystem*                                        ParticleSystem;                                    // 0x48(0x8)
};


// Size 0x60 (Full Size[0x88] - InheritedSize[0x28]
class GameplayCueSet: public DataAsset
{
public:
	TArray<struct GameplayCueNotifyData>                         GameplayCueData;                                   // 0x28(0x10)
	char                                                         pad0x50_CXWQ1[0x50];                               // 0x38(0x50)
};


// Size 0x0 (Full Size[0x578] - InheritedSize[0x578]
class GameplayEffectTemplate: public GameplayEffect
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class GameplayEffectCalculation: public Object
{
public:
	TArray<struct GameplayEffectAttributeCaptureDefinition>      RelevantAttributesToCapture;                       // 0x28(0x10)
};


// Size 0x8 (Full Size[0x40] - InheritedSize[0x38]
class GameplayEffectExecutionCalculation: public GameplayEffectCalculation
{
public:
	bool                                                         bRequiresPassedInTags;                             // 0x38(0x1)
	char                                                         pad0x7_L33X1[0x7];                                 // 0x39(0x7)
};


// Size 0x0 (Full Size[0x38] - InheritedSize[0x38]
class GameplayModMagnitudeCalculation: public GameplayEffectCalculation
{
public:
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class GameplayEffectExtension: public Object
{
public:
	TArray<struct GameplayAttribute>                             RelevantSourceAttributes;                          // 0x28(0x10)
	TArray<struct GameplayAttribute>                             RelevantTargetAttributes;                          // 0x38(0x10)
};


// Size 0x8 (Full Size[0x50] - InheritedSize[0x48]
class GameplayEffectExtension_LifestealTest: public GameplayEffectExtension
{
public:
	class GameplayEffect*                                        HealthRestoreGameplayEffect;                       // 0x48(0x8)
};


// Size 0x8 (Full Size[0x50] - InheritedSize[0x48]
class GameplayEffectExtension_ShieldTest: public GameplayEffectExtension
{
public:
	class GameplayEffect*                                        ShieldRemoveGameplayEffect;                        // 0x48(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class GameplayEffectUIData: public Object
{
public:
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class GameplayEffectUIData_TextOnly: public GameplayEffectUIData
{
public:
	struct FText                                                 Description;                                       // 0x28(0x38)
};


// Size 0x60 (Full Size[0x88] - InheritedSize[0x28]
class GameplayTagReponseTable: public DataAsset
{
public:
	TArray<struct GameplayTagResponseTableEntry>                 Entries;                                           // 0x28(0x10)
	char                                                         pad0x50_B5WQS[0x50];                               // 0x38(0x50)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class TickableAttributeSetInterface: public Interface
{
public:
};


}