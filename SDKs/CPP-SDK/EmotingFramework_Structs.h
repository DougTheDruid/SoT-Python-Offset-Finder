// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0xa0
struct EmoteData
{
public:
	struct EmoteId                                               EmoteId;                                           // 0x0(0x8)
	struct FText                                                 EmoteDisplayName;                                  // 0x8(0x38)
	struct FText                                                 AudioDescription;                                  // 0x40(0x38)
	float                                                        DelayBeforeAllowingExit;                           // 0x78(0x4)
	float                                                        VerticalOffsetFactorWhenZoomed;                    // 0x7c(0x4)
	bool                                                         HideNameplate;                                     // 0x80(0x1)
	char                                                         pad0x7_4ZVQ2[0x7];                                 // 0x81(0x7)
	class EmotePropData*                                         EmotePropDataAsset;                                // 0x88(0x8)
	bool                                                         CanPlayInSuccession;                               // 0x90(0x1)
	bool                                                         ShowDescriptionInTextChat;                         // 0x91(0x1)
	char                                                         pad0x6_28BJA[0x6];                                 // 0x92(0x6)
	class AthenaSpringArmComponentParams*                        CustomSpringArmParamsAsset;                        // 0x98(0x8)
};


// Size 0x8
struct EmoteId
{
public:
	struct FName                                                 EmoteId;                                           // 0x0(0x8)
};


// Size 0x50
struct EmotePropRandomObjectResult
{
public:
	class StaticMesh*                                            Mesh;                                              // 0x0(0x8)
	bool                                                         HasTransformValue;                                 // 0x8(0x1)
	char                                                         pad0x7_RK3S1[0x7];                                 // 0x9(0x7)
	struct Transform                                             Transform;                                         // 0x10(0x30)
	struct FName                                                 TextureParameterName;                              // 0x40(0x8)
	int                                                          TextureParameterValue;                             // 0x48(0x4)
	char                                                         pad0x4_IKFH4[0x4];                                 // 0x4c(0x4)
};


// Size 0x30
struct EmotePropRandomObjectInfo
{
public:
	class StaticMesh*                                            Mesh;                                              // 0x0(0x8)
	TArray<struct Transform>                                     PossibleTransforms;                                // 0x8(0x10)
	struct FName                                                 RandomParameterName;                               // 0x18(0x8)
	struct Int32Range                                            RandomParameterRange;                              // 0x20(0x10)
};


// Size 0xc
struct EventEmoteEndRequested
{
public:
	struct FName                                                 EmoteIdentifier;                                   // 0x0(0x8)
	bool                                                         EndForcedEmote;                                    // 0x8(0x1)
	char                                                         pad0x3_DWJ74[0x3];                                 // 0x9(0x3)
};


// Size 0x1
struct EventEndEmoteAnimation
{
public:
	char                                                         pad0x1_SDHHA[0x1];                                 // 0x0(0x1)
};


// Size 0xa0
struct EventEmoteSwapped
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x0(0xa0)
};


// Size 0xc
struct EventEmoteCompleted
{
public:
	struct FName                                                 EmoteName;                                         // 0x0(0x8)
	char                                                         pad0x4_SWVHI[0x4];                                 // 0x8(0x4)
};


// Size 0xa0
struct EventEmoteStarted
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x0(0xa0)
};


// Size 0xb0
struct EventEmoteRequested
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x0(0xa0)
	struct FName                                                 ForcedEmoteIdentifier;                             // 0xa0(0x8)
	bool                                                         ForcedEmote;                                       // 0xa8(0x1)
	char                                                         pad0x7_Z8QRW[0x7];                                 // 0xa9(0x7)
};


// Size 0x1
struct EventDisableLookAtEmoteCamera
{
public:
	char                                                         pad0x1_7G61Y[0x1];                                 // 0x0(0x1)
};


// Size 0x8
struct EventEnableLookAtEmoteCamera
{
public:
	char                                                         pad0x8_ATERI[0x8];                                 // 0x0(0x8)
};


// Size 0x14
struct EmoteDiceOutcomeTelemetryEvent
{
public:
	int                                                          MaxLimit;                                          // 0x0(0x4)
	int                                                          RollNumber;                                        // 0x4(0x4)
	struct Vector                                                OrientationUsed;                                   // 0x8(0xc)
};


// Size 0x60
struct EmoteRandomObjectOutcomeTelemetryEvent
{
public:
	struct FString                                               MeshName;                                          // 0x0(0x10)
	struct Transform                                             Transform;                                         // 0x10(0x30)
	struct FString                                               TextureParameterName;                              // 0x40(0x10)
	int                                                          TextureParameterValue;                             // 0x50(0x4)
	char                                                         pad0xc_OBD83[0xc];                                 // 0x54(0xc)
};


}