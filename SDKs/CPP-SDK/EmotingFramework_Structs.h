#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x8
struct EmoteId
{
public:
	struct FName                                                 EmoteId;                                           // 0x0(0x8)
};


// Size 0x30
struct EmotePropRandomObjectInfo
{
public:
	class StaticMesh*                                            Mesh;                                              // 0x0(0x8)
	TArray<struct Transform>                                     PossibleTransforms;                                // 0x8(0x10)
	struct FName                                                 RandomParameterName;                               // 0x18(0x8)
	struct Int32Range                                            RandomParameterRange;                              // 0x20(0x10)
};


// Size 0x14
struct EmoteDiceOutcomeTelemetryEvent
{
public:
	int                                                          MaxLimit;                                          // 0x0(0x4)
	int                                                          RollNumber;                                        // 0x4(0x4)
	struct Vector                                                OrientationUsed;                                   // 0x8(0xc)
};


// Size 0x58
struct EmoteInteractionTooltipInstance
{
public:
	char                                                         InteractionTooltipType;                            // 0x0(0x1)
	struct FText                                                 DisplayString;                                     // 0x8(0x38)
	TArray<struct Text>                                          DisplayStringArgs;                                 // 0x40(0x10)
	bool                                                         IsProgressBar;                                     // 0x50(0x1)
};


// Size 0xc
struct EventEmoteEndRequested
{
public:
	struct FName                                                 EmoteIdentifier;                                   // 0x0(0x8)
	bool                                                         EndForcedEmote;                                    // 0x8(0x1)
};


// Size 0x60
struct EmoteRandomObjectOutcomeTelemetryEvent
{
public:
	struct FString                                               MeshName;                                          // 0x0(0x10)
	struct Transform                                             Transform;                                         // 0x10(0x30)
	struct FString                                               TextureParameterName;                              // 0x40(0x10)
	int                                                          TextureParameterValue;                             // 0x50(0x4)
};


// Size 0x50
struct EmotePropRandomObjectResult
{
public:
	class StaticMesh*                                            Mesh;                                              // 0x0(0x8)
	bool                                                         HasTransformValue;                                 // 0x8(0x1)
	struct Transform                                             Transform;                                         // 0x10(0x30)
	struct FName                                                 TextureParameterName;                              // 0x40(0x8)
	int                                                          TextureParameterValue;                             // 0x48(0x4)
};


// Size 0x8
struct EventEnableLookAtEmoteCamera
{
public:
	class Actor*                                                 LookAtTarget;                                      // 0x0(0x8)
};


// Size 0xc
struct EventEmoteCompleted
{
public:
	struct FName                                                 EmoteName;                                         // 0x0(0x8)
	uint32                                                       EmoteDuration;                                     // 0x8(0x4)
};


// Size 0xd0
struct EmoteData
{
public:
	struct EmoteId                                               EmoteId;                                           // 0x0(0x8)
	struct FText                                                 EmoteDisplayName;                                  // 0x8(0x38)
	struct FText                                                 AudioDescription;                                  // 0x40(0x38)
	float                                                        DelayBeforeAllowingExit;                           // 0x78(0x4)
	float                                                        VerticalOffsetFactorWhenZoomed;                    // 0x7c(0x4)
	bool                                                         HideNameplate;                                     // 0x80(0x1)
	class EmotePropData*                                         EmotePropDataAsset;                                // 0x88(0x8)
	bool                                                         CanPlayInSuccession;                               // 0x90(0x1)
	bool                                                         ShowDescriptionInTextChat;                         // 0x91(0x1)
	class AthenaSpringArmComponentParams*                        CustomSpringArmParamsAsset;                        // 0x98(0x8)
	float                                                        DurationUntilPlayerHiddenFromAI;                   // 0xa0(0x4)
	bool                                                         OverrideInteractableBoxData;                       // 0xa4(0x1)
	struct Vector                                                BoxExtent;                                         // 0xa8(0xc)
	struct Vector                                                BoxOrigin;                                         // 0xb4(0xc)
	struct Rotator                                               BoxRotation;                                       // 0xc0(0xc)
};


// Size 0xb0
struct EmoteInteractionTooltipData
{
public:
	struct EmoteInteractionTooltipInstance                       Tooltip;                                           // 0x0(0x58)
	struct EmoteInteractionTooltipInstance                       GreyedOut;                                         // 0x58(0x58)
};


// Size 0xd0
struct EventEmoteSwapped
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x0(0xd0)
};


// Size 0xd0
struct EventEmoteStarted
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x0(0xd0)
};


// Size 0xe0
struct EventEmoteRequested
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x0(0xd0)
	struct FName                                                 ForcedEmoteIdentifier;                             // 0xd0(0x8)
	bool                                                         ForcedEmote;                                       // 0xd8(0x1)
};


// Size 0xf0
struct WalkableEmoteData
{
public:
	TArray<struct EmoteInteractionTooltipData>                   EmotePrimaryInteractionTooltipData;                // 0xd0(0x10)
	TArray<struct EmoteInteractionTooltipData>                   EmoteSecondaryInteractionTooltipData;              // 0xe0(0x10)
};


