#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x18
struct StoryInfo
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	char                                                         pad0x10_4T3A3[0x10];                               // 0x8(0x10)
};


// Size 0x18
struct StorySpawnedActorsIndividualStoryInfo
{
public:
	struct FString                                               StoryName;                                         // 0x0(0x10)
	int                                                          NumActorsSpawned;                                  // 0x10(0x4)
	int                                                          NumActorsDespawned;                                // 0x14(0x4)
};


// Size 0x14
struct StoryResourceStateChanged
{
public:
	struct FName                                                 StoryName;                                         // 0x0(0x8)
	int                                                          NumResourcesClaimed;                               // 0x8(0x4)
	int                                                          NumResourcesReleased;                              // 0xc(0x4)
	int                                                          NumClaimsPending;                                  // 0x10(0x4)
};


// Size 0x8
struct StoryFlag
{
public:
	struct FName                                                 StoryName;                                         // 0x0(0x8)
};


// Size 0x18
struct StoryNameInfo
{
public:
	struct FName                                                 StoryName;                                         // 0x0(0x8)
	struct FString                                               StoryDesc;                                         // 0x8(0x10)
};


// Size 0x1
struct StoriesRefreshRequestedTelemetryEvent
{
public:
	bool                                                         IsForcedRefresh;                                   // 0x0(0x1)
};


// Size 0x28
struct StoriesChangedTelemetryEvent
{
public:
	TArray<String>                                               AllStories;                                        // 0x0(0x10)
	TArray<String>                                               ActiveStories;                                     // 0x10(0x10)
	bool                                                         DidStoriesChange;                                  // 0x20(0x1)
	bool                                                         WereStoriesRefreshed;                              // 0x21(0x1)
	char                                                         pad0x6_B92YN[0x6];                                 // 0x22(0x6)
};


// Size 0x10
struct DuplicateStoriesReceivedTelemetryEvent
{
public:
	TArray<String>                                               DuplicateStoriesReceived;                          // 0x0(0x10)
};


// Size 0x48
struct IsAnyStoryActiveCondition
{
public:
	char                                                         pad0x48_A8JHC[0x48];                               // 0x0(0x48)
};


// Size 0x38
struct ActorLocationPair
{
public:
	struct StringAssetReference                                  SpawnLocation;                                     // 0x0(0x10)
	bool                                                         AttachToWorld;                                     // 0x30(0x1)
	char                                                         pad0x7_EGWWU[0x7];                                 // 0x31(0x7)
};


// Size 0x30
struct NamedPointsGroupActorLocation
{
public:
	struct FName                                                 NamedPointsGroup;                                  // 0x0(0x8)
	bool                                                         AttachToWorld;                                     // 0x28(0x1)
	char                                                         pad0x7_ARKBV[0x7];                                 // 0x29(0x7)
};


// Size 0x18
struct InstancedLayerLocation
{
public:
	struct StringAssetReference                                  ActorWithInstancedLayerComponent;                  // 0x0(0x10)
	class LayerActorsDataAsset*                                  LayerToSpawn;                                      // 0x10(0x8)
};


// Size 0x48
struct IsAllStoryActiveCondition
{
public:
	char                                                         pad0x48_NPX7V[0x48];                               // 0x0(0x48)
};


// Size 0x10
struct StoryClaimedResourcesChangedTelemetryEvent
{
public:
	TArray<struct StoryResourceStateChanged>                     StoryResourceStateChanges;                         // 0x0(0x10)
};


// Size 0x10
struct LightingZoneStoryRelatedSettings
{
public:
	struct StoryFlag                                             Story;                                             // 0x0(0x8)
	float                                                        TargetPointOnCurve;                                // 0x8(0x4)
	float                                                        FadeDuration;                                      // 0xc(0x4)
};


// Size 0x18
struct StoryFlagContainer
{
public:
	TArray<struct StoryFlag>                                     StoryFlags;                                        // 0x0(0x10)
	bool                                                         AllStoriesRequired;                                // 0x10(0x1)
	char                                                         pad0x7_CIVSX[0x7];                                 // 0x11(0x7)
};


// Size 0x20
struct StorySpawnedActorsChangeTelemetryEvent
{
public:
	TArray<struct StorySpawnedActorsIndividualStoryInfo>         StorySpawnedActors;                                // 0x0(0x10)
	TArray<struct StorySpawnedActorsIndividualStoryInfo>         StoryDespawnedActors;                              // 0x10(0x10)
};


// Size 0x20
struct StorySpawnedActorsComponentList
{
public:
	struct StoryFlag                                             Story;                                             // 0x0(0x8)
	TArray<struct NamedPointsGroupActorLocation>                 GroupLocations;                                    // 0x8(0x10)
	class LayerActorsDataAsset*                                  LayerToSpawn;                                      // 0x18(0x8)
};


// Size 0x48
struct IsStoryActiveConditionBase
{
public:
	char                                                         pad0x28_SL8VI[0x28];                               // 0x0(0x28)
	TArray<struct StoryFlag>                                     StoryFlags;                                        // 0x28(0x10)
	char                                                         pad0x10_IBVGX[0x10];                               // 0x38(0x10)
};


// Size 0x20
struct StoryClaimableResourcesList
{
public:
	struct StoryFlag                                             StoryFlag;                                         // 0x0(0x8)
	bool                                                         AreResourcesClaimed;                               // 0x8(0x1)
	char                                                         pad0x7_S5U7V[0x7];                                 // 0x9(0x7)
	TArray<uintptr_t>                                            ClaimableResources;                                // 0x10(0x10)
};


// Size 0x20
struct NamedPointsActorLocation
{
public:
	struct StringAssetReference                                  ActorWithNamedPointsComponent;                     // 0x0(0x10)
	TArray<struct NamedPointsGroupActorLocation>                 GroupLocations;                                    // 0x10(0x10)
};


// Size 0x38
struct StorySpawnedActorsList
{
public:
	struct StoryFlag                                             Story;                                             // 0x0(0x8)
	TArray<struct ActorLocationPair>                             ActorLocations;                                    // 0x8(0x10)
	TArray<struct NamedPointsActorLocation>                      NamedPointsActorLocations;                         // 0x18(0x10)
	TArray<struct InstancedLayerLocation>                        InstancedLayerLocations;                           // 0x28(0x10)
};


