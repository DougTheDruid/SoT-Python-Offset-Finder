#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x40
struct RevivingWindowStart
{
public:
	struct DamageInstance                                        DamageInstance;                                    // 0x0(0x30)
	char                                                         CharacterDeathType;                                // 0x30(0x1)
	char                                                         pad0x7_F5IQU[0x7];                                 // 0x31(0x7)
	class Character*                                             RevivableCharacter;                                // 0x38(0x8)
};


// Size 0x1
struct RevivingWindowEnd
{
public:
	char                                                         pad0x1_47X1A[0x1];                                 // 0x0(0x1)
};


// Size 0x48
struct RevivedActionStateConstructionInfo
{
public:
	char                                                         pad0x48_EY40C[0x48];                               // 0x0(0x48)
};


// Size 0x88
struct ReviveableActionStateConstructionInfo
{
public:
	char                                                         pad0x48_06I15[0x48];                               // 0x0(0x48)
	class UClass*                                                ActionStateId;                                     // 0x48(0x8)
	struct DamageInstance                                        DamageInstance;                                    // 0x50(0x30)
	char                                                         CharacterDeathType;                                // 0x80(0x1)
	char                                                         CharacterType;                                     // 0x81(0x1)
	char                                                         pad0x6_SPQDH[0x6];                                 // 0x82(0x6)
};


// Size 0x1
struct ReviveableActionStateStarted
{
public:
	char                                                         pad0x1_ALOHA[0x1];                                 // 0x0(0x1)
};


// Size 0x10
struct PlayerRevivalFailTelemetryEvent
{
public:
	struct FString                                               FailReason;                                        // 0x0(0x10)
};


// Size 0x1
struct ReviveEndedEarlyEvent
{
public:
	char                                                         pad0x1_CQAAU[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct PlayerRevivalTelemetryEvent
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
};


// Size 0x1
struct AIRevivalTelemetryEvent
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
};


// Size 0x1
struct SuccessfulReviveEvent
{
public:
	char                                                         pad0x1_J71IC[0x1];                                 // 0x0(0x1)
};


// Size 0x38
struct ModeSpecificReviveSettings
{
public:
	char                                                         AssociatedPlaymode;                                // 0x0(0x1)
	char                                                         pad0x3_MY7DB[0x3];                                 // 0x1(0x3)
	float                                                        DeathCameraBlackFadeDelay;                         // 0x4(0x4)
	float                                                        DeathCameraBlackFadeDuration;                      // 0x8(0x4)
	float                                                        DeathCameraBlackFadeEventClientTimeout;            // 0xc(0x4)
	float                                                        DeathCameraBlackFadeEventServerTimeout;            // 0x10(0x4)
	float                                                        DelayBeforeEvaporate;                              // 0x14(0x4)
	float                                                        EvaporateDuration;                                 // 0x18(0x4)
	float                                                        DeathCameraStartDelay;                             // 0x1c(0x4)
	float                                                        ReviveWindowDuration;                              // 0x20(0x4)
	float                                                        GhostFadeDuration;                                 // 0x24(0x4)
	float                                                        AutoGiveUpDuration;                                // 0x28(0x4)
	char                                                         pad0x4_OATML[0x4];                                 // 0x2c(0x4)
	class ReviveSettings*                                        CachedReviveSettings;                              // 0x30(0x8)
};


// Size 0x1
struct BeingRevivedStoppedEvent
{
public:
	char                                                         pad0x1_V6NYL[0x1];                                 // 0x0(0x1)
};


// Size 0x10
struct RevivedActionStateParams
{
public:
	float                                                        HealthRegained;                                    // 0x0(0x4)
	float                                                        ReviveDuration;                                    // 0x4(0x4)
	class WwiseEvent*                                            ReviveGaspAudio;                                   // 0x8(0x8)
};


// Size 0x1
struct PlayerRevivalTransitionTelemetryEvent
{
public:
	char                                                         pad0x1_7PRQ4[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct RevivableCharacterGhostlyBodyEvaporateStarted
{
public:
	char                                                         pad0x1_CXBZQ[0x1];                                 // 0x0(0x1)
};


// Size 0x8
struct EventCharacterDiedDuringReviving
{
public:
	class Character*                                             OwningCharacter;                                   // 0x0(0x8)
};


// Size 0x1
struct EventRevivableRepresentationReturnedToBody
{
public:
	char                                                         pad0x1_L622D[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct EventRevivePlayerActionStateLeft
{
public:
	char                                                         pad0x1_TTVCZ[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct PlayerInReviveableStateTelemetryEvent
{
public:
	char                                                         pad0x1_3TNKD[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct EventRevivableRepresentationSpawnStarted
{
public:
	char                                                         pad0x1_ALGFX[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct EventRevivePlayerActionStateEntered
{
public:
	char                                                         pad0x1_LYL1P[0x1];                                 // 0x0(0x1)
};


// Size 0x78
struct RevivePlayerActionStateConstructionInfo
{
public:
	char                                                         pad0x48_GQS8Q[0x48];                               // 0x0(0x48)
	struct NetActorPtr                                           CharacterReviving;                                 // 0x48(0x14)
	struct NetSubObjectPtr                                       CharacterBeingRevived;                             // 0x5c(0x14)
	class UClass*                                                InputID;                                           // 0x70(0x8)
};


// Size 0x1
struct BeingRevivedStartedEvent
{
public:
	char                                                         pad0x1_ZWA9A[0x1];                                 // 0x0(0x1)
};


// Size 0x20
struct ReviveEffectsValues
{
public:
	class MaterialInstanceDynamic*                               AstralCordPostProcessMID;                          // 0x0(0x8)
	char                                                         pad0x18_MTVJY[0x18];                               // 0x8(0x18)
};


// Size 0x48
struct PostReviveLocomotionActionStateConstructionInfo
{
public:
	char                                                         pad0x48_IWG8F[0x48];                               // 0x0(0x48)
};


// Size 0x18
struct AISucessfullyRevivedEvent
{
public:
	class Actor*                                                 ReviverPawn;                                       // 0x0(0x8)
	struct Guid                                                  ReviverCrewId;                                     // 0x8(0x10)
};


// Size 0x1
struct EventCharacterFullyRevived
{
public:
	char                                                         pad0x1_TBRGP[0x1];                                 // 0x0(0x1)
};


// Size 0x1
struct EventRevivableRepresentationSpawnCompleted
{
public:
	bool                                                         FromSwimming;                                      // 0x0(0x1)
};


