#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "TreasuryFramework_Structs.h"


// Size 0xb0 (Full Size[0x5b0] - InheritedSize[0x500]
class SunkenKingdomShrineEventRoom: public EventRoom
{
public:
	class Actor*                                                 EntranceActor;                                     // 0x510(0x8)
	class GameEventOnDemandAvailabilityHandler*                  GameEventOnDemandAvailabilityHandler;              // 0x518(0x8)
	struct StringAssetReference                                  AvailabilityParamsAssetFileLocation;               // 0x520(0x10)
	class ObjectProximityResetComponent*                         PuzzleResetComponent;                              // 0x530(0x8)
	class GameEventItemSpawnSelectorComponent*                   ItemSpawnSelectorComponent;                        // 0x538(0x8)
};


// Size 0x248 (Full Size[0x610] - InheritedSize[0x3c8]
class TreasuryRoom: public Actor
{
public:
	class BoxComponent*                                          RoomAreaComponent;                                 // 0x3e8(0x8)
	float                                                        TreasuryInactiveDurationMinSeconds;                // 0x3f0(0x4)
	float                                                        TreasuryInactiveDurationMaxSeconds;                // 0x3f4(0x4)
	float                                                        RoomFailureDurationSeconds;                        // 0x3f8(0x4)
	float                                                        WaveDelaySeconds;                                  // 0x3fc(0x4)
	float                                                        EncounterDelaySeconds;                             // 0x400(0x4)
	float                                                        VaultDoorAnimDurationSeconds;                      // 0x404(0x4)
	float                                                        VaultDoorOpenDurationSeconds;                      // 0x408(0x4)
	int                                                          MinWavesInEncounter;                               // 0x40c(0x4)
	int                                                          MaxWavesInEncounter;                               // 0x410(0x4)
	int                                                          MaxEncounters;                                     // 0x414(0x4)
	TArray<struct TreasuryWaveEncounter>                         WaveEncounters;                                    // 0x418(0x10)
	struct FText                                                 OnTreasuryRoomCompleteEmergentBannerText;          // 0x428(0x38)
	struct StringAssetReference                                  SunkenTreasuryAvailabilityParamsAssetFileLocation; // 0x460(0x10)
	class Actor*                                                 FloodMechanismActor;                               // 0x470(0x8)
	class Actor*                                                 FloodTriggerActor;                                 // 0x478(0x8)
	class Actor*                                                 DrainMechanismActor;                               // 0x480(0x8)
	class Actor*                                                 DrainTriggerActor;                                 // 0x488(0x8)
	class Actor*                                                 VaultMechanismActor;                               // 0x490(0x8)
	class Actor*                                                 VaultTriggerActor;                                 // 0x498(0x8)
	class UClass*                                                VaultLootSpawner;                                  // 0x4a0(0x8)
	class Actor*                                                 VaultLootSpawnLocationActor;                       // 0x4a8(0x8)
	class Actor*                                                 EntranceSirenWindowActor;                          // 0x4b0(0x8)
	assetobject                                                  Shimmer;                                           // 0x4b8(0x20)
	class GameEventOnDemandAvailabilityHandler*                  GameEventOnDemandAvailabilityHandler;              // 0x4d8(0x8)
	TArray<class Actor*>                                         OverlappingActors;                                 // 0x4e0(0x10)
	TArray<uintptr_t>                                            CachedParticipantControllers;                      // 0x4f0(0x10)
	class Actor*                                                 VaultLootSpawnerActor;                             // 0x500(0x8)
	struct PlayerStat                                            VaultOpenStat;                                     // 0x508(0x4)
	class MechanismActionComponent*                              FloodMechanismComponent;                           // 0x510(0x8)
	class MechanismActionComponent*                              DrainMechanismComponent;                           // 0x518(0x8)
	class MechanismActionComponent*                              VaultMechanismComponent;                           // 0x520(0x8)
	interface                                                    FloodTriggerComponent;                             // 0x528(0x10)
	interface                                                    DrainTriggerComponent;                             // 0x538(0x10)
	interface                                                    VaultTriggerComponent;                             // 0x548(0x10)
	struct ObjectMessagingDispatcher                             EventDispatcher;                                   // 0x558(0xa0)
};


// Size 0x40 (Full Size[0x68] - InheritedSize[0x28]
class TreasuryWaveDataAsset: public DataAsset
{
public:
	TArray<class AIProgressiveWavesSpawner*>                     Waves1Player;                                      // 0x28(0x10)
	TArray<class AIProgressiveWavesSpawner*>                     Waves2Player;                                      // 0x38(0x10)
	TArray<class AIProgressiveWavesSpawner*>                     Waves3Player;                                      // 0x48(0x10)
	TArray<class AIProgressiveWavesSpawner*>                     Waves4Player;                                      // 0x58(0x10)
};


