// Generated by DougTheDruid#2784 on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class ClueSiteData: public Object
{
public:
	byte                                                         DebrisTrackingType;                                // 0x28(0x1)
	char                                                         pad0x11_YHLVL[0x11];                               // 0x27(0x11)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ClueSiteType: public Object
{
public:
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class LandClueCreator: public Object
{
public:
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class SeaClueCreator: public Object
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ClueChoiceSelectionStrategy: public Object
{
public:
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class FixedClueChoiceSelectionStrategy: public ClueChoiceSelectionStrategy
{
public:
	int                                                          IndexToSelect;                                     // 0x28(0x4)
	char                                                         pad0xc_N5QAI[0xc];                                 // 0x2a(0xc)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class RandomClueChoiceSelectionStrategy: public ClueChoiceSelectionStrategy
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class ClueDestinationDescriptor: public Object
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ClueDescriptor: public Object
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ClueConnectionBlueprintFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class ClueDescriptorGenerator: public Object
{
public:
	class                                                        DescriptorType;                                    // 0x28(0x8)
	TArray<class Class*>                                         SupportedDestinationTypes;                         // 0x30(0x10)
};


// Size 0x68 (Full Size[0x90] - InheritedSize[0x28]
class ClueDestinationGenerator: public Object
{
public:
	class                                                        RequiredClueSiteDataType;                          // 0x28(0x8)
	TArray<struct WeightedSupportedDescriptorTypes>              WeightedSupportedDescriptorTypes;                  // 0x30(0x10)
	char                                                         pad0x70_YETES[0x70];                               // 0x3e(0x70)
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class ClueConnectionConfig: public DataAsset
{
public:
	TArray<struct CluesThatCanDescribeSites>                     CluesThatCanDescribeSites;                         // 0x28(0x10)
	TArray<class ClueDescriptorGenerator*>                       ClueGenerators;                                    // 0x38(0x10)
	TArray<class ClueDestinationGenerator*>                      DestinationGenerators;                             // 0x48(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ClueDescriptorContainerInterface: public Interface
{
public:
};


// Size 0x18 (Full Size[0xe0] - InheritedSize[0xc8]
class ClueDescriptorContainerComponent: public ActorComponent
{
public:
	char                                                         pad0x8_R12NW[0x8];                                 // 0xc8(0x8)
	Class ClueDescriptor*                                        CurrentClue;                                       // 0xd0(0x8)
	bool                                                         HasClueBeenGiven;                                  // 0xd8(0x1)
	char                                                         pad0x9_TORJS[0x9];                                 // 0xd7(0x9)
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class ClueFactoryConfig: public DataAsset
{
public:
	TArray<class LandClueCreator*>                               LandClueCreators;                                  // 0x28(0x10)
	TArray<class SeaClueCreator*>                                SeaClueCreators;                                   // 0x38(0x10)
	Class ClueChoiceSelectionStrategy*                           ChoiceStrategy;                                    // 0x48(0x8)
	TArray<struct RestrictedClueTypes>                           RestrictedClueTypes;                               // 0x50(0x10)
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class ClueFactory: public Object
{
public:
	Class ClueFactoryConfig*                                     Config;                                            // 0x28(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ClueLifetimeBlueprintFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class ClueSiteLootRestrictionsDataAsset: public DataAsset
{
public:
	TArray<struct ClueSiteLootRestrictions>                      ClueSiteLootRestrictions;                          // 0x28(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class DebrisForVoyageRankDescAsset: public DataAsset
{
public:
	TArray<struct RankBasedDebrisDistribution>                   RankBasedDebrisDistribution;                       // 0x28(0x10)
};


// Size 0x28 (Full Size[0x198] - InheritedSize[0x170]
class EnvQueryTest_SeaClueSpawnLocation: public EnvQueryTest
{
public:
	float                                                        MinProjectionDistance;                             // 0x170(0x4)
	float                                                        MaxProjectionDistance;                             // 0x174(0x4)
	float                                                        ProjectionAngleInDegrees;                          // 0x178(0x4)
	float                                                        IslandProximitySafeThreshold;                      // 0x17c(0x4)
	class                                                        ContextSourcePoint;                                // 0x180(0x8)
	class                                                        ContextProjectionPoint;                            // 0x188(0x8)
	char                                                         pad0x18_X7AS1[0x18];                               // 0x18e(0x18)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class LootForVoyageRankDescAsset: public DataAsset
{
public:
	TArray<struct RankBasedLootDistribution>                     RankBasedLootDistribution;                         // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class NPCLootSpawnInterface: public Interface
{
public:
};


// Size 0x18 (Full Size[0xe0] - InheritedSize[0xc8]
class NPCLootSpawnComponent: public ActorComponent
{
public:
	char                                                         pad0x8_12ES0[0x8];                                 // 0xc8(0x8)
	TArray<struct LootItemSpawnRelativeLocations>                LootItemSpawnRelativeLocations;                    // 0xd0(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class SeaClueSiteTypesDataAsset: public DataAsset
{
public:
	TArray<class Class*>                                         ClueSiteTypes;                                     // 0x28(0x10)
};


// Size 0x100 (Full Size[0x198] - InheritedSize[0x98]
class TaleQuestChooseLandOrSeaStep: public TaleQuestStep
{
public:
	char                                                         pad0x18_9ONZW[0x18];                               // 0x98(0x18)
	Class SeaClueSiteTypesDataAsset*                             SeaClueSiteTypes;                                  // 0xb0(0x8)
	char                                                         pad0xf0_USVFI[0xf0];                               // 0xb6(0xf0)
};


// Size 0x78 (Full Size[0xd8] - InheritedSize[0x60]
class TaleQuestClueSiteService: public TaleQuestService
{
public:
	Class TaleQuestClueSiteServiceDesc*                          Desc;                                              // 0x60(0x8)
	TArray<struct ClueSites>                                     ClueSites;                                         // 0x68(0x10)
	TArray<struct DebugClueSiteIds>                              DebugClueSiteIds;                                  // 0xc8(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class TaleQuestClueSiteServiceDesc: public TaleQuestServiceDesc
{
public:
};


// Size 0xe0 (Full Size[0x160] - InheritedSize[0x80]
class TaleQuestChooseLandOrSeaStepDesc: public TaleQuestStepDesc
{
public:
	Class SeaClueSiteTypesDataAsset*                             SeaClueSiteTypes;                                  // 0x80(0x8)
	float                                                        ProjectionAngleInDegrees;                          // 0x88(0x4)
	float                                                        MinProjectionProportion;                           // 0x8c(0x4)
	float                                                        MaxProjectionProportion;                           // 0x90(0x4)
	float                                                        LandClueChanceWhenPreviousClueWasSea;              // 0x94(0x4)
	float                                                        LandClueChanceWhenPreviousClueWasLand;             // 0x98(0x4)
	char                                                         pad0x4_G1I4M[0x4];                                 // 0x9c(0x4)
	Struct QuestVariableVector                                   ProjectionPoint;                                   // 0xa0(0x30)
	Struct QuestVariableTradeRouteData                           TradeRouteData;                                    // 0xd0(0x30)
	Struct QuestVariableBool                                     IsSeaLocation;                                     // 0x100(0x30)
	Struct QuestVariableNameArray                                ValidIslandNames;                                  // 0x130(0x30)
};


// Size 0xc0 (Full Size[0x158] - InheritedSize[0x98]
class TaleQuestGenerateCluePointingToSiteStep: public TaleQuestStep
{
public:
};


// Size 0xd8 (Full Size[0x158] - InheritedSize[0x80]
class TaleQuestGenerateCluePointingToSiteStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableInt                                      Difficulty;                                        // 0x80(0x30)
	Struct QuestVariableVector                                   SourceLocation;                                    // 0xb0(0x30)
	Struct QuestVariableClueSite                                 TargetClueSite;                                    // 0xe0(0x30)
	Struct QuestVariableClueDescriptor                           GeneratedClue;                                     // 0x110(0x30)
	TArray<class Class*>                                         AllowedClueTypes;                                  // 0x140(0x10)
	Class ClueConnectionConfig*                                  ConnectionConfiguration;                           // 0x150(0x8)
};


// Size 0x60 (Full Size[0xf8] - InheritedSize[0x98]
class TaleQuestGenerateClueSiteAtSeaLocationStep: public TaleQuestStep
{
public:
};


// Size 0x68 (Full Size[0xe8] - InheritedSize[0x80]
class TaleQuestGenerateClueSiteAtSeaLocationStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableVector                                   ApproximateLocation;                               // 0x80(0x30)
	Struct QuestVariableClueSite                                 ClueSite;                                          // 0xb0(0x30)
	Class ClueFactoryConfig*                                     ClueFactoryConfiguration;                          // 0xe0(0x8)
};


// Size 0x60 (Full Size[0xf8] - InheritedSize[0x98]
class TaleQuestGenerateClueSiteOnIslandStep: public TaleQuestStep
{
public:
};


// Size 0x68 (Full Size[0xe8] - InheritedSize[0x80]
class TaleQuestGenerateClueSiteOnIslandStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableName                                     IslandName;                                        // 0x80(0x30)
	Struct QuestVariableClueSite                                 ClueSite;                                          // 0xb0(0x30)
	Class ClueFactoryConfig*                                     ClueGenerationConfiguration;                       // 0xe0(0x8)
};


// Size 0x60 (Full Size[0xf8] - InheritedSize[0x98]
class TaleQuestGenerateDebrisTypeForVoyageRankStep: public TaleQuestStep
{
public:
};


// Size 0x68 (Full Size[0xe8] - InheritedSize[0x80]
class TaleQuestGenerateDebrisTypeForVoyageRankStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableInt                                      VoyageRank;                                        // 0x80(0x30)
	Struct QuestVariableActorAssetTypeArray                      DebrisTypeArray;                                   // 0xb0(0x30)
	Class DebrisForVoyageRankDescAsset*                          DebrisForRankDescAsset;                            // 0xe0(0x8)
};


// Size 0x60 (Full Size[0xf8] - InheritedSize[0x98]
class TaleQuestGenerateLootDescForVoyageRankStep: public TaleQuestStep
{
public:
};


// Size 0x68 (Full Size[0xe8] - InheritedSize[0x80]
class TaleQuestGenerateLootDescForVoyageRankStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableInt                                      VoyageRank;                                        // 0x80(0x30)
	Struct QuestVariableItemDescTypeArray                        LootDescArray;                                     // 0xb0(0x30)
	Class LootForVoyageRankDescAsset*                            LootForRankDescAsset;                              // 0xe0(0x8)
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class TaleQuestIsClueOfTypeStep: public TaleQuestStep
{
public:
};


// Size 0x68 (Full Size[0xe8] - InheritedSize[0x80]
class TaleQuestIsClueOfTypeStepDesc: public TaleQuestStepDesc
{
public:
	class                                                        ClueSiteTypeToMatch;                               // 0x80(0x8)
	Struct QuestVariableClueSite                                 ClueSite;                                          // 0x88(0x30)
	Struct QuestVariableBool                                     IsMatchingType;                                    // 0xb8(0x30)
};


// Size 0x68 (Full Size[0x100] - InheritedSize[0x98]
class TaleQuestSelectClueSiteForLootStep: public TaleQuestStep
{
public:
	Class TaleQuestSelectClueSiteForLootStepDesc*                StepDesc;                                          // 0x98(0x8)
	char                                                         pad0x70_6N368[0x70];                               // 0x9e(0x70)
};


// Size 0x78 (Full Size[0xf8] - InheritedSize[0x80]
class TaleQuestSelectClueSiteForLootStepDesc: public TaleQuestStepDesc
{
public:
	Class TaleQuestArrayEntrySelectionStrategy*                  SelectionStrategy;                                 // 0x80(0x8)
	Class ClueSiteLootRestrictionsDataAsset*                     ClueSiteLootRestrictions;                          // 0x88(0x8)
	byte                                                         LootType;                                          // 0x90(0x1)
	char                                                         pad0x7_ALHNY[0x7];                                 // 0x91(0x7)
	Struct QuestVariableClueSite                                 OutputClueSite;                                    // 0x98(0x30)
	Struct QuestVariableBool                                     MaxedAllClueSites;                                 // 0xc8(0x30)
};


// Size 0xa8 (Full Size[0x140] - InheritedSize[0x98]
class TaleQuestSpawnDebrisAtClueSiteStep: public TaleQuestStep
{
public:
};


// Size 0x90 (Full Size[0x110] - InheritedSize[0x80]
class TaleQuestSpawnDebrisAtClueSiteStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableClueSite                                 ClueSiteVar;                                       // 0x80(0x30)
	Struct QuestVariableActorAssetType                           DebrisTypeVar;                                     // 0xb0(0x30)
	Struct QuestVariableActor                                    OutDebrisActorVar;                                 // 0xe0(0x30)
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class TaleQuestSpawnLootItemInClueSiteStep: public TaleQuestStep
{
public:
};


// Size 0x98 (Full Size[0x118] - InheritedSize[0x80]
class TaleQuestSpawnLootItemInClueSiteStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableClass                                    LootItem;                                          // 0x80(0x30)
	Struct QuestVariableClueSite                                 ClueSite;                                          // 0xb0(0x30)
	Struct QuestVariableItemInfo                                 SpawnedLootItem;                                   // 0xe0(0x30)
	bool                                                         Tracked;                                           // 0x110(0x1)
	char                                                         pad0x9_G316S[0x9];                                 // 0x10f(0x9)
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class TaleQuestStoreClueOnActorStep: public TaleQuestStep
{
public:
};


// Size 0x90 (Full Size[0x110] - InheritedSize[0x80]
class TaleQuestStoreClueOnActorStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableClueDescriptor                           ClueDescriptor;                                    // 0x80(0x30)
	Struct QuestVariableActor                                    Actor;                                             // 0xb0(0x30)
	Struct QuestVariableActor                                    ClueActor;                                         // 0xe0(0x30)
};


// Size 0x38 (Full Size[0xd0] - InheritedSize[0x98]
class TaleQuestUpdateBuoyancyAutoSinkSettingForItemStep: public TaleQuestStep
{
public:
};


// Size 0x38 (Full Size[0xb8] - InheritedSize[0x80]
class TaleQuestUpdateBuoyancyAutoSinkSettingForItemStepDesc: public TaleQuestStepDesc
{
public:
	Struct QuestVariableItemInfo                                 Item;                                              // 0x80(0x30)
	bool                                                         EnableAutoSink;                                    // 0xb0(0x1)
	char                                                         pad0x9_9OF1B[0x9];                                 // 0xaf(0x9)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class WeightedDebrisDataAsset: public DataAsset
{
public:
	TArray<struct Debris>                                        Debris;                                            // 0x28(0x10)
};


}