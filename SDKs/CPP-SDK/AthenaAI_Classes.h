#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "AthenaAI_Structs.h"


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPawnInterface: public Interface
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIPartsServiceParams: public DataAsset
{
public:
	class AIPartsCategoryTypeList*                               PartsCategoriesList;                               // 0x28(0x8)
	class AIColorVariantPool*                                    TeamColors;                                        // 0x30(0x8)
};


// Size 0x10 (Full Size[0x2f0] - InheritedSize[0x2e0]
class AIItemSpawnDataSourceComponent: public SceneComponent
{
public:
	char                                                         pad0x8_5NXGV[0x8];                                 // 0x2e0(0x8)
	class ItemSpawnTransformWithRandomQuantityDataAssset*        ItemSpawnDataAsset;                                // 0x2e8(0x8)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class StatusResponseSetBlackboardBoolKey: public StatusResponse
{
public:
	struct FName                                                 BlackboardBoolKeyName;                             // 0x30(0x8)
	bool                                                         bValueWhenActive;                                  // 0x38(0x1)
	bool                                                         ShouldClearKeyOnEnd;                               // 0x39(0x1)
	char                                                         pad0x6_FP19K[0x6];                                 // 0x3a(0x6)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIDioramaDesc: public DataAsset
{
public:
	TArray<struct AIDioramaRoleDesc>                             RoleList;                                          // 0x28(0x10)
	class SceneDialogueData*                                     DialogueData;                                      // 0x38(0x8)
};


// Size 0x40 (Full Size[0x68] - InheritedSize[0x28]
class AIPartsCategory: public DataAsset
{
public:
	TArray<class AIPartsDesc*>                                   Parts;                                             // 0x28(0x10)
	int                                                          NextPartsIndex;                                    // 0x38(0x4)
	bool                                                         UseWeightedArray;                                  // 0x3c(0x1)
	char                                                         pad0x3_D685L[0x3];                                 // 0x3d(0x3)
	struct FName                                                 UseWeightedArrayFeatureName;                       // 0x40(0x8)
	struct WeightedProbabilityRange                              WeightedArray;                                     // 0x48(0x20)
};


// Size 0x68 (Full Size[0x90] - InheritedSize[0x28]
class AthenaAIFormDataAsset: public DataAsset
{
public:
	TArray<char>                                                 PreventHealthChangedReasons;                       // 0x28(0x10)
	TArray<struct AIFormDamageResponse>                          DamageResponses;                                   // 0x38(0x10)
	class StatusRecipientResponseList*                           OverrideStatusRecipientResponseList;               // 0x48(0x8)
	class PhysicalMaterial*                                      SurfaceMaterial;                                   // 0x50(0x8)
	class Object*                                                KilledVfxTemplate;                                 // 0x58(0x8)
	class UClass*                                                AICharacterAudioComponent;                         // 0x60(0x8)
	class UClass*                                                AnimNotifyEmitterWithObservers;                    // 0x68(0x8)
	bool                                                         HighPriorityFootstepAudio;                         // 0x70(0x1)
	char                                                         pad0x3_LF27M[0x3];                                 // 0x71(0x3)
	float                                                        MovementSpeedMultipler;                            // 0x74(0x4)
	struct PlayerStat                                            StatToFireOnDeath;                                 // 0x78(0x4)
	struct FName                                                 FeatureName;                                       // 0x7c(0x8)
	char                                                         pad0x4_TP3VL[0x4];                                 // 0x84(0x4)
	class UClass*                                                FormComponentClass;                                // 0x88(0x8)
};


// Size 0x40 (Full Size[0x408] - InheritedSize[0x3c8]
class BurrowCrack: public Actor
{
public:
	class SceneComponent*                                        DefaultSceneComponent;                             // 0x3c8(0x8)
	class DecalComponent*                                        DecalComponent;                                    // 0x3d0(0x8)
	float                                                        FadeOutTimeSeconds;                                // 0x3d8(0x4)
	bool                                                         HasFadeStarted;                                    // 0x3dc(0x1)
	char                                                         pad0x2b_Z1R6J[0x2b];                               // 0x3dd(0x2b)
};


// Size 0x40 (Full Size[0x108] - InheritedSize[0xc8]
class BurrowComponent: public ActorComponent
{
public:
	char                                                         pad0x8_OOFJZ[0x8];                                 // 0xc8(0x8)
	class UClass*                                                BurrowCrackClass;                                  // 0xd0(0x8)
	class UClass*                                                BurrowEruptClass;                                  // 0xd8(0x8)
	float                                                        BurrowFadeoutTime;                                 // 0xe0(0x4)
	char                                                         pad0x4_Q7RSQ[0x4];                                 // 0xe4(0x4)
	TArray<class BurrowCrack*>                                   BurrowCracks;                                      // 0xe8(0x10)
	class BurrowEruptBase*                                       BurrowErupt;                                       // 0xf8(0x8)
	char                                                         pad0x8_LF872[0x8];                                 // 0x100(0x8)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class AIEncounterGenerationRecipeRankOrderList: public DataAsset
{
public:
	TArray<class AIEncounterGenerationRecipe*>                   Recipes;                                           // 0x28(0x10)
	TArray<struct AIEncounterGenerationRecipeFeatureBasedRankOrderList> FeatureBasedRecipeLists;                           // 0x38(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIFormComponentContainerInterface: public Interface
{
public:
};


// Size 0x40 (Full Size[0x1b0] - InheritedSize[0x170]
class EnvQueryTest_HasLineOfSight: public EnvQueryTest
{
public:
	char                                                         TraceDirection;                                    // 0x170(0x1)
	char                                                         pad0x7_3NTTJ[0x7];                                 // 0x171(0x7)
	class UClass*                                                Context;                                           // 0x178(0x8)
	struct AIDataProviderFloatValue                              RadialOffsetFromLOSEndTest;                        // 0x180(0x30)
};


// Size 0x30 (Full Size[0xb8] - InheritedSize[0x88]
class BTTask_IncrementBlackboardIntValue: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderIntValue                                IntegerValueDelta;                                 // 0x88(0x30)
};


// Size 0x0 (Full Size[0x60] - InheritedSize[0x60]
class BTTask_BurrowAbilityTriggerEruptAreaFromBlackboard: public BTTaskNode
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class AIElectricProjectileInterruptedStatus: public StatusBase
{
public:
};


// Size 0x158 (Full Size[0x220] - InheritedSize[0xc8]
class HealthGemComponent: public ActorComponent
{
public:
	char                                                         pad0x138_Z3T9K[0x138];                             // 0xc8(0x138)
	TArray<class MaterialInstanceDynamic*>                       OverridenMaterials;                                // 0x200(0x10)
	struct FName                                                 EmissiveMaterialParameterName;                     // 0x210(0x8)
	bool                                                         BuildMaterialMapOnBeginPlay;                       // 0x218(0x1)
	char                                                         pad0x7_JQULL[0x7];                                 // 0x219(0x7)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AISpawnerList: public DataAsset
{
public:
	TArray<class AISpawner*>                                     Spawners;                                          // 0x28(0x10)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_SetInHiddenActionState: public BTTaskNode
{
public:
	bool                                                         EnableHiddenActionState;                           // 0x60(0x1)
	char                                                         pad0x7_COIG3[0x7];                                 // 0x61(0x7)
};


// Size 0x1b8 (Full Size[0x240] - InheritedSize[0x88]
class BTTask_SwimAttackTargetShip: public BTTask_BlackboardBase
{
public:
	float                                                        BiteRadiusOffsetToBeginAttackHeadOn;               // 0x88(0x4)
	float                                                        BiteRadiusOffsetToBeginAttackPerpendicular;        // 0x8c(0x4)
	float                                                        MaxTimeToStartAttack;                              // 0x90(0x4)
	char                                                         pad0x4_UARJL[0x4];                                 // 0x94(0x4)
	class AnimSequence*                                          AttackAnim;                                        // 0x98(0x8)
	float                                                        AttackAnimLength;                                  // 0xa0(0x4)
	float                                                        TimeToPerformAttack;                               // 0xa4(0x4)
	class Object*                                                AttackVFX;                                         // 0xa8(0x8)
	float                                                        AttackVFXZOffset;                                  // 0xb0(0x4)
	struct FName                                                 LoSTraceProfileName;                               // 0xb4(0x8)
	char                                                         pad0x4_62RPT[0x4];                                 // 0xbc(0x4)
	struct AIDataProviderFloatValue                              LosTraceRadius;                                    // 0xc0(0x30)
	TArray<struct SwimAttackTargetShipImpulseData>               ImpulseData;                                       // 0xf0(0x10)
	struct AIDataProviderIntValue                                MinDamageHolesToApply;                             // 0x100(0x30)
	struct AIDataProviderIntValue                                MaxDamageHolesToApply;                             // 0x130(0x30)
	int                                                          LevelsOfHullDamage;                                // 0x160(0x4)
	char                                                         pad0x4_K21ZG[0x4];                                 // 0x164(0x4)
	class UClass*                                                DamageCauserType;                                  // 0x168(0x8)
	float                                                        AreaOfEffectOfShipHitAttack;                       // 0x170(0x4)
	char                                                         CollisionChannelForGunpowderKegs;                  // 0x174(0x1)
	char                                                         pad0x3_5F3SB[0x3];                                 // 0x175(0x3)
	struct AIDataProviderFloatValue                              PlayerBiteRadius;                                  // 0x178(0x30)
	struct KnockBackInfo                                         KnockbackParams;                                   // 0x1a8(0x50)
	struct AIDataProviderFloatValue                              PlayerBiteDamage;                                  // 0x1f8(0x30)
	char                                                         pad0x10_P7FP4[0x10];                               // 0x228(0x10)
	class Ship*                                                  TargetShip;                                        // 0x238(0x8)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class SpawnerBehaviourStrategy: public Object
{
public:
	char                                                         pad0x20_0L31B[0x20];                               // 0x28(0x20)
};


// Size 0x110 (Full Size[0x138] - InheritedSize[0x28]
class AthenaAIControllerParamsDataAsset: public DataAsset
{
public:
	struct AthenaAIControllerSenseSettings                       DefaultSenseSettings;                              // 0x28(0x14)
	float                                                        AutoSuccessRangeFromLastSeenLocation;              // 0x3c(0x4)
	float                                                        DefaultPerceivedNotVisibleAge;                     // 0x40(0x4)
	bool                                                         CanTargetNotSeenPerceivedActors;                   // 0x44(0x1)
	bool                                                         OverrideTeamID;                                    // 0x45(0x1)
	char                                                         TeamID;                                            // 0x46(0x1)
	char                                                         pad0x1_W6D4X[0x1];                                 // 0x47(0x1)
	float                                                        TargetSwitchScoreTolerance;                        // 0x48(0x4)
	char                                                         pad0x4_1269V[0x4];                                 // 0x4c(0x4)
	TArray<float>                                                TargetLoadWeightingBias;                           // 0x50(0x10)
	float                                                        DistanceToStartTargetPickingDecrease;              // 0x60(0x4)
	float                                                        TargetPickingDistScoreAtMaxSightRange;             // 0x64(0x4)
	float                                                        VisionAngleToStartTargetPickingDecrease;           // 0x68(0x4)
	float                                                        TargetPickingFacingScoreAtMaxPeripheralVisionAngle; // 0x6c(0x4)
	bool                                                         UseDamageAsFactorInTargetScore;                    // 0x70(0x1)
	char                                                         pad0x3_QDA2S[0x3];                                 // 0x71(0x3)
	struct AthenaAIControllerDamageTargetScoreFromPerceivedTarget DamageTargetScores;                                // 0x74(0x14)
	TArray<class AthenaAIControllerSharedParamValuesDataAsset*>  SharedParamValues;                                 // 0x88(0x10)
	TArray<struct AthenaAISharedControllerParamToggledValues>    AdditionalToggleableSharedParamValues;             // 0x98(0x10)
	bool                                                         IndividualOverrideMeshScale;                       // 0xa8(0x1)
	char                                                         pad0x3_1KLF9[0x3];                                 // 0xa9(0x3)
	float                                                        IndividualMeshScale;                               // 0xac(0x4)
	struct AthenaAIControllerHealthCustomisation                 IndividualHealthCustomisationValues;               // 0xb0(0xc)
	char                                                         pad0x4_OZZZ8[0x4];                                 // 0xbc(0x4)
	TArray<struct AthenaAIControllerParamValue>                  IndividualInitialBlackboardValues;                 // 0xc0(0x10)
	TArray<struct AthenaAIControllerParamValue>                  IndividualNamedControllerParams;                   // 0xd0(0x10)
	TArray<struct AthenaAIControllerFeatureToggledParams>        FeatureToggleIndividualNamedParamOverrides;        // 0xe0(0x10)
	TArray<struct AthenaAIControllerWeightedRangesParamValue>    IndividualNamedWeightedRangesControllerParams;     // 0xf0(0x10)
	TArray<struct AthenaAIControllerSenseSettingOverride>        IndividualAIStrategySenseSettingOverrides;         // 0x100(0x10)
	bool                                                         IndividualOverrideCurrentTargetPerceivedNotVisibleAge; // 0x110(0x1)
	char                                                         pad0x3_I0EQ3[0x3];                                 // 0x111(0x3)
	float                                                        IndividualCurrentTargetPerceivedNotVisibleAge;     // 0x114(0x4)
	TArray<class AthenaAIDamageModifierBase*>                    DamageModifiers;                                   // 0x118(0x10)
	class AthenaAICrewStrengthDynamicParamsDataAsset*            CrewStrengthDynamicParams;                         // 0x128(0x8)
	struct FName                                                 FeatureName;                                       // 0x130(0x8)
};


// Size 0x80 (Full Size[0x250] - InheritedSize[0x1d0]
class PetDitherComponent: public DitherComponent
{
public:
	char                                                         pad0x80_WIJ3W[0x80];                               // 0x1d0(0x80)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIFormTypeList: public DataAsset
{
public:
	TArray<class AthenaAIFormDataAsset*>                         AllForms;                                          // 0x28(0x10)
	class AthenaAIFormDataAsset*                                 DefaultForm;                                       // 0x38(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPartsServiceInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AISpawnContextContainerInterface: public Interface
{
public:
};


// Size 0xb8 (Full Size[0xf0] - InheritedSize[0x38]
class AthenaAISettings: public DeveloperSettings
{
public:
	struct StringAssetReference                                  AITypesAsset;                                      // 0x38(0x10)
	struct StringAssetReference                                  AISpawnContextListAsset;                           // 0x48(0x10)
	int                                                          FallbackAIDifficultyRank;                          // 0x58(0x4)
	int                                                          MaxNumOfSpawnedActors;                             // 0x5c(0x4)
	int                                                          MaxPlayerEquivalentAIsPerRegion;                   // 0x60(0x4)
	int                                                          MaxWorldAICostUnitsForWorld;                       // 0x64(0x4)
	int                                                          AIRegionCostUnitsForPlayer;                        // 0x68(0x4)
	float                                                        CharacterNetRelevancy;                             // 0x6c(0x4)
	float                                                        CharacterRegionDensityCheckTimer;                  // 0x70(0x4)
	float                                                        CharacterWorldDensityCheckTimer;                   // 0x74(0x4)
	float                                                        DistanceToPlayerToRaiseSpawnPriority;              // 0x78(0x4)
	float                                                        MinRetryingCanSpawnRequestTime;                    // 0x7c(0x4)
	float                                                        MaxRetryingCanSpawnRequestTime;                    // 0x80(0x4)
	float                                                        MinRetryingLocationCheckTime;                      // 0x84(0x4)
	float                                                        MaxRetryingLocationCheckTime;                      // 0x88(0x4)
	float                                                        CharacterAINoiseTickInterval;                      // 0x8c(0x4)
	float                                                        PeriodicAINoiseComponentTickInterval;              // 0x90(0x4)
	float                                                        FaunaPlayerProximityDormancyRange;                 // 0x94(0x4)
	float                                                        FaunaPlayerProximityTickTime;                      // 0x98(0x4)
	float                                                        FaunaTimeOutOfPlayerProximityForDormancy;          // 0x9c(0x4)
	struct StringAssetReference                                  AIPartsServiceParamsFileLocation;                  // 0xa0(0x10)
	float                                                        DefaultNavAgentCapsuleRadius;                      // 0xb0(0x4)
	float                                                        DefaultNavAgentCapsuleHalfHeight;                  // 0xb4(0x4)
	float                                                        MinDelayBeforeRetryingUnsuccessfulWave;            // 0xb8(0x4)
	float                                                        MaxDelayBeforeRetryingUnsuccessfulWave;            // 0xbc(0x4)
	struct StringAssetReference                                  AIEncounterServiceAssetClassFileLocation;          // 0xc0(0x10)
	struct StringAssetReference                                  AIEncounterGenerationServiceAssetClassFileLocation; // 0xd0(0x10)
	struct FName                                                 AICharacterWaterInteractionCollisionProfileName;   // 0xe0(0x8)
	float                                                        AICountTelemetryEventFrequency;                    // 0xe8(0x4)
	char                                                         pad0x4_I87WQ[0x4];                                 // 0xec(0x4)
};


// Size 0x10 (Full Size[0x98] - InheritedSize[0x88]
class BTTask_SwimTurnOnTheSpot: public BTTask_BlackboardBase
{
public:
	float                                                        MaxTurnSpringAccel;                                // 0x88(0x4)
	float                                                        TimeUntilMaxTurnSpringAccel;                       // 0x8c(0x4)
	float                                                        AngleDeltaToAcceptFinalRotation;                   // 0x90(0x4)
	float                                                        Timeout;                                           // 0x94(0x4)
};


// Size 0x50 (Full Size[0x118] - InheritedSize[0xc8]
class AIDebugVisualisationComponent: public ActorComponent
{
public:
	TArray<struct AIDebugVisualisationLine>                      Lines;                                             // 0xc8(0x10)
	TArray<struct AIDebugVisualisationBox>                       Boxes;                                             // 0xd8(0x10)
	TArray<struct AIDebugVisualisationCylinder>                  Cylinders;                                         // 0xe8(0x10)
	TArray<struct AIDebugVisualisationSphere>                    Spheres;                                           // 0xf8(0x10)
	TArray<struct AIDebugVisualisationCone>                      Cones;                                             // 0x108(0x10)
};


// Size 0x10 (Full Size[0x98] - InheritedSize[0x88]
class BTTask_SetVelocity: public BTTask_BlackboardBase
{
public:
	bool                                                         UseBlackboardKey;                                  // 0x88(0x1)
	char                                                         pad0x3_U2DBX[0x3];                                 // 0x89(0x3)
	struct Vector                                                NewVelocity;                                       // 0x8c(0xc)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIEncounterServiceInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_SetFollowUpAbility: public BTTaskNode
{
public:
	class UClass*                                                AIAbilityType;                                     // 0x60(0x8)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class SimpleDialogueStateProvider: public Object
{
public:
	char                                                         pad0x10_T0O90[0x10];                               // 0x28(0x10)
};


// Size 0x0 (Full Size[0x60] - InheritedSize[0x60]
class BTTask_RequestDespawn: public BTTaskNode
{
public:
};


// Size 0x78 (Full Size[0xd8] - InheritedSize[0x60]
class BTTask_CopyAIHomeToBlackboard: public BTTaskNode
{
public:
	struct BlackboardKeySelector                                 HomeProviderActor;                                 // 0x60(0x28)
	struct BlackboardKeySelector                                 HomeActor;                                         // 0x88(0x28)
	struct BlackboardKeySelector                                 HomeLocation;                                      // 0xb0(0x28)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class BurrowInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class MerchantCrateMetaGenerator: public ItemSnapshotMetaGenerator
{
public:
};


// Size 0x10 (Full Size[0x60] - InheritedSize[0x50]
class AILoadoutItemSpawnRequirement: public SpawnRequirement
{
public:
	TArray<class LoadoutAsset*>                                  AllowedLoadouts;                                   // 0x50(0x10)
};


// Size 0x8 (Full Size[0x78] - InheritedSize[0x70]
class BTService_PlayCustomMontageId: public BTService
{
public:
	struct CustomAnimationMontageId                              CustomAnimationMontageId;                          // 0x70(0x8)
};


// Size 0x98 (Full Size[0xf8] - InheritedSize[0x60]
class BTTask_AthenaWait: public BTTaskNode
{
public:
	bool                                                         UseMinMax;                                         // 0x60(0x1)
	char                                                         pad0x7_5RUKO[0x7];                                 // 0x61(0x7)
	struct AIDataProviderFloatValue                              Min;                                               // 0x68(0x30)
	struct AIDataProviderFloatValue                              Max;                                               // 0x98(0x30)
	struct AIDataProviderFloatValue                              FixedWaitTime;                                     // 0xc8(0x30)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AISpawnContextProviderInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x90] - InheritedSize[0x90]
class BTDecorator_DockedToInteractable: public BTDecorator_BlackboardBase
{
public:
};


// Size 0x20 (Full Size[0x460] - InheritedSize[0x440]
class CreatureSplineAnimationInstance: public AnimInstance
{
public:
	char                                                         pad0x18_TA5BQ[0x18];                               // 0x440(0x18)
	bool                                                         IsCreatureMoving;                                  // 0x458(0x1)
	char                                                         pad0x3_9BM67[0x3];                                 // 0x459(0x3)
	float                                                        CreatureSpeed;                                     // 0x45c(0x4)
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_MultipleRandomDiceRolls: public BTDecorator
{
public:
	TArray<struct ChanceAndBlackboardKeyPair>                    ChanceKeyPairs;                                    // 0x68(0x10)
};


// Size 0x48 (Full Size[0x70] - InheritedSize[0x28]
class TaleQuestTinySharkExperienceTracker: public Object
{
public:
	char                                                         pad0x38_EH4I7[0x38];                               // 0x28(0x38)
	float                                                        UpdateFrequency;                                   // 0x60(0x4)
	char                                                         pad0xc_RPO4I[0xc];                                 // 0x64(0xc)
};


// Size 0x180 (Full Size[0x218] - InheritedSize[0x98]
class EnvQueryGenerator_WaterArc: public EnvQueryGenerator_ProjectedPoints
{
public:
	class UClass*                                                Origin;                                            // 0x98(0x8)
	struct AIDataProviderIntValue                                NumberOfArcsToGenerate;                            // 0xa0(0x30)
	struct AIDataProviderFloatValue                              MinArcRadius;                                      // 0xd0(0x30)
	struct AIDataProviderFloatValue                              MaxArcRadius;                                      // 0x100(0x30)
	struct AIDataProviderFloatValue                              MinArcTiltDegrees;                                 // 0x130(0x30)
	struct AIDataProviderFloatValue                              MaxArcTiltDegrees;                                 // 0x160(0x30)
	struct AIDataProviderFloatValue                              MinArcPercentage;                                  // 0x190(0x30)
	struct AIDataProviderFloatValue                              MaxArcPercentage;                                  // 0x1c0(0x30)
	bool                                                         IncludeDirectArcToTarget;                          // 0x1f0(0x1)
	char                                                         pad0x7_OT2NA[0x7];                                 // 0x1f1(0x7)
	class UClass*                                                DirectArcTarget;                                   // 0x1f8(0x8)
	char                                                         pad0x18_J5LXF[0x18];                               // 0x200(0x18)
};


// Size 0x138 (Full Size[0x200] - InheritedSize[0xc8]
class AthenaAIAbilityHandlerComponent: public ActorComponent
{
public:
	char                                                         pad0xd0_0WQLT[0xd0];                               // 0xc8(0xd0)
	TArray<struct AthenaAIAbilityDamageStage>                    AbilityStages;                                     // 0x198(0x10)
	TArray<class AthenaAIAbility*>                               AIAbilities;                                       // 0x1a8(0x10)
	TArray<class Class*>                                         ReadyAbilitiesPool;                                // 0x1b8(0x10)
	char                                                         pad0x20_02Y49[0x20];                               // 0x1c8(0x20)
	class UClass*                                                DebugAlwaysOnAbility;                              // 0x1e8(0x8)
	class UClass*                                                RequiresActivation;                                // 0x1f0(0x8)
	char                                                         pad0x8_2PV8G[0x8];                                 // 0x1f8(0x8)
};


// Size 0x8 (Full Size[0x78] - InheritedSize[0x70]
class BTService_SetFloatToTheSurfaceWhileInBranch: public BTService
{
public:
	bool                                                         FloatToTheSurfaceWhileInBranch;                    // 0x70(0x1)
	char                                                         pad0x7_J5MNG[0x7];                                 // 0x71(0x7)
};


// Size 0x8 (Full Size[0x60] - InheritedSize[0x58]
class EnvQueryGenerator_FromContext: public EnvQueryGenerator
{
public:
	class UClass*                                                Context;                                           // 0x58(0x8)
};


// Size 0x68 (Full Size[0x430] - InheritedSize[0x3c8]
class AIDioramaService: public Actor
{
public:
	char                                                         pad0x68_4DC3L[0x68];                               // 0x3c8(0x68)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPlayerTracker: public Object
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ForcedIdleBehaviourInterface: public Interface
{
public:
};


// Size 0x28 (Full Size[0x50] - InheritedSize[0x28]
class AISpawnWaveSequenceRankProgression: public DataAsset
{
public:
	char                                                         pad0x10_4OWPQ[0x10];                               // 0x28(0x10)
	TArray<struct AISpawnWaveSequenceRankMapping>                RankMappings;                                      // 0x38(0x10)
	int                                                          NumberOfRanks;                                     // 0x48(0x4)
	char                                                         pad0x4_3FBW3[0x4];                                 // 0x4c(0x4)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AquaticAITargetInterface: public Interface
{
public:
};


// Size 0x20 (Full Size[0x50] - InheritedSize[0x30]
class StatusResponseSetBlackboardClassKey: public StatusResponse
{
public:
	struct FName                                                 BlackboardClassKeyName;                            // 0x30(0x8)
	class UClass*                                                ValueWhenActive;                                   // 0x38(0x8)
	bool                                                         SetValueOnDeactivate;                              // 0x40(0x1)
	char                                                         pad0x7_I6Z6U[0x7];                                 // 0x41(0x7)
	class UClass*                                                ValueWhenDeactivated;                              // 0x48(0x8)
};


// Size 0x40 (Full Size[0xa0] - InheritedSize[0x60]
class BTTask_SpawnActorAndStore: public BTTaskNode
{
public:
	struct BlackboardKeySelector                                 BlackBoardKeyNameToStoreActor;                     // 0x60(0x28)
	class UClass*                                                ActorToSpawn;                                      // 0x88(0x8)
	struct Vector                                                SpawnOffset;                                       // 0x90(0xc)
	char                                                         pad0x4_OF6IV[0x4];                                 // 0x9c(0x4)
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class AISpawnOverrideCondition: public Object
{
public:
	bool                                                         InvertResult;                                      // 0x28(0x1)
	char                                                         pad0x7_3XOBX[0x7];                                 // 0x29(0x7)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIIdentifierOwnerInterface: public Interface
{
public:
};


// Size 0x40 (Full Size[0x68] - InheritedSize[0x28]
class AIWeightedProbabilityRangeOfRangesAsset: public DataAsset
{
public:
	float                                                        RespawnChance;                                     // 0x28(0x4)
	char                                                         pad0x4_BT5YF[0x4];                                 // 0x2c(0x4)
	struct WeightedProbabilityRangeOfRanges                      RespawnTimerRanges;                                // 0x30(0x30)
	struct FName                                                 FeatureName;                                       // 0x60(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIControllerNavMeshTogglesInterface: public Interface
{
public:
};


// Size 0x18 (Full Size[0x48] - InheritedSize[0x30]
class StatusResponseSetBlackboardFloatKey: public StatusResponse
{
public:
	struct FName                                                 BlackboardFloatKeyName;                            // 0x30(0x8)
	float                                                        ValueWhenActive;                                   // 0x38(0x4)
	bool                                                         ShouldClearKeyOnEnd;                               // 0x3c(0x1)
	char                                                         pad0xb_97WNE[0xb];                                 // 0x3d(0xb)
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class EnvQueryContext_SeenActorsProjectedToGround: public EnvQueryContext
{
public:
	TArray<class Actor*>                                         SeenActors;                                        // 0x28(0x10)
	char                                                         pad0x20_IL4V4[0x20];                               // 0x38(0x20)
};


// Size 0x538 (Full Size[0x900] - InheritedSize[0x3c8]
class TinySharkExperience: public Actor
{
public:
	char                                                         pad0x10_MUBSI[0x10];                               // 0x3c8(0x10)
	float                                                        RelevancyDistance;                                 // 0x3d8(0x4)
	float                                                        TrackingMovementCheckInterval;                     // 0x3dc(0x4)
	class EnvQuery*                                              TrackingMovementValidQuery;                        // 0x3e0(0x8)
	bool                                                         ShouldBlockMigrationForAllAttackingCrewsFromAnyDistance; // 0x3e8(0x1)
	char                                                         pad0xa7_QA5G9[0xa7];                               // 0x3e9(0xa7)
	class AIOnDemandSpawner*                                     TinySharkSpawner;                                  // 0x490(0x8)
	class SharkPawn*                                             TinySharkPawn;                                     // 0x498(0x8)
	struct FName                                                 HealthRTPC;                                        // 0x4a0(0x8)
	char                                                         pad0x8_O6NIO[0x8];                                 // 0x4a8(0x8)
	struct TinySharkParams                                       Params;                                            // 0x4b0(0xc8)
	class TinySharkTelemetryComponent*                           TinySharkTelemetryComponent;                       // 0x578(0x8)
	class AIItemSpawnComponent*                                  LootItemSpawnComponent;                            // 0x580(0x8)
	class AIItemSpawnComponent*                                  FoodItemSpawnComponent;                            // 0x588(0x8)
	class Ship*                                                  TrackedShip;                                       // 0x590(0x8)
	char                                                         pad0x90_6X6ZH[0x90];                               // 0x598(0x90)
	struct EncounterParams                                       SightingEncounterParams;                           // 0x628(0xc)
	struct EncounterParams                                       CloseEncounterParams;                              // 0x634(0xc)
	char                                                         pad0x168_7R1N1[0x168];                             // 0x640(0x168)
	TArray<class AIItemSpawnComponent*>                          ItemSpawnComps;                                    // 0x7a8(0x10)
	char                                                         pad0x108_OS27Q[0x108];                             // 0x7b8(0x108)
	char                                                         pad0x40_AXFEP[0x40];                               // 0x8c0(0x40)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class BountySpawnerAudioZonesInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPlayerTrackerObserverInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_ClearBlackboardValue: public BTTask_BlackboardBase
{
public:
};


// Size 0x0 (Full Size[0x3c8] - InheritedSize[0x3c8]
class BurrowEruptBase: public Actor
{
public:
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_IgnoreActorTemporarily: public BTTask_BlackboardBase
{
public:
	float                                                        TimeToForget;                                      // 0x88(0x4)
	char                                                         pad0x4_HK86B[0x4];                                 // 0x8c(0x4)
};


// Size 0x208 (Full Size[0x5d0] - InheritedSize[0x3c8]
class TinySharkService: public Actor
{
public:
	char                                                         pad0x10_8C1SL[0x10];                               // 0x3c8(0x10)
	class TinySharkServiceParamsDataAsset*                       TinySharkServiceParams;                            // 0x3d8(0x8)
	char                                                         pad0x1b0_8PH9R[0x1b0];                             // 0x3e0(0x1b0)
	TArray<class TinySharkExperience*>                           TinySharkExperiences;                              // 0x590(0x10)
	TArray<class TinySharkExperience*>                           ExternallyManagedTinySharkExperiences;             // 0x5a0(0x10)
	char                                                         pad0x20_CUUTN[0x20];                               // 0x5b0(0x20)
};


// Size 0x18 (Full Size[0x80] - InheritedSize[0x68]
class BTDecorator_CompareBlackboardValues: public BTDecorator
{
public:
	TArray<struct BlackboardValueCondition>                      FloatConditions;                                   // 0x68(0x10)
	char                                                         FloatConditionComposite;                           // 0x78(0x1)
	char                                                         pad0x7_61H0F[0x7];                                 // 0x79(0x7)
};


// Size 0x10 (Full Size[0x520] - InheritedSize[0x510]
class ControllableAIActionSpot: public ControllableObject
{
public:
	class AIActionSpotComponent*                                 AIActionSpotComponent;                             // 0x510(0x8)
	class SceneComponent*                                        SceneComponent;                                    // 0x518(0x8)
};


// Size 0x28 (Full Size[0x98] - InheritedSize[0x70]
class BTService_DetermineAIAbility: public BTService
{
public:
	struct BlackboardKeySelector                                 BlockChangeAIAbilitiesKey;                         // 0x70(0x28)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AISpawnerPrerequisiteBase: public Object
{
public:
	bool                                                         Invert;                                            // 0x28(0x1)
	char                                                         pad0x3_LUKWB[0x3];                                 // 0x29(0x3)
	struct FeatureFlag                                           FeatureFlag;                                       // 0x2c(0xc)
};


// Size 0x48 (Full Size[0x110] - InheritedSize[0xc8]
class PeriodicAINoiseEventComponent: public ActorComponent
{
public:
	struct FName                                                 NoiseTag;                                          // 0xc8(0x8)
	bool                                                         NoiseRangeBasedOnMovementSpeed;                    // 0xd0(0x1)
	char                                                         pad0x3_464GP[0x3];                                 // 0xd1(0x3)
	float                                                        ConstantNoiseRange;                                // 0xd4(0x4)
	class CurveFloat*                                            MovementSpeedToNoiseRange;                         // 0xd8(0x8)
	class Actor*                                                 OwnerActor;                                        // 0xe0(0x8)
	char                                                         pad0x28_IQU7B[0x28];                               // 0xe8(0x28)
};


// Size 0x78 (Full Size[0x100] - InheritedSize[0x88]
class BTTask_SwimTo: public BTTask_BlackboardBase
{
public:
	bool                                                         WantsToReportPathFailure;                          // 0x88(0x1)
	char                                                         pad0x7_581EK[0x7];                                 // 0x89(0x7)
	struct BlackboardKeySelector                                 PathFailureCounter;                                // 0x90(0x28)
	float                                                        AcceptableRadius;                                  // 0xb8(0x4)
	char                                                         GoalCheckMode;                                     // 0xbc(0x1)
	char                                                         ArcMode;                                           // 0xbd(0x1)
	char                                                         ArcToTargetDirection;                              // 0xbe(0x1)
	char                                                         Swim3DCrestingReaction;                            // 0xbf(0x1)
	struct SpatialOffset                                         OffsetFromTargetActor;                             // 0xc0(0x8)
	char                                                         SwimSyncMode;                                      // 0xc8(0x1)
	bool                                                         TrackTargetActor;                                  // 0xc9(0x1)
	char                                                         pad0x6_EYRVI[0x6];                                 // 0xca(0x6)
	struct BlackboardKeySelector                                 TrackedTargetActorKey;                             // 0xd0(0x28)
	float                                                        TimeToSlowDownAndStop;                             // 0xf8(0x4)
	char                                                         LineOfSightTestMode;                               // 0xfc(0x1)
	char                                                         pad0x3_SR1PR[0x3];                                 // 0xfd(0x3)
};


// Size 0x170 (Full Size[0x208] - InheritedSize[0x98]
class EnvQueryGenerator_WaterDonut: public EnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue                              InnerRadius;                                       // 0x98(0x30)
	struct AIDataProviderFloatValue                              OuterRadius;                                       // 0xc8(0x30)
	struct AIDataProviderIntValue                                NumberOfRings;                                     // 0xf8(0x30)
	struct AIDataProviderIntValue                                PointsPerRing;                                     // 0x128(0x30)
	struct EnvDirection                                          ArcDirection;                                      // 0x158(0x20)
	struct AIDataProviderFloatValue                              ArcAngle;                                          // 0x178(0x30)
	struct AIDataProviderFloatValue                              ZOffsetFromCentre;                                 // 0x1a8(0x30)
	class UClass*                                                Center;                                            // 0x1d8(0x8)
	bool                                                         bDefineArc;                                        // 0x1e0(0x1)
	bool                                                         ProjectPointsToWaterSurface;                       // 0x1e0(0x1)
	char                                                         pad0x7_MEULH[0x7];                                 // 0x1e1(0x7)
	class UClass*                                                WaterPlaneSourceContext;                           // 0x1e8(0x8)
	bool                                                         ApplyZOffsetToProjectPoints;                       // 0x1f0(0x1)
	char                                                         pad0x17_TMHJT[0x17];                               // 0x1f1(0x17)
};


// Size 0x48 (Full Size[0x70] - InheritedSize[0x28]
class AppliedStatusToMultipleAIWithFormsStatCondition: public StatCondition
{
public:
	TArray<class Class*>                                         Status;                                            // 0x28(0x10)
	int                                                          AICountMinimum;                                    // 0x38(0x4)
	bool                                                         AllowAllForms;                                     // 0x3c(0x1)
	char                                                         pad0x3_LYBIV[0x3];                                 // 0x3d(0x3)
	TArray<Class>                                                AllowedAIForms;                                    // 0x40(0x10)
	TArray<class Class*>                                         AIClassesToIgnore;                                 // 0x50(0x10)
	TArray<Class>                                                AllowedSources;                                    // 0x60(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPartsRetrievalInterface: public Interface
{
public:
};


// Size 0x30 (Full Size[0xb8] - InheritedSize[0x88]
class BTTask_SetBlackboardIntValue: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderIntValue                                IntValue;                                          // 0x88(0x30)
};


// Size 0x8 (Full Size[0x98] - InheritedSize[0x90]
class BTDecorator_ActorInWater: public BTDecorator_BlackboardBase
{
public:
	bool                                                         ReverseLogic;                                      // 0x90(0x1)
	char                                                         pad0x7_IKBTE[0x7];                                 // 0x91(0x7)
};


// Size 0x28 (Full Size[0x50] - InheritedSize[0x28]
class AISpawnWaveSequence: public DataAsset
{
public:
	char                                                         pad0x10_64H8B[0x10];                               // 0x28(0x10)
	TArray<struct AISpawnerWave>                                 Waves;                                             // 0x38(0x10)
	struct FName                                                 FeatureName;                                       // 0x48(0x8)
};


// Size 0x10 (Full Size[0x68] - InheritedSize[0x58]
class EnvQueryGenerator_AIRegionLocations: public EnvQueryGenerator
{
public:
	bool                                                         UseOverrideSpawnType;                              // 0x58(0x1)
	char                                                         pad0x3_F83HC[0x3];                                 // 0x59(0x3)
	struct FName                                                 OverrideSpawnType;                                 // 0x5c(0x8)
	char                                                         pad0x4_EY5H0[0x4];                                 // 0x64(0x4)
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class SimpleAIRegion: public Object
{
public:
	char                                                         pad0x38_ZWINL[0x38];                               // 0x28(0x38)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIManagerServiceInterface: public Interface
{
public:
};


// Size 0x420 (Full Size[0x448] - InheritedSize[0x28]
class AISpawner: public DataAsset
{
public:
	char                                                         pad0x20_GJWV6[0x20];                               // 0x28(0x20)
	bool                                                         HasSpawnerLevelEncounters;                         // 0x48(0x1)
	char                                                         pad0x7_0WJNH[0x7];                                 // 0x49(0x7)
	struct AISpawnTypeParamsCollection                           SpawnTypeParamsCollection;                         // 0x50(0x48)
	class AIEncounterSettings*                                   DefaultEncounterSettings;                          // 0x98(0x8)
	class AISpawnWaveSequenceRankProgression*                    DefaultSpawnWaveProgression;                       // 0xa0(0x8)
	TArray<struct AISpawnContextIdEncounterSettingsPair>         SpawnContextSpecificEncounterSettings;             // 0xa8(0x10)
	bool                                                         ShouldSpawnFacingRegionCentre;                     // 0xb8(0x1)
	char                                                         DefaultSpawnType;                                  // 0xb9(0x1)
	char                                                         pad0x6_6UOXI[0x6];                                 // 0xba(0x6)
	class EnvQuery*                                              FindSpawnPosQuery;                                 // 0xc0(0x8)
	char                                                         FindSpawnPosQueryRunMode;                          // 0xc8(0x1)
	char                                                         pad0x3_C380Z[0x3];                                 // 0xc9(0x3)
	struct FName                                                 SpawnLocationType;                                 // 0xcc(0x8)
	int                                                          MaxNumOfSpawnedPawns;                              // 0xd4(0x4)
	int                                                          PriorityForSpawnedPawns;                           // 0xd8(0x4)
	char                                                         pad0x4_GRVGF[0x4];                                 // 0xdc(0x4)
	TArray<struct ConditionalAISpawnOverride>                    SpawnOverrides;                                    // 0xe0(0x10)
	TArray<struct AdditionalSpawnerBehaviour>                    AdditionalBehaviours;                              // 0xf0(0x10)
	bool                                                         EnforceHomePosition;                               // 0x100(0x1)
	bool                                                         SpawnEvenIfExcluded;                               // 0x101(0x1)
	char                                                         pad0x27e_P4HAM[0x27e];                             // 0x102(0x27e)
	class AthenaAISettings*                                      AthenaAISettings;                                  // 0x380(0x8)
	char                                                         pad0xc0_JSZH8[0xc0];                               // 0x388(0xc0)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIInteractableInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_TargetActorFromParams: public EnvQueryContext
{
public:
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class TaleQuestGetTinySharkExperienceParticipatingCrews: public TaleQuestStep
{
public:
};


// Size 0x18 (Full Size[0x3e0] - InheritedSize[0x3c8]
class AITargetService: public Actor
{
public:
	char                                                         pad0x18_Y0VVM[0x18];                               // 0x3c8(0x18)
};


// Size 0x90 (Full Size[0x370] - InheritedSize[0x2e0]
class AIDioramaLocationSourceComponent: public SceneComponent
{
public:
	char                                                         pad0x10_AB22E[0x10];                               // 0x2e0(0x10)
	TArray<struct AIDioramaLocationSourceComponentData>          DioramaRelativeLocations;                          // 0x2f0(0x10)
	float                                                        DialogueTriggerRadius;                             // 0x300(0x4)
	float                                                        DialogueSubtitleBuffer;                            // 0x304(0x4)
	float                                                        AISenseRadiusForDebugDisplay;                      // 0x308(0x4)
	char                                                         pad0x4_R51P0[0x4];                                 // 0x30c(0x4)
	TArray<class Class*>                                         Categories;                                        // 0x310(0x10)
	struct FName                                                 FeatureToggle;                                     // 0x320(0x8)
	struct Color                                                 DebugTriggerRadiusColor;                           // 0x328(0x4)
	struct Color                                                 DebugSubtitleRadiusColor;                          // 0x32c(0x4)
	struct Color                                                 AISenseRadiusColor;                                // 0x330(0x4)
	char                                                         pad0x4_BJV0V[0x4];                                 // 0x334(0x4)
	class SphereComponent*                                       DialogueTriggerRadiusSphere;                       // 0x338(0x8)
	class SphereComponent*                                       DialogueSubtitleRadiusSphere;                      // 0x340(0x8)
	class SphereComponent*                                       AISenseRadiusSphere;                               // 0x348(0x8)
	char                                                         pad0x20_EZBR8[0x20];                               // 0x350(0x20)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class CustomSkeletonAnimationDataList: public DataAsset
{
public:
	TArray<struct StringAssetReference>                          CustomAnimationAssets;                             // 0x28(0x10)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_UnwieldCurrentWeapon: public BTTaskNode
{
public:
	bool                                                         WaitForSuccessfulUnwield;                          // 0x60(0x1)
	bool                                                         ShouldUnwieldFast;                                 // 0x61(0x1)
	char                                                         pad0x6_09FMX[0x6];                                 // 0x62(0x6)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class BTDecorator_CompareBlackboardIntValue: public BTDecorator
{
public:
	struct BlackboardKeySelector                                 BlackboardKey;                                     // 0x68(0x28)
	int                                                          Value;                                             // 0x90(0x4)
	char                                                         ComparisonType;                                    // 0x94(0x1)
	char                                                         pad0x3_KOR65[0x3];                                 // 0x95(0x3)
};


// Size 0x50 (Full Size[0xe8] - InheritedSize[0x98]
class BTService_RunEQSQuery: public BTService_BlackboardBase
{
public:
	bool                                                         OverrideQueryTemplateWithBlackboardValue;          // 0x98(0x1)
	char                                                         pad0x7_9GVRI[0x7];                                 // 0x99(0x7)
	struct BlackboardKeySelector                                 OverrideEQSKey;                                    // 0xa0(0x28)
	class EnvQuery*                                              QueryTemplate;                                     // 0xc8(0x8)
	TArray<struct EnvNamedValue>                                 QueryParams;                                       // 0xd0(0x10)
	char                                                         RunMode;                                           // 0xe0(0x1)
	bool                                                         ThrottleQueryTimePerFrame;                         // 0xe1(0x1)
	char                                                         pad0x2_TCYLD[0x2];                                 // 0xe2(0x2)
	float                                                        MaxSecondsToSpendOnQueryPerFrame;                  // 0xe4(0x4)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class AthenaAITypeListDataAsset: public DataAsset
{
public:
	TArray<struct AITypeData>                                    AITypes;                                           // 0x28(0x10)
	TArray<struct StringClassReference>                          AdditionalAIActors;                                // 0x38(0x10)
};


// Size 0x40 (Full Size[0xd8] - InheritedSize[0x98]
class BTService_EnableFaceFocusActor: public BTService_BlackboardBase
{
public:
	bool                                                         DisableUpdateMoveFocusForCurrentPathOnExit;        // 0x98(0x1)
	char                                                         pad0x7_LNY51[0x7];                                 // 0x99(0x7)
	struct ConditionalBasedOnBlackboardKey                       Conditional;                                       // 0xa0(0x38)
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_SetBlackboardEQSValue: public BTTask_BlackboardBase
{
public:
	class EnvQuery*                                              EQS;                                               // 0x88(0x8)
};


// Size 0x58 (Full Size[0x420] - InheritedSize[0x3c8]
class DebugAISpawnerCreator: public Actor
{
public:
	class AISpawner*                                             SpawnerTemplate;                                   // 0x3c8(0x8)
	float                                                        TriggerRadius;                                     // 0x3d0(0x4)
	char                                                         pad0x4_SVD15[0x4];                                 // 0x3d4(0x4)
	class AISpawner*                                             Spawner;                                           // 0x3d8(0x8)
	class AIProximityPlayerTracker*                              ProximityPlayerTracker;                            // 0x3e0(0x8)
	class SimpleAIRegion*                                        Region;                                            // 0x3e8(0x8)
	char                                                         pad0x30_3T11O[0x30];                               // 0x3f0(0x30)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_TargetActorFromBlackboard: public EnvQueryContext
{
public:
};


// Size 0x248 (Full Size[0x610] - InheritedSize[0x3c8]
class AIDiorama: public Actor
{
public:
	char                                                         pad0x8_L9HDK[0x8];                                 // 0x3c8(0x8)
	class SceneComponent*                                        SceneComponent;                                    // 0x3d0(0x8)
	class SceneDialogueCoordinator*                              SpawnedDialogueCoordinator;                        // 0x3d8(0x8)
	class SceneDialogueData*                                     DialogueData;                                      // 0x3e0(0x8)
	TArray<struct AIDioramaPawn>                                 LinkedActors;                                      // 0x3e8(0x10)
	char                                                         pad0x218_L7F88[0x218];                             // 0x3f8(0x218)
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_TeleportTo: public BTTask_BlackboardBase
{
public:
	bool                                                         UseNavMesh;                                        // 0x88(0x1)
	char                                                         pad0x7_BS6TH[0x7];                                 // 0x89(0x7)
};


// Size 0x28 (Full Size[0x98] - InheritedSize[0x70]
class BTService_SetBoolBlackboardValueTrueWhileRelevant: public BTService
{
public:
	struct BlackboardKeySelector                                 BoolValueKey;                                      // 0x70(0x28)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_ExecuteAIAbility: public BTTaskNode
{
public:
	class UClass*                                                AIAbilityType;                                     // 0x60(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AICreatureMovementModifierInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIDioramaCategory: public Object
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryProviderInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class EnvQueryContext_PositionFromBlackboard: public EnvQueryContext
{
public:
	char                                                         pad0x8_9ODXK[0x8];                                 // 0x28(0x8)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class IsAIOfClassStatCondition: public TargetedStatCondition
{
public:
	TArray<class Class*>                                         AIClasses;                                         // 0x30(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PostBountyAIPawnSpawnedAction: public DataAsset
{
public:
};


// Size 0x98 (Full Size[0x160] - InheritedSize[0xc8]
class VulnerabilityDuringAIStrategyComponent: public ActorComponent
{
public:
	TArray<struct AIStrategyVulnerabilityData>                   StrategyVulnerabilities;                           // 0xc8(0x10)
	class HealthComponent*                                       HealthComponent;                                   // 0xd8(0x8)
	char                                                         pad0x80_XGRK6[0x80];                               // 0xe0(0x80)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIDeathInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x60] - InheritedSize[0x60]
class BTTask_ClearPerceptualData: public BTTaskNode
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAISightTargetInterface: public AISightTargetInterface
{
public:
};


// Size 0x8 (Full Size[0x78] - InheritedSize[0x70]
class BTService_SetAIStrategy: public BTService
{
public:
	class UClass*                                                NewStrategy;                                       // 0x70(0x8)
};


// Size 0x10 (Full Size[0x70] - InheritedSize[0x60]
class BTTask_PlayCustomMontageId: public BTTaskNode
{
public:
	struct CustomAnimationMontageId                              CustomAnimationMontageId;                          // 0x60(0x8)
	float                                                        TimeToWaitOnServer;                                // 0x68(0x4)
	char                                                         pad0x4_R2682[0x4];                                 // 0x6c(0x4)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class BehaviourTreeInterruptionInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_SetAIStrategy: public BTTaskNode
{
public:
	class UClass*                                                NewStrategy;                                       // 0x60(0x8)
};


// Size 0x18 (Full Size[0xe0] - InheritedSize[0xc8]
class AISpawnContextContainerComponent: public ActorComponent
{
public:
	char                                                         pad0x18_RTCNF[0x18];                               // 0xc8(0x18)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIOnShipManagerInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0xa0] - InheritedSize[0x98]
class EnvQueryGenerator_PointsAtContext: public EnvQueryGenerator_ProjectedPoints
{
public:
	class UClass*                                                Context;                                           // 0x98(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIDioramaLocationSourceInterface: public Interface
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIPartIdListingAsset: public DataAsset
{
public:
	TArray<struct AIPartIdNumVariantInfo>                        AIPartIdsVariantInfo;                              // 0x28(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIColorVariantPool: public DataAsset
{
public:
	TArray<struct StringAssetReference>                          AvailableColors;                                   // 0x28(0x10)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AthenaAIAbilityStageParams: public Object
{
public:
	float                                                        AbilityCooldownSpeedMultiplier;                    // 0x28(0x4)
	float                                                        DamageRequiredForNextIntervalMultiplier;           // 0x2c(0x4)
	bool                                                         OverrideParams;                                    // 0x30(0x1)
	bool                                                         AutoActivateOnStageTransition;                     // 0x31(0x1)
	char                                                         pad0x6_TCLR7[0x6];                                 // 0x32(0x6)
	class UClass*                                                TypeClass;                                         // 0x38(0x8)
};


// Size 0x38 (Full Size[0x2f0] - InheritedSize[0x2b8]
class AthenaAICharacterPathFollowingComponent: public PathFollowingComponent
{
public:
	float                                                        ProportionOfTurnToMove;                            // 0x2b8(0x4)
	float                                                        MinAngleToTurnOnSpot;                              // 0x2bc(0x4)
	float                                                        ReachedGoalMaxSpeedToSlowDistanceFactor;           // 0x2c0(0x4)
	float                                                        AbortMoveMaxSpeedToSlowDistanceFactor;             // 0x2c4(0x4)
	char                                                         pad0x4_1MKPX[0x4];                                 // 0x2c8(0x4)
	float                                                        MinSlowDownSpeed;                                  // 0x2cc(0x4)
	char                                                         pad0x20_9I0SJ[0x20];                               // 0x2d0(0x20)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_SetFloatToTheSurface: public BTTaskNode
{
public:
	bool                                                         ShouldFloatToTheSurface;                           // 0x60(0x1)
	char                                                         pad0x7_38ESW[0x7];                                 // 0x61(0x7)
};


// Size 0x0 (Full Size[0x70] - InheritedSize[0x70]
class BTService_QueryPerceptionForTarget: public BTService
{
public:
};


// Size 0x50 (Full Size[0x78] - InheritedSize[0x28]
class AthenaAIAbility: public Object
{
public:
	class AthenaAIAbilityParams*                                 AbilityParams;                                     // 0x28(0x8)
	class Pawn*                                                  Pawn;                                              // 0x30(0x8)
	class AthenaAIController*                                    Controller;                                        // 0x38(0x8)
	class AthenaAIAbilityStageParams*                            CurrentAbilityStageParams;                         // 0x50(0x8)
	char                                                         pad0x20_C9744[0x20];                               // 0x58(0x20)
};


// Size 0x30 (Full Size[0xb8] - InheritedSize[0x88]
class BTTask_SetBlackboardFloatValueFromWeightedArray: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderStructValue                             WeightedArrayFromParams;                           // 0x88(0x30)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_LeaderFromBlackboard: public EnvQueryContext
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIRegionInterface: public Interface
{
public:
};


// Size 0x20 (Full Size[0x88] - InheritedSize[0x68]
class BTDecorator_ActionState: public BTDecorator
{
public:
	char                                                         TrackId;                                           // 0x68(0x1)
	char                                                         pad0x7_Z7VHX[0x7];                                 // 0x69(0x7)
	class UClass*                                                StateId;                                           // 0x70(0x8)
	char                                                         pad0x10_M8ZCU[0x10];                               // 0x78(0x10)
};


// Size 0x50 (Full Size[0xb0] - InheritedSize[0x60]
class BTTask_CopyBlackboardActor: public BTTaskNode
{
public:
	struct BlackboardKeySelector                                 SrcBlackboardKey;                                  // 0x60(0x28)
	struct BlackboardKeySelector                                 TargetBlackboardKey;                               // 0x88(0x28)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AISpawnRegionInterface: public Interface
{
public:
};


// Size 0x10 (Full Size[0x70] - InheritedSize[0x60]
class BTTask_PlayMontage: public BTTaskNode
{
public:
	class Object*                                                MontageToPlay;                                     // 0x60(0x8)
	bool                                                         PlayAsDynamicMontage;                              // 0x68(0x1)
	char                                                         pad0x7_1H5DK[0x7];                                 // 0x69(0x7)
};


// Size 0x80 (Full Size[0xa8] - InheritedSize[0x28]
class AthenaAIControllerSharedParamValuesDataAsset: public DataAsset
{
public:
	bool                                                         OverrideMeshScale;                                 // 0x28(0x1)
	char                                                         pad0x3_V5SZX[0x3];                                 // 0x29(0x3)
	float                                                        MeshScale;                                         // 0x2c(0x4)
	bool                                                         OverrideCurrentTargetPerceivedNotVisibleAge;       // 0x30(0x1)
	char                                                         pad0x3_AJ91K[0x3];                                 // 0x31(0x3)
	float                                                        CurrentTargetPerceivedNotVisibleAge;               // 0x34(0x4)
	TArray<struct AthenaAIControllerSenseSettingOverride>        AIStrategySenseSettingOverrides;                   // 0x38(0x10)
	struct AthenaAIControllerHealthCustomisation                 HealthCustomisationValues;                         // 0x48(0xc)
	char                                                         pad0x4_FFLBH[0x4];                                 // 0x54(0x4)
	TArray<struct AthenaAIControllerParamValue>                  InitialBlackboardValues;                           // 0x58(0x10)
	TArray<struct AthenaAIControllerParamValue>                  NamedControllerParams;                             // 0x68(0x10)
	TArray<struct AthenaAIControllerFeatureToggledParams>        FeatureToggleNamedParamOverrides;                  // 0x78(0x10)
	TArray<struct AthenaAIControllerWeightedRangesParamValue>    NamedWeightedRangesControllerParams;               // 0x88(0x10)
	TArray<class AthenaAIDamageModifierBase*>                    DamageModifiers;                                   // 0x98(0x10)
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class AthenaAIDamageModifierBase: public Object
{
public:
	char                                                         pad0x8_PRBU5[0x8];                                 // 0x28(0x8)
};


// Size 0x8 (Full Size[0x3d0] - InheritedSize[0x3c8]
class AINoiseFireInstigator: public Actor
{
public:
	char                                                         pad0x8_UCJ5J[0x8];                                 // 0x3c8(0x8)
};


// Size 0x138 (Full Size[0x200] - InheritedSize[0xc8]
class SwimmingPathFollowingComponent: public ActorComponent
{
public:
	float                                                        DirectSwimmingDotToTarget;                         // 0xc8(0x4)
	float                                                        ArcToTargetDotToTarget;                            // 0xcc(0x4)
	float                                                        MaxTargetPitchFactor;                              // 0xd0(0x4)
	float                                                        MinPosDeltaSqToRepathToMovingTarget;               // 0xd4(0x4)
	float                                                        MinPosDeltaSqToInvalidateFixedLocation;            // 0xd8(0x4)
	float                                                        PitchBezierControlPointsLengthFactor;              // 0xdc(0x4)
	float                                                        TimeMovingAwayFromTargetPosToFlagFailure;          // 0xe0(0x4)
	struct FName                                                 LineOfSightCollisionProfile;                       // 0xe4(0x8)
	float                                                        LineOfSightSphereCastRadius;                       // 0xec(0x4)
	float                                                        LineOfSightCheckInterval;                          // 0xf0(0x4)
	float                                                        FirstLoSTriggerTimeInNewPath;                      // 0xf4(0x4)
	float                                                        FirstLoSTriggerTimeInRePath;                       // 0xf8(0x4)
	bool                                                         DrawDebugOnServer;                                 // 0xfc(0x1)
	char                                                         pad0x3_6ETJ8[0x3];                                 // 0xfd(0x3)
	TArray<char>                                                 CollisionTypesToDoPathUpdate;                      // 0x100(0x10)
	class SwimmingCreatureMovementComponent*                     MovementComponent;                                 // 0x110(0x8)
	class AthenaSwimmingAIController*                            SwimmingAIController;                              // 0x118(0x8)
	char                                                         ArcFollowingMode;                                  // 0x120(0x1)
	char                                                         pad0x57_GTRM6[0x57];                               // 0x121(0x57)
	class Actor*                                                 TargetActor;                                       // 0x178(0x8)
	char                                                         pad0x80_1H76Z[0x80];                               // 0x180(0x80)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AISkillsetProgressionTypeList: public DataAsset
{
public:
	TArray<class AISkillsetRankProgression*>                     AllProgressions;                                   // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIDioramaServiceInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AmmunitionItemClassProviderInterface: public Interface
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIItemSpawnRankProgression: public DataAsset
{
public:
	TArray<struct AIDropSpawnerRankMapping>                      RankMappings;                                      // 0x28(0x10)
	int                                                          NumberOfRanks;                                     // 0x38(0x4)
	char                                                         pad0x4_0LCA7[0x4];                                 // 0x3c(0x4)
};


// Size 0xa0 (Full Size[0xc8] - InheritedSize[0x28]
class AthenaAIAbilityParams: public Object
{
public:
	TArray<struct AthenaAIControllerParamValue>                  NamedControllerParams;                             // 0x28(0x10)
	char                                                         DamageIntervalCountingMode;                        // 0x38(0x1)
	bool                                                         UseTimeBetweenAbility;                             // 0x39(0x1)
	char                                                         pad0x6_620UY[0x6];                                 // 0x3a(0x6)
	struct AthenaAIAbilityPlayerBasedRanges                      ActivationTimerCooldown;                           // 0x40(0x10)
	struct AthenaAIAbilityPlayerBasedRanges                      TimeBetweenAbility;                                // 0x50(0x10)
	bool                                                         UseDamageBetweenAbility;                           // 0x60(0x1)
	char                                                         pad0x7_LODX7[0x7];                                 // 0x61(0x7)
	struct AthenaAIAbilityPlayerBasedRanges                      DamageBetweenAbility;                              // 0x68(0x10)
	float                                                        AbilityRadius;                                     // 0x78(0x4)
	bool                                                         UseMinMaxAttackRange;                              // 0x7c(0x1)
	char                                                         pad0x3_Q2PNR[0x3];                                 // 0x7d(0x3)
	struct MinMaxAbilityRange                                    MinMaxAttackRange;                                 // 0x80(0x8)
	TArray<struct AIAbilityFollowUp>                             FollowUpAbilities;                                 // 0x88(0x10)
	float                                                        Weight;                                            // 0x98(0x4)
	char                                                         pad0x4_RQ0TY[0x4];                                 // 0x9c(0x4)
	struct AIAbilityContinuousCooldownParameterData              ContinuousCooldownAbilityParameters;               // 0xa0(0x20)
	class UClass*                                                AIAbilityTypeClass;                                // 0xc0(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_Threat: public EnvQueryContext
{
public:
};


// Size 0x88 (Full Size[0xb0] - InheritedSize[0x28]
class NamedAIDataAsset: public DataAsset
{
public:
	TArray<struct Text>                                          MaleCaptainNames;                                  // 0x28(0x10)
	TArray<struct Text>                                          FemaleCaptainNames;                                // 0x38(0x10)
	TArray<struct Text>                                          MaleCrewNames;                                     // 0x48(0x10)
	TArray<struct Text>                                          FemaleCrewNames;                                   // 0x58(0x10)
	TArray<struct AICustomNameTitleMapping>                      CustomNameTitles;                                  // 0x68(0x10)
	TArray<struct AICustomClassIdNameOverrides>                  CustomNameOverrides;                               // 0x78(0x10)
	class UClass*                                                DefaultClassId;                                    // 0x88(0x8)
	class UClass*                                                FemaleCaptainClassId;                              // 0x90(0x8)
	class UClass*                                                MaleCaptainClassId;                                // 0x98(0x8)
	class UClass*                                                FemaleCrewClassId;                                 // 0xa0(0x8)
	class UClass*                                                MaleCrewClassId;                                   // 0xa8(0x8)
};


// Size 0x60 (Full Size[0xe8] - InheritedSize[0x88]
class BTTask_SetBlackboardFloatValueFromMinMax: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderFloatValue                              MinValue;                                          // 0x88(0x30)
	struct AIDataProviderFloatValue                              MaxValue;                                          // 0xb8(0x30)
};


// Size 0x50 (Full Size[0xc0] - InheritedSize[0x70]
class BTService_UpdateTargetForInteractable: public BTService
{
public:
	struct BlackboardKeySelector                                 Interactable;                                      // 0x70(0x28)
	struct BlackboardKeySelector                                 TargetForInteractable;                             // 0x98(0x28)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_SetIsHeadingOffNavMeshCheck: public BTTaskNode
{
public:
	bool                                                         DisableIsHeadingOffNavMeshCheck;                   // 0x60(0x1)
	char                                                         pad0x7_DC0E5[0x7];                                 // 0x61(0x7)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIClassId: public Object
{
public:
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_FeatureToggle: public BTDecorator
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x68(0xc)
	char                                                         pad0x4_14VDK[0x4];                                 // 0x74(0x4)
};


// Size 0x788 (Full Size[0xb50] - InheritedSize[0x3c8]
class AIManagerService: public Actor
{
public:
	char                                                         pad0x108_1J8V2[0x108];                             // 0x3c8(0x108)
	TArray<class Class*>                                         LoadedAIPawnClasses;                               // 0x4d0(0x10)
	TArray<class Class*>                                         LoadedAIItemDropComponentClasses;                  // 0x4e0(0x10)
	char                                                         pad0x8_M41MR[0x8];                                 // 0x4f0(0x8)
	class AmbientWaterSpawnerManager*                            AmbientWaterSpawnerManager;                        // 0x4f8(0x8)
	char                                                         pad0x430_KJOQC[0x430];                             // 0x500(0x430)
	TArray<class AIPlayerTracker*>                               PlayerTrackers;                                    // 0x930(0x10)
	TArray<struct CustomPlayersAITrackerData>                    CustomPlayersTrackerDatas;                         // 0x940(0x10)
	char                                                         pad0x100_6Y96F[0x100];                             // 0x950(0x100)
	TArray<class Interface*>                                     SpawnersPendingShutdown;                           // 0xa50(0x10)
	char                                                         pad0xa8_XON28[0xa8];                               // 0xa60(0xa8)
	class AthenaAITypeListDataAsset*                             AITypeList;                                        // 0xb08(0x8)
	class AISpawnContextList*                                    AISpawnContextList;                                // 0xb10(0x8)
	char                                                         pad0x38_GDI4W[0x38];                               // 0xb18(0x38)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIAnimationStateInterface: public Interface
{
public:
};


// Size 0x98 (Full Size[0xc0] - InheritedSize[0x28]
class TinySharkLootSpawnParamsDataAsset: public DataAsset
{
public:
	float                                                        SpawnDelayAfterDeath;                              // 0x28(0x4)
	float                                                        PercentageChanceToDrop;                            // 0x2c(0x4)
	TArray<struct CauseOfDeathItemSpawnDistribution>             DeathItemSpawnDistributionOverrides;               // 0x30(0x10)
	class ShortRangeMarkerDataAsset*                             RewardMarkerDataAsset;                             // 0x40(0x8)
	bool                                                         SpawnOnStart;                                      // 0x48(0x1)
	char                                                         pad0x7_OMSDT[0x7];                                 // 0x49(0x7)
	struct ItemSpawnParams                                       SpawnParams;                                       // 0x50(0x38)
	class WeightedItemDescSpawnDataAsset*                        ReferencedSpawnDistributionAsset;                  // 0x88(0x8)
	TArray<struct ItemSpawnTransform>                            SpawnTransforms;                                   // 0x90(0x10)
	TArray<struct ItemSpawnTransformWithRandomQuantity>          SpawnTransformsWithRandomQuantities;               // 0xa0(0x10)
	char                                                         SpawnSource;                                       // 0xb0(0x1)
	char                                                         pad0x3_0STIY[0x3];                                 // 0xb1(0x3)
	float                                                        SpawnRate;                                         // 0xb4(0x4)
	bool                                                         DestroyProxiesOnEndPlay;                           // 0xb8(0x1)
	bool                                                         SpawnWithPhysicsEnabled;                           // 0xb9(0x1)
	bool                                                         DoNotAttachToOwnerWhenSpawned;                     // 0xba(0x1)
	bool                                                         DropItemsOnSpawn;                                  // 0xbb(0x1)
	bool                                                         DropItemsUsingPriorityAIDropParams;                // 0xbc(0x1)
	char                                                         pad0x3_3IITV[0x3];                                 // 0xbd(0x3)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIProjectileInterface: public Interface
{
public:
};


// Size 0x50 (Full Size[0xb0] - InheritedSize[0x60]
class BTTask_ApplyStatusComposite: public BTTaskNode
{
public:
	bool                                                         bOneShot;                                          // 0x60(0x1)
	char                                                         pad0x7_JSZ85[0x7];                                 // 0x61(0x7)
	struct AIDataProviderFloatValue                              ContinuousStatusDuration;                          // 0x68(0x30)
	struct Status                                                StatusToApply;                                     // 0x98(0x18)
};


// Size 0x0 (Full Size[0x70] - InheritedSize[0x70]
class BTService_DisableDamageResponses: public BTService
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AICreatureMovementModifierParamsDataAsset: public DataAsset
{
public:
	float                                                        TurnRateMultiplier;                                // 0x28(0x4)
	float                                                        FlyingTurnRateMultiplier;                          // 0x2c(0x4)
	bool                                                         UseTighterTurningCircle;                           // 0x30(0x1)
	bool                                                         UseHighResNavMesh;                                 // 0x31(0x1)
	char                                                         pad0x6_B02QB[0x6];                                 // 0x32(0x6)
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_GetCurrentHealth: public BTTask_BlackboardBase
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIFormRankProgression: public DataAsset
{
public:
	TArray<struct AIFormRankMapping>                             RankMappings;                                      // 0x28(0x10)
	int                                                          NumberOfRanks;                                     // 0x38(0x4)
	char                                                         pad0x4_PILUC[0x4];                                 // 0x3c(0x4)
};


// Size 0x30 (Full Size[0xa0] - InheritedSize[0x70]
class BTService_OverrideTurnSpeed: public BTService
{
public:
	struct AIDataProviderFloatValue                              TurnSpeed;                                         // 0x70(0x30)
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class AIChargeUpInterruptedStatus: public StatusBase
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPlayerTrackerObservedInterface: public Interface
{
public:
};


// Size 0x58 (Full Size[0xe0] - InheritedSize[0x88]
class BTTask_SwimAttackTargetActor: public BTTask_BlackboardBase
{
public:
	float                                                        DamageToApply;                                     // 0x88(0x4)
	float                                                        MaxAngleToTargetToSuccessfullyAttack;              // 0x8c(0x4)
	TArray<struct AttackableTypeToAnimMapping>                   AttackAnimMapping;                                 // 0x90(0x10)
	struct FName                                                 LoSTraceProfileName;                               // 0xa0(0x8)
	struct AIDataProviderFloatValue                              LosTraceRadius;                                    // 0xa8(0x30)
	float                                                        MaxDistanceToTargetToApplyDamage;                  // 0xd8(0x4)
	char                                                         pad0x4_FDXX9[0x4];                                 // 0xdc(0x4)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIControllerParamsTargetInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AILoadoutInterface: public Interface
{
public:
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class AthenaAIWeightedRangesDataProvider: public AIDataProvider
{
public:
	struct FName                                                 ParamName;                                         // 0x28(0x8)
	struct WeightedProbabilityRangeOfRanges                      WeightedRangesValue;                               // 0x30(0x30)
};


// Size 0xc8 (Full Size[0xf0] - InheritedSize[0x28]
class TinySharkParamsDataAsset: public DataAsset
{
public:
	struct TinySharkParams                                       Params;                                            // 0x28(0xc8)
};


// Size 0x140 (Full Size[0x1c0] - InheritedSize[0x80]
class TaleQuestStartTinySharkExperienceStepDesc: public TaleQuestStepDesc
{
public:
	struct Vector                                                SpawnLocation;                                     // 0x80(0xc)
	int                                                          PartIndex;                                         // 0x8c(0x4)
	struct TinySharkParams                                       TinySharkParams;                                   // 0x90(0xc8)
	class Ship*                                                  TargetShip;                                        // 0x178(0x8)
	class TaleQuestTinySharkExperienceTracker*                   ExperienceTracker;                                 // 0x180(0x8)
	bool                                                         FireTinySharkVariantDefeatedStats;                 // 0x188(0x1)
	char                                                         pad0x7_DU4WF[0x7];                                 // 0x189(0x7)
	struct QuestVariableTinySharkExperience                      TinySharkExperience;                               // 0x190(0x30)
};


// Size 0x8 (Full Size[0xa8] - InheritedSize[0xa0]
class BTService_DefaultFocusToPosAtRelativeAngleToObject: public BTService_DefaultFocus
{
public:
	float                                                        RelativeYawAngleOffset;                            // 0xa0(0x4)
	float                                                        RelativeDistance;                                  // 0xa4(0x4)
};


// Size 0xd0 (Full Size[0x168] - InheritedSize[0x98]
class EnvQueryGenerator_Sphere: public EnvQueryGenerator_ProjectedPoints
{
public:
	TArray<struct AIDataProviderFloatValue>                      Radiuses;                                          // 0x98(0x10)
	struct AIDataProviderIntValue                                NumberOfVerticalCircles;                           // 0xa8(0x30)
	struct AIDataProviderIntValue                                NumberOfHorizontalCircles;                         // 0xd8(0x30)
	bool                                                         DefineFirstPointDirection;                         // 0x108(0x1)
	char                                                         pad0x7_812J5[0x7];                                 // 0x109(0x7)
	struct EnvDirection                                          FirstPointDirection;                               // 0x110(0x20)
	class UClass*                                                Centre;                                            // 0x130(0x8)
	struct AIDataProviderFloatValue                              ZOffsetFromCentre;                                 // 0x138(0x30)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class AIPartsService: public Object
{
public:
	char                                                         pad0x10_WQGS5[0x10];                               // 0x28(0x10)
	class AIPartsCategoryTypeList*                               PartsCategoriesList;                               // 0x38(0x8)
	class AIColorVariantPool*                                    TeamColors;                                        // 0x40(0x8)
};


// Size 0xd0 (Full Size[0x660] - InheritedSize[0x590]
class AICreatureCharacterMovementComponent: public CharacterMovementComponent
{
public:
	TArray<struct AIStrategyMovementProperties>                  AIStrategyMovementProperties;                      // 0x588(0x10)
	float                                                        BlendSpeed;                                        // 0x598(0x4)
	bool                                                         bCreateDisturbance;                                // 0x59c(0x1)
	char                                                         pad0x3_V8JE3[0x3];                                 // 0x59d(0x3)
	float                                                        DisturbanceSize;                                   // 0x5a0(0x4)
	float                                                        DisturbanceVelocityScale;                          // 0x5a4(0x4)
	float                                                        OrientationBlendSpeed;                             // 0x5a8(0x4)
	float                                                        OrientationMaxPitch;                               // 0x5ac(0x4)
	float                                                        UpdateOrientationFrequency;                        // 0x5b0(0x4)
	float                                                        MinStairAngle;                                     // 0x5b4(0x4)
	float                                                        MinStairVelocityDampen;                            // 0x5b8(0x4)
	char                                                         pad0x4_JEHLI[0x4];                                 // 0x5bc(0x4)
	TArray<class Class*>                                         SubscribedStairClimbStrategies;                    // 0x5c0(0x10)
	char                                                         pad0x90_GES97[0x90];                               // 0x5d0(0x90)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class DebugAIManagerServiceInterface: public Interface
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIAmmoProgressionTypeList: public DataAsset
{
public:
	TArray<class AIAmmoRankProgression*>                         AllProgressions;                                   // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class SpawnItemDescProviderInterface: public Interface
{
public:
};


// Size 0x30 (Full Size[0xb8] - InheritedSize[0x88]
class BTTask_SetBlackboardFloatValue: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderFloatValue                              FloatValue;                                        // 0x88(0x30)
};


// Size 0x78 (Full Size[0xe8] - InheritedSize[0x70]
class BTService_AimAIInteractable: public BTService
{
public:
	struct BlackboardKeySelector                                 Interactable;                                      // 0x70(0x28)
	struct BlackboardKeySelector                                 TargetForInteractable;                             // 0x98(0x28)
	struct BlackboardKeySelector                                 TargetRelativeAimVector;                           // 0xc0(0x28)
};


// Size 0xb8 (Full Size[0x180] - InheritedSize[0xc8]
class AIPartsRetrievalComponent: public ActorComponent
{
public:
	char                                                         pad0x8_0HVA1[0x8];                                 // 0xc8(0x8)
	class AIPartsCategory*                                       PartsCategory;                                     // 0xd0(0x8)
	struct ReplicatedAIPartsData                                 ReplicatedAIPartsData;                             // 0xd8(0x18)
	char                                                         pad0x90_KJ65N[0x90];                               // 0xf0(0x90)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_DetermineFollowUpAIAbility: public BTTaskNode
{
public:
	class UClass*                                                AIAbilityTypeToFollowUp;                           // 0x60(0x8)
};


// Size 0x28 (Full Size[0x98] - InheritedSize[0x70]
class BTService_SetBoolBlackboardValueToTrueOnCeaseRelevant: public BTService
{
public:
	struct BlackboardKeySelector                                 BoolValueKey;                                      // 0x70(0x28)
};


// Size 0x158 (Full Size[0x610] - InheritedSize[0x4b8]
class AthenaAIControllerBase: public AIController
{
public:
	char                                                         pad0x158_YEMF3[0x158];                             // 0x4b8(0x158)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AISpawnContextList: public DataAsset
{
public:
	TArray<struct AISpawnContextData>                            SpawnContextList;                                  // 0x28(0x10)
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class BTService_SetAIAnimationState: public BTService_BlackboardBase
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AILoadoutProgressionTypeList: public DataAsset
{
public:
	TArray<class AILoadoutRankProgression*>                      AllProgressions;                                   // 0x28(0x10)
};


// Size 0x10 (Full Size[0x60] - InheritedSize[0x50]
class AIFormItemSpawnRequirement: public SpawnRequirement
{
public:
	TArray<class AthenaAIFormDataAsset*>                         AllowedForms;                                      // 0x50(0x10)
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_InteractWith: public BTTask_BlackboardBase
{
public:
	class UClass*                                                NotificationId;                                    // 0x88(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAICharacterStatsInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_SetBlackboardActor: public BTTask_BlackboardBase
{
public:
	class Actor*                                                 Actor;                                             // 0x88(0x8)
};


// Size 0x0 (Full Size[0x68] - InheritedSize[0x68]
class BTDecorator_BaseConditional: public BTDecorator
{
public:
};


// Size 0xe0 (Full Size[0x1a8] - InheritedSize[0xc8]
class CoralShieldVFXComponent: public ActorComponent
{
public:
	class ParticleSystem*                                        VFXAsset;                                          // 0xc8(0x8)
	struct FName                                                 VfxSocketName;                                     // 0xd0(0x8)
	class ParticleSystemComponent*                               SpawnedVFXSystem;                                  // 0xd8(0x8)
	char                                                         CurrentCoralShieldRole;                            // 0xe0(0x1)
	char                                                         pad0x7_J8AIA[0x7];                                 // 0xe1(0x7)
	class CurveFloat*                                            OffToOnCurve;                                      // 0xe8(0x8)
	float                                                        OffToOnDuration;                                   // 0xf0(0x4)
	char                                                         pad0x4_7PSJT[0x4];                                 // 0xf4(0x4)
	class CurveFloat*                                            OnToOffCurve;                                      // 0xf8(0x8)
	float                                                        OnToOffDuration;                                   // 0x100(0x4)
	struct FName                                                 OffToOnParamOverrideName;                          // 0x104(0x8)
	struct FName                                                 OnToOffParamOverrideName;                          // 0x10c(0x8)
	struct FName                                                 ReceiverMeshComponentName;                         // 0x114(0x8)
	struct FName                                                 CasterMeshComponentName;                           // 0x11c(0x8)
	char                                                         pad0x4_LM1T9[0x4];                                 // 0x124(0x4)
	TArray<class MaterialInstanceDynamic*>                       OverriddenMaterialsForReceive;                     // 0x128(0x10)
	TArray<class MaterialInstanceDynamic*>                       OverriddenMaterialsForCast;                        // 0x138(0x10)
	char                                                         pad0x60_J197X[0x60];                               // 0x148(0x60)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_SpawnedForActorFromBlackboard: public EnvQueryContext
{
public:
};


// Size 0x8 (Full Size[0x98] - InheritedSize[0x90]
class BTDecorator_TestAIInteractableType: public BTDecorator_BlackboardBase
{
public:
	class UClass*                                                Type;                                              // 0x90(0x8)
};


// Size 0x10 (Full Size[0x70] - InheritedSize[0x60]
class BTTask_SetAIStrategyFromWeightedArray: public BTTaskNode
{
public:
	TArray<struct WeightedAIStrategyChance>                      WeightedStrategies;                                // 0x60(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class TaleQuestTinySharkServiceDesc: public TaleQuestServiceDesc
{
public:
};


// Size 0x80 (Full Size[0xa8] - InheritedSize[0x28]
class AIDioramaController: public Object
{
public:
	char                                                         pad0x8_CJAY6[0x8];                                 // 0x28(0x8)
	class AIDioramaDesc*                                         AIDioramaDesc;                                     // 0x30(0x8)
	class SceneDialogueData*                                     DialogueData;                                      // 0x38(0x8)
	TArray<struct AIDioramaPawn>                                 SpawnedDioramaPawns;                               // 0x40(0x10)
	class AIDiorama*                                             AIDiorama;                                         // 0x50(0x8)
	class AISpawner*                                             Spawner;                                           // 0x58(0x8)
	char                                                         pad0x48_1JE06[0x48];                               // 0x60(0x48)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPartCustomizationInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x60] - InheritedSize[0x60]
class BTTask_BurrowIntoGround: public BTTaskNode
{
public:
};


// Size 0xa0 (Full Size[0x210] - InheritedSize[0x170]
class EnvQueryTest_IsAngleInRange2D: public EnvQueryTest
{
public:
	struct EnvDirection                                          LineA;                                             // 0x170(0x20)
	struct EnvDirection                                          LineB;                                             // 0x190(0x20)
	struct AIDataProviderFloatValue                              MinAngleDegrees;                                   // 0x1b0(0x30)
	struct AIDataProviderFloatValue                              MaxAngleDegrees;                                   // 0x1e0(0x30)
};


// Size 0x8 (Full Size[0x70] - InheritedSize[0x68]
class BTDecorator_NearSurfaceOfWater: public BTDecorator
{
public:
	float                                                        DistanceFromSurface;                               // 0x68(0x4)
	bool                                                         ReverseLogic;                                      // 0x6c(0x1)
	char                                                         pad0x3_HZDC4[0x3];                                 // 0x6d(0x3)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIAnimationStateId: public Object
{
public:
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class AISpawnContextId: public Object
{
public:
	int                                                          Weighting;                                         // 0x28(0x4)
	char                                                         pad0x4_YZFG5[0x4];                                 // 0x2c(0x4)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class BTDecorator_RandomDiceRoll: public BTDecorator
{
public:
	struct AIDataProviderFloatValue                              Chance;                                            // 0x68(0x30)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class BlackboardAIDataProvider: public AIDataProvider
{
public:
	struct FName                                                 ParamName;                                         // 0x28(0x8)
	float                                                        FloatValue;                                        // 0x30(0x4)
	int                                                          IntValue;                                          // 0x34(0x4)
	bool                                                         BoolValue;                                         // 0x38(0x1)
	char                                                         pad0x7_JSF1I[0x7];                                 // 0x39(0x7)
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class AIEncounterSettings: public DataAsset
{
public:
	char                                                         pad0x20_4SN6N[0x20];                               // 0x28(0x20)
	class UClass*                                                AIClass;                                           // 0x48(0x8)
	struct StringAssetReference                                  TeamColor;                                         // 0x50(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class TinySharkLootSpawnParamsInterface: public Interface
{
public:
};


// Size 0x30 (Full Size[0xd0] - InheritedSize[0xa0]
class BTTask_MoveToTarget: public BTTask_MoveTo
{
public:
	float                                                        MaxDistFromDestinationPosToTargetPos;              // 0xa0(0x4)
	float                                                        OverrideMaxSpeedToSlowDistanceFactor;              // 0xa4(0x4)
	struct BlackboardKeySelector                                 TargetBlackboardKey;                               // 0xa8(0x28)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AICombatEncounterInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIItemParameterInterface: public Interface
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AILoadoutTypeList: public DataAsset
{
public:
	TArray<class LoadoutAsset*>                                  AllLoadouts;                                       // 0x28(0x10)
};


// Size 0xa8 (Full Size[0x130] - InheritedSize[0x88]
class BTTask_SetRoamingPetAnimationState: public BTTask_BlackboardBase
{
public:
	struct WeightedPetAnimationSelector                          WeightedAnimationSelection;                        // 0x88(0xa0)
	char                                                         pad0x8_EC3P5[0x8];                                 // 0x128(0x8)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIEncounterGenerationRecipeTypeList: public DataAsset
{
public:
	TArray<class AIEncounterGenerationRecipe*>                   AllRecipes;                                        // 0x28(0x10)
};


// Size 0x120 (Full Size[0x4e8] - InheritedSize[0x3c8]
class AICreatureSpline: public Actor
{
public:
	char                                                         pad0x8_6NIX1[0x8];                                 // 0x3c8(0x8)
	class SkeletalMeshComponent*                                 AICreatureMesh;                                    // 0x3d0(0x8)
	class SplineComponent*                                       SplineComponent;                                   // 0x3d8(0x8)
	char                                                         pad0x8_AN7UX[0x8];                                 // 0x3e0(0x8)
	bool                                                         ShouldBeTickEnabled;                               // 0x3e8(0x1)
	bool                                                         RequireStartEventToStartMovement;                  // 0x3e9(0x1)
	char                                                         pad0x2_EP8YO[0x2];                                 // 0x3ea(0x2)
	float                                                        CreatureSpeed;                                     // 0x3ec(0x4)
	float                                                        GroundHeightInterpSpeed;                           // 0x3f0(0x4)
	bool                                                         FollowGroundHeight;                                // 0x3f4(0x1)
	char                                                         LineTraceChannel;                                  // 0x3f5(0x1)
	char                                                         pad0xb2_KAANS[0xb2];                               // 0x3f6(0xb2)
	class WwiseEvent*                                            CreatureAudioMovementStarted;                      // 0x4a8(0x8)
	class WwiseEvent*                                            CreatureAudioMovementCompleted;                    // 0x4b0(0x8)
	class WwiseEvent*                                            CreatureAudioOnMovementCompletedAdditional;        // 0x4b8(0x8)
	class WwiseObjectPoolWrapper*                                WwiseEmitterPool;                                  // 0x4c0(0x8)
	char                                                         pad0x20_MPBGL[0x20];                               // 0x4c8(0x20)
};


// Size 0x10 (Full Size[0x180] - InheritedSize[0x170]
class EnvQueryTest_WaterHeight: public EnvQueryTest
{
public:
	float                                                        WaterHeightCheckOffset;                            // 0x170(0x4)
	char                                                         pad0x4_HF6M5[0x4];                                 // 0x174(0x4)
	class UClass*                                                ActorWithWaterPlaneContext;                        // 0x178(0x8)
};


// Size 0x10 (Full Size[0x60] - InheritedSize[0x50]
class AISkillsetItemSpawnRequirement: public SpawnRequirement
{
public:
	TArray<class AthenaAIControllerParamsDataAsset*>             DisallowedSkillsets;                               // 0x50(0x10)
};


// Size 0x28 (Full Size[0xb8] - InheritedSize[0x90]
class BTDecorator_CompareBlackboardClassValue: public BTDecorator_BlackboardBase
{
public:
	class UClass*                                                Class;                                             // 0x90(0x8)
	bool                                                         Invert;                                            // 0x98(0x1)
	char                                                         pad0x7_D8C5E[0x7];                                 // 0x99(0x7)
	struct FString                                               CachedDescription;                                 // 0xa0(0x10)
	char                                                         NotifyObserver;                                    // 0xb0(0x1)
	char                                                         pad0x7_KE59Q[0x7];                                 // 0xb1(0x7)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class EnvQueryContext_SeenActors: public EnvQueryContext
{
public:
	char                                                         pad0x10_YGDEO[0x10];                               // 0x28(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class PetWieldableReactMappingsDataAsset: public DataAsset
{
public:
	TArray<struct PetWieldableReactMapping>                      WieldableReactMappings;                            // 0x28(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIItemDropComponentRankProgressionList: public DataAsset
{
public:
	TArray<class AIItemSpawnRankProgression*>                    AllProgressions;                                   // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AISpawnRequestResultLoggerInterface: public Interface
{
public:
};


// Size 0x70 (Full Size[0x98] - InheritedSize[0x28]
class AIEncounterGenerationRecipe: public DataAsset
{
public:
	TArray<struct AIFormVarietyEntry>                            Forms;                                             // 0x28(0x10)
	struct StringAssetReference                                  SkillsetProgression;                               // 0x38(0x10)
	struct StringAssetReference                                  ItemDropProgression;                               // 0x48(0x10)
	struct TargetSkillsetProgressionPair                         TargetSkillsetOverrides;                           // 0x58(0x20)
	struct TargetItemDropProgressionPair                         TargetItemDropOverrides;                           // 0x78(0x20)
};


// Size 0x10 (Full Size[0xd8] - InheritedSize[0xc8]
class PetSicknessComponent: public ActorComponent
{
public:
	char                                                         pad0x10_263NQ[0x10];                               // 0xc8(0x10)
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class AIPerCrewSpawnerSettingsStoryOverrideAsset: public DataAsset
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x28(0xc)
	char                                                         pad0x4_34AHS[0x4];                                 // 0x34(0x4)
	TArray<struct AIPerCrewSpawnerStoryBasedRespawnSettings>     StoryResponses;                                    // 0x38(0x10)
	TArray<class AIPerCrewSpawnerSettingsStoryOverrideAsset*>    AssetsList;                                        // 0x48(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AITargetInterface: public Interface
{
public:
};


// Size 0x88 (Full Size[0x450] - InheritedSize[0x3c8]
class AIEncounterGenerationService: public Actor
{
public:
	char                                                         pad0x8_P22EI[0x8];                                 // 0x3c8(0x8)
	class AIEncounterGenerationRecipeTypeList*                   GenerationRecipes;                                 // 0x3d0(0x8)
	char                                                         pad0x78_K3A4X[0x78];                               // 0x3d8(0x78)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIWeightedProbabilityRangeOfRangesRankProgression: public DataAsset
{
public:
	TArray<struct AIWeightedProbabilityRangeOfRangesRankMapping> RankMappings;                                      // 0x28(0x10)
	int                                                          NumberOfRanks;                                     // 0x38(0x4)
	char                                                         pad0x4_OUOMS[0x4];                                 // 0x3c(0x4)
};


// Size 0x8 (Full Size[0xa0] - InheritedSize[0x98]
class BTService_IncrementFloatValueWithTimeSpentInBranch: public BTService_BlackboardBase
{
public:
	float                                                        TimeMultiplier;                                    // 0x98(0x4)
	char                                                         pad0x4_TG0FB[0x4];                                 // 0x9c(0x4)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class IsAIUsingFormDataAssetStatCondition: public TargetedStatCondition
{
public:
	TArray<class AthenaAIFormDataAsset*>                         AllowedAIDataAssetForms;                           // 0x30(0x10)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class IsAIOfSkillsetStatCondition: public TargetedStatCondition
{
public:
	TArray<class AthenaAIControllerParamsDataAsset*>             AISkillsets;                                       // 0x30(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIPartsCategoryTypeList: public DataAsset
{
public:
	TArray<class AIPartsCategory*>                               AllPartsCategories;                                // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class CustomizableAIManagerInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_SetBlackboardBoolValue: public BTTask_BlackboardBase
{
public:
	bool                                                         NewValue;                                          // 0x88(0x1)
	char                                                         pad0x7_FUHLD[0x7];                                 // 0x89(0x7)
};


// Size 0x8 (Full Size[0x30] - InheritedSize[0x28]
class AIPartsDesc: public DataAsset
{
public:
	struct AIPartId                                              AIPartId;                                          // 0x28(0x8)
};


// Size 0x38 (Full Size[0xb8] - InheritedSize[0x80]
class TaleQuestGetTinySharkPawnDesc: public TaleQuestStepDesc
{
public:
	class TinySharkExperience*                                   TinySharkExperience;                               // 0x80(0x8)
	struct QuestVariableSharkPawn                                TinySharkPawn;                                     // 0x88(0x30)
};


// Size 0x28 (Full Size[0x98] - InheritedSize[0x70]
class BTService_TriggerNotifications: public BTService
{
public:
	class UClass*                                                EnterBranchNotificationId;                         // 0x70(0x8)
	class UClass*                                                LeaveBranchNotificationId;                         // 0x78(0x8)
	char                                                         pad0x18_HE13I[0x18];                               // 0x80(0x18)
};


// Size 0x18 (Full Size[0xb8] - InheritedSize[0xa0]
class BTTask_AthenaMoveTo: public BTTask_MoveTo
{
public:
	bool                                                         ShouldFailBeforeSlowDown;                          // 0xa0(0x1)
	char                                                         pad0x3_YWU7M[0x3];                                 // 0xa1(0x3)
	float                                                        ExitBeforeSlowDownDistanceTolerance;               // 0xa4(0x4)
	bool                                                         ShouldOverrideMaxSpeedToSlow;                      // 0xa8(0x1)
	char                                                         pad0x3_H9WG7[0x3];                                 // 0xa9(0x3)
	float                                                        OverrideMaxSpeedToSlowDistanceFactor;              // 0xac(0x4)
	bool                                                         MaintainFacingBeforeMove;                          // 0xb0(0x1)
	char                                                         pad0x7_S7A02[0x7];                                 // 0xb1(0x7)
};


// Size 0x0 (Full Size[0x60] - InheritedSize[0x60]
class BTTask_StopMovementImmediately: public BTTaskNode
{
public:
};


// Size 0xb8 (Full Size[0x180] - InheritedSize[0xc8]
class PetPartCustomisationComponent: public ActorComponent
{
public:
	char                                                         pad0x10_TTK7U[0x10];                               // 0xc8(0x10)
	class UClass*                                                AnimationDataStoreId;                              // 0xd8(0x8)
	class PetPartSizeMappingsDataAsset*                          SizeMappingsAsset;                                 // 0xe0(0x8)
	TArray<struct PetLoadedMaterial>                             CurrentlyLoadedMaterials;                          // 0xe8(0x10)
	struct StringAssetReference                                  DefaultMeshRef;                                    // 0xf8(0x10)
	struct StringAssetReference                                  HighResMeshRef;                                    // 0x108(0x10)
	class SkeletalMesh*                                          CurrentlyLoadedMesh;                               // 0x118(0x8)
	char                                                         CurrentPetSize;                                    // 0x120(0x1)
	char                                                         pad0x7_8K0OG[0x7];                                 // 0x121(0x7)
	class PetCustomisationOverrideDataAsset*                     CurrentlyLoadedOverrideAsset;                      // 0x128(0x8)
	char                                                         pad0x50_BZLNR[0x50];                               // 0x130(0x50)
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class TaleQuestStartTinySharkExperienceStep: public TaleQuestStep
{
public:
};


// Size 0x20 (Full Size[0x3e8] - InheritedSize[0x3c8]
class AITargetActor: public Actor
{
public:
	char                                                         pad0x10_UAO8S[0x10];                               // 0x3c8(0x10)
	class SceneComponent*                                        Root;                                              // 0x3d8(0x8)
	char                                                         Team;                                              // 0x3e0(0x1)
	char                                                         pad0x7_WOPER[0x7];                                 // 0x3e1(0x7)
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_SetBlackboardClassValue: public BTTask_BlackboardBase
{
public:
	class UClass*                                                ClassValue;                                        // 0x88(0x8)
};


// Size 0x80 (Full Size[0x118] - InheritedSize[0x98]
class TaleQuestGetTinySharkPawn: public TaleQuestStep
{
public:
	char                                                         pad0x80_HMWA6[0x80];                               // 0x98(0x80)
};


// Size 0x0 (Full Size[0x68] - InheritedSize[0x68]
class BTDecorator_RollAgainstPatrolChance: public BTDecorator
{
public:
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_RandomLoop: public BTDecorator
{
public:
	int                                                          MinNumLoops;                                       // 0x68(0x4)
	int                                                          MaxNumLoops;                                       // 0x6c(0x4)
	class CurveFloat*                                            RandomNumLoopCurve;                                // 0x70(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AITargetServiceInterface: public Interface
{
public:
};


// Size 0x38 (Full Size[0xb8] - InheritedSize[0x80]
class TaleQuestGetTinySharkExperienceParticipatingCrewsDesc: public TaleQuestStepDesc
{
public:
	class TinySharkExperience*                                   TinySharkExperience;                               // 0x80(0x8)
	struct QuestVariableGuidArray                                ParticipatingCrews;                                // 0x88(0x30)
};


// Size 0x2a0 (Full Size[0x310] - InheritedSize[0x70]
class BTService_QueryShipsForTarget: public BTService
{
public:
	struct AIDataProviderFloatValue                              MaxShipDistanceFromHomePosition;                   // 0x70(0x30)
	struct AIDataProviderFloatValue                              MinDamageToSwitchTargets;                          // 0xa0(0x30)
	struct AIDataProviderFloatValue                              MinSecondsBeforeSwitchTargets;                     // 0xd0(0x30)
	struct AIDataProviderBoolValue                               SwitchTargetsAfterTimerExpires;                    // 0x100(0x30)
	struct AIDataProviderFloatValue                              SecondsBeforeSwitchTargetsAfterTimerExpires;       // 0x130(0x30)
	struct AIDataProviderFloatValue                              TimeBetweenDiceRolls;                              // 0x160(0x30)
	struct AIDataProviderFloatValue                              DiceRollForAggression;                             // 0x190(0x30)
	struct AIDataProviderFloatValue                              MinTotalDamageToTurnDiceRollForAggression;         // 0x1c0(0x30)
	struct AIDataProviderFloatValue                              DiceRollForDamageAggression;                       // 0x1f0(0x30)
	struct AIDataProviderFloatValue                              DiceRollForDamageDormancy;                         // 0x220(0x30)
	struct AIDataProviderFloatValue                              PlayerDistanceThresholdToTurnAggressive;           // 0x250(0x30)
	bool                                                         IgnoreAI;                                          // 0x280(0x1)
	char                                                         pad0x8f_P9S4A[0x8f];                               // 0x281(0x8f)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class PlayerProximityObservedSpawnContextProvider: public Object
{
public:
	char                                                         pad0x20_SEXJE[0x20];                               // 0x28(0x20)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class SwimmingCreatureMovementAnimationInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_NOP: public BTTaskNode
{
public:
	int                                                          Id;                                                // 0x60(0x4)
	char                                                         pad0x4_UHYU5[0x4];                                 // 0x64(0x4)
};


// Size 0x40 (Full Size[0xe0] - InheritedSize[0xa0]
class BTService_UpdateFocusOnBBChange: public BTService_DefaultFocus
{
public:
	bool                                                         DisableUpdateMoveFocusForCurrentPathOnExit;        // 0xa0(0x1)
	char                                                         pad0x7_LCIVJ[0x7];                                 // 0xa1(0x7)
	struct ConditionalBasedOnBlackboardKey                       Conditional;                                       // 0xa8(0x38)
};


// Size 0x190 (Full Size[0x4a0] - InheritedSize[0x310]
class AINameplateComponent: public NameplateComponent
{
public:
	char                                                         pad0x8_SWGGR[0x8];                                 // 0x310(0x8)
	float                                                        VisibleFromWorldDistance;                          // 0x318(0x4)
	float                                                        VisibleUntilWorldDistance;                         // 0x31c(0x4)
	float                                                        VisibleAfterDeathDuration;                         // 0x320(0x4)
	char                                                         pad0x4_KFTEM[0x4];                                 // 0x324(0x4)
	struct FText                                                 Title;                                             // 0x328(0x38)
	struct FText                                                 DisplayName;                                       // 0x360(0x38)
	struct FString                                               DisplayNameAsString;                               // 0x398(0x10)
	struct FString                                               DebugDisplayText;                                  // 0x3a8(0x10)
	bool                                                         VisibilityDisabled;                                // 0x3b8(0x1)
	char                                                         pad0xe7_MRERL[0xe7];                               // 0x3b9(0xe7)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIPawnTurnActiveInterface: public Interface
{
public:
};


// Size 0x30 (Full Size[0xa0] - InheritedSize[0x70]
class BTService_SetNameBlackboardValueWhileRelevant: public BTService
{
public:
	struct BlackboardKeySelector                                 NameValueKey;                                      // 0x70(0x28)
	struct FName                                                 Value;                                             // 0x98(0x8)
};


// Size 0x8 (Full Size[0x70] - InheritedSize[0x68]
class BTDecorator_IsAbilityAvailable: public BTDecorator
{
public:
	class UClass*                                                AIAbilityType;                                     // 0x68(0x8)
};


// Size 0x140 (Full Size[0x208] - InheritedSize[0xc8]
class TinySharkTelemetryComponent: public ActorComponent
{
public:
	char                                                         pad0x140_5PEX5[0x140];                             // 0xc8(0x140)
};


// Size 0x0 (Full Size[0x2e0] - InheritedSize[0x2e0]
class AISpawnPointSeedComponent: public SceneComponent
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIAbilityHandlerInterface: public Interface
{
public:
};


// Size 0x78 (Full Size[0xd8] - InheritedSize[0x60]
class BTTask_SetupAITargetWeaponForNextShot: public BTTaskNode
{
public:
	struct BlackboardKeySelector                                 Interactable;                                      // 0x60(0x28)
	struct BlackboardKeySelector                                 TargetForInteractable;                             // 0x88(0x28)
	struct BlackboardKeySelector                                 TargetRelativeAimVector;                           // 0xb0(0x28)
};


// Size 0x18 (Full Size[0x3e0] - InheritedSize[0x3c8]
class SpawnContextProviderZone: public Actor
{
public:
	TArray<struct Name>                                          SpawnContextIDs;                                   // 0x3c8(0x10)
	class BoxComponent*                                          BoundingBox;                                       // 0x3d8(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class TinySharkServiceInterface: public Interface
{
public:
};


// Size 0x38 (Full Size[0x100] - InheritedSize[0xc8]
class AIInteractableComponent: public ActorComponent
{
public:
	char                                                         pad0x8_3BUXW[0x8];                                 // 0xc8(0x8)
	class UClass*                                                Type;                                              // 0xd0(0x8)
	struct Vector                                                DetachOffsetFromOwner;                             // 0xd8(0xc)
	bool                                                         CanHaveTarget;                                     // 0xe4(0x1)
	char                                                         pad0x1b_I2AWU[0x1b];                               // 0xe5(0x1b)
};


// Size 0x0 (Full Size[0x98] - InheritedSize[0x98]
class BTService_UpdateViewPitchForWieldedProjectileToHitTarget: public BTService_BlackboardBase
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AthenaAIControllerParamsDataProvider: public AIDataProvider
{
public:
	struct FName                                                 ParamName;                                         // 0x28(0x8)
	float                                                        FloatValue;                                        // 0x30(0x4)
	int                                                          IntValue;                                          // 0x34(0x4)
	bool                                                         BoolValue;                                         // 0x38(0x1)
	char                                                         pad0x7_12WCF[0x7];                                 // 0x39(0x7)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIAbilityType: public Object
{
public:
};


// Size 0x270 (Full Size[0x638] - InheritedSize[0x3c8]
class AmbientWaterSpawnerManager: public Actor
{
public:
	char                                                         pad0x10_MPZB1[0x10];                               // 0x3c8(0x10)
	class SceneComponent*                                        Root;                                              // 0x3d8(0x8)
	class AthenaAISettings*                                      AthenaAISettings;                                  // 0x3e0(0x8)
	TArray<struct Name>                                          AISpawnBlockingContextNames;                       // 0x3e8(0x10)
	class AIPerPlayerSpawner*                                    SharkPerPlayerSpawnerTemplate;                     // 0x3f8(0x8)
	class AIPerPlayerSpawner*                                    SirenPerPlayerSpawnerTemplate;                     // 0x400(0x8)
	float                                                        SirenEncounterRegionRadius;                        // 0x408(0x4)
	float                                                        SirenEncounterShutdownTime;                        // 0x40c(0x4)
	struct WeightedProbabilityRangeOfRanges                      InitialSirenSpawningWeightedTimeRange;             // 0x410(0x30)
	struct WeightedProbabilityRangeOfRanges                      UnsuccessfulSirenSpawningWeightedTimeRange;        // 0x440(0x30)
	struct WeightedProbabilityRangeOfRanges                      SuccessfulSirenSpawningWeightedTimeRange;          // 0x470(0x30)
	struct ChanceForSharksToBlockSirenEncounterData              SharkEncounterSpawnBlockingData;                   // 0x4a0(0xc)
	char                                                         pad0x4_HPCU1[0x4];                                 // 0x4ac(0x4)
	TArray<struct PerDepthSpawnChance>                           PerDepthSpawnChances;                              // 0x4b0(0x10)
	class AIPerPlayerSpawner*                                    SharkPerPlayerSpawner;                             // 0x4c0(0x8)
	char                                                         pad0x150_XIX7H[0x150];                             // 0x4c8(0x150)
	TArray<struct PlayerInWaterData>                             PlayersInWater;                                    // 0x618(0x10)
	TArray<struct SirenEncounterData>                            SirenEncounters;                                   // 0x628(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AISkillsetTypeList: public DataAsset
{
public:
	TArray<class AthenaAIControllerParamsDataAsset*>             AllSkillsets;                                      // 0x28(0x10)
};


// Size 0x58 (Full Size[0xe8] - InheritedSize[0x90]
class BTDecorator_IsLocationInWater: public BTDecorator_BlackboardBase
{
public:
	struct BlackboardKeySelector                                 WaterVolumeActor;                                  // 0x90(0x28)
	struct BlackboardKeySelector                                 TargetLocation;                                    // 0xb8(0x28)
	bool                                                         OnlyConsidersSwimmableWater;                       // 0xe0(0x1)
	char                                                         pad0x7_3B2ZQ[0x7];                                 // 0xe1(0x7)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIStrategyId: public Object
{
public:
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AISkillsetRankProgression: public DataAsset
{
public:
	TArray<struct AISkillsetRankMapping>                         RankMappings;                                      // 0x28(0x10)
	int                                                          NumberOfRanks;                                     // 0x38(0x4)
	char                                                         pad0x4_W6HXA[0x4];                                 // 0x3c(0x4)
};


// Size 0x30 (Full Size[0x3f8] - InheritedSize[0x3c8]
class AIDebugSpawnActor: public Actor
{
public:
	struct AthenaAIDebugCostDisplay                              DebugCostDisplay;                                  // 0x3c8(0x1)
	char                                                         pad0x7_5OVC2[0x7];                                 // 0x3c9(0x7)
	TArray<struct AIDebugSpawnConfiguration>                     SpawnConfigList;                                   // 0x3d0(0x10)
	int                                                          Seed;                                              // 0x3e0(0x4)
	char                                                         pad0x4_CQF94[0x4];                                 // 0x3e4(0x4)
	TArray<class Pawn*>                                          SpawnedAIList;                                     // 0x3e8(0x10)
};


// Size 0x78 (Full Size[0xd8] - InheritedSize[0x60]
class TaleQuestTinySharkService: public TaleQuestService
{
public:
	TArray<class TinySharkExperience*>                           ActiveExperiences;                                 // 0x60(0x10)
	char                                                         pad0x68_Q6VRU[0x68];                               // 0x70(0x68)
};


// Size 0x50 (Full Size[0xb0] - InheritedSize[0x60]
class BTTask_CopyBlackboardVector: public BTTaskNode
{
public:
	struct BlackboardKeySelector                                 SrcBlackboardKey;                                  // 0x60(0x28)
	struct BlackboardKeySelector                                 TargetBlackboardKey;                               // 0x88(0x28)
};


// Size 0x58 (Full Size[0xc0] - InheritedSize[0x68]
class BTDecorator_ConeCheck3D: public BTDecorator
{
public:
	float                                                        ConeHalfAngle;                                     // 0x68(0x4)
	char                                                         pad0x4_97DTE[0x4];                                 // 0x6c(0x4)
	struct BlackboardKeySelector                                 ConeOrigin;                                        // 0x70(0x28)
	struct BlackboardKeySelector                                 Observed;                                          // 0x98(0x28)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AILoadoutWithNonStorableInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIItemSpawnDataSourceInterface: public Interface
{
public:
};


// Size 0xa8 (Full Size[0xd0] - InheritedSize[0x28]
class AthenaAIAmmoDataAsset: public DataAsset
{
public:
	char                                                         pad0x90_6CIYW[0x90];                               // 0x28(0x90)
	TArray<struct AthenaAICharacterControllerWeightedAmmoType>   AmmoWeights;                                       // 0xb8(0x10)
	struct FName                                                 FeatureName;                                       // 0xc8(0x8)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIItemDropComponentList: public DataAsset
{
public:
	TArray<Class>                                                AllSpawners;                                       // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class CustomAttitudeInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIManagerBlueprintFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIWithFormInterface: public Interface
{
public:
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class PetPartSizeMappingsDataAsset: public DataAsset
{
public:
	TArray<struct PetPartSizeMapping>                            Mappings;                                          // 0x28(0x10)
	struct FloatRange                                            ConcealedScaleBounds;                              // 0x38(0x10)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AILoadoutRankProgression: public DataAsset
{
public:
	TArray<struct AILoadoutRankMapping>                          RankMappings;                                      // 0x28(0x10)
	int                                                          NumberOfRanks;                                     // 0x38(0x4)
	char                                                         pad0x4_BI026[0x4];                                 // 0x3c(0x4)
};


// Size 0x10 (Full Size[0x70] - InheritedSize[0x60]
class BTTask_NetworkTriggerAnim: public BTTaskNode
{
public:
	class AnimSequence*                                          Anim;                                              // 0x60(0x8)
	float                                                        AnimLength;                                        // 0x68(0x4)
	float                                                        AnimPlayRate;                                      // 0x6c(0x4)
};


// Size 0x10 (Full Size[0x80] - InheritedSize[0x70]
class BTService_DisableCollisions: public BTService
{
public:
	TArray<char>                                                 ChannelsToLeaveUnaffected;                         // 0x70(0x10)
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_StorePawnLocationInBlackboard: public BTTask_BlackboardBase
{
public:
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class TinySharkServiceParamsDataAsset: public DataAsset
{
public:
	struct TinySharkServiceParams                                Params;                                            // 0x28(0x28)
	int                                                          MaxNumTinySharkExperiences;                        // 0x50(0x4)
	char                                                         pad0x4_RCUHT[0x4];                                 // 0x54(0x4)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AISpawnerSpawnInteractableAssignmentInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class CatchFaunaConditionalStatTrigger: public ConditionalStatsTriggerType
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIBuffAbilityInterface: public Interface
{
public:
};


// Size 0x38 (Full Size[0x100] - InheritedSize[0xc8]
class PetTelemetryComponent: public ActorComponent
{
public:
	char                                                         pad0x38_2LGSD[0x38];                               // 0xc8(0x38)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIAmmoTypeList: public DataAsset
{
public:
	TArray<class AthenaAIAmmoDataAsset*>                         AllAmmo;                                           // 0x28(0x10)
	class AthenaAIAmmoDataAsset*                                 DefaultAmmo;                                       // 0x38(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AITargetWeaponInterface: public Interface
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIClassIdTypeList: public DataAsset
{
public:
	TArray<class Class*>                                         AllClassIds;                                       // 0x28(0x10)
};


// Size 0x18 (Full Size[0xe0] - InheritedSize[0xc8]
class PlayerEntitlementCustomAttitudeComponent: public ActorComponent
{
public:
	char                                                         pad0x8_0QES2[0x8];                                 // 0xc8(0x8)
	class UClass*                                                Entitlement;                                       // 0xd0(0x8)
	char                                                         HasEntitlementAttitude;                            // 0xd8(0x1)
	char                                                         LacksEntitlementAttitude;                          // 0xd9(0x1)
	char                                                         pad0x6_57P6A[0x6];                                 // 0xda(0x6)
};


// Size 0x230 (Full Size[0x810] - InheritedSize[0x5e0]
class AICreatureCharacter: public Character
{
public:
	char                                                         pad0x58_IODFY[0x58];                               // 0x5e0(0x58)
	float                                                        DelayBeforeDestroying;                             // 0x638(0x4)
	float                                                        TimeBeforeFadingOut;                               // 0x63c(0x4)
	float                                                        PickupTime;                                        // 0x640(0x4)
	struct Vector                                                TooltipDisplayOffset;                              // 0x644(0xc)
	class ActionStateMachineComponent*                           ActionStateMachineComponent;                       // 0x650(0x8)
	class ActionStatePriorityTableData*                          ActionStatePriorityTableData;                      // 0x658(0x8)
	class UClass*                                                ActionStateCreatorDefinition;                      // 0x660(0x8)
	class AthenaAIControllerParamsDataAsset*                     AIControllerParams;                                // 0x668(0x8)
	class InteractableComponent*                                 InteractableComponent;                             // 0x670(0x8)
	class WaterHeightProviderComponent*                          WaterHeightProviderComponent;                      // 0x678(0x8)
	class AnimNotifyWwiseEmitterComponent*                       AnimNotifyWwiseEmitterComponent;                   // 0x680(0x8)
	class RewindComponent*                                       RewindComponent;                                   // 0x688(0x8)
	class ActionRulesComponent*                                  ActionRulesComponent;                              // 0x690(0x8)
	char                                                         pad0x100_JIC5P[0x100];                             // 0x698(0x100)
	class AICreatureCharacterMovementComponent*                  AICreatureCharacterMovementComponent;              // 0x798(0x8)
	char                                                         pad0x68_QUIU9[0x68];                               // 0x7a0(0x68)
	class UClass*                                                CurrentAIStrategy;                                 // 0x808(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIShipInterface: public Interface
{
public:
};


// Size 0x78 (Full Size[0xd8] - InheritedSize[0x60]
class BTTask_CopyAIInteractionPointAndFocusToBlackboard: public BTTaskNode
{
public:
	struct BlackboardKeySelector                                 SourceInteractable;                                // 0x60(0x28)
	struct BlackboardKeySelector                                 InteractionPosition;                               // 0x88(0x28)
	struct BlackboardKeySelector                                 InteractionFocusPosition;                          // 0xb0(0x28)
};


// Size 0x8 (Full Size[0x3d0] - InheritedSize[0x3c8]
class WaterbasedAISupplier: public Actor
{
public:
	class AISpawnerList*                                         Spawners;                                          // 0x3c8(0x8)
};


// Size 0x30 (Full Size[0xb8] - InheritedSize[0x88]
class BTTask_IncrementBlackboardFloatValue: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderFloatValue                              FloatValueDelta;                                   // 0x88(0x30)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AIAmmoRankProgression: public DataAsset
{
public:
	TArray<struct AIAmmoRankMapping>                             RankMappings;                                      // 0x28(0x10)
	int                                                          NumberOfRanks;                                     // 0x38(0x4)
	char                                                         pad0x4_AONYC[0x4];                                 // 0x3c(0x4)
};


// Size 0x70 (Full Size[0x350] - InheritedSize[0x2e0]
class AIRegionComponent: public SceneComponent
{
public:
	char                                                         pad0x8_UDTAN[0x8];                                 // 0x2e0(0x8)
	bool                                                         UpdateRegionPosition;                              // 0x2e8(0x1)
	char                                                         pad0x3_P285I[0x3];                                 // 0x2e9(0x3)
	struct FName                                                 NavMeshAgentType;                                  // 0x2ec(0x8)
	float                                                        RegionRadius;                                      // 0x2f4(0x4)
	TArray<struct SpawnLocationGroup>                            SpawnLocationGroups;                               // 0x2f8(0x10)
	char                                                         pad0x48_G87SK[0x48];                               // 0x308(0x48)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AthenaAIDebugFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x3d0 (Full Size[0x798] - InheritedSize[0x3c8]
class AIEncounterService: public Actor
{
public:
	char                                                         pad0x8_SOGAQ[0x8];                                 // 0x3c8(0x8)
	TArray<struct AIPartsCategoryMapping>                        DefaultPartsCategories;                            // 0x3d0(0x10)
	TArray<struct AIPartsCategoryFormMapping>                    FormPartsCategories;                               // 0x3e0(0x10)
	class AIAmmoTypeList*                                        Ammo;                                              // 0x3f0(0x8)
	class AIAmmoProgressionTypeList*                             AmmoProgressions;                                  // 0x3f8(0x8)
	class AIFormTypeList*                                        Forms;                                             // 0x400(0x8)
	class AIFormProgressionTypeList*                             FormProgressions;                                  // 0x408(0x8)
	class AILoadoutTypeList*                                     Loadouts;                                          // 0x410(0x8)
	class AILoadoutProgressionTypeList*                          LoadoutProgressions;                               // 0x418(0x8)
	class AISkillsetTypeList*                                    Skillsets;                                         // 0x420(0x8)
	class AISkillsetProgressionTypeList*                         SkillsetProgressions;                              // 0x428(0x8)
	class AIClassIdTypeList*                                     ClassIds;                                          // 0x430(0x8)
	class AIPartsCategoryTypeList*                               PartsCategories;                                   // 0x438(0x8)
	class AIColorVariantPool*                                    TeamColors;                                        // 0x440(0x8)
	class AIItemDropComponentList*                               AIItemDropSpawners;                                // 0x448(0x8)
	class AIItemDropComponentRankProgressionList*                AIItemDropSpawnerProgressions;                     // 0x450(0x8)
	TArray<class AIEncounterSettings*>                           DebugSpawnableEncounterSettings;                   // 0x458(0x10)
	char                                                         pad0x330_50E9L[0x330];                             // 0x468(0x330)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIEncounterGenerationServiceInterface: public Interface
{
public:
};


// Size 0x38 (Full Size[0xc0] - InheritedSize[0x88]
class BTTask_SetBlackboardVectorValue: public BTTask_BlackboardBase
{
public:
	bool                                                         UseVectorFromBlackboard;                           // 0x88(0x1)
	char                                                         pad0x3_HSBYA[0x3];                                 // 0x89(0x3)
	struct Vector                                                StaticValue;                                       // 0x8c(0xc)
	struct BlackboardKeySelector                                 BlackboardKeyToUseForVector;                       // 0x98(0x28)
};


// Size 0x0 (Full Size[0x70] - InheritedSize[0x70]
class BTService_DisableStun: public BTService
{
public:
};


// Size 0x10 (Full Size[0x70] - InheritedSize[0x60]
class BTTask_TriggerNotification: public BTTaskNode
{
public:
	class UClass*                                                NotificationId;                                    // 0x60(0x8)
	char                                                         pad0x8_CUBTF[0x8];                                 // 0x68(0x8)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class AIFormProgressionTypeList: public DataAsset
{
public:
	TArray<class AIFormRankProgression*>                         AllProgressions;                                   // 0x28(0x10)
};


// Size 0xa8 (Full Size[0x140] - InheritedSize[0x98]
class EnvQueryGenerator_Line: public EnvQueryGenerator_ProjectedPoints
{
public:
	class UClass*                                                FromContext;                                       // 0x98(0x8)
	class UClass*                                                ToContext;                                         // 0xa0(0x8)
	struct AIDataProviderFloatValue                              PointSpacing;                                      // 0xa8(0x30)
	struct AIDataProviderIntValue                                NumExtraPairsOfParallelLines;                      // 0xd8(0x30)
	struct AIDataProviderFloatValue                              ParallelLineSpacing;                               // 0x108(0x30)
	float                                                        MaxValidLineLength;                                // 0x138(0x4)
	bool                                                         ForceIncludeEndPoint;                              // 0x13c(0x1)
	bool                                                         ProjectPointsToWaterSurface;                       // 0x13d(0x1)
	char                                                         pad0x2_GBZTQ[0x2];                                 // 0x13e(0x2)
};


// Size 0x128 (Full Size[0x1f0] - InheritedSize[0xc8]
class AthenaAIAbilityComponent: public ActorComponent
{
public:
	char                                                         pad0x8_TPS3O[0x8];                                 // 0xc8(0x8)
	TArray<class AthenaAIAbility*>                               AIAbilities;                                       // 0xd0(0x10)
	TArray<class AthenaAIAbility*>                               ActivatableAbilitiesInCurrentStage;                // 0xe0(0x10)
	class AthenaAIAbility*                                       CurrentAIAbility;                                  // 0xf0(0x8)
	class UClass*                                                QueuedAbilityType;                                 // 0xf8(0x8)
	class UClass*                                                DebugAlwaysOnAbility;                              // 0x100(0x8)
	TArray<struct AthenaAIAbilityDamageStage>                    AbilityDamageStages;                               // 0x108(0x10)
	char                                                         pad0xd8_GJXWA[0xd8];                               // 0x118(0xd8)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class IsAIOfFormStatCondition: public TargetedStatCondition
{
public:
	TArray<Class>                                                AllowedAIForms;                                    // 0x30(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class FaunaAnimationInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x1c8] - InheritedSize[0x1c8]
class AthenaAIPerceptionComponent: public AIPerceptionComponent
{
public:
};


// Size 0xe8 (Full Size[0x4b0] - InheritedSize[0x3c8]
class PreviewPet: public Actor
{
public:
	char                                                         pad0x8_UBKQB[0x8];                                 // 0x3c8(0x8)
	char                                                         InitialAnimState;                                  // 0x3d0(0x1)
	char                                                         pad0x3_4AXC7[0x3];                                 // 0x3d1(0x3)
	struct AIPartId                                              InitialPartIdToLoad;                               // 0x3d4(0x8)
	char                                                         pad0x4_HNDJX[0x4];                                 // 0x3dc(0x4)
	class AIPartsCategory*                                       PreviewPetPartsCategory;                           // 0x3e0(0x8)
	class SkeletalMeshComponent*                                 PreviewPetMesh;                                    // 0x3e8(0x8)
	struct PetAnimationDataPreview                               PreviewPetAnimationData;                           // 0x3f0(0x10)
	class AIPartsRetrievalComponent*                             AIPartsRetrievalComponent;                         // 0x400(0x8)
	class PetPartCustomisationComponent*                         PetPartCustomisationComponent;                     // 0x408(0x8)
	char                                                         pad0xa0_8GBD6[0xa0];                               // 0x410(0xa0)
};


// Size 0x80 (Full Size[0x148] - InheritedSize[0xc8]
class AthenaAIFormComponent: public ActorComponent
{
public:
	char                                                         pad0x8_18UTA[0x8];                                 // 0xc8(0x8)
	TArray<struct AthenaAIFormComponentVfxCustomisation>         VfxCustomisations;                                 // 0xd0(0x10)
	class AthenaAIFormDataAsset*                                 FormData;                                          // 0xe0(0x8)
	class CharacterHitReactionDamagerTypeToAnimTypeLayer*        HitReactionsLayer;                                 // 0xe8(0x8)
	char                                                         pad0x58_9I727[0x58];                               // 0xf0(0x58)
};


// Size 0x78 (Full Size[0x110] - InheritedSize[0x98]
class EnvQueryGenerator_WaterMultiDeckerRing: public EnvQueryGenerator_ProjectedPoints
{
public:
	struct AIDataProviderFloatValue                              Radius;                                            // 0x98(0x30)
	TArray<struct AIDataProviderFloatValue>                      ZOffsetOfRingsFromContext;                         // 0xc8(0x10)
	struct AIDataProviderIntValue                                PointsPerRing;                                     // 0xd8(0x30)
	class UClass*                                                Center;                                            // 0x108(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AIDialogueStateProviderInterface: public Interface
{
public:
};


// Size 0xc8 (Full Size[0x140] - InheritedSize[0x78]
class BurrowAIAbility: public AthenaAIAbility
{
public:
	TArray<struct Vector>                                        LocationsToSpawnCrack;                             // 0x78(0x10)
	struct TimerHandle                                           TimerHandleStartNextSpawnWave;                     // 0x88(0x4)
	char                                                         pad0x4_BHWMF[0x4];                                 // 0x8c(0x4)
	class Actor*                                                 CachedTarget;                                      // 0x90(0x8)
	char                                                         pad0x8c_LR8M9[0x8c];                               // 0x98(0x8c)
	bool                                                         bExecuting;                                        // 0x124(0x1)
	bool                                                         bProcessingSpawnLocations;                         // 0x125(0x1)
	char                                                         pad0x1a_Y6LCO[0x1a];                               // 0x126(0x1a)
};


// Size 0x8 (Full Size[0x40] - InheritedSize[0x38]
class AISpawnerPrerequisiteIsStoryActive: public AISpawnerPrerequisiteBase
{
public:
	struct StoryFlag                                             RequiredStory;                                     // 0x38(0x8)
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_ContextLocationFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x40 (Full Size[0x70] - InheritedSize[0x30]
class PetsPartsDesc: public AIPartsDesc
{
public:
	struct StringAssetReference                                  Mesh;                                              // 0x30(0x10)
	struct StringAssetReference                                  HighResMesh;                                       // 0x40(0x10)
	TArray<struct PetMaterialEntry>                              PetMaterials;                                      // 0x50(0x10)
	char                                                         PetSize;                                           // 0x60(0x1)
	char                                                         pad0x7_KD0BH[0x7];                                 // 0x61(0x7)
	class PetCustomisationOverrideDataAsset*                     PetOverrideAsset;                                  // 0x68(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class CoralShieldAbilityType: public AthenaAIAbilityType
{
public:
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class AISpawnComplexCondition: public AISpawnOverrideCondition
{
public:
	TArray<class AISpawnOverrideCondition*>                      Conditions;                                        // 0x30(0x10)
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_HomePositionFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class AISpawnerInterface: public AIPlayerTrackerObserverInterface
{
public:
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class AISpawnMatchesAllContextsCondition: public AISpawnOverrideCondition
{
public:
	TArray<class Class*>                                         Contexts;                                          // 0x30(0x10)
};


// Size 0x0 (Full Size[0x38] - InheritedSize[0x38]
class AISpawnerPrerequisiteIsDaytime: public AISpawnerPrerequisiteBase
{
public:
};


// Size 0xf8 (Full Size[0x230] - InheritedSize[0x138]
class AthenaAICharacterControllerParamsDataAsset: public AthenaAIControllerParamsDataAsset
{
public:
	bool                                                         IndividualOverrideUseRVOAvoidance;                 // 0x138(0x1)
	bool                                                         IndividualUseRVOAvoidance;                         // 0x139(0x1)
	bool                                                         IndividualOverridePrioritiseInteractablesBeforeEnemies; // 0x13a(0x1)
	bool                                                         IndividualPrioritiseInteractablesBeforeEnemies;    // 0x13b(0x1)
	char                                                         pad0x4_J9TAO[0x4];                                 // 0x13c(0x4)
	class CurveFloat*                                            IndividualDistanceInMToCannonShotHitChanceCurve;   // 0x140(0x8)
	TArray<struct AIStrategyMovementProperties>                  IndividualAIStrategyMovementProperties;            // 0x148(0x10)
	TArray<struct ItemCategoryAIStrategyMovementPropertiesOverride> IndividualItemCategoryAIStrategyMovementPropertiesOverrides; // 0x158(0x10)
	struct AthenaAICharacterCannonTargetingParams                IndividualCannonTargetingParams;                   // 0x168(0x10)
	TArray<struct AthenaAICharacterControllerItemCategoryProjectileEffectivenessProperties> IndividualWieldedItemProjectileEffectivenessProperties; // 0x178(0x10)
	TArray<struct AthenaAICharacterControllerItemCategoryNamedParams> IndividualWieldedItemOverrideNamedControllerParams; // 0x188(0x10)
	TArray<struct AthenaAIItemParamValue>                        IndividualNamedItemParams;                         // 0x198(0x10)
	TArray<struct AthenaAICharacterControllerSpawnItemDescForItemCategory> IndividualSpawnItemDescForItemCategories;          // 0x1a8(0x10)
	bool                                                         UseDamageBasedAbilityStages;                       // 0x1b8(0x1)
	char                                                         pad0x7_VEDI1[0x7];                                 // 0x1b9(0x7)
	TArray<float>                                                HealthStages;                                      // 0x1c0(0x10)
	TArray<struct AthenaAIAbilityDamageStage>                    IndividualDamageBasedAIAbilityStages;              // 0x1d0(0x10)
	TArray<class AthenaAIAbilityParams*>                         IndividualAIAbilityParams;                         // 0x1e0(0x10)
	TArray<struct AthenaAIEngageEnemyData>                       IndividualNonItemEngageOptions;                    // 0x1f0(0x10)
	struct StringAssetReference                                  IndividualAnimationDataOverrideAsset;              // 0x200(0x10)
	struct StringAssetReference                                  IndividualCustomAnimationAsset;                    // 0x210(0x10)
	bool                                                         IndividualOverrideNoInitialItem;                   // 0x220(0x1)
	bool                                                         IndividualNoInitialItem;                           // 0x221(0x1)
	bool                                                         IndividualOverrideBeginFleeing;                    // 0x222(0x1)
	bool                                                         IndividualBeginFleeing;                            // 0x223(0x1)
	char                                                         pad0x4_VFC8Y[0x4];                                 // 0x224(0x4)
	class EnvQuery*                                              IndividualFleeingEQS;                              // 0x228(0x8)
};


// Size 0x4c0 (Full Size[0xcd0] - InheritedSize[0x810]
class Pet: public AICreatureCharacter
{
public:
	char                                                         pad0xb0_IIZKX[0xb0];                               // 0x810(0xb0)
	class PetWieldableReactMappingsDataAsset*                    WieldableReactMappingsAsset;                       // 0x8c0(0x8)
	float                                                        MaxVelocityForLocomotionAnimation;                 // 0x8c8(0x4)
	bool                                                         CanFly;                                            // 0x8cc(0x1)
	char                                                         pad0x3_N5WRE[0x3];                                 // 0x8cd(0x3)
	TArray<struct PetFlyingStrategyProperties>                   FlyingStrategyProperties;                          // 0x8d0(0x10)
	float                                                        FlyingLandTime;                                    // 0x8e0(0x4)
	char                                                         pad0x4_BQ9YG[0x4];                                 // 0x8e4(0x4)
	class CurveFloat*                                            FlyingLandCurve;                                   // 0x8e8(0x8)
	float                                                        FlyingTakeOffTime;                                 // 0x8f0(0x4)
	char                                                         pad0x4_XXDYA[0x4];                                 // 0x8f4(0x4)
	class CurveFloat*                                            FlyingTakeOffCurve;                                // 0x8f8(0x8)
	struct FloatRange                                            MidFlightAdjustmentTimerRange;                     // 0x900(0x10)
	class CurveFloat*                                            MidFlightAdjustmentCurve;                          // 0x910(0x8)
	class CurveFloat*                                            MidFlightTimeToDistanceAdjustmentCurve;            // 0x918(0x8)
	struct FName                                                 FiredFromActorCollision;                           // 0x920(0x8)
	class WwiseEvent*                                            FiredFromActorSFX;                                 // 0x928(0x8)
	class PetDitherComponent*                                    DitherComponent;                                   // 0x930(0x8)
	float                                                        MinimumDamageForHealthReact;                       // 0x938(0x4)
	float                                                        MaxDistForWaterBucketToClean;                      // 0x93c(0x4)
	float                                                        MinimumDurationUntilPetCanDespawnConcealed;        // 0x940(0x4)
	float                                                        DefaultNamePlateHeight;                            // 0x944(0x4)
	float                                                        AlternateNamePlateHeight;                          // 0x948(0x4)
	char                                                         pad0x4_1J59B[0x4];                                 // 0x94c(0x4)
	TArray<char>                                                 StatesToUseAlternateNamePlatePos;                  // 0x950(0x10)
	struct FloatRange                                            PetTimeSpentSad;                                   // 0x960(0x10)
	char                                                         DebugStateDescriptor;                              // 0x970(0x1)
	char                                                         pad0x7_45ZMA[0x7];                                 // 0x971(0x7)
	class PetNameplateComponent*                                 AINameplateComponent;                              // 0x978(0x8)
	class FeedingComponent*                                      FeedingComponent;                                  // 0x980(0x8)
	class StarvingComponent*                                     StarvingComponent;                                 // 0x988(0x8)
	class CleanlinessComponent*                                  CleanlinessComponent;                              // 0x990(0x8)
	class CannonSquashComponent*                                 CannonSquashComponent;                             // 0x998(0x8)
	struct PetMovementRequest                                    ReplicatedMovementRequest;                         // 0x9a0(0xc)
	float                                                        TargetMeshRoll;                                    // 0x9ac(0x4)
	char                                                         pad0x10_IZCYK[0x10];                               // 0x9b0(0x10)
	float                                                        DefaultShipTurnRateModifier;                       // 0x9c0(0x4)
	char                                                         pad0x4_EI3VV[0x4];                                 // 0x9c4(0x4)
	TArray<struct PetTurnRateModifier>                           TurnRateModifierList;                              // 0x9c8(0x10)
	TArray<char>                                                 LocomotingMovementStates;                          // 0x9d8(0x10)
	TArray<char>                                                 RequestIdleOrMovementValidMovementStates;          // 0x9e8(0x10)
	float                                                        MaxRollAngle;                                      // 0x9f8(0x4)
	float                                                        DelayForDisablingMovementOnIdle;                   // 0x9fc(0x4)
	float                                                        IslandDustRatePerSecond;                           // 0xa00(0x4)
	struct Guid                                                  CrewId;                                            // 0xa04(0x10)
	bool                                                         InHangout;                                         // 0xa14(0x1)
	bool                                                         PerchedInHangout;                                  // 0xa15(0x1)
	bool                                                         ResetRollAndZOffset;                               // 0xa16(0x1)
	bool                                                         ShouldIgnoreTooltipDisplayOffset;                  // 0xa17(0x1)
	char                                                         pad0x8_O12L1[0x8];                                 // 0xa18(0x8)
	struct PetTurnToFaceData                                     PetTurnToFaceData;                                 // 0xa20(0x20)
	float                                                        MaximumSubmergedWaterDepthBeforeDespawn;           // 0xa40(0x4)
	char                                                         pad0x24_SZHD0[0x24];                               // 0xa44(0x24)
	class AIPartsRetrievalComponent*                             AIPartsRetrievalComponent;                         // 0xa68(0x8)
	class PetPartCustomisationComponent*                         PetPartCustomisationComponent;                     // 0xa70(0x8)
	class LightWeightStatusEffectManagerComponent*               LightWeightStatusEffectManagerComponent;           // 0xa78(0x8)
	class PetTelemetryComponent*                                 TelemetryComponent;                                // 0xa80(0x8)
	class PetSicknessComponent*                                  SicknessComponent;                                 // 0xa88(0x8)
	class WaterExposureComponent*                                WaterExposureComponent;                            // 0xa90(0x8)
	class AnimationDataStoreComponent*                           AnimationDataStoreComponent;                       // 0xa98(0x8)
	class Actor*                                                 SpawnedForShip;                                    // 0xaa0(0x8)
	class Actor*                                                 PetOwner;                                          // 0xaa8(0x8)
	class ItemInfo*                                              PetInfo;                                           // 0xab0(0x8)
	char                                                         pad0x8_R0EB7[0x8];                                 // 0xab8(0x8)
	struct Docker                                                Docker;                                            // 0xac0(0x90)
	struct StartPickupObjectActionRuleParams                     StartPickupObjectActionRuleParams;                 // 0xb50(0x10)
	char                                                         pad0x10_QK8J9[0x10];                               // 0xb60(0x10)
	class ParticleSystemComponent*                               CurrentlyPlayingParticleSystem;                    // 0xb70(0x8)
	class UClass*                                                LandingStrategy;                                   // 0xb78(0x8)
	class UClass*                                                PursuitStrategy;                                   // 0xb80(0x8)
	float                                                        DefaultRollLerpTime;                               // 0xb88(0x4)
	float                                                        LandingRollLerpTime;                               // 0xb8c(0x4)
	bool                                                         IsBeingDismissed;                                  // 0xb90(0x1)
	char                                                         pad0xfb_O0HC7[0xfb];                               // 0xb91(0xfb)
	bool                                                         IsInDisabledPetPerchHangout;                       // 0xc8c(0x1)
	bool                                                         PetIsSad;                                          // 0xc8d(0x1)
	char                                                         pad0x42_GKGZ6[0x42];                               // 0xc8e(0x42)
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_CurrentAIStrategy: public BTDecorator_BaseConditional
{
public:
	TArray<class Class*>                                         Strategies;                                        // 0x68(0x10)
};


// Size 0x30 (Full Size[0x128] - InheritedSize[0xf8]
class BTTask_AthenaWaitWithFloor: public BTTask_AthenaWait
{
public:
	struct AIDataProviderFloatValue                              Floor;                                             // 0xf8(0x30)
};


// Size 0x68 (Full Size[0xe8] - InheritedSize[0x80]
class BTDecorator_TestRange: public BTDecorator_CompareBlackboardValues
{
public:
	struct AIDataProviderFloatValue                              EnterRange;                                        // 0x80(0x30)
	struct AIDataProviderFloatValue                              ExitRange;                                         // 0xb0(0x30)
	bool                                                         TestForOutsideRange;                               // 0xe0(0x1)
	char                                                         pad0x7_28WYV[0x7];                                 // 0xe1(0x7)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ElectricShieldAbilityType: public AthenaAIAbilityType
{
public:
};


// Size 0x10 (Full Size[0x48] - InheritedSize[0x38]
class AISpawnerPrerequisiteIsFeatureFlagEnabled: public AISpawnerPrerequisiteBase
{
public:
	struct FeatureFlag                                           PrerequisiteFeatureFlag;                           // 0x38(0xc)
	char                                                         pad0x4_7VPNN[0x4];                                 // 0x44(0x4)
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class ApplyNameplateToBountyWaveSpawnedAction: public PostBountyAIPawnSpawnedAction
{
public:
	struct FText                                                 AIName;                                            // 0x28(0x38)
};


// Size 0x38 (Full Size[0xa0] - InheritedSize[0x68]
class BTDecorator_TargetOnShip: public BTDecorator_BaseConditional
{
public:
	bool                                                         Invert;                                            // 0x68(0x1)
	char                                                         ShipOwnership;                                     // 0x69(0x1)
	char                                                         pad0x36_1BGZA[0x36];                               // 0x6a(0x36)
};


// Size 0x40 (Full Size[0x488] - InheritedSize[0x448]
class AIFixedWavesSpawner: public AISpawner
{
public:
	TArray<struct AIPersistentSpawnerWave>                       SpawnedWaves;                                      // 0x448(0x10)
	int                                                          NumWavesToSpawnOnSpottedNewTarget;                 // 0x458(0x4)
	char                                                         pad0x2c_IYCB9[0x2c];                               // 0x45c(0x2c)
};


// Size 0xc0 (Full Size[0x130] - InheritedSize[0x70]
class TaleQuestShroudedDeepSGExperienceTracker: public TaleQuestTinySharkExperienceTracker
{
public:
	struct Vector2D                                              TrackingLocation;                                  // 0x70(0x8)
	float                                                        InnerSafezoneRadius;                               // 0x78(0x4)
	float                                                        TargetWeightSloop;                                 // 0x7c(0x4)
	float                                                        TargetWeightBrig;                                  // 0x80(0x4)
	float                                                        TargetWeightGaleon;                                // 0x84(0x4)
	float                                                        ExperienceRadiusConsiderationRatio;                // 0x88(0x4)
	float                                                        ShipInsideExperiencePreference;                    // 0x8c(0x4)
	float                                                        ShipNearExperiencePreference;                      // 0x90(0x4)
	float                                                        ShipNearKillerWhalePreference;                     // 0x94(0x4)
	struct WeightedProbabilityRangeOfRanges                      ForceRetargetFrequency;                            // 0x98(0x30)
	char                                                         pad0x68_5CPU0[0x68];                               // 0xc8(0x68)
};


// Size 0x30 (Full Size[0x98] - InheritedSize[0x68]
class BTDecorator_LeftOfAIPawn: public BTDecorator_BaseConditional
{
public:
	struct BlackboardKeySelector                                 TargetKey;                                         // 0x68(0x28)
	bool                                                         ReverseLogic;                                      // 0x90(0x1)
	char                                                         pad0x7_DH377[0x7];                                 // 0x91(0x7)
};


// Size 0x20 (Full Size[0x50] - InheritedSize[0x30]
class AISpawnStoryCondition: public AISpawnOverrideCondition
{
public:
	struct StoryFlag                                             StoryFlag;                                         // 0x30(0x8)
	char                                                         pad0x18_17YHZ[0x18];                               // 0x38(0x18)
};


// Size 0x10 (Full Size[0xe0] - InheritedSize[0xd0]
class AthenaAIRangeBasedAmmoDataAsset: public AthenaAIAmmoDataAsset
{
public:
	TArray<struct WeightedAmmoTypeRange>                         AmmoTypeRanges;                                    // 0xd0(0x10)
};


// Size 0xc0 (Full Size[0x138] - InheritedSize[0x78]
class CoralShieldAbility: public AthenaAIAbility
{
public:
	TArray<uintptr_t>                                            PotentialTargets;                                  // 0x78(0x10)
	TArray<struct BuffedTargetData>                              BuffedTargets;                                     // 0xa8(0x10)
	char                                                         pad0x80_16WRK[0x80];                               // 0xb8(0x80)
};


// Size 0x38 (Full Size[0x100] - InheritedSize[0xc8]
class CoralShieldAbilityParams: public AthenaAIAbilityParams
{
public:
	float                                                        ShieldEffectRadius;                                // 0xc8(0x4)
	float                                                        DamageNeededToBreakShield;                         // 0xcc(0x4)
	float                                                        ShieldLifeTime;                                    // 0xd0(0x4)
	char                                                         pad0x4_SS9AD[0x4];                                 // 0xd4(0x4)
	struct Status                                                CoralShieldStatusEffect;                           // 0xd8(0x18)
	class DamageableVulnerabilityLayer*                          VulnerabilityToApplyToSelf;                        // 0xf0(0x8)
	float                                                        DelayBeforeSFXPlays;                               // 0xf8(0x4)
	char                                                         pad0x4_B4940[0x4];                                 // 0xfc(0x4)
};


// Size 0x88 (Full Size[0x1c0] - InheritedSize[0x138]
class FaunaAIContollerParamsDataAsset: public AthenaAIControllerParamsDataAsset
{
public:
	struct WeightedProbabilityRange                              Courage;                                           // 0x138(0x20)
	TArray<struct CarriedItemThreatOverride>                     CarriedItemThreatOverrides;                        // 0x158(0x10)
	bool                                                         ThreatenedBySightOfCarrier;                        // 0x168(0x1)
	char                                                         pad0x7_DPAR7[0x7];                                 // 0x169(0x7)
	TArray<struct HearingThreat>                                 KnownHearingDangers;                               // 0x170(0x10)
	float                                                        CarrierHearingThreatSpeedThreshold;                // 0x180(0x4)
	float                                                        DamageThreat;                                      // 0x184(0x4)
	class CurveFloat*                                            CharacterDistanceToDangerRatingCurve;              // 0x188(0x8)
	class CurveFloat*                                            DangerRatingToAgitationDurationCurve;              // 0x190(0x8)
	float                                                        TimeToBecomeAgitatedMin;                           // 0x198(0x4)
	float                                                        TimeToBecomeAgitatedMax;                           // 0x19c(0x4)
	float                                                        AgitationDurationVariance;                         // 0x1a0(0x4)
	int                                                          AlertThreshold;                                    // 0x1a4(0x4)
	int                                                          FleeThreshold;                                     // 0x1a8(0x4)
	float                                                        TimeToBecomeCalm;                                  // 0x1ac(0x4)
	float                                                        CalmCooldownTime;                                  // 0x1b0(0x4)
	float                                                        MaxDistanceFromLeaderForIdle;                      // 0x1b4(0x4)
	class CurveFloat*                                            DistanceToLeaderPatrolChanceCurve;                 // 0x1b8(0x8)
};


// Size 0x20 (Full Size[0x4c0] - InheritedSize[0x4a0]
class PetNameplateComponent: public AINameplateComponent
{
public:
	char                                                         pad0x8_RHISV[0x8];                                 // 0x4a0(0x8)
	struct FString                                               DefaultPetName;                                    // 0x4a8(0x10)
	char                                                         pad0x8_JM2S0[0x8];                                 // 0x4b8(0x8)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class FaunaAIPlayerTracker: public AIPlayerTracker
{
public:
	char                                                         pad0x20_SZA7T[0x20];                               // 0x28(0x20)
};


// Size 0x0 (Full Size[0x660] - InheritedSize[0x660]
class FaunaMovementComponent: public AICreatureCharacterMovementComponent
{
public:
};


// Size 0x218 (Full Size[0x660] - InheritedSize[0x448]
class AIPerPlayerSpawner: public AISpawner
{
public:
	bool                                                         CheckSpawnedActorsInRadiusBeforeSpawning;          // 0x448(0x1)
	char                                                         pad0x3_ERO19[0x3];                                 // 0x449(0x3)
	float                                                        RadiusToCheckForExistingPopulation;                // 0x44c(0x4)
	int                                                          MaxExistingPopulationInRadius;                     // 0x450(0x4)
	bool                                                         DespawnAllPawnsWhenAllPlayersLeave;                // 0x454(0x1)
	char                                                         pad0x3_WBZ4X[0x3];                                 // 0x455(0x3)
	int                                                          MaxActorsTotalPerPlayer;                           // 0x458(0x4)
	bool                                                         RunSimulation;                                     // 0x45c(0x1)
	char                                                         pad0x3_BDU3C[0x3];                                 // 0x45d(0x3)
	int                                                          RankForSimulation;                                 // 0x460(0x4)
	int                                                          NumIterations;                                     // 0x464(0x4)
	bool                                                         WantsToTemporarilyRememberPlayers;                 // 0x468(0x1)
	char                                                         pad0x7_5B5ZI[0x7];                                 // 0x469(0x7)
	struct WeightedProbabilityRangeOfRanges                      TemporaryPlayerMemoryTimeRange;                    // 0x470(0x30)
	char                                                         pad0x118_CLSRW[0x118];                             // 0x4a0(0x118)
	char                                                         pad0xa8_UYDEX[0xa8];                               // 0x5b8(0xa8)
};


// Size 0x80 (Full Size[0x568] - InheritedSize[0x4e8]
class LimitedInteractableAICreatureSpline: public AICreatureSpline
{
public:
	char                                                         pad0x8_6F92P[0x8];                                 // 0x4e8(0x8)
	class InteractableComponent*                                 InteractableComponent;                             // 0x4f0(0x8)
	class ActionRulesComponent*                                  ActionRulesComponent;                              // 0x4f8(0x8)
	struct LimitedInteractbaleAICreatureSplineInteractionParams  InteractionParams;                                 // 0x500(0x50)
	class UClass*                                                PromptCounterKey;                                  // 0x550(0x8)
	int                                                          MaxInteractCount;                                  // 0x558(0x4)
	char                                                         pad0x8_S64WS[0x8];                                 // 0x55c(0x8)
	struct PlayerStat                                            StatToFireOnInteraction;                           // 0x564(0x4)
};


// Size 0x100 (Full Size[0x548] - InheritedSize[0x448]
class AIInteractableSpawner: public AISpawner
{
public:
	class UClass*                                                AIInteractableType;                                // 0x448(0x8)
	float                                                        InhabitedChance;                                   // 0x450(0x4)
	char                                                         pad0x4_DMG9E[0x4];                                 // 0x454(0x4)
	struct WeightedProbabilityRangeOfRanges                      DelayAfterSuccessfulInhabitedCheck;                // 0x458(0x30)
	struct WeightedProbabilityRangeOfRanges                      DelayAfterFailedInhabitedCheck;                    // 0x488(0x30)
	bool                                                         BlockSubsequentSpawningAtInteractableOnceAiKilled; // 0x4b8(0x1)
	char                                                         pad0x3_ZY24M[0x3];                                 // 0x4b9(0x3)
	float                                                        SpawnForInteractableChance;                        // 0x4bc(0x4)
	struct WeightedProbabilityRangeOfRanges                      DelayAfterSuccessfulSpawnOnInteractableCheck;      // 0x4c0(0x30)
	struct WeightedProbabilityRangeOfRanges                      DelayAfterFailedSpawnOnInteractableCheck;          // 0x4f0(0x30)
	bool                                                         RunInhabitedSimulation;                            // 0x520(0x1)
	bool                                                         RunSpawnForInteractableSimulation;                 // 0x521(0x1)
	char                                                         pad0x2_LXS8A[0x2];                                 // 0x522(0x2)
	int                                                          NumIterations;                                     // 0x524(0x4)
	char                                                         pad0x19_NAAS7[0x19];                               // 0x528(0x19)
	char                                                         CachedPlaymode;                                    // 0x541(0x1)
	char                                                         pad0x6_A12L5[0x6];                                 // 0x542(0x6)
};


// Size 0xc0 (Full Size[0x120] - InheritedSize[0x60]
class AIEncounterSettingsFixed: public AIEncounterSettings
{
public:
	struct StringAssetReference                                  SpecificSkillset;                                  // 0x60(0x10)
	struct FeatureToggledAIEncounterSpecificSkillSetCollection   ToggledSpecificSkillsetOverrides;                  // 0x70(0x10)
	struct StringAssetReference                                  Loadout;                                           // 0x80(0x10)
	struct StringAssetReference                                  Form;                                              // 0x90(0x10)
	struct StringAssetReference                                  Ammo;                                              // 0xa0(0x10)
	struct FName                                                 DioramaRole;                                       // 0xb0(0x8)
	struct FText                                                 LocalisableName;                                   // 0xb8(0x38)
	struct EncounterParams                                       EncounterTrackingParams;                           // 0xf0(0xc)
	char                                                         pad0x4_KUXNJ[0x4];                                 // 0xfc(0x4)
	char                                                         pad0x20_Q9TT6[0x20];                               // 0x100(0x20)
};


// Size 0x8 (Full Size[0x70] - InheritedSize[0x68]
class BTDecorator_ItemReadyToUse: public BTDecorator_BaseConditional
{
public:
	class UClass*                                                NotificationId;                                    // 0x68(0x8)
};


// Size 0x148 (Full Size[0x590] - InheritedSize[0x448]
class AIFaunaSpawner: public AISpawner
{
public:
	struct AIFaunaSpawnerWave                                    FaunaWave;                                         // 0x448(0x110)
	char                                                         pad0x10_E96A0[0x10];                               // 0x558(0x10)
	class Actor*                                                 FaunaLeader;                                       // 0x568(0x8)
	char                                                         pad0x10_21S1Z[0x10];                               // 0x570(0x10)
	TArray<class Actor*>                                         PlayersInSpawnArea;                                // 0x580(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_TargetActorFromBlackboardPredictedLocation: public EnvQueryContext_TargetActorFromBlackboard
{
public:
};


// Size 0x50 (Full Size[0x80] - InheritedSize[0x30]
class MeshMemoryConstraintsAIPartsDesc: public AIPartsDesc
{
public:
	char                                                         pad0x8_90M30[0x8];                                 // 0x30(0x8)
	struct StringAssetReference                                  Mesh;                                              // 0x38(0x10)
	class UClass*                                                MeshFallbackCategory;                              // 0x50(0x8)
	class UClass*                                                BudgetToCountMemoryAgainstIfNoFallback;            // 0x58(0x8)
	TArray<class MaterialInterface*>                             OverrideMaterials;                                 // 0x60(0x10)
	TArray<struct StringAssetReference>                          FallbackOverrideMaterials;                         // 0x70(0x10)
};


// Size 0x38 (Full Size[0x480] - InheritedSize[0x448]
class AIProgressiveWavesSpawner: public AISpawner
{
public:
	bool                                                         ApplyLocalisableNamesToNameplates;                 // 0x448(0x1)
	char                                                         pad0x7_VMM7G[0x7];                                 // 0x449(0x7)
	TArray<struct AIPersistentSpawnerWave>                       Waves;                                             // 0x450(0x10)
	char                                                         pad0x18_7KLDT[0x18];                               // 0x460(0x18)
	class Actor*                                                 TriggerActor;                                      // 0x478(0x8)
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_KnockbackPosFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x8 (Full Size[0x80] - InheritedSize[0x78]
class TeleportAIAbility: public AthenaAIAbility
{
public:
	char                                                         pad0x8_L0WEN[0x8];                                 // 0x78(0x8)
};


// Size 0x38 (Full Size[0x100] - InheritedSize[0xc8]
class ElectricShieldAbilityParams: public AthenaAIAbilityParams
{
public:
	float                                                        ChargeUpTime;                                      // 0xc8(0x4)
	char                                                         pad0x4_NJWX4[0x4];                                 // 0xcc(0x4)
	struct Status                                                BuffInterruptedStatusEffect;                       // 0xd0(0x18)
	struct Status                                                ElectricShieldStatusEffect;                        // 0xe8(0x18)
};


// Size 0x160 (Full Size[0x5a8] - InheritedSize[0x448]
class AIPerCrewSpawner: public AISpawner
{
public:
	class AIWeightedProbabilityRangeOfRangesRankProgression*     DefaultRespawnTimerRanges;                         // 0x448(0x8)
	int                                                          MaxNumOfCrewsToSpawnFor;                           // 0x450(0x4)
	bool                                                         ActivateBySettingFootOnIsland;                     // 0x454(0x1)
	bool                                                         UseRespawnTimerForFirstSpawn;                      // 0x455(0x1)
	bool                                                         AssociateSpawnsWithSpecificCrews;                  // 0x456(0x1)
	bool                                                         PerceiveTriggerActorOnSpawn;                       // 0x457(0x1)
	bool                                                         EnforceRespawnTimeAfterCrewLeaves;                 // 0x458(0x1)
	bool                                                         IgnoreSpawningGracePeriodForNewCrew;               // 0x459(0x1)
	char                                                         pad0x6_UXKIU[0x6];                                 // 0x45a(0x6)
	class AIPerCrewSpawnerSettingsStoryOverrideAsset*            StoryOverrideRespawnSettingsAsset;                 // 0x460(0x8)
	char                                                         pad0x140_HF563[0x140];                             // 0x468(0x140)
};


// Size 0x30 (Full Size[0x320] - InheritedSize[0x2f0]
class AICreatureCharacterPathFollowingComponent: public AthenaAICharacterPathFollowingComponent
{
public:
	float                                                        LandingAngle;                                      // 0x2f0(0x4)
	float                                                        HopDistanceScale;                                  // 0x2f4(0x4)
	float                                                        MaximumLandTime;                                   // 0x2f8(0x4)
	float                                                        MinStairAngle;                                     // 0x2fc(0x4)
	float                                                        MinStairVelocityDampen;                            // 0x300(0x4)
	char                                                         pad0x4_FXYKC[0x4];                                 // 0x304(0x4)
	TArray<class Class*>                                         SubscribedStairClimbStrategies;                    // 0x308(0x10)
	char                                                         pad0x8_YP64Z[0x8];                                 // 0x318(0x8)
};


// Size 0x78 (Full Size[0x140] - InheritedSize[0xc8]
class BurrowAIAbilityParams: public AthenaAIAbilityParams
{
public:
	TArray<char>                                                 ValidBurrowSurfaceTypes;                           // 0xc8(0x10)
	class UClass*                                                BurrowCrackToSpawn;                                // 0xd8(0x8)
	class UClass*                                                BurrowEruptArea;                                   // 0xe0(0x8)
	class EnvQuery*                                              EnvQueryLinesToTarget;                             // 0xe8(0x8)
	class EnvQuery*                                              EnvQueryAroundTarget;                              // 0xf0(0x8)
	struct Vector                                                OffsetPositionForStartTrace;                       // 0xf8(0xc)
	float                                                        SurfaceDetectRaycastLength;                        // 0x104(0x4)
	float                                                        BurrowAroundTargetRange;                           // 0x108(0x4)
	float                                                        MaxSurfaceAngleForBurrow;                          // 0x10c(0x4)
	bool                                                         bEruptFromClosestSpawn;                            // 0x110(0x1)
	char                                                         pad0x3_CCSG0[0x3];                                 // 0x111(0x3)
	struct MinMaxBurrowAbility                                   EruptionDelayRndBetweenMinMaxSeconds;              // 0x114(0x8)
	struct MinMaxBurrowAbility                                   NumberOfCrackWavesMinMax;                          // 0x11c(0x8)
	struct MinMaxBurrowAbility                                   RndSecondsBetweenCrackWaves;                       // 0x124(0x8)
	struct MinMaxBurrowAbility                                   NumberOfCracksPerWaveMinMax;                       // 0x12c(0x8)
	struct MinMaxBurrowAbility                                   RndSecondsBetweenEachCrackSpawn;                   // 0x134(0x8)
	char                                                         pad0x4_X64MQ[0x4];                                 // 0x13c(0x4)
};


// Size 0x360 (Full Size[0x970] - InheritedSize[0x610]
class AthenaAIController: public AthenaAIControllerBase
{
public:
	char                                                         pad0x24_U64O0[0x24];                               // 0x610(0x24)
	float                                                        CurrentTargetPerceivedNotVisibleAge;               // 0x634(0x4)
	char                                                         pad0x40_WQWJ3[0x40];                               // 0x638(0x40)
	class AISenseConfig_Sight*                                   SightConfig;                                       // 0x678(0x8)
	class AISenseConfig_Hearing*                                 HearingConfig;                                     // 0x680(0x8)
	class AISenseConfig_Damage*                                  DamageSenseConfig;                                 // 0x688(0x8)
	TArray<char>                                                 HealthChangedReasonsExcludedFromKillNotifications; // 0x690(0x10)
	char                                                         pad0x48_54VRP[0x48];                               // 0x6a0(0x48)
	TArray<struct AthenaAIControllerSenseSettingOverride>        AIStrategySenseSettingOverrides;                   // 0x6e8(0x10)
	char                                                         pad0x248_5JFHQ[0x248];                             // 0x6f8(0x248)
	class Actor*                                                 CurrentNotSeenPerceivedActor;                      // 0x940(0x8)
	class Actor*                                                 PendingSpawnTriggerActor;                          // 0x948(0x8)
	char                                                         pad0x20_J5AMF[0x20];                               // 0x950(0x20)
};


// Size 0x40 (Full Size[0x128] - InheritedSize[0xe8]
class BTService_RunEQSQueryOnActorMovement: public BTService_RunEQSQuery
{
public:
	struct BlackboardKeySelector                                 MovingActorKey;                                    // 0xe8(0x28)
	float                                                        MinimumActorMovementToRunEQS;                      // 0x110(0x4)
	float                                                        MinimumActorVelocityChangeToRunEQS;                // 0x114(0x4)
	bool                                                         RunEQSForYawChanges;                               // 0x118(0x1)
	char                                                         pad0x3_EMSW8[0x3];                                 // 0x119(0x3)
	float                                                        MinimumActorYawChangeToRunEQS;                     // 0x11c(0x4)
	char                                                         pad0x8_VKPGJ[0x8];                                 // 0x120(0x8)
};


// Size 0x60 (Full Size[0xc0] - InheritedSize[0x60]
class AIEncounterSettingsRankProgression: public AIEncounterSettings
{
public:
	struct StringAssetReference                                  SkillsetProgression;                               // 0x60(0x10)
	struct StringAssetReference                                  LoadoutProgression;                                // 0x70(0x10)
	struct StringAssetReference                                  FormProgression;                                   // 0x80(0x10)
	struct StringAssetReference                                  AmmoProgression;                                   // 0x90(0x10)
	struct StringAssetReference                                  ItemDropComponentProgression;                      // 0xa0(0x10)
	struct EncounterParams                                       EncounterTrackingParams;                           // 0xb0(0xc)
	char                                                         pad0x4_61ACQ[0x4];                                 // 0xbc(0x4)
};


// Size 0xa8 (Full Size[0x120] - InheritedSize[0x78]
class ElectricShieldAbility: public AthenaAIAbility
{
public:
	char                                                         pad0x8_700M6[0x8];                                 // 0x78(0x8)
	TArray<class Interface*>                                     SelectedTargets;                                   // 0x80(0x10)
	char                                                         pad0x90_2HXHK[0x90];                               // 0x90(0x90)
};


// Size 0x0 (Full Size[0x448] - InheritedSize[0x448]
class AIOnDemandSpawner: public AISpawner
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_ThrowableTargetPositionFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x10 (Full Size[0xc8] - InheritedSize[0xb8]
class BTTask_MoveToMovingLocation: public BTTask_AthenaMoveTo
{
public:
	float                                                        MinimumLocationMovementForRePath;                  // 0xb8(0x4)
	float                                                        MinimumTimeBeforeRePath;                           // 0xbc(0x4)
	bool                                                         IsContinuous;                                      // 0xc0(0x1)
	char                                                         pad0x7_BG3XF[0x7];                                 // 0xc1(0x7)
};


// Size 0x88 (Full Size[0xf0] - InheritedSize[0x68]
class BTDecorator_LineOfSightToTarget: public BTDecorator_BaseConditional
{
public:
	float                                                        Interval;                                          // 0x68(0x4)
	char                                                         pad0x4_9S1PR[0x4];                                 // 0x6c(0x4)
	struct BlackboardKeySelector                                 TargetActorKey;                                    // 0x70(0x28)
	bool                                                         UseTargetPosition;                                 // 0x98(0x1)
	char                                                         pad0x7_D8TYT[0x7];                                 // 0x99(0x7)
	struct BlackboardKeySelector                                 TargetPositionKey;                                 // 0xa0(0x28)
	struct Vector                                                OffsetToApplyToTargetPosition;                     // 0xc8(0xc)
	char                                                         pad0x1c_E3469[0x1c];                               // 0xd4(0x1c)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class SporeBreathAIAbilityType: public AthenaAIAbilityType
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class BurrowHealAIAbilityType: public AthenaAIAbilityType
{
public:
};


// Size 0x60 (Full Size[0x90] - InheritedSize[0x30]
class AthenaAIDamageModifierCrewProximity: public AthenaAIDamageModifierBase
{
public:
	float                                                        Radius;                                            // 0x30(0x4)
	bool                                                         UseSeparateRadiusForShips;                         // 0x34(0x1)
	char                                                         pad0x3_BPXZW[0x3];                                 // 0x35(0x3)
	float                                                        ShipRadius;                                        // 0x38(0x4)
	char                                                         pad0x4_LQ8O6[0x4];                                 // 0x3c(0x4)
	TArray<struct DamageModifierCrewProximityVulnerabilityPairs> VulnerabilityData;                                 // 0x40(0x10)
	char                                                         pad0x40_Q0ST5[0x40];                               // 0x50(0x40)
};


// Size 0x120 (Full Size[0x568] - InheritedSize[0x448]
class AIIncrementalWaveSpawner: public AISpawner
{
public:
	struct AISpawnerWave                                         SpawnedWave;                                       // 0x448(0x100)
	class NamedAIDataAsset*                                      NamedAIDataAsset;                                  // 0x548(0x8)
	char                                                         pad0x18_M2O5L[0x18];                               // 0x550(0x18)
};


// Size 0x20 (Full Size[0x50] - InheritedSize[0x30]
class AISpawnCampaignCondition: public AISpawnOverrideCondition
{
public:
	struct FName                                                 CampaignName;                                      // 0x30(0x8)
	char                                                         pad0x18_C83OG[0x18];                               // 0x38(0x18)
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_IsActorInExpectedActionState: public BTDecorator_BaseConditional
{
public:
	class UClass*                                                ExpectedActionState;                               // 0x68(0x8)
	char                                                         ExpectedTrackId;                                   // 0x70(0x1)
	char                                                         pad0x7_WFXN2[0x7];                                 // 0x71(0x7)
};


// Size 0x1c0 (Full Size[0x608] - InheritedSize[0x448]
class AIBountySpawner: public AISpawner
{
public:
	float                                                        MaximumDistanceToPerceiveOnSpawnsAfterFirstGroup;  // 0x448(0x4)
	char                                                         pad0x4_OL7WL[0x4];                                 // 0x44c(0x4)
	TArray<struct AIBountySpawnerWaveGroup>                      WaveGroups;                                        // 0x450(0x10)
	struct StringAssetReference                                  TeamColor;                                         // 0x460(0x10)
	struct WeightedProbabilityRange                              WavesPerRelocate;                                  // 0x470(0x20)
	struct WeightedProbabilityRange                              WaveSplitChance;                                   // 0x490(0x20)
	TArray<float>                                                WaveSuicideTime;                                   // 0x4b0(0x10)
	float                                                        WaveSuicideMinDist;                                // 0x4c0(0x4)
	bool                                                         ImmediatelyPerceiveTargets;                        // 0x4c4(0x1)
	bool                                                         DynamicallyCreateWaveDelays;                       // 0x4c5(0x1)
	char                                                         pad0x2_FK30R[0x2];                                 // 0x4c6(0x2)
	float                                                        DynamicMinTimeBetweenSpawns;                       // 0x4c8(0x4)
	float                                                        DynamicMaxTimeBetweenSpawns;                       // 0x4cc(0x4)
	class AICombatDialogue*                                      ActiveCombatDialogue;                              // 0x4d0(0x8)
	char                                                         pad0x28_1RHHT[0x28];                               // 0x4d8(0x28)
	TArray<class Actor*>                                         CrewMembers;                                       // 0x500(0x10)
	TArray<class Actor*>                                         NonCrewMembersInRegion;                            // 0x510(0x10)
	TArray<class PlayerController*>                              AllPlayersThatParticipated;                        // 0x520(0x10)
	TArray<class Actor*>                                         AllCurrentlyParticipatingPlayers;                  // 0x530(0x10)
	TArray<class Actor*>                                         AllCurrentlyParticipatingShips;                    // 0x540(0x10)
	class OverlapTriggerComponent*                               AudioZoneTriggerComponent;                         // 0x550(0x8)
	char                                                         pad0xb0_TEBSQ[0xb0];                               // 0x558(0xb0)
};


// Size 0x3d0 (Full Size[0xbe0] - InheritedSize[0x810]
class Fauna: public AICreatureCharacter
{
public:
	char                                                         pad0x8_FMFKY[0x8];                                 // 0x810(0x8)
	struct FText                                                 DisplayName;                                       // 0x818(0x38)
	class UClass*                                                FaunaSpecies;                                      // 0x850(0x8)
	class UClass*                                                FaunaBreed;                                        // 0x858(0x8)
	struct Vector                                                HeadOffset;                                        // 0x860(0xc)
	struct Vector                                                MountedScale;                                      // 0x86c(0xc)
	float                                                        NearToSurfaceDistance;                             // 0x878(0x4)
	float                                                        StartDrowningTimePercentage;                       // 0x87c(0x4)
	float                                                        DrowningDeathTimeMin;                              // 0x880(0x4)
	float                                                        DrowningDeathTimeMax;                              // 0x884(0x4)
	float                                                        PercentageStarvedToChangeAnimation;                // 0x888(0x4)
	float                                                        FadeOutTime;                                       // 0x88c(0x4)
	class Object*                                                HitImpactParticleSystem;                           // 0x890(0x8)
	class Object*                                                DeathParticleSystem;                               // 0x898(0x8)
	class Object*                                                PutInCrateParticleSystem;                          // 0x8a0(0x8)
	class WwiseEvent*                                            PutInCrateSoundCue;                                // 0x8a8(0x8)
	class WwiseEvent*                                            TookDamageSoundCue;                                // 0x8b0(0x8)
	class WwiseEvent*                                            AgitationStartedSoundCue;                          // 0x8b8(0x8)
	class WwiseEvent*                                            AgitationStoppedSoundCue;                          // 0x8c0(0x8)
	class WwiseEvent*                                            CalmStartedSoundCue;                               // 0x8c8(0x8)
	class WwiseEvent*                                            CalmStoppedSoundCue;                               // 0x8d0(0x8)
	class Object*                                                BreathBubblesParticleSystem;                       // 0x8d8(0x8)
	struct FName                                                 BreathBubblesSocketName;                           // 0x8e0(0x8)
	struct FName                                                 UnderwaterRTPCName;                                // 0x8e8(0x8)
	class ForceFeedbackEffect*                                   OnFeedingForceFeedbackEffect;                      // 0x8f0(0x8)
	class MountableComponent*                                    MountableComponent;                                // 0x8f8(0x8)
	class HealthComponent*                                       HealthComponent;                                   // 0x900(0x8)
	class DamageableComponent*                                   DamageableComponent;                               // 0x908(0x8)
	class PrimitiveComponent*                                    AttackHitVolume;                                   // 0x910(0x8)
	class FaunaAnimationData*                                    Animations;                                        // 0x918(0x8)
	class DitherComponent*                                       DitherComponent;                                   // 0x920(0x8)
	class LightWeightStatusEffectManagerComponent*               StatusEffectManagerComponent;                      // 0x928(0x8)
	class AthenaAIControllerParamsDataAsset*                     AIControllerParamsWhenInCrate;                     // 0x930(0x8)
	class PeriodicAINoiseEventComponent*                         PeriodicAINoiseEventComponent;                     // 0x938(0x8)
	int                                                          AgitationResponseChance;                           // 0x960(0x4)
	int                                                          AgitationResponseTestFrequencyMin;                 // 0x964(0x4)
	int                                                          AgitationResponseTestFrequencyMax;                 // 0x968(0x4)
	int                                                          MaxNumFailedAgitationResponseTests;                // 0x96c(0x4)
	float                                                        AgitationResponseVFXDelay;                         // 0x970(0x4)
	float                                                        AgitationResponseRange;                            // 0x974(0x4)
	class Object*                                                AgitationResponseParticleSystem;                   // 0x978(0x8)
	float                                                        AgitationResponseRangeParticleSystemAngle;         // 0x980(0x4)
	char                                                         AgitationCollisionChannel;                         // 0x984(0x1)
	bool                                                         StopMovementWhenAgitated;                          // 0x985(0x1)
	char                                                         pad0x2_HW51J[0x2];                                 // 0x986(0x2)
	float                                                        ApproximateSpitTravelTime;                         // 0x988(0x4)
	bool                                                         StopMovementWhenCalm;                              // 0x98c(0x1)
	char                                                         pad0x3_2M269[0x3];                                 // 0x98d(0x3)
	float                                                        TurningSpringAcceleration;                         // 0x990(0x4)
	float                                                        TurningSpringMaxVelocity;                          // 0x994(0x4)
	float                                                        TurnResetDelay;                                    // 0x998(0x4)
	struct Vector                                                PivotPointOffset;                                  // 0x99c(0xc)
	bool                                                         ShouldTurn;                                        // 0x9a8(0x1)
	char                                                         pad0x7_R721P[0x7];                                 // 0x9a9(0x7)
	class FeedingComponent*                                      FeedingComponent;                                  // 0x9b0(0x8)
	class FaunaMovementComponent*                                FaunaMovementComponent;                            // 0x9b8(0x8)
	float                                                        TimeUntilDrowned;                                  // 0x9c0(0x4)
	int                                                          RandomAnimationSeed;                               // 0x9c4(0x4)
	char                                                         pad0xc_KIY8U[0xc];                                 // 0x9c8(0xc)
	bool                                                         Drowned;                                           // 0x9d4(0x1)
	char                                                         pad0x2_GENI4[0x2];                                 // 0x9d5(0x2)
	char                                                         CratedState;                                       // 0x9d7(0x1)
	char                                                         InWaterState;                                      // 0x9d8(0x1)
	char                                                         pad0x7_T6W32[0x7];                                 // 0x9d9(0x7)
	class Actor*                                                 Crate;                                             // 0x9e0(0x8)
	class ParticleSystemComponent*                               BreathBubblesParticleSystemComponent;              // 0x9e8(0x8)
	float                                                        DrowningDeathTime;                                 // 0x9f0(0x4)
	bool                                                         IsPlayingStarvingAnim;                             // 0x9f4(0x1)
	bool                                                         IsAgitated;                                        // 0x9f5(0x1)
	bool                                                         IsCalm;                                            // 0x9f6(0x1)
	char                                                         pad0x1_WRZSO[0x1];                                 // 0x9f7(0x1)
	float                                                        TargetTurnAngle;                                   // 0x9f8(0x4)
	char                                                         pad0x14c_EKWMC[0x14c];                             // 0x9fc(0x14c)
	class VenomComponent*                                        VenomComponent;                                    // 0xb48(0x8)
	class AthenaAICharacterPathFollowingComponent*               PathFollowingComponent;                            // 0xb50(0x8)
	class Actor*                                                 CurrentShip;                                       // 0xb58(0x8)
	char                                                         pad0x80_9SSKW[0x80];                               // 0xb60(0x80)
};


// Size 0x138 (Full Size[0x580] - InheritedSize[0x448]
class AIWaveSpawner: public AISpawner
{
public:
	char                                                         pad0x8_R64YA[0x8];                                 // 0x448(0x8)
	struct AISpawnerWave                                         SpawnedWave;                                       // 0x450(0x100)
	float                                                        MinRespawnTime;                                    // 0x550(0x4)
	float                                                        MaxRespawnTime;                                    // 0x554(0x4)
	char                                                         pad0x28_XDU29[0x28];                               // 0x558(0x28)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class AISpawnerPlayerTracker: public AIPlayerTracker
{
public:
	char                                                         pad0x20_J2XW3[0x20];                               // 0x28(0x20)
};


// Size 0x0 (Full Size[0xe0] - InheritedSize[0xe0]
class BTService_UpdateFocusOnBBChangeWithOffsetFromWieldedProjectile: public BTService_UpdateFocusOnBBChange
{
public:
};


// Size 0x0 (Full Size[0xe8] - InheritedSize[0xe8]
class BTService_DoesEQSQuerySucceed: public BTService_RunEQSQuery
{
public:
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class AISpawnMatchesAnyContextCondition: public AISpawnOverrideCondition
{
public:
	TArray<class Class*>                                         Contexts;                                          // 0x30(0x10)
};


// Size 0x18 (Full Size[0x438] - InheritedSize[0x420]
class DebugDioramaCreator: public DebugAISpawnerCreator
{
public:
	class AIDioramaDesc*                                         AIDioramaDesc;                                     // 0x420(0x8)
	class AIDioramaLocationSourceComponent*                      Location;                                          // 0x428(0x8)
	class AIDioramaController*                                   AIDioramaController;                               // 0x430(0x8)
};


// Size 0x38 (Full Size[0xb0] - InheritedSize[0x78]
class SporeBreathAIAbility: public AthenaAIAbility
{
public:
	class StatusEffectOverlapZone*                               BreathActor;                                       // 0x78(0x8)
	class VFXSpawnerComponent*                                   BreathVFX;                                         // 0x80(0x8)
	char                                                         pad0x28_AQWTN[0x28];                               // 0x88(0x28)
};


// Size 0xe0 (Full Size[0x188] - InheritedSize[0xa8]
class AthenaAICharacterControllerSharedParamValuesDataAsset: public AthenaAIControllerSharedParamValuesDataAsset
{
public:
	bool                                                         OverrideUseRVOAvoidance;                           // 0xa8(0x1)
	bool                                                         UseRVOAvoidance;                                   // 0xa9(0x1)
	bool                                                         OverridePrioritiseInteractablesBeforeEnemies;      // 0xaa(0x1)
	bool                                                         PrioritiseInteractablesBeforeEnemies;              // 0xab(0x1)
	char                                                         pad0x4_OEIIU[0x4];                                 // 0xac(0x4)
	class CurveFloat*                                            DistanceInMToCannonShotHitChanceCurve;             // 0xb0(0x8)
	TArray<struct AIStrategyMovementProperties>                  AIStrategyMovementProperties;                      // 0xb8(0x10)
	TArray<struct ItemCategoryAIStrategyMovementPropertiesOverride> ItemCategoryAIStrategyMovementPropertiesOverrides; // 0xc8(0x10)
	struct AthenaAICharacterCannonTargetingParams                CannonTargetingParams;                             // 0xd8(0x10)
	TArray<struct AthenaAICharacterControllerItemCategoryProjectileEffectivenessProperties> WieldedItemProjectileEffectivenessProperties;      // 0xe8(0x10)
	TArray<struct AthenaAICharacterControllerItemCategoryNamedParams> WieldedItemOverrideNamedControllerParams;          // 0xf8(0x10)
	TArray<struct AthenaAIItemParamValue>                        NamedItemParams;                                   // 0x108(0x10)
	TArray<struct AthenaAICharacterControllerSpawnItemDescForItemCategory> SpawnItemDescForItemCategories;                    // 0x118(0x10)
	TArray<class AthenaAIAbilityParams*>                         AIAbilityParams;                                   // 0x128(0x10)
	TArray<struct AthenaAIAbilityDamageStage>                    IndividualDamageBasedAIAbilityStages;              // 0x138(0x10)
	TArray<struct AthenaAIEngageEnemyData>                       NonItemEngageOptions;                              // 0x148(0x10)
	struct StringAssetReference                                  AnimationDataOverrideAsset;                        // 0x158(0x10)
	struct StringAssetReference                                  CustomAnimationAsset;                              // 0x168(0x10)
	bool                                                         OverrideNoInitialItem;                             // 0x178(0x1)
	bool                                                         NoInitialItem;                                     // 0x179(0x1)
	bool                                                         OverrideBeginFleeing;                              // 0x17a(0x1)
	bool                                                         BeginFleeing;                                      // 0x17b(0x1)
	char                                                         pad0x4_DKAEN[0x4];                                 // 0x17c(0x4)
	class EnvQuery*                                              FleeingEQS;                                        // 0x180(0x8)
};


// Size 0x8 (Full Size[0xc0] - InheritedSize[0xb8]
class BTTask_MoveToFailOnDistanceChange: public BTTask_AthenaMoveTo
{
public:
	bool                                                         FailOnDistanceBeingLess;                           // 0xb8(0x1)
	char                                                         pad0x3_HUMAM[0x3];                                 // 0xb9(0x3)
	float                                                        FailDistance;                                      // 0xbc(0x4)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class InDioramaAIStrategyId: public AIStrategyId
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class BurrowAIAbilityType: public AthenaAIAbilityType
{
public:
};


// Size 0x80 (Full Size[0x148] - InheritedSize[0xc8]
class SporeBreathAIAbilityParams: public AthenaAIAbilityParams
{
public:
	struct AthenaAIAbilityPlayerBasedRanges                      BreathMaxDuration;                                 // 0xc8(0x10)
	float                                                        BreathContinueThresholdDistance;                   // 0xd8(0x4)
	char                                                         pad0x4_Z6L21[0x4];                                 // 0xdc(0x4)
	class UClass*                                                BreathActor;                                       // 0xe0(0x8)
	struct VFXHandlerComponentParams                             BreathVFXParams;                                   // 0xe8(0x40)
	struct Vector                                                BreathCollisionVolumeSize;                         // 0x128(0xc)
	float                                                        BreathCollisionForwardOffset;                      // 0x134(0x4)
	float                                                        BreathStartDelay;                                  // 0x138(0x4)
	char                                                         pad0x4_JERX6[0x4];                                 // 0x13c(0x4)
	class UClass*                                                VfxSpawner;                                        // 0x140(0x8)
};


// Size 0x38 (Full Size[0xb8] - InheritedSize[0x80]
class BTDecorator_CompareFloatValueBase: public BTDecorator_CompareBlackboardValues
{
public:
	char                                                         Comparison;                                        // 0x80(0x1)
	char                                                         pad0x7_W8WDU[0x7];                                 // 0x81(0x7)
	struct AIDataProviderFloatValue                              Value;                                             // 0x88(0x30)
};


// Size 0x8 (Full Size[0x38] - InheritedSize[0x30]
class StaticAISpawnCondition: public AISpawnOverrideCondition
{
public:
	bool                                                         ShouldApplyOverride;                               // 0x30(0x1)
	char                                                         pad0x7_1L256[0x7];                                 // 0x31(0x7)
};


// Size 0x88 (Full Size[0x108] - InheritedSize[0x80]
class BTDecorator_TargetInRange: public BTDecorator_CompareBlackboardValues
{
public:
	struct AIDataProviderFloatValue                              EnterRange;                                        // 0x80(0x30)
	struct AIDataProviderFloatValue                              ExitRange;                                         // 0xb0(0x30)
	struct BlackboardKeySelector                                 TargetKey;                                         // 0xe0(0x28)
};


// Size 0x0 (Full Size[0x48] - InheritedSize[0x48]
class BaseSpawnBlockingBehaviourStrategy: public SpawnerBehaviourStrategy
{
public:
};


// Size 0x120 (Full Size[0xc70] - InheritedSize[0xb50]
class DebugAIManagerService: public AIManagerService
{
public:
	char                                                         pad0x110_FE8DH[0x110];                             // 0xb50(0x110)
	TArray<class Class*>                                         BlockedAIAbilities;                                // 0xc60(0x10)
};


// Size 0x200 (Full Size[0x248] - InheritedSize[0x48]
class AIProximityPlayerTracker: public AISpawnerPlayerTracker
{
public:
	char                                                         pad0x200_LFIE3[0x200];                             // 0x48(0x200)
};


// Size 0x10 (Full Size[0xd0] - InheritedSize[0xc0]
class BTTask_MoveToFailOnDistanceToSeenActors: public BTTask_MoveToFailOnDistanceChange
{
public:
	char                                                         pad0x10_LBGZ9[0x10];                               // 0xc0(0x10)
};


// Size 0x260 (Full Size[0xbd0] - InheritedSize[0x970]
class AthenaAICharacterController: public AthenaAIController
{
public:
	char                                                         pad0x8_XCCKQ[0x8];                                 // 0x970(0x8)
	class AthenaAIItemParamsDataAsset*                           ItemParamsDataAsset;                               // 0x978(0x8)
	class LoadoutAsset*                                          FallbackLoadoutIfAllEngageItemsDropped;            // 0x980(0x8)
	float                                                        ControlRotationInterpSpeed;                        // 0x988(0x4)
	bool                                                         ControlRotationUseConstantInterp;                  // 0x98c(0x1)
	bool                                                         FaceTargetDisabled;                                // 0x98d(0x1)
	char                                                         pad0x2_UG620[0x2];                                 // 0x98e(0x2)
	float                                                        MinTurnAngleToPlayTurnAnim;                        // 0x990(0x4)
	char                                                         pad0x14_3BASO[0x14];                               // 0x994(0x14)
	class AthenaAICharacterControllerParamsDataAsset*            CharacterParamsDataAsset;                          // 0x9a8(0x8)
	char                                                         pad0x90_K5B9Q[0x90];                               // 0x9b0(0x90)
	TArray<struct AthenaAICharacterControllerSpawnItemDescForItemCategory> SpawnItemDescForItemCategories;                    // 0xa40(0x10)
	TArray<class AthenaAIAbilityParams*>                         AIAbilityParams;                                   // 0xa50(0x10)
	TArray<struct AthenaAIAbilityDamageStage>                    AIAbilityStageParams;                              // 0xa60(0x10)
	TArray<struct AthenaAIEngageEnemyData>                       NonItemEngageOptions;                              // 0xa70(0x10)
	class CurveFloat*                                            DistanceInMToCannonShotHitChanceCurve;             // 0xa80(0x8)
	char                                                         pad0x148_F2QMB[0x148];                             // 0xa88(0x148)
};


// Size 0x30 (Full Size[0x170] - InheritedSize[0x140]
class BurrowHealAIAbilityParams: public BurrowAIAbilityParams
{
public:
	class UClass*                                                AllyTypeToHeal;                                    // 0x140(0x8)
	float                                                        HealDuration;                                      // 0x148(0x4)
	float                                                        RadiusForValidTargets;                             // 0x14c(0x4)
	int                                                          NumberOfTargetsToHeal;                             // 0x150(0x4)
	char                                                         pad0x4_NMOV9[0x4];                                 // 0x154(0x4)
	struct Status                                                StatusToApplyOnHeal;                               // 0x158(0x18)
};


// Size 0x10 (Full Size[0x150] - InheritedSize[0x140]
class BurrowHealAIAbility: public BurrowAIAbility
{
public:
	char                                                         pad0x10_O5929[0x10];                               // 0x140(0x10)
};


// Size 0x28 (Full Size[0x130] - InheritedSize[0x108]
class BTDecorator_TargetInRangeOfPoint: public BTDecorator_TargetInRange
{
public:
	struct BlackboardKeySelector                                 ReferencePointKey;                                 // 0x108(0x28)
};


// Size 0x38 (Full Size[0x80] - InheritedSize[0x48]
class FilterFirstPlayerEnterPlayerTrackerDecorator: public AISpawnerPlayerTracker
{
public:
	char                                                         pad0x38_2AWND[0x38];                               // 0x48(0x38)
};


// Size 0xe0 (Full Size[0x740] - InheritedSize[0x660]
class AIBoobyTrapSpawner: public AIPerPlayerSpawner
{
public:
	int                                                          NumberOfWavesToSpawn;                              // 0x660(0x4)
	char                                                         pad0x4_5R1Q2[0x4];                                 // 0x664(0x4)
	class WwiseEvent*                                            NewWaveSpawnSfx;                                   // 0x668(0x8)
	float                                                        NewWaveSpawnSfxTriggerRadius;                      // 0x670(0x4)
	char                                                         pad0x4_AC43I[0x4];                                 // 0x674(0x4)
	TArray<class Class*>                                         ShowNameplatesFor;                                 // 0x678(0x10)
	class NamedAIDataAsset*                                      NamedAIDataAsset;                                  // 0x688(0x8)
	class Actor*                                                 ActorToTrack;                                      // 0x690(0x8)
	char                                                         pad0xa8_8CR3Q[0xa8];                               // 0x698(0xa8)
};


// Size 0x28 (Full Size[0xe8] - InheritedSize[0xc0]
class BTTask_MoveToFailOnDistanceToTargetChanged: public BTTask_MoveToFailOnDistanceChange
{
public:
	struct BlackboardKeySelector                                 TargetBlackboardKey;                               // 0xc0(0x28)
};


// Size 0x10 (Full Size[0x58] - InheritedSize[0x48]
class SirenEncounterSpawnBlockingBehaviourStrategy: public BaseSpawnBlockingBehaviourStrategy
{
public:
	float                                                        ChanceToSpawn;                                     // 0x48(0x4)
	char                                                         pad0xc_2PNSH[0xc];                                 // 0x4c(0xc)
};


// Size 0x10 (Full Size[0xf8] - InheritedSize[0xe8]
class BTDecorator_TestRangeOfSeenActors: public BTDecorator_TestRange
{
public:
	char                                                         pad0x10_QC59B[0x10];                               // 0xe8(0x10)
};


// Size 0x28 (Full Size[0xe0] - InheritedSize[0xb8]
class BTDecorator_CompareBlackboardActorSpeed: public BTDecorator_CompareFloatValueBase
{
public:
	struct BlackboardKeySelector                                 BlackboardKey;                                     // 0xb8(0x28)
};


// Size 0x28 (Full Size[0xe0] - InheritedSize[0xb8]
class BTDecorator_CompareBlackboardFloatValue: public BTDecorator_CompareFloatValueBase
{
public:
	struct BlackboardKeySelector                                 BlackboardKey;                                     // 0xb8(0x28)
};


// Size 0x20 (Full Size[0x5a0] - InheritedSize[0x580]
class AIEscalatingWaveSpawner: public AIWaveSpawner
{
public:
	TArray<struct EscalatingWave>                                EscalatingWaves;                                   // 0x580(0x10)
	char                                                         pad0x10_JAVO0[0x10];                               // 0x590(0x10)
};


// Size 0x1c8 (Full Size[0xb38] - InheritedSize[0x970]
class AthenaFaunaAIController: public AthenaAIController
{
public:
	float                                                        MaxTimeBetweenThreatDetermination;                 // 0x970(0x4)
	float                                                        DefaultControlRotationInterpSpeed;                 // 0x974(0x4)
	TArray<struct AIStategyControllerMovementMod>                StrategyControllerMovementMods;                    // 0x978(0x10)
	float                                                        MinAgentHalfHeightPctOverride;                     // 0x988(0x4)
	char                                                         pad0x4_H2IW1[0x4];                                 // 0x98c(0x4)
	class FaunaAIContollerParamsDataAsset*                       FaunaDataAsset;                                    // 0x990(0x8)
	class Actor*                                                 CarrierActor;                                      // 0x998(0x8)
	char                                                         pad0xc8_RBYQL[0xc8];                               // 0x9a0(0xc8)
	class Actor*                                                 HighestDangerActor;                                // 0xa68(0x8)
	char                                                         pad0x98_AQNJM[0x98];                               // 0xa70(0x98)
	class FaunaAIPlayerTracker*                                  PlayerTracker;                                     // 0xb08(0x8)
	char                                                         pad0x28_BTLM4[0x28];                               // 0xb10(0x28)
};


// Size 0x0 (Full Size[0x40] - InheritedSize[0x40]
class AISpawnOrCondition: public AISpawnComplexCondition
{
public:
};


// Size 0x100 (Full Size[0xa70] - InheritedSize[0x970]
class AthenaSwimmingAIController: public AthenaAIController
{
public:
	class SwimmingPathFollowingComponent*                        SwimmingPathFollowingComponent;                    // 0x970(0x8)
	bool                                                         IgnoreTargetsOutOfWater;                           // 0x978(0x1)
	char                                                         pad0x7_XN85N[0x7];                                 // 0x979(0x7)
	class CurveFloat*                                            DistOfAttackerVsChanceToPursue;                    // 0x980(0x8)
	TArray<struct Name>                                          TimersToZeroIfStartingRevengeAttack;               // 0x988(0x10)
	struct FName                                                 DespawnRequiredBlackboardKey;                      // 0x998(0x8)
	struct FName                                                 DespawnRequiredReasonBlackboardKey;                // 0x9a0(0x8)
	float                                                        PathingFailedWeight;                               // 0x9a8(0x4)
	float                                                        PathingFailedThresholdToDespawn;                   // 0x9ac(0x4)
	char                                                         pad0xc0_XUVS9[0xc0];                               // 0x9b0(0xc0)
};


// Size 0x0 (Full Size[0xb8] - InheritedSize[0xb8]
class BTDecorator_CompareCurrentHealth: public BTDecorator_CompareFloatValueBase
{
public:
};


// Size 0x0 (Full Size[0x40] - InheritedSize[0x40]
class AISpawnAndCondition: public AISpawnComplexCondition
{
public:
};


