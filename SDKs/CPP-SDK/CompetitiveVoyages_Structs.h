#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x1
struct OnCompetitiveVoyageMainVoyageStopped
{
public:
	char                                                         pad0x1_5UG9A[0x1];                                 // 0x0(0x1)
};


// Size 0x18
struct OnCompetitiveVoyageItemRemoved
{
public:
	class Actor*                                                 RemovedItem;                                       // 0x0(0x8)
	struct Guid                                                  CompetitiveVoyageEventId;                          // 0x8(0x10)
};


// Size 0x30
struct CompetitiveVoyagesEventCompletedTelemetryEvent
{
public:
	struct Guid                                                  EventId;                                           // 0x0(0x10)
	int                                                          NumParticipatingCrews;                             // 0x10(0x4)
	int                                                          NumMainVoyageCrews;                                // 0x14(0x4)
	int                                                          NumScuttledCrews;                                  // 0x18(0x4)
	int                                                          NumOptedOutCrews;                                  // 0x1c(0x4)
	struct FString                                               GameEventType;                                     // 0x20(0x10)
};


// Size 0x18
struct PhasedMarkerItem
{
public:
	char                                                         pad0x18_GOIA3[0x18];                               // 0x0(0x18)
};


// Size 0x20
struct CompetitiveVoyagesEventCreatedTelemetryEvent
{
public:
	struct Guid                                                  EventId;                                           // 0x0(0x10)
	struct FString                                               GameEventType;                                     // 0x10(0x10)
};


// Size 0x14
struct HeistVaultMigrationTelemetryEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
	bool                                                         MigratingInVaultIsClaimed;                         // 0x10(0x1)
	bool                                                         ExistingVaultIsClaimed;                            // 0x11(0x1)
	char                                                         pad0x2_QBTRQ[0x2];                                 // 0x12(0x2)
};


// Size 0x1
struct HeistVaultResetTelemetryEvent
{
public:
	char                                                         pad0x1_43EFA[0x1];                                 // 0x0(0x1)
};


// Size 0x1c
struct CompetitiveVoyagesRespawnPOIData
{
public:
	float                                                        MinPreferredDistanceFromPOI;                       // 0x0(0x4)
	float                                                        MaxPreferredDistanceFromPOI;                       // 0x4(0x4)
	float                                                        MinBonusForPreferredDistance;                      // 0x8(0x4)
	float                                                        MaxBonusForPreferredDistance;                      // 0xc(0x4)
	float                                                        ScorePenaltyForEachMeterAwayFromVoyageItem;        // 0x10(0x4)
	float                                                        ResourceOrFeatureMultiplier;                       // 0x14(0x4)
	float                                                        OutpostMultiplier;                                 // 0x18(0x4)
};


// Size 0x10
struct HeistVaultClaimedTelemetryEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
};


// Size 0x10
struct HeistVaultTreasureSpawnedTelemetryEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
};


// Size 0x30
struct CompetitiveVoyagesItemUsageTelemetryEvent
{
public:
	struct Guid                                                  EventId;                                           // 0x0(0x10)
	struct FName                                                 ClassName;                                         // 0x10(0x8)
	int                                                          NumTimesSwappedHands;                              // 0x18(0x4)
	char                                                         pad0x4_CQ64K[0x4];                                 // 0x1c(0x4)
	struct FString                                               GameEventType;                                     // 0x20(0x10)
};


// Size 0x28
struct OnCompetitiveVoyageCrewRespawned
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Vector                                                SinkLocation;                                      // 0x10(0xc)
	struct Vector                                                SpawnLocation;                                     // 0x1c(0xc)
};


// Size 0x10
struct OnCompetitiveVoyageCrewOptInEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x88
struct CompetitiveVoyagesRespawnDebugMapData
{
public:
	char                                                         pad0x88_5GLFG[0x88];                               // 0x0(0x88)
};


// Size 0x1
struct OnCompetitiveVoyageMainVoyageStarted
{
public:
	char                                                         pad0x1_66ZNI[0x1];                                 // 0x0(0x1)
};


// Size 0x10
struct OnCompetitiveVoyageOptOutVotePassed
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x48
struct CompetitiveVoyagesCrewShipRespawnTelemetryEvent
{
public:
	struct Guid                                                  EventId;                                           // 0x0(0x10)
	struct Guid                                                  CrewId;                                            // 0x10(0x10)
	struct Vector                                                SinkLocation;                                      // 0x20(0xc)
	struct Vector                                                SpawnLocation;                                     // 0x2c(0xc)
	struct FString                                               GameEventType;                                     // 0x38(0x10)
};


// Size 0xc
struct ShipSpeedCurseModifyingValues
{
public:
	float                                                        SloopSpeedCurseModifier;                           // 0x0(0x4)
	float                                                        BrigantineSpeedCurseModifier;                      // 0x4(0x4)
	float                                                        GalleonSpeedCurseModifier;                         // 0x8(0x4)
};


// Size 0x10
struct HeistVaultUnclaimedTelemetryEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
};


// Size 0x14
struct CompetitiveVoyagesRespawnSpawnScoreData
{
public:
	char                                                         pad0x14_O6FD7[0x14];                               // 0x0(0x14)
};


// Size 0x48
struct CompetitiveVoyageItemData
{
public:
	char                                                         pad0x8_QM9FL[0x8];                                 // 0x0(0x8)
	struct Guid                                                  FirstHoldingCrewId;                                // 0x8(0x10)
	struct Guid                                                  PreviousHoldingCrewId;                             // 0x18(0x10)
	struct Guid                                                  CurrentHoldingCrewId;                              // 0x28(0x10)
	int                                                          NumTimesSwappedHands;                              // 0x38(0x4)
	char                                                         pad0xc_8W3ZW[0xc];                                 // 0x3c(0xc)
};


// Size 0x28
struct MigratingEventTelemetryData
{
public:
	struct Guid                                                  EventId;                                           // 0x0(0x10)
	int                                                          NumMigratingCrews;                                 // 0x10(0x4)
	char                                                         pad0x4_WUXLT[0x4];                                 // 0x14(0x4)
	struct FString                                               GameEventType;                                     // 0x18(0x10)
};


// Size 0x18
struct CompetitiveVoyageEventItem
{
public:
	char                                                         pad0x8_253PP[0x8];                                 // 0x0(0x8)
	struct Guid                                                  EventId;                                           // 0x8(0x10)
};


// Size 0x18
struct OnCompetitiveVoyageItemAdded
{
public:
	class Actor*                                                 AddedItem;                                         // 0x0(0x8)
	struct Guid                                                  CompetitiveVoyageEventId;                          // 0x8(0x10)
};


// Size 0x18
struct CompetitiveVoyagesMigrationTelemetryEvent
{
public:
	TArray<struct MigratingEventTelemetryData>                   MigrationEvents;                                   // 0x0(0x10)
	int                                                          NumOptInCrews;                                     // 0x10(0x4)
	char                                                         pad0x4_UP1FP[0x4];                                 // 0x14(0x4)
};


// Size 0x50
struct CompetitiveVoyagesRespawnParams
{
public:
	float                                                        ScorePenaltyForEachMeterAwayFromShipwreck;         // 0x0(0x4)
	float                                                        MinRespawnLocDistanceFromSunkShip;                 // 0x4(0x4)
	float                                                        MinScorePenaltyForEnemyShipProximity;              // 0x8(0x4)
	float                                                        MaxScorePenaltyForEnemyShipProximity;              // 0xc(0x4)
	float                                                        MinDistanceFromEnemyShipToApplyPenalty;            // 0x10(0x4)
	float                                                        MaxDistanceFromEnemyShipToApplyPenalty;            // 0x14(0x4)
	struct CompetitiveVoyagesRespawnPOIData                      TreasureHuntPOIData;                               // 0x18(0x1c)
	struct CompetitiveVoyagesRespawnPOIData                      HandInPOIData;                                     // 0x34(0x1c)
};


// Size 0x108
struct CompetitiveVoyagesRespawnConfig
{
public:
	struct CompetitiveVoyagesRespawnParams                       ScuttleRespawnParams;                              // 0x0(0x50)
	struct CompetitiveVoyagesRespawnParams                       NormalRespawnParams;                               // 0x50(0x50)
	bool                                                         GenerateRespawnVisualizationImages;                // 0xa0(0x1)
	char                                                         pad0x3_9A3C9[0x3];                                 // 0xa1(0x3)
	int                                                          NumDebugGenerations;                               // 0xa4(0x4)
	struct Vector2D                                              MapMin;                                            // 0xa8(0x8)
	struct Vector2D                                              MapMax;                                            // 0xb0(0x8)
	struct CompetitiveVoyagesRespawnParams                       RespawnParamsToUse;                                // 0xb8(0x50)
};


