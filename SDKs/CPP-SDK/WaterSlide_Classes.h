// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x18 (Full Size[0x3e0] - InheritedSize[0x3c8]
class Ride: public Actor
{
public:
	char                                                         pad0x8_LAOH4[0x8];                                 // 0x3c8(0x8)
	Class SplineComponent*                                       SplineComponent;                                   // 0x3d0(0x8)
	Class SceneComponent*                                        Root;                                              // 0x3d8(0x8)
};


// Size 0x28 (Full Size[0x50] - InheritedSize[0x28]
class WaterSlideParamsDataAsset: public DataAsset
{
public:
	Struct WaterSlideParams                                      WaterSlideParams;                                  // 0x28(0x28)
};


// Size 0x40 (Full Size[0x420] - InheritedSize[0x3e0]
class WaterSlide: public Ride
{
public:
	Class WaterSlideParamsDataAsset*                             WaterSlideParamsDataAsset;                         // 0x3e0(0x8)
	Class PrimitiveComponent*                                    EntranceCollisionComponent;                        // 0x3e8(0x8)
	Class WaterSlide*                                            ContinuedWaterSlideRoute;                          // 0x3f0(0x8)
	Class WaterSlide*                                            LeftWaterSlideRoute;                               // 0x3f8(0x8)
	Class WaterSlide*                                            RightWaterSlideRoute;                              // 0x400(0x8)
	bool                                                         IsEndOfSlide;                                      // 0x408(0x1)
	char                                                         pad0x3_IOQ7V[0x3];                                 // 0x409(0x3)
	Struct Vector                                                EndOfSlideLaunchForce;                             // 0x40c(0xc)
	Class WaterSlideAudioParams*                                 WaterSlideAudioParams;                             // 0x418(0x8)
};


// Size 0x350 (Full Size[0x730] - InheritedSize[0x3e0]
class Zipline: public Ride
{
public:
	byte                                                         ZiplineStartPointConfig;                           // 0x3e0(0x1)
	bool                                                         ShouldLaunchPlayer;                                // 0x3e1(0x1)
	char                                                         pad0x2_OZ6ZD[0x2];                                 // 0x3e2(0x2)
	float                                                        LaunchForceMultiplier;                             // 0x3e4(0x4)
	Struct ZiplineFeelParameters                                 ZiplineFeelParameters;                             // 0x3e8(0x310)
	Class ZiplineFXParams*                                       ZiplineFXParams;                                   // 0x6f8(0x8)
	char                                                         pad0x8_PEJFC[0x8];                                 // 0x700(0x8)
	Class StaticMesh*                                            ZiplineGeometry;                                   // 0x708(0x8)
	Class StaticMesh*                                            ZiplineTrolleyGeometry;                            // 0x710(0x8)
	Class MaterialInterface*                                     ZiplineGeometryMaterialOverride;                   // 0x718(0x8)
	struct FName                                                 ZiplineGeometryMaterialScalerParameterName;        // 0x720(0x8)
	char                                                         pad0x8_XHHLK[0x8];                                 // 0x728(0x8)
};


// Size 0x38 (Full Size[0x768] - InheritedSize[0x730]
class InteractableZipline: public Zipline
{
public:
	Class InteractableComponentWithActionRules*                  ZiplineStartInteractionPoint;                      // 0x730(0x8)
	Class InteractableComponentWithActionRules*                  ZiplineEndInteractionPoint;                        // 0x738(0x8)
	class                                                        PressedNotificationInputId;                        // 0x740(0x8)
	class                                                        ReleasedNotificationInputId;                       // 0x748(0x8)
	Struct Vector2D                                              AttachPointLocationOffset;                         // 0x750(0x8)
	float                                                        AttachPointSize;                                   // 0x758(0x4)
	float                                                        HoldTime;                                          // 0x75c(0x4)
	class                                                        OptionalItem;                                      // 0x760(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class RidePlayerInterface: public Interface
{
public:
};


// Size 0x68 (Full Size[0x148] - InheritedSize[0xe0]
class RidePlayerComponent: public DoubleIntentComponent
{
public:
	char                                                         pad0x8_J0ROO[0x8];                                 // 0xe0(0x8)
	Class ParticleSystemComponent*                               PlayerWaterSlideVFXComponent;                      // 0xe8(0x8)
	Class ParticleSystem*                                        PlayerWaterSlideVFX;                               // 0xf0(0x8)
	float                                                        PlayerWaterSlideVFXSpawnLocationZOffset;           // 0xf8(0x4)
	char                                                         pad0x4_TJZTR[0x4];                                 // 0xfc(0x4)
	Class ParticleSystemComponent*                               PlayerZiplineWindVFXComponent;                     // 0x100(0x8)
	Class ParticleSystemComponent*                               PlayerZiplineTrailVFXComponent;                    // 0x108(0x8)
	Class ParticleSystem*                                        PlayerZiplineTrailVFX;                             // 0x110(0x8)
	Class ParticleSystem*                                        PlayerZiplineWindVFX;                              // 0x118(0x8)
	Struct Vector                                                PlayerZiplineTrailVFXSpawnLocation;                // 0x120(0xc)
	char                                                         pad0x14_645CP[0x14];                               // 0x12c(0x14)
	Class Ride*                                                  CurrentRide;                                       // 0x140(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class RideTransitionActionStateId: public ActionStateId
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class WaterSlideActionStateId: public ActionStateId
{
public:
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class WaterSlideAudioParams: public DataAsset
{
public:
	Class WwiseEvent*                                            WaterSlideStart;                                   // 0x28(0x8)
	Class WwiseEvent*                                            WaterSlideEnd;                                     // 0x30(0x8)
	Class WwiseEvent*                                            WaterSlideIsEndOneShot;                            // 0x38(0x8)
	Class WwiseEvent*                                            WaterSlideChangeForkOneShot;                       // 0x40(0x8)
	struct FName                                                 PlayerSpeedOnWaterSlideRTPC;                       // 0x48(0x8)
	float                                                        PlayerSpeedThatMapsToOne;                          // 0x50(0x4)
	float                                                        PlayerSpeedThatMapsToZero;                         // 0x54(0x4)
};


// Size 0x10 (Full Size[0x2b0] - InheritedSize[0x2a0]
class WaterSlideInputComponent: public LookAtOffsetInputComponent
{
public:
};


// Size 0x0 (Full Size[0x38] - InheritedSize[0x38]
class WaterSlideVeeringAnalogInputId: public AnalogInputId
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ZiplineActionStateId: public ActionStateId
{
public:
};


// Size 0x0 (Full Size[0x850] - InheritedSize[0x850]
class ZiplineEditorComponent: public CameraComponent
{
public:
};


// Size 0x48 (Full Size[0x70] - InheritedSize[0x28]
class ZiplineFXParams: public DataAsset
{
public:
	Class WwiseEvent*                                            ZiplineStartSFX;                                   // 0x28(0x8)
	Class WwiseEvent*                                            ZiplineAdditiveOneShotSFX;                         // 0x30(0x8)
	Class WwiseEvent*                                            ZiplineLoopStartSFX;                               // 0x38(0x8)
	Class WwiseEvent*                                            ZiplineEndSFX;                                     // 0x40(0x8)
	Class WwiseEvent*                                            ZiplineLoopEndSFX;                                 // 0x48(0x8)
	struct FName                                                 PlayerSpeedOnZiplineRTPC;                          // 0x50(0x8)
	Class ParticleSystem*                                        PlayerZiplineWindVFX;                              // 0x58(0x8)
	Class ParticleSystem*                                        PlayerZiplineTrailVFX;                             // 0x60(0x8)
	Struct Vector2D                                              SpawnParticleSpeedThreshold;                       // 0x68(0x8)
};


// Size 0x8 (Full Size[0x2a8] - InheritedSize[0x2a0]
class ZiplineInputComponent: public LookAtOffsetInputComponent
{
public:
};


}