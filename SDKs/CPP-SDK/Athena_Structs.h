#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x28
struct HitRegSnapshotDisagreementTelemetryEntry
{
public:
	int                                                          SubAttackGroupId;                                  // 0x0(0x4)
	struct FString                                               ServerHitActor;                                    // 0x8(0x10)
	struct FString                                               AttackingClientHitActor;                           // 0x18(0x10)
};


// Size 0x10
struct EventPlayerCharacterTeleported
{
public:
	class Actor*                                                 AthenaCharacter;                                   // 0x0(0x8)
	bool                                                         IsOnFerry;                                         // 0x8(0x1)
};


// Size 0x8
struct ArenaSuspensionState
{
public:
	bool                                                         IsUserSuspended;                                   // 0x0(0x1)
	int                                                          SuspensionTimeRemainingInMinutes;                  // 0x4(0x4)
};


// Size 0x20
struct EmblemUnlockedEvent
{
public:
	struct Guid                                                  EmblemId;                                          // 0x0(0x10)
	struct FString                                               Sig;                                               // 0x10(0x10)
};


// Size 0x40
struct ContestLeaderboardEntry
{
public:
	struct FString                                               CrewIconPath;                                      // 0x18(0x10)
	bool                                                         IsMyCrew;                                          // 0x28(0x1)
	int                                                          Amount;                                            // 0x2c(0x4)
	struct FString                                               DisplayAmount;                                     // 0x30(0x10)
};


// Size 0x18
struct BrazierExtinguishCrewSizeTimes
{
public:
	int                                                          CrewSize;                                          // 0x0(0x4)
	TArray<float>                                                ExtinguishTimes;                                   // 0x8(0x10)
};


// Size 0x18
struct TrackedActorTelemetryFragment
{
public:
	struct JsonObjectWrapper                                     Json;                                              // 0x0(0x18)
};


// Size 0x8
struct EventMovedByActorStart
{
public:
	class Actor*                                                 MovementInstigator;                                // 0x0(0x8)
};


// Size 0x10
struct RequestEmblemProgressFailedEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
};


// Size 0x1
struct NavigateToMenuEvent
{
public:
	char                                                         Action;                                            // 0x0(0x1)
};


// Size 0x28
struct QuestInfo
{
public:
	struct Guid                                                  QuestId;                                           // 0x0(0x10)
	struct FString                                               Name;                                              // 0x10(0x10)
	char                                                         Status;                                            // 0x20(0x1)
	char                                                         Type;                                              // 0x21(0x1)
};


// Size 0x60
struct ThrowGrenadeMulticastRpc
{
public:
	class Actor*                                                 Wielder;                                           // 0x18(0x8)
	class Grenade*                                               Grenade;                                           // 0x20(0x8)
	struct Vector                                                ServerThrowLocation;                               // 0x28(0xc)
	struct Vector                                                LaunchVelocity;                                    // 0x34(0xc)
	class UClass*                                                ThrownProjectileType;                              // 0x40(0x8)
	float                                                        FirstPersonScaleModifier;                          // 0x48(0x4)
	float                                                        ProjectileGravityScale;                            // 0x4c(0x4)
	struct Vector                                                FirstPersonThrowOffset;                            // 0x50(0xc)
	bool                                                         UseVisualThrowOffset;                              // 0x5c(0x1)
};


// Size 0x10
struct LobbyCreationRequestModel
{
public:
	struct FString                                               SessionName;                                       // 0x0(0x10)
};


// Size 0x14
struct LinearTransitionLadderActionStateParams
{
public:
	float                                                        Duration;                                          // 0x10(0x4)
};


// Size 0x1
struct UseSingleStickChangedEvent
{
public:
	char                                                         UseSingleStick;                                    // 0x0(0x1)
};


// Size 0x50
struct AthenaAnimationJumpingThirdPersonAnimData
{
public:
	TArray<class BlendSpace*>                                    JumpStart;                                         // 0x0(0x10)
	TArray<class BlendSpace*>                                    JumpCycle;                                         // 0x10(0x10)
	TArray<class BlendSpace*>                                    PreImpact;                                         // 0x20(0x10)
	TArray<class BlendSpace*>                                    LandLight;                                         // 0x30(0x10)
	TArray<class BlendSpace*>                                    LandHeavy;                                         // 0x40(0x10)
};


// Size 0x10
struct PlayerNamesFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x8
struct ServerPopulationTelemetryFragment
{
public:
	int                                                          NumberOfPlayers;                                   // 0x0(0x4)
	int                                                          NumberOfCrews;                                     // 0x4(0x4)
};


// Size 0x18
struct PlayersGuildRewardUnlockedActivityMessageModel
{
public:
	struct FString                                               EntitlementId;                                     // 0x0(0x10)
	uint32                                                       RewardLevel;                                       // 0x10(0x4)
	uint32                                                       RewardDistinctionLevel;                            // 0x14(0x4)
};


// Size 0x30
struct EventCargoRunCrateDelivered
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  PickUpId;                                          // 0x10(0x10)
	class BootyItemInfo*                                         ItemInfo;                                          // 0x20(0x8)
	struct FName                                                 CompanyAffiliation;                                // 0x28(0x8)
};


// Size 0x8
struct EventConcealingObjectUsed
{
public:
	class Actor*                                                 UsingActor;                                        // 0x0(0x8)
};


// Size 0x20
struct ServerCameraFadeCompleteAckNetworkEvent
{
public:
	char                                                         Reason;                                            // 0x18(0x1)
};


// Size 0x18
struct EmblemDefinitionActiveDuration
{
public:
	bool                                                         HasActiveDuration;                                 // 0x0(0x1)
	struct DateTime                                              ActiveFrom;                                        // 0x8(0x8)
	struct DateTime                                              ActiveUntil;                                       // 0x10(0x8)
};


// Size 0xc0
struct BalanceableWalkwayAnimation
{
public:
	class Actor*                                                 CachedPlayerCharacter;                             // 0x0(0x8)
};


// Size 0x20
struct UniversalDescriptionParagraph
{
public:
	struct FString                                               Heading;                                           // 0x0(0x10)
	TArray<String>                                               Sentences;                                         // 0x10(0x10)
};


// Size 0x18
struct FaunaAnimationStartledStructure
{
public:
	class AnimSequence*                                          StartledLowAgitation;                              // 0x0(0x8)
	class AnimSequence*                                          StartledHighAgitation;                             // 0x8(0x8)
	class AnimSequence*                                          StartledOneShot;                                   // 0x10(0x8)
};


// Size 0x18
struct AthenaAnimationPlayingEquipAnimations
{
public:
	class AnimSequence*                                          Equip;                                             // 0x0(0x8)
	class BlendSpace*                                            EquipAsBlendSpace;                                 // 0x8(0x8)
	class BlendSpace*                                            EquipSwimming;                                     // 0x10(0x8)
};


// Size 0x20
struct SkeletonAudioEvents
{
public:
	class WwiseEvent*                                            PlayLoop;                                          // 0x0(0x8)
	class WwiseEvent*                                            StopLoop;                                          // 0x8(0x8)
	class WwiseEvent*                                            StartOneShot;                                      // 0x10(0x8)
	class WwiseEvent*                                            LeaveOneShot;                                      // 0x18(0x8)
};


// Size 0x10
struct ItemProxyImpactVfxParams
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	class Object*                                                Particles;                                         // 0x8(0x8)
};


// Size 0x40
struct HealthChange
{
public:
	float                                                        From;                                              // 0x0(0x4)
	float                                                        To;                                                // 0x4(0x4)
	char                                                         Reason;                                            // 0x8(0x1)
	class Actor*                                                 DirectInstigator;                                  // 0x10(0x8)
	class Actor*                                                 RootInstigator;                                    // 0x18(0x8)
	struct Guid                                                  IncidentId;                                        // 0x20(0x10)
	struct Vector_NetQuantize10                                  DirectInstigatorLocation;                          // 0x30(0xc)
};


// Size 0x8
struct VoyageLocationDistance
{
public:
	float                                                        Min;                                               // 0x0(0x4)
	float                                                        Max;                                               // 0x4(0x4)
};


// Size 0x10
struct GuildSessionFailedTelemetryEvent
{
public:
	struct FString                                               Error;                                             // 0x0(0x10)
};


// Size 0x10
struct CrewAttackedByGameEventEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0xa0
struct AimSensitivityRuntimeData
{
public:
	map                                                          MouseData;                                         // 0x0(0x50)
	map                                                          ControllerData;                                    // 0x50(0x50)
};


// Size 0x10
struct ApplyDamageGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	float                                                        Damage;                                            // 0x4(0x4)
	int                                                          InstigatorId;                                      // 0x8(0x4)
	char                                                         Reason;                                            // 0xc(0x1)
};


// Size 0x30
struct LandmarkSoundPlayedEvent
{
public:
	int                                                          PlayingId;                                         // 0x0(0x4)
	class WwiseEvent*                                            AudioEvent;                                        // 0x8(0x8)
	struct WwiseEmitter                                          Emitter;                                           // 0x10(0x20)
};


// Size 0x20
struct ReapersTributeShipCrewTributeChangedBoxedRpc
{
public:
	int                                                          NewTributeCount;                                   // 0x18(0x4)
	int                                                          OldTributeCount;                                   // 0x1c(0x4)
};


// Size 0x28
struct PlayerPlatformInfoResponse
{
public:
	char                                                         Platform;                                          // 0x0(0x1)
	struct FString                                               PlatformUsername;                                  // 0x8(0x10)
	struct FString                                               PlatformUserId;                                    // 0x18(0x10)
};


// Size 0x8
struct UpdateSnapshotVersionData
{
public:
	struct FName                                                 Version;                                           // 0x0(0x8)
};


// Size 0x1
struct EnableServerCreationEvent
{
public:
	bool                                                         Value;                                             // 0x0(0x1)
};


// Size 0xc
struct GhostPlayModeParameters
{
public:
	char                                                         PlayMode;                                          // 0x0(0x1)
	float                                                        RotationPerSecond;                                 // 0x4(0x4)
	float                                                        DisplacementPerSecond;                             // 0x8(0x4)
};


// Size 0x18
struct CutSceneLoadData
{
public:
	struct StringAssetReference                                  SequenceToPlayAssetReference;                      // 0x0(0x10)
	class Actor*                                                 SpawnablesParent;                                  // 0x10(0x8)
};


// Size 0x10
struct EventEnteredShipLadder
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Actor;                                             // 0x8(0x8)
};


// Size 0x1
struct ShipTrinketInteractionDisabledSettingChanged
{
public:
	bool                                                         ShipTrinketInteractionsDisabled;                   // 0x0(0x1)
};


// Size 0x30
struct ClothingLoadout
{
public:
	TArray<class Class*>                                         Items;                                             // 0x0(0x10)
	TArray<class Class*>                                         CachedEmoteItems;                                  // 0x10(0x10)
	TArray<class Class*>                                         CachedWalkableEmoteItems;                          // 0x20(0x10)
};


// Size 0x8
struct EventStorageContainerDestroyed
{
public:
	class Object*                                                Replenishable;                                     // 0x0(0x8)
};


// Size 0x10
struct AthenaAnimationWheelArmOverlayAnimData
{
public:
	class BlendSpace1D*                                          ArmLower;                                          // 0x0(0x8)
	class BlendSpace1D*                                          ArmRaise;                                          // 0x8(0x8)
};


// Size 0x10
struct PlayerAggregatePositionTelemetryFragment
{
public:
	TArray<struct Vector>                                        PositionData;                                      // 0x0(0x10)
};


// Size 0x18
struct FaunaAnimationSnakeCharmStructure
{
public:
	class AnimSequence*                                          CharmIn;                                           // 0x0(0x8)
	class AnimSequence*                                          CharmLoop;                                         // 0x8(0x8)
	class AnimSequence*                                          CharmOut;                                          // 0x10(0x8)
};


// Size 0x8
struct PetAnimationWeighting
{
public:
	char                                                         AnimationState;                                    // 0x0(0x1)
	float                                                        Weighting;                                         // 0x4(0x4)
};


// Size 0x78
struct SceneDialogueStructure
{
public:
	struct FText                                                 LocalisableName;                                   // 0x0(0x38)
	struct FText                                                 Text;                                              // 0x38(0x38)
	char                                                         ChatType;                                          // 0x70(0x1)
	float                                                        DelayAfter;                                        // 0x74(0x4)
};


// Size 0x38
struct GameEventSchedulerOnDemandConfigSelectionTelemetryEvent
{
public:
	TArray<struct Name>                                          CurrentMainConfigNames;                            // 0x0(0x10)
	TArray<struct Name>                                          FilteredMainConfigNamesByType;                     // 0x10(0x10)
	char                                                         GameEventTypeFilter;                               // 0x20(0x1)
	struct FString                                               SelectedConfigName;                                // 0x28(0x10)
};


// Size 0x2
struct EventFishingRodFishingStateChanged
{
public:
	bool                                                         IsInFishingState;                                  // 0x0(0x1)
	bool                                                         IsFishHooked;                                      // 0x1(0x1)
};


// Size 0x98
struct StoreCatalogItem
{
public:
	struct FString                                               ProductId;                                         // 0x0(0x10)
	struct FString                                               Title;                                             // 0x10(0x10)
	struct FString                                               Description;                                       // 0x20(0x10)
	struct FString                                               FormattedPrice;                                    // 0x30(0x10)
	struct FString                                               FormattedBasePrice;                                // 0x40(0x10)
	struct FString                                               CurrencyCode;                                      // 0x50(0x10)
	bool                                                         IsOnSale;                                          // 0x60(0x1)
	struct DateTime                                              SaleEndDate;                                       // 0x68(0x8)
	struct FString                                               ImageUri;                                          // 0x70(0x10)
	TArray<String>                                               MetaTags;                                          // 0x80(0x10)
	int                                                          DisplayPriority;                                   // 0x90(0x4)
};


// Size 0x78
struct Alliance
{
public:
	struct Guid                                                  AllianceId;                                        // 0x0(0x10)
	TArray<struct Guid>                                          Crews;                                             // 0x10(0x10)
	char                                                         AllianceIndex;                                     // 0x20(0x1)
};


// Size 0x68
struct EventEmblemUnlockedNotification
{
public:
	struct FName                                                 CompanyName;                                       // 0x0(0x8)
	struct FName                                                 FriendlyName;                                      // 0x8(0x8)
	struct FText                                                 EmblemName;                                        // 0x10(0x38)
	struct FString                                               EmblemUrl;                                         // 0x48(0x10)
	struct FString                                               BackgroundUrl;                                     // 0x58(0x10)
};


// Size 0x20
struct RequestContextualVoyageHintPopupEvent
{
public:
	char                                                         PopupHintType;                                     // 0x18(0x1)
	bool                                                         IsDVR;                                             // 0x19(0x1)
};


// Size 0x40
struct NPCOnSurfaceCannonManagerCrewSizeSettings
{
public:
	int                                                          CrewSize;                                          // 0x0(0x4)
	struct WeightedProbabilityRangeOfRanges                      TimeBetweenShots;                                  // 0x8(0x30)
	float                                                        ChanceOfNearMiss;                                  // 0x38(0x4)
};


// Size 0x1
struct EventSetJIPFishingAnimationState
{
public:
	char                                                         State;                                             // 0x0(0x1)
};


// Size 0x10
struct FragmentMarker
{
public:
	struct FString                                               Marker;                                            // 0x0(0x10)
};


// Size 0x10
struct SeagullManagerFormationOffset
{
public:
	TArray<struct Vector>                                        Offsets;                                           // 0x0(0x10)
};


// Size 0x38
struct ActiveHudIconData
{
public:
	class Texture2D*                                             IconTexture;                                       // 0x18(0x8)
};


// Size 0x4
struct GameNarrationRateChangeEvent
{
public:
	int                                                          Rate;                                              // 0x0(0x4)
};


// Size 0x10
struct VaultAssignedAutomationEvent
{
public:
	class Actor*                                                 Vault;                                             // 0x0(0x8)
	class UClass*                                                Key;                                               // 0x8(0x8)
};


// Size 0x8
struct VisualFeedbackEntry
{
public:
	class EffectBlendObjectBase*                                 Effect;                                            // 0x0(0x8)
};


// Size 0x4c
struct FogBankSettings
{
public:
	char                                                         FogState;                                          // 0x0(0x1)
	float                                                        Density;                                           // 0x4(0x4)
	struct Vector                                                Scale;                                             // 0x8(0xc)
	struct LinearColor                                           FogColour;                                         // 0x14(0x10)
	float                                                        FadeInDuration;                                    // 0x24(0x4)
	float                                                        ActiveDuration;                                    // 0x28(0x4)
	float                                                        FadeOutDuration;                                   // 0x2c(0x4)
	bool                                                         Persistent;                                        // 0x30(0x1)
	float                                                        PreviousDensity;                                   // 0x34(0x4)
	struct LinearColor                                           PreviousFogColour;                                 // 0x38(0x10)
	float                                                        MaximumAudioFogIntensityRTPC;                      // 0x48(0x4)
};


// Size 0x18
struct PlayerActivityIconInfo
{
public:
	char                                                         ActivityType;                                      // 0x0(0x1)
	struct StringAssetReference                                  ActivityIcon;                                      // 0x8(0x10)
};


// Size 0x5
struct SetContestShipTypes
{
public:
	bool                                                         IsGalleonEnabled;                                  // 0x0(0x1)
	bool                                                         IsBrigantineEnabled;                               // 0x1(0x1)
	bool                                                         IsSloopEnabled;                                    // 0x2(0x1)
	bool                                                         IsSloopDuoEnabled;                                 // 0x3(0x1)
	bool                                                         IsMixedGalleonBrigantineEnabled;                   // 0x4(0x1)
};


// Size 0x4
struct PlayerStat
{
public:
	uint32                                                       StatId;                                            // 0x0(0x4)
};


// Size 0x28
struct AthenaAnimationJumpingFirstPersonAnimData
{
public:
	class AnimSequence*                                          JumpStart;                                         // 0x0(0x8)
	class BlendSpace*                                            JumpCycle;                                         // 0x8(0x8)
	class AnimSequence*                                          PreImpact;                                         // 0x10(0x8)
	class BlendSpace*                                            LandLight;                                         // 0x18(0x8)
	class BlendSpace*                                            LandHeavy;                                         // 0x20(0x8)
};


// Size 0x20
struct PlayerActionBaseTelemetryFragment
{
public:
	struct FString                                               ObjectId;                                          // 0x0(0x10)
	struct FString                                               ActionName;                                        // 0x10(0x10)
};


// Size 0x18
struct CutsceneAnimationElement
{
public:
	struct FName                                                 SequenceName;                                      // 0x0(0x8)
	TArray<class AnimSequenceBase*>                              OneShotSequences;                                  // 0x8(0x10)
};


// Size 0x18
struct OpenReputationMenuEvent
{
public:
	char                                                         NavigationAction;                                  // 0x0(0x1)
	struct FString                                               CompanyId;                                         // 0x8(0x10)
};


// Size 0x20
struct ProposedTaleEntry
{
public:
	class VoyageDescDataAsset*                                   TaleData;                                          // 0x0(0x8)
	class VoyageProposalDesc*                                    TaleProposal;                                      // 0x8(0x8)
	class Actor*                                                 ProposingObject;                                   // 0x10(0x8)
	bool                                                         CanStartTale;                                      // 0x18(0x1)
};


// Size 0x18
struct UnlockableEntitlementCategory
{
public:
	struct FName                                                 Category;                                          // 0x0(0x8)
	TArray<class Class*>                                         Entitlements;                                      // 0x8(0x10)
};


// Size 0x20
struct UniversalDescriptorStyle
{
public:
	int                                                          BackgroundColor;                                   // 0x0(0x4)
	int                                                          TextColor;                                         // 0x4(0x4)
	int                                                          OpacityPercent;                                    // 0x8(0x4)
	int                                                          ScalePercent;                                      // 0xc(0x4)
	int                                                          AnchorXPercent;                                    // 0x10(0x4)
	int                                                          AnchorYPercent;                                    // 0x14(0x4)
	int                                                          FontSize;                                          // 0x18(0x4)
	int                                                          FontStyle;                                         // 0x1c(0x4)
};


// Size 0x30
struct BundleMetadataResponse
{
public:
	struct FString                                               ProductId;                                         // 0x0(0x10)
	struct FString                                               ImageUri;                                          // 0x10(0x10)
	TArray<String>                                               MetaTags;                                          // 0x20(0x10)
};


// Size 0x1
struct BootFlowCrossInputMatchmakingStateEvent
{
public:
	bool                                                         CrossInput;                                        // 0x0(0x1)
};


// Size 0x28
struct AppearMaterialParams
{
public:
	struct FName                                                 ParameterName;                                     // 0x0(0x8)
	class CurveFloat*                                            AppearCurveAsset;                                  // 0x8(0x8)
	class CurveFloat*                                            DisppearCurveAsset;                                // 0x10(0x8)
};


// Size 0x80
struct AthenaAnimationAsyncLoadedObjectJumpingAnimations
{
public:
	assetobject                                                  Start;                                             // 0x0(0x20)
	assetobject                                                  Cycle;                                             // 0x20(0x20)
	assetobject                                                  PreImpact;                                         // 0x40(0x20)
	assetobject                                                  LandLight;                                         // 0x60(0x20)
};


// Size 0x20
struct PlayerNonVerbalComponentTelemetry
{
public:
	class AthenaPlayerController*                                PlayerController;                                  // 0x0(0x8)
};


// Size 0x18
struct ItemPreviewView
{
public:
	struct FName                                                 CameraName;                                        // 0x0(0x8)
	class AnimationAsset*                                        Anim;                                              // 0x8(0x8)
	bool                                                         ShouldSpin;                                        // 0x10(0x1)
};


// Size 0x1
struct EventCannonAimingStoppedYaw
{
public:
	bool                                                         IsAtEnd;                                           // 0x0(0x1)
};


// Size 0x5
struct SetFrontEndSelection
{
public:
	bool                                                         IsAdventureActive;                                 // 0x0(0x1)
	bool                                                         IsArenaActive;                                     // 0x1(0x1)
	bool                                                         IsTutorialActive;                                  // 0x2(0x1)
	bool                                                         IsCreativeActive;                                  // 0x3(0x1)
	bool                                                         IsBeachNPCSpawnActive;                             // 0x4(0x1)
};


// Size 0x4
struct SetNotificationScale
{
public:
	float                                                        ScaleValue;                                        // 0x0(0x4)
};


// Size 0x20
struct OnShipStockEntitlementsProcessedNetworkEvent
{
public:
	class ShipEntitlementProcessingPolicyDataAsset*              ShipEntitlementProcessingPolicyDataAsset;          // 0x18(0x8)
};


// Size 0x10
struct SalvageSpawnCompRequest
{
public:
	class SalvageItemSpawnComponent*                             SalvageItemSpawnComp;                              // 0x0(0x8)
};


// Size 0x18
struct AthenaAnimationObjectIdleAnimations
{
public:
	class AnimSequence*                                          Idle1;                                             // 0x0(0x8)
	class AnimSequence*                                          Idle2;                                             // 0x8(0x8)
	class AnimSequence*                                          Idle3;                                             // 0x10(0x8)
};


// Size 0x30
struct FaunaAnimationPigStarvingStructure
{
public:
	class AnimSequence*                                          StarveIn;                                          // 0x0(0x8)
	class AnimSequence*                                          StarveLoop;                                        // 0x8(0x8)
	class AnimSequence*                                          StarveOut;                                         // 0x10(0x8)
	class AnimSequence*                                          StarveDeath;                                       // 0x18(0x8)
	class AnimSequence*                                          StarveStartledLow;                                 // 0x20(0x8)
	class AnimSequence*                                          StarveStartledHigh;                                // 0x28(0x8)
};


// Size 0x20
struct MoveSpeedValidationFailedTelemetryEvent
{
public:
	struct FString                                               Item;                                              // 0x0(0x10)
	int                                                          SpeedId;                                           // 0x10(0x4)
	int                                                          DurationMS;                                        // 0x14(0x4)
	int                                                          IgnoredRequestCount;                               // 0x18(0x4)
};


// Size 0x30
struct ShipAnnouncementLoadoutUpdatedEventRpc
{
public:
	class Controller*                                            Controller;                                        // 0x18(0x8)
	struct Guid                                                  ShipGuid;                                          // 0x20(0x10)
};


// Size 0x4
struct ShipInternalWaterPersistenceModel
{
public:
	float                                                        InternalWaterLevel;                                // 0x0(0x4)
};


// Size 0x40
struct NoiseMakerController
{
public:
	class NoiseMakerControllerParams*                            NoiseMakerParams;                                  // 0x0(0x8)
	float                                                        MaxRunningSpeed;                                   // 0x8(0x4)
	float                                                        SimulatedMaxRunningSpeed;                          // 0xc(0x4)
};


// Size 0x1b0
struct HealthUI
{
public:
	float                                                        MinVisibleHealth;                                  // 0x0(0x4)
	float                                                        ContinuousTimePerUpdate;                           // 0x4(0x4)
	class Pawn*                                                  TargetPawn;                                        // 0x20(0x8)
};


// Size 0x8
struct FogBankManagerIslandTypesToKeepAwayFrom
{
public:
	char                                                         IslandType;                                        // 0x0(0x1)
	float                                                        MinimumDistanceFromIslandInKm;                     // 0x4(0x4)
};


// Size 0x10
struct MetalAIFormRustyDamageResponse
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	float                                                        DamageMultiplier;                                  // 0x8(0x4)
	char                                                         HitReaction;                                       // 0xc(0x1)
};


// Size 0x48
struct WheelPartsScales
{
public:
	struct Vector                                                FractureWestScale;                                 // 0x0(0xc)
	struct Vector                                                FractureEastScale;                                 // 0xc(0xc)
	struct Vector                                                FractureSouthScale;                                // 0x18(0xc)
	struct Vector                                                PlankWestScale;                                    // 0x24(0xc)
	struct Vector                                                PlankEastScale;                                    // 0x30(0xc)
	struct Vector                                                PlankSouthScale;                                   // 0x3c(0xc)
};


// Size 0x30
struct TinVoyageDebugEntry
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	char                                                         Difficulty;                                        // 0x8(0x1)
	assetclass                                                   VoyageProposal;                                    // 0x10(0x20)
};


// Size 0x18
struct AthenaAICharacterWasKilledWhileCursed
{
public:
	TArray<char>                                                 Curses;                                            // 0x0(0x10)
	class Actor*                                                 Instigator;                                        // 0x10(0x8)
};


// Size 0x20
struct FishAnimationSwimmingLoopAnimations
{
public:
	class AnimMontage*                                           IdleLoopEndingForwards;                            // 0x0(0x8)
	class AnimMontage*                                           IdleLoopEndingRight;                               // 0x8(0x8)
	class AnimMontage*                                           IdleLoopEndingLeft;                                // 0x10(0x8)
	class AnimMontage*                                           IdleLoopEndingBackwards;                           // 0x18(0x8)
};


// Size 0xc
struct RadialInventoryCenterUpdated
{
public:
	float                                                        X;                                                 // 0x4(0x4)
	float                                                        Y;                                                 // 0x8(0x4)
};


// Size 0x4
struct ItemBlockingParameters
{
public:
	char                                                         BlockingHalfAngle;                                 // 0x0(0x1)
	char                                                         BlockingDetectionOffset;                           // 0x1(0x1)
	char                                                         BlockingDetectionTruncatedConeRadius;              // 0x2(0x1)
	char                                                         BlockingDetectionCharacterOverlapRadius;           // 0x3(0x1)
};


// Size 0x10
struct WeightedRewardTableUnit
{
public:
	class UClass*                                                Entitlement;                                       // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	uint32                                                       Value;                                             // 0xc(0x4)
};


// Size 0x30
struct OtherPartyTelemetryFragment
{
public:
	struct FString                                               OtherPartyType;                                    // 0x0(0x10)
	struct FString                                               OtherPartyId;                                      // 0x10(0x10)
	uint32                                                       OtherPartyPossessCount;                            // 0x20(0x4)
	double                                                       OtherPartySecondsSinceSpawned;                     // 0x28(0x8)
};


// Size 0x18
struct QuestBookPageRenderer
{
public:
	class Font*                                                  Font;                                              // 0x0(0x8)
	float                                                        FontScale;                                         // 0x8(0x4)
	float                                                        FontMaxScale;                                      // 0xc(0x4)
	float                                                        FontLineSpacingScale;                              // 0x10(0x4)
};


// Size 0x10
struct ArrivalTunnelOfTheDamnedPlayerState
{
public:
	class Character*                                             Character;                                         // 0x0(0x8)
	bool                                                         MigrationComplete;                                 // 0x8(0x1)
};


// Size 0x18
struct AssetLoadSkipInfo
{
public:
	struct FString                                               AnimationsStructName;                              // 0x0(0x10)
	char                                                         SkipCount;                                         // 0x10(0x1)
};


// Size 0x8
struct SwallowedByKrakenActionStateParams
{
public:
	float                                                        FadeToBlackDuration;                               // 0x0(0x4)
	float                                                        DeathDelayTime;                                    // 0x4(0x4)
};


// Size 0x10
struct MeshMemoryConstraintShipPartReceivedShipSafeDeclaration
{
public:
	struct FString                                               ShipPartName;                                      // 0x0(0x10)
};


// Size 0x20
struct TreasureLocationData
{
public:
	struct Vector                                                WorldSpaceLocation;                                // 0x0(0xc)
	struct Vector                                                IslandSpaceLocation;                               // 0xc(0xc)
	struct Vector2D                                              MapSpaceLocation;                                  // 0x18(0x8)
};


// Size 0x30
struct IsTankardEquippedCondition
{
public:
	bool                                                         RequireSpecificLiquidType;                         // 0x28(0x1)
	bool                                                         RequireSpecificMinimumVolume;                      // 0x29(0x1)
	char                                                         RequiredLiquidType;                                // 0x2a(0x1)
	float                                                        RequiredMinimumVolume;                             // 0x2c(0x4)
};


// Size 0x18
struct PlayerMilestoneUnlockTelemetryEvent
{
public:
	struct FString                                               MilestoneName;                                     // 0x0(0x10)
	uint64                                                       ClassNumber;                                       // 0x10(0x8)
};


// Size 0x10
struct RiddleTextPhrasebookEntry
{
public:
	struct FName                                                 Id;                                                // 0x0(0x8)
	class RiddleTextPhraseDataAsset*                             Phrase;                                            // 0x8(0x8)
};


// Size 0xa8
struct ShipAnnouncementCinematicEvent
{
public:
	struct FString                                               ShipName;                                          // 0x0(0x10)
	struct FText                                                 ShipTitle;                                         // 0x10(0x38)
	struct FString                                               CaptainName;                                       // 0x48(0x10)
	struct FString                                               Alignment;                                         // 0x58(0x10)
	struct FString                                               AlignmentId;                                       // 0x68(0x10)
	struct FString                                               Icon;                                              // 0x78(0x10)
	struct FString                                               AudioCue;                                          // 0x88(0x10)
	struct FString                                               GuildName;                                         // 0x98(0x10)
};


// Size 0x4
struct RemoveTriggerGameServerRequestModel
{
public:
	int                                                          TriggerId;                                         // 0x0(0x4)
};


// Size 0x20
struct CaptainCurtainsPartDesc
{
public:
	struct StringAssetReference                                  PrimaryCurtainMesh;                                // 0x0(0x10)
	class MaterialInterface*                                     SecondaryCurtainMaterial;                          // 0x10(0x8)
	int64                                                        PrimaryCurtainCachedMeshResourceSize;              // 0x18(0x8)
};


// Size 0x18
struct ItemMetaBase
{
public:
	struct StringAssetReference                                  StoredStructType;                                  // 0x8(0x10)
};


// Size 0x8
struct AggressiveGhostShipDifficultyTargetSelection
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	char                                                         Target;                                            // 0x4(0x1)
	bool                                                         FireTowardsSeaLevel;                               // 0x5(0x1)
};


// Size 0x30
struct FortSpawnTelemetryEvent
{
public:
	struct Guid                                                  FortId;                                            // 0x0(0x10)
	struct Guid                                                  ConfigSpawnId;                                     // 0x10(0x10)
	struct FName                                                 FortName;                                          // 0x20(0x8)
	struct FName                                                 FortType;                                          // 0x28(0x8)
};


// Size 0x50
struct RemoteAchievementProgressModel
{
public:
	map                                                          AchievementProgress;                               // 0x0(0x50)
};


// Size 0x140
struct CrosshairUI
{
public:
	class ProjectileWeapon*                                      WieldedWeapon;                                     // 0x0(0x8)
};


// Size 0x28
struct AthenaAnimationCharacterSelect
{
public:
	class AnimSequence*                                          Idle;                                              // 0x0(0x8)
	class AnimSequence*                                          IntoHighlight;                                     // 0x8(0x8)
	class AnimSequence*                                          Highlighted;                                       // 0x10(0x8)
	class AnimSequence*                                          OutOfHighlight;                                    // 0x18(0x8)
	class AnimSequence*                                          Selected;                                          // 0x20(0x8)
};


// Size 0x10
struct BookcaseCompanyFullnessData
{
public:
	float                                                        CurrentFullness;                                   // 0x0(0x4)
	class UClass*                                                Company;                                           // 0x8(0x8)
};


// Size 0x8
struct RequestCreatePiratePreviewEvent
{
public:
	int                                                          ResolutionX;                                       // 0x0(0x4)
	int                                                          ResolutionY;                                       // 0x4(0x4)
};


// Size 0x1
struct TextboxFocusRequest
{
public:
	bool                                                         ShouldFocusTextbox;                                // 0x0(0x1)
};


// Size 0x38
struct ShipInternalWaterParams
{
public:
	class CurveFloat*                                            SloshinessCurve;                                   // 0x0(0x8)
	float                                                        MaxWaterAmount;                                    // 0x8(0x4)
	float                                                        MaxWaterHeight;                                    // 0xc(0x4)
	float                                                        CorrectiveSpeed;                                   // 0x10(0x4)
	float                                                        MaxClientWaterError;                               // 0x14(0x4)
	float                                                        WaterStartHeight;                                  // 0x18(0x4)
	float                                                        VisibleWaterLevelSpringAccel;                      // 0x1c(0x4)
	float                                                        MinShowAmount;                                     // 0x20(0x4)
	float                                                        MaxTipAdjustmentDepth;                             // 0x24(0x4)
	float                                                        MaxTipAdjustmentRoll;                              // 0x28(0x4)
	float                                                        MinTipAdjustmentAmount;                            // 0x2c(0x4)
	class CurveFloat*                                            FillPercentageVSMaxRollAngleCurve;                 // 0x30(0x8)
};


// Size 0x18
struct PetAnimationCycle
{
public:
	class AnimSequenceBase*                                      In;                                                // 0x0(0x8)
	class AnimSequenceBase*                                      Loop;                                              // 0x8(0x8)
	class AnimSequenceBase*                                      Out;                                               // 0x10(0x8)
};


// Size 0x40
struct TeamCityBuildFragment
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	int                                                          Changelist;                                        // 0x4(0x4)
	struct FString                                               BuildTypeId;                                       // 0x8(0x10)
	struct FString                                               StartedBy;                                         // 0x18(0x10)
	bool                                                         Personal;                                          // 0x28(0x1)
	struct FString                                               StreamName;                                        // 0x30(0x10)
};


// Size 0x10
struct PlayerEnteredStormEvent
{
public:
	class Actor*                                                 Storm;                                             // 0x0(0x8)
	class Controller*                                            Player;                                            // 0x8(0x8)
};


// Size 0x3
struct AthenaAnimationLODSettings
{
public:
	char                                                         IKState;                                           // 0x0(0x1)
	char                                                         IKSolverType;                                      // 0x1(0x1)
	char                                                         IKFootPlantingState;                               // 0x2(0x1)
};


// Size 0x88
struct MigratableMPSDFallbackData
{
public:
	struct UniqueNetIdRepl                                       CaptainUserId;                                     // 0x0(0x18)
	TArray<struct UniqueNetIdRepl>                               CrewUserIds;                                       // 0x18(0x10)
	struct Guid                                                  CrewId;                                            // 0x28(0x10)
	map                                                          ReconnectTimesRemaining;                           // 0x38(0x50)
};


// Size 0x20
struct SkeletonCampReplicatedData
{
public:
	TArray<struct Guid>                                          CrewIdsInTempleHall;                               // 0x0(0x10)
	bool                                                         OrbOfSecretsHasBeenTaken;                          // 0x10(0x1)
	bool                                                         TempleRitualHasBeenPrepared;                       // 0x11(0x1)
	bool                                                         TempleRitualHasBeenCompleted;                      // 0x12(0x1)
	bool                                                         ProtectorOfTheOrbHasBeenKilled;                    // 0x13(0x1)
	class Actor*                                                 SourceActor;                                       // 0x18(0x8)
};


// Size 0x10
struct RowboatPersistenceModel
{
public:
	struct FName                                                 Class;                                             // 0x0(0x8)
	struct FName                                                 Livery;                                            // 0x8(0x8)
};


// Size 0x10
struct CrewChangeFailedEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x8
struct ShipAnnouncementShipSpottedEvent
{
public:
	class Actor*                                                 ShipSpotted;                                       // 0x0(0x8)
};


// Size 0x20
struct InviterId
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
};


// Size 0x10
struct EventSwimmingCreatureCollided
{
public:
	class Actor*                                                 SwimmingCreatureActor;                             // 0x0(0x8)
};


// Size 0x1c
struct MerchantQuestCategoryGroupBounds
{
public:
	struct FName                                                 GroupName;                                         // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	int                                                          MinNum;                                            // 0xc(0x4)
	int                                                          MaxNum;                                            // 0x10(0x4)
	int                                                          MinDifferent;                                      // 0x14(0x4)
	int                                                          MaxDifferent;                                      // 0x18(0x4)
};


// Size 0x38
struct SeaOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	TArray<class Class*>                                         Seas;                                              // 0x10(0x10)
	struct StoryFlagContainer                                    StoryFlagContainer;                                // 0x20(0x18)
};


// Size 0x48
struct CheatPerformedByClientNetworkEvent
{
public:
	struct FString                                               CheatSource;                                       // 0x18(0x10)
	struct FString                                               CheatFunction;                                     // 0x28(0x10)
	struct FString                                               CheatArguments;                                    // 0x38(0x10)
};


// Size 0xa0
struct XMarksTheSpotQuestParams
{
public:
	struct WeightedProbabilityRange                              NumTreasureLocations;                              // 0x48(0x20)
	class BoobyTrapSpawnerDataAsset*                             BoobyTrapSpawnerDataAsset;                         // 0x68(0x8)
	TArray<class BoobyTrapSpawnerDataAsset*>                     UniqueTreasureLocationBoobyTraps;                  // 0x70(0x10)
	TArray<class WeightedTreasureChestDescAsset*>                UniqueTreasureLocationRewards;                     // 0x80(0x10)
	TArray<class WeightedItemDescSpawnDataAsset*>                UniqueTreasureLocationRewardsAssets;               // 0x90(0x10)
};


// Size 0x20
struct UIAdventuresDataErrorTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               ErrorStack;                                        // 0x10(0x10)
};


// Size 0x8
struct EventEndConversationAsParticipant
{
public:
	class Actor*                                                 ConversationStarter;                               // 0x0(0x8)
};


// Size 0xc
struct PlayerMermaidSuppressionData
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
	float                                                        SuppressionTime;                                   // 0x8(0x4)
};


// Size 0x40
struct SignedSessionRequestModel
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               OwningUserId;                                      // 0x10(0x10)
	struct FString                                               SessionTemplateName;                               // 0x20(0x10)
	struct FString                                               Signature;                                         // 0x30(0x10)
};


// Size 0x40
struct SpawnTransformToPositionMapping
{
public:
	struct Transform                                             SpawnTransform;                                    // 0x0(0x30)
	char                                                         Position;                                          // 0x30(0x1)
};


// Size 0x18
struct MerchantQuestStartTelemetryEventRequiredItemEntry
{
public:
	int                                                          NumItems;                                          // 0x0(0x4)
	struct FString                                               Rarity;                                            // 0x8(0x10)
};


// Size 0x20
struct NPCAnimationIdlesVariantStruct
{
public:
	class AnimSequence*                                          IdleVariant;                                       // 0x0(0x8)
	class AnimSequence*                                          InactiveIdleVariant;                               // 0x8(0x8)
	class AnimSequence*                                          InteractIdleVariant;                               // 0x10(0x8)
	bool                                                         IdleVariantIsValid;                                // 0x18(0x1)
	bool                                                         InactiveIdleVariantIsValid;                        // 0x19(0x1)
	bool                                                         InteractIdleVariantIsValid;                        // 0x1a(0x1)
};


// Size 0x10
struct EntitlementLoadFailedTelemetryEvent
{
public:
	struct FString                                               AssetName;                                         // 0x0(0x10)
};


// Size 0x10
struct RandomParticleSystemPickerEntry
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	class Object*                                                Effect;                                            // 0x8(0x8)
};


// Size 0x1
struct EventWheelStoppedMoving
{
public:
	bool                                                         IsAtEnd;                                           // 0x0(0x1)
};


// Size 0x10
struct FishingRodReplicatedFishState
{
public:
	class FishingFish*                                           FishingFish;                                       // 0x0(0x8)
	char                                                         FishingFishState;                                  // 0x8(0x1)
	bool                                                         FishHasEscaped;                                    // 0x9(0x1)
};


// Size 0x28
struct StopNpcAnimationNetworkEvent
{
public:
	class Actor*                                                 TargetActor;                                       // 0x18(0x8)
	class PlaceableReaction*                                     PlaceableReaction;                                 // 0x20(0x8)
};


// Size 0x20
struct GuildUserPirateModel
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
};


// Size 0x1
struct EventSpawnedAsSalvageItem
{
public:
	bool                                                         SpawnedAsSunkenItem;                               // 0x0(0x1)
};


// Size 0x10
struct EventRequestSayPhrase
{
public:
	struct FString                                               PhraseKey;                                         // 0x0(0x10)
};


// Size 0x8
struct GuildLevelChangedEvent
{
public:
	int                                                          OldGuildLevel;                                     // 0x0(0x4)
	int                                                          CurrentGuildLevel;                                 // 0x4(0x4)
};


// Size 0x10
struct SpawnablePrisoner
{
public:
	class UClass*                                                SpawnablePrisoner;                                 // 0x0(0x8)
	struct FName                                                 AnimationMontageName;                              // 0x8(0x8)
};


// Size 0x38
struct TreasureChestSoldNetworkEvent
{
public:
	struct FName                                                 RewardId;                                          // 0x18(0x8)
	struct StringAssetReference                                  StampIcon;                                         // 0x20(0x10)
	class UClass*                                                OverrideCompany;                                   // 0x30(0x8)
};


// Size 0x30
struct PlayerRadialChatTelemetryEvent
{
public:
	struct Guid                                                  RadialChatID;                                      // 0x0(0x10)
	struct FString                                               RadialChatString;                                  // 0x10(0x10)
	struct FString                                               RadialContextType;                                 // 0x20(0x10)
};


// Size 0x4
struct EventDeathCameraActivated
{
public:
	float                                                        CameraDuration;                                    // 0x0(0x4)
};


// Size 0x8
struct EventWaterAmountChanged
{
public:
	float                                                        NewWaterAmount;                                    // 0x0(0x4)
	float                                                        NewRelativeWaterHeight;                            // 0x4(0x4)
};


// Size 0x18
struct RequestShowJupiterProfile
{
public:
	struct FString                                               PlatformUserId;                                    // 0x0(0x10)
	char                                                         Platform;                                          // 0x10(0x1)
};


// Size 0x378
struct LightingControllerSettingsOutput
{
public:
	float                                                        FogDensity;                                        // 0x0(0x4)
	float                                                        FogStartDistance;                                  // 0x4(0x4)
	float                                                        LightIntensity;                                    // 0x8(0x4)
	float                                                        SkyDomeBrightness;                                 // 0xc(0x4)
	float                                                        SkyDomeMoonVisibility;                             // 0x10(0x4)
	float                                                        SkyDomeStarBrightness;                             // 0x14(0x4)
	float                                                        SkyDomeSunBrightness;                              // 0x18(0x4)
	float                                                        PostLPVIntensity;                                  // 0x1c(0x4)
	float                                                        PostExposureBias;                                  // 0x20(0x4)
	float                                                        PostLPVOcclusionIntensity;                         // 0x24(0x4)
	float                                                        SkyLightIntensity;                                 // 0x28(0x4)
	float                                                        FogBrightnessNear;                                 // 0x2c(0x4)
	float                                                        FogBrightnessFar;                                  // 0x30(0x4)
	float                                                        PostBloomIntensity;                                // 0x34(0x4)
	float                                                        PostBloomThreshold;                                // 0x38(0x4)
	float                                                        SkyDomeAuraBrightness;                             // 0x3c(0x4)
	float                                                        PostReflectionProbeBrightness;                     // 0x40(0x4)
	float                                                        PostReflectionProbeShadowBrightness;               // 0x44(0x4)
	float                                                        VfxController;                                     // 0x48(0x4)
	float                                                        FogMaxOpacity;                                     // 0x4c(0x4)
	float                                                        FogScatterExp;                                     // 0x50(0x4)
	float                                                        FogUnderwaterDensity;                              // 0x54(0x4)
	float                                                        PostLensFlareIntensity;                            // 0x58(0x4)
	float                                                        EmissiveFoliage;                                   // 0x5c(0x4)
	float                                                        EmissiveLights;                                    // 0x60(0x4)
	float                                                        PostExposureMinBrightness;                         // 0x64(0x4)
	float                                                        PostExposureMaxBrightness;                         // 0x68(0x4)
	float                                                        SkyDomeMoonBrightness;                             // 0x6c(0x4)
	float                                                        SkyDomeHorizonCloudBrightness;                     // 0x70(0x4)
	float                                                        SkyDomeGreenFlashStrength;                         // 0x74(0x4)
	float                                                        PostSaturation;                                    // 0x78(0x4)
	float                                                        PostContrast;                                      // 0x7c(0x4)
	float                                                        CloudRimlightScale;                                // 0x80(0x4)
	float                                                        CloudSkylightScale;                                // 0x84(0x4)
	float                                                        CloudSunlightScale;                                // 0x88(0x4)
	float                                                        CloudGlobalPressure;                               // 0x8c(0x4)
	float                                                        PostUnderWaterBrightness;                          // 0x90(0x4)
	float                                                        VfxCloudBrightness;                                // 0x94(0x4)
	float                                                        LightGodRayIntensity;                              // 0x98(0x4)
	float                                                        CloudBottomBrightness;                             // 0x9c(0x4)
	float                                                        CloudSunlightShadowing;                            // 0xa0(0x4)
	float                                                        SunDiscScale;                                      // 0xa4(0x4)
	float                                                        WaterSpecularBrightness;                           // 0xa8(0x4)
	float                                                        VfxAmbientScale;                                   // 0xac(0x4)
	float                                                        FogUnderwaterMaxOpacity;                           // 0xb0(0x4)
	float                                                        FogUnderwaterScatterExp;                           // 0xb4(0x4)
	float                                                        FogUnderwaterStartDistance;                        // 0xb8(0x4)
	float                                                        FogUnderwaterBrightnessNear;                       // 0xbc(0x4)
	float                                                        FogUnderwaterBrightnessFar;                        // 0xc0(0x4)
	float                                                        FogDirectionalInscatteringStart;                   // 0xc4(0x4)
	float                                                        FogUnderwaterDirectionalInscatteringStart;         // 0xc8(0x4)
	float                                                        CloudShadowBrightness;                             // 0xcc(0x4)
	float                                                        StormCloudShadowBrightness;                        // 0xd0(0x4)
	float                                                        StormPostBloomIntensity;                           // 0xd4(0x4)
	float                                                        StormPostBloomThreshold;                           // 0xd8(0x4)
	float                                                        DirectionalLightShadowSteppingRate;                // 0xdc(0x4)
	float                                                        SkullBrightness;                                   // 0xe0(0x4)
	float                                                        UnderwaterDirectionalLightMinBrightness;           // 0xe4(0x4)
	struct LinearColor                                           FogColourAway;                                     // 0xe8(0x10)
	struct LinearColor                                           FogColourTowards;                                  // 0xf8(0x10)
	struct LinearColor                                           LightSunColour;                                    // 0x108(0x10)
	struct LinearColor                                           SkyDomeHorizonColour;                              // 0x118(0x10)
	struct LinearColor                                           SkyDomeZenithColour;                               // 0x128(0x10)
	struct LinearColor                                           SkyLightColour;                                    // 0x138(0x10)
	struct LinearColor                                           PostAmbientShadowColour;                           // 0x148(0x10)
	struct LinearColor                                           FogColourAwayFar;                                  // 0x158(0x10)
	struct LinearColor                                           FogColourUnderwater;                               // 0x168(0x10)
	struct LinearColor                                           FogColourAwayUnderwater;                           // 0x178(0x10)
	struct LinearColor                                           WaterColour;                                       // 0x188(0x10)
	struct LinearColor                                           WaterColourShallow;                                // 0x198(0x10)
	struct LinearColor                                           WaterBackLitColour;                                // 0x1a8(0x10)
	struct LinearColor                                           WaterFoamColour;                                   // 0x1b8(0x10)
	struct LinearColor                                           WaterFoamHighlightColour;                          // 0x1c8(0x10)
	struct LinearColor                                           WaterAmbientColour;                                // 0x1d8(0x10)
	struct LinearColor                                           PostReflectionProbeTint;                           // 0x1e8(0x10)
	struct LinearColor                                           CloudRimlightColour;                               // 0x1f8(0x10)
	struct LinearColor                                           CloudSkylightColour;                               // 0x208(0x10)
	struct LinearColor                                           CloudSunlightColour;                               // 0x218(0x10)
	struct LinearColor                                           PostUnderWaterTint;                                // 0x228(0x10)
	struct LinearColor                                           SkyDomeMoonColour;                                 // 0x238(0x10)
	struct LinearColor                                           PostGamma;                                         // 0x248(0x10)
	struct LinearColor                                           SkyDomeSunColour;                                  // 0x258(0x10)
	struct LinearColor                                           VFXFoamColour;                                     // 0x268(0x10)
	struct LinearColor                                           VFXWindColour;                                     // 0x278(0x10)
	struct LinearColor                                           VFXUnderwaterTint;                                 // 0x288(0x10)
	struct LinearColor                                           StormRainColour;                                   // 0x298(0x10)
	struct LinearColor                                           StormSkyLightColour;                               // 0x2a8(0x10)
	struct LinearColor                                           StormPostGamma;                                    // 0x2b8(0x10)
	struct LinearColor                                           StormFogColourUnderwater;                          // 0x2c8(0x10)
	struct LinearColor                                           StormFogColourAwayUnderwater;                      // 0x2d8(0x10)
	struct LinearColor                                           StormWaterColour;                                  // 0x2e8(0x10)
	struct LinearColor                                           StormWaterColourShallow;                           // 0x2f8(0x10)
	struct LinearColor                                           StormWaterBackLitColour;                           // 0x308(0x10)
	struct LinearColor                                           StormWaterFoamColour;                              // 0x318(0x10)
	struct LinearColor                                           StormWaterFoamHighlightColour;                     // 0x328(0x10)
	struct LinearColor                                           StormWaterAmbientColour;                           // 0x338(0x10)
	struct LinearColor                                           StormPostReflectionProbeTint;                      // 0x348(0x10)
	struct LinearColor                                           SkullEyeColour;                                    // 0x358(0x10)
	struct LinearColor                                           SandColour;                                        // 0x368(0x10)
};


// Size 0x28
struct SpawnItemGameServerRequestModel
{
public:
	struct FString                                               AssetId;                                           // 0x0(0x10)
	int                                                          AssetType;                                         // 0x10(0x4)
	struct Vector                                                SpawnLocation;                                     // 0x14(0xc)
	float                                                        Rotation;                                          // 0x20(0x4)
};


// Size 0x58
struct AIKnockbackActionStateConstructionInfo
{
public:
	struct Vector                                                KnockbackDirection;                                // 0x40(0xc)
	float                                                        KnockbackSpeed;                                    // 0x4c(0x4)
	float                                                        KnockbackAccel;                                    // 0x50(0x4)
	char                                                         KnockbackStrengthType;                             // 0x54(0x1)
};


// Size 0x30
struct ShipNameData
{
public:
	struct FString                                               ShipId;                                            // 0x0(0x10)
	struct FString                                               ShipName;                                          // 0x10(0x10)
	struct FString                                               ShipOwnerUserId;                                   // 0x20(0x10)
};


// Size 0xc
struct TimedDoorState
{
public:
	char                                                         State;                                             // 0x0(0x1)
	int                                                          JammedLandmarkReactionIndex;                       // 0x4(0x4)
	int                                                          LoweringLandmarkReactionIndex;                     // 0x8(0x4)
};


// Size 0x48
struct AthenaAnimationOverrideEntry
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	struct StringAssetReference                                  MeshFirstPerson;                                   // 0x8(0x10)
	struct StringAssetReference                                  MeshThirdPerson;                                   // 0x18(0x10)
	struct StringAssetReference                                  AnimationDataStore;                                // 0x28(0x10)
	class UClass*                                                ALKFirstPerson;                                    // 0x38(0x8)
	class UClass*                                                ALKThirdPerson;                                    // 0x40(0x8)
};


// Size 0x18
struct AlignmentFlagActionRuleParams
{
public:
	class UClass*                                                PressedNotificationInputId;                        // 0x0(0x8)
	class UClass*                                                ReleasedNotificationInputId;                       // 0x8(0x8)
	float                                                        AddFlagHoldTime;                                   // 0x10(0x4)
	float                                                        RemoveFlagHoldTime;                                // 0x14(0x4)
};


// Size 0x28
struct RequestBucketStateRpc
{
public:
	char                                                         RequestedBucketState;                              // 0x20(0x1)
};


// Size 0x1
struct PioneerObjectiveCompleteEvent
{
public:
	bool                                                         HasReward;                                         // 0x0(0x1)
};


// Size 0x10
struct PlayerBanishedToBrig
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
};


// Size 0x40
struct ScrambledNamesUpdateEvent
{
public:
	struct Guid                                                  EntityId;                                          // 0x0(0x10)
	struct FString                                               UnscrambledName;                                   // 0x10(0x10)
	struct UniqueNetIdRepl                                       EntityOwnerNetId;                                  // 0x20(0x18)
	char                                                         ScrambleType;                                      // 0x38(0x1)
};


// Size 0x60
struct ContestShipLiverySet
{
public:
	struct Guid                                                  OwningCrewID;                                      // 0x0(0x10)
	map                                                          ShipLiveryTeamSet;                                 // 0x10(0x50)
};


// Size 0x10
struct IndefiniteDoorLockEntry
{
public:
	class Controller*                                            Controller;                                        // 0x0(0x8)
	class Object*                                                Owner;                                             // 0x8(0x8)
};


// Size 0x14
struct EntitlementMapRedirectorUsedEvent
{
public:
	struct FName                                                 DeprecatedEntitlementId;                           // 0x0(0x8)
	struct FName                                                 RedirectedToValidEntitlementId;                    // 0x8(0x8)
	int                                                          FoundIndex;                                        // 0x10(0x4)
};


// Size 0x18
struct WieldableItemActionVisuals
{
public:
	TArray<class Class*>                                         BlockActions;                                      // 0x0(0x10)
	char                                                         AnimVariant;                                       // 0x10(0x1)
	bool                                                         IsAlternate;                                       // 0x11(0x1)
	bool                                                         HideItem;                                          // 0x12(0x1)
};


// Size 0x18
struct PuzzleVaultStartedTelemetryEvent
{
public:
	struct Guid                                                  VaultId;                                           // 0x0(0x10)
	struct FName                                                 VaultType;                                         // 0x10(0x8)
};


// Size 0x30
struct TimedResponseAction
{
public:
	TArray<class Actor*>                                         TargetActors;                                      // 0x0(0x10)
	float                                                        Duration;                                          // 0x10(0x4)
	bool                                                         IsActive;                                          // 0x14(0x1)
};


// Size 0x4
struct EventCapstanArmIntentChanged
{
public:
	float                                                        NewIntent;                                         // 0x0(0x4)
};


// Size 0x10
struct PlayerEntitlementUpdatedEvent
{
public:
	class Actor*                                                 PlayerController;                                  // 0x0(0x8)
};


// Size 0x38
struct SetItemOnRadialInventorySlot
{
public:
	int                                                          SlotIndex;                                         // 0x0(0x4)
	struct FString                                               SlotItemUrl;                                       // 0x8(0x10)
	float                                                        SlotItemRotation;                                  // 0x18(0x4)
	float                                                        SlotItemScale;                                     // 0x1c(0x4)
	struct Vector2D                                              SlotItemOffset;                                    // 0x20(0x8)
	struct FString                                               SlotItemTitle;                                     // 0x28(0x10)
};


// Size 0x30
struct PopupQueuePlay
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
	struct FString                                               EventName;                                         // 0x10(0x10)
	struct FString                                               EventData;                                         // 0x20(0x10)
};


// Size 0x10
struct BedPartDesc
{
public:
	class MaterialInterface*                                     BedMaterial;                                       // 0x0(0x8)
	class MaterialInterface*                                     DrapesMaterial;                                    // 0x8(0x8)
};


// Size 0x18
struct CrewMutePlayerPhrasesEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	bool                                                         IsMuted;                                           // 0x10(0x1)
};


// Size 0x20
struct NetPerformanceMonitorInitialisationErrorTelemetryEvent
{
public:
	struct FString                                               ErrorType;                                         // 0x0(0x10)
	struct FString                                               ErrorMessage;                                      // 0x10(0x10)
};


// Size 0x38
struct FogBankSpawnedTelemetryEvent
{
public:
	struct Guid                                                  FogBankId;                                         // 0x0(0x10)
	struct Vector                                                SpawnLocation;                                     // 0x10(0xc)
	struct Vector                                                Scale;                                             // 0x1c(0xc)
	float                                                        Density;                                           // 0x28(0x4)
	float                                                        FadeInDuration;                                    // 0x2c(0x4)
	float                                                        ActiveDuration;                                    // 0x30(0x4)
	float                                                        FadeOutDuration;                                   // 0x34(0x4)
};


// Size 0x1
struct EventExposedToRainChanged
{
public:
	bool                                                         IsExposedToRain;                                   // 0x0(0x1)
};


// Size 0x10
struct FriendsListError
{
public:
	struct FString                                               Error;                                             // 0x0(0x10)
};


// Size 0x18
struct NPCConversationDialogDataConfig
{
public:
	TArray<class Class*>                                         AdditionalParticipants;                            // 0x0(0x10)
	bool                                                         AlwaysFocusOnCurrentSpeaker;                       // 0x10(0x1)
};


// Size 0x20
struct ServiceStatusNotificationModel
{
public:
	uint32                                                       NotificationId;                                    // 0x0(0x4)
	struct DateTime                                              ActivatedDateTimeUtc;                              // 0x8(0x8)
	struct Guid                                                  CorrelationId;                                     // 0x10(0x10)
};


// Size 0x20
struct FortStartedTelemetryEvent
{
public:
	struct Guid                                                  FortId;                                            // 0x0(0x10)
	struct FName                                                 FortIsland;                                        // 0x10(0x8)
	struct FName                                                 FortType;                                          // 0x18(0x8)
};


// Size 0x10
struct ClientMarkerRepresentation
{
public:
	class BaseWorldMarker*                                       MarkerPtr;                                         // 0x0(0x8)
	class Object*                                                MarkerVisualObjectPtr;                             // 0x8(0x8)
};


// Size 0x8
struct EventMeleeAttackStarted
{
public:
	class MeleeAttackDataAsset*                                  AttackData;                                        // 0x0(0x8)
};


// Size 0x80
struct TreasureMapWidgetLocalisedTextWithFontOverride
{
public:
	class Font*                                                  FontOverride;                                      // 0x78(0x8)
};


// Size 0x1
struct ScrambleGamertagsSettingsChanged
{
public:
	bool                                                         ShouldScrambleGamertags;                           // 0x0(0x1)
};


// Size 0x120
struct LaunchableProjectileHitRegistrationTelemetry
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               DamagerType;                                       // 0x10(0x10)
	double                                                       ClientHitTimestamp;                                // 0x20(0x8)
	double                                                       ServerHitTimestamp;                                // 0x28(0x8)
	int                                                          ClientTimeOfImpact;                                // 0x30(0x4)
	int                                                          ServerTimeOfImpact;                                // 0x34(0x4)
	float                                                        ClientTimeAlive;                                   // 0x38(0x4)
	float                                                        ServerTimeAlive;                                   // 0x3c(0x4)
	struct Vector                                                ClientInitialProjectilePosition;                   // 0x40(0xc)
	struct Vector                                                ServerInitialProjectilePosition;                   // 0x4c(0xc)
	struct Vector                                                ClientFinalProjectilePosition;                     // 0x58(0xc)
	struct Vector                                                ServerFinalProjectilePosition;                     // 0x64(0xc)
	float                                                        ClientProjectileTravelDistance;                    // 0x70(0x4)
	float                                                        ServerProjectileTravelDistance;                    // 0x74(0x4)
	struct Vector                                                ClientProjectileDirection;                         // 0x78(0xc)
	struct Vector                                                ServerProjectileDirection;                         // 0x84(0xc)
	float                                                        ClientProjectileSpeed;                             // 0x90(0x4)
	float                                                        ServerProjectileSpeed;                             // 0x94(0x4)
	int                                                          ClientHitActorNetGuid;                             // 0x98(0x4)
	struct FString                                               ClientHitActorTypeName;                            // 0xa0(0x10)
	struct FString                                               ClientHitComponentName;                            // 0xb0(0x10)
	int                                                          ServerHitActorNetGuid;                             // 0xc0(0x4)
	struct FString                                               ServerHitActorTypeName;                            // 0xc8(0x10)
	struct FString                                               ServerHitComponentName;                            // 0xd8(0x10)
	bool                                                         HitAgreement;                                      // 0xe8(0x1)
	float                                                        ClientServerComponentPositionDelta;                // 0xec(0x4)
	float                                                        ClientServerComponentAngleDelta;                   // 0xf0(0x4)
	float                                                        ServerImpactLatencyMs;                             // 0xf4(0x4)
	float                                                        ClientImpactLatencyMs;                             // 0xf8(0x4)
	float                                                        ClientServerShotAngleDelta;                        // 0xfc(0x4)
	struct FString                                               ClientHitPlayerUserId;                             // 0x100(0x10)
	struct FString                                               ServerHitPlayerUserId;                             // 0x110(0x10)
};


// Size 0x10
struct AggressiveGhostShipAnchorDropTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
};


// Size 0x10
struct TunnelOfTheDamnedMigrationFailedTelemetryEvent
{
public:
	struct FString                                               Reason;                                            // 0x0(0x10)
};


// Size 0x8
struct ShipLeftTunnelOfTheDamnedEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x1
struct GuildShipConfigModel
{
public:
	bool                                                         IsPublic;                                          // 0x0(0x1)
};


// Size 0x40
struct NPCDialogTheme
{
public:
	assetobject                                                  BackgroundImage;                                   // 0x0(0x20)
	assetobject                                                  HeaderIcon;                                        // 0x20(0x20)
};


// Size 0x24
struct CrewCompletedPrimaryVoyageEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
	struct Guid                                                  CrewId;                                            // 0x10(0x10)
	bool                                                         DoNotNotifyParticipantsOnVoyageComplete;           // 0x20(0x1)
};


// Size 0x28
struct FiredFromActorActionStateParams
{
public:
	float                                                        GravityScaleOverride;                              // 0x0(0x4)
	float                                                        MassOverride;                                      // 0x4(0x4)
	float                                                        UnderwaterBrakingFactorOverride;                   // 0x8(0x4)
	float                                                        UnderwaterBrakingFactorOverrideDuration;           // 0xc(0x4)
	struct Vector2D                                              MaskFiringLagScaleMinMax;                          // 0x10(0x8)
	struct Vector2D                                              MaskFiringLagScalingTimeMinMax;                    // 0x18(0x8)
	float                                                        MaskFiringLagSpeedToleranceSquared;                // 0x20(0x4)
	float                                                        TimeUntilRevertingIgnoredActors;                   // 0x24(0x4)
};


// Size 0x20
struct PocketWatchDateDisplay
{
public:
	class WwiseEvent*                                            DateSwitchSFX;                                     // 0x0(0x8)
	class MaterialInstanceDynamic*                               FirstPersonMeshDynamicMaterialInstance;            // 0x8(0x8)
	class MaterialInstanceDynamic*                               ThirdPersonMeshDynamicMaterialInstance;            // 0x10(0x8)
};


// Size 0x78
struct LaunchedFromKrakenActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           Tentacle;                                          // 0x60(0x14)
};


// Size 0x10
struct NPCAnimationSequence
{
public:
	class AnimSequenceBase*                                      AnimationSequence;                                 // 0x0(0x8)
	class AnimMontage*                                           FacialAdditive;                                    // 0x8(0x8)
};


// Size 0x40
struct AthenaAnimationObjectLocomotionAnimations
{
public:
	class BlendSpace*                                            Locomotion1;                                       // 0x0(0x8)
	class BlendSpace*                                            Locomotion2;                                       // 0x8(0x8)
	class BlendSpace*                                            Locomotion3;                                       // 0x10(0x8)
	class BlendSpace*                                            Locomotion4;                                       // 0x18(0x8)
	class AnimSequence*                                          LocomotionTurningLeft;                             // 0x20(0x8)
	class AnimSequence*                                          LocomotionTurningRight;                            // 0x28(0x8)
	class AnimSequence*                                          LocomotionOutOf;                                   // 0x30(0x8)
	class BlendSpace*                                            LocomotionSwimming;                                // 0x38(0x8)
};


// Size 0x18
struct ProcessableActions
{
public:
	char                                                         CurrentStatus;                                     // 0x0(0x1)
	double                                                       StartTime;                                         // 0x8(0x8)
	int                                                          ActionIndex;                                       // 0x10(0x4)
};


// Size 0x3
struct JupiterActivitiesSessionEvent
{
public:
	char                                                         PlayModeVariant;                                   // 0x0(0x1)
	char                                                         SessionStyle;                                      // 0x1(0x1)
	char                                                         PlayMode;                                          // 0x2(0x1)
};


// Size 0x68
struct HttpResponseTelemetryFragment
{
public:
	struct FString                                               Method;                                            // 0x0(0x10)
	struct FString                                               EndPoint;                                          // 0x10(0x10)
	struct FString                                               Context;                                           // 0x20(0x10)
	char                                                         Result;                                            // 0x30(0x1)
	int                                                          StatusCode;                                        // 0x34(0x4)
	int                                                          DurationMS;                                        // 0x38(0x4)
	struct FString                                               ResponseBody;                                      // 0x40(0x10)
	TArray<String>                                               ResponseHeaders;                                   // 0x50(0x10)
	int                                                          Attempts;                                          // 0x60(0x4)
};


// Size 0x10
struct ShipHeartbeatTelemetryEvent
{
public:
	float                                                        Speed;                                             // 0x0(0x4)
	float                                                        Yaw;                                               // 0x4(0x4)
	float                                                        InternalWaterLevel;                                // 0x8(0x4)
	int                                                          FireCellsActive;                                   // 0xc(0x4)
};


// Size 0x28
struct SaveToLoadoutItemCost
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	struct FString                                               Currency;                                          // 0x10(0x10)
	int                                                          Amount;                                            // 0x20(0x4)
};


// Size 0x8
struct ItemSpawnComponentFinishedSpawningEvent
{
public:
	class ItemSpawnComponent*                                    ItemSpawnComponent;                                // 0x0(0x8)
};


// Size 0x18
struct NPCOverlapException
{
public:
	struct StringAssetReference                                  MapName;                                           // 0x0(0x10)
	int                                                          MaxOverlapsAllowed;                                // 0x10(0x4)
};


// Size 0xa0
struct PlayerJoinedCrew
{
public:
	struct FText                                                 PlayerName;                                        // 0x18(0x38)
	struct FText                                                 PlayerNameOverride;                                // 0x50(0x38)
	bool                                                         IsJoining;                                         // 0x88(0x1)
	bool                                                         IsCaptain;                                         // 0x89(0x1)
	struct Guid                                                  GuildId;                                           // 0x8c(0x10)
};


// Size 0x8
struct EventSceneDialogueFinished
{
public:
	class SceneDialogueCoordinator*                              Sender;                                            // 0x0(0x8)
};


// Size 0x10
struct AlternateHeldPose
{
public:
	class AnimSequenceBase*                                      AlternateHeldPose;                                 // 0x0(0x8)
	float                                                        AlternateHeldPoseStrength;                         // 0x8(0x4)
};


// Size 0x28
struct NPCCustomAnimationBlueprintPlayingAnimations
{
public:
	class AnimSequenceBase*                                      OneShot;                                           // 0x0(0x8)
	class AnimSequenceBase*                                      ContinouousIn;                                     // 0x8(0x8)
	class AnimSequenceBase*                                      ContinouousLoop_A;                                 // 0x10(0x8)
	class AnimSequenceBase*                                      ContinouousLoop_B;                                 // 0x18(0x8)
	class AnimSequenceBase*                                      ContinouousOut;                                    // 0x20(0x8)
};


// Size 0x10
struct AchievementHeavyAttackRivalOffTheirShip
{
public:
	class AthenaCharacter*                                       Character;                                         // 0x0(0x8)
	float                                                        TimeWindowInSeconds;                               // 0x8(0x4)
};


// Size 0x8
struct ShipWaterloggedEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x50
struct ProjectileImpactTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               ProjectileId;                                      // 0x10(0x10)
	struct FString                                               DamagerTypeId;                                     // 0x20(0x10)
	struct FString                                               InstigatorObjectId;                                // 0x30(0x10)
	struct FString                                               InstigatorObjectType;                              // 0x40(0x10)
};


// Size 0x18
struct ItemDiggingEffectsOverride
{
public:
	TArray<Class>                                                Classes;                                           // 0x0(0x10)
	class ItemDiggingEffectsConfig*                              DiggingEffectsConfig;                              // 0x10(0x8)
};


// Size 0x30
struct ShipHullLandscapeDamageEntry
{
public:
	char                                                         PhysicalSurface;                                   // 0x0(0x1)
	class ForceFeedbackEffect*                                   ForceFeedbackEffect;                               // 0x8(0x8)
	struct Int32Range                                            NumZonesToDamage;                                  // 0x10(0x10)
	struct Int32Range                                            DamageLevel;                                       // 0x20(0x10)
};


// Size 0x18
struct InvasionArrivalTunnelOfTheDamnedCompletedTelemetryEvent
{
public:
	struct Guid                                                  RivalCrewId;                                       // 0x0(0x10)
	int                                                          TunnelCrewSkillScore;                              // 0x10(0x4)
	int                                                          RivalCrewSkillScore;                               // 0x14(0x4)
};


// Size 0x4
struct InventoryInteractionTakeRequestEvent
{
public:
	int                                                          Index;                                             // 0x0(0x4)
};


// Size 0x10
struct EventWheelDamageLevelChanged
{
public:
	class Actor*                                                 Wheel;                                             // 0x0(0x8)
	int                                                          DamageLevel;                                       // 0x8(0x4)
};


// Size 0x14
struct WaterGunUseItemTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	float                                                        Charge;                                            // 0x10(0x4)
};


// Size 0x40
struct ShowJupiterAccountLinkingPrompt
{
public:
	struct FString                                               JupiterUsername;                                   // 0x0(0x10)
	struct FString                                               FullURL;                                           // 0x10(0x10)
	struct FString                                               DisplayURL;                                        // 0x20(0x10)
	struct FString                                               Code;                                              // 0x30(0x10)
};


// Size 0x8
struct VoyageAvailableForCancel
{
public:
	class VoyageProposalDesc*                                    ProposalDesc;                                      // 0x0(0x8)
};


// Size 0x1
struct EventGuildNameTextboxFocusRequest
{
public:
	bool                                                         ShouldFocusGuildNameTextbox;                       // 0x0(0x1)
};


// Size 0x1
struct EventWielderHasExternalLightSource
{
public:
	bool                                                         bOn;                                               // 0x0(0x1)
};


// Size 0x40
struct CaptainsLogPartDesc
{
public:
	struct StringAssetReference                                  BookSkeletalMesh;                                  // 0x0(0x10)
	int64                                                        BookSkeletalMeshResourceSize;                      // 0x10(0x8)
	struct StringAssetReference                                  BookStaticMesh;                                    // 0x18(0x10)
	int64                                                        BookStaticMeshResourceSize;                        // 0x28(0x8)
	class MaterialInterface*                                     WaterloggedTexture;                                // 0x30(0x8)
	class MaterialInterface*                                     RuinedTexture;                                     // 0x38(0x8)
};


// Size 0x20
struct FinishIntroAnimaticTutorialStepRpc
{
public:
	class AthenaTutorialComponent*                               TutorialComponent;                                 // 0x18(0x8)
};


// Size 0x1c
struct EventUpdateIslandEventToggle
{
public:
	struct Guid                                                  EventID;                                           // 0x0(0x10)
	struct Vector2D                                              EventScreenPos;                                    // 0x10(0x8)
	bool                                                         IsInverted;                                        // 0x18(0x1)
};


// Size 0x10
struct NPCOnSurfaceVOEntry
{
public:
	class SceneDialogueData*                                     DialogueData;                                      // 0x0(0x8)
	class WwiseEvent*                                            VOEvent;                                           // 0x8(0x8)
};


// Size 0x10
struct RequestEventShopOffersEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
};


// Size 0x8
struct ShipCustomizationChestUpdateSavedLoadoutEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x10
struct CrewCancelVoteToBrigEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x8
struct EventPlayerControllerPossessed
{
public:
	class PlayerController*                                      PlayerController;                                  // 0x0(0x8)
};


// Size 0x4
struct SetAdventureIslandBanners
{
public:
	int                                                          Value;                                             // 0x0(0x4)
};


// Size 0x10
struct EventFactionStatsRequest
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
};


// Size 0x14
struct ContestCrewPositionTelemetryFragment
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	int                                                          CrewPositionInLastContest;                         // 0x10(0x4)
};


// Size 0x20
struct UseItemOnServerRpc
{
public:
	class WieldableItem*                                         Item;                                              // 0x18(0x8)
};


// Size 0x8
struct CrewBaseTelemetryFragmentPlayerControllerLookupInput
{
public:
	class PlayerState*                                           CrewMemberPlayerState;                             // 0x0(0x8)
};


// Size 0x10
struct ImpactSurfaceData
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	class ImpactDataAsset*                                       ImpactData;                                        // 0x8(0x8)
};


// Size 0x1c
struct EnterTunnelOfTheDamnedActionStateParams
{
public:
	float                                                        FadeDuration;                                      // 0x0(0x4)
	float                                                        FadeEventTimeout;                                  // 0x4(0x4)
	float                                                        FadeServerTimeout;                                 // 0x8(0x4)
	struct LinearColor                                           FadeColour;                                        // 0xc(0x10)
};


// Size 0x4
struct SetTimeGameServerRequestModel
{
public:
	int                                                          Hours;                                             // 0x0(0x4)
};


// Size 0x8
struct EventPlayerCharacterModelsReplaced
{
public:
	class Actor*                                                 PlayerCharacter;                                   // 0x0(0x8)
};


// Size 0x10
struct InitRHIDiagnosticTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
};


// Size 0x10
struct CrewMember
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
};


// Size 0x30
struct PetSpawnDefinition
{
public:
	class UClass*                                                PetDesc;                                           // 0x0(0x8)
	struct PetCustomisation                                      PetCustomisation;                                  // 0x8(0x28)
};


// Size 0x4
struct GameNarrationOverrideStateChangeEvent
{
public:
	int                                                          Status;                                            // 0x0(0x4)
};


// Size 0x60
struct FiredFromActorActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           FiringActor;                                       // 0x40(0x14)
	struct Vector                                                LaunchVelocity;                                    // 0x54(0xc)
};


// Size 0x10
struct EventObjectWielded
{
public:
	interface                                                    Object;                                            // 0x0(0x10)
};


// Size 0x10
struct CampaignPopUpNotificationInfo
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	class PopUpMessageDesc*                                      PopUp;                                             // 0x8(0x8)
};


// Size 0x10
struct ShipCustomizationChestMutualExclusion
{
public:
	class UClass*                                                A;                                                 // 0x0(0x8)
	class UClass*                                                B;                                                 // 0x8(0x8)
};


// Size 0x18
struct ShipConfigurationSettings
{
public:
	float                                                        MetresSailedStatSendFrequency;                     // 0x0(0x4)
	float                                                        MinimumDistanceSailedBeforeSendingUpdate;          // 0x4(0x4)
	float                                                        MaxVelocityAllowedForServerMigration;              // 0x8(0x4)
	float                                                        MaxAngularVelocityAllowedForServerMigration;       // 0xc(0x4)
	float                                                        ShipHeartbeatFrequencySeconds;                     // 0x10(0x4)
	bool                                                         MigrationBasedOnVelocityEnabled;                   // 0x14(0x1)
};


// Size 0x10
struct BootFlowErrorMessageQueryResponseEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
};


// Size 0x10
struct PirateDeletionSucceededEvent
{
public:
	struct FString                                               PirateId;                                          // 0x0(0x10)
};


// Size 0x28
struct ItemSnapshotTakenEvent
{
public:
	interface                                                    Instagator;                                        // 0x0(0x10)
	struct Guid                                                  SnapshotID;                                        // 0x10(0x10)
	class Object*                                                SnapshotObject;                                    // 0x20(0x8)
};


// Size 0x8
struct PlayerObjectUsageTelemetryFragmentInput
{
public:
	class Object*                                                ObjectBeingUsed;                                   // 0x0(0x8)
};


// Size 0x8
struct EventCharacterSpawned
{
public:
	class Character*                                             Character;                                         // 0x0(0x8)
};


// Size 0x40
struct CargoRunQuestDescDataCompanyLocationHintEntry
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct FText                                                 LocationHint;                                      // 0x8(0x38)
};


// Size 0x10
struct SeaFortAlignmentTableModelCosmeticDefaults
{
public:
	struct FName                                                 ScalarParameterName;                               // 0x0(0x8)
	class CurveFloat*                                            Curve;                                             // 0x8(0x8)
};


// Size 0x50
struct EventUserGameSettingsRadialMappings
{
public:
	struct FName                                                 RadialSlotIndex0SelectedKeyboard;                  // 0x0(0x8)
	struct FName                                                 RadialSlotIndex1SelectedKeyboard;                  // 0x8(0x8)
	struct FName                                                 RadialSlotIndex2SelectedKeyboard;                  // 0x10(0x8)
	struct FName                                                 RadialSlotIndex3SelectedKeyboard;                  // 0x18(0x8)
	struct FName                                                 RadialSlotIndex4SelectedKeyboard;                  // 0x20(0x8)
	struct FName                                                 RadialSlotIndex5SelectedKeyboard;                  // 0x28(0x8)
	struct FName                                                 RadialSlotIndex6SelectedKeyboard;                  // 0x30(0x8)
	struct FName                                                 RadialSlotIndex7SelectedKeyboard;                  // 0x38(0x8)
	struct FName                                                 RadialSlotClockwise;                               // 0x40(0x8)
	struct FName                                                 RadialSlotCounterClockwise;                        // 0x48(0x8)
};


// Size 0x10
struct PremiumCurrencyItemsErrorEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x58
struct MoveToLocationActionStateConstructionInfo
{
public:
	class SceneComponent*                                        RelativeToComponent;                               // 0x40(0x8)
	struct Vector                                                TargetLocation;                                    // 0x48(0xc)
};


// Size 0x8
struct EventCharacterKnockedBack
{
public:
	struct FName                                                 RumbleTag;                                         // 0x0(0x8)
};


// Size 0xc
struct NPCOnDespawnVOEntry
{
public:
	char                                                         DespawnReason;                                     // 0x0(0x1)
	struct FName                                                 VOGroupName;                                       // 0x4(0x8)
};


// Size 0x18
struct EmblemClaim
{
public:
	bool                                                         IsCompleted;                                       // 0x0(0x1)
	struct FString                                               Sig;                                               // 0x8(0x10)
};


// Size 0x40
struct LevelLoadCompletedTelemetryEvent
{
public:
	bool                                                         WasCancelRequested;                                // 0x30(0x1)
	bool                                                         WasCancelActioned;                                 // 0x31(0x1)
	float                                                        DistancePlayerTravelledSinceLoadRequest;           // 0x34(0x4)
	float                                                        TimeSinceLoadRequested;                            // 0x38(0x4)
};


// Size 0x150
struct QuestTableCompanyVoyageCategoryData
{
public:
	class UClass*                                                CategoryId;                                        // 0x0(0x8)
	struct FText                                                 CategoryName;                                      // 0x8(0x38)
	struct StringAssetReference                                  CategoryIcon;                                      // 0x40(0x10)
	struct FText                                                 CategoryLockedDescription;                         // 0x50(0x38)
	bool                                                         IsTutorialCategory;                                // 0x88(0x1)
	bool                                                         IsInfoCategory;                                    // 0x89(0x1)
	bool                                                         IsInfoCategoryWhenNoVoyagesAvailable;              // 0x8a(0x1)
	struct FText                                                 InfoCategoryTitle;                                 // 0x90(0x38)
	struct FText                                                 InfoCategoryDescription;                           // 0xc8(0x38)
	struct FText                                                 InfoCategorySuggestion;                            // 0x100(0x38)
	bool                                                         HideInfoCategorySuggestionInSaferSeas;             // 0x138(0x1)
	struct StringAssetReference                                  InfoCategoryBackgroundImage;                       // 0x140(0x10)
};


// Size 0x10
struct SequenceResponseContainer
{
public:
	int                                                          SequenceIndexToTrigger;                            // 0x0(0x4)
	class Actor*                                                 ResponseActor;                                     // 0x8(0x8)
};


// Size 0x8
struct OtherPartyTelemetryFragmentInput
{
public:
	class Actor*                                                 OtherParty;                                        // 0x0(0x8)
};


// Size 0x8
struct EventMeleeAttackPredictedHit
{
public:
	class Actor*                                                 HitActor;                                          // 0x0(0x8)
};


// Size 0x18
struct EventLanternIsLightOnStateChanged
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	class UClass*                                                InputID;                                           // 0x8(0x8)
	bool                                                         IsLightOn;                                         // 0x10(0x1)
};


// Size 0x1
struct EventDockedToObject
{
public:
	char                                                         ObjectType;                                        // 0x0(0x1)
};


// Size 0x8
struct EventPlayerCharacterExitedShip
{
public:
	class Actor*                                                 PlayerCharacter;                                   // 0x0(0x8)
};


// Size 0x220
struct PremiumStoreItemView
{
public:
	struct FString                                               TopBannerUrl;                                      // 0x200(0x10)
	struct FString                                               BottomBannerUrl;                                   // 0x210(0x10)
};


// Size 0x28
struct SeaFortDistantLightsAssetLoader
{
public:
	class SeaFortsService*                                       Owner;                                             // 0x0(0x8)
	class UClass*                                                LoadedDistantLightsAsset;                          // 0x8(0x8)
};


// Size 0x20
struct MermaidUsedEvent
{
public:
	class Mermaid*                                               Mermaid;                                           // 0x18(0x8)
};


// Size 0x10
struct RequestCompanyProgressFailedEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
};


// Size 0x88
struct MPSDFallbackData
{
public:
	struct UniqueNetIdRepl                                       CaptainUserId;                                     // 0x0(0x18)
	TArray<struct UniqueNetIdRepl>                               CrewUserIds;                                       // 0x18(0x10)
	struct Guid                                                  CrewId;                                            // 0x28(0x10)
	map                                                          ReconnectExpiryTimerHandles;                       // 0x38(0x50)
};


// Size 0x10
struct EventUserGameSettingsSetInteger
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	int                                                          Value;                                             // 0x8(0x4)
	char                                                         Instigator;                                        // 0xc(0x1)
};


// Size 0x10
struct AthenaAnimationSkeletonKnockbackLocomotion
{
public:
	class AnimSequence*                                          Forwards;                                          // 0x0(0x8)
	class AnimSequence*                                          Backwards;                                         // 0x8(0x8)
};


// Size 0x10
struct EventAIOnDelayedAssignedMeshConsumed
{
public:
	class SkeletalMeshComponent*                                 MeshComponent;                                     // 0x0(0x8)
	class SkeletalMesh*                                          ConsumedMesh;                                      // 0x8(0x8)
};


// Size 0x2
struct EventPlayerControllerKillNotification
{
public:
	bool                                                         IsHighContrast;                                    // 0x0(0x1)
	bool                                                         PlaySfx;                                           // 0x1(0x1)
};


// Size 0x50
struct MountpointClientState
{
public:
	class SceneComponent*                                        TrinketRootComponent;                              // 0x0(0x8)
	class UClass*                                                TrinketClassCached;                                // 0x8(0x8)
	struct Transform                                             TrinketRelativePivotOffset;                        // 0x10(0x30)
	class NudgeInterpolationParamsDataAsset*                     NudgeInterpolationParamsDataAsset;                 // 0x40(0x8)
	class TrinketSfxDataAsset*                                   SfxDataAsset;                                      // 0x48(0x8)
};


// Size 0x18
struct SetNonVerbalOption
{
public:
	TArray<String>                                               Phrases;                                           // 0x8(0x10)
};


// Size 0xc
struct EventUserGameSettingsBooleanChanged
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	bool                                                         Value;                                             // 0x8(0x1)
};


// Size 0x30
struct ContestScoreTelemetryGameEvent
{
public:
	char                                                         ScoreReason;                                       // 0x0(0x1)
	int                                                          CurrentScore;                                      // 0x4(0x4)
	int                                                          ScoreChangeAmount;                                 // 0x8(0x4)
	struct FString                                               ScoreContext;                                      // 0x10(0x10)
	struct Guid                                                  InstigatorId;                                      // 0x20(0x10)
};


// Size 0x10
struct TaleQuestTaskCompleteTelemetryEvent
{
public:
	struct Guid                                                  TaskId;                                            // 0x0(0x10)
};


// Size 0x28
struct SignedGuildIdModel
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	char                                                         GuildAffiliation;                                  // 0x10(0x1)
	struct FString                                               Signature;                                         // 0x18(0x10)
};


// Size 0x10
struct AthenaItemsSettingsProjectileCollisionChannelOverride
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	char                                                         ProjectileCollisionChannel;                        // 0x8(0x1)
};


// Size 0x68
struct CompanyShopActionStateConstructionInfo
{
public:
	struct NetObjectPtr                                          NPC;                                               // 0x40(0x14)
};


// Size 0x38
struct SeasonGoalInfo
{
public:
	struct Guid                                                  GoalId;                                            // 0x0(0x10)
	int64                                                        Threshold;                                         // 0x10(0x8)
	struct FString                                               XPGain;                                            // 0x18(0x10)
	struct FString                                               LocalizedTitle;                                    // 0x28(0x10)
};


// Size 0x8
struct NewCaptaincyCustomisationEquipped
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x8
struct EventCharacterInteraction
{
public:
	class Object*                                                Interactable;                                      // 0x0(0x8)
};


// Size 0x10
struct ReplyToGuildInviteResponseModel
{
public:
	struct FString                                               Error;                                             // 0x0(0x10)
};


// Size 0x2
struct CarouselPirateBodyshapeCompass
{
public:
	char                                                         StartDirection;                                    // 0x0(0x1)
	char                                                         EndDirection;                                      // 0x1(0x1)
};


// Size 0x58
struct InteractObjectActionStateConstructionInfo
{
public:
	struct NetSubObjectPtr                                       InteractObject;                                    // 0x40(0x14)
};


// Size 0x20
struct UIScreenTransitionEvent
{
public:
	struct FString                                               CurrentScreen;                                     // 0x0(0x10)
	struct FString                                               PreviousScreen;                                    // 0x10(0x10)
};


// Size 0x14
struct EventShipRemovedFromCrew
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	bool                                                         IsMigrating;                                       // 0x10(0x1)
};


// Size 0x14
struct RewardRequestFailedEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	char                                                         FailureReason;                                     // 0x10(0x1)
};


// Size 0x10
struct TransientActorEntry
{
public:
	class Actor*                                                 Actor;                                             // 0x0(0x8)
};


// Size 0x10
struct CreateSessionFailedEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x10
struct ServiceStatusNotification
{
public:
	uint32                                                       NotificationId;                                    // 0x0(0x4)
	struct DateTime                                              ActivatedDateTimeUtc;                              // 0x8(0x8)
};


// Size 0x10
struct CompanyCatalog
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	class CatalogDataAsset*                                      Catalog;                                           // 0x8(0x8)
};


// Size 0xa0
struct LoadoutCostResponseModel
{
public:
	map                                                          CategoryCosts;                                     // 0x0(0x50)
	map                                                          EntitlementCosts;                                  // 0x50(0x50)
};


// Size 0x30
struct InvasionTunnelDioramaRestrictedSpawnSettings
{
public:
	assetclass                                                   DioramaClass;                                      // 0x0(0x20)
	TArray<class InvasionTunnelDioramaSpawnCondition*>           Conditions;                                        // 0x20(0x10)
};


// Size 0x10
struct ResolutionTelemetryFragment
{
public:
	uint32                                                       ResolutionWidth;                                   // 0x0(0x4)
	uint32                                                       ResolutionHeight;                                  // 0x4(0x4)
	float                                                        ScreenPercentage;                                  // 0x8(0x4)
	bool                                                         DynamicResolution;                                 // 0xc(0x1)
};


// Size 0x38
struct MarkerVariantDesc
{
public:
	class UClass*                                                Variant;                                           // 0x0(0x8)
	class UClass*                                                MarkerType;                                        // 0x8(0x8)
	bool                                                         UseActorMarker;                                    // 0x10(0x1)
	struct StringAssetReference                                  MarkerVfx;                                         // 0x18(0x10)
	struct StringClassReference                                  MarkerClass;                                       // 0x28(0x10)
};


// Size 0x38
struct CurrencyGrantedNotificationUIEvent
{
public:
	char                                                         CurrencyId;                                        // 0x0(0x1)
	int                                                          Amount;                                            // 0x4(0x4)
	struct FString                                               DisplayAmount;                                     // 0x8(0x10)
	struct FString                                               EmissaryAddition;                                  // 0x18(0x10)
	struct FString                                               EmissaryId;                                        // 0x28(0x10)
};


// Size 0x8
struct EventGhostShipDoorCreated
{
public:
	class GhostShipDoor*                                         GhostShipDoor;                                     // 0x0(0x8)
};


// Size 0x40
struct ItemSpawnTelemetryEvent
{
public:
	struct Guid                                                  ItemId;                                            // 0x0(0x10)
	struct FName                                                 SpawnedClass;                                      // 0x10(0x8)
	char                                                         Source;                                            // 0x18(0x1)
	struct FString                                               SourceId;                                          // 0x20(0x10)
	struct Vector                                                SpawnLocation;                                     // 0x30(0xc)
};


// Size 0x8
struct EventOnShipSurfacing
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x48
struct UIPremiumStorePageTransitionEvent
{
public:
	struct FString                                               CurrentPage;                                       // 0x0(0x10)
	struct FString                                               PreviousHighlight;                                 // 0x10(0x10)
	struct FString                                               PreviousPage;                                      // 0x20(0x10)
	struct FString                                               SessionId;                                         // 0x30(0x10)
	float                                                        TimeOnPreviousPage;                                // 0x40(0x4)
};


// Size 0x4
struct MastSailAngleBecameStationaryEvent
{
public:
	float                                                        Angle;                                             // 0x0(0x4)
};


// Size 0x40
struct WorldMapIslandDataCaptureParams
{
public:
	struct Vector                                                CameraPosition;                                    // 0x0(0xc)
	struct Rotator                                               CameraOrientation;                                 // 0xc(0xc)
	struct Vector                                                WorldSpaceCameraPosition;                          // 0x18(0xc)
	float                                                        CameraFOV;                                         // 0x24(0x4)
	float                                                        CameraAspect;                                      // 0x28(0x4)
	float                                                        CameraOrthoWidth;                                  // 0x2c(0x4)
	float                                                        CameraNearClip;                                    // 0x30(0x4)
	float                                                        CameraFarClip;                                     // 0x34(0x4)
	int                                                          TextureWidth;                                      // 0x38(0x4)
	int                                                          TextureHeight;                                     // 0x3c(0x4)
};


// Size 0x1
struct EventLocalPlayerEnteredSittingState
{
public:
	bool                                                         SeatSupportsThirdPersonCamera;                     // 0x0(0x1)
};


// Size 0x28
struct AggressiveGhostShipSpawnTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	char                                                         ShipType;                                          // 0x10(0x1)
	struct Guid                                                  EncounterId;                                       // 0x14(0x10)
	int                                                          WaveIndex;                                         // 0x24(0x4)
};


// Size 0xc
struct ItemPreviewMoveCameraEvent
{
public:
	float                                                        Rotation;                                          // 0x0(0x4)
	float                                                        Pitch;                                             // 0x4(0x4)
	float                                                        Zoom;                                              // 0x8(0x4)
};


// Size 0x60
struct PlayerBuriedItemsDeferredRewardCompensationTelemetryEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct FName                                                 CompanyAffiliation;                                // 0x10(0x8)
	struct FName                                                 RewardId;                                          // 0x18(0x8)
	struct FString                                               UserId;                                            // 0x20(0x10)
	struct FString                                               PirateId;                                          // 0x30(0x10)
	bool                                                         DontRewardCurrency;                                // 0x40(0x1)
	bool                                                         DontRewardXp;                                      // 0x41(0x1)
	bool                                                         DontRewardSeasonXp;                                // 0x42(0x1)
	struct FString                                               DeferralReason;                                    // 0x48(0x10)
	double                                                       RewardMultiplier;                                  // 0x58(0x8)
};


// Size 0x20
struct ServerAsyncLoadingCompleteAckNetworkEvent
{
public:
	char                                                         Reason;                                            // 0x18(0x1)
};


// Size 0x90
struct AttachedToObjectActionStateConstructionInfo
{
public:
	struct Transform                                             AttachTransform;                                   // 0x60(0x30)
};


// Size 0x48
struct AnimationContinuousCycle
{
public:
	class AnimSequence*                                          In;                                                // 0x0(0x8)
	float                                                        InEffectTime;                                      // 0x8(0x4)
	TArray<class AnimSequence*>                                  Loop;                                              // 0x10(0x10)
	class BlendSpace1D*                                          LoopHitReact;                                      // 0x20(0x8)
	class AnimSequence*                                          Out;                                               // 0x28(0x8)
	TArray<class AnimSequence*>                                  OutAlternates;                                     // 0x30(0x10)
	float                                                        OutUndockTime;                                     // 0x40(0x4)
};


// Size 0x10
struct OpenForListEntry
{
public:
	class Pawn*                                                  Pawn;                                              // 0x0(0x8)
	float                                                        TimeUntilDoorFullyOpen;                            // 0x8(0x4)
};


// Size 0x38
struct MeshMemoryConstraintRegistrationBaseTelemetryEvent
{
public:
	bool                                                         HasWorldContext;                                   // 0x0(0x1)
	bool                                                         HasGameState;                                      // 0x1(0x1)
	struct FString                                               Category;                                          // 0x8(0x10)
	struct FString                                               BudgetNoFallback;                                  // 0x18(0x10)
	struct FString                                               MeshReference;                                     // 0x28(0x10)
};


// Size 0x8
struct IslandSelectionType
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
};


// Size 0x18
struct ItemBuryingBaseOverride
{
public:
	TArray<Class>                                                Classes;                                           // 0x0(0x10)
	class ItemDiggingBuryConfig*                                 BuryingConfig;                                     // 0x10(0x8)
};


// Size 0x38
struct MatchModel
{
public:
	struct FString                                               DisplayName;                                       // 0x0(0x10)
	struct FString                                               UserId;                                            // 0x10(0x10)
	bool                                                         DisplayNameFound;                                  // 0x20(0x1)
	struct FString                                               LastSeenOnPlatform;                                // 0x28(0x10)
};


// Size 0x8
struct OnItemAbandoned
{
public:
	class ItemInfo*                                              ItemInfo;                                          // 0x0(0x8)
};


// Size 0x40
struct CutscenePool
{
public:
	struct FName                                                 CutsceneName;                                      // 0x0(0x8)
	int                                                          Priority;                                          // 0x8(0x4)
	int                                                          ActivationChance;                                  // 0xc(0x4)
	bool                                                         ShouldQueue;                                       // 0x10(0x1)
	float                                                        AdditionalPoolCooldown;                            // 0x14(0x4)
	class CutscenePoolType*                                      PoolType;                                          // 0x18(0x8)
	TArray<class SceneDialogueData*>                             DialogueData;                                      // 0x20(0x10)
	TArray<float>                                                CutsceneLengths;                                   // 0x30(0x10)
};


// Size 0x40
struct SetRadialTitleText
{
public:
	struct FText                                                 Text;                                              // 0x8(0x38)
};


// Size 0x30
struct XPGrantedNetworkEvent
{
public:
	uint32                                                       XPGranted;                                         // 0x18(0x4)
	uint32                                                       CurrentLevel;                                      // 0x1c(0x4)
	uint32                                                       CurrentXP;                                         // 0x20(0x4)
	struct FName                                                 CompanyId;                                         // 0x24(0x8)
};


// Size 0x4
struct SetWindMagnitudeGameServerRequestModel
{
public:
	float                                                        Magnitude;                                         // 0x0(0x4)
};


// Size 0x10
struct ClientStartConnectingToServerTelemetryEvent
{
public:
	struct Guid                                                  MatchmakingAttemptId;                              // 0x0(0x10)
};


// Size 0x30
struct KrakenAnimatedTentacleWaterTriggerableFX
{
public:
	class UClass*                                                State;                                             // 0x0(0x8)
	float                                                        WaterHeightOffset;                                 // 0x8(0x4)
	class Object*                                                FirstPersonTargetVFX;                              // 0x10(0x8)
	class Object*                                                ThirdPersonTargetVFX;                              // 0x18(0x8)
	class Object*                                                AboveWaterVFX;                                     // 0x20(0x8)
	class Object*                                                BelowWaterVFX;                                     // 0x28(0x8)
};


// Size 0x20
struct WheelAdditiveProperties
{
public:
	float                                                        RightHandOnHandleAMin;                             // 0x0(0x4)
	float                                                        RightHandOnHandleAMax;                             // 0x4(0x4)
	float                                                        RightHandOnHandleBMin;                             // 0x8(0x4)
	float                                                        RightHandOnHandleBMax;                             // 0xc(0x4)
	float                                                        LeftHandOnHandleAMin;                              // 0x10(0x4)
	float                                                        LeftHandOnHandleAMax;                              // 0x14(0x4)
	float                                                        LeftHandOnHandleBMin;                              // 0x18(0x4)
	float                                                        LeftHandOnHandleBMax;                              // 0x1c(0x4)
};


// Size 0x10
struct GuildNamesFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x8
struct ChestOnShipEvent
{
public:
	class Actor*                                                 CurrentShip;                                       // 0x0(0x8)
};


// Size 0x20
struct LoadoutCategory
{
public:
	struct FString                                               CategoryName;                                      // 0x0(0x10)
	struct FString                                               EntitlementId;                                     // 0x10(0x10)
};


// Size 0x20
struct UnscrambledIdentity
{
public:
	struct Guid                                                  EntityId;                                          // 0x0(0x10)
	struct FString                                               UnscrambledName;                                   // 0x10(0x10)
};


// Size 0x24
struct CaptainsLogCrewSessionStatsEntry
{
public:
	int                                                          DaysAtSea;                                         // 0x0(0x4)
	int                                                          MilesSailed;                                       // 0x4(0x4)
	int                                                          GoldEarned;                                        // 0x8(0x4)
	int                                                          QuestsCompleted;                                   // 0xc(0x4)
	int                                                          DaysSinceLastSunk;                                 // 0x10(0x4)
	int                                                          FishCaught;                                        // 0x14(0x4)
	int                                                          MetresSailed;                                      // 0x18(0x4)
	int                                                          PreviousDaysSinceLastSunk;                         // 0x1c(0x4)
	int                                                          CaptainsPreviousBalance;                           // 0x20(0x4)
};


// Size 0x10
struct EventPlayerUseItemStart
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 UsedItem;                                          // 0x8(0x8)
};


// Size 0x8
struct TutorialEventControlledObjectCreated
{
public:
	class TutorialEventControlledObject*                         TutorialEventControlledObject;                     // 0x0(0x8)
};


// Size 0x10
struct StunAttackerOnHitSurfacePair
{
public:
	class PhysicalMaterial*                                      PhysMaterial;                                      // 0x0(0x8)
	float                                                        StunDuration;                                      // 0x8(0x4)
};


// Size 0xc
struct SprintConditionsParams
{
public:
	float                                                        ForwardInputVectorTolerance;                       // 0x0(0x4)
	float                                                        MinVelocityForwardDot;                             // 0x4(0x4)
	float                                                        MinVelocityMagnitude;                              // 0x8(0x4)
};


// Size 0x10
struct DeepSeaRegionScreenEffects
{
public:
	bool                                                         ShouldUseScreenEffects;                            // 0x0(0x1)
	float                                                        DepthFadeEnd;                                      // 0x4(0x4)
	float                                                        RadialFadeStart;                                   // 0x8(0x4)
	float                                                        RadialFadeEnd;                                     // 0xc(0x4)
};


// Size 0x18
struct ArrivalTunnelOfTheDamnedCompletedTelemetryEvent
{
public:
	struct Vector                                                DestinationLocation;                               // 0x0(0xc)
	struct Rotator                                               DestinationRotation;                               // 0xc(0xc)
};


// Size 0x18
struct ClientEndEngagementMessageEvent
{
public:
	float                                                        ScreenDuration;                                    // 0x0(0x4)
	struct FString                                               EndedScreen;                                       // 0x8(0x10)
};


// Size 0x8
struct EventSetFishingRodWieldedItem
{
public:
	class Actor*                                                 FishingRod;                                        // 0x0(0x8)
};


// Size 0x20
struct UserPresenceRequestEvent
{
public:
	TArray<String>                                               XUIDs;                                             // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x40
struct PuzzleStatueConfigurationPosition
{
public:
	struct Transform                                             PivotTransform;                                    // 0x0(0x30)
	class WwiseEvent*                                            PositionAudioEvent;                                // 0x30(0x8)
};


// Size 0x20
struct RequestPurchaseShopOfferEvent
{
public:
	struct Guid                                                  OfferId;                                           // 0x0(0x10)
	struct FString                                               CatalogName;                                       // 0x10(0x10)
};


// Size 0x50
struct CachedRespawnPoint
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Transform                                             AllocatedRespawnPoint;                             // 0x10(0x30)
	class ShipSpawnLocation*                                     AllocatedSpawnLocation;                            // 0x40(0x8)
};


// Size 0x1e0
struct AthenaAnimationAsyncLoadedFishingAnimations
{
public:
	assetobject                                                  CastIntoHoldBack;                                  // 0x0(0x20)
	assetobject                                                  CastHoldBackLoop;                                  // 0x20(0x20)
	assetobject                                                  CastForwards;                                      // 0x40(0x20)
	assetobject                                                  CastHoldLoop;                                      // 0x60(0x20)
	assetobject                                                  CastToFishing;                                     // 0x80(0x20)
	assetobject                                                  CastFail;                                          // 0xa0(0x20)
	class BlendSpace*                                            Fishing;                                           // 0xc0(0x8)
	class BlendSpace1D*                                          FishingAdditive;                                   // 0xc8(0x8)
	assetobject                                                  IntoFighting;                                      // 0xd0(0x20)
	assetobject                                                  FightingCentral;                                   // 0xf0(0x20)
	assetobject                                                  FightingAdditive;                                  // 0x110(0x20)
	assetobject                                                  Linesnap;                                          // 0x130(0x20)
	class AnimSequence*                                          SuccessReelIn;                                     // 0x150(0x8)
	assetobject                                                  ComedyItemSuccessReelIn;                           // 0x158(0x20)
	assetobject                                                  ShakingAdditive;                                   // 0x178(0x20)
	assetobject                                                  LineSnapShakingAdditive;                           // 0x198(0x20)
	class AnimSequence*                                          FishingToIdle;                                     // 0x1b8(0x8)
	assetobject                                                  FishingToUnequip;                                  // 0x1c0(0x20)
};


// Size 0x20
struct WorldEventSnapshotV1
{
public:
	struct FString                                               EventID;                                           // 0x0(0x10)
	struct FString                                               Status;                                            // 0x10(0x10)
};


// Size 0x18
struct InputSequencePair
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	char                                                         Variant;                                           // 0x8(0x1)
	class AnimMontage*                                           Sequence;                                          // 0x10(0x8)
};


// Size 0x18
struct RequestEntitlementsAsyncFailedTelemetryEvent
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
	char                                                         ServiceFailureReason;                              // 0x1(0x1)
	int                                                          HTTPStatusCode;                                    // 0x4(0x4)
	struct FString                                               AbortedReason;                                     // 0x8(0x10)
};


// Size 0x10
struct GetLoadoutFilteredRequest
{
public:
	struct FString                                               Device;                                            // 0x0(0x10)
};


// Size 0x1
struct EventHUDMouseFocusRequest
{
public:
	bool                                                         RequestFocus;                                      // 0x0(0x1)
};


// Size 0x68
struct MeleeBlockingActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           WieldedItem;                                       // 0x40(0x14)
	class UClass*                                                InputID;                                           // 0x58(0x8)
	float                                                        BlockMovementLockTime;                             // 0x60(0x4)
};


// Size 0x8
struct CharacterSocketCollisionServiceParams
{
public:
	float                                                        MaxCharacterDistanceSqr;                           // 0x0(0x4)
	int                                                          MaxSockets;                                        // 0x4(0x4)
};


// Size 0x4
struct WheelArmIKBoolSets
{
public:
	bool                                                         LeftIKOn;                                          // 0x0(0x1)
	bool                                                         RightIKOn;                                         // 0x1(0x1)
	bool                                                         LeftArmDown;                                       // 0x2(0x1)
	bool                                                         RightArmDown;                                      // 0x3(0x1)
};


// Size 0x14
struct PlayerCharacterSnapshot
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	struct Vector                                                Position;                                          // 0x4(0xc)
	float                                                        Health;                                            // 0x10(0x4)
};


// Size 0x30
struct AthenaAnimationRowboatAnimationsFirstPerson
{
public:
	class AnimSequence*                                          SitDown;                                           // 0x0(0x8)
	class AnimSequence*                                          Stand;                                             // 0x8(0x8)
	class AnimSequence*                                          Idle;                                              // 0x10(0x8)
	class AnimSequence*                                          Row;                                               // 0x18(0x8)
	class AnimSequence*                                          Recover;                                           // 0x20(0x8)
	class AnimSequence*                                          Brake;                                             // 0x28(0x8)
};


// Size 0x10
struct PiratePreviewCreatedEvent
{
public:
	struct FString                                               PreviewURL;                                        // 0x0(0x10)
};


// Size 0x18
struct SupplementalLoadout
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	struct StringAssetReference                                  LoadoutAsset;                                      // 0x8(0x10)
};


// Size 0x18
struct GenericPartDesc
{
public:
	struct StringAssetReference                                  Mesh;                                              // 0x0(0x10)
	int64                                                        CachedMeshResourceSize;                            // 0x10(0x8)
};


// Size 0x1
struct ConsumeEntitlementRequestFailedTelemetryEvent
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
};


// Size 0x10
struct AthenaAnimationPetSelectedArrayAnimations
{
public:
	class AnimSequence*                                          HeldBaseIdle_A;                                    // 0x0(0x8)
	class AnimSequence*                                          HeldBaseIdle_B;                                    // 0x8(0x8)
};


// Size 0x18
struct ItemRequirementData
{
public:
	int                                                          RequiredNumberToMatch;                             // 0x0(0x4)
	TArray<class Class*>                                         RequiredItemsInLoadout;                            // 0x8(0x10)
};


// Size 0x10
struct CrewBeganTaleEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x68
struct HttpResponseTelemetryFragmentInput
{
public:
	struct FString                                               Method;                                            // 0x0(0x10)
	struct FString                                               EndPoint;                                          // 0x10(0x10)
	struct FString                                               Context;                                           // 0x20(0x10)
	char                                                         Result;                                            // 0x30(0x1)
	int                                                          StatusCode;                                        // 0x34(0x4)
	int                                                          DurationMS;                                        // 0x38(0x4)
	struct FString                                               ResponseBody;                                      // 0x40(0x10)
	TArray<String>                                               ResponseHeaders;                                   // 0x50(0x10)
	int                                                          Attempts;                                          // 0x60(0x4)
};


// Size 0x30
struct ProjectileServiceClientProjectileHitVolumeImpact
{
public:
	double                                                       TimeStamp;                                         // 0x0(0x8)
	int                                                          ProjectileIndex;                                   // 0x8(0x4)
	struct Guid                                                  TelemetryAttackId;                                 // 0xc(0x10)
	class AthenaPlayerCharacter*                                 InstigatingPlayerCharacter;                        // 0x20(0x8)
	class Actor*                                                 HitActor;                                          // 0x28(0x8)
};


// Size 0x28
struct ChainLink
{
public:
	class Actor*                                                 Source;                                            // 0x0(0x8)
	class Actor*                                                 Target;                                            // 0x8(0x8)
	struct Vector_NetQuantize                                    LastSourceLocation;                                // 0x10(0xc)
	struct Vector_NetQuantize                                    LastTargetLocation;                                // 0x1c(0xc)
};


// Size 0x18
struct ShowNewInviteConfirmationModalEvent
{
public:
	bool                                                         IsSaferSeasInvite;                                 // 0x0(0x1)
	struct FString                                               Message;                                           // 0x8(0x10)
};


// Size 0x80
struct MountpointParams
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x0(0xc)
	class UClass*                                                PreviewTrinketDesc;                                // 0x10(0x8)
	struct Transform                                             MountpointRelativePosition;                        // 0x20(0x30)
	struct Vector                                                InteractionBoxExtent;                              // 0x50(0xc)
	TArray<class Class*>                                         AcceptedMountableTypes;                            // 0x60(0x10)
	float                                                        MaxNudgeAngle;                                     // 0x70(0x4)
};


// Size 0x10
struct RequestClothingChestClothingEntitlementsEvent
{
public:
	struct FString                                               ItemCategory;                                      // 0x0(0x10)
};


// Size 0x10
struct ShovelDigActionStateParams
{
public:
	class CurveFloat*                                            SuccessfulPitchBlendCurve;                         // 0x0(0x8)
	class CurveFloat*                                            DeflectedPitchBlendCurve;                          // 0x8(0x8)
};


// Size 0x28
struct InputMontagePair
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	char                                                         Variant;                                           // 0x8(0x1)
	class AnimSequenceBase*                                      Into;                                              // 0x10(0x8)
	class AnimSequenceBase*                                      Loop;                                              // 0x18(0x8)
	class AnimSequenceBase*                                      Outof;                                             // 0x20(0x8)
};


// Size 0x10
struct DamageableVulnerabilityPair
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	float                                                        DamageMultiplier;                                  // 0x8(0x4)
};


// Size 0x40
struct IsWieldingItemCategoryCondition
{
public:
	TArray<Class>                                                TargetItemCategories;                              // 0x28(0x10)
	bool                                                         InvalidIfStashed;                                  // 0x38(0x1)
};


// Size 0x20
struct QuestTableDataGeneratedTelemetryEvent
{
public:
	bool                                                         NewPlayer;                                         // 0x0(0x1)
	int                                                          NumDiscoverTabTiles;                               // 0x4(0x4)
	TArray<String>                                               DiscoverTabTileIds;                                // 0x8(0x10)
	bool                                                         ShipHasLootOnboard;                                // 0x18(0x1)
};


// Size 0x1
struct EnableDefaultStormsGameServerRequestModel
{
public:
	bool                                                         Enable;                                            // 0x0(0x1)
};


// Size 0x10
struct PlayerBuriedItemServiceCrewMapsChangedEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x18
struct ClientBootFlowSelectUserSucceededTelemetryEvent
{
public:
	struct FString                                               NativeUserId;                                      // 0x0(0x10)
	bool                                                         WasUiShown;                                        // 0x10(0x1)
};


// Size 0x4
struct GraphicalSettingsTelemetryEvent
{
public:
	uint32                                                       AutoDetectBucket;                                  // 0x0(0x4)
};


// Size 0x18
struct FeatureToggledFogBankManagerAsset
{
public:
	struct FeatureFlag                                           FeatureToggle;                                     // 0x0(0xc)
	class FogBankManagerDataAsset*                               Asset;                                             // 0x10(0x8)
};


// Size 0x28
struct VoyageProposalLostVotingSessionTelemetryEvent
{
public:
	struct Guid                                                  VoyageProposalSessionId;                           // 0x0(0x10)
	struct FString                                               VoyageProposalEntitlementId;                       // 0x10(0x10)
	int                                                          NumberOfVotes;                                     // 0x20(0x4)
};


// Size 0x38
struct CargoDeliveredTelemetryEvent
{
public:
	bool                                                         GoldAwarded;                                       // 0x0(0x1)
	struct Guid                                                  BootyId;                                           // 0x4(0x10)
	char                                                         BootyType;                                         // 0x14(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
	int                                                          MaxQuality;                                        // 0x28(0x4)
	int                                                          DeliveredQuality;                                  // 0x2c(0x4)
	bool                                                         DeliveredOnTime;                                   // 0x30(0x1)
};


// Size 0x40
struct TreasureSoldTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         BootyType;                                         // 0x10(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
	bool                                                         GoldAwarded;                                       // 0x28(0x1)
	char                                                         Source;                                            // 0x29(0x1)
	struct FString                                               TreasurePurchaser;                                 // 0x30(0x10)
};


// Size 0xa8
struct AthenaAnimationEmoteAnimations
{
public:
	struct FName                                                 EmoteName;                                         // 0x0(0x8)
	char                                                         EmoteSequenceType;                                 // 0x8(0x1)
	assetobject                                                  OneShotSequence;                                   // 0x10(0x20)
	assetobject                                                  ContinuousIn;                                      // 0x30(0x20)
	TArray<Class>                                                ContinuousCycle;                                   // 0x50(0x10)
	assetobject                                                  ContinuousLocomotion;                              // 0x60(0x20)
	assetobject                                                  EmotePreviewSequence;                              // 0x80(0x20)
	class UClass*                                                UseWithObject;                                     // 0xa0(0x8)
};


// Size 0x10
struct PLSectionBundleEntry
{
public:
	class PirateLegendSection*                                   Section;                                           // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
};


// Size 0x30
struct PlayerNameData
{
public:
	struct FString                                               PlayerId;                                          // 0x0(0x10)
	struct FString                                               PlayerName;                                        // 0x10(0x10)
	struct FString                                               UGCCheckUserId;                                    // 0x20(0x10)
};


// Size 0x1
struct GetActorsInRadiusGameServerResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
};


// Size 0x38
struct ShipPartChangedEvent
{
public:
	struct FString                                               PartId;                                            // 0x18(0x10)
	struct FString                                               EntitlementId;                                     // 0x28(0x10)
};


// Size 0x10
struct CompanyConditionalStatsTriggerType
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	class UClass*                                                ConditionalStatsTriggerType;                       // 0x8(0x8)
};


// Size 0x30
struct PlayerDefeatedReapersTributeShipBoxedRpc
{
public:
	struct Guid                                                  ControllingCrewId;                                 // 0x18(0x10)
	class Actor*                                                 ReapersTributeShip;                                // 0x28(0x8)
};


// Size 0x30
struct ServerContestScoreUpdateTelemetryEvent
{
public:
	char                                                         ReasonForScoreChange;                              // 0x0(0x1)
	int                                                          CurrentCrewScore;                                  // 0x4(0x4)
	int                                                          ScoreChangeAmount;                                 // 0x8(0x4)
	struct FString                                               ScoreContext;                                      // 0x10(0x10)
	struct Guid                                                  InstigatorId;                                      // 0x20(0x10)
};


// Size 0x60
struct NPCDialogHeaderByConditionText
{
public:
	struct FText                                                 Text;                                              // 0x0(0x38)
	class UClass*                                                InteractResponse;                                  // 0x38(0x8)
	class WwiseEvent*                                            InteractionAudioEvent;                             // 0x40(0x8)
	class UClass*                                                InteractParticipantType;                           // 0x48(0x8)
	TArray<class NPCDialogConditional*>                          Conditions;                                        // 0x50(0x10)
};


// Size 0x8
struct ChestOnWatercraftEvent
{
public:
	class Actor*                                                 CurrentWatercraft;                                 // 0x0(0x8)
};


// Size 0x20
struct ReplyToGuildInviteErrorEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct FString                                               ErrorId;                                           // 0x10(0x10)
};


// Size 0x18
struct PuzzleVaultCompletedTelemetryEvent
{
public:
	struct Guid                                                  VaultId;                                           // 0x0(0x10)
	struct FName                                                 VaultType;                                         // 0x10(0x8)
};


// Size 0xc
struct SeaFortAlignmentChangedTelemetryEvent
{
public:
	char                                                         PreviousAlignment;                                 // 0x0(0x1)
	char                                                         NewAlignment;                                      // 0x1(0x1)
	struct FName                                                 IslandName;                                        // 0x4(0x8)
};


// Size 0x14
struct EventOnCrewStorageUpdate
{
public:
	struct Guid                                                  CrewStoring;                                       // 0x0(0x10)
	int16                                                        IslandHash;                                        // 0x10(0x2)
};


// Size 0x48
struct ProjectileHitScanPerWeaponMeshPairings
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	class StaticMesh*                                            TrailsMeshHitScan;                                 // 0x8(0x8)
	class MaterialInterface*                                     MaterialHitScan;                                   // 0x10(0x8)
	int                                                          MaxTrails;                                         // 0x18(0x4)
};


// Size 0x20
struct PetLoadoutItem
{
public:
	class UClass*                                                PetEntitlementDesc;                                // 0x0(0x8)
	class UClass*                                                PetCustomizationDesc;                              // 0x8(0x8)
	struct FString                                               PetName;                                           // 0x10(0x10)
};


// Size 0x8
struct NotificationStickiness
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	uint32                                                       StickDurationMs;                                   // 0x4(0x4)
};


// Size 0x18
struct RequestPetChestPreviewUpdateEvent
{
public:
	char                                                         Action;                                            // 0x0(0x1)
	struct FString                                               Subject;                                           // 0x8(0x10)
};


// Size 0x28
struct TextureGroupMemorySummary
{
public:
	struct FString                                               TextureGroupName;                                  // 0x0(0x10)
	uint64                                                       MemMax;                                            // 0x10(0x8)
	uint64                                                       MemMin;                                            // 0x18(0x8)
	uint64                                                       MemAvg;                                            // 0x20(0x8)
};


// Size 0x50
struct GuildBrandingModel
{
public:
	struct FString                                               GuildName;                                         // 0x0(0x10)
	struct FString                                               Icon;                                              // 0x10(0x10)
	struct FString                                               ColourSwatch;                                      // 0x20(0x10)
	struct FString                                               Theme;                                             // 0x30(0x10)
	struct FString                                               Motto;                                             // 0x40(0x10)
};


// Size 0x28
struct ShipIdentity
{
public:
	struct FString                                               UnscrambledShipName;                               // 0x0(0x10)
	int                                                          ScrambledShipNameIndex;                            // 0x10(0x4)
	struct FString                                               ClientShipName;                                    // 0x18(0x10)
};


// Size 0x80
struct ScrambledIdentity
{
public:
	struct Guid                                                  EntityId;                                          // 0x0(0x10)
	struct FString                                               UnscrambledName;                                   // 0x10(0x10)
	struct UniqueNetIdRepl                                       OwnersUserId;                                      // 0x20(0x18)
	struct FText                                                 ScrambledName;                                     // 0x38(0x38)
	struct FString                                               ClientName;                                        // 0x70(0x10)
};


// Size 0x18
struct BellDesc
{
public:
	class StaticMesh*                                            BellMesh;                                          // 0x0(0x8)
	class WwiseEvent*                                            BellRingSFX;                                       // 0x8(0x8)
	class WwiseEvent*                                            BellRingTurbulenceSFX;                             // 0x10(0x8)
};


// Size 0x8
struct ItemLoadoutItemAddedEvent
{
public:
	class ItemInfo*                                              Item;                                              // 0x0(0x8)
};


// Size 0x28
struct FeaturedEntitlements
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	struct StringAssetReference                                  EntitlementsAsset;                                 // 0x8(0x10)
	struct StringAssetReference                                  SupplementalEntitlementMap;                        // 0x18(0x10)
};


// Size 0x40
struct ClientNPCDialogBeganTelemetryEvent
{
public:
	struct Guid                                                  NPCInteractionSessionId;                           // 0x0(0x10)
	struct FString                                               NPCDialogTreeDataAsset;                            // 0x10(0x10)
	struct FString                                               NPCInteracted;                                     // 0x20(0x10)
	struct FString                                               NPCInteractedType;                                 // 0x30(0x10)
};


// Size 0x8
struct WalletBalanceItem
{
public:
	char                                                         CurrencyId;                                        // 0x0(0x1)
	uint32                                                       Balance;                                           // 0x4(0x4)
};


// Size 0x10
struct EventWieldableItemSetIsWielded
{
public:
	class Actor*                                                 Wielder;                                           // 0x0(0x8)
	bool                                                         bIsWielded;                                        // 0x8(0x1)
	bool                                                         bGettingDropped;                                   // 0x9(0x1)
	bool                                                         bIsUnstashing;                                     // 0xa(0x1)
};


// Size 0x10
struct InventoryManipulatorAutoEquipPolicyEntry
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	char                                                         Policy;                                            // 0x8(0x1)
};


// Size 0x18
struct PlayerBuriedItemServiceMapTakenFromTavernBoardEvent
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x10(0x8)
};


// Size 0x10
struct RequestPetChestPetEntitlementsEvent
{
public:
	struct FString                                               ItemCategory;                                      // 0x0(0x10)
};


// Size 0x18
struct CompanyRankGradeData
{
public:
	class UClass*                                                Rank;                                              // 0x0(0x8)
	struct StringAssetReference                                  Ribbon;                                            // 0x8(0x10)
};


// Size 0x30
struct CarouselPirateDesc
{
public:
	int                                                          Seed;                                              // 0x0(0x4)
	char                                                         Gender;                                            // 0x4(0x1)
	char                                                         Ethnicity;                                         // 0x5(0x1)
	float                                                        Age;                                               // 0x8(0x4)
	struct RadialCoordinate                                      BodyShape;                                         // 0xc(0x8)
	float                                                        Dirtiness;                                         // 0x14(0x4)
	float                                                        Wonkiness;                                         // 0x18(0x4)
	TArray<class Class*>                                         Outfit;                                            // 0x20(0x10)
};


// Size 0x8
struct WheelSnapshot
{
public:
	float                                                        Angle;                                             // 0x0(0x4)
	float                                                        MaxAngle;                                          // 0x4(0x4)
};


// Size 0x14
struct ReapersMarkLevelChanged
{
public:
	int                                                          NewLevel;                                          // 0x0(0x4)
	struct Guid                                                  AssociatedCrew;                                    // 0x4(0x10)
};


// Size 0x18
struct WieldableBookPageReference
{
public:
	struct StringAssetReference                                  PageReference;                                     // 0x0(0x10)
	char                                                         NumberOfPages;                                     // 0x10(0x1)
};


// Size 0x10
struct OnStartSlidingOnWalkwayEvent
{
public:
	class WwiseEvent*                                            WalkwaySlideLoopStart;                             // 0x0(0x8)
	class WwiseEvent*                                            WalkwayLoopEnd;                                    // 0x8(0x8)
};


// Size 0x20
struct MountedWeaponFireRejectionRpc
{
public:
	class Object*                                                MountedWeaponObject;                               // 0x18(0x8)
};


// Size 0x48
struct AthenaAnimationFootPlanting
{
public:
	struct CollisionResponseContainer                            OverrideRaycast;                                   // 0x8(0x20)
	float                                                        HipHeight;                                         // 0x28(0x4)
	float                                                        HipPullStrength;                                   // 0x2c(0x4)
	float                                                        DownDistance;                                      // 0x30(0x4)
	float                                                        DownDistanceRangeStart;                            // 0x34(0x4)
	float                                                        DownDistanceRangeEnd;                              // 0x38(0x4)
	float                                                        IKLegStretch;                                      // 0x3c(0x4)
	float                                                        SlopeAngle;                                        // 0x40(0x4)
	bool                                                         Active;                                            // 0x44(0x1)
	bool                                                         FeetContact;                                       // 0x45(0x1)
};


// Size 0x1
struct PlayerRequiresMermaidTelemetryEvent
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
};


// Size 0x18
struct AnimatedMechanismActionState
{
public:
	int                                                          AnimationId;                                       // 0x0(0x4)
	double                                                       StartTime;                                         // 0x8(0x8)
	double                                                       EndTime;                                           // 0x10(0x8)
};


// Size 0x20
struct MatineeActorStopNetworkEvent
{
public:
	class MatineeActor*                                          MatineeActor;                                      // 0x18(0x8)
};


// Size 0x18
struct EventTransferObjectState
{
public:
	interface                                                    Target;                                            // 0x0(0x10)
	class Actor*                                                 TargetActor;                                       // 0x10(0x8)
};


// Size 0x10
struct RadialInputBindings
{
public:
	class UClass*                                                GamepadActivatedId;                                // 0x0(0x8)
	class UClass*                                                GamepadDectivatedId;                               // 0x8(0x8)
};


// Size 0x8
struct EventCannonFiredOnServer
{
public:
	class Cannon*                                                Cannon;                                            // 0x0(0x8)
};


// Size 0x8
struct KrakenSpawnLocationParams
{
public:
	float                                                        KrakenRadius;                                      // 0x0(0x4)
	float                                                        MinDistanceFromExistingLocations;                  // 0x4(0x4)
};


// Size 0x90
struct WeaponProjectilePendingImpact
{
public:
	double                                                       TimeStamp;                                         // 0x0(0x8)
	struct HitResult                                             HitResult;                                         // 0x8(0x80)
	bool                                                         RequiresValidation;                                // 0x88(0x1)
	bool                                                         AwaitingValidation;                                // 0x89(0x1)
	float                                                        ProjectileTimeAlive;                               // 0x8c(0x4)
};


// Size 0x14
struct EventHandInMegalodonSoul
{
public:
	char                                                         SoulType;                                          // 0x0(0x1)
	struct Guid                                                  CrewId;                                            // 0x4(0x10)
};


// Size 0x38
struct SkeletonCustomAnimationBlueprintPlayingAnimations
{
public:
	class AnimSequence*                                          OneShot;                                           // 0x0(0x8)
	class AnimSequence*                                          ContinuousIn;                                      // 0x8(0x8)
	class AnimSequence*                                          ContinuousLoop_A;                                  // 0x10(0x8)
	class AnimSequence*                                          ContinuousLoop_B;                                  // 0x18(0x8)
	class AnimSequence*                                          ContinuousOut;                                     // 0x20(0x8)
	TArray<class AnimSequence*>                                  AlternateContinuousOuts;                           // 0x28(0x10)
};


// Size 0x28
struct PlayLandmarkReactionRPC
{
public:
	class Landmark*                                              Landmark;                                          // 0x18(0x8)
	int                                                          LandmarkReactionIndex;                             // 0x20(0x4)
};


// Size 0x30
struct SpawnerCreatedAutomationEvent
{
public:
	class Actor*                                                 SpawnerLocation;                                   // 0x0(0x8)
	class AISpawner*                                             Spawner;                                           // 0x28(0x8)
};


// Size 0x18
struct ShipNameChangedOnServerEvent
{
public:
	struct FString                                               ShipName;                                          // 0x0(0x10)
	int                                                          ScrambledShipNameIndex;                            // 0x10(0x4)
};


// Size 0x50
struct MaskPostProcessParams
{
public:
	class MaterialInterface*                                     MaterialParent;                                    // 0x0(0x8)
	class Texture2D*                                             LensMaskOverride;                                  // 0x8(0x8)
	struct LinearColor                                           LensTint;                                          // 0x10(0x10)
	class CurveFloat*                                            BlurCurve;                                         // 0x20(0x8)
	float                                                        BlurInDuration;                                    // 0x28(0x4)
	float                                                        BlurOutDuration;                                   // 0x2c(0x4)
	float                                                        SecondsUntilPostStarts;                            // 0x30(0x4)
	class MaterialInstanceDynamic*                               DynamicMaterialInstance;                           // 0x40(0x8)
};


// Size 0x10
struct AggressiveGhostShipDroppedMineTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
};


// Size 0x4
struct BlueprintableIntegerHandle
{
public:
	int                                                          Handle;                                            // 0x0(0x4)
};


// Size 0x78
struct TunnelOfTheDamnedInstance
{
public:
	class UClass*                                                CurrentTunnelArtStyle;                             // 0x0(0x8)
	map                                                          AvailableTunnelArtStyles;                          // 0x8(0x50)
	interface                                                    ActiveInstance;                                    // 0x68(0x10)
};


// Size 0x14
struct CrewCompletedEmergentVoyageEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	bool                                                         DoNotNotifyParticipantsOnVoyageComplete;           // 0x10(0x1)
};


// Size 0x10
struct WorldSnapshot
{
public:
	struct FName                                                 Version;                                           // 0x8(0x8)
};


// Size 0x10
struct GuildNameChangedEvent
{
public:
	struct FString                                               GuildName;                                         // 0x0(0x10)
};


// Size 0x10
struct LandmarkReactionKeyFrame
{
public:
	class LandmarkReactionEvent*                                 Event;                                             // 0x0(0x8)
	float                                                        KeyFrame;                                          // 0x8(0x4)
};


// Size 0x98
struct VoyageChestDiscoveredInContest
{
public:
	struct FString                                               DiscovererName;                                    // 0x18(0x10)
	bool                                                         IsDiscovererMe;                                    // 0x28(0x1)
	bool                                                         PlayAudio;                                         // 0x29(0x1)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x30(0x8)
	struct FText                                                 CrewName;                                          // 0x38(0x38)
	struct StringAssetReference                                  ToastBackgroundImage;                              // 0x70(0x10)
	struct StringAssetReference                                  BackgroundImage;                                   // 0x80(0x10)
	struct FName                                                 AudioEventName;                                    // 0x90(0x8)
};


// Size 0x18
struct ProjectileWeaponFireInaccuracySeedMismatchTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	int                                                          ClientSeed;                                        // 0x10(0x4)
	int                                                          ServerSeed;                                        // 0x14(0x4)
};


// Size 0x8
struct AchievementSailFullyWithTheWind
{
public:
	float                                                        DistanceToTravelInMetres;                          // 0x0(0x4)
};


// Size 0x8
struct EventResetSettingsGroup
{
public:
	struct FName                                                 SettingsGroupNameToReset;                          // 0x0(0x8)
};


// Size 0x20
struct WheelArmIKDownWithinRange
{
public:
	float                                                        LeftArmDownRangeAMin;                              // 0x0(0x4)
	float                                                        LeftArmDownRangeAMax;                              // 0x4(0x4)
	float                                                        LeftArmDownRangeBMin;                              // 0x8(0x4)
	float                                                        LeftArmDownRangeBMax;                              // 0xc(0x4)
	float                                                        RightArmDownRangeAMin;                             // 0x10(0x4)
	float                                                        RightArmDownRangeAMax;                             // 0x14(0x4)
	float                                                        RightArmDownRangeBMin;                             // 0x18(0x4)
	float                                                        RightArmDownRangeBMax;                             // 0x1c(0x4)
};


// Size 0x28
struct GuildChroniclesPirateId
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct Guid                                                  PirateId;                                          // 0x18(0x10)
};


// Size 0x8
struct ThrowingKnifeProxySpawnEvent
{
public:
	class ItemProxy*                                             Proxy;                                             // 0x0(0x8)
};


// Size 0x10
struct StorageContainerWeightedItemListEntry
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	class UClass*                                                ItemDesc;                                          // 0x8(0x8)
};


// Size 0x58
struct CappedItemsByGroup
{
public:
	map                                                          ItemGroupMapping;                                  // 0x0(0x50)
};


// Size 0x10
struct PlayerNameOverrideTelemetryEvent
{
public:
	struct FString                                               PlayerNameOverride;                                // 0x0(0x10)
};


// Size 0x10
struct AggressiveGhostShipImpactDamage
{
public:
	class UClass*                                                ImpactProjectileId;                                // 0x0(0x8)
	float                                                        Damage;                                            // 0x8(0x4)
};


// Size 0x28
struct SeaFortKeyPickedUpNetworkEvent
{
public:
	class PopUpMessageDesc*                                      KeyDiscoveredPopUpDesc;                            // 0x18(0x8)
	class PopUpMessageDesc*                                      KeyHandInHintPopUpDesc;                            // 0x20(0x8)
};


// Size 0xf0
struct LPVAdaptationState
{
public:
	struct Transform                                             InitialTransform;                                  // 0x0(0x30)
	struct Transform                                             DestinationTransform;                              // 0x30(0x30)
	struct Transform                                             CurrentTransform;                                  // 0x60(0x30)
	struct Transform                                             SavedOffShipTransform;                             // 0x90(0x30)
	float                                                        BlendWeight;                                       // 0xc0(0x4)
	float                                                        BlendTime;                                         // 0xc4(0x4)
	float                                                        BlendTranslationTime;                              // 0xc8(0x4)
	float                                                        AdditionalAdaptationTime;                          // 0xcc(0x4)
	float                                                        DefaultRotationBlendTime;                          // 0xd0(0x4)
	float                                                        DefaultTranslationBlendTime;                       // 0xd4(0x4)
	float                                                        DefaultAdditionalBlendTime;                        // 0xd8(0x4)
	char                                                         DefaultAdaptationType;                             // 0xdc(0x1)
	char                                                         AdaptationType;                                    // 0xdd(0x1)
	bool                                                         bIsPlayerInLPVRefFrameArea;                        // 0xe0(0x1)
	bool                                                         bIsLPVAdapting;                                    // 0xe0(0x1)
	bool                                                         bAdaptRotationOnly;                                // 0xe0(0x1)
	bool                                                         bUseInstanceDefaultValues;                         // 0xe0(0x1)
};


// Size 0x1
struct LocalGameChatStatusEvent
{
public:
	char                                                         Status;                                            // 0x0(0x1)
};


// Size 0x8
struct GuildNumberOfShipsChangedEvent
{
public:
	int                                                          OldNumberOfShips;                                  // 0x0(0x4)
	int                                                          CurrentNumberOfShips;                              // 0x4(0x4)
};


// Size 0xc
struct StandardSailDynamicsParameters
{
public:
	float                                                        ForceGeneratedByWindSpeedPerMPS;                   // 0x0(0x4)
	float                                                        AirDragPerSailPerMPS;                              // 0x4(0x4)
	float                                                        PowerRatioOfSailForwardForceToFullForce;           // 0x8(0x4)
};


// Size 0x38
struct AggressiveGhostShipSplineDataVariables
{
public:
	double                                                       StartTime;                                         // 0x0(0x8)
	double                                                       StartTimeOffset;                                   // 0x8(0x8)
	TArray<float>                                                SplineOffsets;                                     // 0x10(0x10)
	struct Vector                                                CentrePoint;                                       // 0x20(0xc)
	float                                                        StartAngleOffset;                                  // 0x2c(0x4)
	bool                                                         ReverseDirection;                                  // 0x30(0x1)
};


// Size 0x18
struct BootyItemDroppedOnShipEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class ItemInfo*                                              ItemOnShip;                                        // 0x8(0x8)
	bool                                                         FirstTimeDroppedOnOwnOrAnotherShipByCrew;          // 0x10(0x1)
	bool                                                         FirstTimeDroppedOnShipByAnyCrew;                   // 0x11(0x1)
};


// Size 0x18
struct ShipCameraAnimation
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	class CameraAnim*                                            Animation;                                         // 0x8(0x8)
	class CurveFloat*                                            BlendCurve;                                        // 0x10(0x8)
};


// Size 0x18
struct UIPremiumStoreOpenEvent
{
public:
	bool                                                         IsFrontend;                                        // 0x0(0x1)
	struct FString                                               SessionId;                                         // 0x8(0x10)
};


// Size 0x48
struct ShipDamagedTelemetryEvent
{
public:
	struct FString                                               DamageType;                                        // 0x0(0x10)
	struct Vector                                                DamageLocation;                                    // 0x10(0xc)
	struct FString                                               DamagedShipPart;                                   // 0x20(0x10)
	int                                                          DamageLevel;                                       // 0x30(0x4)
	struct Guid                                                  AttackId;                                          // 0x34(0x10)
};


// Size 0xa0
struct Crew
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  SessionId;                                         // 0x10(0x10)
	TArray<class PlayerState*>                                   Players;                                           // 0x20(0x10)
	struct CrewSessionTemplate                                   CrewSessionTemplate;                               // 0x30(0x38)
	struct Guid                                                  LiveryID;                                          // 0x68(0x10)
	TArray<class Actor*>                                         AssociatedActors;                                  // 0x80(0x10)
	bool                                                         HasEverSetSail;                                    // 0x90(0x1)
	bool                                                         RequiresDiveOnceShipHasSpawned;                    // 0x91(0x1)
	bool                                                         CrewDivingToWorldEvent;                            // 0x92(0x1)
	int                                                          ScrambleNameIndex;                                 // 0x94(0x4)
	struct GenericTeamId                                         TeamID;                                            // 0x98(0x1)
};


// Size 0x8
struct ShipTemplate
{
public:
	class UClass*                                                ShipSizeObject;                                    // 0x0(0x8)
};


// Size 0x38
struct PS5AchievementsUpdatedFromServicesTelemetry
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
	struct FString                                               PsnId;                                             // 0x20(0x10)
	bool                                                         Success;                                           // 0x30(0x1)
	int                                                          AchievementsUpdatedCount;                          // 0x34(0x4)
};


// Size 0x60
struct WorldMapIslandData
{
public:
	struct FText                                                 Name;                                              // 0x0(0x38)
	struct FString                                               IslandUrl;                                         // 0x38(0x10)
	float                                                        MinX;                                              // 0x48(0x4)
	float                                                        MinY;                                              // 0x4c(0x4)
	float                                                        MaxX;                                              // 0x50(0x4)
	float                                                        MaxY;                                              // 0x54(0x4)
	float                                                        Rotation;                                          // 0x58(0x4)
	float                                                        LabelOffset;                                       // 0x5c(0x4)
};


// Size 0x1
struct SchedulesRefreshRequestedTelemetryEvent
{
public:
	bool                                                         IsForcedRefresh;                                   // 0x0(0x1)
};


// Size 0x130
struct BowSplashProbe
{
public:
	char                                                         ShipAlignmentType;                                 // 0x128(0x1)
};


// Size 0x10
struct RequestShipCustomizationChestEquipShipCustomizationEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x8
struct EventGhostShipReleaseIndefiniteDoorLock
{
public:
	class Object*                                                Owner;                                             // 0x0(0x8)
};


// Size 0x40
struct AthenaStreamedLevelItem
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	class AthenaStreamedLevelDataAsset*                          DataAsset;                                         // 0x10(0x8)
	struct FeatureFlag                                           FeatureFlag;                                       // 0x18(0xc)
	struct FString                                               UniqueId;                                          // 0x28(0x10)
	bool                                                         ShouldBeVisibleOnLoad;                             // 0x38(0x1)
	bool                                                         ClientOnlyVisible;                                 // 0x39(0x1)
};


// Size 0xf8
struct TakeFlameOfFateParams
{
public:
	bool                                                         IncludeTakeFlameOfFateActionRule;                  // 0x0(0x1)
	class UClass*                                                ActionRuleNotificationInputId;                     // 0x8(0x8)
	char                                                         ActionRulePriority;                                // 0x10(0x1)
	struct FText                                                 TakeFlameOfFateTooltipText;                        // 0x18(0x38)
	struct FText                                                 LanternNotRaisedToolTipText;                       // 0x50(0x38)
	struct FText                                                 NotWieldingFlameTooltipText;                       // 0x88(0x38)
	struct FText                                                 CannotSetFlameTooltipText;                         // 0xc0(0x38)
};


// Size 0x40
struct ProjectileHitTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               ProjectileId;                                      // 0x10(0x10)
	struct FString                                               HitObjectId;                                       // 0x20(0x10)
	struct FString                                               HitObjectType;                                     // 0x30(0x10)
};


// Size 0x20
struct PlayerGeneratedMapsContainerUnregisterServerEventsRpc
{
public:
	class Object*                                                InPlayerGeneratedMapsContainerOwnerObject;         // 0x18(0x8)
};


// Size 0x1
struct SignOutButtonVisibilityEvent
{
public:
	bool                                                         IsVisible;                                         // 0x0(0x1)
};


// Size 0x28
struct HitDetectionParamsOverride
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x0(0xc)
	float                                                        HitStartRange;                                     // 0xc(0x4)
	float                                                        HitEndRange;                                       // 0x10(0x4)
	float                                                        HitStartAngle;                                     // 0x14(0x4)
	float                                                        HitAngleDelta;                                     // 0x18(0x4)
	float                                                        HitSphereRadius;                                   // 0x1c(0x4)
	float                                                        HitTimeOffset;                                     // 0x20(0x4)
	float                                                        HitDuration;                                       // 0x24(0x4)
};


// Size 0x10
struct EventAIEmoteActionAnimationChange
{
public:
	char                                                         ActiveEmoteActionState;                            // 0x0(0x1)
	class AthenaCharacter*                                       Owner;                                             // 0x8(0x8)
};


// Size 0x20
struct UIMessageOfTheDayOpenEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               MessageId;                                         // 0x10(0x10)
};


// Size 0x10
struct ShipLoadoutRequestShipPartsModel
{
public:
	TArray<struct Guid>                                          ShipIds;                                           // 0x0(0x10)
};


// Size 0x14
struct VaultReserved
{
public:
	bool                                                         IsReserved;                                        // 0x0(0x1)
	struct Guid                                                  CrewId;                                            // 0x4(0x10)
};


// Size 0x1
struct OnRestoreShopStateChangedEvent
{
public:
	bool                                                         CanRestore;                                        // 0x0(0x1)
};


// Size 0x40
struct WieldableBookNamedWidgetTexture
{
public:
	struct FName                                                 ImageKey;                                          // 0x30(0x8)
	char                                                         WidgetVisibilityGroup;                             // 0x38(0x1)
};


// Size 0x1c
struct FortDespawnTelemetryEvent
{
public:
	struct Guid                                                  FortId;                                            // 0x0(0x10)
	char                                                         DestructionReason;                                 // 0x10(0x1)
	struct FName                                                 FortType;                                          // 0x14(0x8)
};


// Size 0x40
struct PlayerJoinCrewInProgressRequestMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct UniqueNetIdRepl                                       UserId;                                            // 0x10(0x18)
	struct FString                                               PirateId;                                          // 0x28(0x10)
	char                                                         SessionType;                                       // 0x38(0x1)
};


// Size 0x98
struct CreateBlowpipeDartProxyRpc
{
public:
	struct HitResult                                             HitResult;                                         // 0x18(0x80)
};


// Size 0x50
struct CoastObject
{
public:
	class SplineComponent*                                       CoastSplineInternal;                               // 0x0(0x8)
	class SplineComponent*                                       InnerSplineInternal;                               // 0x8(0x8)
	struct Vector                                                SplineOrigin;                                      // 0x10(0xc)
	float                                                        CoastalLookupSquaredDistance;                      // 0x1c(0x4)
};


// Size 0x10
struct MaterialInformationTranslationData
{
public:
	struct FName                                                 AudioSurfaceType;                                  // 0x0(0x8)
	struct FName                                                 VFXSurfaceType;                                    // 0x8(0x8)
};


// Size 0x10
struct RequestShowGamerCard
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x30
struct CannonDesc
{
public:
	struct StringAssetReference                                  CannonBarrelMesh;                                  // 0x0(0x10)
	int64                                                        CannonBarrelCachedMeshResourceSize;                // 0x10(0x8)
	struct StringAssetReference                                  CannonBoxMesh;                                     // 0x18(0x10)
	int64                                                        CannonBoxCachedMeshResourceSize;                   // 0x28(0x8)
};


// Size 0xd0
struct StormScalingParameters
{
public:
	struct FName                                                 MaterialMaskPropertyName;                          // 0x0(0x8)
	struct FName                                                 RainOpacityPropertyName;                           // 0x8(0x8)
	class CurveFloat*                                            RadiusCurve;                                       // 0x10(0x8)
	class CurveFloat*                                            OuterRadiusCurve;                                  // 0x18(0x8)
	class CurveFloat*                                            RainSheetOuterOpacityCurve;                        // 0x20(0x8)
	class CurveFloat*                                            RainSheetInnerOpacityCurve;                        // 0x28(0x8)
	class CurveFloat*                                            BaseCloudHeightCurve;                              // 0x30(0x8)
	class CurveFloat*                                            BaseCloudMaskCurve;                                // 0x38(0x8)
	class CurveFloat*                                            RingCloudHeightCurve;                              // 0x40(0x8)
	class CurveFloat*                                            RingCloudMaskCurve;                                // 0x48(0x8)
	class CurveFloat*                                            TopCloudHeightCurve;                               // 0x50(0x8)
	class CurveFloat*                                            TopCloudMaskCurve;                                 // 0x58(0x8)
	class CurveFloat*                                            PressureZoneRadiusCurve;                           // 0x60(0x8)
	class CurveFloat*                                            PressureZoneTargetCurve;                           // 0x68(0x8)
	class CurveFloat*                                            PressureZonePushCurve;                             // 0x70(0x8)
	class CurveFloat*                                            PressureZoneWeightCurve;                           // 0x78(0x8)
	class CurveFloat*                                            RainStrengthCurve;                                 // 0x80(0x8)
	class CurveFloat*                                            WindStrengthCurve;                                 // 0x88(0x8)
	class CurveFloat*                                            WindInnerRadiusCurve;                              // 0x90(0x8)
	class CurveFloat*                                            WaterStrengthCurve;                                // 0x98(0x8)
	class CurveLinearColor*                                      RainSheetOuterScaleCurve;                          // 0xa0(0x8)
	class CurveLinearColor*                                      RainSheetInnerScaleCurve;                          // 0xa8(0x8)
	class CurveLinearColor*                                      BaseCloudScaleCurve;                               // 0xb0(0x8)
	class CurveLinearColor*                                      RingCloudScaleCurve;                               // 0xb8(0x8)
	class CurveLinearColor*                                      TopCloudScaleCurve;                                // 0xc0(0x8)
	float                                                        AngryWaterLerpRatio;                               // 0xc8(0x4)
};


// Size 0x20
struct ItemInfoHealthMetaWrapper
{
public:
	float                                                        CurrentHealth;                                     // 0x18(0x4)
	float                                                        MaxHealth;                                         // 0x1c(0x4)
};


// Size 0x10
struct StartPickupObjectActionRuleParams
{
public:
	TArray<char>                                                 WieldableItemSizesDisablePickup;                   // 0x0(0x10)
};


// Size 0x8
struct RenderToTextureTestChangeEvent
{
public:
	class Actor*                                                 Object;                                            // 0x0(0x8)
};


// Size 0x4
struct AchievementKillOpponentFromBehindWithBlunderbuss
{
public:
	float                                                        FacingDirAngleTolerance;                           // 0x0(0x4)
};


// Size 0x40
struct PlayerGeneratedMapDisplayData
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	int                                                          IslandIndex;                                       // 0x10(0x4)
	int                                                          NumXs;                                             // 0x14(0x4)
	int                                                          MapCreatedByPlayerNameOverrideIndex;               // 0x18(0x4)
	struct Guid                                                  MapID;                                             // 0x1c(0x10)
	struct FString                                               MapCreatedByPlayerName;                            // 0x30(0x10)
};


// Size 0x40
struct PlayerNameplateUIInfo
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct FString                                               Title;                                             // 0x10(0x10)
	char                                                         Attitude;                                          // 0x20(0x1)
	char                                                         ChatState;                                         // 0x21(0x1)
	float                                                        Health;                                            // 0x24(0x4)
	bool                                                         HealthVisible;                                     // 0x28(0x1)
	bool                                                         TitleVisible;                                      // 0x29(0x1)
	struct FString                                               NameplateIconReference;                            // 0x30(0x10)
};


// Size 0x18
struct ItemDiggingAudioOverride
{
public:
	TArray<Class>                                                Classes;                                           // 0x0(0x10)
	class ItemDiggingAudioConfig*                                DiggingAudioConfig;                                // 0x10(0x8)
};


// Size 0x10
struct FishBaitInfo
{
public:
	char                                                         BaitType;                                          // 0x0(0x1)
	class UClass*                                                BaitItemDesc;                                      // 0x8(0x8)
};


// Size 0x8
struct StormStrengthType
{
public:
	float                                                        Strength;                                          // 0x0(0x4)
	float                                                        Chance;                                            // 0x4(0x4)
};


// Size 0x18
struct GuildSender
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct DateTime                                              ExpiryTime;                                        // 0x10(0x8)
};


// Size 0x8
struct EventPlayerEnteredSinkingTunnelActionState
{
public:
	int                                                          Seed;                                              // 0x0(0x4)
	int                                                          Entry;                                             // 0x4(0x4)
};


// Size 0x20
struct InteractionOptionSelectedNonUI
{
public:
	struct FName                                                 EventName;                                         // 0x0(0x8)
	struct Guid                                                  InstigatorCrewID;                                  // 0x8(0x10)
	class Actor*                                                 InteractingPlayer;                                 // 0x18(0x8)
};


// Size 0x18
struct BountyQuestWaveCompletedTelemetryEvent
{
public:
	struct FString                                               LandmarkName;                                      // 0x0(0x10)
	int                                                          BountyWaveIndex;                                   // 0x10(0x4)
	int                                                          TotalBountyWaves;                                  // 0x14(0x4)
};


// Size 0x28
struct RetrieveAllPiratesRequestFailedEvent
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct Guid                                                  RequestID;                                         // 0x18(0x10)
};


// Size 0x50
struct GetLinkedPSNIdFromXuidResponseModel
{
public:
	map                                                          Matches;                                           // 0x0(0x50)
};


// Size 0xc0
struct CoordinatedKrakenTentacleSpawnInfo
{
public:
	struct Transform                                             SpawnTransform;                                    // 0x0(0x30)
	struct Transform                                             FinalSpawnTransform;                               // 0x30(0x30)
	int                                                          ClientCapsuleCullCount;                            // 0x60(0x4)
	bool                                                         ShouldDockToTargetActor;                           // 0x64(0x1)
	bool                                                         RequiresBoxCollider;                               // 0x65(0x1)
	bool                                                         RequiresKnockback;                                 // 0x66(0x1)
	struct Vector                                                BoxExtents;                                        // 0x68(0xc)
	struct Transform                                             BoxOffset;                                         // 0x80(0x30)
	class KrakenAnimatedTentacle*                                SpawnedTentacle;                                   // 0xb0(0x8)
};


// Size 0x14
struct WorldMapShipFlags
{
public:
	bool                                                         IsInAlliance;                                      // 0x0(0x1)
	bool                                                         IsOwnedShip;                                       // 0x1(0x1)
	bool                                                         IsReapersTrackedShip;                              // 0x2(0x1)
	char                                                         ReapersMarkLevel;                                  // 0x3(0x1)
	char                                                         EmissaryLevel;                                     // 0x4(0x1)
	bool                                                         IsInFaction;                                       // 0x5(0x1)
	bool                                                         IsMaxFaction;                                      // 0x6(0x1)
	struct FName                                                 FactionName;                                       // 0x8(0x8)
	bool                                                         IsInvadingShip;                                    // 0x10(0x1)
	bool                                                         IsInTunnel;                                        // 0x11(0x1)
	bool                                                         IsMaxGradedGuildShip;                              // 0x12(0x1)
	bool                                                         IsReapersTributeShip;                              // 0x13(0x1)
};


// Size 0x20
struct AthenaAnimationLocomotionStairsAnimData
{
public:
	class BlendSpace*                                            UpStairsLeft;                                      // 0x0(0x8)
	class BlendSpace*                                            UpStairsRight;                                     // 0x8(0x8)
	class BlendSpace*                                            DownStairsLeft;                                    // 0x10(0x8)
	class BlendSpace*                                            DownStairsRight;                                   // 0x18(0x8)
};


// Size 0x10
struct SwitchMechanismTriggerCustomTarget
{
public:
	struct Vector                                                Target;                                            // 0x0(0xc)
	int                                                          LaunchPositionIndex;                               // 0xc(0x4)
};


// Size 0x10
struct DockToObjectActionStateParams
{
public:
	float                                                        DockTime;                                          // 0x0(0x4)
	float                                                        DelayAfterDockingTime;                             // 0x4(0x4)
	float                                                        ForcedFieldOfView;                                 // 0x8(0x4)
	bool                                                         ForceStash;                                        // 0xc(0x1)
};


// Size 0x20
struct EventPlayerLeftIslandVicinity
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
	struct FName                                                 IslandName;                                        // 0x10(0x8)
};


// Size 0x54
struct KnockBackInfo
{
public:
	struct FName                                                 FeatureName;                                       // 0x0(0x8)
	float                                                        HorizontalVelocity;                                // 0x8(0x4)
	float                                                        VerticalVelocity;                                  // 0xc(0x4)
	float                                                        MinHorizontalVelocity;                             // 0x10(0x4)
	float                                                        MinVerticalVelocity;                               // 0x14(0x4)
	float                                                        SwimmingVelocity;                                  // 0x18(0x4)
	float                                                        DockedHorizontalVelocity;                          // 0x1c(0x4)
	float                                                        DockedVerticalVelocity;                            // 0x20(0x4)
	bool                                                         UseDockedVelocitiesWhenDocked;                     // 0x24(0x1)
	struct FName                                                 RumbleTag;                                         // 0x28(0x8)
	float                                                        StunDuration;                                      // 0x30(0x4)
	float                                                        AIKnockbackDistance;                               // 0x34(0x4)
	float                                                        AIKnockbackSpeed;                                  // 0x38(0x4)
	float                                                        AIKnockbackAcceleration;                           // 0x3c(0x4)
	char                                                         AIKnockbackStrengthType;                           // 0x40(0x1)
	bool                                                         UseOverrideLaunchDirection;                        // 0x41(0x1)
	struct Vector                                                OverrideLaunchDirectionInWorldSpace;               // 0x44(0xc)
	bool                                                         DisableAirControl;                                 // 0x50(0x1)
};


// Size 0x1
struct ClientInputMatchmakingNotificationResultTelemetryEvent
{
public:
	bool                                                         Accepted;                                          // 0x0(0x1)
};


// Size 0x48
struct MilestoneAlignmentThreshold
{
public:
	struct FText                                                 MilestoneRequirementDescription;                   // 0x0(0x38)
	TArray<class Class*>                                         Entitlements;                                      // 0x38(0x10)
};


// Size 0x18
struct ShipVoyageModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FName                                                 EntitlementId;                                     // 0x10(0x8)
};


// Size 0x2
struct EventFaunaAnimationSnakeInAttackStance
{
public:
	bool                                                         SnakeInAttackStance;                               // 0x0(0x1)
	char                                                         SnakeAttackDirection;                              // 0x1(0x1)
};


// Size 0x38
struct PlayNpcAnimationNetworkEvent
{
public:
	class Actor*                                                 TargetActor;                                       // 0x18(0x8)
	struct FName                                                 AnimationNameToPlay;                               // 0x20(0x8)
	class UClass*                                                LocalMusicZone;                                    // 0x28(0x8)
	class PlaceableReaction*                                     PlaceableReaction;                                 // 0x30(0x8)
};


// Size 0xc
struct SetTotalItemsOnRadialInventorySlot
{
public:
	int                                                          SlotIndex;                                         // 0x0(0x4)
	int                                                          TotalItems;                                        // 0x4(0x4)
	int                                                          Capacity;                                          // 0x8(0x4)
};


// Size 0x10
struct GuaranteedStorageContainerContentSpawnerEntry
{
public:
	class UClass*                                                ItemDesc;                                          // 0x0(0x8)
	int                                                          AmountToStock;                                     // 0x8(0x4)
};


// Size 0x40
struct ScrambledIdentityServer
{
public:
	char                                                         IdentityType;                                      // 0x0(0x1)
	struct Guid                                                  EntityId;                                          // 0x4(0x10)
	struct FString                                               UnscrambledName;                                   // 0x18(0x10)
	struct UniqueNetIdRepl                                       OwnersUserId;                                      // 0x28(0x18)
};


// Size 0x10
struct CargoRunQuestDescCollectCargoText
{
public:
	TArray<struct Text>                                          ItemText;                                          // 0x0(0x10)
};


// Size 0x10
struct IncomingFriendRequestReceivedEvent
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
};


// Size 0x8
struct EventItemTransmuted
{
public:
	class ItemInfo*                                              NewItem;                                           // 0x0(0x8)
};


// Size 0x10
struct MermaidActivatedLocally
{
public:
	class Mermaid*                                               Mermaid;                                           // 0x0(0x8)
	bool                                                         IsForLocalPlayer;                                  // 0x8(0x1)
};


// Size 0x8
struct EventAreaNowHasPlayers
{
public:
	struct FName                                                 AreaName;                                          // 0x0(0x8)
};


// Size 0x18
struct UIQuestTableCloseTelemetryEvent
{
public:
	float                                                        TotalTimeInQuestTable;                             // 0x0(0x4)
	struct FString                                               SessionId;                                         // 0x8(0x10)
};


// Size 0xc
struct SingleStickMappingUserSettingsBoolean
{
public:
	struct FName                                                 SettingName;                                       // 0x0(0x8)
	bool                                                         Value;                                             // 0x8(0x1)
};


// Size 0x1
struct EventHdrSettingsVisible
{
public:
	bool                                                         Visible;                                           // 0x0(0x1)
};


// Size 0x10
struct EventEnteredShip
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Actor;                                             // 0x8(0x8)
};


// Size 0x20
struct GameEventServiceDesc
{
public:
	struct StringAssetReference                                  ServiceParamsAssetPath;                            // 0x0(0x10)
	struct StringAssetReference                                  GameEventOnDemandAvailabilityParamsAsset;          // 0x10(0x10)
};


// Size 0x38
struct PlayerEntitlementsCompact
{
public:
	char                                                         Status;                                            // 0x0(0x1)
	TArray<class Class*>                                         Loose;                                             // 0x28(0x10)
};


// Size 0x10
struct RewardRequestSucceededMessage
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
};


// Size 0x40
struct ControlObjectActionStateSerialisableData
{
public:
	struct Vector                                                UndockLocation;                                    // 0x30(0xc)
	bool                                                         UndockRequested;                                   // 0x3c(0x1)
};


// Size 0x10
struct EventClearCrewProgressOverride
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x4
struct RequestJoinCrewEvent
{
public:
	int                                                          CrewId;                                            // 0x0(0x4)
};


// Size 0x28
struct SetHiddenData
{
public:
	class SequencerCutSceneActor*                                SequencerActor;                                    // 0x0(0x8)
	class LevelSequence*                                         LevelSeq;                                          // 0x8(0x8)
	struct FString                                               ActorName;                                         // 0x10(0x10)
	bool                                                         Visible;                                           // 0x20(0x1)
};


// Size 0x10
struct GetInteractingShopKeeperFailTelemetryEvent
{
public:
	struct FString                                               FailureReason;                                     // 0x0(0x10)
};


// Size 0xc
struct EventPlayerEnteredSleepingState
{
public:
	float                                                        AudioEventDelay;                                   // 0x0(0x4)
	float                                                        AudioStateDelay;                                   // 0x4(0x4)
	bool                                                         NoFarting;                                         // 0x8(0x1)
};


// Size 0x40
struct AthenaAnimationPulleyControl
{
public:
	TArray<char>                                                 PulleyObjectTypes;                                 // 0x0(0x10)
	float                                                        MaxRate;                                           // 0x10(0x4)
	float                                                        ForceMultiplier;                                   // 0x14(0x4)
	float                                                        PulleyMovementForce;                               // 0x18(0x4)
	bool                                                         UsingPulley;                                       // 0x1c(0x1)
	bool                                                         MovingPulley;                                      // 0x1d(0x1)
	bool                                                         LookAtOffsetSet;                                   // 0x1e(0x1)
	bool                                                         LookingRight;                                      // 0x1f(0x1)
};


// Size 0x18
struct EventPlayerDockToObjectEnd
{
public:
	interface                                                    ObjectBeingUsed;                                   // 0x0(0x10)
	bool                                                         CanLookAtBeDisabledWhenDockedToObject;             // 0x10(0x1)
};


// Size 0x50
struct ShipSpeedUpdateTelemetryEvent
{
public:
	int                                                          TimeElapsed;                                       // 0x0(0x4)
	struct FString                                               ShipSize;                                          // 0x8(0x10)
	struct FString                                               ShipDirection;                                     // 0x18(0x10)
	struct FString                                               WindDirection;                                     // 0x28(0x10)
	float                                                        ShipSailAngle;                                     // 0x38(0x4)
	float                                                        ShipSailLoweredPercentage;                         // 0x3c(0x4)
	float                                                        MaxShipSpeed;                                      // 0x40(0x4)
	float                                                        CurrentShipSpeed;                                  // 0x44(0x4)
	float                                                        ShipAcceleration;                                  // 0x48(0x4)
	float                                                        DistanceTravelled;                                 // 0x4c(0x4)
};


// Size 0x38
struct FortTargetKilledTelemetryEvent
{
public:
	struct Guid                                                  FortKeyId;                                         // 0x0(0x10)
	struct FString                                               FortTargetName;                                    // 0x10(0x10)
	struct Vector                                                FortKeyDroppedLocation;                            // 0x20(0xc)
	struct FName                                                 FortType;                                          // 0x2c(0x8)
};


// Size 0x48
struct SpeechAccessibilityOptions
{
public:
	bool                                                         GameChatSTT;                                       // 0x0(0x1)
	bool                                                         GameChatTTS;                                       // 0x1(0x1)
	struct FString                                               PersonaID;                                         // 0x8(0x10)
	struct FString                                               PersonaName;                                       // 0x18(0x10)
	int                                                          PersonaGender;                                     // 0x28(0x4)
	struct FString                                               PersonaLang;                                       // 0x30(0x10)
	bool                                                         GameTextSS;                                        // 0x40(0x1)
};


// Size 0x10
struct GameplayEventExclusionInfo
{
public:
	class UClass*                                                Type;                                              // 0x0(0x8)
	float                                                        ExclusionRadius;                                   // 0x8(0x4)
};


// Size 0x4
struct EmptyWaterFromVaultGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
};


// Size 0x18
struct ScheduledShutdownSettingsClient
{
public:
	float                                                        StartScreenFadeWithTimeRemainingSeconds;           // 0x0(0x4)
	float                                                        ScreenFadeTimeSeconds;                             // 0x4(0x4)
	float                                                        QuitGameTimeRemainingSeconds;                      // 0x8(0x4)
	float                                                        UpperDisplayPeriodTimeSeconds;                     // 0xc(0x4)
	float                                                        LowerDisplayPeriodTimeSeconds;                     // 0x10(0x4)
	float                                                        SwitchToLowerTimePeriodWithTimeRemainingSeconds;   // 0x14(0x4)
};


// Size 0x20
struct PageCultureOverride
{
public:
	struct FString                                               Culture;                                           // 0x0(0x10)
	struct StringAssetReference                                  PageReference;                                     // 0x10(0x10)
};


// Size 0x10
struct LandmarkReactionEventPlayForceFeedbackEntry
{
public:
	float                                                        OuterRadius;                                       // 0x0(0x4)
	class ForceFeedbackEffect*                                   ForceFeedbackEffect;                               // 0x8(0x8)
};


// Size 0x68
struct AthenaAnimationZiplineControlAnimData
{
public:
	class AnimSequenceBase*                                      ActionToUse;                                       // 0x0(0x8)
	assetobject                                                  ActionAssetPtr;                                    // 0x8(0x20)
	class AnimSequenceBase*                                      ActionFallback;                                    // 0x28(0x8)
	bool                                                         IsRidingZipline;                                   // 0x48(0x1)
};


// Size 0x18
struct AthenaWorldSettingsGameEventSchedulerSettingsConfiguration
{
public:
	struct FName                                                 FeatureFlag;                                       // 0x0(0x8)
	char                                                         RequiredPlayMode;                                  // 0x8(0x1)
	class GameEventSchedulerSettingsAsset*                       EventSchedulerSettings;                            // 0x10(0x8)
};


// Size 0x20
struct WeightedTunnelCreatureDioramaType
{
public:
	class UClass*                                                DioramaClassType;                                  // 0x0(0x8)
	float                                                        SelectionChance;                                   // 0x8(0x4)
};


// Size 0x10
struct ManagedItems
{
public:
	TArray<class ItemProxy*>                                     Items;                                             // 0x0(0x10)
};


// Size 0x20
struct AthenaAnimationSwimmingSprintAnimData
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          Loop;                                              // 0x8(0x8)
	class AnimSequence*                                          IntoUnderwater;                                    // 0x10(0x8)
	class AnimSequence*                                          LoopUnderwater;                                    // 0x18(0x8)
};


// Size 0x10
struct FeaturedShipCustomizationCategory
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	struct FName                                                 Feature;                                           // 0x8(0x8)
};


// Size 0x8
struct EventKilledCharacter
{
public:
	class Actor*                                                 KilledCharacter;                                   // 0x0(0x8)
};


// Size 0x10
struct UIWhatsNewAvailableArticlesEvent
{
public:
	TArray<String>                                               Articles;                                          // 0x0(0x10)
};


// Size 0x38
struct SinkingShipParams
{
public:
	float                                                        DragWhenGrindingToHalt;                            // 0x0(0x4)
	float                                                        MinSpdToStopToBeforeLowering;                      // 0x4(0x4)
	float                                                        LowerIntoWaterTime;                                // 0x8(0x4)
	float                                                        TimeIntoLoweringToStartOcclusionZoneShrinkage;     // 0xc(0x4)
	float                                                        AngularDragDuringSinkingSequence;                  // 0x10(0x4)
	float                                                        KeeledOverTime;                                    // 0x14(0x4)
	float                                                        TurnOffBuoyancyTime;                               // 0x18(0x4)
	float                                                        FinalSinkingBuoyancy;                              // 0x1c(0x4)
	float                                                        SinkingTimeUntilDestroy;                           // 0x20(0x4)
	float                                                        ReduceWaterOcclusionZoneTime;                      // 0x24(0x4)
	float                                                        ReduceWaterOcclusionZoneTimeHurryUp;               // 0x28(0x4)
	float                                                        TimeIntoKeelingOverToTeleportPlayer;               // 0x2c(0x4)
	float                                                        MinSampleSubmersionToConsiderInWater;              // 0x30(0x4)
	float                                                        MinPctSamplesRequiredSubmergedToBeAbleToSink;      // 0x34(0x4)
};


// Size 0x20
struct OpenableItemMetaWrapper
{
public:
	char                                                         OpenState;                                         // 0x18(0x1)
	bool                                                         HasEverClosed;                                     // 0x19(0x1)
};


// Size 0x18
struct EventDisableInteractionPoints
{
public:
	char                                                         ShipCurseTag;                                      // 0x0(0x1)
	char                                                         CurseTag;                                          // 0x1(0x1)
	TArray<class Class*>                                         InteractionPointsToDisable;                        // 0x8(0x10)
};


// Size 0x80
struct AthenaAnimationFirstPersonAnimatic
{
public:
	bool                                                         IsFirstPersonAnimaticActive;                       // 0x0(0x1)
	bool                                                         IsFirstPersonCustomAnimatic;                       // 0x0(0x1)
	class AnimSequence*                                          FirstPersonAnimationToPlay;                        // 0x8(0x8)
	class FirstPersonAnimaticList*                               FirstPersonAnimaticList;                           // 0x10(0x8)
};


// Size 0x8
struct ClothingChestUnequipEmoteEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x10
struct KrakenSpawnLocationExclusionZone
{
public:
	struct Vector                                                Centre;                                            // 0x0(0xc)
	float                                                        Radius;                                            // 0xc(0x4)
};


// Size 0x48
struct WreckMatch
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	interface                                                    Wreck;                                             // 0x10(0x10)
	float                                                        DistanceData;                                      // 0x30(0x4)
	struct Guid                                                  OwningCrewID;                                      // 0x34(0x10)
};


// Size 0x1
struct CrewMuteOthersChatEvent
{
public:
	bool                                                         IsMuted;                                           // 0x0(0x1)
};


// Size 0x1
struct EventChatboxFocusRequest
{
public:
	bool                                                         ShouldFocusChatbox;                                // 0x0(0x1)
};


// Size 0x20
struct AllianceDisbandedTelemetryEvent
{
public:
	struct Guid                                                  AllianceId;                                        // 0x0(0x10)
	struct Guid                                                  LeavingCrewSessionId;                              // 0x10(0x10)
};


// Size 0x20
struct RadialActionGroup
{
public:
	class RadialAction*                                          PrimaryAction;                                     // 0x0(0x8)
	class RadialAction*                                          SecondaryAction;                                   // 0x8(0x8)
	class RadialAction*                                          TertiaryAction;                                    // 0x10(0x8)
	class RadialAction*                                          QuaternaryAction;                                  // 0x18(0x8)
};


// Size 0x18
struct EndEmoteGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	struct FString                                               EmoteName;                                         // 0x8(0x10)
};


// Size 0x28
struct ResponseContendedResourcesNetworkEvent
{
public:
	struct FString                                               ContendedResources;                                // 0x18(0x10)
};


// Size 0xf8
struct EmoteFlourishCategoryMapping
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
	class UClass*                                                AlternateItemCategory;                             // 0x8(0x8)
	struct StringAssetReference                                  IconPath;                                          // 0x10(0x10)
	struct EmoteData                                             EmoteData;                                         // 0x20(0xc8)
	struct FString                                               PairName;                                          // 0xe8(0x10)
};


// Size 0x18
struct ConstellationAudioPair
{
public:
	class UClass*                                                ConstellationClass;                                // 0x0(0x8)
	class WwiseEvent*                                            AudioStartEvent;                                   // 0x8(0x8)
	class WwiseEvent*                                            AudioStopEvent;                                    // 0x10(0x8)
};


// Size 0x68
struct CapstanAudioParams
{
public:
	class WwiseEvent*                                            CapstanStart;                                      // 0x0(0x8)
	class WwiseEvent*                                            CapstanStop;                                       // 0x8(0x8)
	class WwiseEvent*                                            CapstanDamagedStart;                               // 0x10(0x8)
	class WwiseEvent*                                            CapstanDamagedStop;                                // 0x18(0x8)
	class WwiseEvent*                                            CapstanStopFullyRaised;                            // 0x20(0x8)
	class WwiseEvent*                                            CapstanStopFullyLowered;                           // 0x28(0x8)
	class WwiseObjectPoolWrapper*                                CapstanEmitterPool;                                // 0x30(0x8)
	struct FName                                                 CapstanTurnRateRtpc;                               // 0x38(0x8)
	float                                                        CapstanTurnMinRtpcValue;                           // 0x40(0x4)
	float                                                        CapstanTurnMaxRtpcValue;                           // 0x44(0x4)
	struct FName                                                 BoatVelocityRtpc;                                  // 0x48(0x8)
	float                                                        BoatVelocityMinRtpcValue;                          // 0x50(0x4)
	float                                                        BoatVelocityMaxRtpcValue;                          // 0x54(0x4)
	float                                                        EmpiricalMaxShipVelocity;                          // 0x58(0x4)
	struct FName                                                 CapstanDamageRtpc;                                 // 0x5c(0x8)
	float                                                        CapstanDamageRtpcMaxValue;                         // 0x64(0x4)
};


// Size 0x30
struct MaterialManipulationSettings
{
public:
	TArray<struct ScalarParameterValue>                          ScalarParameterValues;                             // 0x0(0x10)
	TArray<struct TextureParameterValue>                         TextureParameterValues;                            // 0x10(0x10)
	TArray<struct VectorParameterValue>                          VectorParameterValues;                             // 0x20(0x10)
};


// Size 0x70
struct CrewServiceParams
{
public:
	float                                                        MinSafeDistanceToShip;                             // 0x0(0x4)
	float                                                        SpawnDistAroundSunkenShip;                         // 0x4(0x4)
	TArray<int>                                                  VotesRequiredForSendToBrig;                        // 0x8(0x10)
	TArray<int>                                                  VotesRequiredForReleaseFromBrig;                   // 0x18(0x10)
	TArray<int>                                                  VotesRequiredForScuttleShip;                       // 0x28(0x10)
	TArray<int>                                                  VotesRequiredForChangeMatchmakingVisibility;       // 0x38(0x10)
	TArray<int>                                                  VotesRequiredForArenaRivalVote;                    // 0x48(0x10)
	float                                                        BrigMinReleaseTime;                                // 0x58(0x4)
	float                                                        BrigServerTimeToRememberPastCrewMates;             // 0x5c(0x4)
	float                                                        ScuttleInitialTimeoutTime;                         // 0x60(0x4)
	float                                                        ScuttleMultipleRequestTimeoutIncrement;            // 0x64(0x4)
	float                                                        ScuttleMaxRequestTimeoutTime;                      // 0x68(0x4)
};


// Size 0x8
struct GuildNumberOfMembersChangedEvent
{
public:
	int                                                          OldNumberOfMembers;                                // 0x0(0x4)
	int                                                          CurrentNumberOfMembers;                            // 0x4(0x4)
};


// Size 0x1
struct GuildValidityResponseModel
{
public:
	bool                                                         IsSessionValid;                                    // 0x0(0x1)
};


// Size 0xc
struct ContestVoyageIslandData
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	int                                                          MaxItemCountForIsland;                             // 0x8(0x4)
};


// Size 0x50
struct SwitchMechanismTriggerPosition
{
public:
	char                                                         MechanismState;                                    // 0x0(0x1)
	struct Transform                                             PivotTransform;                                    // 0x10(0x30)
	class WwiseEvent*                                            SwitchStartTransitionAudioEvent;                   // 0x40(0x8)
	class WwiseEvent*                                            SwitchStopTransitionAudioEvent;                    // 0x48(0x8)
};


// Size 0xc
struct DestroyingUnsafeExpiredWreckTelemetryEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
};


// Size 0x20
struct FlagMeshParams
{
public:
	struct StringAssetReference                                  FlagMesh;                                          // 0x0(0x10)
	class UClass*                                                FlagItemInfo;                                      // 0x10(0x8)
	class UClass*                                                TemporaryEntitlement;                              // 0x18(0x8)
};


// Size 0x28
struct VoyageProposalCompletedNetworkEvent
{
public:
	TArray<String>                                               VoyageProposalIds;                                 // 0x18(0x10)
};


// Size 0x10
struct CrewBeganPrimaryVoyageEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x18
struct CompanyProgressDistinctionIcon
{
public:
	int                                                          RequiredLevel;                                     // 0x0(0x4)
	struct StringAssetReference                                  Icon;                                              // 0x8(0x10)
};


// Size 0x40
struct FishingComedyItemInfo
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	class UClass*                                                ItemDesc;                                          // 0x8(0x8)
	struct Transform                                             SpawnOffset;                                       // 0x10(0x30)
};


// Size 0x30
struct CrewJoinedAllianceTelemetryEvent
{
public:
	struct Guid                                                  AllianceId;                                        // 0x0(0x10)
	struct Guid                                                  OfferingCrewSessionId;                             // 0x10(0x10)
	struct Guid                                                  AcceptingCrewSessionId;                            // 0x20(0x10)
};


// Size 0x10
struct CrewRequestedRivalChangeEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x28
struct CrewStatEvent
{
public:
	class Object*                                                ObjectOfInterest;                                  // 0x18(0x8)
};


// Size 0x4
struct FallingIntoWaterEvent
{
public:
	float                                                        FallingSpeed;                                      // 0x0(0x4)
};


// Size 0x30
struct AllianceCreatedTelemetryEvent
{
public:
	struct Guid                                                  AllianceId;                                        // 0x0(0x10)
	struct Guid                                                  OfferingCrewSessionId;                             // 0x10(0x10)
	struct Guid                                                  AcceptingCrewSessionId;                            // 0x20(0x10)
};


// Size 0x20
struct CaptainsLogAccoladesCommittedEvent
{
public:
	TArray<String>                                               PirateAccolades;                                   // 0x0(0x10)
	TArray<String>                                               ShipAccolades;                                     // 0x10(0x10)
};


// Size 0x8
struct EventSetFishingFloatActor
{
public:
	class Actor*                                                 FishingFloat;                                      // 0x0(0x8)
};


// Size 0x8
struct SeaFortAlignmentDollHandinEvent
{
public:
	char                                                         HandInAlignemnt;                                   // 0x0(0x1)
	bool                                                         IsDollEnchanted;                                   // 0x1(0x1)
	int                                                          FortsAlignedToHandInType;                          // 0x4(0x4)
};


// Size 0x4
struct MastFallenAngleChangedEvent
{
public:
	float                                                        Angle;                                             // 0x0(0x4)
};


// Size 0x78
struct StandingSpyglassInteractionParams
{
public:
	class UClass*                                                CanInteractNotificationInputId;                    // 0x0(0x8)
	struct FText                                                 CanInteractDescriptorText;                         // 0x8(0x38)
	struct FText                                                 DisplayName;                                       // 0x40(0x38)
};


// Size 0x14
struct AggressiveGhostShipEncounterEndTelemetryEvent
{
public:
	struct Guid                                                  EncounterId;                                       // 0x0(0x10)
	bool                                                         WasSuccessfullyCompleted;                          // 0x10(0x1)
};


// Size 0x28
struct OnStartDockedToWalkwayEvent
{
public:
	class WwiseEvent*                                            WalkwayStart;                                      // 0x0(0x8)
	class WwiseEvent*                                            AttachToWalkwayAdditiveOneShot;                    // 0x8(0x8)
	class WwiseEvent*                                            WalkwayLoopStart;                                  // 0x10(0x8)
	class ParticleSystem*                                        WalkwayWindVFX;                                    // 0x18(0x8)
	class ParticleSystem*                                        WalkwayTrailVFX;                                   // 0x20(0x8)
};


// Size 0x18
struct ReplicatedMountpointData
{
public:
	class InteractableComponentWithActionRules*                  InteractableComponentWithActionRules;              // 0x0(0x8)
	int                                                          CurrentTrinketClassIndex;                          // 0x8(0x4)
	class Actor*                                                 InteractingPlayerReplicated;                       // 0x10(0x8)
};


// Size 0x20
struct AmmoTransferMetaWrapper
{
public:
	int                                                          AmmoCount;                                         // 0x18(0x4)
};


// Size 0x8
struct EventShipBecameUseless
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x80
struct PremiumCatalogLandingPageTab
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FText                                                 DisplayName;                                       // 0x10(0x38)
	TArray<class PremiumCatalogLandingPageItemDataAsset*>        Children;                                          // 0x48(0x10)
	struct FName                                                 FeatureToggle;                                     // 0x58(0x8)
	struct FName                                                 InverseFeatureToggle;                              // 0x60(0x8)
	struct FName                                                 IncludeForPromotion;                               // 0x68(0x8)
	struct FName                                                 ExcludeFromPromotion;                              // 0x70(0x8)
	bool                                                         RealMoneyOnly;                                     // 0x78(0x1)
};


// Size 0x18
struct GetLinkedXuidFromPSNIdRequestModel
{
public:
	TArray<String>                                               PsnIds;                                            // 0x0(0x10)
	int                                                          PsnIssuerId;                                       // 0x10(0x4)
};


// Size 0x48
struct UserSettingsMapMarkDefinition
{
public:
	class UClass*                                                MarkId;                                            // 0x0(0x8)
	assetobject                                                  DefaultTexture;                                    // 0x8(0x20)
	assetobject                                                  HighContrastTexture;                               // 0x28(0x20)
};


// Size 0x78
struct AthenaAnimationAsyncLoadedFacialActionAnimations
{
public:
	TArray<Class>                                                PrimaryContinuous;                                 // 0x8(0x10)
	TArray<Class>                                                SecondaryContinuous;                               // 0x18(0x10)
	TArray<Class>                                                PrimaryOneShot;                                    // 0x28(0x10)
	TArray<Class>                                                SecondaryOneShot;                                  // 0x38(0x10)
	TArray<Class>                                                MeleeBlocking;                                     // 0x48(0x10)
	TArray<Class>                                                MeleeAttack;                                       // 0x58(0x10)
	TArray<Class>                                                MeleeBlockReact;                                   // 0x68(0x10)
};


// Size 0x44
struct LightingControllerLightingParams
{
public:
	float                                                        SunYaw;                                            // 0x0(0x4)
	float                                                        SunElevation;                                      // 0x4(0x4)
	float                                                        UnderworldSunElevation;                            // 0x8(0x4)
	float                                                        MinSunAngle;                                       // 0xc(0x4)
	float                                                        UnderworldZThreshold;                              // 0x10(0x4)
	float                                                        HideoutZThreshold;                                 // 0x14(0x4)
	float                                                        UnderwaterInsideShipBrightnessInBoatSpace;         // 0x18(0x4)
	float                                                        UnderwaterInsideShipBrightnessOutsideBoatSpace;    // 0x1c(0x4)
	float                                                        UnderwaterBrightnessInBoatSpace;                   // 0x20(0x4)
	float                                                        UnderwaterDepthDarkenStart;                        // 0x24(0x4)
	float                                                        UnderwaterDepthDarkenRange;                        // 0x28(0x4)
	float                                                        UnderwaterDepthDarkenMin;                          // 0x2c(0x4)
	float                                                        UnderwaterMurkDensity;                             // 0x30(0x4)
	float                                                        SecondaryLPVCascadeOcclusionIntensityScale;        // 0x34(0x4)
	int                                                          LPVPropagationSteps;                               // 0x38(0x4)
	int                                                          DefaultLightingSet;                                // 0x3c(0x4)
	bool                                                         EnableGodRays;                                     // 0x40(0x1)
};


// Size 0x10
struct CrewFinishedBeingAttackedByGameEventEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x20
struct KeyBindingRemote
{
public:
	struct FString                                               BindingName;                                       // 0x0(0x10)
	struct FName                                                 KeyName;                                           // 0x10(0x8)
	char                                                         ControllerType;                                    // 0x18(0x1)
};


// Size 0x20
struct CondensedPlayerStat
{
public:
	uint32                                                       StatId;                                            // 0x0(0x4)
	uint64                                                       Min;                                               // 0x8(0x8)
	uint64                                                       Max;                                               // 0x10(0x8)
	uint64                                                       Sum;                                               // 0x18(0x8)
};


// Size 0x18
struct CoherentToWwiseEventDataAssetEntry
{
public:
	struct FString                                               CueKey;                                            // 0x0(0x10)
	class WwiseEvent*                                            AudioEvent;                                        // 0x10(0x8)
};


// Size 0x48
struct PlayerBaseTelemetryFragment
{
public:
	struct Guid                                                  PlayerGameId;                                      // 0x0(0x10)
	struct FString                                               UserId;                                            // 0x10(0x10)
	struct FString                                               PirateId;                                          // 0x20(0x10)
	char                                                         PlatformId;                                        // 0x30(0x1)
	struct FString                                               DeviceID;                                          // 0x38(0x10)
};


// Size 0x8
struct RepairObjectActionStateParams
{
public:
	float                                                        MountTime;                                         // 0x0(0x4)
	struct AdaptiveTriggerEffectMode_Vibration                   RightTrigger_Repair;                               // 0x4(0x4)
};


// Size 0x2c
struct AthenaAnimationHitReactParams
{
public:
	int                                                          StandardIndex0;                                    // 0x0(0x4)
	int                                                          StandardIndex1;                                    // 0x4(0x4)
	bool                                                         HitReactTransition;                                // 0x8(0x1)
	float                                                        DirectionYaw;                                      // 0xc(0x4)
	int                                                          ItemIndex0;                                        // 0x10(0x4)
	int                                                          ItemIndex1;                                        // 0x14(0x4)
	int                                                          ActionIndex0;                                      // 0x18(0x4)
	int                                                          ActionIndex1;                                      // 0x1c(0x4)
	int                                                          SubtleIndex0;                                      // 0x20(0x4)
	int                                                          SubtleIndex1;                                      // 0x24(0x4)
	char                                                         AnimationType;                                     // 0x28(0x1)
};


// Size 0x10
struct EventStatueThreatWasDefeated
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	class Actor*                                                 DirectInstigator;                                  // 0x8(0x8)
};


// Size 0x40
struct AthenaAnimationSkeletonFlee
{
public:
	class UClass*                                                UseWithObject;                                     // 0x0(0x8)
	TArray<class AnimSequence*>                                  FleeTurnLeft;                                      // 0x8(0x10)
	TArray<class AnimSequence*>                                  FleeTurnRight;                                     // 0x18(0x10)
	class BlendSpace*                                            FleeLocomotionBase;                                // 0x28(0x8)
	TArray<class BlendSpace*>                                    FleeLocomotionVariants;                            // 0x30(0x10)
};


// Size 0x20
struct VoyageProposedTelemetryEvent
{
public:
	struct Guid                                                  VoyageProposalSessionId;                           // 0x0(0x10)
	struct FString                                               VoyageProposalEntitlementId;                       // 0x10(0x10)
};


// Size 0x28
struct AIShipEncounterZoneEnteredNetworkEvent
{
public:
	int                                                          RemainingAIShips;                                  // 0x18(0x4)
	int                                                          TotalAIShips;                                      // 0x1c(0x4)
	int                                                          TotalAIShipsInFinalWave;                           // 0x20(0x4)
	int                                                          CurrentSpawnedAIShips;                             // 0x24(0x4)
};


// Size 0x58
struct ServerShutdownRequestFilter
{
public:
	struct DateTime                                              ShutdownTimeUtc;                                   // 0x0(0x8)
	struct FString                                               VersionNumber;                                     // 0x8(0x10)
	char                                                         PlayMode;                                          // 0x18(0x1)
	char                                                         PlayModeVariant;                                   // 0x19(0x1)
	char                                                         ServerEnvironmentStatus;                           // 0x1a(0x1)
	struct FString                                               FeatureHash;                                       // 0x20(0x10)
	struct FString                                               BuildId;                                           // 0x30(0x10)
	uint32                                                       AgeOverSeconds;                                    // 0x40(0x4)
	struct Guid                                                  SessionId;                                         // 0x44(0x10)
};


// Size 0x8
struct EventFallWithDamageLegNotBroken
{
public:
	struct FName                                                 RumbleTag;                                         // 0x0(0x8)
};


// Size 0x8
struct EventCutsceneTargetReady
{
public:
	class Actor*                                                 CutsceneTarget;                                    // 0x0(0x8)
};


// Size 0x10
struct PetCustomizationPartMapping
{
public:
	struct AIPartId                                              AppliedToPetPartId;                                // 0x0(0x8)
	struct AIPartId                                              CustomizationPetPartId;                            // 0x8(0x8)
};


// Size 0x98
struct ContestCeremonyEvent
{
public:
	TArray<class WwiseEvent*>                                    AudioEvents;                                       // 0x0(0x10)
	TArray<char>                                                 SpecialEvents;                                     // 0x10(0x10)
	struct FText                                                 NPCName;                                           // 0x20(0x38)
	struct FText                                                 NPCMessageToAllPlayers;                            // 0x58(0x38)
	float                                                        TimeToEvent;                                       // 0x90(0x4)
};


// Size 0x8
struct NumCrewsPercentageModel
{
public:
	uint32                                                       NumCrews;                                          // 0x0(0x4)
	float                                                        Percentage;                                        // 0x4(0x4)
};


// Size 0x10
struct CatagoriesDataRequestUIEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
};


// Size 0x50
struct CaptainsShopInventoryCountsResponseEvent
{
public:
	map                                                          StockCount;                                        // 0x0(0x50)
};


// Size 0x20
struct GlobalIslandChanceToSpawnOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	float                                                        GlobalIslandChanceToSpawn;                         // 0xc(0x4)
	TArray<class SpawnRequirement*>                              Requirements;                                      // 0x10(0x10)
};


// Size 0x20
struct VirtualActionBindingDefinition
{
public:
	TArray<struct Name>                                          ActionNames;                                       // 0x0(0x10)
	struct FString                                               BindingName;                                       // 0x10(0x10)
};


// Size 0x30
struct SwimmingCreatureAIStrategyMovementProperties
{
public:
	class UClass*                                                AIStrategy;                                        // 0x0(0x8)
	char                                                         SwimRotationMode;                                  // 0x8(0x1)
	float                                                        RotationRate;                                      // 0xc(0x4)
	float                                                        CorrectingMaxSpeed;                                // 0x10(0x4)
	float                                                        CorrectingYawTurnRate;                             // 0x14(0x4)
	float                                                        MaxAbsPitch;                                       // 0x18(0x4)
	float                                                        MaxSpeed;                                          // 0x1c(0x4)
	float                                                        VelocitySmoothingFactor;                           // 0x20(0x4)
	float                                                        TrackedActorVelocityScaling;                       // 0x24(0x4)
	float                                                        TrackedActorVelocityScalingSmoothingFactor;        // 0x28(0x4)
};


// Size 0x20
struct AthenaAnimationAsyncLoadedLocomotionTurningAnimData
{
public:
	assetobject                                                  Turn90;                                            // 0x0(0x20)
};


// Size 0x10
struct DartProxies
{
public:
	TArray<class ItemProxy*>                                     DartProxyArray;                                    // 0x0(0x10)
};


// Size 0x8
struct TeleportShipToTunnelEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x8
struct EventGhostShipPlayerSpawnLocationCreated
{
public:
	class GhostShipPlayerSpawnLocation*                          SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x20
struct UISetAudioSwitchEvent
{
public:
	struct FString                                               SwitchGroup;                                       // 0x0(0x10)
	struct FString                                               SwitchValue;                                       // 0x10(0x10)
};


// Size 0x10
struct AIShipDespawnedEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	char                                                         ShipDestructionReason;                             // 0x8(0x1)
};


// Size 0x58
struct ShovelDigActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           UsableObject;                                      // 0x40(0x14)
};


// Size 0x38
struct ShipRepairTelemetryEvent
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct Vector                                                DamageLocation;                                    // 0x10(0xc)
	struct FString                                               RepairedShipPart;                                  // 0x20(0x10)
	int                                                          DamageLevel;                                       // 0x30(0x4)
	float                                                        RepairPercentage;                                  // 0x34(0x4)
};


// Size 0x38
struct AthenaAnimationActiveItemComplexAnimData
{
public:
	class AnimSequence*                                          WarmUp;                                            // 0x0(0x8)
	class AnimSequence*                                          HeavyWarmUp;                                       // 0x8(0x8)
	class AnimSequence*                                          Action;                                            // 0x10(0x8)
	class AnimSequence*                                          Recover;                                           // 0x18(0x8)
	class AnimSequence*                                          HeavyAttackStunRecover;                            // 0x20(0x8)
	char                                                         AnimType;                                          // 0x28(0x1)
	float                                                        WarmUpPlaySpeed;                                   // 0x2c(0x4)
	bool                                                         IsHeavyAttackActive;                               // 0x30(0x1)
};


// Size 0x1
struct ClientInputMatchmakingResult
{
public:
	bool                                                         IsAccepted;                                        // 0x0(0x1)
};


// Size 0x1
struct ShipMastCollapseStateTelemetryEvent
{
public:
	bool                                                         MastCollapsedState;                                // 0x0(0x1)
};


// Size 0x2
struct VoiceChatStatusTelemetryEvent
{
public:
	char                                                         Device;                                            // 0x0(0x1)
	bool                                                         IsInPartyChat;                                     // 0x1(0x1)
};


// Size 0x40
struct CollectorsChestItemSlotDefinition
{
public:
	TArray<Class>                                                TargetObjectTypes;                                 // 0x0(0x10)
	struct Transform                                             RelativeTransform;                                 // 0x10(0x30)
};


// Size 0x10
struct GenericConfirmationEvent
{
public:
	struct FString                                               DisplayMessage;                                    // 0x0(0x10)
};


// Size 0x1
struct EventHarpoonProjectileClientStateChanged
{
public:
	char                                                         ProjectileState;                                   // 0x0(0x1)
};


// Size 0x8
struct FishAnimationParams
{
public:
	char                                                         FishAnimationState;                                // 0x0(0x1)
	int                                                          FishLoopEndingDirection;                           // 0x4(0x4)
};


// Size 0x34
struct BuoyancyComponentSinkingParams
{
public:
	float                                                        BuoyancyBlendTimeWhenSinking;                      // 0x0(0x4)
	char                                                         FloatingToSinkingBuoyancyCurveTransition;          // 0x4(0x1)
	float                                                        FloatingToSinkingBuoyancyCurveBlendTime;           // 0x8(0x4)
	float                                                        FinalSinkingBuoyancy;                              // 0xc(0x4)
	float                                                        SinkingTimeUntilDestroy;                           // 0x10(0x4)
	float                                                        DisappearingTime;                                  // 0x14(0x4)
	bool                                                         AutomaticSinkingEnabled;                           // 0x18(0x1)
	struct FloatRange                                            TimeInFloatingStateBeforeSinking;                  // 0x1c(0x10)
	float                                                        WaterDepthToAllowItemToSink;                       // 0x2c(0x4)
	char                                                         WorldHitsTraceChannel;                             // 0x30(0x1)
};


// Size 0x40
struct ClientReachedInGameTelemetryEvent
{
public:
	struct Guid                                                  PlayerGameId;                                      // 0x0(0x10)
	struct FString                                               SessionType;                                       // 0x10(0x10)
	struct Guid                                                  MatchmakingAttemptId;                              // 0x20(0x10)
	struct FString                                               ActiveExperiments;                                 // 0x30(0x10)
};


// Size 0x18
struct StorageContainerContentModifierExtraContentSpawnerEntry
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	int                                                          MinimumUses;                                       // 0x4(0x4)
	int                                                          MaximumUses;                                       // 0x8(0x4)
	class UClass*                                                ContentSpawnerType;                                // 0x10(0x8)
};


// Size 0x188
struct JoinGuildActionRuleVerbiage
{
public:
	struct FText                                                 JoinGuildVerbiage;                                 // 0x0(0x38)
	struct FText                                                 AlreadyInThisGuildVerbiage;                        // 0x38(0x38)
	struct FText                                                 GuildSlotsFullVerbiage;                            // 0x70(0x38)
	struct FText                                                 InviteInUseVerbiage;                               // 0xa8(0x38)
	struct FText                                                 GuildIsFullVerbiage;                               // 0xe0(0x38)
	struct FText                                                 GuildDoesNotExistVerbiage;                         // 0x118(0x38)
	struct FText                                                 GuildInvitationInUseVerbiage;                      // 0x150(0x38)
};


// Size 0x1
struct EventUpdateIslandEventHighlight
{
public:
	bool                                                         IsHighlightActive;                                 // 0x0(0x1)
};


// Size 0x1c
struct ShipLeakParams
{
public:
	float                                                        InternalWaterSamplePositionTopOffset;              // 0x0(0x4)
	float                                                        InternalWaterSamplePositionBottomOffset;           // 0x4(0x4)
	float                                                        WaterSplashDelayMin;                               // 0x8(0x4)
	float                                                        WaterSplashDelayMax;                               // 0xc(0x4)
	float                                                        HullFloodedPercentageToShiftWaterSamplingPos;      // 0x10(0x4)
	float                                                        WaterSampleOffsetBelowHullFloodThreshold;          // 0x14(0x4)
	float                                                        WaterSampleOffsetAboveHullFloodThreshold;          // 0x18(0x4)
};


// Size 0x48
struct PlayerAttackTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               DamageType;                                        // 0x10(0x10)
	struct FString                                               WeaponType;                                        // 0x20(0x10)
	struct Vector                                                TargetPos;                                         // 0x30(0xc)
	float                                                        DamageDealt;                                       // 0x3c(0x4)
	bool                                                         Success;                                           // 0x40(0x1)
};


// Size 0xc
struct UpdateRivalVoteCountUIEvent
{
public:
	int                                                          VoteCount;                                         // 0x0(0x4)
	int                                                          VoteLimit;                                         // 0x4(0x4)
	bool                                                         HasPlayerVotedInFavour;                            // 0x8(0x1)
};


// Size 0x10
struct CanLoadItemCategoryEntry
{
public:
	class UClass*                                                CanLoadItemCategory;                               // 0x0(0x8)
	struct FName                                                 FeatureToggle;                                     // 0x8(0x8)
};


// Size 0x40
struct VFXHandlerComponentParams
{
public:
	class ParticleSystem*                                        ParticleSystem;                                    // 0x0(0x8)
	struct Vector                                                VFXRelativeOffset;                                 // 0x8(0xc)
	struct Vector                                                VFXScale;                                          // 0x14(0xc)
	struct Rotator                                               VFXRotationOffset;                                 // 0x20(0xc)
	struct FName                                                 VFXAttachSocket;                                   // 0x2c(0x8)
	float                                                        VFXDrivingCurveValue;                              // 0x34(0x4)
	char                                                         VFXCustomLocalSpaceMode;                           // 0x38(0x1)
};


// Size 0x10
struct TunnelOfTheDamnedInitializedTelemetryEvent
{
public:
	struct FString                                               RequestedMatchmakingPlayModeTag;                   // 0x0(0x10)
};


// Size 0x4
struct CaptainsShopVoyageLimitResponseEvent
{
public:
	int                                                          VoyageLimit;                                       // 0x0(0x4)
};


// Size 0x18
struct DeepSeaRegionAmbienceAudio
{
public:
	class WwiseEvent*                                            PlayerInDeepSeaStart;                              // 0x0(0x8)
	class WwiseEvent*                                            PlayerInDeepSeaStop;                               // 0x8(0x8)
	bool                                                         OnlyPostMoodMusicEventsWhenSubmerged;              // 0x10(0x1)
};


// Size 0x40
struct QuestDistributionAllAtOnceParams
{
public:
	struct WeightedProbabilityRange                              NumQuests;                                         // 0x0(0x20)
	struct WeightedProbabilityRange                              QuestsPerChapter;                                  // 0x20(0x20)
};


// Size 0x28
struct AthenaAnimationLadderTransitionsAnimData
{
public:
	class AnimSequence*                                          ClimbOnTop;                                        // 0x0(0x8)
	class AnimSequence*                                          ClimbOffTop;                                       // 0x8(0x8)
	class AnimSequence*                                          ClimbOnBottom;                                     // 0x10(0x8)
	class AnimSequence*                                          ClimbOffBottom;                                    // 0x18(0x8)
	class AnimSequence*                                          ClamberOffTop;                                     // 0x20(0x8)
};


// Size 0x20
struct BookcaseIndicatorSetting
{
public:
	class UClass*                                                RelevantCompany;                                   // 0x0(0x8)
	class StaticMeshComponent*                                   IndicatorMesh;                                     // 0x8(0x8)
	TArray<class MaterialInstanceDynamic*>                       OverriddenMaterials;                               // 0x10(0x10)
};


// Size 0x10
struct SetStormPropertiesGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	struct Vector2D                                              StormCentre;                                       // 0x4(0x8)
	float                                                        StormStrength;                                     // 0xc(0x4)
};


// Size 0x40
struct GenericPopupAudioDescriptor
{
public:
	struct FString                                               SfxEventName;                                      // 0x0(0x10)
	struct FString                                               EventName;                                         // 0x10(0x10)
	struct FString                                               SwitchName;                                        // 0x20(0x10)
	struct FString                                               SwitchValue;                                       // 0x30(0x10)
};


// Size 0x20
struct LandmarkTreasureLocationEntry
{
public:
	struct FString                                               LandmarkName;                                      // 0x0(0x10)
	TArray<struct Vector>                                        Locations;                                         // 0x10(0x10)
};


// Size 0xa90
struct VaultButtonData
{
public:
	struct TransformBlendCurve                                   ButtonPressAnimation;                              // 0x0(0x500)
	struct TransformBlendCurve                                   ButtonActivationAnimation;                         // 0x500(0x500)
	float                                                        IncorrectSolutionPenaltyInSeconds;                 // 0xa00(0x4)
	float                                                        ButtonHoldTime;                                    // 0xa04(0x4)
	class StaticMeshComponent*                                   ButtonMesh;                                        // 0xa80(0x8)
};


// Size 0x4
struct HaulItemDescSpawnDataKey
{
public:
	char                                                         SeaRegionIndex;                                    // 0x0(0x1)
	char                                                         HaulIndex;                                         // 0x1(0x1)
	uint16                                                       ItemSpawnDataIndex;                                // 0x2(0x2)
};


// Size 0x10
struct PirateProfileImageModel
{
public:
	struct FString                                               Hash;                                              // 0x0(0x10)
};


// Size 0x20
struct LightingControllerMaterialInstances
{
public:
	TArray<class MaterialInstanceDynamic*>                       SkyDomeMaterials;                                  // 0x0(0x10)
	class MaterialInstanceDynamic*                               NorthStarMaterial;                                 // 0x10(0x8)
	class MaterialInstanceDynamic*                               MoonMaterial;                                      // 0x18(0x8)
};


// Size 0x10
struct FactionStreakIcon
{
public:
	class Texture*                                               FactionStreakIcon;                                 // 0x0(0x8)
	class UClass*                                                Faction;                                           // 0x8(0x8)
};


// Size 0x14
struct SkullOfStormsKnockbackTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         KnocbackActorTeam;                                 // 0x10(0x1)
};


// Size 0x18
struct GameEventCountInfo
{
public:
	struct FString                                               GameEventTypeRef;                                  // 0x0(0x10)
	int                                                          NumAllowed;                                        // 0x10(0x4)
};


// Size 0x10
struct EventCharactersCollided
{
public:
	class Character*                                             OtherCharacter;                                    // 0x0(0x8)
	class PrimitiveComponent*                                    OtherComponent;                                    // 0x8(0x8)
};


// Size 0x60
struct TestControlObjectActionStateConstructionInfo
{
public:
	float                                                        DockTime;                                          // 0x58(0x4)
};


// Size 0x18
struct CrewMutePlayerVoiceEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	bool                                                         IsMuted;                                           // 0x10(0x1)
};


// Size 0x18
struct RegisteredSkeletonCamp
{
public:
	class Actor*                                                 SkeletonCampEventRoomActor;                        // 0x0(0x8)
	struct TimerHandle                                           CooldownTimerHandle;                               // 0x10(0x4)
	bool                                                         EligibleForReset;                                  // 0x14(0x1)
};


// Size 0x8
struct EventCurseWheelLock
{
public:
	char                                                         CurseTag;                                          // 0x0(0x1)
	float                                                        AngleThreshold;                                    // 0x4(0x4)
};


// Size 0x18
struct SingleStickMappingAxis
{
public:
	struct FString                                               BindingName;                                       // 0x0(0x10)
	bool                                                         Invert;                                            // 0x10(0x1)
};


// Size 0x10
struct WieldedItemData
{
public:
	class Actor*                                                 Wieldable;                                         // 0x0(0x8)
	class UClass*                                                ItemCategory;                                      // 0x8(0x8)
};


// Size 0x30
struct SwimmingCreatureMovementReplicatedData
{
public:
	struct Vector                                                CurrentServerGoalLocation;                         // 0x0(0xc)
	struct RotationUpdateResult                                  CurrentServerRotationData;                         // 0xc(0x18)
	float                                                        CurrentServerMaxSpeed;                             // 0x24(0x4)
	float                                                        CurrentServerVelocitySmoothingFactor;              // 0x28(0x4)
	bool                                                         CurrentServerIsSharkArcCorrectionTurn;             // 0x2c(0x1)
};


// Size 0x58
struct TreasureBuriedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         BootyType;                                         // 0x10(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
	struct Vector                                                TreasureLocation;                                  // 0x28(0xc)
	struct Guid                                                  MapID;                                             // 0x34(0x10)
	struct Guid                                                  BuriedByCrewId;                                    // 0x44(0x10)
};


// Size 0x20
struct CannonProjectileHitShipWithStatusEffectsEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	TArray<struct Status>                                        Statuses;                                          // 0x8(0x10)
	class Actor*                                                 Instigator;                                        // 0x18(0x8)
};


// Size 0x18
struct OverrideDialogOptionUsageCounter
{
public:
	int                                                          OverrideDataIndex;                                 // 0x0(0x4)
	TArray<int>                                                  OptionUsageCounter;                                // 0x8(0x10)
};


// Size 0x18
struct QuestTableCompanyRequirementIcon
{
public:
	class InteractionPrerequisiteBase*                           Prerequisite;                                      // 0x0(0x8)
	struct StringAssetReference                                  Icon;                                              // 0x8(0x10)
};


// Size 0x24
struct AccoladeProgressId
{
public:
	struct Guid                                                  GoalId;                                            // 0x0(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x10(0x10)
	int                                                          CycleIndex;                                        // 0x20(0x4)
};


// Size 0x18
struct ItemBuriedTaleQuestAutomationEvent
{
public:
	class UClass*                                                ItemBuried;                                        // 0x0(0x8)
	struct Vector                                                Location;                                          // 0x8(0xc)
};


// Size 0x28
struct DecalEntry
{
public:
	class DecalComponent*                                        DecalComponent;                                    // 0x0(0x8)
	class MaterialInstanceDynamic*                               DecalMaterial;                                     // 0x8(0x8)
	struct LinearColor                                           DecalColour;                                       // 0x10(0x10)
	int                                                          LocationIndex;                                     // 0x20(0x4)
};


// Size 0xc
struct CrewInTunnel
{
public:
	bool                                                         FullCrewInTunnel;                                  // 0x0(0x1)
	struct FName                                                 Faction;                                           // 0x4(0x8)
};


// Size 0x20
struct PlayerBucketEmptyTelemetryEvent
{
public:
	struct Guid                                                  ScoopID;                                           // 0x0(0x10)
	struct FString                                               EmptyBucketTo;                                     // 0x10(0x10)
};


// Size 0xc
struct CanvasLOD
{
public:
	bool                                                         IsCanvasCountLimited;                              // 0x0(0x1)
	int                                                          MaxNumCanvasesAtThisLOD;                           // 0x4(0x4)
	float                                                        ResolutionScaler;                                  // 0x8(0x4)
};


// Size 0x10
struct ShroudBreakerDeactivateEffectsEvent
{
public:
	struct Guid                                                  ShroudBreakerId;                                   // 0x0(0x10)
};


// Size 0x1f8
struct NpcTraderPromotionOffer
{
public:
	char                                                         ItemType;                                          // 0x1e0(0x1)
	struct FString                                               VoyageID;                                          // 0x1e8(0x10)
};


// Size 0x48
struct DropItemParams
{
public:
	TArray<Class>                                                AttachOnDropParentTypes;                           // 0x0(0x10)
	struct Vector                                                DropItemOffset;                                    // 0x10(0xc)
	float                                                        MaxShallowWaterHeightToAllowItemDrop;              // 0x1c(0x4)
	char                                                         DropItemPosTestTraceChannel;                       // 0x20(0x1)
	float                                                        WaterVolumeOverlapRadius;                          // 0x24(0x4)
	float                                                        MaxDroppedItemPitchRoll;                           // 0x28(0x4)
	float                                                        ItemWorldProxyCapsuleCastRadius;                   // 0x2c(0x4)
	float                                                        ItemWorldProxyCapsuleCastHeight;                   // 0x30(0x4)
	float                                                        ItemWorldProxyCapsuleDownCastRadiusModifier;       // 0x34(0x4)
	float                                                        LineTraceDepth;                                    // 0x38(0x4)
	float                                                        SweepPercentageOnHit;                              // 0x3c(0x4)
	float                                                        HitDiffTolerance;                                  // 0x40(0x4)
	float                                                        LineTraceOffsetUpwardsFromStart;                   // 0x44(0x4)
};


// Size 0x40
struct AIShipSpawnedEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	struct Guid                                                  SpawningCrew;                                      // 0x8(0x10)
	struct Guid                                                  SpawningEventId;                                   // 0x18(0x10)
	struct Guid                                                  SpawnConfigId;                                     // 0x28(0x10)
	int                                                          Wave;                                              // 0x38(0x4)
};


// Size 0x18
struct RatManagerPseudoRandomEntry
{
public:
	double                                                       TimeBoundary;                                      // 0x0(0x8)
	float                                                        RatSpeed;                                          // 0x8(0x4)
	float                                                        RatScale;                                          // 0xc(0x4)
	struct FName                                                 LocationName;                                      // 0x10(0x8)
};


// Size 0x18
struct IndividualMeshScoringToRemove
{
public:
	struct FName                                                 MeshName;                                          // 0x0(0x8)
	struct Guid                                                  RegistrationToken;                                 // 0x8(0x10)
};


// Size 0x38
struct CaptainedSessionSettings
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct FString                                               PirateId;                                          // 0x18(0x10)
	struct Guid                                                  ShipId;                                            // 0x28(0x10)
};


// Size 0x38
struct TunnelOfTheDamnedBaseTelemetryFragment
{
public:
	struct Guid                                                  TunnelInstanceId;                                  // 0x0(0x10)
	struct FString                                               TunnelType;                                        // 0x10(0x10)
	struct FString                                               TunnelDescName;                                    // 0x20(0x10)
	double                                                       TunnelLifetimeSeconds;                             // 0x30(0x8)
};


// Size 0x18
struct StandardHullDragDynamicsParameters
{
public:
	float                                                        ForwardDragForcePerMPS;                            // 0x0(0x4)
	float                                                        BackwardsDragForcePerMPS;                          // 0x4(0x4)
	float                                                        SidewaysDragCounterForcePerMPS;                    // 0x8(0x4)
	float                                                        MaxSailFractionToCountAsFullyUpForDragCalc;        // 0xc(0x4)
	float                                                        ForwardDragWhenBeached;                            // 0x10(0x4)
	float                                                        WaterZoneDragAmp;                                  // 0x14(0x4)
};


// Size 0x80
struct FriendViewModel
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	struct FString                                               GamerpicUrl;                                       // 0x20(0x10)
	struct FString                                               RealName;                                          // 0x30(0x10)
	struct FString                                               RichPresence;                                      // 0x40(0x10)
	char                                                         Status;                                            // 0x50(0x1)
	int                                                          AwayDurationHours;                                 // 0x54(0x4)
	char                                                         Platform;                                          // 0x58(0x1)
	struct FString                                               PlatformUsername;                                  // 0x60(0x10)
	struct FString                                               PlatformUserId;                                    // 0x70(0x10)
};


// Size 0x18
struct OverrideCrewSpawnTeleportLocation
{
public:
	class Actor*                                                 TeleportLocationActor;                             // 0x0(0x8)
	struct Guid                                                  CrewId;                                            // 0x8(0x10)
};


// Size 0x4
struct SuspensionStatusResponse
{
public:
	int                                                          StrikeCount;                                       // 0x0(0x4)
};


// Size 0x48
struct MigrationActionStateConstructionInfo
{
public:
	bool                                                         EnableMigrationUI;                                 // 0x40(0x1)
	bool                                                         IsCrossLevel;                                      // 0x41(0x1)
};


// Size 0x30
struct ScoreGrantedNotificationUIEvent
{
public:
	char                                                         ScoreId;                                           // 0x0(0x1)
	struct FString                                               DisplayAmount;                                     // 0x8(0x10)
	int                                                          Amount;                                            // 0x18(0x4)
	struct FString                                               ScoringIconPath;                                   // 0x20(0x10)
};


// Size 0x10
struct RequestShipCustomizationChestShipCustomizationLoadoutEvent
{
public:
	TArray<String>                                               Categories;                                        // 0x0(0x10)
};


// Size 0x28
struct CategorySpec
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
	TArray<class Class*>                                         FallbackCategories;                                // 0x8(0x10)
	struct FString                                               DefaultSlotIconURL;                                // 0x18(0x10)
};


// Size 0x8
struct AthenaAnimationStunData
{
public:
	char                                                         StunAnimType;                                      // 0x0(0x1)
	bool                                                         IsCursedVariant;                                   // 0x4(0x1)
};


// Size 0xc
struct RainZoneParameters
{
public:
	float                                                        OuterRadius;                                       // 0x0(0x4)
	float                                                        InnerRadius;                                       // 0x4(0x4)
	float                                                        Strength;                                          // 0x8(0x4)
};


// Size 0x10
struct ShipStorageJettisonEvent
{
public:
	TArray<uintptr_t>                                            JettisonedContainers;                              // 0x0(0x10)
};


// Size 0x18
struct ShipCurseAudioLoop
{
public:
	class WwiseEvent*                                            PlayLoop;                                          // 0x0(0x8)
	class WwiseEvent*                                            StopLoop;                                          // 0x8(0x8)
	class WwiseObjectPoolWrapper*                                PoolWrapper;                                       // 0x10(0x8)
};


// Size 0x1
struct TutorialDialogEvent
{
public:
	char                                                         StepStarted;                                       // 0x0(0x1)
};


// Size 0x48
struct BaseTelemetryFragment
{
public:
	struct FString                                               DateLogged;                                        // 0x0(0x10)
	struct FString                                               Sandbox;                                           // 0x10(0x10)
	struct FString                                               FeatureConfigHash;                                 // 0x20(0x10)
	struct FString                                               StampId;                                           // 0x30(0x10)
	float                                                        LifeTime;                                          // 0x40(0x4)
};


// Size 0x1
struct PlayerIsCaptainChangedEvent
{
public:
	bool                                                         IsCaptain;                                         // 0x0(0x1)
};


// Size 0x8
struct ItemLoadoutItemCategoryAddedEvent
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
};


// Size 0x20
struct AlignmentWorldMarkerParams
{
public:
	class UClass*                                                BelleWorldMarker;                                  // 0x0(0x8)
	class UClass*                                                ReaperWorldMarker;                                 // 0x8(0x8)
	struct Vector                                                WorldMarkerOffset;                                 // 0x10(0xc)
};


// Size 0x1c
struct DestroyingUnsafeExpiredWreckEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	struct Guid                                                  CrewId;                                            // 0xc(0x10)
};


// Size 0x40
struct EventCargoRunCratePickedUp
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  BatchId;                                           // 0x10(0x10)
	struct Guid                                                  PickUpId;                                          // 0x20(0x10)
	class BootyItemInfo*                                         ItemInfo;                                          // 0x30(0x8)
	class WieldableItem*                                         Item;                                              // 0x38(0x8)
};


// Size 0x10
struct EvictPlayerMessage
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
};


// Size 0x70
struct Island
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	char                                                         IslandType;                                        // 0x8(0x1)
	class UClass*                                                Sea;                                               // 0x10(0x8)
	struct Vector                                                IslandBoundsCentre;                                // 0x18(0xc)
	float                                                        IslandBoundsRadius;                                // 0x24(0x4)
	float                                                        IslandTriggerRadius;                               // 0x28(0x4)
	float                                                        IslandSafeZoneRadius;                              // 0x2c(0x4)
	float                                                        ShipDiveAndResurfaceExclusionZoneRadius;           // 0x30(0x4)
	float                                                        Rotation;                                          // 0x34(0x4)
	struct Vector                                                CompassDirectionIslandCentre;                      // 0x38(0xc)
	class AICreatureMovementModifierParamsDataAsset*             PetMovementParamsData;                             // 0x48(0x8)
	TArray<struct Name>                                          IslandFeatureNames;                                // 0x60(0x10)
};


// Size 0x1
struct EventAthenaLocalPlayerFocalUserSet
{
public:
	bool                                                         FocalUserSet;                                      // 0x0(0x1)
};


// Size 0x10
struct AISpawnActionStateParams
{
public:
	float                                                        SpawnTimeMax;                                      // 0x0(0x4)
	bool                                                         BeginInvis;                                        // 0x4(0x1)
	float                                                        InvisTime;                                         // 0x8(0x4)
	bool                                                         SkipAnimTimeCheck;                                 // 0xc(0x1)
};


// Size 0x8
struct EventItemConsumed
{
public:
	class Actor*                                                 Consumer;                                          // 0x0(0x8)
};


// Size 0xc
struct ActivateHatchEvent
{
public:
	struct FName                                                 EventID;                                           // 0x0(0x8)
	char                                                         FlameSpecificPhobia;                               // 0x8(0x1)
};


// Size 0x4
struct ReapersTributeShipHandedInTelemetryEvent
{
public:
	int                                                          RitualsCompleted;                                  // 0x0(0x4)
};


// Size 0x14
struct ServerMatchmakingFailedMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	char                                                         Reason;                                            // 0x10(0x1)
};


// Size 0x10
struct EventPlayerStatePawnUnPossessed
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
	class Pawn*                                                  UnPossessedPawn;                                   // 0x8(0x8)
};


// Size 0x4
struct GetGuildLedgerResponseModel
{
public:
	uint32                                                       UserPosition;                                      // 0x0(0x4)
};


// Size 0x10
struct ControlObjectActionRuleParams
{
public:
	TArray<char>                                                 WieldableItemSizesToDisableControl;                // 0x0(0x10)
};


// Size 0x8
struct PickedUpItemFromChestEvent
{
public:
	class Actor*                                                 PickupActor;                                       // 0x0(0x8)
};


// Size 0x28
struct PlayerGameStartVoyageTelemetryEvent
{
public:
	struct FString                                               VoyageTitle;                                       // 0x0(0x10)
	struct Guid                                                  VoyageID;                                          // 0x10(0x10)
	char                                                         JoinStatus;                                        // 0x20(0x1)
	bool                                                         IsTale;                                            // 0x21(0x1)
	bool                                                         IsStarlightTale;                                   // 0x22(0x1)
};


// Size 0x38
struct ShipCustomizationLoadout
{
public:
	TArray<class Class*>                                         Customizations;                                    // 0x0(0x10)
	TArray<class Class*>                                         InitialCustomizations;                             // 0x10(0x10)
	TArray<class Class*>                                         SavedCustomizations;                               // 0x20(0x10)
	bool                                                         HasInitialCustomizationsSet;                       // 0x30(0x1)
};


// Size 0x40
struct MeleeWeaponAttackTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               AttackType;                                        // 0x10(0x10)
	int                                                          ComboIndex;                                        // 0x20(0x4)
	struct FString                                               WeaponName;                                        // 0x28(0x10)
	float                                                        RequesterLatencyMs;                                // 0x38(0x4)
	float                                                        RequesterTimeOffset;                               // 0x3c(0x4)
};


// Size 0x30
struct StoreTokenModel
{
public:
	struct FString                                               AccessToken;                                       // 0x0(0x10)
	struct FString                                               WsidToken;                                         // 0x10(0x10)
	struct FString                                               PlayFabXstsToken;                                  // 0x20(0x10)
};


// Size 0x48
struct ItemSpawnParams
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	struct WeightedProbabilityRange                              Total;                                             // 0x10(0x20)
	float                                                        AllowedAngleDeviation;                             // 0x30(0x4)
	float                                                        MaxZ;                                              // 0x34(0x4)
	TArray<class SpawnRequirement*>                              Requirements;                                      // 0x38(0x10)
};


// Size 0x18
struct EventEnableInteractionPoints
{
public:
	char                                                         ShipCurseTag;                                      // 0x0(0x1)
	char                                                         CurseTag;                                          // 0x1(0x1)
	TArray<class Class*>                                         InteractionPointsToEnable;                         // 0x8(0x10)
};


// Size 0x60
struct RecentlyInteractedWithPlayer
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct FString                                               ScrambledGamerTag;                                 // 0x10(0x10)
	struct FString                                               Xuid;                                              // 0x20(0x10)
	char                                                         Platform;                                          // 0x30(0x1)
	struct FString                                               PlatformUsername;                                  // 0x38(0x10)
	struct FString                                               PlatformUserId;                                    // 0x48(0x10)
	struct DateTime                                              LastInteractionTime;                               // 0x58(0x8)
};


// Size 0x30
struct LoadoutPetCategory
{
public:
	struct FString                                               PetEntitlementId;                                  // 0x0(0x10)
	struct FString                                               PetCustomizationEntitlementId;                     // 0x10(0x10)
	struct FString                                               PetName;                                           // 0x20(0x10)
};


// Size 0x20
struct SkeletonCampConstellationPuzzleTelemetryEvent
{
public:
	struct FString                                               CampLocation;                                      // 0x0(0x10)
	struct DateTime                                              StartTime;                                         // 0x10(0x8)
	struct DateTime                                              EndTime;                                           // 0x18(0x8)
};


// Size 0x20
struct StartedGuildedSessionEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  GuildId;                                           // 0x10(0x10)
};


// Size 0x40
struct AmmoChangeEffectParams
{
public:
	float                                                        InputRangeMin;                                     // 0x0(0x4)
	float                                                        InputRangeMax;                                     // 0x4(0x4)
	float                                                        OutputRangeMin;                                    // 0x8(0x4)
	float                                                        OutputRangeMax;                                    // 0xc(0x4)
	float                                                        OutputRangeThreshold;                              // 0x10(0x4)
	bool                                                         UseThresholdValueAsNewOutputRangeMax;              // 0x14(0x1)
	class CurveFloat*                                            LerpSpeedCurve;                                    // 0x18(0x8)
	struct ScalarParameterValue                                  ScalarParameterValue;                              // 0x20(0x1c)
};


// Size 0xc
struct MaxHolePerIslandDataAsset
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	int                                                          MaxHoles;                                          // 0x8(0x4)
};


// Size 0x28
struct GuildSessionCrewMember
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	TArray<char>                                                 CannotInviteReasons;                               // 0x18(0x10)
};


// Size 0xc0
struct ProjectileServiceTelemetryHitTrackingRpc
{
public:
	double                                                       TimeStamp;                                         // 0x18(0x8)
	int                                                          CurrentTimeOfImpact;                               // 0x20(0x4)
	struct Guid                                                  AttackId;                                          // 0x24(0x10)
	struct Guid                                                  TelemetryAttackId;                                 // 0x34(0x10)
	int                                                          ProjectileIndex;                                   // 0x44(0x4)
	float                                                        TimeAlive;                                         // 0x48(0x4)
	struct Vector_NetQuantize                                    InitialProjectilePosition;                         // 0x4c(0xc)
	struct Vector_NetQuantize                                    FinalProjectilePosition;                           // 0x58(0xc)
	struct Vector                                                Direction;                                         // 0x64(0xc)
	float                                                        DownForce;                                         // 0x70(0x4)
	float                                                        Speed;                                             // 0x74(0x4)
	class UClass*                                                DamagerType;                                       // 0x78(0x8)
	class AthenaPlayerCharacter*                                 InstigatingPlayerCharacter;                        // 0x80(0x8)
	float                                                        InstigatorSpeed;                                   // 0x88(0x4)
	class Actor*                                                 HitActor;                                          // 0x90(0x8)
	class SceneComponent*                                        HitComponent;                                      // 0x98(0x8)
	struct Vector_NetQuantize                                    HitComponentLocation;                              // 0xa0(0xc)
	struct Rotator                                               HitComponentRotation;                              // 0xac(0xc)
	float                                                        LatencyMs;                                         // 0xb8(0x4)
	char                                                         NetworkPerformanceFlags;                           // 0xbc(0x1)
	bool                                                         IsCrouching;                                       // 0xbd(0x1)
};


// Size 0x48
struct MultipleNPCCompaniesRedirectionData
{
public:
	TArray<class Class*>                                         Companies;                                         // 0x0(0x10)
	struct FText                                                 VisitNPCTooltip;                                   // 0x10(0x38)
};


// Size 0x38
struct StowItemToContainerRPC
{
public:
	struct NetSubObjectPtr                                       Container;                                         // 0x18(0x14)
	class UClass*                                                ItemDescToStow;                                    // 0x30(0x8)
};


// Size 0x10
struct RequestEquipmentChestItemLoadoutEvent
{
public:
	TArray<String>                                               Categories;                                        // 0x0(0x10)
};


// Size 0x8
struct RugsPartDesc
{
public:
	class MaterialInterface*                                     RugsMaterial;                                      // 0x0(0x8)
};


// Size 0x18
struct MemoryTableData
{
public:
	uint64                                                       BlockSize;                                         // 0x0(0x8)
	uint64                                                       NumActivePools;                                    // 0x8(0x8)
	uint64                                                       PeakActivePools;                                   // 0x10(0x8)
};


// Size 0x60
struct SpawnLaunchableShotRpc
{
public:
	struct Transform                                             SpawnTransform;                                    // 0x20(0x30)
	class LaunchableShotActionComponent*                         Action;                                            // 0x50(0x8)
};


// Size 0x30
struct StreamingTelemetryBaseEvent
{
public:
	struct FString                                               LevelName;                                         // 0x0(0x10)
	int                                                          LodLevel;                                          // 0x10(0x4)
	struct Vector                                                PlayerPosition;                                    // 0x14(0xc)
	float                                                        DistanceFromPlayer;                                // 0x20(0x4)
	float                                                        DistanceFromBoundsToPlayer;                        // 0x24(0x4)
	bool                                                         PlayerIsWaitingToSpawn;                            // 0x28(0x1)
	bool                                                         PlayerIsTeleporting;                               // 0x29(0x1)
	bool                                                         IsLevelAssetCachingEnabled;                        // 0x2a(0x1)
};


// Size 0x30
struct ActionSequenceInteractableAudioParams
{
public:
	TArray<class WwiseEvent*>                                    InteractionStartedWwiseEvents;                     // 0x0(0x10)
	TArray<class WwiseEvent*>                                    InteractionCompletedWwiseEvents;                   // 0x10(0x10)
	TArray<class WwiseEvent*>                                    StopInteractionWwiseEvents;                        // 0x20(0x10)
};


// Size 0x58
struct CategoryTab
{
public:
	struct FText                                                 Name;                                              // 0x0(0x38)
	struct FString                                               UniqueTextIdentifier;                              // 0x38(0x10)
	struct FString                                               IconPath;                                          // 0x48(0x10)
};


// Size 0x18
struct StoryInfoModel
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	struct DateTime                                              StartTime;                                         // 0x8(0x8)
	struct DateTime                                              EndTime;                                           // 0x10(0x8)
};


// Size 0x20
struct UIMessageOfTheDayOpenTelemetryEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               MessageId;                                         // 0x10(0x10)
};


// Size 0x90
struct UpdateSelectedPirateEvent
{
public:
	TArray<class Class*>                                         Outfit;                                            // 0x80(0x10)
};


// Size 0x28
struct BeaconStateData
{
public:
	char                                                         FlameOfFate;                                       // 0x20(0x1)
	bool                                                         IsLit;                                             // 0x21(0x1)
};


// Size 0x8
struct EventMovedByActorEnd
{
public:
	class Actor*                                                 MovementInstigator;                                // 0x0(0x8)
};


// Size 0x48
struct BuriedTreasureChestParams
{
public:
	int                                                          MaxSmallCrewSizeForNumDigsSelection;               // 0x0(0x4)
	struct WeightedProbabilityRange                              NumDigsRequiredForSmallCrewSize;                   // 0x8(0x20)
	struct WeightedProbabilityRange                              NumDigsRequiredForBiggerCrewSize;                  // 0x28(0x20)
};


// Size 0x14
struct ShroudBreakerSetStageEvent
{
public:
	struct Guid                                                  ShroudBreakerId;                                   // 0x0(0x10)
	char                                                         Stage;                                             // 0x10(0x1)
};


// Size 0x20
struct StorageContainerUnregisterServerEventsRpc
{
public:
	class Object*                                                InStorageContainerOwnerObject;                     // 0x18(0x8)
};


// Size 0x8
struct EventShipExitedSafeZone
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x10
struct ShipHighestAlignmentChangedEvent
{
public:
	struct FString                                               AlignmentId;                                       // 0x0(0x10)
};


// Size 0x24
struct LeaveGhostShipActionStateParams
{
public:
	float                                                        FadeDelay;                                         // 0x0(0x4)
	float                                                        FadeDuration;                                      // 0x4(0x4)
	float                                                        FadeEventTimeout;                                  // 0x8(0x4)
	float                                                        FadeServerTimeout;                                 // 0xc(0x4)
	struct LinearColor                                           FadeColour;                                        // 0x10(0x10)
	bool                                                         FadeAudio;                                         // 0x20(0x1)
};


// Size 0x10
struct PopupQueueFinished
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x10
struct ReapersMarkTrackedBootyItem
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	char                                                         ItemType;                                          // 0x8(0x1)
};


// Size 0x10
struct HarpoonItemSlot
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	int                                                          ItemsInSlot;                                       // 0xc(0x4)
};


// Size 0x60
struct FaunaAnimationCurrentPlayingAnimations
{
public:
	class BlendSpace1D*                                          LandLocomotionA;                                   // 0x0(0x8)
	class BlendSpace1D*                                          LandLocomotionB;                                   // 0x8(0x8)
	class BlendSpace1D*                                          SeaLocomotionA;                                    // 0x10(0x8)
	class BlendSpace1D*                                          SeaLocomotionB;                                    // 0x18(0x8)
	class BlendSpace1D*                                          UnderwaterLocomotionA;                             // 0x20(0x8)
	class BlendSpace1D*                                          UnderwaterLocomotionB;                             // 0x28(0x8)
	class AnimSequence*                                          LandIdleA;                                         // 0x30(0x8)
	class AnimSequence*                                          LandIdleB;                                         // 0x38(0x8)
	class AnimSequence*                                          SeaIdleA;                                          // 0x40(0x8)
	class AnimSequence*                                          SeaIdleB;                                          // 0x48(0x8)
	class AnimSequence*                                          UnderwaterIdleA;                                   // 0x50(0x8)
	class AnimSequence*                                          UnderwaterIdleB;                                   // 0x58(0x8)
};


// Size 0x5
struct CrewShipData
{
public:
	bool                                                         Vote;                                              // 0x0(0x1)
	char                                                         NumVotes;                                          // 0x1(0x1)
	bool                                                         ScuttleAndChangeSeasVote;                          // 0x2(0x1)
	char                                                         ScuttleAndChangeSeasNumVotes;                      // 0x3(0x1)
	char                                                         ScuttleState;                                      // 0x4(0x1)
};


// Size 0x18
struct EventRemoveCrewBeckonNPCGroup
{
public:
	class UClass*                                                NPCGroupID;                                        // 0x0(0x8)
};


// Size 0x3f0
struct AthenaAnimationFishing
{
public:
	bool                                                         AnimationOverride;                                 // 0x0(0x1)
	class Actor*                                                 FishingRodActor;                                   // 0x3d0(0x8)
	class Actor*                                                 FishingFloat;                                      // 0x3d8(0x8)
	class AthenaAnimationInstance*                               OwningAnimationInstance;                           // 0x3e0(0x8)
};


// Size 0x18
struct QuestStartRiddleTelemetryEvent
{
public:
	struct FString                                               IslandName;                                        // 0x0(0x10)
	int                                                          NumGates;                                          // 0x10(0x4)
};


// Size 0x48
struct ModalInteractionActionStateSerialisableData
{
public:
	struct NetActorPtr                                           Interaction;                                       // 0x30(0x14)
};


// Size 0x1c
struct CharacterSocketFootWaterImpactResult
{
public:
	struct Vector                                                Position;                                          // 0x0(0xc)
	struct Vector                                                SocketVelocity;                                    // 0xc(0xc)
	int                                                          FootIndex;                                         // 0x18(0x4)
};


// Size 0x148
struct WalkableEmoteActionStateConstructionInfo
{
public:
	struct WalkableEmoteData                                     WalkableEmoteData;                                 // 0x40(0x100)
	struct FName                                                 WalkableEmoteIdentifier;                           // 0x140(0x8)
};


// Size 0xd8
struct CompanySkin
{
public:
	struct StringAssetReference                                  RibbonImage;                                       // 0x0(0x10)
	char                                                         Style;                                             // 0x10(0x1)
	struct FString                                               RankIncreaseAudioCue;                              // 0x18(0x10)
	struct FString                                               RankIncreaseStopAudioCue;                          // 0x28(0x10)
	struct FString                                               RankLevelUpAudioCue;                               // 0x38(0x10)
	struct FString                                               RankTriggerAudioCue;                               // 0x48(0x10)
	struct FString                                               DistinctionRankLevelUpAudioCue;                    // 0x58(0x10)
	struct FString                                               EmissaryRankIncreaseAudioCue;                      // 0x68(0x10)
	struct FString                                               EmissaryRankIncreaseStopAudioCue;                  // 0x78(0x10)
	struct FString                                               EmissaryRankLevelUpAudioCue;                       // 0x88(0x10)
	struct FString                                               EmissaryRankTriggerAudioCue;                       // 0x98(0x10)
	struct FString                                               EmissaryRankLevelUpMusicCue;                       // 0xa8(0x10)
	struct StringAssetReference                                  BackgroundImage;                                   // 0xb8(0x10)
	struct StringAssetReference                                  SeaOfThievesOnDemandBackgroundImage;               // 0xc8(0x10)
};


// Size 0x20
struct ScoreReasonIcons
{
public:
	char                                                         ReasonForScore;                                    // 0x0(0x1)
	struct StringAssetReference                                  ScoringIconAssetReference;                         // 0x8(0x10)
	class Texture*                                               ScoreScrollScoringIcon;                            // 0x18(0x8)
};


// Size 0x18
struct AthenaAnimationRowboatAnimationsPassenger
{
public:
	class AnimSequence*                                          PassengerIntoSitting;                              // 0x0(0x8)
	class AnimSequence*                                          PassengerSittingIdle;                              // 0x8(0x8)
	class AnimSequence*                                          PassengerStand;                                    // 0x10(0x8)
};


// Size 0x18
struct ControlObjectActionStateParams
{
public:
	bool                                                         UndockToLastKnownLocation;                         // 0x10(0x1)
	float                                                        UndockDuration;                                    // 0x14(0x4)
};


// Size 0x50
struct GetLinkedXuidFromPSNIdResponseModel
{
public:
	map                                                          Matches;                                           // 0x0(0x50)
};


// Size 0x40
struct StorageContainerContentSpawnerEntry
{
public:
	class UClass*                                                ItemDesc;                                          // 0x0(0x8)
	class StorageContainerSpawnerItemListBase*                   ItemList;                                          // 0x8(0x8)
	struct WeightedProbabilityRangeOfRanges                      AmountToStock;                                     // 0x10(0x30)
};


// Size 0x28
struct WorldMapSetLocation
{
public:
	TArray<struct Vector2D>                                      MapPins;                                           // 0x0(0x10)
	int                                                          MaxMapPins;                                        // 0x10(0x4)
	int                                                          SelectedPin;                                       // 0x14(0x4)
	float                                                        WorldX;                                            // 0x18(0x4)
	float                                                        WorldY;                                            // 0x1c(0x4)
	float                                                        Zoom;                                              // 0x20(0x4)
};


// Size 0x18
struct RequestArmoryEquipSlotEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
	int                                                          SlotId;                                            // 0x10(0x4)
};


// Size 0x20
struct CampaignCompletedNetworkEvent
{
public:
	struct FName                                                 Name;                                              // 0x18(0x8)
};


// Size 0x28
struct EntitlementAllowance
{
public:
	assetclass                                                   Entitlement;                                       // 0x0(0x20)
	int                                                          AllowedNumber;                                     // 0x20(0x4)
};


// Size 0x68
struct ExitTunnelOfTheDamnedActionStateConstructionInfo
{
public:
	struct Vector                                                TunnelLocation;                                    // 0x40(0xc)
	class CameraAnim*                                            CameraAnim;                                        // 0x50(0x8)
	class CurveFloat*                                            CameraBlendCurve;                                  // 0x58(0x8)
	bool                                                         CheckForMigrationConditions;                       // 0x60(0x1)
};


// Size 0x20
struct UserPresence
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               Presence;                                          // 0x10(0x10)
};


// Size 0x10
struct PlayerArriveLocationTelemetryEvent
{
public:
	struct FString                                               LocationName;                                      // 0x0(0x10)
};


// Size 0x10
struct EmblemUnlockedPopupEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x0(0x8)
	class PopUpAudioDesc*                                        PopUpAudioOverrides;                               // 0x8(0x8)
};


// Size 0x30
struct VoteAddedNetworkEvent
{
public:
	struct FName                                                 CompanyId;                                         // 0x18(0x8)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
};


// Size 0x18
struct FootstepLocation
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	struct Rotator                                               Rotation;                                          // 0xc(0xc)
};


// Size 0x128
struct AmmoUI
{
public:
	class Pawn*                                                  TargetPawn;                                        // 0x18(0x8)
};


// Size 0x10
struct ShroudBreakerDeactivatedEvent
{
public:
	struct Guid                                                  ShroudBreakerId;                                   // 0x0(0x10)
};


// Size 0x10
struct CompanyValidationAssetUnit
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	bool                                                         ShouldHaveLevels;                                  // 0x8(0x1)
	bool                                                         ShouldHaveEmblems;                                 // 0x9(0x1)
};


// Size 0x28
struct HideInObjectActionStateParams
{
public:
	TArray<char>                                                 PreventedHealthChanges;                            // 0x18(0x10)
};


// Size 0x4
struct SetToastHoldDurationMultiplier
{
public:
	float                                                        Multiplier;                                        // 0x0(0x4)
};


// Size 0x10
struct RequestShopOffersEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
};


// Size 0x10
struct ActionMappingKeyLookupFallback
{
public:
	struct FName                                                 ActionBeingLookedUp;                               // 0x0(0x8)
	struct FName                                                 ActionToAlsoLookup;                                // 0x8(0x8)
};


// Size 0x28
struct AIShipEncounterRevealNetEvent
{
public:
	int                                                          BattleIdx;                                         // 0x18(0x4)
	int                                                          SkellyCrewIdx;                                     // 0x1c(0x4)
	char                                                         CannonballIconType;                                // 0x20(0x1)
	char                                                         SkellyFormIconType;                                // 0x21(0x1)
};


// Size 0x8
struct TutorialStepExitedEvent
{
public:
	struct FName                                                 StepName;                                          // 0x0(0x8)
};


// Size 0xc
struct MastReceivedDamageEvent
{
public:
	int                                                          OldLevelsOfDamage;                                 // 0x0(0x4)
	int                                                          DamageReceived;                                    // 0x4(0x4)
	int                                                          CurrentLevelsOfDamage;                             // 0x8(0x4)
};


// Size 0x18
struct ActiveHitRegSnapshot
{
public:
	class Actor*                                                 AttackingActor;                                    // 0x0(0x8)
	class Actor*                                                 SnapshotActor;                                     // 0x8(0x8)
	class HitRegSnapshotComponent*                               SnapshotComponent;                                 // 0x10(0x8)
};


// Size 0x8
struct ClothingLoadoutUpdatedEvent
{
public:
	class Actor*                                                 Character;                                         // 0x0(0x8)
};


// Size 0x58
struct CaptureChatMessage
{
public:
	struct Guid                                                  SessionId;                                         // 0x0(0x10)
	struct FString                                               Xuid;                                              // 0x10(0x10)
	struct DateTime                                              TimeUtc;                                           // 0x20(0x8)
	struct FString                                               RawMessage;                                        // 0x28(0x10)
	struct FString                                               CensoredMessage;                                   // 0x38(0x10)
	struct Vector                                                PlayerLocation;                                    // 0x48(0xc)
};


// Size 0x48
struct MechanismAnimationEvent_VFXParams
{
public:
	class ParticleSystem*                                        ParticleSystem;                                    // 0x0(0x8)
	char                                                         Mode;                                              // 0x8(0x1)
	struct FName                                                 MechanismVFXComponentTag;                          // 0xc(0x8)
	struct FName                                                 AttachParentComponentTag;                          // 0x14(0x8)
	char                                                         AttachType;                                        // 0x1c(0x1)
	struct Vector                                                LocationOffset;                                    // 0x20(0xc)
	struct Rotator                                               RotationOffset;                                    // 0x2c(0xc)
	struct Vector                                                Scale;                                             // 0x38(0xc)
	bool                                                         IsUnderwater;                                      // 0x44(0x1)
	char                                                         VFXRegion;                                         // 0x45(0x1)
};


// Size 0x18
struct CanvasWorldMapReaperTrackedBootItemIcon
{
public:
	char                                                         BootyItemType;                                     // 0x0(0x1)
	class Texture*                                               Texture;                                           // 0x8(0x8)
};


// Size 0x10
struct RequestEquipmentChestEquipItemEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x10
struct CrewVoteToBrigEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x10
struct SpawnedPetData
{
public:
	class Pet*                                                   SpawnedPet;                                        // 0x0(0x8)
	class PetItemInfo*                                           SpawnedInfo;                                       // 0x8(0x8)
};


// Size 0x10
struct ClientInputBlockedTelemetryEvent
{
public:
	struct FString                                               BlockedKey;                                        // 0x0(0x10)
};


// Size 0x10
struct ReapersMarkLevelMultiplier
{
public:
	class UClass*                                                CompanyId;                                         // 0x0(0x8)
	float                                                        GoldMultiplier;                                    // 0x8(0x4)
	float                                                        XPMultiplier;                                      // 0xc(0x4)
};


// Size 0xc
struct SetHealthGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	float                                                        Health;                                            // 0x4(0x4)
	char                                                         Reason;                                            // 0x8(0x1)
};


// Size 0x10
struct RequestShipCustomizationChestShipCustomizationEntitlementsEvent
{
public:
	struct FString                                               ItemCategory;                                      // 0x0(0x10)
};


// Size 0x1c
struct ProjectileShotParams
{
public:
	int                                                          InaccuracySeed;                                    // 0x0(0x4)
	float                                                        ProjectileDistributionMaxAngle;                    // 0x4(0x4)
	int                                                          NumberOfProjectiles;                               // 0x8(0x4)
	float                                                        ProjectileMaximumRange;                            // 0xc(0x4)
	float                                                        ProjectileHitScanMaximumRange;                     // 0x10(0x4)
	float                                                        ProjectileDamage;                                  // 0x14(0x4)
	float                                                        ProjectileDamageMultiplierAtMaximumRange;          // 0x18(0x4)
};


// Size 0x28
struct CampfireStateData
{
public:
	bool                                                         IsBuilt;                                           // 0x20(0x1)
	bool                                                         IsOnFire;                                          // 0x21(0x1)
	bool                                                         IsPartiallyBurned;                                 // 0x22(0x1)
};


// Size 0x18
struct PlayerBuriedItemServiceMapBundleGiftedEvent
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x10(0x8)
};


// Size 0x10
struct StarFieldMaskClearSpinQueue
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x38
struct AggressiveGhostShipProjectileShotTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	struct Guid                                                  ProjectileAttackId;                                // 0x10(0x10)
	struct FString                                               ProjectileType;                                    // 0x20(0x10)
	char                                                         Target;                                            // 0x30(0x1)
};


// Size 0x38
struct ProjectileWeaponFireAimClampTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	struct FString                                               DamagerType;                                       // 0x10(0x10)
	float                                                        RequesterLatencyMs;                                // 0x20(0x4)
	struct Vector                                                ClampedByAmmount;                                  // 0x24(0xc)
	float                                                        WantedDistance;                                    // 0x30(0x4)
};


// Size 0x4
struct UndoRepairActionStateParams
{
public:
	float                                                        MountTime;                                         // 0x0(0x4)
};


// Size 0x20
struct TriggerStartUseEvent
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 ActionSource;                                      // 0x8(0x8)
	class Actor*                                                 Usable;                                            // 0x10(0x8)
	char                                                         TrackToUse;                                        // 0x18(0x1)
};


// Size 0x1
struct EventPreStartStow
{
public:
	char                                                         StowMethod;                                        // 0x0(0x1)
};


// Size 0x18
struct CargoRunQuestRandomRequiredItemsEntry
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	int                                                          MinNum;                                            // 0x4(0x4)
	int                                                          MaxNum;                                            // 0x8(0x4)
	class UClass*                                                RequiredItem;                                      // 0x10(0x8)
};


// Size 0x50
struct MeshMemoryConstraintTelemetryBudgetFragment
{
public:
	struct FString                                               Budget;                                            // 0x0(0x10)
	int                                                          MemoryUsedInBytes;                                 // 0x10(0x4)
	int                                                          MaximumMemoryUsedInBytes;                          // 0x14(0x4)
	int                                                          NumUniqueMeshes;                                   // 0x18(0x4)
	int                                                          NumUniqueMeshesUsingFallback;                      // 0x1c(0x4)
	int                                                          NumTotalMeshesUsingFallback;                       // 0x20(0x4)
	int                                                          MemoryUsedOfNoFallbackMeshesInBytes;               // 0x24(0x4)
	int                                                          NumUniqueNoFallbackMeshes;                         // 0x28(0x4)
	int                                                          NumTotalNoFallbackMeshes;                          // 0x2c(0x4)
	int                                                          ThresholdScale;                                    // 0x30(0x4)
	struct JsonObjectWrapper                                     RegisteredMeshes;                                  // 0x38(0x18)
};


// Size 0x10
struct StorageContainerLimit
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	int                                                          Cap;                                               // 0x8(0x4)
};


// Size 0x28
struct GenericNotificationUINetworkEvent
{
public:
	struct StringAssetReference                                  PopUpMessageDescDataAsset;                         // 0x18(0x10)
};


// Size 0x38
struct LevelCancelCompletedTelemetryEvent
{
public:
	float                                                        TimeSinceCancelRequested;                          // 0x30(0x4)
};


// Size 0xa0
struct PetAnimationDataRoaming
{
public:
	class PetRoamingAnimationStateDefinitionsDataAsset*          RoamingAnimationStateDefinitionsAsset;             // 0x0(0x8)
	class AnimSequenceBase*                                      Locomotion_In;                                     // 0x8(0x8)
	class BlendSpace1D*                                          Locomotion;                                        // 0x10(0x8)
	class AnimSequenceBase*                                      Locomotion_Out;                                    // 0x18(0x8)
	class AnimSequenceBase*                                      Locomotion_Scared;                                 // 0x20(0x8)
	class AnimSequenceBase*                                      Locomotion_Sad_Additive;                           // 0x28(0x8)
	class AnimSequenceBase*                                      TurnLeft;                                          // 0x30(0x8)
	class AnimSequenceBase*                                      TurnRight;                                         // 0x38(0x8)
	class AnimSequenceBase*                                      TurnLeftIntoLocomotion;                            // 0x40(0x8)
	class AnimSequenceBase*                                      TurnRightIntoLocomotion;                           // 0x48(0x8)
	class AnimSequenceBase*                                      Arrive;                                            // 0x50(0x8)
	class AnimSequenceBase*                                      Exit;                                              // 0x58(0x8)
	class AnimSequenceBase*                                      LandingLoop;                                       // 0x60(0x8)
	class AnimSequenceBase*                                      Landing_Out;                                       // 0x68(0x8)
	class AnimSequenceBase*                                      TakingOff_In;                                      // 0x70(0x8)
	class AnimSequenceBase*                                      TakingOffLoop;                                     // 0x78(0x8)
	class BlendSpace1D*                                          Flying;                                            // 0x80(0x8)
	class AnimSequenceBase*                                      Flying_Scared;                                     // 0x88(0x8)
	class AnimSequenceBase*                                      PositiveMood;                                      // 0x90(0x8)
	class AnimSequenceBase*                                      CloseRadiusPositiveMood;                           // 0x98(0x8)
};


// Size 0x30
struct FortWaveCrewStartedTelemetryEvent
{
public:
	struct Guid                                                  EncounteredObjectId;                               // 0x0(0x10)
	int                                                          FortWaveIndex;                                     // 0x10(0x4)
	int                                                          TotalFortWaves;                                    // 0x14(0x4)
	struct Guid                                                  CrewId;                                            // 0x18(0x10)
	struct FName                                                 FortType;                                          // 0x28(0x8)
};


// Size 0x18
struct IBoardAvailability
{
public:
	bool                                                         IsLocked;                                          // 0x0(0x1)
	TArray<String>                                               LockedDescriptions;                                // 0x8(0x10)
};


// Size 0x10
struct ShopTypeDataResponse
{
public:
	char                                                         ShopType;                                          // 0x0(0x1)
	class ShopDesc*                                              ShopDesc;                                          // 0x8(0x8)
};


// Size 0xc
struct LadderBlendParams
{
public:
	float                                                        RotationBlendStartByPercentage;                    // 0x0(0x4)
	float                                                        RotationBlendEndByPercentage;                      // 0x4(0x4)
	float                                                        LocationBlendEndByPercentage;                      // 0x8(0x4)
};


// Size 0x10
struct TQStructGenWeightedContainer
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	int                                                          MaxOccurrences;                                    // 0xc(0x4)
};


// Size 0x18
struct FeatureToggledFogBankAsset
{
public:
	struct FeatureFlag                                           FeatureToggle;                                     // 0x0(0xc)
	class FogBankDataAsset*                                      Asset;                                             // 0x10(0x8)
};


// Size 0x10
struct AthenaAnimationCrouchingFirstPersonAnimData
{
public:
	class BlendSpace*                                            CrouchBlendSpace;                                  // 0x0(0x8)
	class AnimSequence*                                          CrouchFallbackAnim;                                // 0x8(0x8)
};


// Size 0x4
struct EventCharacterMovementModeChanged
{
public:
	char                                                         PreviousMovementMode;                              // 0x0(0x1)
	char                                                         NewMovementMode;                                   // 0x1(0x1)
	char                                                         PreviousCustomMovementMode;                        // 0x2(0x1)
	char                                                         NewCustomMovementMode;                             // 0x3(0x1)
};


// Size 0x10
struct MaxNumVoyagesOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	uint32                                                       MaxVoyagesOwned;                                   // 0xc(0x4)
};


// Size 0x20
struct EventShipAddedToCrew
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class Actor*                                                 ShipActor;                                         // 0x10(0x8)
	bool                                                         IsMigrating;                                       // 0x18(0x1)
};


// Size 0x28
struct EmoteDataEntryFrontend
{
public:
	struct FName                                                 EmoteIdent;                                        // 0x0(0x8)
	assetobject                                                  EmotePreviewSequence;                              // 0x8(0x20)
};


// Size 0x20
struct StorageContainerContentTypeSelectorEntry
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	float                                                        Weight;                                            // 0xc(0x4)
	int                                                          MinimumUses;                                       // 0x10(0x4)
	int                                                          MaximumUses;                                       // 0x14(0x4)
	class BaseContainerContentSpawner*                           ContentSpawner;                                    // 0x18(0x8)
};


// Size 0x38
struct LightingControllerMoonParams
{
public:
	TArray<float>                                                MoonPhaseAngles;                                   // 0x0(0x10)
	float                                                        MoonYaw;                                           // 0x10(0x4)
	float                                                        MoonElevation;                                     // 0x14(0x4)
	float                                                        MoonOrbitVerticalOffset;                           // 0x18(0x4)
	float                                                        MoonMeshDistance;                                  // 0x1c(0x4)
	float                                                        MoonMeshSize;                                      // 0x20(0x4)
	float                                                        SunInfluenceDuration;                              // 0x24(0x4)
	float                                                        SunInfluenceDistance;                              // 0x28(0x4)
	int                                                          NumMoonPhases;                                     // 0x2c(0x4)
	int                                                          DaysInMoonCycle;                                   // 0x30(0x4)
	bool                                                         SunInfluencesRotation;                             // 0x34(0x1)
	bool                                                         SunInfluencesLighting;                             // 0x34(0x1)
};


// Size 0x60
struct CompanyShopInfo
{
public:
	bool                                                         ShouldShowCompanyInfo;                             // 0x0(0x1)
	struct StringAssetReference                                  InfoSkin;                                          // 0x8(0x10)
	struct FText                                                 InfoTitle;                                         // 0x18(0x38)
	TArray<struct Text>                                          InfoTips;                                          // 0x50(0x10)
};


// Size 0x80
struct BaseLightData
{
public:
	float                                                        Intensity;                                         // 0x0(0x4)
	struct Color                                                 LightColor;                                        // 0x4(0x4)
	bool                                                         bAffectsWorld;                                     // 0x8(0x1)
	bool                                                         CastShadows;                                       // 0x8(0x1)
	bool                                                         CastStaticShadows;                                 // 0x8(0x1)
	bool                                                         CastDynamicShadows;                                // 0x8(0x1)
	bool                                                         bAffectTranslucentLighting;                        // 0x8(0x1)
	bool                                                         bPrecomputedLightingIsValid;                       // 0x8(0x1)
	bool                                                         RainOcclusion;                                     // 0x8(0x1)
	float                                                        IndirectLightingIntensity;                         // 0xc(0x4)
	float                                                        ScaleForTranslucency;                              // 0x10(0x4)
	float                                                        CapForTranslucency;                                // 0x14(0x4)
	float                                                        Temperature;                                       // 0x18(0x4)
	bool                                                         bUseTemperature;                                   // 0x1c(0x1)
	float                                                        MinRoughness;                                      // 0x20(0x4)
	float                                                        ShadowBias;                                        // 0x24(0x4)
	float                                                        ShadowSharpen;                                     // 0x28(0x4)
	float                                                        ShadowResMaxDynamicDegradation;                    // 0x2c(0x4)
	bool                                                         CastTranslucentShadows;                            // 0x30(0x1)
	bool                                                         bCastShadowsFromCinematicObjectsOnly;              // 0x30(0x1)
	bool                                                         bAffectDynamicIndirectLighting;                    // 0x30(0x1)
	class MaterialInterface*                                     LightFunctionMaterial;                             // 0x38(0x8)
	struct Vector                                                LightFunctionScale;                                // 0x40(0xc)
	class TextureLightProfile*                                   IESTexture;                                        // 0x50(0x8)
	bool                                                         bUseIESBrightness;                                 // 0x58(0x1)
	float                                                        IESBrightnessScale;                                // 0x5c(0x4)
	float                                                        LightFunctionFadeDistance;                         // 0x60(0x4)
	float                                                        DisabledBrightness;                                // 0x64(0x4)
	bool                                                         bEnableLightShaftBloom;                            // 0x68(0x1)
	float                                                        BloomScale;                                        // 0x6c(0x4)
	float                                                        BloomThreshold;                                    // 0x70(0x4)
	struct Color                                                 BloomTint;                                         // 0x74(0x4)
	bool                                                         bUseRayTracedDistanceFieldShadows;                 // 0x78(0x1)
	float                                                        RayStartOffsetDepthScale;                          // 0x7c(0x4)
};


// Size 0x40
struct EventEmissaryFlagMeshChanged
{
public:
	struct EmissaryFlagMeshReferences                            EmissaryFlagMeshReferences;                        // 0x0(0x20)
	struct StringAssetReference                                  EmissaryFlotsamSpawnDataAsset;                     // 0x20(0x10)
	struct StringAssetReference                                  EmissaryFlagTextureReference;                      // 0x30(0x10)
};


// Size 0x10
struct StorageContainerNode
{
public:
	class UClass*                                                ItemDesc;                                          // 0x0(0x8)
	int                                                          NumItems;                                          // 0x8(0x4)
};


// Size 0x10
struct VoyageBaseTelemetryFragmentInput
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
};


// Size 0x10
struct BootyItemShipOwnershipChangeEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class ItemInfo*                                              ItemOnShip;                                        // 0x8(0x8)
};


// Size 0x8
struct EventAITriggerCustomAnimationSequence
{
public:
	struct FName                                                 SequenceName;                                      // 0x0(0x8)
};


// Size 0x1
struct QuestStartTelemetryEvent
{
public:
	char                                                         QuestType;                                         // 0x0(0x1)
};


// Size 0x20
struct ShipResurfaceWetnessHandle
{
public:
	class ShipResurfaceWetnessActor*                             ShipWetnessActor;                                  // 0x18(0x8)
};


// Size 0x4
struct IntentChangedEvent
{
public:
	float                                                        NewIntent;                                         // 0x0(0x4)
};


// Size 0x14
struct AtmosphericPressureZoneParameters
{
public:
	float                                                        Radius;                                            // 0x0(0x4)
	float                                                        TargetPressure;                                    // 0x4(0x4)
	float                                                        PushForce;                                         // 0x8(0x4)
	float                                                        TwistForce;                                        // 0xc(0x4)
	float                                                        Weight;                                            // 0x10(0x4)
};


// Size 0x1
struct PlayerBlockingBlockPlayersResponse
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
};


// Size 0x8
struct FireTelemetryFragment
{
public:
	int                                                          NumOfShipWithActiveCells;                          // 0x0(0x4)
	int                                                          NumOfActiveCells;                                  // 0x4(0x4)
};


// Size 0x18
struct PlayerStatusEffectDeactivatedTelemetryEvent
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FName                                                 StatusName;                                        // 0x10(0x8)
};


// Size 0x4
struct MaterialInformationVFXData
{
public:
	float                                                        DummyVFXValue;                                     // 0x0(0x4)
};


// Size 0x18
struct PlayerStatusEffectActivatedTelemetryEvent
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FName                                                 StatusName;                                        // 0x10(0x8)
};


// Size 0x8
struct MeleeWeaponMovementSpeedPair
{
public:
	char                                                         Label;                                             // 0x0(0x1)
	float                                                        SpeedScalar;                                       // 0x4(0x4)
};


// Size 0x18
struct MountCompleteEvent
{
public:
	class Actor*                                                 MountedToActor;                                    // 0x0(0x8)
	class Actor*                                                 MountedActor;                                      // 0x8(0x8)
	class Actor*                                                 MountedByActor;                                    // 0x10(0x8)
};


// Size 0x10
struct PlayerEncounterEndTelemetryEvent
{
public:
	struct Guid                                                  EncounterId;                                       // 0x0(0x10)
};


// Size 0x88
struct ItemReactionItemProxyActionRuleParams
{
public:
	float                                                        ItemReactionHoldTime;                              // 0x0(0x4)
	class UClass*                                                PressedNotificationInputId;                        // 0x8(0x8)
	class UClass*                                                ReleasedNotificationInputId;                       // 0x10(0x8)
	struct FText                                                 ItemReactionItemProxyText;                         // 0x18(0x38)
	struct FText                                                 ItemReactionIncorrectWieldableProxyText;           // 0x50(0x38)
};


// Size 0x18
struct LoadableComponentTimerOverride
{
public:
	struct FName                                                 FeatureFlag;                                       // 0x0(0x8)
	class UClass*                                                Item;                                              // 0x8(0x8)
	float                                                        LoadTime;                                          // 0x10(0x4)
};


// Size 0x20
struct ReplicatedRewindBufferEntry
{
public:
	double                                                       Time;                                              // 0x0(0x8)
	struct Vector                                                Translation;                                       // 0x8(0xc)
	struct Rotator                                               Rotation;                                          // 0x14(0xc)
};


// Size 0x28
struct AthenaAnimationWaterPumpAnimData
{
public:
	class AnimSequence*                                          IntoWaterPump;                                     // 0x0(0x8)
	class AnimSequence*                                          WaterPumpIdle;                                     // 0x8(0x8)
	class AnimSequence*                                          WaterPumpAction;                                   // 0x10(0x8)
	class AnimSequence*                                          WaterPumpActionOverlay;                            // 0x18(0x8)
	class AnimSequence*                                          OutOfWaterPump;                                    // 0x20(0x8)
};


// Size 0x20
struct DebugSuperSailorSetYawSpeedRPCEvent
{
public:
	float                                                        YawSpd;                                            // 0x18(0x4)
};


// Size 0x1
struct ShipCustomizationChestSwapToSavedLoadoutEvent
{
public:
	char                                                         PossessionsChestType;                              // 0x0(0x1)
};


// Size 0x18
struct DigEventFxParams
{
public:
	class Object*                                                Particles;                                         // 0x0(0x8)
	bool                                                         bAttachParticlesToShovel;                          // 0x8(0x1)
	class ForceFeedbackEffect*                                   Rumble;                                            // 0x10(0x8)
};


// Size 0x20
struct ContestNotificationNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
};


// Size 0x20
struct PlayerModerationReportingPlayerDetails
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct FString                                               Xuid;                                              // 0x10(0x10)
};


// Size 0x1
struct UseSingleStickCameraToggleModeChangedEvent
{
public:
	char                                                         UseSingleStickCameraToggleMode;                    // 0x0(0x1)
};


// Size 0xa0
struct LookAtOffset
{
public:
	float                                                        LookAtPitchRate;                                   // 0x0(0x4)
	float                                                        LookAtYawRate;                                     // 0x4(0x4)
	float                                                        LookAtYawRawScale;                                 // 0x8(0x4)
	float                                                        LookAtPitchRawScale;                               // 0xc(0x4)
};


// Size 0x18
struct CauseOfDeathItemSpawnDistribution
{
public:
	TArray<char>                                                 CauseOfDeath;                                      // 0x0(0x10)
	class WeightedItemDescSpawnDataAsset*                        ItemSpawnDistributionAsset;                        // 0x10(0x8)
};


// Size 0x10
struct EventMovedByPortableHarpoonRetractionEnd
{
public:
	class Actor*                                                 MovedActor;                                        // 0x0(0x8)
	class Actor*                                                 MovementInstigator;                                // 0x8(0x8)
};


// Size 0x20
struct UISeasonsDataErrorTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               ErrorStack;                                        // 0x10(0x10)
};


// Size 0x8
struct EventAreaNowVoidOfPlayers
{
public:
	struct FName                                                 AreaName;                                          // 0x0(0x8)
};


// Size 0x1
struct ViewCustomVoyageBanners
{
public:
	char                                                         ShowQuestReceivedBanners;                          // 0x0(0x1)
};


// Size 0x20
struct LightingControllerTimeParams
{
public:
	class CurveFloat*                                            TimeScalerCurve;                                   // 0x0(0x8)
	float                                                        SunRiseTime;                                       // 0x8(0x4)
	float                                                        SunSetTime;                                        // 0xc(0x4)
	float                                                        InitialTimeOfDay;                                  // 0x10(0x4)
	float                                                        ReflectionCaptureTimeOfDay;                        // 0x14(0x4)
	int                                                          InitialDay;                                        // 0x18(0x4)
	float                                                        TutorialTimeOfDay;                                 // 0x1c(0x4)
};


// Size 0x1
struct PlayerGamepadTypeTelemetryEvent
{
public:
	char                                                         GamepadType;                                       // 0x0(0x1)
};


// Size 0x8
struct EventShipStoppedBurning
{
public:
	uint64                                                       TimeSpentOnFire;                                   // 0x0(0x8)
};


// Size 0x18
struct ItemCategoryAIStrategyMovementPropertiesOverride
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
	TArray<struct AIStrategyMovementProperties>                  AIStrategyMovementPropertiesOverrides;             // 0x8(0x10)
};


// Size 0x50
struct ContestZoneVendorShipData
{
public:
	assetclass                                                   VendorShipToSpawn;                                 // 0x0(0x20)
	struct Transform                                             ContestZoneWorldLocation;                          // 0x20(0x30)
};


// Size 0x20
struct MerchantCrateSfx
{
public:
	class WwiseEvent*                                            EquipSfx;                                          // 0x0(0x8)
	class WwiseEvent*                                            UnequipSfx;                                        // 0x8(0x8)
	class WwiseEvent*                                            WielderLandedJumpSfx;                              // 0x10(0x8)
	class WwiseEvent*                                            WielderFootstepLayerOneshot;                       // 0x18(0x8)
};


// Size 0x8
struct PlayerFinishedInteractingWithNPCDialog
{
public:
	class Actor*                                                 Interactee;                                        // 0x0(0x8)
};


// Size 0x18
struct EventSwimmingCreatureShipBite
{
public:
	class Ship*                                                  Ship;                                              // 0x0(0x8)
	struct Vector                                                BiteLocation;                                      // 0x8(0xc)
};


// Size 0x10
struct CreateSphereTriggerGameServerRequestModel
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	float                                                        Radius;                                            // 0xc(0x4)
};


// Size 0x90
struct NotesRemoteServiceNoteModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	bool                                                         IsAvailableInSaferSeas;                            // 0x10(0x1)
	struct DateTime                                              ActiveFromUtc;                                     // 0x18(0x8)
	struct DateTime                                              ActiveToUtc;                                       // 0x20(0x8)
	bool                                                         IsRead;                                            // 0x28(0x1)
	TArray<String>                                               CompletionEventIds;                                // 0x30(0x10)
	map                                                          MetaData;                                          // 0x40(0x50)
};


// Size 0x10
struct ShipNameChangedEvent
{
public:
	struct FString                                               ShipName;                                          // 0x0(0x10)
};


// Size 0x80
struct OutOfAmmoDestructionEffects
{
public:
	float                                                        DestroyDelayDuration;                              // 0x0(0x4)
	float                                                        DestroyDuration;                                   // 0x4(0x4)
	float                                                        InterpTarget;                                      // 0x8(0x4)
	class CurveFloat*                                            DestroyLerpCurve;                                  // 0x10(0x8)
	struct ScalarParameterValue                                  ScalarParameterValue;                              // 0x18(0x1c)
	class Object*                                                DestroyVfx;                                        // 0x38(0x8)
	struct FName                                                 VfxSocketName;                                     // 0x40(0x8)
	class WwiseEvent*                                            DestroyAudioEvent;                                 // 0x48(0x8)
	class WwiseObjectPoolWrapper*                                DestroyAudioPool;                                  // 0x50(0x8)
	struct WwiseEmitterCreationParams                            DestroySfxParams;                                  // 0x58(0x28)
};


// Size 0x8
struct IslandShipVisitor
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x28
struct NPCDialogDataForCondition
{
public:
	struct ConditionInstance                                     Condition;                                         // 0x0(0x20)
	class NPCDialogTreeData*                                     DialogTreeData;                                    // 0x20(0x8)
};


// Size 0x38
struct SinkingTunnelOfTheDamnedActionStateSerialisableData
{
public:
	bool                                                         FadeRequested;                                     // 0x30(0x1)
};


// Size 0x4
struct RemoveFogBankGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
};


// Size 0x48
struct TreasureChestSoldInAllianceNetworkEvent
{
public:
	struct FName                                                 RewardId;                                          // 0x18(0x8)
	struct StringAssetReference                                  AllianceIcon;                                      // 0x20(0x10)
	struct StringAssetReference                                  StampIcon;                                         // 0x30(0x10)
	class UClass*                                                OverrideCompany;                                   // 0x40(0x8)
};


// Size 0x10
struct EventShipSpeedTestCheckpoint
{
public:
	float                                                        TimeElapsed;                                       // 0x0(0x4)
	float                                                        MaxShipSpeed;                                      // 0x4(0x4)
	float                                                        ShipAcceleration;                                  // 0x8(0x4)
	float                                                        DistanceTravelled;                                 // 0xc(0x4)
};


// Size 0x1c
struct CombinationLockMechanismTriggerActionStateParams
{
public:
	float                                                        CameraDockTime;                                    // 0x18(0x4)
};


// Size 0x60
struct AthenaAnimationAsyncLoadedObjectIdleAnimations
{
public:
	assetobject                                                  Idle1;                                             // 0x0(0x20)
	assetobject                                                  Idle2;                                             // 0x20(0x20)
	assetobject                                                  Idle3;                                             // 0x40(0x20)
};


// Size 0x28
struct PlayerVoyageProposalVoteTelemetryEvent
{
public:
	struct Guid                                                  VoyageProposalSessionId;                           // 0x0(0x10)
	int                                                          VoyageProposalSlot;                                // 0x10(0x4)
	struct FString                                               VoyageProposalEntitlementId;                       // 0x18(0x10)
};


// Size 0xc
struct WeightedContestZone
{
public:
	struct FName                                                 ContestZoneName;                                   // 0x0(0x8)
	int                                                          Weight;                                            // 0x8(0x4)
};


// Size 0x38
struct StowAllItemsToContainerRPC
{
public:
	struct NetSubObjectPtr                                       Container;                                         // 0x18(0x14)
	class UClass*                                                ItemDescToStow;                                    // 0x30(0x8)
};


// Size 0x68
struct PlayerCompanyProgressCache
{
public:
	struct FString                                               CacheId;                                           // 0x0(0x10)
	char                                                         CompanyProgressStatus;                             // 0x10(0x1)
	map                                                          ProgressInfoByCompany;                             // 0x18(0x50)
};


// Size 0x10
struct EventShipTopDeckBlocked
{
public:
	struct Guid                                                  BlockerId;                                         // 0x0(0x10)
};


// Size 0x8
struct EventPlayerPinnedMapTable
{
public:
	struct Vector2D                                              PinWorldLocation;                                  // 0x0(0x8)
};


// Size 0x80
struct InteractableLightState
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
	struct Transform                                             Transform;                                         // 0x10(0x30)
	float                                                        Intensity;                                         // 0x40(0x4)
	float                                                        ConeAngleInner;                                    // 0x44(0x4)
	float                                                        ConeAngleOuter;                                    // 0x48(0x4)
	float                                                        AttenuationRadius;                                 // 0x4c(0x4)
	struct Color                                                 LightColour;                                       // 0x50(0x4)
	char                                                         SimpleFunctionType;                                // 0x54(0x1)
	float                                                        ScaleOffset;                                       // 0x58(0x4)
	float                                                        PulsePhase;                                        // 0x5c(0x4)
	float                                                        FlickerFrequency;                                  // 0x60(0x4)
	float                                                        IntensityScaleForWater;                            // 0x64(0x4)
	float                                                        MinDistanceToLightClamp;                           // 0x68(0x4)
	bool                                                         ApplyScaleForTranslucency;                         // 0x6c(0x1)
	float                                                        ScaleForTranslucency;                              // 0x70(0x4)
	bool                                                         ApplyCapForTranslucency;                           // 0x74(0x1)
	float                                                        CapForTranslucency;                                // 0x78(0x4)
};


// Size 0x18
struct CatalogOfferBundleDataAsset
{
public:
	uint32                                                       TileSize;                                          // 0x0(0x4)
	struct StringAssetReference                                  TileImage;                                         // 0x8(0x10)
};


// Size 0x20
struct TaleQuestProgressTelemetryEvent
{
public:
	struct FString                                               ProgressDescription;                               // 0x0(0x10)
	TArray<String>                                               Context;                                           // 0x10(0x10)
};


// Size 0x10
struct ItemPreviewItemChanged
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x10
struct UserPresenceFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x10
struct AllowedItemsBasedOnFeature
{
public:
	struct FName                                                 FeatureName;                                       // 0x0(0x8)
	class ContainerAllowedItemsDataAsset*                        AllowedItems;                                      // 0x8(0x8)
};


// Size 0x10
struct AggressiveGhostShipMineFormation
{
public:
	TArray<struct Vector2D>                                      OffsetsInMetres;                                   // 0x0(0x10)
};


// Size 0x20
struct BoxedRpcDiscardTinVoyage
{
public:
	int                                                          IndexOfVoyageToDiscard;                            // 0x18(0x4)
};


// Size 0x50
struct VisibleSessionTypeSelectionResponseEvent
{
public:
	char                                                         SessionVisibility;                                 // 0x0(0x1)
	char                                                         SessionType;                                       // 0x1(0x1)
	char                                                         SelectedPlayMode;                                  // 0x2(0x1)
	char                                                         SessionGrouping;                                   // 0x3(0x1)
	char                                                         SessionStyle;                                      // 0x4(0x1)
	char                                                         PlayModeVariant;                                   // 0x5(0x1)
	struct FString                                               ShipId;                                            // 0x8(0x10)
	struct FString                                               GuildId;                                           // 0x18(0x10)
	struct FString                                               ShipOwnerUserId;                                   // 0x28(0x10)
	struct FString                                               ShipOwnerPirateId;                                 // 0x38(0x10)
	bool                                                         IsPublicGuildShip;                                 // 0x48(0x1)
};


// Size 0x8
struct EmissaryLevelMultiplierModel
{
public:
	int                                                          Level;                                             // 0x0(0x4)
	float                                                        Multiplier;                                        // 0x4(0x4)
};


// Size 0x10
struct GamertagsFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x18
struct OnEndDockedToWalkwayEvent
{
public:
	class WwiseEvent*                                            WalkwayEnd;                                        // 0x0(0x8)
	class WwiseEvent*                                            WalkwayEndLoop;                                    // 0x8(0x8)
	class WwiseEvent*                                            DetachFromWalkwayAdditiveOneShot;                  // 0x10(0x8)
};


// Size 0x3
struct LightData
{
public:
	char                                                         FlameOfFateType;                                   // 0x0(0x1)
	bool                                                         LightIsOn_Server;                                  // 0x1(0x1)
	bool                                                         LitWithLantern;                                    // 0x2(0x1)
};


// Size 0x28
struct GuildSignUpRequestRpc
{
public:
	struct Guid                                                  GuildId;                                           // 0x18(0x10)
};


// Size 0x1c
struct ServerWieldSet
{
public:
	struct NetActorPtr                                           WieldedItem;                                       // 0x0(0x14)
	int                                                          EpochId;                                           // 0x14(0x4)
	bool                                                         Fast;                                              // 0x18(0x1)
};


// Size 0x18
struct ClientCargoRunCrewNPCDataUnit
{
public:
	struct Guid                                                  NPCId;                                             // 0x0(0x10)
	int                                                          TotalToPickUp;                                     // 0x10(0x4)
	int                                                          TotalLeftToPickUp;                                 // 0x14(0x4)
};


// Size 0xc
struct EncounterParams
{
public:
	char                                                         EncounterType;                                     // 0x0(0x1)
	float                                                        EncounterRadius;                                   // 0x4(0x4)
	char                                                         EncounterDimensions;                               // 0x8(0x1)
	char                                                         EncounterMobility;                                 // 0x9(0x1)
};


// Size 0x8
struct DeactivateHatchEvent
{
public:
	struct FName                                                 EventID;                                           // 0x0(0x8)
};


// Size 0x1
struct InvertRadialYInputEvent
{
public:
	bool                                                         InvertRadialYInputEvent;                           // 0x0(0x1)
};


// Size 0x4
struct PlayerLeftGhostShipTelemetryEvent
{
public:
	int                                                          LifetimeInSeconds;                                 // 0x0(0x4)
};


// Size 0x10
struct UIWhatsNewAvailableArticlesTelemetryEvent
{
public:
	TArray<String>                                               Articles;                                          // 0x0(0x10)
};


// Size 0x28
struct DamageTypeToAudio
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	struct FName                                                 AudioState;                                        // 0x8(0x8)
	class WwiseEvent*                                            StartAudioEvent;                                   // 0x10(0x8)
	class WwiseEvent*                                            EndAudioEvent;                                     // 0x18(0x8)
	float                                                        Duration;                                          // 0x20(0x4)
};


// Size 0x8
struct PlayerBaseTelemetryFragmentInput
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
};


// Size 0x18
struct EventNewPlayerStartedPlayingShanty
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
	class Actor*                                                 Instrument;                                        // 0x8(0x8)
	class Actor*                                                 Ensemble;                                          // 0x10(0x8)
};


// Size 0x1c
struct DeepSeaRegionData
{
public:
	float                                                        DeepSeaRegionRadius;                               // 0x8(0x4)
	float                                                        MaxSwimDepth;                                      // 0xc(0x4)
	bool                                                         ShouldUseDeepSeaSwimmingBounds;                    // 0x10(0x1)
	float                                                        SwimmingBoundsRadius;                              // 0x14(0x4)
	float                                                        SlowDownZoneWidth;                                 // 0x18(0x4)
};


// Size 0x10
struct MermaidSpawnedTelemetryEvent
{
public:
	int                                                          MermaidId;                                         // 0x0(0x4)
	struct Vector                                                MermaidPosition;                                   // 0x4(0xc)
};


// Size 0x30
struct AthenaAnimationControllableFacialAnimData
{
public:
	class BlendSpace1D*                                          Capstan;                                           // 0x0(0x8)
	class AnimSequence*                                          SailAction;                                        // 0x8(0x8)
	class AnimSequence*                                          SailIdle;                                          // 0x10(0x8)
	class AnimSequence*                                          CannonFire;                                        // 0x18(0x8)
	class AnimSequence*                                          CannonAim;                                         // 0x20(0x8)
	class AnimSequence*                                          HarpoonFire;                                       // 0x28(0x8)
};


// Size 0x18
struct EventPlayerLoggedIn
{
public:
	class PlayerController*                                      PlayerController;                                  // 0x0(0x8)
};


// Size 0x58
struct BountyQuestTargetDefeatedNetworkEvent
{
public:
	struct FText                                                 TargetName;                                        // 0x18(0x38)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x50(0x8)
};


// Size 0x20
struct AnimNotifyWwiseObserver
{
public:
	class WwiseEvent*                                            OnEventPosted;                                     // 0x0(0x8)
	bool                                                         PreventPlayingPostedEvent;                         // 0x8(0x1)
	TArray<class WwiseEvent*>                                    AdditionalEventsToTrigger;                         // 0x10(0x10)
};


// Size 0x18
struct ShipCreatureManagerCreatureInstanceModifierCurves
{
public:
	class CurveFloat*                                            SpeedModifierCurve;                                // 0x0(0x8)
	class CurveFloat*                                            RollCurve;                                         // 0x8(0x8)
	class CurveVector*                                           OffsetCurve;                                       // 0x10(0x8)
};


// Size 0x10
struct WorldRegionMapping
{
public:
	class UClass*                                                SeaId;                                             // 0x0(0x8)
	char                                                         WorldRegion;                                       // 0x8(0x1)
};


// Size 0x1
struct PossessionsChestTypeSelectedEvent
{
public:
	char                                                         PossessionsChestType;                              // 0x0(0x1)
};


// Size 0x10
struct GuildInvitesSentErrorEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
};


// Size 0x18
struct NPCDialogComponentConditionContextPayload
{
public:
	interface                                                    NPCDialogComponentInterface;                       // 0x8(0x10)
};


// Size 0x20
struct ContestChestDugUpEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class Actor*                                                 DiscoveringCharacter;                              // 0x10(0x8)
	class ItemInfo*                                              TreasureChestItemInformation;                      // 0x18(0x8)
};


// Size 0x10
struct ClassFunctionSelectionType
{
public:
	class UClass*                                                Class;                                             // 0x0(0x8)
	struct FName                                                 Function;                                          // 0x8(0x8)
};


// Size 0x20
struct GuildInvitesSentResponseEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	TArray<String>                                               XUIDs;                                             // 0x10(0x10)
};


// Size 0x20
struct StorableLockState
{
public:
	bool                                                         Locked;                                            // 0x0(0x1)
	TArray<struct StringAssetReference>                          AcceptableKeys;                                    // 0x8(0x10)
	bool                                                         IsInUnlockingSequence;                             // 0x18(0x1)
};


// Size 0x20
struct AchievementHaveADrinkWithAnotherCrewAtAnOutpost
{
public:
	class AthenaPlayerCharacter*                                 Character;                                         // 0x0(0x8)
	float                                                        RangeOfCheckInMetres;                              // 0x18(0x4)
	float                                                        DrinkConsumedVolumeThreshold;                      // 0x1c(0x4)
};


// Size 0x28
struct HoleItemToSpawn
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	class UClass*                                                ItemDesc;                                          // 0x8(0x8)
	TArray<char>                                                 RestrictToSurface;                                 // 0x10(0x10)
	struct FName                                                 FeatureFlag;                                       // 0x20(0x8)
};


// Size 0x8
struct PlayerEireneHeartbeatEvent
{
public:
	int                                                          SentEireneMessageCount;                            // 0x0(0x4)
	int                                                          ReceivedEireneMessageCount;                        // 0x4(0x4)
};


// Size 0x20
struct SendGuildInvitesEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	TArray<String>                                               XUIDs;                                             // 0x10(0x10)
};


// Size 0x8
struct PopUpQueueServicePausedTelemetryEvent
{
public:
	bool                                                         Paused;                                            // 0x0(0x1)
	int                                                          Reason;                                            // 0x4(0x4)
};


// Size 0xe8
struct VoyageTypePrioritisedPromptEntry
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	bool                                                         HasDVRVariant;                                     // 0x1(0x1)
	float                                                        HoldDuration;                                      // 0x4(0x4)
	struct PrioritisedPromptWithHandle                           NormalPromptClass;                                 // 0x8(0x70)
	struct PrioritisedPromptWithHandle                           DVRPromptClass;                                    // 0x78(0x70)
};


// Size 0x78
struct CycleFlameOfFateParams
{
public:
	bool                                                         IncludeCycleFlameOfFateOneShotResponse;            // 0x0(0x1)
	class UClass*                                                OneShotResponseNotificationInputId;                // 0x8(0x8)
	bool                                                         IncludeCycleFlameOfFateActionRule;                 // 0x10(0x1)
	class UClass*                                                ActionRuleNotificationInputId;                     // 0x18(0x8)
	char                                                         ActionRulePriority;                                // 0x20(0x1)
	struct FText                                                 CycleFlameOfFateActionRuleVerbiage;                // 0x28(0x38)
	struct CycleFlameOfFateSequence                              FlameOfFateSequence;                               // 0x60(0x18)
};


// Size 0x10
struct HitRegToggleStruct
{
public:
	bool                                                         IsUseTimeServiceEverywhereFeatureEnabled;          // 0x0(0x1)
	bool                                                         IsDisableRewindTimeStampModifierFeatureEnabled;    // 0x1(0x1)
	bool                                                         IsPlayerControllerTicksAfterTimeServiceFeatureEnabled; // 0x2(0x1)
	bool                                                         IsFixInaccuracySeedMismatchFeatureEnabled;         // 0x3(0x1)
	bool                                                         IsShadowHitScanForTelemetryFeatureEnabled;         // 0x4(0x1)
	bool                                                         IsOverrideCharacterInterpolationDistanceWhenAimingFeatureEnabled; // 0x5(0x1)
	bool                                                         IsCharacterMovementOrientProjectileHitVolumeWhenInterpolatingFeatureEnabled; // 0x6(0x1)
	bool                                                         IsProjectileHitRegistrationTelemetryFeatureEnabled; // 0x7(0x1)
	bool                                                         IsEvaluateAngleWhenDeterminingWhetherToInterpolateEnabled; // 0x8(0x1)
	bool                                                         IsProjectileFixedTimestepFeatureEnabled;           // 0x9(0x1)
	bool                                                         IsTickProjectileServiceAfterCharacterMovementOnClientFeatureEnabled; // 0xa(0x1)
	bool                                                         IsUseClientTimestampToGenerateRandomStreamFeatureEnabled; // 0xb(0x1)
	bool                                                         IsCharacterSetProjectileCollisionResponseFixFeatureEnabled; // 0xc(0x1)
	bool                                                         IsProjectileUseRewoundBaseVelocityFeatureEnabled;  // 0xd(0x1)
	bool                                                         IsProjectileWeaponDebugLoggingFeatureEnabled;      // 0xe(0x1)
	bool                                                         IsExpandProjectileTraceHitVolumeDelayedResolutionFeatureEnabled; // 0xf(0x1)
};


// Size 0x30
struct MermaidStatueDespawnedTelemetryEvent
{
public:
	struct FString                                               MermaidStatueId;                                   // 0x0(0x10)
	struct FString                                               MermaidStatueDespawnReason;                        // 0x10(0x10)
	TArray<struct Guid>                                          Crews;                                             // 0x20(0x10)
};


// Size 0x30
struct UIQuestTableModalInteractionTelemetryEvent
{
public:
	struct FString                                               ModalId;                                           // 0x0(0x10)
	struct FString                                               OptionSelected;                                    // 0x10(0x10)
	struct FString                                               SessionId;                                         // 0x20(0x10)
};


// Size 0x20
struct VoyageStartTelemetryEventPerQuest
{
public:
	struct Guid                                                  QuestId;                                           // 0x0(0x10)
	struct FString                                               QuestType;                                         // 0x10(0x10)
};


// Size 0x58
struct ScrambledIdentityClient
{
public:
	struct Guid                                                  EntityId;                                          // 0x0(0x10)
	struct FText                                                 ScrambledName;                                     // 0x10(0x38)
	struct FString                                               ClientName;                                        // 0x48(0x10)
};


// Size 0x10
struct PurchasePremiumCurrencyErrorEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x20
struct PlateData
{
public:
	struct FName                                                 MaterialParameterName;                             // 0x0(0x8)
	char                                                         SoulType;                                          // 0x8(0x1)
	class WwiseEvent*                                            PlayEffigyPlacementAudioEvent;                     // 0x10(0x8)
};


// Size 0x10
struct ServerPlayerBannedTelemetryEvent
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
};


// Size 0x10
struct EventCrewShipManifestChanged
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Manifest;                                          // 0x8(0x8)
};


// Size 0x38
struct TreasureFoundTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	struct Guid                                                  QuestId;                                           // 0x10(0x10)
	struct FString                                               Rarity;                                            // 0x20(0x10)
	bool                                                         IsBoobyTrapped;                                    // 0x30(0x1)
};


// Size 0x20
struct Locator
{
public:
	char                                                         Location;                                          // 0x0(0x1)
	struct Vector                                                Position;                                          // 0x4(0xc)
	struct Quat                                                  Rotation;                                          // 0x10(0x10)
};


// Size 0x8
struct EventFinishedSinking
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x10
struct StorageContainerContentSpawnerOutput
{
public:
	class UClass*                                                ItemDesc;                                          // 0x0(0x8)
};


// Size 0x30
struct TakeItemFromContainerRPC
{
public:
	struct NetSubObjectPtr                                       Container;                                         // 0x18(0x14)
	int                                                          IndexToTake;                                       // 0x2c(0x4)
};


// Size 0x4
struct SetArenaIslandBanners
{
public:
	int                                                          Value;                                             // 0x0(0x4)
};


// Size 0x68
struct AthenaAnimationCapstanAnimData
{
public:
	class AnimSequence*                                          Attach;                                            // 0x0(0x8)
	class AnimSequence*                                          Detach;                                            // 0x8(0x8)
	TArray<class BlendSpace1D*>                                  NeutralForce;                                      // 0x10(0x10)
	TArray<class BlendSpace1D*>                                  PushForce;                                         // 0x20(0x10)
	TArray<class BlendSpace1D*>                                  PullForce;                                         // 0x30(0x10)
	class BlendSpace1D*                                          PullToNeutral;                                     // 0x40(0x8)
	class BlendSpace1D*                                          PushToPull;                                        // 0x48(0x8)
	class BlendSpace1D*                                          PullToPush;                                        // 0x50(0x8)
	float                                                        RemapSpeed;                                        // 0x58(0x4)
	class BlendSpace1D*                                          UpperIntent;                                       // 0x60(0x8)
};


// Size 0x18
struct EventFinishedSpawning
{
public:
	char                                                         SpawnType;                                         // 0x10(0x1)
};


// Size 0x10
struct PetRoamingAnimationStateDefinitionWeightedDataAsset
{
public:
	class PetRoamingAnimationStateDefinitionDataAsset*           AnimationDefinitionData;                           // 0x0(0x8)
	float                                                        Weighting;                                         // 0x8(0x4)
};


// Size 0x28
struct ResponseInvasionStatusNetworkEvent
{
public:
	TArray<String>                                               InvasionStatusLog;                                 // 0x18(0x10)
};


// Size 0x458
struct MeshAnimatorAnimationMeshEntry
{
public:
	struct RuntimeVectorCurve                                    Position;                                          // 0x0(0x170)
	struct RuntimeVectorCurve                                    Rotation;                                          // 0x170(0x170)
	bool                                                         ModifyScale;                                       // 0x2e0(0x1)
	struct RuntimeVectorCurve                                    Scale;                                             // 0x2e8(0x170)
};


// Size 0x30
struct RolePermissionsModel
{
public:
	TArray<String>                                               Mate;                                              // 0x0(0x10)
	TArray<String>                                               Leader;                                            // 0x10(0x10)
	TArray<String>                                               Owner;                                             // 0x20(0x10)
};


// Size 0x8
struct EventSetFishingRodBend
{
public:
	struct Vector2D                                              RodBend;                                           // 0x0(0x8)
};


// Size 0x28
struct AthenaAnimationHarpoonLauncherAnimData
{
public:
	TArray<class BlendSpace1D*>                                  Idle;                                              // 0x0(0x10)
	class BlendSpace1D*                                          FireInto;                                          // 0x10(0x8)
	class BlendSpace1D*                                          FireOutOf;                                         // 0x18(0x8)
	class BlendSpace1D*                                          FireAction;                                        // 0x20(0x8)
};


// Size 0x18
struct RequiredClothingData
{
public:
	int                                                          RequiredNumberToMatch;                             // 0x0(0x4)
	TArray<class Class*>                                         RequiredClothing;                                  // 0x8(0x10)
};


// Size 0xc
struct AthenaAnimationIKLimbStretch
{
public:
	float                                                        IKStretchArms;                                     // 0x0(0x4)
	float                                                        IKStretchLegs;                                     // 0x4(0x4)
	float                                                        IKStretchSpine;                                    // 0x8(0x4)
};


// Size 0x10
struct AthenaAnimationSittingAnimData
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          Loop;                                              // 0x8(0x8)
};


// Size 0x8
struct EventPlayerLoggedOut
{
public:
	class PlayerController*                                      PlayerController;                                  // 0x0(0x8)
};


// Size 0x28
struct CharacterSocketCollisionDesc
{
public:
	struct FName                                                 SocketName;                                        // 0x0(0x8)
	class SkeletalMeshComponent*                                 SkeletalMeshComponent;                             // 0x8(0x8)
	char                                                         TraceType;                                         // 0x10(0x1)
	float                                                        TraceDistance;                                     // 0x14(0x4)
	float                                                        TraceOffset;                                       // 0x18(0x4)
	char                                                         ResultType;                                        // 0x1c(0x1)
	int                                                          FootIndex;                                         // 0x20(0x4)
};


// Size 0x8
struct AllInteractionsCompletedEvent
{
public:
	class Actor*                                                 InteractingPlayer;                                 // 0x0(0x8)
};


// Size 0x28
struct UnmountedFromMountpointEvent
{
public:
	class Actor*                                                 MountedByActor;                                    // 0x20(0x8)
};


// Size 0x20
struct ClientPanicGarbageCollectionTelemetryEvent
{
public:
	int                                                          GCPanicMemThreshold;                               // 0x0(0x4)
	uint32                                                       PercentMemUsedBefore;                              // 0x4(0x4)
	uint64                                                       UsedPhysicalBefore;                                // 0x8(0x8)
	uint32                                                       PercentMemUsedAfter;                               // 0x10(0x4)
	uint64                                                       UsedPhysicalAfter;                                 // 0x18(0x8)
};


// Size 0x20
struct FireworkDebugListByFireworkType
{
public:
	TArray<class ItemDescSpawnData*>                             Rockets;                                           // 0x0(0x10)
	TArray<class ItemDescSpawnData*>                             Cakes;                                             // 0x10(0x10)
};


// Size 0x30
struct PetChestSuccessfulNameChangeTelemetryEvent
{
public:
	struct FString                                               PetName;                                           // 0x0(0x10)
	struct FString                                               PetCategory;                                       // 0x10(0x10)
	struct FString                                               PetVariantName;                                    // 0x20(0x10)
};


// Size 0x28
struct StagingPlayerWelcomingPopup
{
public:
	struct Guid                                                  LiveryID;                                          // 0x18(0x10)
};


// Size 0x48
struct ShipHullAudioData
{
public:
	struct WwiseEmitter                                          Emitter;                                           // 0x0(0x20)
	class WwiseObjectPoolWrapper*                                WwiseObjectPoolWrapper;                            // 0x20(0x8)
	class WwiseEvent*                                            WwiseEvent;                                        // 0x28(0x8)
	struct FName                                                 Name;                                              // 0x30(0x8)
	struct Vector                                                Offset;                                            // 0x38(0xc)
	bool                                                         SetRTPC_Pitch;                                     // 0x44(0x1)
	bool                                                         SetRTPC_Roll;                                      // 0x44(0x1)
	bool                                                         SetRTPC_Velocity;                                  // 0x44(0x1)
};


// Size 0x1
struct EventInGameUIFocusRequest
{
public:
	bool                                                         ShouldFocusUI;                                     // 0x0(0x1)
};


// Size 0x10
struct EventBuoyantSpawnedObjectOwnershipTransferred
{
public:
	interface                                                    BuoyancyInterface;                                 // 0x0(0x10)
};


// Size 0x20
struct TunnelOfTheDamnedFailedNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
};


// Size 0x1
struct OnRepIsXboxGamePadOnlyServerEvent
{
public:
	bool                                                         IsXboxGamePadOnlyServer;                           // 0x0(0x1)
};


// Size 0x10
struct ReactionSequenceStateInfo
{
public:
	char                                                         State;                                             // 0x0(0x1)
	char                                                         ActivatedMechanismType;                            // 0x1(0x1)
	double                                                       TimeStateStarted;                                  // 0x8(0x8)
};


// Size 0x50
struct PlayerGameFishingTelemetryEvent
{
public:
	float                                                        FishingDuration;                                   // 0x0(0x4)
	char                                                         TimeOfDay;                                         // 0x4(0x1)
	bool                                                         InPool;                                            // 0x5(0x1)
	bool                                                         CloseToActiveFortOrSkellyShip;                     // 0x6(0x1)
	bool                                                         InStorm;                                           // 0x7(0x1)
	bool                                                         CloseToShipwreck;                                  // 0x8(0x1)
	struct FString                                               Sea;                                               // 0x10(0x10)
	struct FString                                               IslandInRange;                                     // 0x20(0x10)
	char                                                         BaitType;                                          // 0x30(0x1)
	struct FString                                               RewardId;                                          // 0x38(0x10)
	char                                                         ServerState;                                       // 0x48(0x1)
};


// Size 0x10
struct EventPetNameTextboxTextFromVirtualKeyboard
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0x40
struct StandingSpyglassPostProcessingParams
{
public:
	class Material*                                              MaterialParent;                                    // 0x0(0x8)
	class Texture2D*                                             LensNormal;                                        // 0x8(0x8)
	class Texture2D*                                             LensMask;                                          // 0x10(0x8)
	struct LinearColor                                           LensTint;                                          // 0x18(0x10)
	class CurveFloat*                                            BlurCurve;                                         // 0x28(0x8)
	float                                                        BlurInDuration;                                    // 0x30(0x4)
	float                                                        BlurOutDuration;                                   // 0x34(0x4)
};


// Size 0xc8
struct PirateGeneratorBakeFailureTelemetryEvent
{
public:
	TArray<String>                                               CompleteTextures;                                  // 0xa8(0x10)
	TArray<String>                                               IncompleteTextures;                                // 0xb8(0x10)
};


// Size 0x10
struct CurrentKeyDescInfo
{
public:
	class UClass*                                                VaultKeyDesc;                                      // 0x0(0x8)
	int                                                          CrewSize;                                          // 0x8(0x4)
};


// Size 0x10
struct CheckCanPlayerJoinGuildResponseModel
{
public:
	TArray<String>                                               ReasonsWhyPirateCannotJoinGuild;                   // 0x0(0x10)
};


// Size 0x1
struct PlayerDoesNotRequireMermaidTelemetryEvent
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
};


// Size 0x14
struct PlayerGuildAffiliation
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	char                                                         GuildAffiliation;                                  // 0x10(0x1)
};


// Size 0x18
struct NamedFirstPersonAnimatic
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	struct StringAssetReference                                  Anim;                                              // 0x8(0x10)
};


// Size 0x30
struct ShipCurseSpawnedFXObject
{
public:
	class WwiseEvent*                                            StopAudioLoopEvent;                                // 0x28(0x8)
};


// Size 0x1
struct FlashbangEffectEvent
{
public:
	bool                                                         IsFlashbanged;                                     // 0x0(0x1)
};


// Size 0xa8
struct PirateGeneratorBakeTelemetryEvent
{
public:
	struct PirateDescription                                     Desc;                                              // 0x0(0x80)
	char                                                         Flags;                                             // 0x80(0x1)
	struct FString                                               Operation;                                         // 0x88(0x10)
	struct Guid                                                  OperationId;                                       // 0x98(0x10)
};


// Size 0x10
struct AchievementBlockThenHitAndGetBlockedThenTakeHit
{
public:
	class AthenaPlayerCharacter*                                 Character;                                         // 0x0(0x8)
	float                                                        TimeWindowInSeconds;                               // 0x8(0x4)
};


// Size 0x10
struct RemoteAchievementCompletionModel
{
public:
	TArray<String>                                               AchievementIds;                                    // 0x0(0x10)
};


// Size 0x8
struct EventUserGameSettingsSingleChange
{
public:
	struct FName                                                 SettingName;                                       // 0x0(0x8)
};


// Size 0x20
struct ShipLiveryRGBSwap
{
public:
	class MaterialInterface*                                     TargetMaterial;                                    // 0x0(0x8)
	struct FName                                                 TargetParameterName;                               // 0x8(0x8)
	struct LinearColor                                           TargetRGBValue;                                    // 0x10(0x10)
};


// Size 0x4
struct AIDeadActionStateParams
{
public:
	float                                                        DeathDelay;                                        // 0x0(0x4)
};


// Size 0x8
struct EventPlayerChangedTableMapPan
{
public:
	struct Vector2D                                              PanDelta;                                          // 0x0(0x8)
};


// Size 0x28
struct ContestShipSinkNetworkEvent
{
public:
	struct Guid                                                  CrewLiveryId;                                      // 0x18(0x10)
};


// Size 0x10
struct ClothingChestEquipDisguiseEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
	int                                                          Index;                                             // 0x8(0x4)
};


// Size 0x48
struct HUDWalletBalance
{
public:
	char                                                         CurrencyId;                                        // 0x0(0x1)
	struct FText                                                 DisplayBalance;                                    // 0x8(0x38)
	uint32                                                       Balance;                                           // 0x40(0x4)
};


// Size 0x18
struct InlineVotingParameterSet
{
public:
	float                                                        HoldTime;                                          // 0x0(0x4)
	class VoteConsumerInlineBase*                                Consumer;                                          // 0x8(0x8)
	class VoteValidatorInlineBase*                               Validator;                                         // 0x10(0x8)
};


// Size 0x58
struct ShipCaptainedSessionData
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  ShipId;                                            // 0x10(0x10)
	struct FName                                                 SessionToken;                                      // 0x20(0x8)
	struct UniqueNetIdRepl                                       CaptainUserId;                                     // 0x28(0x18)
	struct FString                                               CaptainPirateId;                                   // 0x40(0x10)
	bool                                                         IsFirstTimeSailingShip;                            // 0x50(0x1)
};


// Size 0xa0
struct QuestTableTileOverview
{
public:
	struct FString                                               TileId;                                            // 0x0(0x10)
	struct FString                                               CondensedTitle;                                    // 0x10(0x10)
	struct FString                                               Title;                                             // 0x20(0x10)
	struct FString                                               Subtitle;                                          // 0x30(0x10)
	struct FString                                               Description;                                       // 0x40(0x10)
	struct FString                                               BackgroundImageUrl;                                // 0x50(0x10)
	struct FName                                                 TileType;                                          // 0x60(0x8)
	bool                                                         HighSeasOnly;                                      // 0x68(0x1)
	struct FString                                               PreviewTileIconImageUrl;                           // 0x70(0x10)
	struct FString                                               BladeFrameImageURL;                                // 0x80(0x10)
	struct FString                                               WatermarkImageUrl;                                 // 0x90(0x10)
};


// Size 0x90
struct MeshMemoryConstraintCapstanDelayedHealthReport
{
public:
	bool                                                         DidMakeAttemptToSetBodyMesh;                       // 0x18(0x1)
	bool                                                         DidMakeAttemptToSetReleaseAndArmMesh;              // 0x19(0x1)
	struct FString                                               BodyDescAssetPathName;                             // 0x20(0x10)
	struct FString                                               ReleaseDescAssetPathName;                          // 0x30(0x10)
	struct FString                                               ArmDescAssetPathName;                              // 0x40(0x10)
	bool                                                         BodyMeshIsValid;                                   // 0x50(0x1)
	bool                                                         ReleaseMeshIsValid;                                // 0x51(0x1)
	int                                                          NumberOfArmSubActors;                              // 0x54(0x4)
	int                                                          NumberOfArmsIsValid;                               // 0x58(0x4)
	struct FString                                               BodyMeshAssetPathName;                             // 0x60(0x10)
	struct FString                                               ReleaseMeshAssetPathName;                          // 0x70(0x10)
	TArray<String>                                               ArmMeshAssetsPathName;                             // 0x80(0x10)
};


// Size 0x118
struct AchievementSailWithFlameOfFateColoursAboard
{
public:
	uint32                                                       RequiredTravelDistanceInMetres;                    // 0x0(0x4)
	class Ship*                                                  Ship;                                              // 0x8(0x8)
	TArray<class ShipInteractableLight*>                         ShipLights;                                        // 0x10(0x10)
};


// Size 0x28
struct AthenaAnimationCannonAnimData
{
public:
	class BlendSpace1D*                                          Into;                                              // 0x0(0x8)
	TArray<class BlendSpace1D*>                                  Idle;                                              // 0x8(0x10)
	class BlendSpace1D*                                          Fire;                                              // 0x18(0x8)
	class BlendSpace1D*                                          Outof;                                             // 0x20(0x8)
};


// Size 0x20
struct CrewSpawnedAtNamedLocationTelemetryEvent
{
public:
	struct FString                                               LocationName;                                      // 0x0(0x10)
	struct Vector                                                Location;                                          // 0x10(0xc)
};


// Size 0x10
struct ImpactLocationData
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	float                                                        Size;                                              // 0xc(0x4)
};


// Size 0x8
struct EventReceiveAmmoTransferComponentState
{
public:
	class AmmoTransferComponent*                                 Source;                                            // 0x0(0x8)
};


// Size 0x18
struct TeleportStageCompletedEvent
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	float                                                        Duration;                                          // 0x10(0x4)
	char                                                         Reason;                                            // 0x14(0x1)
	char                                                         CompletedStage;                                    // 0x15(0x1)
};


// Size 0x20
struct FirstPersonAnimaticDockInfo
{
public:
	class Actor*                                                 Dockable;                                          // 0x0(0x8)
	struct Vector                                                DockLocationOffset;                                // 0x8(0xc)
	struct Rotator                                               DockRotationOffset;                                // 0x14(0xc)
};


// Size 0x10
struct CrewBaseTelemetryFragmentInput
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x14
struct CrewManagementShipData
{
public:
	bool                                                         Voted;                                             // 0x0(0x1)
	bool                                                         ScuttleAndChangeSeasVoted;                         // 0x1(0x1)
	int                                                          VotesCast;                                         // 0x4(0x4)
	int                                                          ScuttleAndChangeSeasVotesCast;                     // 0x8(0x4)
	int                                                          VotesRequired;                                     // 0xc(0x4)
	char                                                         State;                                             // 0x10(0x1)
};


// Size 0x50
struct ClientMeleeHitRegInfoTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	int                                                          NumHits;                                           // 0x10(0x4)
	struct FString                                               HitObjectId;                                       // 0x18(0x10)
	struct FString                                               HitObjectType;                                     // 0x28(0x10)
	struct FString                                               HitActorName;                                      // 0x38(0x10)
	bool                                                         IsDamageBlocked;                                   // 0x48(0x1)
};


// Size 0x10
struct ShowInviteErrorModalEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x18
struct EnchantedCompassTarget
{
public:
	int                                                          TargetID;                                          // 0x0(0x4)
	struct Vector                                                TargetLocation;                                    // 0x4(0xc)
	class Actor*                                                 TargetActor;                                       // 0x10(0x8)
};


// Size 0x28
struct GeyserStateData
{
public:
	char                                                         State;                                             // 0x20(0x1)
};


// Size 0x8
struct ShipCustomizationChestEquipShipCustomizationEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x98
struct ShipPartConnections
{
public:
	struct FName                                                 AnchorName;                                        // 0x0(0x8)
	struct FName                                                 CapstanName;                                       // 0x8(0x8)
	struct FName                                                 RudderName;                                        // 0x10(0x8)
	struct FName                                                 WheelName;                                         // 0x18(0x8)
	struct FName                                                 MainMastName;                                      // 0x20(0x8)
	struct FName                                                 MainMastSailHoistRightName;                        // 0x28(0x8)
	struct FName                                                 MainMastSailHoistLeftName;                         // 0x30(0x8)
	struct FName                                                 MainMastSailAngleRightName;                        // 0x38(0x8)
	struct FName                                                 MainMastSailAngleLeftName;                         // 0x40(0x8)
	struct FName                                                 MizzenMastName;                                    // 0x48(0x8)
	struct FName                                                 MizzenMastSailHoistRightName;                      // 0x50(0x8)
	struct FName                                                 MizzenMastSailHoistLeftName;                       // 0x58(0x8)
	struct FName                                                 MizzenMastSailAngleRightName;                      // 0x60(0x8)
	struct FName                                                 MizzenMastSailAngleLeftName;                       // 0x68(0x8)
	struct FName                                                 ForeMastName;                                      // 0x70(0x8)
	struct FName                                                 ForeMastSailHoistRightName;                        // 0x78(0x8)
	struct FName                                                 ForeMastSailHoistLeftName;                         // 0x80(0x8)
	struct FName                                                 ForeMastSailAngleRightName;                        // 0x88(0x8)
	struct FName                                                 ForeMastSailAngleLeftName;                         // 0x90(0x8)
};


// Size 0x20
struct TunnelOfTheDamnedClass
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	class UClass*                                                TunnelClass;                                       // 0x8(0x8)
	struct Vector                                                RelativeSpawnLocation;                             // 0x10(0xc)
};


// Size 0xf0
struct AthenaAnimationJumping
{
public:
	char                                                         JumpingState;                                      // 0x0(0x1)
	float                                                        PreImpactTime;                                     // 0x4(0x4)
	int                                                          JumpSequence;                                      // 0x8(0x4)
	int                                                          LandingSequence;                                   // 0xc(0x4)
	bool                                                         FiredFromActor;                                    // 0x10(0x1)
	bool                                                         Jumping;                                           // 0x10(0x1)
};


// Size 0x48
struct MeshMemoryConstraintWheelDelayedHealthReport
{
public:
	bool                                                         DidMakeAttemptToSetWheelMesh;                      // 0x18(0x1)
	struct FString                                               WheelDescAssetPathName;                            // 0x20(0x10)
	bool                                                         WheelMeshIsValid;                                  // 0x30(0x1)
	struct FString                                               WheelMeshAssetPathName;                            // 0x38(0x10)
};


// Size 0x58
struct CustomModeInfoModel
{
public:
	struct FString                                               GameModeId;                                        // 0x0(0x10)
	struct FString                                               UserId;                                            // 0x10(0x10)
	struct FString                                               Name;                                              // 0x20(0x10)
	struct FString                                               Description;                                       // 0x30(0x10)
	struct FString                                               ControllerAddress;                                 // 0x40(0x10)
	bool                                                         ProgressionEnabled;                                // 0x50(0x1)
};


// Size 0x10
struct AggressiveGhostShipPortalJumpedTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
};


// Size 0x40
struct EquipTrinketOnServerLoadoutRpc
{
public:
	struct NetSubObjectPtr                                       TrinketLoadoutComponent;                           // 0x18(0x14)
	class UClass*                                                TrinketToEquip;                                    // 0x30(0x8)
	int                                                          LocationIndex;                                     // 0x38(0x4)
	bool                                                         ShouldVerifyCaptainsPermissions;                   // 0x3c(0x1)
};


// Size 0x10
struct RequestPremiumShopOffersEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
};


// Size 0x8
struct EventPopUpQueueServicePaused
{
public:
	bool                                                         Paused;                                            // 0x0(0x1)
	int                                                          Reason;                                            // 0x4(0x4)
};


// Size 0x28
struct ClientBootFlowStampSwapResultTelemetryEvent
{
public:
	struct FString                                               FromStampId;                                       // 0x0(0x10)
	struct FString                                               ToStampId;                                         // 0x10(0x10)
	bool                                                         StampSwapOccurred;                                 // 0x20(0x1)
};


// Size 0x18
struct StunnedActionStateParams
{
public:
	float                                                        StunDuration;                                      // 0x0(0x4)
	bool                                                         LockCameraMovement;                                // 0x4(0x1)
	bool                                                         TriggerStunScreenSpaceVFX;                         // 0x5(0x1)
	bool                                                         ApplyStunAnim;                                     // 0x6(0x1)
	char                                                         StunAnimType;                                      // 0x7(0x1)
	bool                                                         InterruptMeleeAttacks;                             // 0x8(0x1)
	char                                                         DurationType;                                      // 0x9(0x1)
	char                                                         IsItemWieldingAllowed;                             // 0xa(0x1)
	class UClass*                                                DamagerType;                                       // 0x10(0x8)
};


// Size 0xa0
struct CaptainedCrew
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  ShipId;                                            // 0x10(0x10)
	struct FString                                               ShipName;                                          // 0x20(0x10)
	struct FText                                                 ScrambledShipName;                                 // 0x30(0x38)
	struct FName                                                 SessionToken;                                      // 0x68(0x8)
	struct UniqueNetIdRepl                                       CaptainUserId;                                     // 0x70(0x18)
	struct FString                                               CaptainPirateId;                                   // 0x88(0x10)
	int                                                          ScrambleNameIndex;                                 // 0x98(0x4)
	bool                                                         IsFirstTimeSailingShip;                            // 0x9c(0x1)
	bool                                                         LocalPlayerHasUGCBlocked;                          // 0x9d(0x1)
	bool                                                         UGCHasBeenChecked;                                 // 0x9e(0x1)
	bool                                                         IsSailingCaptainedShip;                            // 0x9f(0x1)
};


// Size 0x40
struct LiquidContents
{
public:
	class Ship*                                                  LiquidSource;                                      // 0x0(0x8)
	TArray<class Ship*>                                          LiquidTargets;                                     // 0x8(0x10)
	class Actor*                                                 Container;                                         // 0x18(0x8)
	float                                                        LiquidVolume;                                      // 0x20(0x4)
	struct Guid                                                  ScoopID;                                           // 0x24(0x10)
	float                                                        LiquidTransferFillAmountModifier;                  // 0x34(0x4)
	char                                                         ContainerType;                                     // 0x38(0x1)
};


// Size 0x10
struct SpawnerTypeMapping
{
public:
	class UClass*                                                Type;                                              // 0x0(0x8)
	class BaseContainerContentSpawner*                           Spawner;                                           // 0x8(0x8)
};


// Size 0x20
struct MerchantQuestContractExpiredNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
};


// Size 0x1
struct EventSetFishingIsComedyItem
{
public:
	bool                                                         IsComedyItem;                                      // 0x0(0x1)
};


// Size 0x18
struct ItemDiggingAnimationOverride
{
public:
	TArray<Class>                                                Classes;                                           // 0x0(0x10)
	class ItemDiggingAnimationConfig*                            DiggingAnimationConfig;                            // 0x10(0x8)
};


// Size 0x10
struct BountyQuestApproachesLandmarkTelemetryEvent
{
public:
	struct FString                                               LandmarkName;                                      // 0x0(0x10)
};


// Size 0x18
struct ShopDescOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	class ShopDesc*                                              ShopDesc;                                          // 0x10(0x8)
};


// Size 0xe8
struct CaptainsLogCrewAccolades
{
public:
	struct FText                                                 CrewNickname;                                      // 0x0(0x38)
	int                                                          PirateTitleIndex;                                  // 0x38(0x4)
	struct FText                                                 AccoladeOne;                                       // 0x40(0x38)
	struct FText                                                 AccoladeTwo;                                       // 0x78(0x38)
	struct FText                                                 AccoladeThree;                                     // 0xb0(0x38)
};


// Size 0x18
struct MakeFriendsEmoteParams
{
public:
	TArray<struct Name>                                          TriggerEmoteNames;                                 // 0x0(0x10)
	float                                                        TriggerDistanceThreshold;                          // 0x10(0x4)
};


// Size 0x70
struct ClientProjectileImpactHitRegInfoTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               ProjectileId;                                      // 0x10(0x10)
	struct FString                                               DamagerTypeId;                                     // 0x20(0x10)
	struct Vector                                                HitLocation;                                       // 0x30(0xc)
	struct FString                                               InstigatorObjectId;                                // 0x40(0x10)
	struct FString                                               InstigatorObjectType;                              // 0x50(0x10)
	struct FString                                               InstigatorActorName;                               // 0x60(0x10)
};


// Size 0x10
struct KrakenAnimatedTentacleHeldTargetVomittingChance
{
public:
	float                                                        Chance;                                            // 0x0(0x4)
	class UClass*                                                CurrentState;                                      // 0x8(0x8)
};


// Size 0x8
struct RewardId
{
public:
	struct FName                                                 RewardId;                                          // 0x0(0x8)
};


// Size 0x10
struct RewindComponentParameters
{
public:
	float                                                        MaxTimeSpan;                                       // 0x0(0x4)
	float                                                        TimeStampModifier;                                 // 0x4(0x4)
	float                                                        MaxPredictionTimeDelta;                            // 0x8(0x4)
	int                                                          MaxRecordPerSecond;                                // 0xc(0x4)
};


// Size 0x18
struct VomitVFXObject
{
public:
	struct FName                                                 VFXName;                                           // 0x0(0x8)
	class Object*                                                FirstPerson;                                       // 0x8(0x8)
	class Object*                                                ThirdPerson;                                       // 0x10(0x8)
};


// Size 0x28
struct PlayerItemRetrievalFromContainerTelemetryEvent
{
public:
	struct FString                                               ContainerId;                                       // 0x0(0x10)
	struct FString                                               ItemType;                                          // 0x10(0x10)
	int                                                          NumberOfItemsRemainingInContainer;                 // 0x20(0x4)
};


// Size 0x20
struct EventUseItemStopped
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 ActionSource;                                      // 0x8(0x8)
	class Actor*                                                 Usable;                                            // 0x10(0x8)
	char                                                         TrackToUse;                                        // 0x18(0x1)
};


// Size 0x10
struct EventGhostShipRequestIndefiniteDoorLock
{
public:
	class Controller*                                            PlayerController;                                  // 0x0(0x8)
	class Object*                                                Owner;                                             // 0x8(0x8)
};


// Size 0x38
struct GuildSignUpNetworkEvent
{
public:
	struct FString                                               GuildId;                                           // 0x18(0x10)
	struct FString                                               ErrorId;                                           // 0x28(0x10)
};


// Size 0x8
struct CreateFogBankGameServerResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	int                                                          FogBankId;                                         // 0x4(0x4)
};


// Size 0xc
struct CentreWorldMapOnLocationEvent
{
public:
	struct Vector                                                WorldLocation;                                     // 0x0(0xc)
};


// Size 0x8
struct DigRequestInformation
{
public:
	class WwiseEvent*                                            RevealSFX;                                         // 0x0(0x8)
};


// Size 0x30
struct BuoyantObjectWeightedGroup
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	struct WeightedProbabilityRange                              NumberOfItems;                                     // 0x8(0x20)
	class ItemSpawnDistributionAsset*                            Items;                                             // 0x28(0x8)
};


// Size 0x28
struct TreasurePickedUpTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         BootyType;                                         // 0x10(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
};


// Size 0x20
struct AthenaAnimationObjectActionContinuousSwimming
{
public:
	class BlendSpace*                                            MainInSwimming;                                    // 0x0(0x8)
	class BlendSpace*                                            MainOneShotInSwimming;                             // 0x8(0x8)
	class BlendSpace*                                            MainCycleSwimming;                                 // 0x10(0x8)
	class BlendSpace*                                            MainOutSwimming;                                   // 0x18(0x8)
};


// Size 0x1
struct EventPlayerControllerHitNotificationOld
{
public:
	bool                                                         PlaySfx;                                           // 0x0(0x1)
};


// Size 0x1
struct NotifyFrontendOfCurrentPirateStatus
{
public:
	bool                                                         Locked;                                            // 0x0(0x1)
};


// Size 0x20
struct EmissaryValueChangeUIEvent
{
public:
	int64                                                        From;                                              // 0x0(0x8)
	int64                                                        To;                                                // 0x8(0x8)
	struct FString                                               EmissaryId;                                        // 0x10(0x10)
};


// Size 0x8
struct EventMeleeWeaponAttackTriggered
{
public:
	char                                                         AttackType;                                        // 0x0(0x1)
	int                                                          AttackIndex;                                       // 0x4(0x4)
};


// Size 0x30
struct ProjectileServiceUpdateRewindFailedEvent
{
public:
	TArray<struct Guid>                                          AffectedProjectilesTelemetryAttackIds;             // 0x0(0x10)
	struct FString                                               DamagerType;                                       // 0x10(0x10)
	float                                                        AttackGroupStartTime;                              // 0x20(0x4)
	float                                                        AttackGroupEndTime;                                // 0x24(0x4)
	int                                                          Count;                                             // 0x28(0x4)
};


// Size 0x8
struct EventFishingFishCaught
{
public:
	class Actor*                                                 CaughtActor;                                       // 0x0(0x8)
};


// Size 0x4
struct EventSetFishingReelingSpeed
{
public:
	float                                                        ReelingSpeed;                                      // 0x0(0x4)
};


// Size 0xf8
struct FaunaWeightedAISpawnTypeParams
{
public:
	class UClass*                                                Breed;                                             // 0x0(0x8)
	struct WeightedAISpawnTypeParams                             Params;                                            // 0x8(0xf0)
};


// Size 0x8
struct LightingZoneBlendValues
{
public:
	int                                                          LightingSetIndex;                                  // 0x0(0x4)
	float                                                        LightingZoneWeight;                                // 0x4(0x4)
};


// Size 0x30
struct ScoreRewardValueData
{
public:
	int                                                          ScoreToAward;                                      // 0x0(0x4)
	struct FString                                               ServicesConfigRetrievalString;                     // 0x8(0x10)
	char                                                         ReasonForScore;                                    // 0x18(0x1)
	TArray<int>                                                  ScoreByPeriod;                                     // 0x20(0x10)
};


// Size 0x10
struct PurchasePremiumCurrencyRequestEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x58
struct CapturedByKrakenActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           Tentacle;                                          // 0x40(0x14)
};


// Size 0x70
struct OpenTrinketBoxActionRuleVerbiage
{
public:
	struct FText                                                 OpenTrinketBoxVerbiage;                            // 0x0(0x38)
	struct FText                                                 ReplaceTrinketVerbiage;                            // 0x38(0x38)
};


// Size 0x30
struct VoyageProposalAssetData
{
public:
	struct StringAssetReference                                  Mesh;                                              // 0x0(0x10)
	struct StringAssetReference                                  IconInv;                                           // 0x10(0x10)
	struct StringAssetReference                                  IconPrv;                                           // 0x20(0x10)
};


// Size 0x8
struct RefreshRateTelemetryFragment
{
public:
	bool                                                         Supports120Hz;                                     // 0x0(0x1)
	uint32                                                       RefreshRate;                                       // 0x4(0x4)
};


// Size 0x10
struct AggressiveGhostShipEncounterStartFromTaleTelemetryEvent
{
public:
	struct Guid                                                  EncounterId;                                       // 0x0(0x10)
};


// Size 0x28
struct AthenaAnimationMountableSpotlightMechanismAnimData
{
public:
	TArray<class BlendSpace1D*>                                  Idle;                                              // 0x0(0x10)
	class BlendSpace1D*                                          FireInto;                                          // 0x10(0x8)
	class BlendSpace1D*                                          FireOutOf;                                         // 0x18(0x8)
	class BlendSpace1D*                                          FireAction;                                        // 0x20(0x8)
};


// Size 0x10
struct MultiShopResponsePerNPCEntry
{
public:
	struct FName                                                 NPCName;                                           // 0x0(0x8)
	class ShopDesc*                                              ShopDesc;                                          // 0x8(0x8)
};


// Size 0x10
struct LoadoutRepairSuccessTelemetryEvent
{
public:
	int                                                          CarouselSeed;                                      // 0x4(0x4)
	int                                                          NumAppliedDescs;                                   // 0x8(0x4)
	int                                                          NumMissingCategories;                              // 0xc(0x4)
};


// Size 0x10
struct ServerMigrateFromTelemetryEvent
{
public:
	struct Guid                                                  MigrationId;                                       // 0x0(0x10)
};


// Size 0x8
struct EventRemovePlayerOnLogOut
{
public:
	class Controller*                                            Controller;                                        // 0x0(0x8)
};


// Size 0x14
struct BuoyantObjectSpawnDistributionParams
{
public:
	struct FloatRange                                            ObjectDistanceFromSpawnCentre;                     // 0x0(0x10)
	float                                                        MinDistanceBetweenObjects;                         // 0x10(0x4)
};


// Size 0x38
struct EventShipwreckDiscoveredNotification
{
public:
	struct FText                                                 WreckName;                                         // 0x0(0x38)
};


// Size 0x28
struct UIGamertagResponseInformation
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct FString                                               Xuid;                                              // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
	bool                                                         DisplayNameFound;                                  // 0x21(0x1)
};


// Size 0x18
struct MechanismMaterialOverride
{
public:
	class UClass*                                                Group;                                             // 0x0(0x8)
	struct StringAssetReference                                  Material;                                          // 0x8(0x10)
};


// Size 0x4
struct CapstanSnapshot
{
public:
	float                                                        Raised;                                            // 0x0(0x4)
};


// Size 0x18
struct AuthorityRepairableState
{
public:
	char                                                         RepairableState;                                   // 0x0(0x1)
	TArray<uintptr_t>                                            RepairingList;                                     // 0x8(0x10)
};


// Size 0x60
struct BalanceableWalkwayTelemetry
{
public:
	float                                                        TimeSpentOnTheRope;                                // 0x0(0x4)
	float                                                        TimeSpentOnTheRopeSliding;                         // 0x4(0x4)
	float                                                        TimeSpentOnTheRopeSprinting;                       // 0x8(0x4)
	bool                                                         PlayerWasSliding;                                  // 0xc(0x1)
	bool                                                         PlayerJumped;                                      // 0xd(0x1)
	bool                                                         PlayerWasSuccessful;                               // 0xe(0x1)
	bool                                                         PlayerGotTooSoggy;                                 // 0xf(0x1)
	bool                                                         PlayerBonkedTheirHead;                             // 0x10(0x1)
	float                                                        DistanceTravelled;                                 // 0x14(0x4)
	bool                                                         PlayerIsFacingForward;                             // 0x18(0x1)
	struct FString                                               HeldBootyName;                                     // 0x20(0x10)
	struct FString                                               HarpoonOwnerName;                                  // 0x30(0x10)
	struct FString                                               ClosestIslandNameOnEntry;                          // 0x40(0x10)
	struct FString                                               ClosestIslandNameOnDeparture;                      // 0x50(0x10)
};


// Size 0x18
struct LightingControllerRainParams
{
public:
	float                                                        RainOcclusionDistance;                             // 0x0(0x4)
	float                                                        MaxDesaturation;                                   // 0x4(0x4)
	float                                                        MaxRainIntensity;                                  // 0x8(0x4)
	float                                                        FogInscatteringDistance;                           // 0xc(0x4)
	float                                                        LPVOcclusionReduction;                             // 0x10(0x4)
	float                                                        MaxRainWind;                                       // 0x14(0x4)
};


// Size 0x10
struct NewVoyagesAvailablePerCompanyPopupMessage
{
public:
	struct FName                                                 ComapnyName;                                       // 0x0(0x8)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x8(0x8)
};


// Size 0x20
struct EventPlayerEnteredIslandVicinity
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
	struct FName                                                 IslandName;                                        // 0x10(0x8)
};


// Size 0x18
struct FeatureToggledPremiumCatalog
{
public:
	struct FeatureFlag                                           FeatureToggle;                                     // 0x0(0xc)
	class PremiumCatalogDataAsset*                               PremiumCatalog;                                    // 0x10(0x8)
};


// Size 0x10
struct PlayerStateAndTopTime
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
	float                                                        TopTime;                                           // 0x8(0x4)
};


// Size 0x18
struct AllowedItemsToDetermineJettisonedContainerTypePair
{
public:
	struct StringAssetReference                                  AllowedItemsAsset;                                 // 0x0(0x10)
	class UClass*                                                ContainerTypeToSpawn;                              // 0x10(0x8)
};


// Size 0x20
struct AmmoStoreMetaWrapper
{
public:
	int                                                          AmmoCount;                                         // 0x18(0x4)
};


// Size 0x8
struct EventAthenaPlayerControllerBegunPlay
{
public:
	class AthenaPlayerController*                                Controller;                                        // 0x0(0x8)
};


// Size 0x10
struct VoyageOnDemandDepartureTunnelOfTheDamnedInitializedTelemetryEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
};


// Size 0x44
struct PlayerBuriedItemsMapAddedToStoreTelemetryEvent
{
public:
	struct Guid                                                  MapBundleId;                                       // 0x0(0x10)
	struct Guid                                                  OwningCrewID;                                      // 0x10(0x10)
	struct Guid                                                  OwningCrewSessionId;                               // 0x20(0x10)
	struct Guid                                                  MapID;                                             // 0x30(0x10)
	uint32                                                       AverageGoldCost;                                   // 0x40(0x4)
};


// Size 0x1
struct ShipCustomizationCaptainOnlyChangedEvent
{
public:
	bool                                                         IsShipCustomizationCaptainOnly;                    // 0x0(0x1)
};


// Size 0x2c
struct VomitScreenFX
{
public:
	float                                                        EnterDuration;                                     // 0x0(0x4)
	float                                                        FullOnDuration;                                    // 0x4(0x4)
	float                                                        ExitDuration;                                      // 0x8(0x4)
	float                                                        DebugInterval;                                     // 0xc(0x4)
};


// Size 0x10
struct RequestPremiumStoreOffersEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
};


// Size 0x10
struct DisplayShutdownTimerMessageClient
{
public:
	struct Timespan                                              TimeTillShutdown;                                  // 0x0(0x8)
	struct Timespan                                              DisplayPeriod;                                     // 0x8(0x8)
};


// Size 0x10
struct WreckSpawnedTelemetryEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	bool                                                         IsCustomWreck;                                     // 0xc(0x1)
};


// Size 0x1c
struct ClientTelemetryConfigurationSettings
{
public:
	float                                                        HighMemoryPerformanceHeartbeatIntervalSeconds;     // 0x0(0x4)
	float                                                        HighMemoryThresholdDurango;                        // 0x4(0x4)
	float                                                        HighMemoryThresholdEdmonton;                       // 0x8(0x4)
	float                                                        HighMemoryThresholdScorpio;                        // 0xc(0x4)
	float                                                        HighMemoryThresholdLockhart;                       // 0x10(0x4)
	float                                                        HighMemoryThresholdAnaconda;                       // 0x14(0x4)
	float                                                        PlayerAggregatePositionInterval;                   // 0x18(0x4)
};


// Size 0x10
struct FeaturedPetCategory
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	struct FName                                                 Feature;                                           // 0x8(0x8)
};


// Size 0x8
struct EventExplosionDidDestroyWieldedItem
{
public:
	class WieldableItem*                                         DestroyedItem;                                     // 0x0(0x8)
};


// Size 0x20
struct ProjectileWeaponFireBelieveClientMissesTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	double                                                       ClientSentTimeStamp;                               // 0x10(0x8)
	double                                                       ServerTimeStamp;                                   // 0x18(0x8)
};


// Size 0x14
struct BootyItemShipDroppedInfo
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	bool                                                         DroppedOnOwnShip;                                  // 0x10(0x1)
	bool                                                         DroppedOnAnotherShip;                              // 0x11(0x1)
};


// Size 0x10
struct FrameDurationDataTelemetryFragment
{
public:
	float                                                        Min;                                               // 0x0(0x4)
	float                                                        Max;                                               // 0x4(0x4)
	float                                                        Average;                                           // 0x8(0x4)
	float                                                        StdDeviation;                                      // 0xc(0x4)
};


// Size 0x8
struct DartProxySpawnEvent
{
public:
	class ItemProxy*                                             Proxy;                                             // 0x0(0x8)
};


// Size 0x18
struct InvasionTunnelLoadedSceneryTileAssetEntry
{
public:
	class UClass*                                                StrongAssetPtr;                                    // 0x0(0x8)
};


// Size 0x18
struct ShippingLastFramePerformanceStatsTelemetryFragment
{
public:
	struct JsonObjectWrapper                                     Json;                                              // 0x0(0x18)
};


// Size 0x38
struct MastPhysicsComponents
{
public:
	class PrimitiveComponent*                                    MastBaseComponent;                                 // 0x0(0x8)
	class PrimitiveComponent*                                    MastTopComponent;                                  // 0x8(0x8)
	class PrimitiveComponent*                                    MastWeldedPhysicsBodyComponent;                    // 0x10(0x8)
	class PrimitiveComponent*                                    WeldedCrowsNestComponent;                          // 0x18(0x8)
	class PrimitiveComponent*                                    UnweldedCrowsNestComponent;                        // 0x20(0x8)
	TArray<class PrimitiveComponent*>                            UnweldedCrossBeamComponents;                       // 0x28(0x10)
};


// Size 0x8
struct CreateTriggerGameServerResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	int                                                          TriggerNetId;                                      // 0x4(0x4)
};


// Size 0xc
struct SpotLightData
{
public:
	float                                                        InnerConeAngle;                                    // 0x0(0x4)
	float                                                        OuterConeAngle;                                    // 0x4(0x4)
	float                                                        KickBackRatio;                                     // 0x8(0x4)
};


// Size 0x18
struct ShipLiveryTextureSwap
{
public:
	class MaterialInterface*                                     TargetMaterial;                                    // 0x0(0x8)
	struct FName                                                 TargetParameterName;                               // 0x8(0x8)
	class Texture2D*                                             TargetTexture;                                     // 0x10(0x8)
};


// Size 0x38
struct WeatherConditionsTelemetryEvent
{
public:
	float                                                        SunLocationX;                                      // 0x0(0x4)
	float                                                        SunLocationY;                                      // 0x4(0x4)
	float                                                        SunLocationZ;                                      // 0x8(0x4)
	float                                                        SunOrientation;                                    // 0xc(0x4)
	float                                                        SunRayStrength;                                    // 0x10(0x4)
	float                                                        WindDirection;                                     // 0x14(0x4)
	float                                                        WindSpeed;                                         // 0x18(0x4)
	float                                                        StormLocationX;                                    // 0x1c(0x4)
	float                                                        StormLocationY;                                    // 0x20(0x4)
	TArray<float>                                                CompassDirections;                                 // 0x28(0x10)
};


// Size 0x30
struct TaleQuestTaskStartedTelemetryEvent
{
public:
	struct FString                                               Description;                                       // 0x0(0x10)
	TArray<String>                                               Context;                                           // 0x10(0x10)
	struct Guid                                                  TaskId;                                            // 0x20(0x10)
};


// Size 0x28
struct LoadShipCannonGameServerRequestModel
{
public:
	struct FString                                               ItemName;                                          // 0x0(0x10)
	struct Guid                                                  CrewId;                                            // 0x10(0x10)
	int                                                          CannonIndex;                                       // 0x20(0x4)
};


// Size 0x18
struct DirectorSettingEntry
{
public:
	class VoyageDescDataAsset*                                   VoyageDesc;                                        // 0x0(0x8)
	struct FeatureFlag                                           Feature;                                           // 0x8(0xc)
};


// Size 0x10
struct EventCompanyScreenDisplayInformationRequest
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
};


// Size 0x8
struct AIShipTargetVesselSetEvent
{
public:
	class Actor*                                                 AiShipTarget;                                      // 0x0(0x8)
};


// Size 0x20
struct GenericCommandGameServerRequestModel
{
public:
	struct FString                                               Command;                                           // 0x0(0x10)
	struct FString                                               Params;                                            // 0x10(0x10)
};


// Size 0x20
struct InteractionTheme
{
public:
	struct FString                                               BackgroundImage;                                   // 0x0(0x10)
	struct FString                                               HeaderIcon;                                        // 0x10(0x10)
};


// Size 0x28
struct GameEventSettingsInfo
{
public:
	struct FString                                               GameEventTypeRef;                                  // 0x0(0x10)
	TArray<String>                                               ExcludedGlobalEvents;                              // 0x10(0x10)
	int                                                          RegenIntervalOverride;                             // 0x20(0x4)
};


// Size 0x18
struct PersistenceIdentifier
{
public:
	struct FString                                               Identifier;                                        // 0x0(0x10)
	struct FName                                                 Name;                                              // 0x10(0x8)
};


// Size 0x30
struct PirateInventoryItemModel
{
public:
	struct FString                                               InstanceId;                                        // 0x0(0x10)
	struct FString                                               CatalogItemId;                                     // 0x10(0x10)
	struct FString                                               Signature;                                         // 0x20(0x10)
};


// Size 0x28
struct CachedPlayerPermissions
{
public:
	struct UniqueNetIdRepl                                       PlayersUserId;                                     // 0x0(0x18)
	struct DateTime                                              TimeWhenChecked;                                   // 0x18(0x8)
	uint32                                                       Permissions;                                       // 0x20(0x4)
};


// Size 0x50
struct GuildBranding
{
public:
	struct FString                                               GuildName;                                         // 0x0(0x10)
	struct FString                                               Icon;                                              // 0x10(0x10)
	struct FString                                               ColourSwatch;                                      // 0x20(0x10)
	struct FString                                               Theme;                                             // 0x30(0x10)
	struct FString                                               Motto;                                             // 0x40(0x10)
};


// Size 0x10
struct AthenaAnimationCannonConcealedAnimData
{
public:
	class AnimSequence*                                          InCannonIdle;                                      // 0x0(0x8)
	class AnimSequence*                                          FiredFromCannon;                                   // 0x8(0x8)
};


// Size 0x50
struct CanvasWorldMapSeaAreaItems
{
public:
	class Texture*                                               Texture;                                           // 0x0(0x8)
	struct FText                                                 Name;                                              // 0x8(0x38)
	struct Vector2D                                              Location;                                          // 0x40(0x8)
	struct FName                                                 FeatureName;                                       // 0x48(0x8)
};


// Size 0x10
struct TunnelLevelDefinition
{
public:
	class UClass*                                                LevelId;                                           // 0x0(0x8)
	class AthenaStreamedLevelDataAsset*                          StreamedLevelData;                                 // 0x8(0x8)
};


// Size 0x20
struct ContestStateChangedEvent
{
public:
	char                                                         ContestState;                                      // 0x18(0x1)
};


// Size 0xc0
struct CharacterSocketCollisionResult
{
public:
	bool                                                         HasHit;                                            // 0x0(0x1)
	struct HitResult                                             HitResult;                                         // 0x4(0x80)
	struct Vector                                                SocketVelocity;                                    // 0x84(0xc)
	struct Transform                                             SocketTransform;                                   // 0x90(0x30)
};


// Size 0x18
struct NPCPurchaseList
{
public:
	class Actor*                                                 NPC;                                               // 0x0(0x8)
	TArray<class Class*>                                         Items;                                             // 0x8(0x10)
};


// Size 0x38
struct ShipUndoRepairTelemetryEvent
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct Vector                                                UndoRepairLocation;                                // 0x10(0xc)
	struct FString                                               ShipPart;                                          // 0x20(0x10)
	int                                                          DamageLevel;                                       // 0x30(0x4)
	float                                                        UndoRepairPercentage;                              // 0x34(0x4)
};


// Size 0x70
struct AthenaStreamedLevelData
{
public:
	int                                                          LevelIdCrc;                                        // 0x0(0x4)
	struct FName                                                 PackagePath;                                       // 0x4(0x8)
	TArray<class LevelStreaming*>                                Levels;                                            // 0x10(0x10)
	map                                                          LevelPaths;                                        // 0x20(0x50)
};


// Size 0x20
struct PlayerXpGrantedTelemetryEvent
{
public:
	uint64                                                       XpAmount;                                          // 0x0(0x8)
	struct FName                                                 CompanyId;                                         // 0x8(0x8)
	struct Guid                                                  BootyId;                                           // 0x10(0x10)
};


// Size 0x10
struct ActionSequenceInteractableInteractionStateData
{
public:
	int                                                          InteractCount;                                     // 0x0(0x4)
	char                                                         InteractionState;                                  // 0x4(0x1)
	double                                                       LastInteractionTimestamp;                          // 0x8(0x8)
};


// Size 0x18
struct EventPlayerEnteredShipwreckVicinity
{
public:
	class Controller*                                            PirateController;                                  // 0x0(0x8)
	interface                                                    Shipwreck;                                         // 0x8(0x10)
};


// Size 0x1
struct ScrambleGuildNameSettingChanged
{
public:
	bool                                                         ShouldScrambleGuildName;                           // 0x0(0x1)
};


// Size 0x4
struct RequestScrambledShipNamesEvent
{
public:
	int                                                          NumShipNamesRequested;                             // 0x0(0x4)
};


// Size 0x68
struct RewardGrantedMessage
{
public:
	struct FString                                               RewardId;                                          // 0x0(0x10)
	char                                                         CurrencyId;                                        // 0x10(0x1)
	uint32                                                       CurrencyAmount;                                    // 0x14(0x4)
	struct FString                                               CompanyId;                                         // 0x18(0x10)
	uint32                                                       Xp;                                                // 0x28(0x4)
	uint32                                                       NumLevels;                                         // 0x2c(0x4)
	TArray<String>                                               Entitlements;                                      // 0x30(0x10)
	struct Guid                                                  RequestID;                                         // 0x40(0x10)
	struct FString                                               DeferralReason;                                    // 0x50(0x10)
	bool                                                         IsShipReward;                                      // 0x60(0x1)
};


// Size 0x1
struct StoreRedemptionStateFailedTelemetryEvent
{
public:
	char                                                         Status;                                            // 0x0(0x1)
};


// Size 0x20
struct ServerTeleportCompleteAckNetworkEvent
{
public:
	char                                                         Reason;                                            // 0x18(0x1)
};


// Size 0x8
struct SetMaxHealthGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	float                                                        MaxHealth;                                         // 0x4(0x4)
};


// Size 0x590
struct LockData
{
public:
	bool                                                         UnlockBySpecificKey;                               // 0x0(0x1)
	TArray<class Class*>                                         AcceptableKeys;                                    // 0x8(0x10)
	class MaterialInterface*                                     OptionalKeyMaterialOverride;                       // 0x18(0x8)
	class StaticMesh*                                            OptionalKeyMeshOverride;                           // 0x20(0x8)
	struct Transform                                             KeyMeshTargetTransform;                            // 0x30(0x30)
	bool                                                         StartLocked;                                       // 0x60(0x1)
	float                                                        HandToLockLerpDuration;                            // 0x64(0x4)
	float                                                        LocalPredictionTimeout;                            // 0x68(0x4)
	float                                                        UnlockAudioCueTriggerTime;                         // 0x6c(0x4)
	class WwiseEvent*                                            UnlockAudioCue;                                    // 0x70(0x8)
	class WwiseEvent*                                            CrewOnlyUnlockMusic;                               // 0x78(0x8)
	class WwiseObjectPoolWrapper*                                SfxPool;                                           // 0x80(0x8)
	struct TransformBlendCurve                                   UnlockAnimationLerp;                               // 0x90(0x500)
};


// Size 0x60
struct DiscoveryNotificationEvent
{
public:
	int                                                          Count;                                             // 0x0(0x4)
	TArray<String>                                               Images;                                            // 0x8(0x10)
	struct FString                                               Background;                                        // 0x18(0x10)
	struct FText                                                 Text;                                              // 0x28(0x38)
};


// Size 0x70
struct ActionSequenceSingleInteractionConditionParam
{
public:
	bool                                                         AlwaysFail;                                        // 0x0(0x1)
	struct ConditionInstance                                     Condition;                                         // 0x8(0x20)
	bool                                                         StillAllowInteraction;                             // 0x28(0x1)
	struct FText                                                 FailedConditionDescriptorVerb;                     // 0x30(0x38)
	bool                                                         ResetInteractionsOnFail;                           // 0x68(0x1)
	float                                                        TimeBeforeInteractionReenabled;                    // 0x6c(0x4)
};


// Size 0x14
struct PlayerGameStartTelemetryEvent
{
public:
	struct Guid                                                  TitleSession;                                      // 0x0(0x10)
	bool                                                         IsMigration;                                       // 0x10(0x1)
};


// Size 0x2
struct CrewArenaRivalVotingData
{
public:
	bool                                                         IsCrewMemberInFavourOfChangingArenaLobby;          // 0x0(0x1)
	char                                                         NumberOfVotes;                                     // 0x1(0x1)
};


// Size 0x28
struct AshenWindSkullUseItemTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	float                                                        Charge;                                            // 0x10(0x4)
	struct FString                                               WeaponName;                                        // 0x18(0x10)
};


// Size 0x20
struct ClientRequestAsyncLoadingCompleteAckNetworkEvent
{
public:
	int                                                          StreamOutLevelId;                                  // 0x18(0x4)
	int                                                          StreamInLevelId;                                   // 0x1c(0x4)
};


// Size 0x8
struct EventStorageContainerCreated
{
public:
	class Object*                                                Replenishable;                                     // 0x0(0x8)
};


// Size 0x18
struct OnlineAthenaGameModeConfigurationSettings
{
public:
	struct Timespan                                              PreLoginEntitlementQueryTimeout;                   // 0x0(0x8)
	struct Timespan                                              PreLoginPirateValidationTimeout;                   // 0x8(0x8)
	bool                                                         ConfigAllowCrossWorld;                             // 0x10(0x1)
};


// Size 0x30
struct CrewScoreAppendedEvent
{
public:
	char                                                         ScoreId;                                           // 0x0(0x1)
	struct Guid                                                  CrewId;                                            // 0x4(0x10)
	int                                                          CrewScore;                                         // 0x14(0x4)
	char                                                         ScoreReason;                                       // 0x18(0x1)
	struct StringAssetReference                                  ScoringIconAssetReference;                         // 0x20(0x10)
};


// Size 0x18
struct PlayerHideoutInfo
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
	TArray<class SpawnLocation*>                                 ExitPoints;                                        // 0x8(0x10)
};


// Size 0x8
struct LightningTarget
{
public:
	char                                                         TargetType;                                        // 0x0(0x1)
	float                                                        Chance;                                            // 0x4(0x4)
};


// Size 0x10
struct EventShipEnteredSafeZone
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x10
struct RenderToTextureTestStringEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x40
struct TaleQuestNotificationQuestsBegunEvent
{
public:
	int                                                          QuestCount;                                        // 0x18(0x4)
	TArray<struct StringAssetReference>                          Icons;                                             // 0x20(0x10)
	struct StringAssetReference                                  Background;                                        // 0x30(0x10)
};


// Size 0x10
struct OnEndSlidingOnWalkwayEvent
{
public:
	class WwiseEvent*                                            WalkwaySlideLoopEnd;                               // 0x0(0x8)
	class WwiseEvent*                                            WalkwaySlideEnd;                                   // 0x8(0x8)
};


// Size 0x18
struct SetMapTypeOnRadialInventorySlot
{
public:
	int                                                          SlotIndex;                                         // 0x0(0x4)
	char                                                         QuestMapIcon;                                      // 0x4(0x1)
	struct FString                                               BackgroundImageUrl;                                // 0x8(0x10)
};


// Size 0x8
struct AISwimmingCreatureDeadActionStateEventMapItem
{
public:
	char                                                         Event;                                             // 0x0(0x1)
	float                                                        FireAtTimeLeftInState;                             // 0x4(0x4)
};


// Size 0x10
struct TalkToNPCActionStateParams
{
public:
	float                                                        CinematicCameraBlendInTimeSeconds;                 // 0x0(0x4)
	char                                                         CinematicCameraBlendInMode;                        // 0x4(0x1)
	float                                                        CinematicCameraBlendOutTimeSeconds;                // 0x8(0x4)
	char                                                         CinematicCameraBlendOutMode;                       // 0xc(0x1)
};


// Size 0x60
struct DeferredRewardRequestEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct FName                                                 CompanyAffiliation;                                // 0x10(0x8)
	struct FName                                                 RewardId;                                          // 0x18(0x8)
	struct FString                                               UserId;                                            // 0x20(0x10)
	struct FString                                               PirateId;                                          // 0x30(0x10)
	char                                                         AccountLevel;                                      // 0x40(0x1)
	char                                                         NotifyPlayer;                                      // 0x41(0x1)
	char                                                         RewardGold;                                        // 0x42(0x1)
	char                                                         RewardXP;                                          // 0x43(0x1)
	char                                                         RewardSeasonRenown;                                // 0x44(0x1)
	struct FString                                               DeferralReason;                                    // 0x48(0x10)
	double                                                       RewardMultiplier;                                  // 0x58(0x8)
};


// Size 0x8
struct GuildLevelDefinition
{
public:
	uint32                                                       Level;                                             // 0x0(0x4)
	uint32                                                       XpRequiredToAttain;                                // 0x4(0x4)
};


// Size 0x18
struct EntitlementMapEntry
{
public:
	struct FName                                                 Identifier;                                        // 0x0(0x8)
	struct StringClassReference                                  EntitlementDesc;                                   // 0x8(0x10)
};


// Size 0x78
struct UseMountableSpotlightActionStateParams
{
public:
	class ForceFeedbackEffect*                                   LightbeamFocusFeedbackEffect;                      // 0x58(0x8)
	class UClass*                                                FocusBeamCameraShake;                              // 0x60(0x8)
	class UClass*                                                FocusBeamInputId;                                  // 0x68(0x8)
	class CurveFloat*                                            SpotlightStateChangeCurve;                         // 0x70(0x8)
};


// Size 0x20
struct AllianceStatusChangedNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
};


// Size 0x30
struct FortWaveCrewCompletedTelemetryEvent
{
public:
	struct Guid                                                  EncounteredObjectId;                               // 0x0(0x10)
	int                                                          FortWaveIndex;                                     // 0x10(0x4)
	int                                                          TotalFortWaves;                                    // 0x14(0x4)
	struct Guid                                                  CrewId;                                            // 0x18(0x10)
	struct FName                                                 FortType;                                          // 0x28(0x8)
};


// Size 0x28
struct AthenaAnimationCrouchingThirdPersonAnimData
{
public:
	class BlendSpace*                                            CrouchBlendSpace;                                  // 0x0(0x8)
	class AnimSequence*                                          CrouchFallbackAnim;                                // 0x8(0x8)
	class AnimSequence*                                          Turn90Right;                                       // 0x10(0x8)
	class AnimSequence*                                          Turn90Left;                                        // 0x18(0x8)
	class AnimSequence*                                          TurnOut;                                           // 0x20(0x8)
};


// Size 0x1
struct MeleeAttackHitResponses
{
public:
	bool                                                         DecalsParticlesAudio;                              // 0x0(0x1)
	bool                                                         Animation;                                         // 0x0(0x1)
	bool                                                         CameraShake;                                       // 0x0(0x1)
	bool                                                         GamepadRumble;                                     // 0x0(0x1)
	bool                                                         HitIndicator;                                      // 0x0(0x1)
};


// Size 0x4
struct AthenaAnimationDebugTrackingParams
{
public:
	bool                                                         TrackObjectActive;                                 // 0x0(0x1)
	bool                                                         TrackOverlayState;                                 // 0x1(0x1)
	bool                                                         TrackActiveAnimations;                             // 0x2(0x1)
	bool                                                         TrackOverlayFlags;                                 // 0x3(0x1)
};


// Size 0x4
struct EventCurseChangeSailHeight
{
public:
	float                                                        Duration;                                          // 0x0(0x4)
};


// Size 0x40
struct DistributedGuildActivityMessage
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct FString                                               CreatedAtUtc;                                      // 0x10(0x10)
	struct FString                                               Type;                                              // 0x20(0x10)
	struct FString                                               payload;                                           // 0x30(0x10)
};


// Size 0xb8
struct CustomTriggerData
{
public:
	class TriggerBase*                                           TriggerObject;                                     // 0x0(0x8)
	map                                                          EntitiesToTrigger;                                 // 0x8(0x50)
	map                                                          ItemsToTrigger;                                    // 0x58(0x50)
	bool                                                         DetectingPlayers;                                  // 0xa8(0x1)
	bool                                                         DetectingShips;                                    // 0xa9(0x1)
	bool                                                         DetectingEnemies;                                  // 0xaa(0x1)
	class TriggerCollisionHelper*                                CollisionHelper;                                   // 0xb0(0x8)
};


// Size 0x8
struct PortableHarpoonProjectileReplicateState
{
public:
	uint32                                                       ChangeCounter;                                     // 0x0(0x4)
	char                                                         State;                                             // 0x4(0x1)
};


// Size 0x10
struct EventPlayerCharacterJoined
{
public:
	class Actor*                                                 AthenaCharacter;                                   // 0x0(0x8)
	bool                                                         IsOnFerry;                                         // 0x8(0x1)
};


// Size 0x10
struct TaleAvailableForCancel
{
public:
	class VoyageDescDataAsset*                                   TaleData;                                          // 0x0(0x8)
	class VoyageProposalDesc*                                    TaleProposalDesc;                                  // 0x8(0x8)
};


// Size 0x18
struct PlayerBuriedItemServiceMapBundlePlacedOnTableEvent
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x10(0x8)
};


// Size 0x18
struct MaterialAnimatorAnimationEntry
{
public:
	struct FName                                                 AnimationName;                                     // 0x0(0x8)
	struct FName                                                 NextAnimationName;                                 // 0x8(0x8)
	class CurveFloat*                                            AnimationCurve;                                    // 0x10(0x8)
};


// Size 0x70
struct BootFlowWhatsNewArticle
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	struct FString                                               Description;                                       // 0x10(0x10)
	struct FString                                               HeroImage;                                         // 0x20(0x10)
	struct FString                                               GridImage;                                         // 0x30(0x10)
	struct FString                                               GridPrimaryDescription;                            // 0x40(0x10)
	struct FString                                               GridSecondaryDescription;                          // 0x50(0x10)
	struct FString                                               DescriptionTimes;                                  // 0x60(0x10)
};


// Size 0x40
struct PioneerProgressMessage
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct Guid                                                  PlayerGameId;                                      // 0x10(0x10)
	struct FString                                               ObjectiveKey;                                      // 0x20(0x10)
	int64                                                        Value;                                             // 0x30(0x8)
	struct DateTime                                              DateTimeStampUtc;                                  // 0x38(0x8)
};


// Size 0x20
struct DestroyingUnsafeWreckEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	struct Guid                                                  CrewId;                                            // 0xc(0x10)
	bool                                                         IsCustomWreck;                                     // 0x1c(0x1)
};


// Size 0x4
struct EventCharacterStartedDrowning
{
public:
	float                                                        TimeTillDrown;                                     // 0x0(0x4)
};


// Size 0x8
struct EventShipDestroyed
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x1
struct EventFaunaAnimationAgitated
{
public:
	bool                                                         Agitated;                                          // 0x0(0x1)
};


// Size 0x60
struct RequestCachingOfShipPreviewLoadoutsEvent
{
public:
	TArray<String>                                               Ids;                                               // 0x0(0x10)
	TArray<String>                                               Names;                                             // 0x10(0x10)
	TArray<String>                                               DamageStates;                                      // 0x20(0x10)
	TArray<String>                                               OwnerUserIds;                                      // 0x30(0x10)
	TArray<String>                                               OwnerPirateIds;                                    // 0x40(0x10)
	TArray<String>                                               Signatures;                                        // 0x50(0x10)
};


// Size 0x38
struct QuestVariableTransform
{
public:
	struct FName                                                 SocketName;                                        // 0x30(0x8)
};


// Size 0x3c
struct TreasureMapWidgetText
{
public:
	float                                                        Scale;                                             // 0x1c(0x4)
	bool                                                         CutoutTextStyle;                                   // 0x20(0x1)
	bool                                                         ShouldStrikethroughOnStart;                        // 0x21(0x1)
	float                                                        StrikethroughThickness;                            // 0x24(0x4)
	float                                                        StrikethroughOffset;                               // 0x28(0x4)
	struct LinearColor                                           StrikethroughColor;                                // 0x2c(0x10)
};


// Size 0x18
struct AchievementSailCloseToShipWithoutFiring
{
public:
	float                                                        RangeToRemainWithinInMetres;                       // 0x0(0x4)
	float                                                        DistanceToTravelInMetres;                          // 0x4(0x4)
};


// Size 0x30
struct ConfigurationComboAndTrigger
{
public:
	TArray<int>                                                  RequiredConfigurationCombo;                        // 0x0(0x10)
	class Actor*                                                 TriggerToActivate;                                 // 0x10(0x8)
	TArray<class Actor*>                                         TriggeredActionMechanisms;                         // 0x18(0x10)
	char                                                         ActivatedMechanismType;                            // 0x28(0x1)
};


// Size 0x18
struct EventSetCrewProgressOverride
{
public:
	class UClass*                                                ProgressId;                                        // 0x0(0x8)
	struct Guid                                                  CrewId;                                            // 0x8(0x10)
};


// Size 0x18
struct AIRowboatEncounterSpec
{
public:
	struct Vector                                                EncounterLocation;                                 // 0x0(0xc)
	class AIRowboatEncounterDefinition*                          EncounterDefinition;                               // 0x10(0x8)
};


// Size 0x40
struct NotesManagementRemoteServiceAddNoteScheduleModel
{
public:
	struct Guid                                                  NoteId;                                            // 0x0(0x10)
	struct DateTime                                              ActiveFrom;                                        // 0x10(0x8)
	struct DateTime                                              ActiveTo;                                          // 0x18(0x8)
	TArray<String>                                               CompletionEventIds;                                // 0x20(0x10)
	struct FString                                               RewardId;                                          // 0x30(0x10)
};


// Size 0x1c
struct CreateFogBankGameServerRequestModel
{
public:
	struct Vector2D                                              Position;                                          // 0x0(0x8)
	float                                                        Density;                                           // 0x8(0x4)
	struct Vector                                                SizeInKm;                                          // 0xc(0xc)
	float                                                        FadeDuration;                                      // 0x18(0x4)
};


// Size 0x10
struct PortalSpawningInfo
{
public:
	uint32                                                       ResourceId;                                        // 0x0(0x4)
	class PortalLocatorActor*                                    Locator;                                           // 0x8(0x8)
};


// Size 0x28
struct PlayFabPartyNetworkStats
{
public:
	uint64                                                       PingTimeToRelayServerInMs;                         // 0x0(0x8)
	uint64                                                       SentPackets;                                       // 0x8(0x8)
	uint64                                                       RetriedPackets;                                    // 0x10(0x8)
	uint64                                                       DroppedPackets;                                    // 0x18(0x8)
	uint64                                                       ReceivedPackets;                                   // 0x20(0x8)
};


// Size 0x10
struct SpecificEntitlementsRequestModel
{
public:
	TArray<String>                                               EntitlementIds;                                    // 0x0(0x10)
};


// Size 0x14
struct EmblemRemoteCriteriaProgress
{
public:
	struct FName                                                 StatName;                                          // 0x0(0x8)
	uint32                                                       Value;                                             // 0x8(0x4)
	uint32                                                       Threshold;                                         // 0xc(0x4)
	bool                                                         IsCompleted;                                       // 0x10(0x1)
};


// Size 0x14
struct IslandLocationVerifierResult
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct Vector                                                AdjustedLocation;                                  // 0x4(0xc)
	int                                                          ResultCode;                                        // 0x10(0x4)
};


// Size 0xc
struct TrinketIconMaterialParamOverride
{
public:
	struct FName                                                 ParameterName;                                     // 0x0(0x8)
	float                                                        ParameterValue;                                    // 0x8(0x4)
};


// Size 0x18
struct CrewShipEntry
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class Actor*                                                 Ship;                                              // 0x10(0x8)
};


// Size 0x18
struct FeatureLockedAIShipBattles
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x0(0xc)
	class AIShipBattlesDataAsset*                                BattlesData;                                       // 0x10(0x8)
};


// Size 0x18
struct RequestSilverEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class WieldableItem*                                         WieldableItemSold;                                 // 0x10(0x8)
};


// Size 0x18
struct RevealableSceneMapping
{
public:
	class UClass*                                                SceneType;                                         // 0x0(0x8)
	struct LinearColor                                           MaterialTint;                                      // 0x8(0x10)
};


// Size 0x10
struct NavigationOptions
{
public:
	int                                                          UpKeyID;                                           // 0x0(0x4)
	int                                                          DownKeyID;                                         // 0x4(0x4)
	int                                                          LeftKeyID;                                         // 0x8(0x4)
	int                                                          RightKeyID;                                        // 0xc(0x4)
};


// Size 0x18
struct BalanceableWalkwayAnimationsThirdPerson
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          SlideAction;                                       // 0x8(0x8)
	class BlendSpace*                                            BlendSpace;                                        // 0x10(0x8)
};


// Size 0x10
struct RequestClearClothingCategoryPiratePreviewEvent
{
public:
	TArray<class Class*>                                         ClothingCategories;                                // 0x0(0x10)
};


// Size 0x8
struct ChargedAttackProjectileWeights
{
public:
	float                                                        ChargeTime;                                        // 0x0(0x4)
	float                                                        Weight;                                            // 0x4(0x4)
};


// Size 0x10
struct ClientPlayerNewLevelTelemetryEvent
{
public:
	uint32                                                       PlayerLevel;                                       // 0x0(0x4)
	uint32                                                       PreviousPlayerLevel;                               // 0x4(0x4)
	struct FName                                                 CompanyId;                                         // 0x8(0x8)
};


// Size 0x18
struct ClientEndEngagementMessageTelemetryEvent
{
public:
	float                                                        ScreenDuration;                                    // 0x0(0x4)
	struct FString                                               EndedScreen;                                       // 0x8(0x10)
};


// Size 0x18
struct SpawnActorPerformanceStatsTelemetryFragmentInput
{
public:
	struct FString                                               ActorClassName;                                    // 0x0(0x10)
	float                                                        ActorSpawnTime;                                    // 0x10(0x4)
};


// Size 0x40
struct JettisonedStorageContainerHandle
{
public:
	class Actor*                                                 StorageContainer;                                  // 0x20(0x8)
};


// Size 0x18
struct VotersByOption
{
public:
	int                                                          VoteOption;                                        // 0x0(0x4)
	TArray<class Object*>                                        Voters;                                            // 0x8(0x10)
};


// Size 0x20
struct RequestShipPreviewUpdateEvent
{
public:
	struct FString                                               ShipId;                                            // 0x0(0x10)
	struct FString                                               ShipType;                                          // 0x10(0x10)
};


// Size 0x70
struct SeaFortAlignmentFlagPoleAudioParams
{
public:
	class WwiseObjectPoolWrapper*                                WwisePool;                                         // 0x0(0x8)
	struct FName                                                 WwiseEmitterName;                                  // 0x8(0x8)
	class WwiseEvent*                                            RaiseFlagStartEvent;                               // 0x50(0x8)
	class WwiseEvent*                                            RaiseFlagCompletedEvent;                           // 0x58(0x8)
	class WwiseEvent*                                            LowerFlagStartEvent;                               // 0x60(0x8)
	class WwiseEvent*                                            LowerFlagCompletedEvent;                           // 0x68(0x8)
};


// Size 0x60
struct PlayerHeartbeatTelemetryEvent
{
public:
	struct FString                                               MovementMode;                                      // 0x0(0x10)
	struct FString                                               LocationOnShip;                                    // 0x10(0x10)
	float                                                        CurrentHealth;                                     // 0x20(0x4)
	int                                                          ActiveTime;                                        // 0x24(0x4)
	int                                                          IdleTime;                                          // 0x28(0x4)
	int                                                          CurrentStateTime;                                  // 0x2c(0x4)
	int                                                          MoveTimeStampReset;                                // 0x30(0x4)
	int                                                          MoveTimeStampExpired;                              // 0x34(0x4)
	int                                                          MoveDiscrepancyCorrections;                        // 0x38(0x4)
	float                                                        MoveCorrectionAvgSizeCm;                           // 0x3c(0x4)
	float                                                        MoveCorrectionMaxSizeCm;                           // 0x40(0x4)
	float                                                        MoveCorrectionSizeStdDevCm;                        // 0x44(0x4)
	int                                                          MoveModeCorrections;                               // 0x48(0x4)
	int                                                          AverageNetActorConsiderCount;                      // 0x4c(0x4)
	int                                                          AverageNetActorEvaluatedCount;                     // 0x50(0x4)
	int                                                          AverageNetActorPushModelDormantCount;              // 0x54(0x4)
	int                                                          AverageNetActorDormantCount;                       // 0x58(0x4)
};


// Size 0xa8
struct EntitlementItem
{
public:
	struct FText                                                 Description;                                       // 0x0(0x38)
	bool                                                         Owned;                                             // 0x38(0x1)
	struct StringAssetReference                                  PreviewImageUrl;                                   // 0x40(0x10)
	struct StringAssetReference                                  ThumbnailImageUrl;                                 // 0x50(0x10)
	struct FText                                                 DisplayName;                                       // 0x60(0x38)
	struct FString                                               Id;                                                // 0x98(0x10)
};


// Size 0x38
struct CurrencyGrantedNetworkEvent
{
public:
	char                                                         CurrencyId;                                        // 0x18(0x1)
	uint32                                                       Amount;                                            // 0x1c(0x4)
	struct FName                                                 EmissaryAffiliation;                               // 0x20(0x8)
	float                                                        EmissaryMultiplier;                                // 0x28(0x4)
	struct FName                                                 RewardId;                                          // 0x2c(0x8)
};


// Size 0x20
struct SeaOfThievesOnDemandTreasurePopupConversionPair
{
public:
	struct StringAssetReference                                  From;                                              // 0x0(0x10)
	struct StringAssetReference                                  To;                                                // 0x10(0x10)
};


// Size 0x20
struct ItemLoadoutSlot
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
	TArray<class ItemInfo*>                                      Items;                                             // 0x8(0x10)
	int                                                          Capacity;                                          // 0x18(0x4)
};


// Size 0x38
struct WaitForLoadingScreenTelemetryEvent
{
public:
	struct FString                                               OldStateName;                                      // 0x0(0x10)
	struct FString                                               NewStateName;                                      // 0x10(0x10)
	float                                                        OldStateDuration;                                  // 0x20(0x4)
	struct FString                                               ActiveExperiments;                                 // 0x28(0x10)
};


// Size 0x28
struct VolcanoActorStateData
{
public:
	char                                                         State;                                             // 0x20(0x1)
};


// Size 0x10
struct NarrationRequestEvent
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0x10
struct EventPlayerEnteredSittingState
{
public:
	class UClass*                                                SeatAnimationId;                                   // 0x0(0x8)
	class Object*                                                SeatObject;                                        // 0x8(0x8)
};


// Size 0x10
struct MessageInABottleVoyageEntry
{
public:
	struct FName                                                 FeatureFlag;                                       // 0x0(0x8)
	class VoyageRecipeDataAsset*                                 VoyageRecipe;                                      // 0x8(0x8)
};


// Size 0x10
struct GuildInvitesSentRequestEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
};


// Size 0x10
struct ReportedPlayerResponse
{
public:
	struct FString                                               ReferenceCode;                                     // 0x0(0x10)
};


// Size 0x110
struct LaunchableActiveProjectileData
{
public:
	struct LaunchableProjectileData                              Projectile;                                        // 0x0(0xe0)
};


// Size 0x20
struct SpeechAccessibilitySetting
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
	struct FString                                               Value;                                             // 0x10(0x10)
};


// Size 0x8
struct EventReceiveMountpointComponentState
{
public:
	class MountpointComponent*                                   Source;                                            // 0x0(0x8)
};


// Size 0x10
struct FaunaAnimationTurningStructure
{
public:
	class AnimSequence*                                          TurnLeft;                                          // 0x0(0x8)
	class AnimSequence*                                          TurnRight;                                         // 0x8(0x8)
};


// Size 0x4
struct EventPlayerChangedTableMapZoom
{
public:
	float                                                        ZoomDelta;                                         // 0x0(0x4)
};


// Size 0x3c
struct AthenaAnimationObjectTargetingOptions
{
public:
	char                                                         ArmSelection;                                      // 0x0(0x1)
	float                                                        UpperClampTargetingAngle;                          // 0x4(0x4)
	float                                                        LowerClampTargetingAngle;                          // 0x8(0x4)
	float                                                        ShoulderInfluenceUpper;                            // 0xc(0x4)
	float                                                        ShoulderInfluenceLower;                            // 0x10(0x4)
	struct Vector                                                VirtualPivotOffsetUpper;                           // 0x14(0xc)
	struct Vector                                                VirtualPivotOffsetLower;                           // 0x20(0xc)
	bool                                                         LockHandOrientation;                               // 0x2c(0x1)
	struct Vector                                                VirtualPivotOffsetLerped;                          // 0x30(0xc)
};


// Size 0x20
struct UILiveCampaignDataErrorTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               ErrorStack;                                        // 0x10(0x10)
};


// Size 0x20
struct CargoRunCratePickedUpTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	struct FString                                               Rarity;                                            // 0x10(0x10)
};


// Size 0x10
struct GuildSessionChangedEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
};


// Size 0x100
struct AthenaAnimationAsyncLoadedLocomotionAnimations
{
public:
	assetobject                                                  Locomotion1;                                       // 0x0(0x20)
	assetobject                                                  Locomotion2;                                       // 0x20(0x20)
	assetobject                                                  Locomotion3;                                       // 0x40(0x20)
	assetobject                                                  Locomotion4;                                       // 0x60(0x20)
	assetobject                                                  LocomotionTurningLeft;                             // 0x80(0x20)
	assetobject                                                  LocomotionTurningRight;                            // 0xa0(0x20)
	assetobject                                                  LocomotionOutOf;                                   // 0xc0(0x20)
	assetobject                                                  LocomotionSwimming;                                // 0xe0(0x20)
};


// Size 0x8
struct PlayerMapsRegisteredEvent
{
public:
	class Actor*                                                 Map;                                               // 0x0(0x8)
};


// Size 0x38
struct QuestTableExperiencesUpdatedTelemetryEvent
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct FString                                               Status;                                            // 0x8(0x10)
	double                                                       RequestDurationSeconds;                            // 0x18(0x8)
	int                                                          NumDiscoverTiles;                                  // 0x20(0x4)
	int                                                          NumLimitedVoyages;                                 // 0x24(0x4)
	int                                                          NumInfoDiscoverTiles;                              // 0x28(0x4)
	int                                                          NumLimitedInfoDiscoverTiles;                       // 0x2c(0x4)
	int                                                          NumQuestDiscoverTiles;                             // 0x30(0x4)
	int                                                          NumLimitedQuestDiscoverTiles;                      // 0x34(0x4)
};


// Size 0x78
struct ITavernBoardMap
{
public:
	TArray<String>                                               Creators;                                          // 0x0(0x10)
	struct FString                                               IconPath;                                          // 0x10(0x10)
	float                                                        IconRotation;                                      // 0x20(0x4)
	struct Guid                                                  Id;                                                // 0x24(0x10)
	bool                                                         IsAvailable;                                       // 0x34(0x1)
	bool                                                         IsLocked;                                          // 0x35(0x1)
	TArray<String>                                               LockedDescriptions;                                // 0x38(0x10)
	struct FString                                               Name;                                              // 0x48(0x10)
	char                                                         WorldRegion;                                       // 0x58(0x1)
};


// Size 0x8
struct EventAmmoChanged
{
public:
	int                                                          Ammo;                                              // 0x0(0x4)
	char                                                         AmmoType;                                          // 0x4(0x1)
};


// Size 0x38
struct EventPlayerEnteredIslandVicinityBoxedRpc
{
public:
	class Actor*                                                 Player;                                            // 0x18(0x8)
	struct FName                                                 IslandName;                                        // 0x28(0x8)
};


// Size 0x28
struct FirstInteractableTelemetryEvent
{
public:
	float                                                        StartTime;                                         // 0x0(0x4)
	float                                                        FirstSpinnerShownTime;                             // 0x4(0x4)
	float                                                        StartEntryLevelLoadTime;                           // 0x8(0x4)
	float                                                        StartLegalSplashTime;                              // 0xc(0x4)
	float                                                        EndLegalSplashTime;                                // 0x10(0x4)
	float                                                        FirstInteractableTime;                             // 0x14(0x4)
	struct FString                                               ActiveExperiments;                                 // 0x18(0x10)
};


// Size 0x28
struct QuestDesc
{
public:
	struct FString                                               Title;                                             // 0x8(0x10)
	bool                                                         IsEmergent;                                        // 0x18(0x1)
	struct FName                                                 IslandName;                                        // 0x1c(0x8)
};


// Size 0x8
struct PreTeleportShipToTunnelEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x8
struct EventShipSpawnLocationCreated
{
public:
	class ShipSpawnLocation*                                     SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x20
struct MerchantCrateAllocatedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	struct FString                                               Rarity;                                            // 0x10(0x10)
};


// Size 0x28
struct HttpClientComponentResponseEvent
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct FString                                               Body;                                              // 0x8(0x10)
	struct FString                                               Id;                                                // 0x18(0x10)
};


// Size 0x98
struct VfxSpawner
{
public:
	class Object*                                                EmitterTemplate;                                   // 0x8(0x8)
	class SceneComponent*                                        AttachToComponent;                                 // 0x10(0x8)
	class SceneComponent*                                        SocketOwnerComponent;                              // 0x18(0x8)
	class Object*                                                Owner;                                             // 0x20(0x8)
};


// Size 0x8
struct GuildDistinctionLevelChangedEvent
{
public:
	int                                                          OldGuildDistinctionLevel;                          // 0x0(0x4)
	int                                                          CurrentGuildDistinctionLevel;                      // 0x4(0x4)
};


// Size 0x4
struct GuildInvitesReceivedRequestEvent
{
public:
	int                                                          InviteReturnCount;                                 // 0x0(0x4)
};


// Size 0x14
struct WaitingToSpawnActionStateParams
{
public:
	float                                                        ClientStartedTimeout;                              // 0x0(0x4)
	float                                                        ClientConditionsCompleteTimeout;                   // 0x4(0x4)
	float                                                        ScreenFadeInTime;                                  // 0x8(0x4)
	float                                                        TeleportCompleteTimeout;                           // 0xc(0x4)
	float                                                        TeleportNetRelevancyTimeout;                       // 0x10(0x4)
};


// Size 0x28
struct AthenaAnimationObjectComplexOneShot
{
public:
	class AnimSequence*                                          WarmUp;                                            // 0x0(0x8)
	class AnimSequence*                                          WarmUpFromBlock;                                   // 0x8(0x8)
	class AnimSequence*                                          Action;                                            // 0x10(0x8)
	class AnimSequence*                                          Recover;                                           // 0x18(0x8)
	class AnimSequence*                                          HeavyAttackStunRecover;                            // 0x20(0x8)
};


// Size 0x1c
struct SeaFortStateChangeTelemetryEvent
{
public:
	struct Guid                                                  FortId;                                            // 0x0(0x10)
	struct FName                                                 FortIslandName;                                    // 0x10(0x8)
	char                                                         OldState;                                          // 0x18(0x1)
	char                                                         NewState;                                          // 0x19(0x1)
};


// Size 0x10
struct ClothingChestEquipEmoteEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
	int                                                          Index;                                             // 0x8(0x4)
};


// Size 0x10
struct CrewCancelledPrimaryVoyageEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x10
struct ShipExitedStormEvent
{
public:
	class Actor*                                                 Storm;                                             // 0x0(0x8)
	class Actor*                                                 Ship;                                              // 0x8(0x8)
};


// Size 0x10
struct AchievementUnlockedEvent
{
public:
	struct FString                                               AchievementId;                                     // 0x0(0x10)
};


// Size 0x18
struct DetailAppearenceMaterialDesc
{
public:
	struct StringAssetReference                                  Material;                                          // 0x0(0x10)
	int                                                          MaterialIndex;                                     // 0x10(0x4)
};


// Size 0x28
struct PendingInviteViewModel
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
};


// Size 0x38
struct UnlockedShopOffersThroughAccoladesAndMilestonesModel
{
public:
	struct FString                                               Type;                                              // 0x0(0x10)
	struct FString                                               SourceId;                                          // 0x10(0x10)
	struct Guid                                                  OfferId;                                           // 0x20(0x10)
	struct DateTime                                              UnlockedAt;                                        // 0x30(0x8)
};


// Size 0xc0
struct AthenaAnimationCrouching
{
public:
	class Actor*                                                 CachedPlayerCharacter;                             // 0x0(0x8)
};


// Size 0x30
struct SendShipStatsServerRpc
{
public:
	class Controller*                                            Controller;                                        // 0x18(0x8)
	struct Guid                                                  SpottedShipId;                                     // 0x20(0x10)
};


// Size 0xe0
struct ChestEntitlementViewModel
{
public:
	char                                                         Action;                                            // 0x0(0x1)
	struct FString                                               ItemDesc;                                          // 0x8(0x10)
	struct FString                                               Name;                                              // 0x18(0x10)
	struct FString                                               ThumbnailImageUrl;                                 // 0x28(0x10)
	struct FString                                               PreviewImageUrl;                                   // 0x38(0x10)
	struct FString                                               Description;                                       // 0x48(0x10)
	int                                                          SlotId;                                            // 0x58(0x4)
	struct FString                                               Category;                                          // 0x60(0x10)
	struct FString                                               EmoteBackgroundImageUrl;                           // 0x70(0x10)
	struct FString                                               EmoteIconImageUrl;                                 // 0x80(0x10)
	bool                                                         DoesPlayerOwnEntitlement;                          // 0x90(0x1)
	struct FString                                               Cost;                                              // 0x98(0x10)
	bool                                                         IsLocked;                                          // 0xa8(0x1)
	TArray<String>                                               PreviewDescriptions;                               // 0xb0(0x10)
	TArray<String>                                               LockedDescriptions;                                // 0xc0(0x10)
	struct FString                                               Identifier;                                        // 0xd0(0x10)
};


// Size 0x10
struct ServerTelemetryConfigurationSettings
{
public:
	float                                                        PlayerHeartbeatInterval;                           // 0x0(0x4)
	bool                                                         TelemetryEnabled_ItemEquip;                        // 0x4(0x1)
	bool                                                         TelemetryEnabled_ItemUsageEnd;                     // 0x5(0x1)
	bool                                                         TelemetryEnabled_ItemUsageStart;                   // 0x6(0x1)
	bool                                                         TelemetryEnabled_ObjectUsageEnd;                   // 0x7(0x1)
	bool                                                         TelemetryEnabled_ObjectUsageStart;                 // 0x8(0x1)
	bool                                                         TelemetryEnabled_PlayerAction;                     // 0x9(0x1)
	bool                                                         TelemetryEnabled_PlayerChangedLoadout;             // 0xa(0x1)
	bool                                                         TelemetryEnabled_PlayerChangedShipLoadout;         // 0xb(0x1)
	bool                                                         TelemetryEnabled_PlayerHeartbeat;                  // 0xc(0x1)
	bool                                                         TelemetryEnabled_PlayerPerformedEmote;             // 0xd(0x1)
};


// Size 0x24
struct CrewCompletedTaleEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
	struct Guid                                                  CrewId;                                            // 0x10(0x10)
	bool                                                         DontNotifyParticipants;                            // 0x20(0x1)
};


// Size 0x1
struct EventWithinRainZoneChanged
{
public:
	bool                                                         IsWithinRainZone;                                  // 0x0(0x1)
};


// Size 0x20
struct ServicesConnectionServerResultTelemetryEvent
{
public:
	char                                                         Result;                                            // 0x0(0x1)
	double                                                       TimeInSeconds;                                     // 0x8(0x8)
	struct FString                                               Reason;                                            // 0x10(0x10)
};


// Size 0x20
struct MessageInABottlePremadeVoyageEntry
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	TArray<class VoyageDescDataAsset*>                           PremadeVoyages;                                    // 0x10(0x10)
};


// Size 0x20
struct QuestMerchantCrateAllocatedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	struct FString                                               Rarity;                                            // 0x10(0x10)
};


// Size 0x18
struct RevealRequirementContext
{
public:
	class Object*                                                Revealable;                                        // 0x0(0x8)
	class Object*                                                Revealer;                                          // 0x8(0x8)
	class Object*                                                WorldContextObject;                                // 0x10(0x8)
};


// Size 0x8
struct EventSinkingShipTeleportTime
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x8
struct EventPlayerCharacterInPuzzleVaultChanged
{
public:
	bool                                                         IsInPuzzleVault;                                   // 0x0(0x1)
	float                                                        CurrentWaterLevel;                                 // 0x4(0x4)
};


// Size 0x20
struct PurchaseCatalogOfferRequestUIEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
	struct Guid                                                  CatalogOfferId;                                    // 0x10(0x10)
};


// Size 0x28
struct TornMapTearingParams
{
public:
	int                                                          NumPieces;                                         // 0x0(0x4)
	struct StringAssetReference                                  VisibilityMask1;                                   // 0x8(0x10)
	struct StringAssetReference                                  VisibilityMask2;                                   // 0x18(0x10)
};


// Size 0x18
struct ReapersTributeShipCrewOwnershipChanged
{
public:
	class Actor*                                                 ReapersTributeShipActor;                           // 0x0(0x8)
	struct Guid                                                  ControllingCrewId;                                 // 0x8(0x10)
};


// Size 0x30
struct QuestVariable
{
public:
	struct FName                                                 ParamName;                                         // 0x18(0x8)
	interface                                                    Expression;                                        // 0x20(0x10)
};


// Size 0x8
struct CreatorCrewSettings
{
public:
	float                                                        UpdateStreamersPollIntervalSeconds;                // 0x0(0x4)
	float                                                        UpdateStreamersRateLimitSeconds;                   // 0x4(0x4)
};


// Size 0x10
struct StaggerModifiers
{
public:
	float                                                        StaggerSpeedModifierX;                             // 0x0(0x4)
	float                                                        StaggerSpeedModifierY;                             // 0x4(0x4)
	float                                                        StaggerAmplitudeModifierX;                         // 0x8(0x4)
	float                                                        StaggerAmplitudeModifierY;                         // 0xc(0x4)
};


// Size 0x10
struct EventStartWield
{
public:
	interface                                                    Object;                                            // 0x0(0x10)
};


// Size 0x20
struct EventApplyStatusPlayerCurse
{
public:
	struct Status                                                Status;                                            // 0x8(0x18)
};


// Size 0x20
struct ClientInfoTelemetryEvent
{
public:
	struct FString                                               OSVersion;                                         // 0x0(0x10)
	struct FString                                               OSSubVersion;                                      // 0x10(0x10)
};


// Size 0x50
struct ServerTenancyTelemetryFragment
{
public:
	struct FString                                               VmId;                                              // 0x0(0x10)
	struct FString                                               InstanceId;                                        // 0x10(0x10)
	struct FString                                               ClusterId;                                         // 0x20(0x10)
	struct FString                                               GsiId;                                             // 0x30(0x10)
	struct FString                                               ProcessorType;                                     // 0x40(0x10)
};


// Size 0x68
struct LiquidLauncherCollisionsParams
{
public:
	float                                                        CollisionCapsuleRadius;                            // 0x0(0x4)
	float                                                        LiquidPointTravelDistance;                         // 0x4(0x4)
	float                                                        InheritOwnerForwardVelocityScalar;                 // 0x8(0x4)
	float                                                        LiquidPointTravelTime;                             // 0xc(0x4)
	float                                                        LiquidPointFireRate;                               // 0x10(0x4)
	float                                                        MaxDistanceSquaredBetweenPointsBeforeDiscontinuity; // 0x14(0x4)
	int                                                          MaxNumOfHitsProccessedPerLiquidCollision;          // 0x18(0x4)
	struct Vector                                                LiquidOriginOffset;                                // 0x1c(0xc)
	struct Rotator                                               LiquidOrientationOffset;                           // 0x28(0xc)
	class CurveFloat*                                            LiquidPointsTravelCurve;                           // 0x38(0x8)
	char                                                         CollisionChannel;                                  // 0x40(0x1)
	struct CollisionResponseContainer                            CollisionResponse;                                 // 0x41(0x20)
};


// Size 0x8
struct EventPlayerStartedSwimming
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0x8
struct ClothingChestUnequipDisguiseEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x10
struct LaunchableProjectileBlockedTelemetry
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
};


// Size 0x28
struct LightningImpact
{
public:
	int64                                                        TimeInTicks;                                       // 0x0(0x8)
	struct Vector2D                                              Location;                                          // 0x8(0x8)
	class Actor*                                                 AttachActor;                                       // 0x10(0x8)
	class AthenaCharacter*                                       TargetCharacter;                                   // 0x18(0x8)
	bool                                                         TargetedHighPriorityTarget;                        // 0x20(0x1)
};


// Size 0x78
struct LaunchableProjectileCreator
{
public:
	class PrimitiveComponent*                                    AimBase;                                           // 0x50(0x8)
	TArray<class Actor*>                                         IgnoredActors;                                     // 0x58(0x10)
	TArray<class ActorComponent*>                                IgnoredComponents;                                 // 0x68(0x10)
};


// Size 0xc
struct CreateStormGameServerRequestModel
{
public:
	struct Vector2D                                              StormCentre;                                       // 0x0(0x8)
	float                                                        StormStrength;                                     // 0x8(0x4)
};


// Size 0x28
struct DeveloperTelemetryPayload
{
public:
	struct FString                                               EventTag;                                          // 0x0(0x10)
	struct JsonObjectWrapper                                     Json;                                              // 0x10(0x18)
};


// Size 0x28
struct VoyageDiscardedTelemetryEvent
{
public:
	struct FString                                               VoyageRecipeAsset;                                 // 0x0(0x10)
	struct FString                                               CompanyId;                                         // 0x10(0x10)
	int                                                          VoyageRank;                                        // 0x20(0x4)
};


// Size 0x1
struct EventPetNameTextboxFocusRequest
{
public:
	bool                                                         ShouldFocusPetNameTextbox;                         // 0x0(0x1)
};


// Size 0x18
struct ReduceServerCapacityMessage
{
public:
	struct Guid                                                  ServerId;                                          // 0x0(0x10)
	char                                                         Reason;                                            // 0x10(0x1)
	int                                                          Value;                                             // 0x14(0x4)
};


// Size 0x30
struct ShipPreviewData
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
	struct FString                                               Name;                                              // 0x10(0x10)
	struct FString                                               DamageState;                                       // 0x20(0x10)
};


// Size 0x30
struct CannonStateData
{
public:
	struct FString                                               LoadedItemId;                                      // 0x20(0x10)
};


// Size 0x10
struct LinkedPsnIdModel
{
public:
	struct FString                                               PsnId;                                             // 0x0(0x10)
};


// Size 0x20
struct FaunaAnimationSnakeBiteStructure
{
public:
	class AnimSequence*                                          BiteStanceIn;                                      // 0x0(0x8)
	class AnimSequence*                                          BiteStanceOut;                                     // 0x8(0x8)
	class AnimSequence*                                          BiteStanceLoopIdle;                                // 0x10(0x8)
	class AnimSequence*                                          BiteStanceAttack;                                  // 0x18(0x8)
};


// Size 0x20
struct PlayerItemUsageBaseTelemetryFragment
{
public:
	struct FString                                               InputID;                                           // 0x0(0x10)
	struct FString                                               ItemId;                                            // 0x10(0x10)
};


// Size 0x38
struct LoadingTelemetryEvent
{
public:
	struct FString                                               LoadingEvent;                                      // 0x0(0x10)
	struct FString                                               MapName;                                           // 0x10(0x10)
	float                                                        StartTime;                                         // 0x20(0x4)
	float                                                        EndTime;                                           // 0x24(0x4)
	struct FString                                               ActiveExperiments;                                 // 0x28(0x10)
};


// Size 0x118
struct ProjectileWeaponHitScanShotTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	double                                                       ClientSentTimeStamp;                               // 0x10(0x8)
	double                                                       ServerTimeStamp;                                   // 0x18(0x8)
	double                                                       DifferenceInTimeStamps;                            // 0x20(0x8)
	struct FString                                               ClientHitActorTypeName;                            // 0x28(0x10)
	struct FString                                               ClientHitActorSpecificClassName;                   // 0x38(0x10)
	struct FString                                               ServerHitActorTypeName;                            // 0x48(0x10)
	struct FString                                               ServerHitActorSpecificClassName;                   // 0x58(0x10)
	struct FString                                               ShipShooterIsStandingOn;                           // 0x68(0x10)
	struct FString                                               ShipTargetIsStandingOn;                            // 0x78(0x10)
	float                                                        SpeedOfShipShooterIsOn;                            // 0x88(0x4)
	float                                                        SpeedOfShooter;                                    // 0x8c(0x4)
	float                                                        SpeedOfHitActor;                                   // 0x90(0x4)
	float                                                        ShooterLatencyMs;                                  // 0x94(0x4)
	float                                                        HitActorLatencyMs;                                 // 0x98(0x4)
	struct Vector                                                ClientAimPosition;                                 // 0x9c(0xc)
	struct Vector                                                ClientAimDirection;                                // 0xa8(0xc)
	struct Vector                                                ServerAimPosition;                                 // 0xb4(0xc)
	struct Vector                                                ServerAimDirection;                                // 0xc0(0xc)
	bool                                                         IsShooterOnLand;                                   // 0xcc(0x1)
	bool                                                         IsServerHitActorOnLand;                            // 0xcd(0x1)
	bool                                                         IsClientHitActorOnLand;                            // 0xce(0x1)
	float                                                        ClientHitDistance;                                 // 0xd0(0x4)
	float                                                        ServerHitDistance;                                 // 0xd4(0x4)
	float                                                        ClientHitCapsuleCoreOffsetInViewPlane;             // 0xd8(0x4)
	float                                                        DistanceBetweenClientCapsuleAndRewoundCapsule;     // 0xdc(0x4)
	float                                                        AngleBetweenClientCapsuleAndRewoundCapsule;        // 0xe0(0x4)
	float                                                        TimeStampModifier;                                 // 0xe4(0x4)
	bool                                                         IsUseTimeServiceEverywhereFeatureEnabled;          // 0xe8(0x1)
	bool                                                         IsBelieveClientMissesFeatureEnabled;               // 0xe9(0x1)
	bool                                                         IsDisableRewindTimeStampModifierFeatureEnabled;    // 0xea(0x1)
	bool                                                         IsPlayerControllerTicksAfterTimeServiceFeatureEnabled; // 0xeb(0x1)
	bool                                                         IsFixInaccuracySeedMismatchFeatureEnabled;         // 0xec(0x1)
	bool                                                         IsOverrideCharacterInterpolationDistanceWhenAimingFeatureEnabled; // 0xed(0x1)
	bool                                                         IsCharacterMovementOrientProjectileHitVolumeWhenInterpolatingEnabled; // 0xee(0x1)
	bool                                                         IsEvaluateAngleWhenDeterminingWhetherToInterpolateEnabled; // 0xef(0x1)
	bool                                                         IsProjectileFixedTimestepFeatureEnabled;           // 0xf0(0x1)
	bool                                                         IsShipNewTimeServiceEnabled;                       // 0xf1(0x1)
	bool                                                         IsResetTimeServiceBuffersEnabled;                  // 0xf2(0x1)
	bool                                                         IsTickProjectileServiceAfterCharacterMovementOnClientFeatureEnabled; // 0xf3(0x1)
	struct FString                                               DamagerType;                                       // 0xf8(0x10)
	bool                                                         HasInaccuracySeedMismatch;                         // 0x108(0x1)
	bool                                                         SceneRewindSucceeded;                              // 0x109(0x1)
	bool                                                         ServerAndClientAgreedFirstTime_Unimportant;        // 0x10a(0x1)
	bool                                                         ServerAndClientAgreedFirstTime_Important;          // 0x10b(0x1)
	bool                                                         ServerAndClientDisagreedFirstTime_Unimportant;     // 0x10c(0x1)
	bool                                                         ServerAndClientDisagreedFirstTime_Important_NoCorrectionAttempted; // 0x10d(0x1)
	bool                                                         ServerAndClientDisagreedFirstTime_Important_ClientMissBelieved; // 0x10e(0x1)
	bool                                                         ServerAndClientDisagreedFirstTime_Important_RewindEstimation_Corrected; // 0x10f(0x1)
	bool                                                         ServerAndClientDisagreedFirstTime_Important_RewindEstimation_StillDisagrees; // 0x110(0x1)
};


// Size 0x40
struct PlayerSpawnTelemetryEvent
{
public:
	struct FString                                               SpawnPointName;                                    // 0x0(0x10)
	struct FString                                               IslandName;                                        // 0x10(0x10)
	uint32                                                       SpawnCount;                                        // 0x20(0x4)
	char                                                         SpawnType;                                         // 0x24(0x1)
	double                                                       SpawnDuration;                                     // 0x28(0x8)
	int                                                          PlayersCrewSize;                                   // 0x30(0x4)
	double                                                       DistanceToClosestOpponent;                         // 0x38(0x8)
};


// Size 0x10
struct EventShipTopDeckUnblocked
{
public:
	struct Guid                                                  BlockerId;                                         // 0x0(0x10)
};


// Size 0x20
struct ReapersTributeShipMigrationData
{
public:
	class Actor*                                                 ReapersTributeShip;                                // 0x10(0x8)
};


// Size 0x10
struct MaterialInformationAudioData
{
public:
	struct FName                                                 SurfaceSwitch;                                     // 0x0(0x8)
	struct WwiseAudioAcousticSurfaceParams                       Acoustics;                                         // 0x8(0x8)
};


// Size 0x1
struct RequestShipCustomizationChestSwapToSavedLoadoutEvent
{
public:
	char                                                         PossessionsChestType;                              // 0x0(0x1)
};


// Size 0x20
struct RadialActionBindings
{
public:
	struct FName                                                 PrimaryActionKeyBinding;                           // 0x0(0x8)
	struct FName                                                 SecondaryActionKeyBinding;                         // 0x8(0x8)
	struct FName                                                 TertiaryActionKeyBinding;                          // 0x10(0x8)
	struct FName                                                 QuaternaryActionKeyBinding;                        // 0x18(0x8)
};


// Size 0x10
struct UIFrameDurationDataTelemetryFragment
{
public:
	float                                                        Min;                                               // 0x0(0x4)
	float                                                        Max;                                               // 0x4(0x4)
	float                                                        Average;                                           // 0x8(0x4)
	float                                                        StdDeviation;                                      // 0xc(0x4)
};


// Size 0x1
struct EventPlayerViewUnderWaterStateChanged
{
public:
	bool                                                         NewUnderWaterState;                                // 0x0(0x1)
};


// Size 0x40
struct StandingSpyglassAudioParams
{
public:
	class WwiseObjectPoolWrapper*                                WwisePool;                                         // 0x0(0x8)
	struct FName                                                 WwiseEmitterName;                                  // 0x8(0x8)
	class WwiseEvent*                                            OnDockedEvent;                                     // 0x30(0x8)
	class WwiseEvent*                                            UnDockedEvent;                                     // 0x38(0x8)
};


// Size 0x38
struct VoyageBegun
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
};


// Size 0x10
struct RowboatSnapshotV1
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	struct Vector                                                Position;                                          // 0x4(0xc)
};


// Size 0x30
struct QuestTableModalInteractionTelemetryEvent
{
public:
	struct FString                                               ModalId;                                           // 0x0(0x10)
	struct FString                                               OptionSelected;                                    // 0x10(0x10)
	struct FString                                               SessionId;                                         // 0x20(0x10)
};


// Size 0x1
struct ReplyToGuildInviteRequestModel
{
public:
	bool                                                         AcceptInvite;                                      // 0x0(0x1)
};


// Size 0x20
struct MechanismMaterialAnimationContext
{
public:
	class MeshComponent*                                         Mesh;                                              // 0x8(0x8)
	TArray<class MaterialInstanceDynamic*>                       DynamicMaterials;                                  // 0x10(0x10)
};


// Size 0x8
struct EventCharacterStoppedContinuousUse
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
};


// Size 0x8
struct CanShowPrimaryActionButton
{
public:
	bool                                                         CanShow;                                           // 0x4(0x1)
};


// Size 0x40
struct WieldAnimationParams
{
public:
	char                                                         WieldLocation;                                     // 0x0(0x1)
	struct Transform                                             PropOffset;                                        // 0x10(0x30)
};


// Size 0x18
struct CategoryPreviewEntry
{
public:
	class UClass*                                                PreviewCategory;                                   // 0x0(0x8)
	class UClass*                                                ItemCategoryClass;                                 // 0x8(0x8)
	class UClass*                                                PreviewClassType;                                  // 0x10(0x8)
};


// Size 0x58
struct IngestedByKrakenActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           Tentacle;                                          // 0x40(0x14)
};


// Size 0x78
struct MovedByActorActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           MovementSourceActor;                               // 0x40(0x14)
	struct Vector                                                StartLocation;                                     // 0x54(0xc)
	class SceneComponent*                                        TargetComponent;                                   // 0x60(0x8)
	struct Vector                                                TargetRelativeLocation;                            // 0x68(0xc)
};


// Size 0x38
struct AthenaAnimationSpawnBase
{
public:
	class UClass*                                                ObjectId;                                          // 0x0(0x8)
	class AnimSequence*                                          SpawnOnLand;                                       // 0x8(0x8)
	class AnimSequence*                                          SpawnOnShip;                                       // 0x10(0x8)
	class AnimSequence*                                          SpawnSummoned;                                     // 0x18(0x8)
	class AnimSequence*                                          SpawnBoarding;                                     // 0x20(0x8)
	class AnimSequence*                                          SpawnQuickly;                                      // 0x28(0x8)
	class AnimSequence*                                          Despawn;                                           // 0x30(0x8)
};


// Size 0x28
struct SyncLoad
{
public:
	struct FString                                               PackageOrObject;                                   // 0x0(0x10)
	struct FString                                               Outer;                                             // 0x10(0x10)
	double                                                       DurationInSeconds;                                 // 0x20(0x8)
};


// Size 0x10
struct ItemLoadoutCapacity
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
	int                                                          Capacity;                                          // 0x8(0x4)
};


// Size 0x90
struct ShipBaseTelemetryFragment
{
public:
	struct FString                                               ShipObjectId;                                      // 0x0(0x10)
	struct Vector                                                Position;                                          // 0x10(0xc)
	struct Guid                                                  CrewId;                                            // 0x1c(0x10)
	struct Guid                                                  CrewSessionId;                                     // 0x2c(0x10)
	struct Guid                                                  ShipId;                                            // 0x3c(0x10)
	struct FString                                               ShipSize;                                          // 0x50(0x10)
	struct Guid                                                  CaptainedShipId;                                   // 0x60(0x10)
	struct FString                                               CaptainUserId;                                     // 0x70(0x10)
	struct Guid                                                  GuildId;                                           // 0x80(0x10)
};


// Size 0x10
struct CampfireDamageLightingChance
{
public:
	class UClass*                                                DamageType;                                        // 0x0(0x8)
	float                                                        Chance;                                            // 0x8(0x4)
};


// Size 0x20
struct EventRecieveWaterGunState
{
public:
	float                                                        TransferedAmmo;                                    // 0x0(0x4)
	float                                                        TransferedPressure;                                // 0x4(0x4)
	float                                                        TransferedLiquidLevel;                             // 0x8(0x4)
	float                                                        TransferedFoamLevel;                               // 0xc(0x4)
	float                                                        TransferedFizzSpeed;                               // 0x10(0x4)
	float                                                        TransferedWobbleSpeed;                             // 0x14(0x4)
	float                                                        TransferedLiquidLevelMin;                          // 0x18(0x4)
	float                                                        TransferedLiquidLevelMax;                          // 0x1c(0x4)
};


// Size 0x70
struct PlayerBuriedItemServicePlayerTreasureDiscoveredTelemetryEvent
{
public:
	char                                                         BootyType;                                         // 0x0(0x1)
	struct Guid                                                  BootyId;                                           // 0x4(0x10)
	struct FString                                               ItemName;                                          // 0x18(0x10)
	struct Guid                                                  BuriedByCrewId;                                    // 0x28(0x10)
	struct Guid                                                  DiscoveredByCrewId;                                // 0x38(0x10)
	TArray<struct Guid>                                          CrewBuryHistory;                                   // 0x48(0x10)
	TArray<struct Guid>                                          CrewDiscoverHistory;                               // 0x58(0x10)
	bool                                                         WasDeferredRewardSent;                             // 0x68(0x1)
};


// Size 0x70
struct StorageContainerStateData
{
public:
	map                                                          Items;                                             // 0x20(0x50)
};


// Size 0x1
struct EventCharacterInert
{
public:
	bool                                                         bIsInert;                                          // 0x0(0x1)
};


// Size 0x4
struct QuestTableLikedVoyages
{
public:
	int                                                          Capacity;                                          // 0x0(0x4)
};


// Size 0x1
struct TestProjectileWeaponParameters
{
public:
	bool                                                         PassCanTrigger;                                    // 0x0(0x1)
};


// Size 0x38
struct LightningStrikeFrequency
{
public:
	float                                                        MinStrength;                                       // 0x0(0x4)
	struct WeightedProbabilityRangeOfRanges                      TimePerStrike;                                     // 0x8(0x30)
};


// Size 0x1
struct EventPlayerExittedSleepingState
{
public:
	bool                                                         NoFarting;                                         // 0x0(0x1)
};


// Size 0x18
struct ConditionalStatsTriggerUnit
{
public:
	class UClass*                                                TriggerType;                                       // 0x0(0x8)
	TArray<class ConditionalStatsAsset*>                         ConditionalStatsAssets;                            // 0x8(0x10)
};


// Size 0x10
struct VoyageBaseTelemetryFragment
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
};


// Size 0x40
struct RiddleActionInfo
{
public:
	char                                                         RiddleAction;                                      // 0x0(0x1)
	struct FName                                                 GotoLocationPhraseId;                              // 0x4(0x8)
	struct FName                                                 GotoLocationWithOffsetPhraseId;                    // 0xc(0x8)
	struct FName                                                 GotoOffsetPhraseId;                                // 0x14(0x8)
	struct FName                                                 GotoUndergroundLocationPhraseId;                   // 0x1c(0x8)
	struct FName                                                 GotoUndergroundLocationWithOffsetPhraseId;         // 0x24(0x8)
	struct FName                                                 GotoUndergroundOffsetPhraseId;                     // 0x2c(0x8)
	struct FName                                                 GotoNonVagueNonUniqueLandmarkPhraseId;             // 0x34(0x8)
	float                                                        TimeToTriggerGateCompletion;                       // 0x3c(0x4)
};


// Size 0x30
struct VaultStateData
{
public:
	bool                                                         IsActive;                                          // 0x20(0x1)
	struct Vector                                                RewardPlinthPosition;                              // 0x24(0xc)
};


// Size 0x8
struct EventPlayerReliquishedControlOfControllable
{
public:
	class Actor*                                                 ControllableObject;                                // 0x0(0x8)
};


// Size 0x48
struct LeaveGhostShipActionStateConstructionInfo
{
public:
	int                                                          GhostShipLevelId;                                  // 0x40(0x4)
};


// Size 0x10
struct EntitlementRedirectorEntry
{
public:
	struct FName                                                 DeprecatedIdentifier;                              // 0x0(0x8)
	struct FName                                                 Identifier;                                        // 0x8(0x8)
};


// Size 0x10
struct EventWieldableItemUseStartingAndJustMadeVisible
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	char                                                         PerspectiveType;                                   // 0x8(0x1)
};


// Size 0x18
struct QuestStartXMarksTheSpotTelemetryEvent
{
public:
	struct FString                                               IslandName;                                        // 0x0(0x10)
	int                                                          NumTreasures;                                      // 0x10(0x4)
};


// Size 0x14
struct NarrateInteractablesSettingsEvent
{
public:
	bool                                                         NarrateInteractableText;                           // 0x0(0x1)
	char                                                         NarrateInteractableButtons;                        // 0x1(0x1)
	bool                                                         IgnoreDisabledInteractables;                       // 0x2(0x1)
	float                                                        NarrationInitialDelaySeconds;                      // 0x4(0x4)
	bool                                                         RepeatTooltipNarration;                            // 0x8(0x1)
	float                                                        NarrationRepeatingDelaySeconds;                    // 0xc(0x4)
	bool                                                         RenarrateAfterClosingMenus;                        // 0x10(0x1)
};


// Size 0x1
struct EventCharacterDrowning
{
public:
	bool                                                         Drowning;                                          // 0x0(0x1)
};


// Size 0x8
struct FragileComponentHealthScalarEntry
{
public:
	char                                                         HealthChangedReason;                               // 0x0(0x1)
	float                                                        HealthChangeScalar;                                // 0x4(0x4)
};


// Size 0x50
struct AISpawnActionStateConstructionInfo
{
public:
	class UClass*                                                HeldItemToBeginSpawn;                              // 0x40(0x8)
	char                                                         SpawnType;                                         // 0x48(0x1)
	bool                                                         QuickSpawn;                                        // 0x49(0x1)
};


// Size 0xb8
struct MilestoneCompletionNetworkEvent
{
public:
	struct Guid                                                  AlignmentId;                                       // 0x18(0x10)
	struct Guid                                                  GoalId;                                            // 0x28(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x38(0x10)
	uint64                                                       Progress;                                          // 0x48(0x8)
	uint64                                                       Alignment;                                         // 0x50(0x8)
	uint64                                                       Level;                                             // 0x58(0x8)
	struct FString                                               ShipName;                                          // 0x60(0x10)
	struct FString                                               AlignmentKey;                                      // 0x70(0x10)
	struct FText                                                 ScrambledShipName;                                 // 0x80(0x38)
};


// Size 0x98
struct HttpClientComponentRequestEvent
{
public:
	struct FString                                               Uri;                                               // 0x0(0x10)
	struct FString                                               Body;                                              // 0x10(0x10)
	bool                                                         ShouldEncrypt;                                     // 0x20(0x1)
	bool                                                         ShouldAuthorize;                                   // 0x21(0x1)
	struct FString                                               Method;                                            // 0x28(0x10)
	map                                                          Headers;                                           // 0x38(0x50)
	struct FString                                               Id;                                                // 0x88(0x10)
};


// Size 0x20
struct GameEventItemSpawnCollection
{
public:
	TArray<struct ActorComponentSelector>                        ItemSpawnerReferences;                             // 0x0(0x10)
	bool                                                         IsOnDemand;                                        // 0x10(0x1)
	class UClass*                                                TradingCompany;                                    // 0x18(0x8)
};


// Size 0x28
struct FrontendCrewMember
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	bool                                                         CurrentPlayer;                                     // 0x20(0x1)
	bool                                                         Captain;                                           // 0x21(0x1)
	bool                                                         ReservedForPlayerThatDroppedConnection;            // 0x22(0x1)
	char                                                         Platform;                                          // 0x23(0x1)
};


// Size 0x18
struct WeightedTreasureChestDesc
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	struct FName                                                 Feature;                                           // 0x4(0x8)
	class UClass*                                                Desc;                                              // 0x10(0x8)
};


// Size 0x1
struct CaptainedSessionChangedEvent
{
public:
	bool                                                         IsCaptainedSession;                                // 0x0(0x1)
};


// Size 0x50
struct PromptCountersModel
{
public:
	map                                                          PromptCounters;                                    // 0x0(0x50)
};


// Size 0x28
struct ExplosionForceFeedbackInfo
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	class ForceFeedbackEffect*                                   Effect;                                            // 0x8(0x8)
	class ForceFeedbackEffect*                                   EffectLower;                                       // 0x10(0x8)
	float                                                        LowerTriggerPercentage;                            // 0x18(0x4)
	struct FName                                                 Tag;                                               // 0x1c(0x8)
	float                                                        ShakeOuterRadius;                                  // 0x24(0x4)
};


// Size 0x20
struct AthenaAnimationSpawnAnimData
{
public:
	TArray<class AnimSequence*>                                  Spawn;                                             // 0x0(0x10)
	TArray<class AnimSequence*>                                  Despawn;                                           // 0x10(0x10)
};


// Size 0x10
struct EventPlayerCharacterPossessed
{
public:
	class Actor*                                                 AthenaCharacter;                                   // 0x0(0x8)
	bool                                                         IsOnFerry;                                         // 0x8(0x1)
};


// Size 0x1c
struct Projectile
{
public:
	struct Vector                                                Origin;                                            // 0x0(0xc)
	struct Vector                                                Direction;                                         // 0xc(0xc)
	float                                                        MaxDistance;                                       // 0x18(0x4)
};


// Size 0x20
struct AthenaAnimationPulleyDataAssetEntry
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          Idle;                                              // 0x8(0x8)
	class AnimSequence*                                          Action;                                            // 0x10(0x8)
	class AnimSequence*                                          Outof;                                             // 0x18(0x8)
};


// Size 0x30
struct AthenaAnimationObjectActionOneShotPlayingStruct
{
public:
	class AnimSequence*                                          Action;                                            // 0x0(0x8)
	class AnimSequence*                                          ActionVariant1;                                    // 0x8(0x8)
	class AnimSequence*                                          ActionVariant2;                                    // 0x10(0x8)
	class AnimSequence*                                          ActionVariant3;                                    // 0x18(0x8)
	class AnimSequence*                                          ActionVariant4;                                    // 0x20(0x8)
	bool                                                         IgnoreOverlayHandAdditiveForAction;                // 0x28(0x1)
};


// Size 0x18
struct FeatureToggledLevel
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	struct StringAssetReference                                  Level;                                             // 0x8(0x10)
};


// Size 0x20
struct ShipStockOfferDetailsTelemetryEvent
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               DisplayName;                                       // 0x10(0x10)
};


// Size 0x18
struct AggressiveGhostShipFixedSpline
{
public:
	float                                                        StartAngleOffset;                                  // 0x0(0x4)
	TArray<float>                                                Offsets;                                           // 0x8(0x10)
};


// Size 0x20
struct AggressiveGhostShipSpawnedRewardsTelemetryEvent
{
public:
	TArray<String>                                               RewardTypes;                                       // 0x0(0x10)
	struct Guid                                                  ShipId;                                            // 0x10(0x10)
};


// Size 0x48
struct UIPremiumStorePageTransitionTelemetryEvent
{
public:
	struct FString                                               CurrentPage;                                       // 0x0(0x10)
	struct FString                                               PreviousHighlight;                                 // 0x10(0x10)
	struct FString                                               PreviousPage;                                      // 0x20(0x10)
	struct FString                                               SessionId;                                         // 0x30(0x10)
	float                                                        TimeOnPreviousPage;                                // 0x40(0x4)
};


// Size 0x18
struct ObjectLeakDetectionDataReceivedEvent
{
public:
	class NetConnection*                                         Connection;                                        // 0x0(0x8)
	TArray<char>                                                 DataBlob;                                          // 0x8(0x10)
};


// Size 0x10
struct MeshAnimatorSyncData
{
public:
	double                                                       AnimationStartTime;                                // 0x0(0x8)
	int                                                          AnimationIndex;                                    // 0x8(0x4)
};


// Size 0x8
struct AthenaAnimationLocomotionTurningAnimData
{
public:
	class AnimSequence*                                          Turn90;                                            // 0x0(0x8)
};


// Size 0x38
struct TreasureMapWidgetStreamedTexture
{
public:
	struct StringAssetReference                                  TexturePath;                                       // 0x20(0x10)
	float                                                        RelativeHeightModifier;                            // 0x30(0x4)
	bool                                                         FlipX;                                             // 0x34(0x1)
};


// Size 0x10
struct CrewChangedSeaFortAlignmentEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x10
struct GameEventSchedulerSettingsChangeTelemetryEvent
{
public:
	struct StringAssetReference                                  SettingsAssetPath;                                 // 0x0(0x10)
};


// Size 0x20
struct IInventoryItem
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
	int                                                          Count;                                             // 0x10(0x4)
	bool                                                         IsFull;                                            // 0x14(0x1)
	bool                                                         IsBlocked;                                         // 0x15(0x1)
	char                                                         State;                                             // 0x16(0x1)
	class UClass*                                                DescKey;                                           // 0x18(0x8)
};


// Size 0x40
struct CapturedByKrakenActionStateParams
{
public:
	class CurveFloat*                                            MovementAlphaXY;                                   // 0x0(0x8)
	class CurveFloat*                                            MovementAlphaZ;                                    // 0x8(0x8)
	class CurveFloat*                                            MovementRotation;                                  // 0x10(0x8)
	float                                                        MovementTime;                                      // 0x18(0x4)
	float                                                        DistanceFromTentacleToStartFade;                   // 0x1c(0x4)
	float                                                        FadeInDuration;                                    // 0x20(0x4)
	float                                                        ClientConditionsCompleteTimeout;                   // 0x24(0x4)
	float                                                        MinCameraPitch;                                    // 0x28(0x4)
	float                                                        MaxCameraPitch;                                    // 0x2c(0x4)
	float                                                        MinCameraYaw;                                      // 0x30(0x4)
	float                                                        MaxCameraYaw;                                      // 0x34(0x4)
	float                                                        AnimationProgressionToStopCameraFade;              // 0x38(0x4)
	float                                                        BlockInteractInputTime;                            // 0x3c(0x4)
};


// Size 0x14
struct CannonAISpawnerZone
{
public:
	struct Vector                                                Centre;                                            // 0x0(0xc)
	float                                                        Radius;                                            // 0xc(0x4)
	bool                                                         IslandNotCannonZone;                               // 0x10(0x1)
};


// Size 0x4
struct SetWindAngleGameServerRequestModel
{
public:
	float                                                        Angle;                                             // 0x0(0x4)
};


// Size 0x1
struct PirateCreationEvent_UserConfirmationResponse
{
public:
	bool                                                         ShouldSavePirate;                                  // 0x0(0x1)
};


// Size 0x20
struct SettingsForGameEventType
{
public:
	class UClass*                                                GameEventType;                                     // 0x0(0x8)
	TArray<class Class*>                                         ExcludedEvents;                                    // 0x8(0x10)
	int                                                          RegenIntervalOverride;                             // 0x18(0x4)
};


// Size 0x1
struct SetFirstPersonMeshVisibleEvent
{
public:
	bool                                                         IsVisible;                                         // 0x0(0x1)
};


// Size 0x18
struct ShipwreckSiteRotation
{
public:
	struct Rotator                                               Base;                                              // 0x0(0xc)
	struct Rotator                                               MaxVariance;                                       // 0xc(0xc)
};


// Size 0x20
struct PosablePirateAnimation
{
public:
	class AnimSequence*                                          Animation;                                         // 0x0(0x8)
	class SkeletalMesh*                                          SkeletalMeshProp;                                  // 0x8(0x8)
	class StaticMesh*                                            StaticMeshProp;                                    // 0x10(0x8)
	struct FName                                                 PropSocketName;                                    // 0x18(0x8)
};


// Size 0x18
struct FactionMusic
{
public:
	class UClass*                                                Faction;                                           // 0x0(0x8)
	class WwiseEvent*                                            PlayEvent;                                         // 0x8(0x8)
	class WwiseEvent*                                            StopEvent;                                         // 0x10(0x8)
};


// Size 0x38
struct GhostShipRewardData
{
public:
	class WeightedItemDescSpawnDataAsset*                        Rewards;                                           // 0x0(0x8)
	struct WeightedProbabilityRange                              NumberOfItemsToSpawn;                              // 0x8(0x20)
	TArray<struct Transform>                                     SpawnTransforms;                                   // 0x28(0x10)
};


// Size 0x8
struct EventMovedByPortableHarpoonRetractionStart
{
public:
	class Actor*                                                 MovementInstigator;                                // 0x0(0x8)
};


// Size 0x30
struct ProjectileWeaponEquipTelemetryData
{
public:
	struct Guid                                                  TelemetryEquipId;                                  // 0x0(0x10)
	struct FString                                               WeaponName;                                        // 0x10(0x10)
	bool                                                         HasCancelledEquipAnim;                             // 0x20(0x1)
	float                                                        RequesterLatencyMs;                                // 0x24(0x4)
	float                                                        RequesterTimeOffset;                               // 0x28(0x4)
};


// Size 0x8
struct EventCharacterStartedContinuousUse
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
};


// Size 0x48
struct SeagullManagerPseudoRandomEntry
{
public:
	double                                                       TimeBoundary;                                      // 0x0(0x8)
	float                                                        SeagullSpeed;                                      // 0x8(0x4)
	float                                                        SeagullScale;                                      // 0xc(0x4)
	int                                                          BankIndex;                                         // 0x10(0x4)
	struct FName                                                 LocationName;                                      // 0x14(0x8)
	int                                                          NumInFormation;                                    // 0x1c(0x4)
	int                                                          FormationOffsetsIndex;                             // 0x20(0x4)
	int                                                          SpeedModifierCurveIndex;                           // 0x24(0x4)
	TArray<int>                                                  RollCurveIndices;                                  // 0x28(0x10)
	TArray<int>                                                  OffsetCurveIndices;                                // 0x38(0x10)
};


// Size 0x10
struct BootyItemLeftShipEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class ItemInfo*                                              ItemLeavingShip;                                   // 0x8(0x8)
};


// Size 0x10
struct EventCharacterBeginTeleport
{
public:
	class Actor*                                                 Character;                                         // 0x0(0x8)
	bool                                                         PlayOnTeleportBeginSounds;                         // 0x8(0x1)
	bool                                                         ShouldApplyWwiseSwitch;                            // 0x9(0x1)
	char                                                         TeleportNotificationSource;                        // 0xa(0x1)
};


// Size 0x1
struct CreativeCrewConfig
{
public:
	char                                                         CrewSessionType;                                   // 0x0(0x1)
};


// Size 0x1
struct HDRTelemetryFragment
{
public:
	bool                                                         HDR;                                               // 0x0(0x1)
};


// Size 0x70
struct GuildMottoLocalisedTextValue
{
public:
	struct FText                                                 TextKey;                                           // 0x0(0x38)
	struct FText                                                 Text;                                              // 0x38(0x38)
};


// Size 0x18
struct SeasonTierInfo
{
public:
	int                                                          Number;                                            // 0x0(0x4)
	struct FString                                               LocalizedTitle;                                    // 0x8(0x10)
};


// Size 0x20
struct LinkedXuidModel
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
};


// Size 0x10
struct QuestBootyItemPopUpEntry
{
public:
	struct FName                                                 BootyItemIdentifier;                               // 0x0(0x8)
	class PopUpMessageDesc*                                      PopUp;                                             // 0x8(0x8)
};


// Size 0x8
struct WaterPuzzleRepData
{
public:
	int                                                          CurrentWaterLevelIndex;                            // 0x0(0x4)
	bool                                                         TransitionDueToReset;                              // 0x4(0x1)
};


// Size 0x28
struct RetrieveAllPiratesRequestEvent
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct Guid                                                  RequestID;                                         // 0x18(0x10)
};


// Size 0xc
struct ContinuousHealthChange
{
public:
	float                                                        Rate;                                              // 0x0(0x4)
	float                                                        ChangeApplied;                                     // 0x4(0x4)
	char                                                         Reason;                                            // 0x8(0x1)
};


// Size 0xb0
struct ServerAllocationSessionCookie
{
public:
	struct FString                                               ServerLocation;                                    // 0x0(0x10)
	struct FString                                               PrivateServerId;                                   // 0x10(0x10)
	struct FString                                               ForcedPlatform;                                    // 0x20(0x10)
	struct PlayModeDefiniton                                     PlayModeDefinition;                                // 0x30(0x28)
	int                                                          CrewCountBucket;                                   // 0x58(0x4)
	struct FString                                               TitleVersion;                                      // 0x60(0x10)
	uint32                                                       FeatureHash;                                       // 0x70(0x4)
	struct FString                                               StampId;                                           // 0x78(0x10)
	struct FString                                               HostId;                                            // 0x88(0x10)
	struct Guid                                                  SaferSeasServerId;                                 // 0x98(0x10)
	bool                                                         ProgressionEnabled;                                // 0xa8(0x1)
	bool                                                         AllocationFromLighthouse;                          // 0xa9(0x1)
};


// Size 0x18
struct EventObjectStowed
{
public:
	interface                                                    Object;                                            // 0x0(0x10)
	bool                                                         FastStow;                                          // 0x10(0x1)
	char                                                         StowMethod;                                        // 0x11(0x1)
};


// Size 0x70
struct NetworkDataTelemetryFragment
{
public:
	uint64                                                       AvgRttMilliseconds;                                // 0x0(0x8)
	uint32                                                       AvgRttVariationMilliseconds;                       // 0x8(0x4)
	uint64                                                       AvgOutBytesPerSecond;                              // 0x10(0x8)
	uint64                                                       AvgInBytesPerSecond;                               // 0x18(0x8)
	uint64                                                       AvgOutVoiceBytesPerSecond;                         // 0x20(0x8)
	uint64                                                       AvgInVoiceBytesPerSecond;                          // 0x28(0x8)
	uint32                                                       TotalOutPacketsLost;                               // 0x30(0x4)
	uint32                                                       TotalInPacketsLost;                                // 0x34(0x4)
	float                                                        AvgOutPacketLossRatio;                             // 0x38(0x4)
	float                                                        AvgInPacketLossRatio;                              // 0x3c(0x4)
	uint32                                                       StatPeriodTotalInPacketsLost;                      // 0x40(0x4)
	uint32                                                       StatPeriodTotalOutPacketsLost;                     // 0x44(0x4)
	uint32                                                       StatPeriodPeakInPacketsLost;                       // 0x48(0x4)
	uint32                                                       StatPeriodPeakOutPacketsLost;                      // 0x4c(0x4)
	TArray<struct PacketLossSpikeEventData>                      InPacketLossSpikeEventHistory;                     // 0x50(0x10)
	TArray<struct PacketLossSpikeEventData>                      OutPacketLossSpikeEventHistory;                    // 0x60(0x10)
};


// Size 0x10
struct AggressiveGhostShipEncounterStartTelemetryEvent
{
public:
	struct Guid                                                  EncounterId;                                       // 0x0(0x10)
};


// Size 0x4
struct SinkShipGameServerRequestModel
{
public:
	int                                                          ShipNetGUID;                                       // 0x0(0x4)
};


// Size 0x28
struct AthenaAnimationSkeletonEmoteActionAnimations
{
public:
	class UClass*                                                UseWithObject;                                     // 0x0(0x8)
	TArray<class AnimSequence*>                                  Taunt;                                             // 0x8(0x10)
	TArray<class AnimSequence*>                                  Cheer;                                             // 0x18(0x10)
};


// Size 0xc
struct MountpointWaterLevelParams
{
public:
	float                                                        WaterLevelDifferenceBetweenUpdates;                // 0x0(0x4)
	float                                                        ZOffsetFromWaterToDisableMountpoint;               // 0x4(0x4)
};


// Size 0x8
struct EventBrokeLeg
{
public:
	struct FName                                                 RumbleTag;                                         // 0x0(0x8)
};


// Size 0x20
struct GetItemsInRadiusGameServerRequestModel
{
public:
	struct FString                                               ItemName;                                          // 0x10(0x10)
};


// Size 0x38
struct RepairLoadoutFromSeedRpc
{
public:
	TArray<int>                                                  Seeds;                                             // 0x18(0x10)
	TArray<struct StringClassReference>                          CategoriesToApply;                                 // 0x28(0x10)
};


// Size 0x38
struct PlayerBuriedItemServiceDataAssetMapStorePopulationHaulOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	struct WeightedProbabilityRange                              NumXs;                                             // 0x10(0x20)
	class WeightedItemDescSpawnDataAsset*                        WeightedItemDescSpawnDataAsset;                    // 0x30(0x8)
};


// Size 0x18
struct ContestTimerData
{
public:
	float                                                        Time;                                              // 0x0(0x4)
	struct FString                                               ServicesConfigRetrievalString;                     // 0x8(0x10)
};


// Size 0x4
struct MigrationActionStateParams
{
public:
	float                                                        ClientSetupResponseTimeout;                        // 0x0(0x4)
};


// Size 0x40
struct PhraseData
{
public:
	struct FText                                                 TextToBroadcast;                                   // 0x0(0x38)
	bool                                                         RequiresWieldedItemObjectNameAsArgument;           // 0x38(0x1)
	bool                                                         WieldedItemObjectNameIsNotLocalised;               // 0x39(0x1)
};


// Size 0x8
struct EventReceiveStorageContainerComponentState
{
public:
	class StorageContainerComponent*                             Source;                                            // 0x0(0x8)
};


// Size 0x178
struct AthenaAnimationCapstan
{
public:
	float                                                        IntentInterpSpeed;                                 // 0x0(0x4)
	struct Vector2D                                              CapstanAngularVelocityRange;                       // 0x4(0x8)
	struct Vector2D                                              AnimationRemapSpeedRange;                          // 0xc(0x8)
	float                                                        AngularVelocityInterpSpeed;                        // 0x14(0x4)
	struct SocketId                                              LeftHandMaleSocket;                                // 0x18(0x20)
	struct SocketId                                              RightHandMaleSocket;                               // 0x38(0x20)
	struct SocketId                                              LeftHandFemaleSocket;                              // 0x58(0x20)
	struct SocketId                                              RightHandFemaleSocket;                             // 0x78(0x20)
	float                                                        TranslationStrength;                               // 0x98(0x4)
	float                                                        RotationStrength;                                  // 0x9c(0x4)
	float                                                        BlendInSpeed;                                      // 0xa0(0x4)
	float                                                        BlendOutSpeed;                                     // 0xa4(0x4)
	bool                                                         AnimationOverride;                                 // 0xa8(0x1)
	char                                                         CapstanState;                                      // 0xa9(0x1)
	float                                                        AngularVelocityWanted;                             // 0xac(0x4)
	class Actor*                                                 ControlledObject;                                  // 0xb0(0x8)
};


// Size 0x10
struct AthenaAnimationIdlesAnimData
{
public:
	TArray<class AnimSequence*>                                  IdleAnimations;                                    // 0x0(0x10)
};


// Size 0x30
struct ServerMigrationClientFailedTelemetryEvent
{
public:
	struct Guid                                                  MigrationId;                                       // 0x0(0x10)
	struct FString                                               Stage;                                             // 0x10(0x10)
	struct FString                                               Error;                                             // 0x20(0x10)
};


// Size 0x8
struct SetInvincibilityGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	bool                                                         Enable;                                            // 0x4(0x1)
};


// Size 0x18
struct GuildNameChangedOnServerEvent
{
public:
	struct FString                                               GuildName;                                         // 0x0(0x10)
	int                                                          ScrambledGuildNameIndex;                           // 0x10(0x4)
};


// Size 0x18
struct CompanyBootyTypePairing
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	TArray<char>                                                 BootyTypes;                                        // 0x8(0x10)
};


// Size 0x20
struct CinematicEmissaryEvent
{
public:
	int                                                          Level;                                             // 0x0(0x4)
	struct FName                                                 Tag;                                               // 0x4(0x8)
	struct FString                                               GuildId;                                           // 0x10(0x10)
};


// Size 0x8
struct ChestLeaveShipEvent
{
public:
	class Actor*                                                 CurrentShip;                                       // 0x0(0x8)
};


// Size 0x18
struct DigAnimParams
{
public:
	char                                                         DigType;                                           // 0x0(0x1)
	float                                                        Duration;                                          // 0x4(0x4)
	float                                                        TimeStampOfUnlockingWielderMovement;               // 0x8(0x4)
	float                                                        TimeStampOfEnterGround;                            // 0xc(0x4)
	float                                                        TimeStampOfLeaveGround;                            // 0x10(0x4)
	char                                                         AnimVariant;                                       // 0x14(0x1)
};


// Size 0x28
struct SkullOfStormsSailBillowedTelemetryEvent
{
public:
	struct Guid                                                  ShipCrewId;                                        // 0x0(0x10)
	struct FString                                               ShipTypeString;                                    // 0x10(0x10)
	double                                                       BillowTime;                                        // 0x20(0x8)
};


// Size 0x14
struct CompanyShopActionStateParams
{
public:
	float                                                        CinematicCameraBlendInTimeSeconds;                 // 0x0(0x4)
	char                                                         CinematicCameraBlendInMode;                        // 0x4(0x1)
	float                                                        CinematicCameraBlendOutTimeSeconds;                // 0x8(0x4)
	char                                                         CinematicCameraBlendOutMode;                       // 0xc(0x1)
	float                                                        InputFocusTimeout;                                 // 0x10(0x4)
};


// Size 0x40
struct HandOnWheelAnimationRanges
{
public:
	struct FloatRange                                            LeftHandOnWheelA;                                  // 0x0(0x10)
	struct FloatRange                                            LeftHandOnWheelB;                                  // 0x10(0x10)
	struct FloatRange                                            RightHandOnWheelA;                                 // 0x20(0x10)
	struct FloatRange                                            RightHandOnWheelB;                                 // 0x30(0x10)
};


// Size 0x10
struct InventoryEquipEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x10
struct AthenaAIEngageEnemyData
{
public:
	class UClass*                                                EngageEnemyMethod;                                 // 0x0(0x8)
	float                                                        BestTargetRange;                                   // 0x8(0x4)
};


// Size 0x10
struct RequestShipCustomizationChestClearShipCustomizationEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x20
struct SailsBillowStateChangeRpc
{
public:
	bool                                                         AreSailsBillowed;                                  // 0x18(0x1)
};


// Size 0x1
struct IsSoloSeasResponse
{
public:
	bool                                                         IsSoloSeasServer;                                  // 0x0(0x1)
};


// Size 0x8
struct EventBuriedItemRevealed
{
public:
	class ItemInfo*                                              BuriedItem;                                        // 0x0(0x8)
};


// Size 0x38
struct TeleportActionStateSerialisableData
{
public:
	bool                                                         IsTeleporting;                                     // 0x30(0x1)
};


// Size 0x18
struct ExplosionShipSizeKnockbackModifier
{
public:
	struct FName                                                 FeatureFlag;                                       // 0x0(0x8)
	class UClass*                                                ShipSize;                                          // 0x8(0x8)
	float                                                        HorizontalVelocity;                                // 0x10(0x4)
	float                                                        VerticalVelocity;                                  // 0x14(0x4)
};


// Size 0x8
struct PotentialChainNode
{
public:
	class Actor*                                                 NodeActor;                                         // 0x0(0x8)
};


// Size 0x18
struct UIBooleanOptionSelectedTelemetryEvent
{
public:
	struct FString                                               Option;                                            // 0x0(0x10)
	bool                                                         Value;                                             // 0x10(0x1)
};


// Size 0xb0
struct MastDamageAudioParams
{
public:
	struct WwiseEmitter                                          MastHingeAudioEmitter;                             // 0x0(0x20)
	class WwiseObjectPoolWrapper*                                MastHingeAudioPool;                                // 0x20(0x8)
	struct WwiseEmitter                                          MastImpactAudioEmitter;                            // 0x28(0x20)
	class WwiseObjectPoolWrapper*                                MastImpactAudioPool;                               // 0x48(0x8)
	class WwiseEvent*                                            MastDamaged;                                       // 0x50(0x8)
	class WwiseEvent*                                            MastFallingStart;                                  // 0x58(0x8)
	class WwiseEvent*                                            MastFallingStop;                                   // 0x60(0x8)
	class WwiseEvent*                                            MasthHoistingStart;                                // 0x68(0x8)
	class WwiseEvent*                                            MastHoistingStop;                                  // 0x70(0x8)
	class WwiseEvent*                                            MastHoistingComplete;                              // 0x78(0x8)
	class WwiseEvent*                                            MastFallComplete;                                  // 0x80(0x8)
	class WwiseEvent*                                            MastFallenStop;                                    // 0x88(0x8)
	struct FName                                                 MastDamageLevelAudioSwitch;                        // 0x90(0x8)
	struct FName                                                 MastHoistingSpeedAudioSwitch;                      // 0x98(0x8)
	struct FName                                                 MastAngleRTPC;                                     // 0xa0(0x8)
	struct FName                                                 MastFallingSpeedRTPC;                              // 0xa8(0x8)
};


// Size 0x20
struct ServerNetworkDataTelemetryFragment
{
public:
	struct PacketDiscardStats                                    DiscardedPackets;                                  // 0x0(0x20)
};


// Size 0x28
struct BlockablePlayer
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct FString                                               Xuid;                                              // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
};


// Size 0x120
struct PlayerEntitlements
{
public:
	char                                                         EntitlementsStatus;                                // 0x118(0x1)
};


// Size 0x28
struct BootFlowNetworkErrorTelemetryEvent
{
public:
	double                                                       TimeConnected;                                     // 0x0(0x8)
	struct FString                                               ServerAddress;                                     // 0x8(0x10)
	struct FString                                               Message;                                           // 0x18(0x10)
};


// Size 0x1
struct EventInGameUISetPhotoMode
{
public:
	bool                                                         PhotoModeEnabled;                                  // 0x0(0x1)
};


// Size 0x18
struct EventRemoveCrewFromBeingBeckonedByNPCGroup
{
public:
	class UClass*                                                NPCGroupID;                                        // 0x0(0x8)
};


// Size 0x50
struct ProposedVoyageEntry
{
public:
	class VoyageProposalDesc*                                    ProposalDesc;                                      // 0x0(0x8)
	class VoyageProposalDesc*                                    VisualsProposalDesc;                               // 0x8(0x8)
	class VoyageProposalDesc*                                    TemplateProposalDesc;                              // 0x10(0x8)
	class VoyageRecipeDataAsset*                                 VoyageRecipe;                                      // 0x18(0x8)
	int                                                          Rank;                                              // 0x20(0x4)
	class UClass*                                                Company;                                           // 0x28(0x8)
	class PlayerState*                                           ProposingPlayerState;                              // 0x30(0x8)
	struct FString                                               InstanceId;                                        // 0x38(0x10)
	bool                                                         VoyageIsShipEntitlement;                           // 0x48(0x1)
	bool                                                         LimitedVoyage;                                     // 0x49(0x1)
	bool                                                         WantDiveToTunnel;                                  // 0x4a(0x1)
	bool                                                         PendingDeferredTunnelCancellation;                 // 0x4b(0x1)
};


// Size 0x18
struct SharkMaterialEntry
{
public:
	struct StringAssetReference                                  MaterialReference;                                 // 0x0(0x10)
	bool                                                         CastShadows;                                       // 0x10(0x1)
};


// Size 0x30
struct ShipCustomizationChestCrewMember
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class Actor*                                                 Player;                                            // 0x10(0x8)
	struct NetActorPtr                                           NetPlayerState;                                    // 0x18(0x14)
};


// Size 0x10
struct ChapterQuests
{
public:
	TArray<Class>                                                QuestDescAssets;                                   // 0x0(0x10)
};


// Size 0x4
struct WorldMapSetMapLabelsRotation
{
public:
	float                                                        Rotation;                                          // 0x0(0x4)
};


// Size 0x10
struct CatalogOfferCompanyLevelDataAsset
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	uint32                                                       Level;                                             // 0x8(0x4)
};


// Size 0x20
struct OnlinePermissionsRequestMap
{
public:
	struct UniqueNetIdRepl                                       PlayerUserId;                                      // 0x0(0x18)
	uint32                                                       PermissionMask;                                    // 0x18(0x4)
	char                                                         HasPermission;                                     // 0x1c(0x1)
};


// Size 0x28
struct FishSizeAndType
{
public:
	char                                                         Size;                                              // 0x0(0x1)
	assetclass                                                   Type;                                              // 0x8(0x20)
};


// Size 0x40
struct StormAvoidanceArea
{
public:
	struct Vector2D                                              Location;                                          // 0x0(0x8)
	float                                                        Radius;                                            // 0x8(0x4)
};


// Size 0xe0
struct AthenaAnimationWaterSlideControlAnimData
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          Action;                                            // 0x8(0x8)
	class AnimSequence*                                          Outof;                                             // 0x10(0x8)
	bool                                                         IsSliding;                                         // 0x18(0x1)
	assetobject                                                  IntoAssetPtr;                                      // 0x20(0x20)
	assetobject                                                  ActionAssetPtr;                                    // 0x40(0x20)
	assetobject                                                  OutOfAssetPtr;                                     // 0x60(0x20)
};


// Size 0x60
struct AthenaAnimationObjectMeleeBlocking
{
public:
	class AnimSequence*                                          BlockingInto;                                      // 0x0(0x8)
	class AnimSequence*                                          BlockingIntoFromCombat;                            // 0x8(0x8)
	class BlendSpace*                                            BlockingMainBlendSpace;                            // 0x10(0x8)
	class AnimSequence*                                          BlockingFeedbackSequenceA;                         // 0x18(0x8)
	class AnimSequence*                                          BlockingFeedbackSequenceB;                         // 0x20(0x8)
	class AnimSequence*                                          BlockingOut;                                       // 0x28(0x8)
	class BlendSpace*                                            Dodge;                                             // 0x30(0x8)
	class AnimSequence*                                          BlockingIntoSwimming;                              // 0x38(0x8)
	class BlendSpace*                                            BlockingMainBlendSpaceSwimming;                    // 0x40(0x8)
	class AnimSequence*                                          BlockingFeedbackSequenceASwimming;                 // 0x48(0x8)
	class AnimSequence*                                          BlockingFeedbackSequenceBSwimming;                 // 0x50(0x8)
	class AnimSequence*                                          BlockingOutSwimming;                               // 0x58(0x8)
};


// Size 0x18
struct CreateBoxTriggerGameServerRequestModel
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	struct Vector                                                Extent;                                            // 0xc(0xc)
};


// Size 0x58
struct DockToObjectActionStateConstructionInfo
{
public:
	struct NetObjectPtr                                          DockToObject;                                      // 0x40(0x14)
	bool                                                         IsInteractingActorFemale;                          // 0x54(0x1)
};


// Size 0x10
struct ResourceCacheEntry
{
public:
	TArray<class Object*>                                        Resources;                                         // 0x0(0x10)
};


// Size 0x10
struct EventWieldableItemUseStoppedAndFullyHidden
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	char                                                         PerspectiveType;                                   // 0x8(0x1)
};


// Size 0x8
struct ConsistentPercentageRewardDistributionModel
{
public:
	float                                                        PrimaryCrewPercentage;                             // 0x0(0x4)
	float                                                        SecondaryCrewsPercentage;                          // 0x4(0x4)
};


// Size 0x14
struct AthenaAnimationObjectComplexOneShotPlaySpeeds
{
public:
	float                                                        WarmUpPlaySpeed;                                   // 0x0(0x4)
	float                                                        WarmUpFromBlockPlaySpeed;                          // 0x4(0x4)
	float                                                        ActionPlaySpeed;                                   // 0x8(0x4)
	float                                                        RecoverPlaySpeed;                                  // 0xc(0x4)
	float                                                        HeavyAttackStunRecoverPlaySpeed;                   // 0x10(0x4)
};


// Size 0x28
struct AddFriendRequest
{
public:
	struct FString                                               PlatformUserId;                                    // 0x0(0x10)
	struct FString                                               PlatformUsername;                                  // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
};


// Size 0x10
struct ApplyBoundaryToWorldMapEvent
{
public:
	struct LinearColor                                           BoundaryData;                                      // 0x0(0x10)
};


// Size 0x4
struct IngestedByKrakenActionStateParams
{
public:
	float                                                        StowItemsProgressThreshold;                        // 0x0(0x4)
};


// Size 0x80
struct AIShipEncounterNotification
{
public:
	struct FText                                                 BattleName;                                        // 0x0(0x38)
	struct FName                                                 SeaName;                                           // 0x38(0x8)
	struct FText                                                 SkellyCrewName;                                    // 0x40(0x38)
	char                                                         CannonBallType;                                    // 0x78(0x1)
	char                                                         SkellyType;                                        // 0x79(0x1)
};


// Size 0x10
struct SkullOfStormsFallDamagePreventedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
};


// Size 0x40
struct DistinctionBanners
{
public:
	uint32                                                       Level;                                             // 0x0(0x4)
	struct FText                                                 Title;                                             // 0x8(0x38)
};


// Size 0x18
struct WalletTransactionRequest
{
public:
	char                                                         Currency;                                          // 0x0(0x1)
	uint32                                                       Amount;                                            // 0x4(0x4)
	struct Guid                                                  TransactionId;                                     // 0x8(0x10)
};


// Size 0x4
struct ReapersTributeEarnedTelemetryEvent
{
public:
	int                                                          RitualsCompleted;                                  // 0x0(0x4)
};


// Size 0x8
struct ChestOfRageDamageTableEntry
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
	float                                                        TimeToAdd;                                         // 0x4(0x4)
};


// Size 0x18
struct SplineTransitionLadderActionFinishedMessage
{
public:
	float                                                        TimeCompleted;                                     // 0x10(0x4)
};


// Size 0x2
struct EmergentVoyageSourceIconInfo
{
public:
	char                                                         IconType;                                          // 0x0(0x1)
	char                                                         VoyageSource;                                      // 0x1(0x1)
};


// Size 0x60
struct StarFieldPuzzleAudioParams
{
public:
	class WwiseObjectPoolWrapper*                                WwisePool;                                         // 0x0(0x8)
	struct FName                                                 WwiseEmitterName;                                  // 0x8(0x8)
	class WwiseEvent*                                            ConstellationStartEvent;                           // 0x30(0x8)
	class WwiseEvent*                                            ConstellationFinishedEvent;                        // 0x38(0x8)
	class WwiseEvent*                                            StarsGlowingStartLoopEvent;                        // 0x40(0x8)
	class WwiseEvent*                                            StarsGlowingStopLoopEvent;                         // 0x48(0x8)
	class WwiseEvent*                                            ConstellationCompletedMusicStartEvent;             // 0x50(0x8)
	class WwiseEvent*                                            ConstellationCompletedMusicStopEvent;              // 0x58(0x8)
};


// Size 0x58
struct TunnelOfTheDamnedShipPartParams
{
public:
	class UClass*                                                VoyageVotingTableType;                             // 0x0(0x8)
	class UClass*                                                CapstanType;                                       // 0x8(0x8)
	class UClass*                                                WheelType;                                         // 0x10(0x8)
	class UClass*                                                CannonPlayerLoadingInteractionPointType;           // 0x18(0x8)
	class UClass*                                                CannonType;                                        // 0x20(0x8)
	class UClass*                                                HarpoonType;                                       // 0x28(0x8)
	class UClass*                                                RowboatAttachPointType;                            // 0x30(0x8)
	class UClass*                                                MapTableType;                                      // 0x38(0x8)
	class UClass*                                                RowboatType;                                       // 0x40(0x8)
	TArray<class Class*>                                         LadderTypes;                                       // 0x48(0x10)
};


// Size 0x20
struct ClientRequestCameraFadeCompleteAckNetworkEvent
{
public:
	float                                                        AckTimeout;                                        // 0x18(0x4)
};


// Size 0x70
struct HideInObjectActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           LoadableObject;                                    // 0x58(0x14)
};


// Size 0x2
struct BeaconData
{
public:
	bool                                                         LightIsOn_Server;                                  // 0x0(0x1)
	char                                                         FlameOfFateType;                                   // 0x1(0x1)
};


// Size 0x10
struct ShipNameRefreshedEvent
{
public:
	struct FString                                               ShipName;                                          // 0x0(0x10)
};


// Size 0x8
struct EventStorageContainerContentsChanged
{
public:
	class StorageContainerComponent*                             Source;                                            // 0x0(0x8)
};


// Size 0x48
struct ContestStartEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
	struct FString                                               CrewIcon;                                          // 0x10(0x10)
	struct FString                                               CrewName;                                          // 0x20(0x10)
	TArray<String>                                               CrewMembers;                                       // 0x30(0x10)
	float                                                        HoldDuration;                                      // 0x40(0x4)
};


// Size 0x18
struct EncounterServiceEntry
{
public:
	char                                                         EncounterListenerType;                             // 0x0(0x1)
	TArray<char>                                                 ValidEncounterTypes;                               // 0x8(0x10)
};


// Size 0x20
struct ServerMigrationFailedDevTelemetryEvent
{
public:
	struct Guid                                                  MigrationId;                                       // 0x0(0x10)
	struct FString                                               Stage;                                             // 0x10(0x10)
};


// Size 0x50
struct StarFieldRevealerMaskAudioParams
{
public:
	class WwiseObjectPoolWrapper*                                WwisePool;                                         // 0x0(0x8)
	struct FName                                                 WwiseEmitterName;                                  // 0x8(0x8)
	class WwiseEvent*                                            WearMaskEvent;                                     // 0x30(0x8)
	class WwiseEvent*                                            RemoveMaskEvent;                                   // 0x38(0x8)
	class WwiseEvent*                                            MaskSkySpinSFXEvent;                               // 0x40(0x8)
	class WwiseEvent*                                            MaskSkySpinMusicEvent;                             // 0x48(0x8)
};


// Size 0x30
struct AchievementRemoteServiceLogTelemetry
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
	TArray<String>                                               LogLines;                                          // 0x20(0x10)
};


// Size 0x10
struct TQStructGenSelection
{
public:
	class TaleQuestDescAsset*                                    TaleQuestDesc;                                     // 0x0(0x8)
	class PLQuestLocationDataAsset*                              LocationData;                                      // 0x8(0x8)
};


// Size 0x90
struct PirateCreationEvent_SavePirate
{
public:
	struct PirateDescription                                     Description;                                       // 0x0(0x80)
	TArray<class Class*>                                         Outfit;                                            // 0x80(0x10)
};


// Size 0x20
struct PlayerChangedShipLoadoutEvent
{
public:
	struct FString                                               ShipEquippedType;                                  // 0x0(0x10)
	struct FString                                               ShipEquippedName;                                  // 0x10(0x10)
};


// Size 0xc
struct PlayerCapstanUsageStartTelemetryEvent
{
public:
	int                                                          NumCurrentUsers;                                   // 0x0(0x4)
	float                                                        CapstanVelocity;                                   // 0x4(0x4)
	float                                                        CapstanState;                                      // 0x8(0x4)
};


// Size 0x8
struct EventCutsceneTargetMeshComponentReady
{
public:
	class Actor*                                                 CutsceneTargetWithMeshComponent;                   // 0x0(0x8)
};


// Size 0x40
struct LightingControllerLightningParams
{
public:
	class CurveFloat*                                            LightningTimeIntensityCurve;                       // 0x0(0x8)
	class CurveFloat*                                            LightningDistanceIntensityCurve;                   // 0x8(0x8)
	float                                                        MaxLightningDistance;                              // 0x10(0x4)
	float                                                        SkyLightIntensity;                                 // 0x14(0x4)
	float                                                        SkyLightMaxLerp;                                   // 0x18(0x4)
	float                                                        SunLightIntensity;                                 // 0x1c(0x4)
	float                                                        SunLightMaxLerp;                                   // 0x20(0x4)
	float                                                        FoamIntensity;                                     // 0x24(0x4)
	float                                                        FoamMaxLerp;                                       // 0x28(0x4)
	float                                                        RainIntensity;                                     // 0x2c(0x4)
	float                                                        LightningDuration;                                 // 0x30(0x4)
	float                                                        SkyLightOcclusion;                                 // 0x34(0x4)
	float                                                        CloudShadowMultiplier;                             // 0x38(0x4)
};


// Size 0x1
struct PossessionsChestClosedEvent
{
public:
	char                                                         PossessionsChestType;                              // 0x0(0x1)
};


// Size 0x2
struct RequestLobbyUIEvent
{
public:
	char                                                         SessionType;                                       // 0x0(0x1)
	char                                                         SessionVisibility;                                 // 0x1(0x1)
};


// Size 0x18
struct PlayerEnrolledGuildsUpdatedEvent
{
public:
	TArray<struct Guid>                                          GuildIds;                                          // 0x0(0x10)
	char                                                         UpdateReason;                                      // 0x10(0x1)
};


// Size 0x48
struct PremiumCatalogOfferGroup
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	TArray<struct Guid>                                          Children;                                          // 0x38(0x10)
};


// Size 0x18
struct ShipPartCustomizationInfo
{
public:
	struct FName                                                 PartName;                                          // 0x0(0x8)
	struct StringAssetReference                                  Customization;                                     // 0x8(0x10)
};


// Size 0x20
struct TaleQuestFailedNetworkEvent
{
public:
	class UClass*                                                FailureRunnable;                                   // 0x18(0x8)
};


// Size 0x10
struct GameEventOnDemandDepartureTunnelOfTheDamnedInitializedTelemetryEvent
{
public:
	struct FString                                               EventType;                                         // 0x0(0x10)
};


// Size 0x18
struct PlayerModerationReportSubmitResponse
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct FString                                               ReferenceCode;                                     // 0x8(0x10)
};


// Size 0x8
struct SoundBankFailureTelemetryEntry
{
public:
	uint32                                                       BankID;                                            // 0x0(0x4)
	uint32                                                       FailureReason;                                     // 0x4(0x4)
};


// Size 0x18
struct FeatureToggledCargoRunCrateCustomData
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x0(0xc)
	class CargoRunCrateCustomData*                               Data;                                              // 0x10(0x8)
};


// Size 0x10
struct EventBroadcastWwiseEventToInstigatorsCrew
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	class WwiseEvent*                                            WwiseEvent;                                        // 0x8(0x8)
};


// Size 0x18
struct CurrentHealthInfo
{
public:
	float                                                        Health;                                            // 0x0(0x4)
	char                                                         LastChangedReason;                                 // 0x4(0x1)
	struct Vector_NetQuantize10                                  LastInstigatorLocation;                            // 0x8(0xc)
	uint32                                                       HealthChangeCount;                                 // 0x14(0x4)
};


// Size 0x18
struct RequestClothingChestActionEvent
{
public:
	char                                                         Action;                                            // 0x0(0x1)
	struct FString                                               Subject;                                           // 0x8(0x10)
};


// Size 0x58
struct LevelMadeVisibleTelemetryEvent
{
public:
	float                                                        DistancePlayerTravelledSinceLoadCompleted;         // 0x40(0x4)
	float                                                        TimeSinceLoadCompleted;                            // 0x44(0x4)
	struct FString                                               ActiveExperiments;                                 // 0x48(0x10)
};


// Size 0x70
struct CrewBaseTelemetryFragment
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  CrewSessionId;                                     // 0x10(0x10)
	struct Guid                                                  AllianceId;                                        // 0x20(0x10)
	int                                                          CurrentCrewCount;                                  // 0x30(0x4)
	struct FString                                               SessionType;                                       // 0x38(0x10)
	struct FString                                               CrewType;                                          // 0x48(0x10)
	bool                                                         IsCaptainedCrew;                                   // 0x58(0x1)
	struct Guid                                                  GuildId;                                           // 0x5c(0x10)
};


// Size 0x8
struct ServerStartingForcedShutdownEvent
{
public:
	struct Timespan                                              TimeTillShutdown;                                  // 0x0(0x8)
};


// Size 0x4
struct ActorActivationStarted
{
public:
	float                                                        ActivationDuration;                                // 0x0(0x4)
};


// Size 0x18
struct EventConversationParticipantReactionRequest
{
public:
	class Actor*                                                 ConversationStarter;                               // 0x0(0x8)
	class UClass*                                                OptionalInteractResponseType;                      // 0x8(0x8)
	class WwiseEvent*                                            OptionalDialogAudioEvent;                          // 0x10(0x8)
};


// Size 0x10
struct ShipEnteredStormEvent
{
public:
	class Actor*                                                 Storm;                                             // 0x0(0x8)
	class Actor*                                                 Ship;                                              // 0x8(0x8)
};


// Size 0x18
struct IntentPredictorParams
{
public:
	float                                                        MaxError;                                          // 0x0(0x4)
	float                                                        MinError;                                          // 0x4(0x4)
	float                                                        MinCorrectionVelocity;                             // 0x8(0x4)
	float                                                        MinValue;                                          // 0xc(0x4)
	float                                                        MaxValue;                                          // 0x10(0x4)
	bool                                                         WrapCorrectionToValueRange;                        // 0x14(0x1)
};


// Size 0x8
struct HUDBlurSourceParams
{
public:
	float                                                        SecondsToFullyBlur;                                // 0x0(0x4)
	float                                                        SecondsToFullyUnblur;                              // 0x4(0x4)
};


// Size 0x28
struct MermaidRespawnConfig
{
public:
	float                                                        ScorePenaltyForEachMeterAwayFromShipwreck;         // 0x0(0x4)
	float                                                        MinRespawnLocDistanceFromSunkShip;                 // 0x4(0x4)
	float                                                        MinScorePenaltyForEnemyShipProximity;              // 0x8(0x4)
	float                                                        MaxScorePenaltyForEnemyShipProximity;              // 0xc(0x4)
	float                                                        MaxDistanceFromEnemyShipToApplyPenalty;            // 0x10(0x4)
	float                                                        MinScorePenaltyForAlliedShipProximity;             // 0x14(0x4)
	float                                                        MaxScorePenaltyForAlliedShipProximity;             // 0x18(0x4)
	float                                                        MaxDistanceFromAlliedShipToApplyPenalty;           // 0x1c(0x4)
	float                                                        MaxDistanceFromIslandWeHaveMapForToApplyPenalty;   // 0x20(0x4)
	float                                                        ScorePenaltyForIslandsWeHaveMapFor;                // 0x24(0x4)
};


// Size 0x10
struct FeaturedShipCustomisationCategory
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	struct FName                                                 Feature;                                           // 0x8(0x8)
};


// Size 0x50
struct ProjectileWeaponFiredTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct Guid                                                  TelemetryAttackId;                                 // 0x10(0x10)
	struct FString                                               DamagerType;                                       // 0x20(0x10)
	struct FString                                               WeaponName;                                        // 0x30(0x10)
	bool                                                         WasLoaded;                                         // 0x40(0x1)
	bool                                                         WasShotAllowed;                                    // 0x41(0x1)
	bool                                                         WasShotValidated;                                  // 0x42(0x1)
	bool                                                         WasAiming;                                         // 0x43(0x1)
	float                                                        RequesterLatencyMs;                                // 0x44(0x4)
	float                                                        RequesterTimeOffset;                               // 0x48(0x4)
};


// Size 0x20
struct ShipSetSailMessage
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct FString                                               ShipId;                                            // 0x10(0x10)
};


// Size 0x18
struct ResettableSettingsGroup
{
public:
	struct FName                                                 SettingsGroupName;                                 // 0x0(0x8)
	TArray<struct Name>                                          SettingsNames;                                     // 0x8(0x10)
};


// Size 0x18
struct EventPlayerAddedToCrew
{
public:
	class PlayerState*                                           UniqueId;                                          // 0x10(0x8)
};


// Size 0x28
struct CrestPartDesc
{
public:
	struct StringAssetReference                                  CrestMesh;                                         // 0x0(0x10)
	int64                                                        CrestCachedMeshResourceSize;                       // 0x10(0x8)
	TArray<class MaterialInterface*>                             CrestMaterials;                                    // 0x18(0x10)
};


// Size 0x90
struct LightingControllerTransformParams
{
public:
	struct Transform                                             NorthStarRelativeTransform;                        // 0x0(0x30)
	struct Transform                                             SkyDomeRelativeTransform;                          // 0x30(0x30)
	struct Rotator                                               HideoutLightRotation;                              // 0x60(0xc)
	struct Rotator                                               ArenaTavernLightRotation;                          // 0x6c(0xc)
	float                                                        FogHeight;                                         // 0x78(0x4)
	float                                                        UnderworldFogHeight;                               // 0x7c(0x4)
	float                                                        HideoutFogHeight;                                  // 0x80(0x4)
	float                                                        ArenaTavernFogHeight;                              // 0x84(0x4)
};


// Size 0x18
struct CatalogOfferCommodity
{
public:
	class UClass*                                                RequiredEmissary;                                  // 0x0(0x8)
	struct CommoditySelectionType                                Type;                                              // 0x8(0x8)
	char                                                         Demand;                                            // 0x10(0x1)
};


// Size 0x20
struct OnlinePermissionsRequestData
{
public:
	struct UniqueNetIdRepl                                       PlayerUserId;                                      // 0x0(0x18)
	uint32                                                       PermissionMask;                                    // 0x18(0x4)
};


// Size 0x20
struct MountedWeaponFireAcknowledgeRpc
{
public:
	class Object*                                                MountedWeaponObject;                               // 0x18(0x8)
};


// Size 0x40
struct InteractionOption
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
	int                                                          Index;                                             // 0x10(0x4)
	struct FString                                               Icon;                                              // 0x18(0x10)
	struct FString                                               IconNarrationText;                                 // 0x28(0x10)
	bool                                                         IsEnabled;                                         // 0x38(0x1)
};


// Size 0x14
struct CapstanParams
{
public:
	float                                                        MaxVelocityPerPlayer;                              // 0x0(0x4)
	float                                                        MaxFreeLoweringVelocity;                           // 0x4(0x4)
	float                                                        MaxError;                                          // 0x8(0x4)
	float                                                        CorrectiveForceMultiplier;                         // 0xc(0x4)
	float                                                        PlayerAnimationOnCapstanMultiplier;                // 0x10(0x4)
};


// Size 0x48
struct ClientBootFlowLocStateLocUpdateTelemetryEvent
{
public:
	struct FString                                               Culture;                                           // 0x0(0x10)
	int                                                          NumOfEntries;                                      // 0x10(0x4)
	TArray<int>                                                  HashesOfKeysUpdated;                               // 0x18(0x10)
	TArray<int>                                                  HashesOfKeysNotUpdated;                            // 0x28(0x10)
	TArray<int>                                                  HashesOfKeysNotFound;                              // 0x38(0x10)
};


// Size 0x10
struct InvalidFireRequestDetected
{
public:
	class Object*                                                RequestingObject;                                  // 0x0(0x8)
};


// Size 0x20
struct UISeasonsDataErrorEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               ErrorStack;                                        // 0x10(0x10)
};


// Size 0x28
struct AthenaAnimationShopInteractionAnimations
{
public:
	char                                                         ObjectType;                                        // 0x0(0x1)
	class AnimSequence*                                          Into;                                              // 0x8(0x8)
	TArray<class AnimSequence*>                                  Loop;                                              // 0x10(0x10)
	class AnimSequence*                                          Out;                                               // 0x20(0x8)
};


// Size 0x10
struct CrewVoteOutOfBrigEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x60
struct PlayerExitsShopTelemetryEvent
{
public:
	struct FString                                               ShopLocation;                                      // 0x0(0x10)
	struct FString                                               VisitStartDate;                                    // 0x10(0x10)
	uint32                                                       VisitDuration;                                     // 0x20(0x4)
	struct FString                                               ShopName;                                          // 0x28(0x10)
	struct FString                                               CatalogName;                                       // 0x38(0x10)
	struct Guid                                                  CatalogId;                                         // 0x48(0x10)
	bool                                                         ForcedExit;                                        // 0x58(0x1)
};


// Size 0x18
struct MeshMemoryConstraintShipPartMeshSetDelayedHealthReport
{
public:
	bool                                                         DescIsValid;                                       // 0x0(0x1)
	bool                                                         ShouldDescBeReloaded;                              // 0x1(0x1)
	struct FString                                               DescAssetPathName;                                 // 0x8(0x10)
};


// Size 0x60
struct UIPremiumStoreItemInteractEvent
{
public:
	struct FString                                               CurrencyUsed;                                      // 0x0(0x10)
	struct FString                                               EngagementOutcome;                                 // 0x10(0x10)
	struct FString                                               ItemCost;                                          // 0x20(0x10)
	struct FString                                               ItemName;                                          // 0x30(0x10)
	struct FString                                               PageName;                                          // 0x40(0x10)
	struct FString                                               SessionId;                                         // 0x50(0x10)
};


// Size 0x8
struct CameraSpringArmPlayModeParameters
{
public:
	char                                                         PlayMode;                                          // 0x0(0x1)
	float                                                        CameraPullbackSpeed;                               // 0x4(0x4)
};


// Size 0xf0
struct TelemetryStepContext
{
public:
	struct QuestVariableName                                     Name;                                              // 0x0(0x30)
	struct QuestVariableDataAsset                                Asset;                                             // 0x30(0x30)
	struct QuestVariableAsset                                    AssetRef;                                          // 0x60(0x30)
	struct QuestVariableClass                                    Type;                                              // 0x90(0x30)
	struct QuestVariableActor                                    Actor;                                             // 0xc0(0x30)
};


// Size 0x10
struct FogBankDestroyedTelemetryEvent
{
public:
	struct Guid                                                  FogBankId;                                         // 0x0(0x10)
};


// Size 0x40
struct ExplosionShipSizeForceToApplyToShipOverride
{
public:
	struct FName                                                 FeatureFlag;                                       // 0x0(0x8)
	class UClass*                                                ShipSize;                                          // 0x8(0x8)
	struct WeightedProbabilityRangeOfRanges                      ForceToApplyToShip;                                // 0x10(0x30)
};


// Size 0x40
struct AthenaAnimationObjectEquipAnimations
{
public:
	class AnimSequence*                                          Equip;                                             // 0x0(0x8)
	class BlendSpace*                                            EquipAsBlendSpace;                                 // 0x8(0x8)
	class BlendSpace*                                            EquipSwimming;                                     // 0x10(0x8)
	class AnimSequence*                                          UnEquip;                                           // 0x18(0x8)
	class BlendSpace*                                            UnEquipAsBlendSpace;                               // 0x20(0x8)
	class AnimSequence*                                          Pickup;                                            // 0x28(0x8)
	class AnimSequence*                                          Drop;                                              // 0x30(0x8)
	bool                                                         UseEquipBlendSpace;                                // 0x38(0x1)
	bool                                                         UseUnequipBlendSpace;                              // 0x39(0x1)
};


// Size 0x8
struct LiquidProjectileImpactEvent
{
public:
	class UClass*                                                ProjectileType;                                    // 0x0(0x8)
};


// Size 0x10
struct EventSpawnComponentRequest
{
public:
	class SalvageItemSpawnComponent*                             SalvageItemSpawnComponent;                         // 0x0(0x8)
	int                                                          NumberOfLocationsRequested;                        // 0x8(0x4)
};


// Size 0x8
struct EventReceiveAmmoStoreComponentState
{
public:
	class AmmoStoreComponent*                                    Source;                                            // 0x0(0x8)
};


// Size 0x30
struct CaptaincyReponseStartedSessionModel
{
public:
	struct FString                                               SessionToken;                                      // 0x0(0x10)
	int                                                          HeartbeatTimeSeconds;                              // 0x10(0x4)
	int                                                          ShipSaveTimeSeconds;                               // 0x14(0x4)
	bool                                                         ContinuousSaving;                                  // 0x18(0x1)
	bool                                                         FirstTimeSailingShip;                              // 0x19(0x1)
	struct FString                                               ShipName;                                          // 0x20(0x10)
};


// Size 0x28
struct SeatAnimationDefinition
{
public:
	class UClass*                                                AnimationId;                                       // 0x0(0x8)
	struct StringAssetReference                                  Into;                                              // 0x8(0x10)
	struct StringAssetReference                                  Loop;                                              // 0x18(0x10)
};


// Size 0x80
struct PlayerBuriedItemsMapBundlePickedUpTelemetryEvent
{
public:
	struct Guid                                                  MapBundleId;                                       // 0x0(0x10)
	struct Guid                                                  OwningCrewID;                                      // 0x10(0x10)
	struct Guid                                                  PickedUpByPlayerId;                                // 0x20(0x10)
	struct Guid                                                  PickedUpByCrewId;                                  // 0x30(0x10)
	struct Guid                                                  OwningCrewSessionId;                               // 0x40(0x10)
	struct Guid                                                  PickedUpByCrewSessionId;                           // 0x50(0x10)
	TArray<struct Guid>                                          PlayerBuriedItemMapIds;                            // 0x60(0x10)
	TArray<struct Guid>                                          MapIdsOriginalOwners;                              // 0x70(0x10)
};


// Size 0x10
struct LoadableComponentState
{
public:
	char                                                         LoadableState;                                     // 0x0(0x1)
	class Object*                                                LoadedItem;                                        // 0x8(0x8)
};


// Size 0x38
struct WeightedItemDescSpawnData
{
public:
	class ItemSpawnData*                                         ItemSpawnData;                                     // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	bool                                                         LimitMaxSpawnedItems;                              // 0xc(0x1)
	uint32                                                       MaxTimesCanBeSelected;                             // 0x10(0x4)
	struct FName                                                 Feature;                                           // 0x14(0x8)
	bool                                                         InvertFeatureCheck;                                // 0x1c(0x1)
	TArray<class SpawnRequirement*>                              Requirements;                                      // 0x20(0x10)
	bool                                                         CustomLifetimeManagement;                          // 0x30(0x1)
};


// Size 0x50
struct LightingControllerAssetParams
{
public:
	class MaterialParameterCollection*                           AtmosphericMaterialParams;                         // 0x0(0x8)
	class MaterialParameterCollection*                           CloudMaterialParams;                               // 0x8(0x8)
	class MaterialParameterCollection*                           ScreenEffectsMaterialParams;                       // 0x10(0x8)
	class MaterialParameterCollection*                           IslandDangerMaterialParams;                        // 0x18(0x8)
	class LightingControllerSettings*                            UnderworldLightingSet;                             // 0x20(0x8)
	class LightingControllerSettings*                            HideoutLightingSet;                                // 0x28(0x8)
	class LightingControllerSettings*                            ArenaTavernLightingSet;                            // 0x30(0x8)
	class StaticMesh*                                            SkyDomeMesh;                                       // 0x38(0x8)
	class StaticMesh*                                            NorthStarMesh;                                     // 0x40(0x8)
	class StaticMesh*                                            MoonMesh;                                          // 0x48(0x8)
};


// Size 0x30
struct LocText
{
public:
	struct FString                                               Namespace;                                         // 0x0(0x10)
	struct FString                                               Key;                                               // 0x10(0x10)
	struct FString                                               LocalizedText;                                     // 0x20(0x10)
};


// Size 0x10
struct MigrationUIContentsDataAssetEntry
{
public:
	TArray<struct Text>                                          DisplayText;                                       // 0x0(0x10)
};


// Size 0x10
struct RequestArmoryItemLoadoutEvent
{
public:
	TArray<String>                                               Categories;                                        // 0x0(0x10)
};


// Size 0x28
struct ContestCrewMemberModel
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct FString                                               GamerTag;                                          // 0x18(0x10)
};


// Size 0x10
struct MapTableTutorialHandler
{
public:
	class Actor*                                                 CachedMapController;                               // 0x0(0x8)
	class Tutorial2019Component*                                 CachedMapControllerTutorialComponent;              // 0x8(0x8)
};


// Size 0x30
struct ItemStateData
{
public:
	struct FString                                               ItemName;                                          // 0x20(0x10)
};


// Size 0x34
struct AthenaAnimationFishingParams
{
public:
	char                                                         FishingState;                                      // 0x0(0x1)
	bool                                                         InFishing;                                         // 0x1(0x1)
	struct Vector2D                                              RodBend;                                           // 0x4(0x8)
	float                                                        ReelSpeed;                                         // 0xc(0x4)
	bool                                                         CastFailed;                                        // 0x10(0x1)
	bool                                                         IsFishHookedAndVisible;                            // 0x11(0x1)
	struct Vector2D                                              PlayerInputForce;                                  // 0x14(0x8)
	float                                                        TensionShake;                                      // 0x1c(0x4)
	float                                                        LineSnapShake;                                     // 0x20(0x4)
	bool                                                         IKIsActive;                                        // 0x24(0x1)
	float                                                        IKBlendInSpeed;                                    // 0x28(0x4)
	float                                                        IKBlendIOutSpeed;                                  // 0x2c(0x4)
	bool                                                         IsComedyItem;                                      // 0x30(0x1)
	char                                                         FishingJIPState;                                   // 0x31(0x1)
};


// Size 0xc
struct CrewManagementArenaRivalVotingData
{
public:
	bool                                                         Voted;                                             // 0x0(0x1)
	int                                                          VotesCast;                                         // 0x4(0x4)
	int                                                          VotesRequired;                                     // 0x8(0x4)
};


// Size 0x38
struct StartCameraFadeRpc
{
public:
	float                                                        FromAlpha;                                         // 0x18(0x4)
	float                                                        ToAlpha;                                           // 0x1c(0x4)
	float                                                        FadeTimeInSeconds;                                 // 0x20(0x4)
	struct LinearColor                                           FadeColour;                                        // 0x24(0x10)
	bool                                                         ShouldFadeAudio;                                   // 0x34(0x1)
	bool                                                         HoldFadeWhenFinished;                              // 0x35(0x1)
};


// Size 0x10
struct PetChestRemovePetEvent
{
public:
	TArray<class Class*>                                         Removes;                                           // 0x0(0x10)
};


// Size 0x10
struct ToggledSpawnerOverride
{
public:
	class AISpawner*                                             Spawner;                                           // 0x0(0x8)
	struct FName                                                 Toggle;                                            // 0x8(0x8)
};


// Size 0x170
struct ShipLiveryCatalogueEntry
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct StringAssetReference                                  Desc;                                              // 0x10(0x10)
	struct StringAssetReference                                  RowboatLiveryDesc;                                 // 0x20(0x10)
	TArray<struct Text>                                          Names;                                             // 0x30(0x10)
	class UClass*                                                ShipSize;                                          // 0x40(0x8)
	bool                                                         AvailableToGame;                                   // 0x48(0x1)
	struct FName                                                 FeatureName;                                       // 0x4c(0x8)
	struct FText                                                 ShipTeamName;                                      // 0x58(0x38)
	struct FText                                                 ArenaCrewWelcomeMessage;                           // 0x90(0x38)
	struct FText                                                 ShipUINotificationTeamName;                        // 0xc8(0x38)
	class Texture*                                               ShipScrollTeamIcon;                                // 0x100(0x8)
	struct StringAssetReference                                  ShipToastTeamIcon;                                 // 0x108(0x10)
	struct StringAssetReference                                  ShipToastTeamBackgroundImage;                      // 0x118(0x10)
	struct StringAssetReference                                  ShipToastForegroundArtWork;                        // 0x128(0x10)
	struct StringAssetReference                                  ShipTeamBackgroundImage;                           // 0x138(0x10)
	struct FName                                                 AudioEventName;                                    // 0x148(0x8)
	struct StringAssetReference                                  TeamTavernBannerTexture;                           // 0x150(0x10)
	class Texture*                                               CrewLiveryOverlayIcon;                             // 0x160(0x8)
	bool                                                         AvailableWhenFeatureEnabled;                       // 0x168(0x1)
	bool                                                         AvailableWhenFeatureDisabled;                      // 0x169(0x1)
};


// Size 0x38
struct EventSendNewTextMessageToServer
{
public:
	struct FText                                                 Message;                                           // 0x0(0x38)
};


// Size 0xc
struct WorldMapSetShipLocation
{
public:
	float                                                        ShipX;                                             // 0x0(0x4)
	float                                                        ShipY;                                             // 0x4(0x4)
	float                                                        Rotation;                                          // 0x8(0x4)
};


// Size 0x60
struct EventRequestRespawn
{
public:
	class Pawn*                                                  Character;                                         // 0x0(0x8)
	char                                                         RespawnType;                                       // 0x8(0x1)
};


// Size 0x68
struct QuestTableRankSkin
{
public:
	struct FText                                                 DisplayName;                                       // 0x0(0x38)
	struct FString                                               RibbonImageUrl;                                    // 0x38(0x10)
	struct FString                                               CurrentBackgroundUrl;                              // 0x48(0x10)
	struct FString                                               NextBackgroundUrl;                                 // 0x58(0x10)
};


// Size 0x20
struct DebugSuperSailorSetFwdSpeedRPCEvent
{
public:
	float                                                        FwdSpd;                                            // 0x18(0x4)
};


// Size 0x8
struct DrapesPartDesc
{
public:
	class MaterialInterface*                                     DrapesMaterial;                                    // 0x0(0x8)
};


// Size 0x40
struct CanShowQuaternaryActionButton
{
public:
	bool                                                         CanShow;                                           // 0x4(0x1)
	struct FText                                                 Text;                                              // 0x8(0x38)
};


// Size 0x18
struct GameEventSchedulerStateTelemetryFragment
{
public:
	struct FString                                               SelectedScheduleStory;                             // 0x0(0x10)
	bool                                                         IsSchedulerReady;                                  // 0x10(0x1)
	bool                                                         IsUsingCustomisedControl;                          // 0x11(0x1)
	bool                                                         IsActiveConfigValid;                               // 0x12(0x1)
	bool                                                         IsWaitingNextConfig;                               // 0x13(0x1)
	bool                                                         IsOnDemandGameEventActive;                         // 0x14(0x1)
};


// Size 0x28
struct FlagAlignmentCosmetic
{
public:
	struct FName                                                 ScalarParameterName;                               // 0x0(0x8)
	class MaterialInstanceDynamic*                               FlagMaterialDynamic;                               // 0x8(0x8)
	class CurveFloat*                                            Curve;                                             // 0x20(0x8)
};


// Size 0x30
struct MovedByPortableHarpoonGrappleActionStateParams
{
public:
	float                                                        MaxHorizontalSpeedToInheritOnCompletion;           // 0x18(0x4)
	bool                                                         OnlyInheritHorizontalSpeedWhenVaulting;            // 0x1c(0x1)
	float                                                        UpwardVaultSpeedOnCompletion;                      // 0x20(0x4)
	float                                                        MinTargetSurfaceAngleForVault;                     // 0x24(0x4)
	float                                                        MaxDirectionToSurfaceNormalAngleForVault;          // 0x28(0x4)
	float                                                        MaxVerticalDirectionAngleForVault;                 // 0x2c(0x4)
};


// Size 0x98
struct CrewOwnershipTrackingComponentMetaWrapper
{
public:
	struct Guid                                                  SpawningCrewId;                                    // 0x18(0x10)
	struct Guid                                                  CurrentOwnedByCrewId;                              // 0x28(0x10)
	struct OwnerListEntry                                        PreviousOwnedByCrewIdList;                         // 0x38(0x10)
	map                                                          CustomTrackingMap;                                 // 0x48(0x50)
};


// Size 0x14
struct LastCrewMemberEnteredTunnel
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	bool                                                         ShouldCancelEmergentVoyages;                       // 0x10(0x1)
	bool                                                         ShouldCancelPrimaryVoyages;                        // 0x11(0x1)
	bool                                                         ShouldCancelEmergentVoyagesExcludingEmissary;      // 0x12(0x1)
};


// Size 0x78
struct CinematicShipNetworkEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x18(0x10)
	struct Guid                                                  GuildId;                                           // 0x28(0x10)
	struct FText                                                 Header;                                            // 0x38(0x38)
	struct FName                                                 Tag;                                               // 0x70(0x8)
};


// Size 0x14
struct PurchaseRequestFailedResponse
{
public:
	struct Guid                                                  TransactionId;                                     // 0x0(0x10)
	char                                                         Reason;                                            // 0x10(0x1)
};


// Size 0x30
struct WieldingParamsAssetLookup
{
public:
	assetclass                                                   Class;                                             // 0x0(0x20)
	struct StringAssetReference                                  Params;                                            // 0x20(0x10)
};


// Size 0x10
struct StreamingTelemetryConfigurationSettings
{
public:
	int                                                          PercentageOfPlayersToSendTelemetryFromForHighLOD;  // 0x0(0x4)
	int                                                          PercentageOfPlayersToSendTelemetryFromForLowLOD;   // 0x4(0x4)
	int                                                          PercentageOfPlayersToSendVerboseTelemetryFromForHighLOD; // 0x8(0x4)
	int                                                          PercentageOfPlayersToSendVerboseTelemetryFromForLowLOD; // 0xc(0x4)
};


// Size 0xb0
struct VoyageBegunAnimationEvent
{
public:
	struct FText                                                 ShipName;                                          // 0x0(0x38)
	TArray<String>                                               CrewMembers;                                       // 0x38(0x10)
	int                                                          ChapterIndex;                                      // 0x48(0x4)
	int                                                          ChapterCount;                                      // 0x4c(0x4)
	struct FText                                                 VoyageTitle;                                       // 0x50(0x38)
	struct FString                                               AudioSwitchName;                                   // 0x88(0x10)
	struct FString                                               AudioSwitchValue;                                  // 0x98(0x10)
	struct FName                                                 CompanyId;                                         // 0xa8(0x8)
};


// Size 0x1
struct SetDisableGuildActionNotifications
{
public:
	bool                                                         Value;                                             // 0x0(0x1)
};


// Size 0x8
struct EventReceiveChestOfRageComponentState
{
public:
	class ChestOfRageComponent*                                  Source;                                            // 0x0(0x8)
};


// Size 0x18
struct CrewMutePlayerChatEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	bool                                                         IsMuted;                                           // 0x10(0x1)
};


// Size 0x10
struct ReplenishShipGameServerRequestModel
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x10
struct OnStartSprintingOnWalkwayEvent
{
public:
	class WwiseEvent*                                            WalkwaySprintLoopStart;                            // 0x0(0x8)
	class WwiseEvent*                                            WalkwayLoopEnd;                                    // 0x8(0x8)
};


// Size 0x50
struct VoyageProposedEvent
{
public:
	class VoyageProposalDesc*                                    ProposalDesc;                                      // 0x0(0x8)
	class VoyageProposalDesc*                                    VisualsProposalDesc;                               // 0x8(0x8)
	class VoyageProposalDesc*                                    TemplateProposalDesc;                              // 0x10(0x8)
	class VoyageRecipeDataAsset*                                 VoyageRecipe;                                      // 0x18(0x8)
	int                                                          Rank;                                              // 0x20(0x4)
	class UClass*                                                Company;                                           // 0x28(0x8)
	class PlayerState*                                           Proposer;                                          // 0x30(0x8)
	struct FString                                               InstanceId;                                        // 0x38(0x10)
	bool                                                         AutoVoteOnVoyage;                                  // 0x48(0x1)
	bool                                                         VoyageIsShipEntitlement;                           // 0x49(0x1)
	bool                                                         LimitedVoyage;                                     // 0x4a(0x1)
	bool                                                         WantDiveToTunnel;                                  // 0x4b(0x1)
};


// Size 0x30
struct VoteRemovedNetworkEvent
{
public:
	struct FName                                                 CompanyId;                                         // 0x18(0x8)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
};


// Size 0x10
struct QuestWeightedDistance
{
public:
	float                                                        Min;                                               // 0x0(0x4)
	float                                                        Max;                                               // 0x4(0x4)
	float                                                        MinWeight;                                         // 0x8(0x4)
	float                                                        MaxWeight;                                         // 0xc(0x4)
};


// Size 0x1
struct EventInGameUISetMigrationMode
{
public:
	bool                                                         MigrationModeEnabled;                              // 0x0(0x1)
};


// Size 0x80
struct RewardHandInPopupNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
	class PopUpAudioDesc*                                        AudioOverride;                                     // 0x20(0x8)
	struct FText                                                 FormattingText;                                    // 0x28(0x38)
	TArray<String>                                               Images;                                            // 0x60(0x10)
	struct StringAssetReference                                  StampIcon;                                         // 0x70(0x10)
};


// Size 0x4
struct CompanyLevelDataTable
{
public:
	int                                                          XpRequiredForLevel;                                // 0x0(0x4)
};


// Size 0x10
struct PlayerNewLevelEvent
{
public:
	uint32                                                       NewLevel;                                          // 0x0(0x4)
	uint32                                                       PreviousLevel;                                     // 0x4(0x4)
	struct FName                                                 CompanyId;                                         // 0x8(0x8)
};


// Size 0x20
struct QueryMigrationStatusRpc
{
public:
	class AthenaPlayerController*                                AthenaPlayerController;                            // 0x18(0x8)
};


// Size 0x10
struct ClueSiteTypeToMarkId
{
public:
	class UClass*                                                ClueSiteType;                                      // 0x0(0x8)
	class UClass*                                                MapMarkId;                                         // 0x8(0x8)
};


// Size 0x18
struct AthenaStreamedLevelSettings
{
public:
	struct FString                                               UniqueId;                                          // 0x0(0x10)
	bool                                                         IsVisible;                                         // 0x10(0x1)
};


// Size 0x10
struct JoinSessionFailedEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x20
struct SubModeLevel
{
public:
	struct FString                                               SubMode;                                           // 0x0(0x10)
	struct StringAssetReference                                  Level;                                             // 0x10(0x10)
};


// Size 0x58
struct TutorialStepDependencies
{
public:
	class AthenaPlayerController*                                Controller;                                        // 0x0(0x8)
};


// Size 0x84
struct EventCharacterLanded
{
public:
	struct HitResult                                             HitResult;                                         // 0x0(0x80)
	float                                                        VerticalSpeed;                                     // 0x80(0x4)
};


// Size 0x4
struct EventSetFishingLineSnapShake
{
public:
	float                                                        LineSnapShake;                                     // 0x0(0x4)
};


// Size 0x18
struct LoadoutItemCostResponseModel
{
public:
	struct FString                                               Currency;                                          // 0x0(0x10)
	int                                                          Amount;                                            // 0x10(0x4)
};


// Size 0x38
struct PlayerModerationReportablePlayerDetails
{
public:
	struct FString                                               ReportableGamerTag;                                // 0x0(0x10)
	struct FString                                               ScrambledGamerTag;                                 // 0x10(0x10)
	struct FString                                               Xuid;                                              // 0x20(0x10)
	char                                                         Platform;                                          // 0x30(0x1)
};


// Size 0x10
struct PlayerAggregatePositionTelemetryFragmentInput
{
public:
	TArray<struct Vector>                                        PositionData;                                      // 0x0(0x10)
};


// Size 0x8
struct EventItemDroppedOnWater
{
public:
	class Actor*                                                 DroppedActor;                                      // 0x0(0x8)
};


// Size 0x14
struct ScrambledIdentityRemovalEvent
{
public:
	struct Guid                                                  EntityId;                                          // 0x0(0x10)
	char                                                         ScrambleType;                                      // 0x10(0x1)
};


// Size 0x40
struct EncounterListenerData
{
public:
	TArray<char>                                                 EncounterListenerTypes;                            // 0x0(0x10)
	TArray<class Actor*>                                         EncounterListenerActors;                           // 0x10(0x10)
	TArray<struct Vector>                                        EncounterListenerLocations;                        // 0x20(0x10)
};


// Size 0x24
struct TiledCloudProperties
{
public:
	struct Vector2D                                              TilePosition;                                      // 0x0(0x8)
	int                                                          CloudTypeIndex;                                    // 0x8(0x4)
	float                                                        RelativeRadius;                                    // 0xc(0x4)
	float                                                        Scale;                                             // 0x10(0x4)
	float                                                        PressureThreshold;                                 // 0x14(0x4)
	float                                                        RotationYaw;                                       // 0x18(0x4)
	float                                                        OverlapTolerance;                                  // 0x1c(0x4)
};


// Size 0x50
struct CommerceRemoteServiceWalletTransactionResponse
{
public:
	map                                                          Balances;                                          // 0x0(0x50)
};


// Size 0x20
struct ClientNameUpdateEvent
{
public:
	struct Guid                                                  EntityId;                                          // 0x0(0x10)
	struct FString                                               ClientName;                                        // 0x10(0x10)
};


// Size 0x8
struct EntitlementMapRedirectorFailedEvent
{
public:
	struct FName                                                 DeprecatedEntitlementId;                           // 0x0(0x8)
};


// Size 0x4
struct MastSailLoweredProportionBecameStationaryEvent
{
public:
	float                                                        Proportion;                                        // 0x0(0x4)
};


// Size 0x10
struct ReplyToGuildInviteSuccessEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
};


// Size 0x58
struct AshenLordCustomEncounterSettings
{
public:
	bool                                                         ShouldEncounterGiveRewardsWhenCompleted;           // 0x0(0x1)
	class UClass*                                                CustomDioramaCategory;                             // 0x8(0x8)
	class UClass*                                                CustomAshenLordClassID;                            // 0x10(0x8)
	assetclass                                                   CustomEventSignalClass;                            // 0x18(0x20)
	struct StringAssetReference                                  CustomAshenLordSkillsetClass;                      // 0x38(0x10)
	TArray<struct Name>                                          AlwaysAllowedIslands;                              // 0x48(0x10)
};


// Size 0x48
struct CanvasWorldMapTextBanner
{
public:
	class Texture*                                               BannerLeftTexture;                                 // 0x0(0x8)
	class Texture*                                               BannerCentreTexture;                               // 0x8(0x8)
	class Texture*                                               BannerRightTexture;                                // 0x10(0x8)
	float                                                        TextureScale;                                      // 0x18(0x4)
	float                                                        VerticalOffset;                                    // 0x1c(0x4)
	bool                                                         ScalesWithText;                                    // 0x20(0x1)
	float                                                        BannerLeftOverlapPct;                              // 0x24(0x4)
	float                                                        BannerRightOverlapPct;                             // 0x28(0x4)
	struct LinearColor                                           TextColor;                                         // 0x2c(0x10)
	float                                                        TextScale;                                         // 0x3c(0x4)
	float                                                        TextPadding;                                       // 0x40(0x4)
};


// Size 0x40
struct StraightenNudgedTrinketActionRuleParams
{
public:
	class UClass*                                                StraightenNudgedTrinketNotificationInputId;        // 0x0(0x8)
	struct FText                                                 StraightenNudgedTrinketText;                       // 0x8(0x38)
};


// Size 0xb8
struct QuestTableCompanyVoyageInfoCategory
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct FText                                                 Description;                                       // 0x38(0x38)
	struct FText                                                 Suggestion;                                        // 0x70(0x38)
	struct FString                                               BackgroundImageUrl;                                // 0xa8(0x10)
};


// Size 0x8
struct AthenaAnimationSinkingTunnelAnimData
{
public:
	class AnimSequence*                                          Drowning;                                          // 0x0(0x8)
};


// Size 0x38
struct ClientRequestTeleportCompleteAckNetworkEvent
{
public:
	class SceneComponent*                                        Base;                                              // 0x18(0x8)
	struct Vector                                                Location;                                          // 0x20(0xc)
	struct Rotator                                               Rotation;                                          // 0x2c(0xc)
};


// Size 0x1
struct EventAthenaLocalPlayerGamepadTypeChange
{
public:
	char                                                         GamepadType;                                       // 0x0(0x1)
};


// Size 0x10
struct EntitlementInfosFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x4
struct PlayModeVariantResponse
{
public:
	int                                                          Variant;                                           // 0x0(0x4)
};


// Size 0x10
struct BootyItemSellPrerequisites
{
public:
	TArray<class Class*>                                         Entitlements;                                      // 0x0(0x10)
};


// Size 0xc
struct SetTriggerDetectingEntityGameServerRequestModel
{
public:
	int                                                          EntityNetId;                                       // 0x8(0x4)
};


// Size 0x1
struct EventFaunaAnimationTransition
{
public:
	char                                                         AnimationState;                                    // 0x0(0x1)
};


// Size 0x20
struct ClientScheduleShutdownNetworkEvent
{
public:
	int64                                                        ShutdownTimeTicks;                                 // 0x18(0x8)
};


// Size 0x1
struct QuestTableShipState
{
public:
	bool                                                         HasLoot;                                           // 0x0(0x1)
};


// Size 0x1
struct EventSetFishingAnimationState
{
public:
	char                                                         State;                                             // 0x0(0x1)
};


// Size 0x10
struct SessionVisibilityChangedTelemetryEvent
{
public:
	struct FString                                               SessionVisibility;                                 // 0x0(0x10)
};


// Size 0x18
struct EventPlayerRemovedFromCrew
{
public:
	class PlayerState*                                           UniqueId;                                          // 0x10(0x8)
};


// Size 0x10
struct WeightedItemDescSpawnDataWithRandomQuantityResult
{
public:
	class ItemSpawnData*                                         ItemSpawnData;                                     // 0x0(0x8)
	bool                                                         CustomLifetimeManagement;                          // 0xc(0x1)
};


// Size 0x1
struct PushToTalkModeChangedEvent
{
public:
	char                                                         PushToTalkMode;                                    // 0x0(0x1)
};


// Size 0x8
struct VoyageWithdrawnEvent
{
public:
	class PlayerState*                                           Proposer;                                          // 0x0(0x8)
};


// Size 0x50
struct InteractionInputComponentTickFunction
{
public:
	class InteractionInputComponent*                             Target;                                            // 0x48(0x8)
};


// Size 0x38
struct ReactionVOEntry
{
public:
	struct FName                                                 VOGroupName;                                       // 0x0(0x8)
	struct WeightedProbabilityRangeOfRanges                      VOCooldown;                                        // 0x8(0x30)
};


// Size 0x8
struct MechanismTransformAnimationCurve
{
public:
	class MechanismAnimationCurve_Transform*                     CurveAsset;                                        // 0x0(0x8)
};


// Size 0x28
struct NamedPointsCollectionGroup
{
public:
	struct FName                                                 GroupName;                                         // 0x0(0x8)
	TArray<struct OrientedPoint>                                 GroupPoints;                                       // 0x8(0x10)
	TArray<char>                                                 GroupTags;                                         // 0x18(0x10)
};


// Size 0x38
struct InteractOnServerRpc
{
public:
	struct NetSubObjectPtr                                       Interactable;                                      // 0x18(0x14)
	class UClass*                                                NotificationInputId;                               // 0x30(0x8)
};


// Size 0x4
struct UISlatePerformanceTelemetryFragment
{
public:
	uint32                                                       NumAtlasPages;                                     // 0x0(0x4)
};


// Size 0x8
struct EventPlayerControllerDestroyedCalled
{
public:
	class AthenaPlayerController*                                Controller;                                        // 0x0(0x8)
};


// Size 0x24
struct FogBankStoryRelatedSettings
{
public:
	struct StoryFlag                                             Story;                                             // 0x0(0x8)
	float                                                        Density;                                           // 0x8(0x4)
	struct LinearColor                                           FogColour;                                         // 0xc(0x10)
	float                                                        FadeInDuration;                                    // 0x1c(0x4)
	float                                                        MaximumAudioFogIntensityRTPC;                      // 0x20(0x4)
};


// Size 0xc
struct FogBankManagerIslandNamesToKeepAwayFrom
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	float                                                        MinimumDistanceFromIslandInKm;                     // 0x8(0x4)
};


// Size 0x10
struct PetAnimationDataPreview
{
public:
	struct StringAssetReference                                  MontageData;                                       // 0x0(0x10)
};


// Size 0x10
struct IslandFaunaPopulatedChance
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	int                                                          IslandPopulatedChance;                             // 0xc(0x4)
};


// Size 0x28
struct StreamedLevelData
{
public:
	char                                                         StreamedLevelIdentity;                             // 0x0(0x1)
	int                                                          StreamedLevelId;                                   // 0x4(0x4)
	TArray<class SpawnLocation*>                                 ExitPointsFromSpawnedLevel;                        // 0x8(0x10)
	TArray<class SpawnLocation*>                                 ExitPointsFromEntrance;                            // 0x18(0x10)
};


// Size 0x28
struct MatineeActorSetPositionNetworkEvent
{
public:
	class MatineeActor*                                          MatineeActor;                                      // 0x18(0x8)
	float                                                        InterpolationPosition;                             // 0x20(0x4)
	bool                                                         Jump;                                              // 0x24(0x1)
};


// Size 0x18
struct IndividualMeshScoring
{
public:
	struct Guid                                                  RegistrationToken;                                 // 0x0(0x10)
	class Actor*                                                 MeshOwner;                                         // 0x10(0x8)
};


// Size 0x20
struct PrepareInstantFireRpc
{
public:
	class TestProjectileWeapon*                                  Weapon;                                            // 0x18(0x8)
};


// Size 0x10
struct EventDiggingStarted
{
public:
	char                                                         DigDirection;                                      // 0x0(0x1)
	class Actor*                                                 ActorBeingDugUp;                                   // 0x8(0x8)
};


// Size 0x8
struct EventPlayerEnteredProximity
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0x18
struct EventPlayerStatePawnPossessed
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
	class Pawn*                                                  PossessedPawn;                                     // 0x8(0x8)
	bool                                                         IsLocalPlayer;                                     // 0x10(0x1)
};


// Size 0x78
struct TreasureMapWidgetLocalisedText
{
public:
	struct FText                                                 Text;                                              // 0x40(0x38)
};


// Size 0x10
struct ArrivalTunnelOfTheDamnedBaseTelemetryFragment
{
public:
	struct Guid                                                  LinkedDepartureTunnelId;                           // 0x0(0x10)
};


// Size 0x18
struct CannonEnchantmentDesc
{
public:
	class Object*                                                MuzzleFlashVfxFirstPerson;                         // 0x0(0x8)
	class Object*                                                MuzzleFlashVfxThirdPerson;                         // 0x8(0x8)
	class WwiseEvent*                                            FireSfx;                                           // 0x10(0x8)
};


// Size 0x80
struct TradeRouteMapData
{
public:
	struct InterpCurveVector2D                                   TradeRoutePath;                                    // 0x48(0x18)
	struct Vector2D                                              TradeRoutePathOffset;                              // 0x60(0x8)
	float                                                        TradeRoutePathSpacing;                             // 0x68(0x4)
	float                                                        TradeRoutePathSegmentTextureWidth;                 // 0x6c(0x4)
	float                                                        TradeRoutePathSegmentTextureLength;                // 0x70(0x4)
	bool                                                         NormalizeSplinePointSpacing;                       // 0x74(0x1)
	float                                                        NormalizeAdjustment;                               // 0x78(0x4)
	bool                                                         IgnoreFirstPoint;                                  // 0x7c(0x1)
};


// Size 0x38
struct UIPremiumStorePanelHighlightTelemetryEvent
{
public:
	struct FString                                               CurrentPage;                                       // 0x0(0x10)
	struct FString                                               CurrentPanel;                                      // 0x10(0x10)
	struct FString                                               SessionId;                                         // 0x20(0x10)
	float                                                        TimeOnPanel;                                       // 0x30(0x4)
};


// Size 0x78
struct HangingActionStateParams
{
public:
	char                                                         ControllableObjectType;                            // 0x18(0x1)
	class UClass*                                                HangingAnimationId;                                // 0x20(0x8)
	class WwiseEvent*                                            OnSitSfx;                                          // 0x28(0x8)
	class WwiseEvent*                                            OnStandSfx;                                        // 0x30(0x8)
	class WwiseObjectPoolWrapper*                                SeatPool;                                          // 0x38(0x8)
	bool                                                         AllowInteractWithOtherObjectsWhileSitting;         // 0x40(0x1)
	TArray<class Class*>                                         AllowedInteractableTypes;                          // 0x48(0x10)
	TArray<class Class*>                                         AllowedInteractionNotificationInputIds;            // 0x58(0x10)
	bool                                                         DisableDisengageInput;                             // 0x68(0x1)
	bool                                                         ThirdPersonCameraEnabled;                          // 0x69(0x1)
	class AthenaSpringArmComponentParams*                        ThirdPersonCameraParams;                           // 0x70(0x8)
};


// Size 0x18
struct LargeSessionEncounterDevTelemetryEvent
{
public:
	struct FString                                               EncounteredUserId;                                 // 0x0(0x10)
	bool                                                         TaskSucceeded;                                     // 0x10(0x1)
};


// Size 0x28
struct CatalogDescTabCatalogOverrides
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	TArray<struct Name>                                          RequiredCampaigns;                                 // 0x10(0x10)
	class CatalogDataAsset*                                      Catalog;                                           // 0x20(0x8)
};


// Size 0x10
struct ArrivalTunnelOfTheDamnedBaseTelemetryFragmentInput
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x20
struct CanvasWorldMapForegroundItems
{
public:
	class Texture*                                               Texture;                                           // 0x0(0x8)
	struct FName                                                 FeatureToggle;                                     // 0x8(0x8)
	TArray<struct Vector2D>                                      Locations;                                         // 0x10(0x10)
};


// Size 0x18
struct ShippingStatsTelemetryFragment
{
public:
	struct JsonObjectWrapper                                     Json;                                              // 0x0(0x18)
};


// Size 0x20
struct EndedGuildedSessionEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  GuildId;                                           // 0x10(0x10)
};


// Size 0x20
struct ShipEnteredTunnelOfTheDamnedEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class Actor*                                                 Ship;                                              // 0x10(0x8)
	bool                                                         CrossLevel;                                        // 0x18(0x1)
};


// Size 0x18
struct ItemSpawnTransformOverrideEntry
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	class WeightedItemDescSpawnDataAsset*                        ReferencedSpawnDistributionAsset;                  // 0x10(0x8)
};


// Size 0x8
struct SetTriggerDetectingGameServerRequestModel
{
public:
	int                                                          NetId;                                             // 0x0(0x4)
	bool                                                         Detecting;                                         // 0x4(0x1)
};


// Size 0x8
struct MechanismFloatAnimationCurve
{
public:
	class MechanismAnimationCurve_Float*                         CurveAsset;                                        // 0x0(0x8)
};


// Size 0x8
struct InteractionCompletedEvent
{
public:
	class Actor*                                                 InteractingPlayer;                                 // 0x0(0x8)
};


// Size 0x40
struct GuildBrandingTextureCollection
{
public:
	struct FString                                               ColourSwatchIdentifier;                            // 0x0(0x10)
	struct StringAssetReference                                  GuildFlagIcon;                                     // 0x10(0x10)
	struct StringAssetReference                                  GuildPennantIcon;                                  // 0x20(0x10)
	struct StringAssetReference                                  GuildToastBackground;                              // 0x30(0x10)
};


// Size 0x1
struct EventKeybindCaptureRequest
{
public:
	char                                                         ControllerTypeKeyToExpect;                         // 0x0(0x1)
};


// Size 0xc
struct EventItemUseAINoiseEvent
{
public:
	float                                                        NoiseRange;                                        // 0x0(0x4)
	struct FName                                                 NoiseTag;                                          // 0x4(0x8)
};


// Size 0x20
struct PlayerChangedShipLoadoutTelemetryEvent
{
public:
	struct FString                                               ShipEquippedItemType;                              // 0x0(0x10)
	struct FString                                               ShipEquippedItemName;                              // 0x10(0x10)
};


// Size 0x18
struct PlayerDefeatedReapersTributeShip
{
public:
	struct Guid                                                  ControllingCrewId;                                 // 0x0(0x10)
	class Actor*                                                 ReapersTributeShip;                                // 0x10(0x8)
};


// Size 0xc
struct EmissaryNotificationState
{
public:
	float                                                        CurrentRepTotal;                                   // 0x0(0x4)
	struct FName                                                 CompanyId;                                         // 0x4(0x8)
};


// Size 0x38
struct ItemSnapshot
{
public:
	class ItemInfo*                                              ProtectedItemInfo;                                 // 0x10(0x8)
	struct StringAssetReference                                  ItemDesc;                                          // 0x18(0x10)
	struct Guid                                                  Id;                                                // 0x28(0x10)
};


// Size 0x10
struct BootFlowUpdateTaskStatusEvent
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x20
struct TestNetworkEvent
{
public:
	int                                                          Data;                                              // 0x18(0x4)
};


// Size 0x10
struct CompanyMeshVoteIndicator
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	class StaticMeshComponent*                                   Mesh;                                              // 0x8(0x8)
};


// Size 0x18
struct EncounterListener
{
public:
	class Actor*                                                 EncounterListenerActor;                            // 0x0(0x8)
	struct Vector                                                EncounterListenerLocation;                         // 0x8(0xc)
	char                                                         EncounterListenerType;                             // 0x14(0x1)
};


// Size 0x18
struct SpawnActorPerformanceStatsTelemetryFragment
{
public:
	struct FString                                               ActorClassName;                                    // 0x0(0x10)
	float                                                        ActorSpawnTime;                                    // 0x10(0x4)
};


// Size 0x14
struct EventOnCrewStorageFull
{
public:
	struct Guid                                                  CrewStoring;                                       // 0x0(0x10)
	int16                                                        IslandHash;                                        // 0x10(0x2)
};


// Size 0x8
struct CutsceneResponseData
{
public:
	struct FName                                                 CutsceneName;                                      // 0x0(0x8)
};


// Size 0x20
struct ConditionalStatContext
{
public:
	class Object*                                                ObjectOfInterest1;                                 // 0x0(0x8)
	class Object*                                                ObjectOfInterest2;                                 // 0x8(0x8)
};


// Size 0x8
struct PlayerPositionTelemetryFragmentInput
{
public:
	class PlayerController*                                      PlayerController;                                  // 0x0(0x8)
};


// Size 0x30
struct StoreAuthModel
{
public:
	struct FString                                               AuthorizationCode;                                 // 0x0(0x10)
	struct FString                                               NPTitleId;                                         // 0x10(0x10)
	struct FString                                               ContentId;                                         // 0x20(0x10)
};


// Size 0x1c
struct QueuedCutsceneData
{
public:
	struct FName                                                 CutsceneName;                                      // 0x0(0x8)
};


// Size 0x20
struct PiratePreviewView
{
public:
	struct FName                                                 CameraName;                                        // 0x0(0x8)
	struct FName                                                 LookAtBoneName;                                    // 0x8(0x8)
	class AnimationAsset*                                        Anim;                                              // 0x10(0x8)
	bool                                                         ShouldSpin;                                        // 0x18(0x1)
};


// Size 0x4
struct ActorDeactivationStarted
{
public:
	float                                                        DeactivationDuration;                              // 0x0(0x4)
};


// Size 0x68
struct MeshMemoryConstraintCannonDelayedHealthReport
{
public:
	bool                                                         DidMakeAttemptToSetBoxMesh;                        // 0x18(0x1)
	bool                                                         DidMakeAttemptToSetBarrelMesh;                     // 0x19(0x1)
	struct FString                                               BoxDescAssetPathName;                              // 0x20(0x10)
	struct FString                                               BarrelDescAssetPathName;                           // 0x30(0x10)
	bool                                                         BoxMeshIsValid;                                    // 0x40(0x1)
	bool                                                         BarrelMeshIsValid;                                 // 0x41(0x1)
	struct FString                                               BoxMeshAssetPathName;                              // 0x48(0x10)
	struct FString                                               BarrelMeshAssetPathName;                           // 0x58(0x10)
};


// Size 0x18
struct CaptainsLogbookAccoladeDefinition
{
public:
	struct FString                                               ServiceGuid;                                       // 0x0(0x10)
	class Texture*                                               Image;                                             // 0x10(0x8)
};


// Size 0x58
struct AimAssistStyleData
{
public:
	class UClass*                                                WeaponCategory;                                    // 0x0(0x8)
	float                                                        HipFireTargetMaxDistance;                          // 0x8(0x4)
	class CurveFloat*                                            HipFireTargetDistanceFromPlayerToInfluenceRadius;  // 0x10(0x8)
	float                                                        AimingDownSightsTargetMaxDistance;                 // 0x18(0x4)
	class CurveFloat*                                            AimingDownSightsTargetDistanceFromPlayerToInfluenceRadius; // 0x20(0x8)
	class CurveFloat*                                            TargetDistanceFromPlayerToSlowDownAtZeroPlayerSpeed; // 0x28(0x8)
	class CurveFloat*                                            TargetDistanceFromPlayerToSlowDownAtFullPlayerSpeed; // 0x30(0x8)
	class CurveFloat*                                            TargetDistanceFromPlayerToSlowDownAtZeroPlayerSpeedHipFire; // 0x38(0x8)
	class CurveFloat*                                            TargetDistanceFromPlayerToSlowDownAtFullPlayerSpeedHipFire; // 0x40(0x8)
	class CurveFloat*                                            TargetDistanceFromPlayerToTargetRotationalVeloctyCompensation; // 0x48(0x8)
	class CurveFloat*                                            TargetDistanceFromPlayerToTargetRotationalVeloctyCompensationHipFire; // 0x50(0x8)
};


// Size 0x4
struct EventGhostShipLevelLoaded
{
public:
	int                                                          LevelId;                                           // 0x0(0x4)
};


// Size 0x18
struct FeatureToggledLevels
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	TArray<struct StringAssetReference>                          Levels;                                            // 0x8(0x10)
};


// Size 0x8
struct ChestLeaveWatercraftEvent
{
public:
	class Actor*                                                 CurrentWatercraft;                                 // 0x0(0x8)
};


// Size 0x10
struct WaterBarrelFeedbackLevel
{
public:
	float                                                        Strength;                                          // 0x0(0x4)
	class ForceFeedbackEffect*                                   Effect;                                            // 0x8(0x8)
};


// Size 0x78
struct WheelAnimationProperties
{
public:
	float                                                        MaxWheelAngle;                                     // 0x0(0x4)
	float                                                        MinWheelAngle;                                     // 0x4(0x4)
	float                                                        MaxWheelSpeed;                                     // 0x8(0x4)
	float                                                        SpeedForFastTurns;                                 // 0xc(0x4)
	float                                                        SpeedForMidTurns;                                  // 0x10(0x4)
	float                                                        Left180ZoneAMin;                                   // 0x14(0x4)
	float                                                        Left180ZoneAMax;                                   // 0x18(0x4)
	float                                                        Left180ZoneBMin;                                   // 0x1c(0x4)
	float                                                        Left180ZoneBMax;                                   // 0x20(0x4)
	float                                                        Right180ZoneAMin;                                  // 0x24(0x4)
	float                                                        Right180ZoneAMax;                                  // 0x28(0x4)
	float                                                        Right180ZoneBMin;                                  // 0x2c(0x4)
	float                                                        Right180ZoneBMax;                                  // 0x30(0x4)
	float                                                        LeftMid180ZoneAMin;                                // 0x34(0x4)
	float                                                        LeftMid180ZoneAMax;                                // 0x38(0x4)
	float                                                        RightMid180ZoneAMin;                               // 0x3c(0x4)
	float                                                        RightMid180ZoneAMax;                               // 0x40(0x4)
	float                                                        Animation180AngleMap;                              // 0x44(0x4)
	float                                                        ServerWheelBlend;                                  // 0x48(0x4)
	float                                                        WheelBlend;                                        // 0x4c(0x4)
	float                                                        TurbulenceMaxDriftSpeed;                           // 0x50(0x4)
	class CurveFloat*                                            TurbulenceInputScale;                              // 0x58(0x8)
	float                                                        TurbulenceMaxDriftPercentageCounter;               // 0x60(0x4)
	float                                                        TurbulenceMaxDriftBoostPercentage;                 // 0x64(0x4)
	float                                                        TurbulenceLockJitterRate;                          // 0x68(0x4)
	float                                                        TurbulenceLockJitter;                              // 0x6c(0x4)
	float                                                        TurbulenceSmoothRate;                              // 0x70(0x4)
	float                                                        SteeringAngleFeedbackThreshold;                    // 0x74(0x4)
};


// Size 0x20
struct StateCategoryGroup
{
public:
	struct FName                                                 GroupName;                                         // 0x18(0x8)
};


// Size 0x10
struct EntitlementsFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x38
struct ServerHeartbeatTelemetryEvent
{
public:
	struct Timespan                                              ServerUptime;                                      // 0x0(0x8)
	struct Timespan                                              ServerTimeToLive;                                  // 0x8(0x8)
	struct FString                                               ServerAddress;                                     // 0x10(0x10)
	struct FString                                               ServerMigrationAddress;                            // 0x20(0x10)
	bool                                                         ForcingShutdown;                                   // 0x30(0x1)
};


// Size 0x28
struct UIMessageOfTheDayCloseEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               MessageId;                                         // 0x10(0x10)
	float                                                        TimeSpentInMessage;                                // 0x20(0x4)
};


// Size 0x10
struct TaleQuestFailedTelemetryEvent
{
public:
	struct FString                                               FailReason;                                        // 0x0(0x10)
};


// Size 0x20
struct AthenaAnimationHandHeldItemParams
{
public:
	bool                                                         LeftArmOverlayActive;                              // 0x0(0x1)
	bool                                                         RightArmOverlayActive;                             // 0x1(0x1)
	bool                                                         UpperBodyOverlayActive;                            // 0x2(0x1)
	bool                                                         FullBodyOverlayActive;                             // 0x3(0x1)
	bool                                                         SpineOverlayActive;                                // 0x4(0x1)
	bool                                                         SpineLockActive;                                   // 0x5(0x1)
	bool                                                         ObjectActive;                                      // 0x6(0x1)
	bool                                                         ObjectOverrideStateActive;                         // 0x7(0x1)
	struct FString                                               OverlayAnimationName;                              // 0x8(0x10)
	char                                                         ObjectPassiveState;                                // 0x18(0x1)
	bool                                                         QuickStow;                                         // 0x19(0x1)
	bool                                                         Reload;                                            // 0x1a(0x1)
	bool                                                         ContinuousInteractionCustomLocomotionEnabled;      // 0x1b(0x1)
};


// Size 0x10
struct AthenaAnimationUndoRepairAnimData
{
public:
	class AnimSequence*                                          UndoRepairInto;                                    // 0x0(0x8)
	class AnimSequence*                                          UndoRepairLoop;                                    // 0x8(0x8)
};


// Size 0x30
struct PlayerBrigStatusChanged
{
public:
	struct NetActorPtr                                           NetPlayerState;                                    // 0x18(0x14)
	bool                                                         IsFree;                                            // 0x2c(0x1)
};


// Size 0x10
struct EventCrewReleasedCapstan
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x60
struct EventCargoRunCrateSetDropOff
{
public:
	struct Guid                                                  PickUpId;                                          // 0x0(0x10)
	struct Guid                                                  DropOffLocationId;                                 // 0x10(0x10)
	int64                                                        DeliveryDeadlineAbsolute;                          // 0x20(0x8)
	struct FText                                                 DeliveryLocationHintText;                          // 0x28(0x38)
};


// Size 0x58
struct DeadActionStateParams
{
public:
	float                                                        FadeDelay;                                         // 0x0(0x4)
	float                                                        FadeDuration;                                      // 0x4(0x4)
	float                                                        FadeEventTimeout;                                  // 0x8(0x4)
	float                                                        FadeServerTimeout;                                 // 0xc(0x4)
	struct LinearColor                                           FadeColour;                                        // 0x10(0x10)
	bool                                                         FadeAudio;                                         // 0x20(0x1)
	float                                                        DeathCameraBlackFadeDelay;                         // 0x24(0x4)
	float                                                        DeathCameraBlackFadeDuration;                      // 0x28(0x4)
	float                                                        DeathCameraBlackFadeEventTimeout;                  // 0x2c(0x4)
	float                                                        DeathCameraBlackFadeServerTimeout;                 // 0x30(0x4)
	struct LinearColor                                           DeathCameraBlackFadeColour;                        // 0x34(0x10)
	float                                                        DeathCameraDelayBeforeEvaporate;                   // 0x44(0x4)
	bool                                                         DeathCameraFadeAudio;                              // 0x48(0x1)
	float                                                        DeathCameraDelay;                                  // 0x4c(0x4)
	class GhostDataAsset*                                        PlayerGhostDataAsset;                              // 0x50(0x8)
};


// Size 0x48
struct XPGrantedEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	uint32                                                       XPGranted;                                         // 0x10(0x4)
	struct FName                                                 CompanyId;                                         // 0x14(0x8)
	struct Guid                                                  BootyId;                                           // 0x1c(0x10)
	struct Guid                                                  GuildId;                                           // 0x2c(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0x3c(0x8)
	uint32                                                       EmissaryLevel;                                     // 0x44(0x4)
};


// Size 0x48
struct BuriedBuriable
{
public:
	struct Vector                                                Location;                                          // 0x18(0xc)
	float                                                        Radius;                                            // 0x24(0x4)
};


// Size 0x28
struct CreatePirateRequestFailedEvent
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct Guid                                                  RequestID;                                         // 0x18(0x10)
};


// Size 0x18
struct PioneerRewardInfo
{
public:
	class PopUpMessageDesc*                                      PopUp;                                             // 0x0(0x8)
	struct FString                                               RewardId;                                          // 0x8(0x10)
};


// Size 0x8
struct CreateStormGameServerResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	int                                                          StormId;                                           // 0x4(0x4)
};


// Size 0x58
struct CompanySkillsetProgressions
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct TargetSkillsetProgressionPair                         TargetSkillsets;                                   // 0x8(0x20)
	struct FeatureFlag                                           TargetSkillsetsOverrideFeatureToggle;              // 0x28(0xc)
	struct TargetSkillsetProgressionPair                         FeatureToggledTargetSkillsetsOverride;             // 0x38(0x20)
};


// Size 0x8
struct AthenaAnimationLocomotionTurningAnimDataPitchOverride
{
public:
	class BlendSpace1D*                                          Turn90;                                            // 0x0(0x8)
};


// Size 0x30
struct RenderedCloudProperties
{
public:
	struct Vector                                                WorldPosition;                                     // 0x0(0xc)
	float                                                        Fade;                                              // 0xc(0x4)
	float                                                        Storminess;                                        // 0x10(0x4)
	float                                                        RotationYaw;                                       // 0x14(0x4)
	float                                                        StreetRotationFront;                               // 0x18(0x4)
	float                                                        StreetRotationBack;                                // 0x1c(0x4)
	bool                                                         Visible;                                           // 0x20(0x1)
	bool                                                         FluffVisible;                                      // 0x21(0x1)
	bool                                                         IsStreetCloud;                                     // 0x22(0x1)
	bool                                                         UpdatesThisFrame;                                  // 0x23(0x1)
};


// Size 0x70
struct Leak
{
public:
	struct WwiseEmitter                                          SFXEmitter;                                        // 0x30(0x20)
	class ParticleSystemComponent*                               WaterLeakParticleSystem;                           // 0x50(0x8)
};


// Size 0x8
struct PurchaseConfigurationSettings
{
public:
	float                                                        BackOffTimeInSeconds;                              // 0x0(0x4)
	float                                                        BackOffTimeGain;                                   // 0x4(0x4)
};


// Size 0x28
struct VoyageProposalWonVotingSessionTelemetryEvent
{
public:
	struct Guid                                                  VoyageProposalSessionId;                           // 0x0(0x10)
	struct FString                                               VoyageProposalEntitlementId;                       // 0x10(0x10)
	int                                                          NumberOfVotes;                                     // 0x20(0x4)
	int                                                          SessionLength;                                     // 0x24(0x4)
};


// Size 0x20
struct ActorStateData
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	struct Vector                                                Position;                                          // 0x4(0xc)
	struct FString                                               IslandName;                                        // 0x10(0x10)
};


// Size 0x40
struct TakeMapFromContainerRPC
{
public:
	struct NetSubObjectPtr                                       Container;                                         // 0x18(0x14)
	struct Guid                                                  MapToTake;                                         // 0x2c(0x10)
};


// Size 0x78
struct InteractLoadableActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           LoadableObject;                                    // 0x40(0x14)
	struct NetActorPtr                                           Interactable;                                      // 0x54(0x14)
	bool                                                         ControllingLoadable;                               // 0x68(0x1)
	class UClass*                                                DefaultItemDesc;                                   // 0x70(0x8)
};


// Size 0xc
struct AthenaCharacterSwimSpeed
{
public:
	float                                                        SprintSpdAmp;                                      // 0x0(0x4)
	float                                                        SprintAccelAmp;                                    // 0x4(0x4)
	float                                                        TurnSpeedScalar;                                   // 0x8(0x4)
};


// Size 0xa0
struct ShipDynamics
{
public:
	bool                                                         bProcessSailBasedFakeRoll;                         // 0x0(0x1)
	float                                                        SidewaysForceFromSailsForMaxFakeRoll;              // 0x4(0x4)
	float                                                        BuoyancyProbeZOffsetAtMaxFakeRoll;                 // 0x8(0x4)
	float                                                        MinHullSubmersionToApplyNoHullDragOrRudder;        // 0xc(0x4)
	float                                                        CapsizedAngleThreshold;                            // 0x10(0x4)
};


// Size 0x38
struct BattleElevatorEventRoomPhase
{
public:
	struct FName                                                 PhaseName;                                         // 0x0(0x8)
	bool                                                         IsFinalPhase;                                      // 0x8(0x1)
	struct FName                                                 NextPhaseName;                                     // 0xc(0x8)
	TArray<class BattleElevatorEventRoomBasePolicy*>             Policies;                                          // 0x18(0x10)
	TArray<class ElevatorActionBase*>                            Actions;                                           // 0x28(0x10)
};


// Size 0x20
struct LightingZoneParameters
{
public:
	int                                                          PriorityLayer;                                     // 0x0(0x4)
	int                                                          TargetLightingIndex;                               // 0x4(0x4)
	float                                                        OuterRadius;                                       // 0x8(0x4)
	float                                                        InnerRadius;                                       // 0xc(0x4)
	float                                                        Weight;                                            // 0x10(0x4)
	bool                                                         IsUnderwaterZone;                                  // 0x14(0x1)
	bool                                                         Is3DLightingZone;                                  // 0x15(0x1)
	float                                                        OuterCylinderHalfHeight;                           // 0x18(0x4)
	float                                                        InnerCylinderHalfHeight;                           // 0x1c(0x4)
};


// Size 0x8
struct PlayerEnteredFortVicinityEvent
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0x18
struct RemoveStatusesGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	TArray<String>                                               Statuses;                                          // 0x8(0x10)
};


// Size 0x8
struct ItemUseSpeedParams
{
public:
	float                                                        LookSpeedScalar;                                   // 0x0(0x4)
	float                                                        MaxMoveSpeedScalar;                                // 0x4(0x4)
};


// Size 0x48
struct ShipwreckHullAudioData
{
public:
	struct WwiseEmitter                                          Emitter;                                           // 0x0(0x20)
	class WwiseObjectPoolWrapper*                                WwiseObjectPoolWrapper;                            // 0x20(0x8)
	class WwiseEvent*                                            WwiseEvent;                                        // 0x28(0x8)
	struct FName                                                 Name;                                              // 0x30(0x8)
	struct Vector                                                Offset;                                            // 0x38(0xc)
};


// Size 0x38
struct ServerUpdateCrewState
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<struct Vector2D>                                      Locations;                                         // 0x10(0x10)
	char                                                         SessionType;                                       // 0x20(0x1)
	TArray<int>                                                  ContendedResources;                                // 0x28(0x10)
};


// Size 0x1
struct OnRepIsCrossplayEnabledOnServerEvent
{
public:
	bool                                                         IsCrossplayEnabledOnServer;                        // 0x0(0x1)
};


// Size 0x38
struct RewardRuntimeDefinition
{
public:
	class PopUpMessageDesc*                                      PopUp;                                             // 0x8(0x8)
	TArray<class Class*>                                         PrerequisiteEntitlements;                          // 0x20(0x10)
};


// Size 0x4
struct SetToMaxHealthGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
};


// Size 0x8
struct DartProxyRemovedEvent
{
public:
	class ItemProxy*                                             Proxy;                                             // 0x0(0x8)
};


// Size 0x58
struct NPCReactionVOEntry
{
public:
	assetclass                                                   ActorToReactTo;                                    // 0x0(0x20)
	struct FName                                                 VOGroupName;                                       // 0x20(0x8)
	struct WeightedProbabilityRangeOfRanges                      VOCooldown;                                        // 0x28(0x30)
};


// Size 0xa8
struct ShipCreatureManagerCreatureInstance
{
public:
	class MeshComponent*                                         CreatureMeshComponent;                             // 0x0(0x8)
	class WwiseEvent*                                            StopCreatureSounds;                                // 0x8(0x8)
};


// Size 0x70
struct ServerProjectileImpactHitRegInfoTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               ProjectileId;                                      // 0x10(0x10)
	struct FString                                               DamagerTypeId;                                     // 0x20(0x10)
	struct Vector                                                HitLocation;                                       // 0x30(0xc)
	struct FString                                               InstigatorObjectId;                                // 0x40(0x10)
	struct FString                                               InstigatorObjectType;                              // 0x50(0x10)
	struct FString                                               InstigatorActorName;                               // 0x60(0x10)
};


// Size 0x4
struct StreamingLocationOverrideAcknowledgedEvent
{
public:
	int                                                          Id;                                                // 0x0(0x4)
};


// Size 0x8
struct EventCharacterDespawned
{
public:
	class Character*                                             Character;                                         // 0x0(0x8)
};


// Size 0xc
struct PlayerCapstanUsageEndTelemetryEvent
{
public:
	int                                                          NumCurrentUsers;                                   // 0x0(0x4)
	float                                                        CapstanVelocity;                                   // 0x4(0x4)
	float                                                        CapstanState;                                      // 0x8(0x4)
};


// Size 0x28
struct UIMessageOfTheDayCloseTelemetryEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               MessageId;                                         // 0x10(0x10)
	float                                                        TimeSpentInMessage;                                // 0x20(0x4)
};


// Size 0x18
struct GarbageCollectionFrametimeTelemetryFragment
{
public:
	TArray<float>                                                GCFrametimesMs;                                    // 0x0(0x10)
	float                                                        MaxGCFrametimeMs;                                  // 0x10(0x4)
};


// Size 0x1c
struct CrewScoredEvent
{
public:
	char                                                         ScoreId;                                           // 0x0(0x1)
	struct Guid                                                  CrewId;                                            // 0x4(0x10)
	int                                                          CrewScore;                                         // 0x14(0x4)
	char                                                         ReasonForScoring;                                  // 0x18(0x1)
};


// Size 0x10
struct EventTriggerOverlayAction
{
public:
	class Object*                                                InteractObject;                                    // 0x0(0x8)
	char                                                         InteractableActionType;                            // 0x8(0x1)
};


// Size 0x18
struct MaterialSet
{
public:
	struct FName                                                 MaterialSetName;                                   // 0x0(0x8)
	TArray<class MaterialInterface*>                             MaterialList;                                      // 0x8(0x10)
};


// Size 0x18
struct EventRegisterSettingsGroup
{
public:
	struct FName                                                 SettingsGroupName;                                 // 0x0(0x8)
	TArray<struct Name>                                          SettingsGroupSettings;                             // 0x8(0x10)
};


// Size 0x1
struct EventFaunaAnimationSnakeInCharmStance
{
public:
	bool                                                         SnakeInCharmStance;                                // 0x0(0x1)
};


// Size 0x10
struct PlayerTamperedTelemetryEvent
{
public:
	uint64                                                       TamperFlags;                                       // 0x0(0x8)
	uint64                                                       ShipRegion;                                        // 0x8(0x8)
};


// Size 0x8
struct ShipTrackerSnapshot
{
public:
	int                                                          ShipId;                                            // 0x0(0x4)
	char                                                         Region;                                            // 0x4(0x1)
};


// Size 0x10
struct RequestShipCustomizationChestUpdateSavedLoadoutEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x10
struct PlayerItemUsageTelemetryFragmentInput
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 ItemBeingUsed;                                     // 0x8(0x8)
};


// Size 0x48
struct AthenaAnimationObjectActionOneShot
{
public:
	TArray<class AnimSequence*>                                  MainAction;                                        // 0x0(0x10)
	TArray<class BlendSpace*>                                    MainActionLocomotion;                              // 0x10(0x10)
	TArray<class AnimSequence*>                                  AlternateAction;                                   // 0x20(0x10)
	TArray<class BlendSpace*>                                    AlternateActionLocomotion;                         // 0x30(0x10)
	bool                                                         IgnoreOverlayHandAdditiveForAction;                // 0x40(0x1)
};


// Size 0x4
struct MastFallingProportionBecameStationaryEvent
{
public:
	float                                                        Proportion;                                        // 0x0(0x4)
};


// Size 0x28
struct SwitchMechanismTriggerPlankRotation
{
public:
	class WwiseEvent*                                            PlayRotationStartedEvent;                          // 0x0(0x8)
	class WwiseEvent*                                            PlayRotationStoppedEvent;                          // 0x8(0x8)
	class CurveFloat*                                            Curve;                                             // 0x10(0x8)
	struct Rotator                                               Target;                                            // 0x18(0xc)
	float                                                        CurveLength;                                       // 0x24(0x4)
};


// Size 0x8
struct EventGhostShipPlayerSpawnLocationDestroyed
{
public:
	class GhostShipPlayerSpawnLocation*                          SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x28
struct DebugFishSelectionSize
{
public:
	int                                                          SizeIndex;                                         // 0x0(0x4)
	assetclass                                                   FishClass;                                         // 0x8(0x20)
};


// Size 0x28
struct LargeSessionServerEncounterDevTelemetryEvent
{
public:
	struct FString                                               InitiatingUserId;                                  // 0x0(0x10)
	struct FString                                               EncounteredUserId;                                 // 0x10(0x10)
	bool                                                         TaskSucceeded;                                     // 0x20(0x1)
};


// Size 0x10
struct SwimmingCreatureImpactAnimData
{
public:
	class AnimSequenceBase*                                      ImpactAnim;                                        // 0x0(0x8)
	float                                                        MinDamageRange;                                    // 0x8(0x4)
	float                                                        MaxDamageRange;                                    // 0xc(0x4)
};


// Size 0xc
struct InteractionOptionSelected
{
public:
	struct FName                                                 EventName;                                         // 0x0(0x8)
	int                                                          Index;                                             // 0x8(0x4)
};


// Size 0x1c
struct BuryDecal
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct Vector                                                Location;                                          // 0x10(0xc)
};


// Size 0x10
struct RequestShipCustomizationChestUnequipShipCustomizationEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x38
struct TeleportStageCompletedTelemetryEvent
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	float                                                        Duration;                                          // 0x10(0x4)
	struct FString                                               Reason;                                            // 0x18(0x10)
	struct FString                                               CompletedStage;                                    // 0x28(0x10)
};


// Size 0x50
struct AthenaAnimationRowboatAnimationsThirdPerson
{
public:
	class AnimSequence*                                          SitDown;                                           // 0x0(0x8)
	class AnimSequence*                                          Stand;                                             // 0x8(0x8)
	class AnimSequence*                                          Idle;                                              // 0x10(0x8)
	class BlendSpace1D*                                          Row;                                               // 0x18(0x8)
	class BlendSpace1D*                                          Recover;                                           // 0x20(0x8)
	class BlendSpace1D*                                          IntoRow;                                           // 0x28(0x8)
	class BlendSpace1D*                                          IntoRowBrake;                                      // 0x30(0x8)
	class BlendSpace1D*                                          BrakeRow;                                          // 0x38(0x8)
	class BlendSpace1D*                                          BrakeRecover;                                      // 0x40(0x8)
	class BlendSpace1D*                                          BrakeIdle;                                         // 0x48(0x8)
};


// Size 0x8
struct EventPlayerStoppedSwimming
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0x10
struct EventAnimationShopInteraction
{
public:
	bool                                                         Active;                                            // 0x0(0x1)
	char                                                         Type;                                              // 0x1(0x1)
	class Actor*                                                 Interactor;                                        // 0x8(0x8)
};


// Size 0x24
struct WheelAdditiveAlphaSets
{
public:
	float                                                        IsAdditiveRightFingerIdle;                         // 0x0(0x4)
	float                                                        IsAdditiveLeftFingerIdle;                          // 0x4(0x4)
	float                                                        IsAdditiveIdle;                                    // 0x8(0x4)
	float                                                        LeftFingerAdditiveValue;                           // 0xc(0x4)
	float                                                        RightFingerAdditiveValue;                          // 0x10(0x4)
	float                                                        fullBodyAdditiveValue;                             // 0x14(0x4)
	float                                                        RHandAdditiveBlendValue;                           // 0x18(0x4)
	float                                                        LHandAdditiveBlendValue;                           // 0x1c(0x4)
	float                                                        FullBodyAdditiveBlendValue;                        // 0x20(0x4)
};


// Size 0x1
struct SetNarrateBanners
{
public:
	bool                                                         IsEnabled;                                         // 0x0(0x1)
};


// Size 0x18
struct FrameTypeTelemetryFragment
{
public:
	uint64                                                       NumLoadingScreenFrames;                            // 0x0(0x8)
	uint64                                                       NumFullyOccludedFrames;                            // 0x8(0x8)
	uint64                                                       NumFullScreenUIFrames;                             // 0x10(0x8)
};


// Size 0x88
struct PremiumCurrencyItem
{
public:
	struct FString                                               Description;                                       // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
	struct FString                                               ImageUrl;                                          // 0x20(0x10)
	struct FString                                               Price;                                             // 0x30(0x10)
	struct FString                                               BasePrice;                                         // 0x40(0x10)
	bool                                                         IsOnSale;                                          // 0x50(0x1)
	struct FString                                               SaleEndDate;                                       // 0x58(0x10)
	struct FString                                               Title;                                             // 0x68(0x10)
	struct FString                                               Quantity;                                          // 0x78(0x10)
};


// Size 0x20
struct UserPirateId
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
};


// Size 0x10
struct FeatureToggledIsland
{
public:
	struct FName                                                 FeatureName;                                       // 0x0(0x8)
	struct FName                                                 IslandName;                                        // 0x8(0x8)
};


// Size 0x2f8
struct TutorialStepSellTreasure
{
public:
	class ItemInfo*                                              SpawnedChest;                                      // 0x88(0x8)
};


// Size 0x1
struct SetNarrateToasts
{
public:
	bool                                                         IsEnabled;                                         // 0x0(0x1)
};


// Size 0x30
struct UIRankSkin
{
public:
	struct FString                                               DisplayName;                                       // 0x0(0x10)
	struct FString                                               Description;                                       // 0x10(0x10)
	struct FString                                               RibbonImageUrl;                                    // 0x20(0x10)
};


// Size 0x10
struct BlendAdditiveValues
{
public:
	float                                                        HandAdditiveBlendValueON;                          // 0x0(0x4)
	float                                                        HandAdditiveBlendValueOFF;                         // 0x4(0x4)
	float                                                        FullBodyAdditiveBlendValueON;                      // 0x8(0x4)
	float                                                        FullBodyAdditiveBlendValueOFF;                     // 0xc(0x4)
};


// Size 0x70
struct ServerProjectileHitRegInfoTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               ProjectileId;                                      // 0x10(0x10)
	struct FString                                               HitObjectId;                                       // 0x20(0x10)
	struct FString                                               HitObjectType;                                     // 0x30(0x10)
	struct FString                                               HitActorName;                                      // 0x40(0x10)
	struct FString                                               InstigatorName;                                    // 0x50(0x10)
	struct Vector                                                HitLocation;                                       // 0x60(0xc)
	bool                                                         IsHitScanShot;                                     // 0x6c(0x1)
};


// Size 0x10
struct InventoryInteractionStowRequestEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x8
struct TreasureChestSoldClientPredictionEvent
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
};


// Size 0x2c
struct FirstPersonAnimaticSettings
{
public:
	struct Vector                                                CutsceneFirstPersonMeshOffset;                     // 0x0(0xc)
	struct Rotator                                               CutsceneRotation;                                  // 0xc(0xc)
	float                                                        TimeBeforeFadeIn;                                  // 0x18(0x4)
	float                                                        FadeInDuration;                                    // 0x1c(0x4)
	float                                                        FirstPersonMeshBoundsScale;                        // 0x20(0x4)
	struct FName                                                 FirstPersonAnimName;                               // 0x24(0x8)
};


// Size 0x4
struct TributeCardData
{
public:
	int                                                          RitualsCompletedTotal;                             // 0x0(0x4)
};


// Size 0x20
struct PlayModePhrases
{
public:
	char                                                         PlayModeKey;                                       // 0x0(0x1)
	class PhrasesRadialDataAsset*                                PhraseDataAsset;                                   // 0x8(0x8)
	class NonVerbalRadialDataAsset*                              QuickAccessDataAsset;                              // 0x10(0x8)
	class NonVerbalRadialDataAsset*                              StrategyDataAsset;                                 // 0x18(0x8)
};


// Size 0x20
struct EventEncounterBase
{
public:
	struct Guid                                                  EncounterId;                                       // 0x0(0x10)
	class Actor*                                                 EncounterActor;                                    // 0x10(0x8)
	char                                                         EncounterType;                                     // 0x18(0x1)
	float                                                        EncounterRadiusSquared;                            // 0x1c(0x4)
};


// Size 0x10
struct PinnedAccoladeResultArray
{
public:
	TArray<String>                                               Results;                                           // 0x0(0x10)
};


// Size 0x10
struct PlayerNewDistinctionLevelEvent
{
public:
	uint32                                                       NewDistinctionLevel;                               // 0x0(0x4)
	uint32                                                       PreviousDistinctionLevel;                          // 0x4(0x4)
	struct FName                                                 CompanyId;                                         // 0x8(0x8)
};


// Size 0x100
struct VoyageDisplayInformation
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct FText                                                 Description;                                       // 0x38(0x38)
	struct FText                                                 StateDescription;                                  // 0x70(0x38)
	struct FString                                               KeyArtUrl;                                         // 0xa8(0x10)
	struct FString                                               IconUrl;                                           // 0xb8(0x10)
	int                                                          RumouredHaulMin;                                   // 0xc8(0x4)
	bool                                                         Locked;                                            // 0xcc(0x1)
	struct FString                                               Category;                                          // 0xd0(0x10)
	struct FString                                               PreviewImageUrl;                                   // 0xe0(0x10)
	struct FString                                               ThumbnailImageUrl;                                 // 0xf0(0x10)
};


// Size 0x10
struct FragileComponentShipDamageTypeEntry
{
public:
	class UClass*                                                ShipDamagerType;                                   // 0x0(0x8)
	float                                                        HealthChangePropagated;                            // 0x8(0x4)
};


// Size 0x20
struct EventUserGameSettingsSetKeyBindingToInvalid
{
public:
	char                                                         BindingSet;                                        // 0x0(0x1)
	struct FString                                               BindingName;                                       // 0x8(0x10)
	char                                                         ControllerType;                                    // 0x18(0x1)
	char                                                         Instigator;                                        // 0x19(0x1)
};


// Size 0x40
struct PlayerCrewAssignmentMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct UniqueNetIdRepl                                       UserId;                                            // 0x10(0x18)
	struct FString                                               PirateId;                                          // 0x28(0x10)
	char                                                         SessionType;                                       // 0x38(0x1)
	int                                                          ServerCrewCapacity;                                // 0x3c(0x4)
};


// Size 0x30
struct ProjectileWeaponFireStatsTelemetryEvent
{
public:
	float                                                        AimPositionDifference;                             // 0x0(0x4)
	float                                                        AimPositionCorrection;                             // 0x4(0x4)
	float                                                        LatencyMs;                                         // 0x8(0x4)
	struct Guid                                                  AttackId;                                          // 0xc(0x10)
	struct FString                                               WeaponType;                                        // 0x20(0x10)
};


// Size 0x1
struct EventSwimmingCreatureUnderwaterStateChange
{
public:
	bool                                                         IsAboveWater;                                      // 0x0(0x1)
};


// Size 0x1
struct EventSessionCodeTextboxFocusRequest
{
public:
	bool                                                         ShouldFocusSessionCodeTextbox;                     // 0x0(0x1)
};


// Size 0x20
struct UIAdventuresDataErrorEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               ErrorStack;                                        // 0x10(0x10)
};


// Size 0x148
struct BountyQuestRandomSpawnGeneratorParams
{
public:
	struct WeightedProbabilityRange                              NumberOfWaves;                                     // 0x0(0x20)
	struct WeightedProbabilityRange                              NumberOfWaveGroups;                                // 0x20(0x20)
	int                                                          MinNumberOfAIPerWave;                              // 0x40(0x4)
	int                                                          MaxNumberOfAIPerWave;                              // 0x44(0x4)
	TArray<int>                                                  AdditionalAIPerPlayer;                             // 0x48(0x10)
	int                                                          MinFormsPerEncounter;                              // 0x58(0x4)
	int                                                          MaxFormsPerEncounter;                              // 0x5c(0x4)
	bool                                                         AllowMultipleFormsPerWave;                         // 0x60(0x1)
	struct WeightedProbabilityRange                              FormsPerWave;                                      // 0x68(0x20)
	int                                                          MinVarietiesPerEncounter;                          // 0x88(0x4)
	int                                                          MaxVarietiesPerEncounter;                          // 0x8c(0x4)
	float                                                        MinTimeBetweenSpawns;                              // 0x90(0x4)
	float                                                        MaxTimeBetweenSpawns;                              // 0x94(0x4)
	float                                                        MinTimeBetweenWaves;                               // 0x98(0x4)
	float                                                        MaxTimeBetweenWaves;                               // 0x9c(0x4)
	struct WeightedProbabilityRange                              WavesPerRelocate;                                  // 0xa0(0x20)
	struct WeightedProbabilityRange                              WaveSplitChance;                                   // 0xc0(0x20)
	TArray<float>                                                WaveSuicideTime;                                   // 0xe0(0x10)
	float                                                        WaveSuicideMinDist;                                // 0xf0(0x4)
	class AIEncounterGenerationRecipeRankOrderList*              Recipes;                                           // 0xf8(0x8)
	struct WeightedProbabilityRange                              NumberOfTargetsTotal;                              // 0x100(0x20)
	struct WeightedProbabilityRange                              NumberOfTargetsWhichAreCaptains;                   // 0x120(0x20)
	float                                                        ChanceOfAllTargetsBeingOnTheLastWave;              // 0x140(0x4)
	float                                                        ChanceOfFemale;                                    // 0x144(0x4)
};


// Size 0x18
struct InviteFriendRequest
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	char                                                         Platform;                                          // 0x10(0x1)
};


// Size 0x3
struct FishingMiniGamePlayerInput
{
public:
	char                                                         InputDirection;                                    // 0x0(0x1)
	char                                                         BattlingDirection;                                 // 0x1(0x1)
	bool                                                         IsReeling;                                         // 0x2(0x1)
};


// Size 0x40
struct TunnelsOfTheDamnedMigrationDataEntry
{
public:
	struct Transform                                             ShipsTransform;                                    // 0x0(0x30)
	struct Guid                                                  CrewId;                                            // 0x30(0x10)
};


// Size 0x10
struct RequestCreateSessionEvent
{
public:
	TArray<char>                                                 SessionTypes;                                      // 0x0(0x10)
};


// Size 0x10
struct AthenaCharacterDodgeParams
{
public:
	float                                                        DodgeCooldown;                                     // 0x0(0x4)
	float                                                        DodgeForce;                                        // 0x4(0x4)
	float                                                        GroundLaunchAngle;                                 // 0x8(0x4)
	bool                                                         DodgePerpendicularToGround;                        // 0xc(0x1)
	bool                                                         Disabled;                                          // 0xd(0x1)
};


// Size 0x28
struct ShantyInstrumentData
{
public:
	char                                                         InstrumentType;                                    // 0x0(0x1)
	class WwiseEvent*                                            PlayLead;                                          // 0x8(0x8)
	class WwiseEvent*                                            PlayAccompaniment;                                 // 0x10(0x8)
	class WwiseEvent*                                            StopLead;                                          // 0x18(0x8)
	class WwiseEvent*                                            StopAccompaniment;                                 // 0x20(0x8)
};


// Size 0x20
struct ContestCrewPositionTelemetryFragmentInput
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x1
struct AlwaysSkipMapTableAnimationChangeEvent
{
public:
	bool                                                         AlwaysSkipMapTableAnimation;                       // 0x0(0x1)
};


// Size 0x8
struct WaterSensitiveHealthChange
{
public:
	bool                                                         HealthChangeEnabled;                               // 0x0(0x1)
	float                                                        HealthChangeAmount;                                // 0x4(0x4)
};


// Size 0x18
struct TaleQuestWeightedItemDescSpawnData
{
public:
	class ItemSpawnData*                                         ItemSpawnData;                                     // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	bool                                                         LimitMaxSpawnedItems;                              // 0xc(0x1)
	int                                                          MaxTimesCanBeSelected;                             // 0x10(0x4)
};


// Size 0x68
struct VoyageChapterBegunAnimationEvent
{
public:
	int                                                          ChapterIndex;                                      // 0x0(0x4)
	int                                                          ChapterCount;                                      // 0x4(0x4)
	struct FText                                                 VoyageTitle;                                       // 0x8(0x38)
	struct FString                                               AudioSwitchName;                                   // 0x40(0x10)
	struct FString                                               AudioSwitchValue;                                  // 0x50(0x10)
	struct FName                                                 CompanyId;                                         // 0x60(0x8)
};


// Size 0x20
struct OnlinePermissionsResponseData
{
public:
	struct UniqueNetIdRepl                                       PlayerUserId;                                      // 0x0(0x18)
	bool                                                         HasPermission;                                     // 0x18(0x1)
};


// Size 0x20
struct ServicesConnectionResultTelemetryEvent
{
public:
	char                                                         Result;                                            // 0x0(0x1)
	double                                                       TimeInSeconds;                                     // 0x8(0x8)
	struct FString                                               Reason;                                            // 0x10(0x10)
};


// Size 0x14
struct InteractingActorData
{
public:
	struct FName                                                 PreviousCollisionProfile;                          // 0x8(0x8)
};


// Size 0x2
struct ReapersTributeShipEventStateChanged
{
public:
	char                                                         OldEventState;                                     // 0x0(0x1)
	char                                                         NewEventState;                                     // 0x1(0x1)
};


// Size 0x10
struct ShipStockIntentModel
{
public:
	TArray<String>                                               IntentItems;                                       // 0x0(0x10)
};


// Size 0x50
struct VomitProjectiles
{
public:
	class UClass*                                                VomitProjectileClass;                              // 0x0(0x8)
	struct FName                                                 SocketName;                                        // 0x8(0x8)
	float                                                        Speed;                                             // 0x10(0x4)
	float                                                        AdditionalLiftAngle;                               // 0x14(0x4)
	float                                                        Radius;                                            // 0x18(0x4)
	float                                                        ImpactDelay;                                       // 0x1c(0x4)
	float                                                        ImpactCutoff;                                      // 0x20(0x4)
	int                                                          ImpactsMin;                                        // 0x24(0x4)
	int                                                          ImpactsMax;                                        // 0x28(0x4)
	char                                                         ChannelToIgnoreInShip;                             // 0x2c(0x1)
	bool                                                         DebugLaunchClientProjectiles;                      // 0x2d(0x1)
};


// Size 0x10
struct RequestEmblemDefinitionsSucceededEvent
{
public:
	TArray<class EmblemDefinitionDataAsset*>                     DataAssets;                                        // 0x0(0x10)
};


// Size 0x10
struct EventItemWielded
{
public:
	class WieldableItem*                                         WieldedItem;                                       // 0x0(0x8)
	class Actor*                                                 Wielder;                                           // 0x8(0x8)
};


// Size 0x20
struct EventUseItemForceStop
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 ActionSource;                                      // 0x8(0x8)
	class Actor*                                                 Usable;                                            // 0x10(0x8)
	char                                                         TrackToUse;                                        // 0x18(0x1)
};


// Size 0x1
struct EventFishingReelingWhileBattlingStateChange
{
public:
	bool                                                         IsReelingWhileBattling;                            // 0x0(0x1)
};


// Size 0x18
struct EventStartStow
{
public:
	interface                                                    Object;                                            // 0x0(0x10)
	bool                                                         FastStow;                                          // 0x10(0x1)
	char                                                         StowMethod;                                        // 0x11(0x1)
};


// Size 0x18
struct SkullOfStormsUsedOnRowboatTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	double                                                       UseTime;                                           // 0x10(0x8)
};


// Size 0x28
struct ForkedStep
{
public:
	int                                                          Index;                                             // 0x0(0x4)
	struct Guid                                                  Id;                                                // 0x4(0x10)
	interface                                                    Step;                                              // 0x18(0x10)
};


// Size 0x8
struct EventRelinquishedControlOfObject
{
public:
	class Object*                                                RelinquishedObject;                                // 0x0(0x8)
};


// Size 0x20
struct EjectFromTunnelOfTheDamnedActionStateParams
{
public:
	float                                                        FadeDuration;                                      // 0x0(0x4)
	float                                                        FadeEventTimeout;                                  // 0x4(0x4)
	float                                                        FadeServerTimeout;                                 // 0x8(0x4)
	struct LinearColor                                           FadeColour;                                        // 0xc(0x10)
	bool                                                         FadeAudio;                                         // 0x1c(0x1)
};


// Size 0x10
struct ContestUpdateScoreBoardTimer
{
public:
	struct FString                                               TimeRemaining;                                     // 0x0(0x10)
};


// Size 0x48
struct CombinationLockMechanismTriggerActionStateConstructionInfo
{
public:
	class SceneComponent*                                        SceneComponent;                                    // 0x40(0x8)
};


// Size 0x10
struct RammableExplosiveEntry
{
public:
	class UClass*                                                RammerType;                                        // 0x0(0x8)
	class UClass*                                                MinimumSpeedForExplosion;                          // 0x8(0x8)
};


// Size 0x10
struct ClientStartLobbyTelemetryEvent
{
public:
	struct FString                                               SessionType;                                       // 0x0(0x10)
};


// Size 0xc
struct MastSailAngleChangedEvent
{
public:
	float                                                        Angle;                                             // 0x0(0x4)
	float                                                        DeltaTime;                                         // 0x4(0x4)
	float                                                        SailTurnRate;                                      // 0x8(0x4)
};


// Size 0x10
struct MermaidDeactivatedLocally
{
public:
	class Mermaid*                                               Mermaid;                                           // 0x0(0x8)
	bool                                                         IsForLocalPlayer;                                  // 0x8(0x1)
};


// Size 0x8
struct HealthRegenState
{
public:
	float                                                        CurrentPoolAmount;                                 // 0x0(0x4)
	char                                                         State;                                             // 0x4(0x1)
};


// Size 0x10
struct ClientBootFlowErrorOccurredTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
};


// Size 0x8
struct AthenaPlayerControllerEndingPlayInContestStage
{
public:
	class AthenaPlayerController*                                Controller;                                        // 0x0(0x8)
};


// Size 0x1
struct SqueakyWheelEnabledEvent
{
public:
	bool                                                         SqueakyWheelEnabled;                               // 0x0(0x1)
};


// Size 0x20
struct ParticleSystemPicker
{
public:
	class ParticleSystem*                                        ObserverAboveEffectAboveWater;                     // 0x0(0x8)
	class ParticleSystem*                                        ObserverBelowEffectBelowWater;                     // 0x8(0x8)
	class ParticleSystem*                                        ObserverAboveEffectBelowWater;                     // 0x10(0x8)
	class ParticleSystem*                                        ObserverBelowEffectAboveWater;                     // 0x18(0x8)
};


// Size 0x14
struct AthenaAnimationPitchAlpha
{
public:
	float                                                        ArmPitchAlphaLeft;                                 // 0x0(0x4)
	float                                                        ArmPitchAlphaRight;                                // 0x4(0x4)
	float                                                        ArmPitchInterpSpeed;                               // 0x8(0x4)
	struct FName                                                 BaseRotationIKSocketName;                          // 0xc(0x8)
};


// Size 0x8
struct EventAthenaPlayerControllerEndingPlay
{
public:
	class AthenaPlayerController*                                Controller;                                        // 0x0(0x8)
};


// Size 0x14
struct NotesManagementAddNoteResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct Guid                                                  NoteId;                                            // 0x4(0x10)
};


// Size 0x10
struct FlamesOfFateShipInfo
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	uint32                                                       NumLanterns;                                       // 0x8(0x4)
};


// Size 0x10
struct GenericModalContinueEvent
{
public:
	struct FString                                               DisplayMessage;                                    // 0x0(0x10)
};


// Size 0x28
struct BoxedRpcShipStockOffersPurchased
{
public:
	TArray<struct Guid>                                          OfferIds;                                          // 0x18(0x10)
};


// Size 0xc
struct ChestOfRageReplicatedData
{
public:
	char                                                         State;                                             // 0x0(0x1)
	float                                                        RageValue;                                         // 0x4(0x4)
	bool                                                         HasBeenActivated;                                  // 0x8(0x1)
};


// Size 0x8
struct EquipmentChestEquipItemEvent
{
public:
	class UClass*                                                ItemDesc;                                          // 0x0(0x8)
};


// Size 0x8
struct AthenaAnimationSkeletonScream
{
public:
	class AnimSequence*                                          SkeletonScream;                                    // 0x0(0x8)
};


// Size 0x8
struct ThrowingKnifeProxyRemovedEvent
{
public:
	class ItemProxy*                                             Proxy;                                             // 0x0(0x8)
};


// Size 0x18
struct SeagullManagerLocationBank
{
public:
	TArray<struct Name>                                          Locations;                                         // 0x0(0x10)
	class ShipCreatureManagerCreatureInstanceMotionModifierDataAsset* MotionModifierDataAsset;                           // 0x10(0x8)
};


// Size 0x20
struct TallTaleDebugInfo
{
public:
	TArray<String>                                               StepNames;                                         // 0x0(0x10)
	TArray<String>                                               VariableStringBlobs;                               // 0x10(0x10)
};


// Size 0x10
struct GetGuildOverviewsForInvitesRequestModel
{
public:
	TArray<struct Guid>                                          GuildIds;                                          // 0x0(0x10)
};


// Size 0x220
struct NetworkPerformanceMonitorPayloadRpc
{
public:
	struct NetworkPerformanceMonitorPayload                      NetMessage;                                        // 0x18(0x208)
};


// Size 0x8
struct EventPlayerStoppedPlayingShanty
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0xc
struct AthenaCharacterDodgeEvent
{
public:
	struct Vector                                                DodgeDirection;                                    // 0x0(0xc)
};


// Size 0x8
struct EventPlayerCharacterEnteredShip
{
public:
	class Actor*                                                 PlayerCharacter;                                   // 0x0(0x8)
};


// Size 0x28
struct VfxSelectorEntry
{
public:
	class Object*                                                ParticleSystem;                                    // 0x0(0x8)
	class WwiseEvent*                                            WiseEvent;                                         // 0x8(0x8)
	class WwiseObjectPoolWrapper*                                WwisePoolToUse;                                    // 0x10(0x8)
	struct FName                                                 RTPCName;                                          // 0x18(0x8)
	float                                                        RTPCValue;                                         // 0x20(0x4)
};


// Size 0x3
struct ServerUserGameSettings
{
public:
	bool                                                         ScrambleGamertagOnShipAnnouncementBanner;          // 0x0(0x1)
	bool                                                         ScrambleShipNameOnOtherClients;                    // 0x1(0x1)
	bool                                                         ScrambleGuildNameOnOtherClients;                   // 0x2(0x1)
};


// Size 0x30
struct DamageInstance
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	class Actor*                                                 DirectInstigator;                                  // 0x10(0x8)
	class Actor*                                                 RootInstigator;                                    // 0x18(0x8)
	class Controller*                                            RootInstigatorController;                          // 0x20(0x8)
	float                                                        Amount;                                            // 0x28(0x4)
	char                                                         Reason;                                            // 0x2c(0x1)
};


// Size 0x10
struct NextOfferRequestModel
{
public:
	struct FString                                               OfferId;                                           // 0x0(0x10)
};


// Size 0x1
struct EventFaunaAnimationIsCaged
{
public:
	bool                                                         IsCaged;                                           // 0x0(0x1)
};


// Size 0x50
struct CommerceRemoteServiceWalletBalanceResponse
{
public:
	map                                                          Balances;                                          // 0x0(0x50)
};


// Size 0xb8
struct NPCData
{
public:
	struct NetActorPtr                                           NPC;                                               // 0x0(0x14)
	struct Guid                                                  Id;                                                // 0x14(0x10)
	struct FText                                                 Name;                                              // 0x28(0x38)
	struct Vector                                                Location;                                          // 0x60(0xc)
	struct FName                                                 IslandName;                                        // 0x6c(0x8)
	struct FText                                                 IslandNameLocalised;                               // 0x78(0x38)
	char                                                         GrammaticalGender;                                 // 0xb0(0x1)
};


// Size 0x10
struct ShipNamesFailedEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x4
struct EventAthenaLocalPlayerControllerConnected
{
public:
	int                                                          ControllerId;                                      // 0x0(0x4)
};


// Size 0x30
struct PlayerDeathTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               Location;                                          // 0x10(0x10)
	int                                                          LifetimeInSeconds;                                 // 0x20(0x4)
	uint32                                                       PossessCount;                                      // 0x24(0x4)
	double                                                       SecondsSinceSpawned;                               // 0x28(0x8)
};


// Size 0x188
struct MatchmakingVoyageRecipe
{
public:
	char                                                         ServerType;                                        // 0x180(0x1)
	char                                                         ContestType;                                       // 0x181(0x1)
};


// Size 0x40
struct ContestMatchmakingCrewModel
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct UniqueNetIdRepl                                       UserId;                                            // 0x10(0x18)
	int                                                          SessionType;                                       // 0x28(0x4)
	TArray<struct UniqueNetIdRepl>                               CrewMemberUserIds;                                 // 0x30(0x10)
};


// Size 0x68
struct TaleQuestParams
{
public:
	assetobject                                                  TaleQuestAsset;                                    // 0x48(0x20)
};


// Size 0x10
struct EventChatboxTextFromVirtualKeyboard
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0xc
struct StutterDataTelemetryFragment
{
public:
	float                                                        StutterFramePercentage;                            // 0x0(0x4)
	float                                                        StutterFrameDeltaMax;                              // 0x4(0x4)
	float                                                        StutterFrameDeltaAverage;                          // 0x8(0x4)
};


// Size 0x28
struct CollectedBootySnapshot
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         BootyType;                                         // 0x10(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
};


// Size 0x20
struct WorldMarkerDesc
{
public:
	class BaseWorldMarker*                                       Marker;                                            // 0x0(0x8)
	class UClass*                                                Variant;                                           // 0x18(0x8)
};


// Size 0x20
struct ShipMetadata
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	class UClass*                                                ShipTypeObject;                                    // 0x10(0x8)
	class UClass*                                                ShipCategoryObject;                                // 0x18(0x8)
};


// Size 0x68
struct ShopOfferPrerequisites
{
public:
	TArray<String>                                               Entitlements;                                      // 0x0(0x10)
	map                                                          Reputations;                                       // 0x10(0x50)
	uint32                                                       EntitlementRequirementThreshold;                   // 0x60(0x4)
};


// Size 0x30
struct TakeAllItemsFromContainerRPC
{
public:
	struct NetSubObjectPtr                                       Container;                                         // 0x18(0x14)
	int                                                          IndexToTake;                                       // 0x2c(0x4)
};


// Size 0x1
struct EventAthenaLocalPlayerRequestRequiredControllersConnectedResponse
{
public:
	bool                                                         ControllerConnected;                               // 0x0(0x1)
};


// Size 0x8
struct PlayerBuriedItemServiceItemDigUpRadiusSurfaceOverride
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	float                                                        ItemDigUpRadius;                                   // 0x4(0x4)
};


// Size 0x1
struct EventFaunaAnimationStarving
{
public:
	bool                                                         PigIsStarving;                                     // 0x0(0x1)
};


// Size 0xc
struct NameActiveStatePair
{
public:
	struct FName                                                 StateName;                                         // 0x0(0x8)
	bool                                                         IsActive;                                          // 0x8(0x1)
};


// Size 0x38
struct PlayerServerAssignmentMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct FString                                               ServerAddress;                                     // 0x10(0x10)
	struct FString                                               ConnectionKey;                                     // 0x20(0x10)
	uint64                                                       ConnectionToken;                                   // 0x30(0x8)
};


// Size 0x28
struct ItemSpawnWeightedType
{
public:
	class UClass*                                                Type;                                              // 0x0(0x8)
	struct FName                                                 Feature;                                           // 0x8(0x8)
	bool                                                         InvertFeatureCheck;                                // 0x10(0x1)
	int                                                          Weight;                                            // 0x14(0x4)
	TArray<class SpawnRequirement*>                              Requirements;                                      // 0x18(0x10)
};


// Size 0x10
struct EventSendCapturedKeybind
{
public:
	struct FString                                               CapturedKey;                                       // 0x0(0x10)
};


// Size 0x58
struct ModalInteractionActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           InteractionProxy;                                  // 0x40(0x14)
};


// Size 0x4
struct InventoryInteractionTakeAllRequestEvent
{
public:
	int                                                          Index;                                             // 0x0(0x4)
};


// Size 0x48
struct GuildEntitlement
{
public:
	int                                                          UnlockLevel;                                       // 0x0(0x4)
	struct FText                                                 LockedDescription;                                 // 0x8(0x38)
	class UClass*                                                Entitlement;                                       // 0x40(0x8)
};


// Size 0x8
struct EventStartConversationAsParticipant
{
public:
	class Actor*                                                 ConversationStarter;                               // 0x0(0x8)
};


// Size 0x8
struct RiddleActionLocation
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	char                                                         RiddleLocation;                                    // 0x4(0x1)
	char                                                         RiddleActionLocationOffset;                        // 0x5(0x1)
};


// Size 0x10
struct AthenaAnimationServerAnimSpawnTimings
{
public:
	TArray<float>                                                SpawnAnimDurations;                                // 0x0(0x10)
};


// Size 0x8
struct SetVaultDoorStateGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	char                                                         DoorType;                                          // 0x4(0x1)
	char                                                         DoorState;                                         // 0x5(0x1)
};


// Size 0x8
struct WaterloggedShipRecoveredEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x2
struct BucketRegStatePredictionTelemetryEvent
{
public:
	char                                                         InitialPrediction;                                 // 0x0(0x1)
	char                                                         FinalPrediction;                                   // 0x1(0x1)
};


// Size 0x78
struct NPCOnSurfaceLocationsEntry
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	struct FName                                                 SpawnLocationsName;                                // 0x4(0x8)
	char                                                         InvalidWhen;                                       // 0xc(0x1)
	assetclass                                                   AnimationData;                                     // 0x10(0x20)
	float                                                        FadeOutDelay;                                      // 0x30(0x4)
	float                                                        AlternateFadeOutDelay;                             // 0x34(0x4)
	bool                                                         CheckPlayerIsNearby;                               // 0x38(0x1)
	bool                                                         UsesActiveAnimations;                              // 0x39(0x1)
	struct FName                                                 PlayerNearbyVOGroupName;                           // 0x3c(0x8)
	struct WeightedProbabilityRangeOfRanges                      PlayerNearbyVOCooldown;                            // 0x48(0x30)
};


// Size 0x38
struct UIQuestTableTileInteractionTelemetryEvent
{
public:
	struct FString                                               TileTitle;                                         // 0x0(0x10)
	struct FString                                               TileId;                                            // 0x10(0x10)
	int                                                          CurrentTilePage;                                   // 0x20(0x4)
	struct FString                                               SessionId;                                         // 0x28(0x10)
};


// Size 0x18
struct AggressiveGhostShipSplineDataOffsets
{
public:
	float                                                        FormationForwardOffsetInMetres;                    // 0x0(0x4)
	float                                                        FormationForwardOffsetVarianceInMetres;            // 0x4(0x4)
	float                                                        FormationForwardOffsetVarianceSpeed;               // 0x8(0x4)
	float                                                        FormationSidewaysOffsetInMetres;                   // 0xc(0x4)
	float                                                        FormationSidewaysOffsetVarianceInMetres;           // 0x10(0x4)
	float                                                        FormationSidewaysOffsetVarianceSpeed;              // 0x14(0x4)
};


// Size 0x8
struct SetHealthChangeLockGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	char                                                         Reason;                                            // 0x4(0x1)
	bool                                                         EnableLock;                                        // 0x5(0x1)
};


// Size 0x4
struct AthenaAnimationActionRelevancy
{
public:
	bool                                                         UsePrimary;                                        // 0x0(0x1)
	bool                                                         UsePrimaryAlt;                                     // 0x1(0x1)
	bool                                                         UseSecondary;                                      // 0x2(0x1)
	bool                                                         UseSecondaryAlt;                                   // 0x3(0x1)
};


// Size 0x28
struct StoryRemoteServiceRequestModel
{
public:
	struct FString                                               StartTime;                                         // 0x0(0x10)
	struct FString                                               EndTime;                                           // 0x10(0x10)
	char                                                         PlayModeVariant;                                   // 0x20(0x1)
};


// Size 0x18
struct UIIntegerOptionSelectedTelemetryEvent
{
public:
	struct FString                                               Option;                                            // 0x0(0x10)
	int                                                          Value;                                             // 0x10(0x4)
};


// Size 0x8
struct WaterloggedShipStartedGoingUnderEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x1
struct SendMarketingOptInResponse
{
public:
	bool                                                         OptedIn;                                           // 0x0(0x1)
};


// Size 0x10
struct ShipPreviewCreatedEvent
{
public:
	struct FString                                               PreviewURL;                                        // 0x0(0x10)
};


// Size 0x50
struct EventPlayerWithdrewVoyage
{
public:
	struct FText                                                 Title;                                             // 0x18(0x38)
};


// Size 0x40
struct PushCachedSlotActionEvent
{
public:
	TArray<class Class*>                                         NotificationIDs;                                   // 0x0(0x10)
};


// Size 0x30
struct CurrencyGrantedMessage
{
public:
	uint32                                                       Amount;                                            // 0x0(0x4)
	char                                                         Currency;                                          // 0x4(0x1)
	struct Guid                                                  TransactionId;                                     // 0x8(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0x18(0x8)
	uint32                                                       EmissaryLevel;                                     // 0x20(0x4)
	double                                                       EmissaryMultiplier;                                // 0x28(0x8)
};


// Size 0x20
struct QueryConfirmInviteResponse
{
public:
	bool                                                         IsInviteConfirmationPending;                       // 0x0(0x1)
	struct FString                                               ErrorMessage;                                      // 0x8(0x10)
	bool                                                         IsErrorMessage;                                    // 0x18(0x1)
};


// Size 0x14
struct ServerCrewChangedVisibilityStateEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	char                                                         CrewVisibilityState;                               // 0x10(0x1)
};


// Size 0x90
struct PetShopPetBreed
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct StringAssetReference                                  Icon;                                              // 0x38(0x10)
	struct FText                                                 Description;                                       // 0x48(0x38)
	TArray<class Class*>                                         Categories;                                        // 0x80(0x10)
};


// Size 0x18
struct ShipSizePartCustomizationNameData
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	TArray<struct Name>                                          PartNames;                                         // 0x8(0x10)
};


// Size 0xc
struct ShipScuttledTelemetryEvent
{
public:
	bool                                                         ScuttleAndChangeSeas;                              // 0x0(0x1)
	int                                                          ScuttleRequestsCount;                              // 0x4(0x4)
	float                                                        CooldownTimer;                                     // 0x8(0x4)
};


// Size 0x8
struct AggressiveGhostShipState
{
public:
	bool                                                         IsShipVisible;                                     // 0x0(0x1)
	bool                                                         IsShipDead;                                        // 0x1(0x1)
	float                                                        ShipSpeed;                                         // 0x4(0x4)
};


// Size 0x8
struct CaptureChatPerformanceTelemetryFragment
{
public:
	uint32                                                       MaxTotalSizeOfArrayAndMessagesInBytes;             // 0x0(0x4)
	uint32                                                       MaxNumberOfMessages;                               // 0x4(0x4)
};


// Size 0x1
struct CrewMuteOthersVoiceEvent
{
public:
	bool                                                         IsMuted;                                           // 0x0(0x1)
};


// Size 0x8
struct EventPopUpNotificationComponentInitialised
{
public:
	class Controller*                                            AthenaController;                                  // 0x0(0x8)
};


// Size 0x50
struct AthenaAnimationCameraAdditiveAnimData
{
public:
	class AnimSequence*                                          CameraDefaultYaw;                                  // 0x0(0x8)
	class AnimSequence*                                          CameraDefaultPitch;                                // 0x8(0x8)
	class AnimSequence*                                          CameraWheelYaw;                                    // 0x10(0x8)
	class AnimSequence*                                          CameraWheelPitch;                                  // 0x18(0x8)
	class AnimSequence*                                          CameraCapstanYaw;                                  // 0x20(0x8)
	class AnimSequence*                                          CameraCapstanPitch;                                // 0x28(0x8)
	class AnimSequence*                                          CameraSailYaw;                                     // 0x30(0x8)
	class AnimSequence*                                          CameraSailPitch;                                   // 0x38(0x8)
	class AnimSequence*                                          CameraLadderYaw;                                   // 0x40(0x8)
	class AnimSequence*                                          CameraLadderPitch;                                 // 0x48(0x8)
};


// Size 0x80
struct IndividualMeshConsumer
{
public:
	TArray<class MaterialInterface*>                             OverrideMaterials;                                 // 0x18(0x10)
	TArray<class MaterialInterface*>                             OverrideFallbackMaterials;                         // 0x28(0x10)
};


// Size 0x8
struct GuildLedgerPositionChangedEvent
{
public:
	int                                                          OldLedgerPosition;                                 // 0x0(0x4)
	int                                                          CurrentLedgerPosition;                             // 0x4(0x4)
};


// Size 0x3
struct CutsceneTriggerEditorOnlyData
{
public:
	bool                                                         AlwaysShowCutsceneName;                            // 0x0(0x1)
	bool                                                         AlwaysShowShapeComponentOutlines;                  // 0x1(0x1)
	bool                                                         PrintStateChangesToScreen;                         // 0x2(0x1)
};


// Size 0x8
struct RemoveUserSettingsEvent
{
public:
	class Controller*                                            Controller;                                        // 0x0(0x8)
};


// Size 0x4
struct GetUserPositionForGuildResponseModel
{
public:
	uint32                                                       Position;                                          // 0x0(0x4)
};


// Size 0x4
struct EventMeleeAttackUpdateRecoverDuration
{
public:
	float                                                        RecoverDuration;                                   // 0x0(0x4)
};


// Size 0x10
struct FogBankManagerFogAvoidanceArea
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	float                                                        Radius;                                            // 0xc(0x4)
};


// Size 0x1c
struct TreasureMapWidget
{
public:
	struct Vector2D                                              Position;                                          // 0x0(0x8)
	char                                                         HorizontalAlignment;                               // 0x8(0x1)
	char                                                         VerticalAlignment;                                 // 0x9(0x1)
	float                                                        Angle;                                             // 0xc(0x4)
	float                                                        Width;                                             // 0x10(0x4)
	float                                                        Opacity;                                           // 0x14(0x4)
	bool                                                         DisableCanvasWidthClamp;                           // 0x18(0x1)
};


// Size 0x8
struct CappedCount
{
public:
	uint32                                                       Cap;                                               // 0x0(0x4)
	uint32                                                       Value;                                             // 0x4(0x4)
};


// Size 0x8
struct FocusRadialInventorySlot
{
public:
	int                                                          SlotIndex;                                         // 0x4(0x4)
};


// Size 0x6
struct HitRegSnapshotDisplaySettings
{
public:
	bool                                                         DisplaySnapshot;                                   // 0x0(0x1)
	bool                                                         DisplayAttackingClientData;                        // 0x1(0x1)
	bool                                                         DisplayServerData;                                 // 0x2(0x1)
	bool                                                         ShowDetailedExplanations;                          // 0x3(0x1)
	bool                                                         ShowPreCorrectedCapsules;                          // 0x4(0x1)
	bool                                                         ShowFullRewindData;                                // 0x5(0x1)
};


// Size 0x18
struct CargoRunQuestCrateEntries
{
public:
	struct FString                                               Rarity;                                            // 0x0(0x10)
	int                                                          CargoCount;                                        // 0x10(0x4)
};


// Size 0x40
struct IsWearingClothingCondition
{
public:
	TArray<Class>                                                TargetClothes;                                     // 0x28(0x10)
	int                                                          MinimumRequiredClothing;                           // 0x38(0x4)
};


// Size 0x8
struct ShipBaseTelemetryFragmentInput
{
public:
	class Actor*                                                 ShipActor;                                         // 0x0(0x8)
};


// Size 0x28
struct MastCollisionProfiles
{
public:
	struct FName                                                 CollisionDisabledProfile;                          // 0x0(0x8)
	struct FName                                                 PlayerAndItemsCollisionProfile;                    // 0x8(0x8)
	struct FName                                                 PlayerOnlyCollisionProfile;                        // 0x10(0x8)
	struct FName                                                 ItemsOnlyCollisionProfile;                         // 0x18(0x8)
	struct FName                                                 ProjectilesOnlyCollisionProfile;                   // 0x20(0x8)
};


// Size 0x28
struct BountyQuestMugShotSet
{
public:
	class AthenaAIFormDataAsset*                                 Form;                                              // 0x0(0x8)
	class Texture*                                               MaleCaptainMugShot;                                // 0x8(0x8)
	class Texture*                                               FemaleCaptainMugShot;                              // 0x10(0x8)
	class Texture*                                               MaleCrewMugShot;                                   // 0x18(0x8)
	class Texture*                                               FemaleCrewMugShot;                                 // 0x20(0x8)
};


// Size 0x28
struct StatBatchMessageValues
{
public:
	TArray<UInt64 Values>                                        Values;                                            // 0x0(0x10)
	bool                                                         ApplyShipProgression;                              // 0x10(0x1)
	struct Guid                                                  ShipId;                                            // 0x14(0x10)
};


// Size 0x10
struct QuestBaseTelemetryFragmentInput
{
public:
	struct Guid                                                  QuestId;                                           // 0x0(0x10)
};


// Size 0x10
struct WieldableBookPageRenderer
{
public:
	class WieldableBookRendererSettings*                         WeakSettingsPtr;                                   // 0x8(0x8)
};


// Size 0x28
struct AllowedInteractableTypes
{
public:
	assetclass                                                   ActorType;                                         // 0x0(0x20)
	struct CollisionProfileName                                  CollisionProfileName;                              // 0x20(0x8)
};


// Size 0x18
struct CompanyLevelClaim
{
public:
	uint32                                                       Level;                                             // 0x0(0x4)
	struct FString                                               Sig;                                               // 0x8(0x10)
};


// Size 0x10
struct BlockDecalMaterials
{
public:
	TArray<class MaterialInterface*>                             BlockMaterials;                                    // 0x0(0x10)
};


// Size 0x28
struct CursedCrewStatEvent
{
public:
	class Object*                                                ObjectOfInterest;                                  // 0x18(0x8)
};


// Size 0x18
struct PlayerWhoIsReadingGuildCard
{
public:
	class Actor*                                                 Actor;                                             // 0x0(0x8)
	TArray<char>                                                 CannotJoinReasons;                                 // 0x8(0x10)
};


// Size 0x20
struct KrakenAnimatedTentacleCollisionSegment
{
public:
	int                                                          BottomBoneIndex;                                   // 0x0(0x4)
	int                                                          TopBoneIndex;                                      // 0x4(0x4)
	float                                                        BoneLocationAlpha;                                 // 0x8(0x4)
	float                                                        CapsuleRadius;                                     // 0xc(0x4)
	float                                                        CapsuleHalfHeight;                                 // 0x10(0x4)
	class CapsuleComponent*                                      Capsule;                                           // 0x18(0x8)
};


// Size 0x10
struct PressurePlateAnimationComponent
{
public:
	class SceneComponent*                                        Component;                                         // 0x0(0x8)
	class TransformBlendCurveComponent*                          Curve;                                             // 0x8(0x8)
};


// Size 0x10
struct RequestedLoopAnims
{
public:
	struct FName                                                 RequestedLoopingAnimName;                          // 0x0(0x8)
	int                                                          RequestedOutOfAnimIndex;                           // 0x8(0x4)
	int                                                          AnimationAssetRequired;                            // 0xc(0x4)
};


// Size 0x10
struct ShowPendingInviteEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x20
struct EventCollectedMegalodonSoul
{
public:
	char                                                         SoulType;                                          // 0x0(0x1)
	struct Guid                                                  CrewId;                                            // 0x4(0x10)
	class Actor*                                                 Collector;                                         // 0x18(0x8)
};


// Size 0x10
struct InventoryInteractionStowAllRequestEvent
{
public:
	struct FString                                               ItemDesc;                                          // 0x0(0x10)
};


// Size 0x48
struct CapstanDesc
{
public:
	struct StringAssetReference                                  CapstanBodyMesh;                                   // 0x0(0x10)
	int64                                                        CapstanBodyCachedMeshResourceSize;                 // 0x10(0x8)
	struct StringAssetReference                                  CapstanArmMesh;                                    // 0x18(0x10)
	int64                                                        CapstanArmCachedMeshResourceSize;                  // 0x28(0x8)
	struct StringAssetReference                                  CapstanReleaseMesh;                                // 0x30(0x10)
	int64                                                        CapstanReleaseCachedMeshResourceSize;              // 0x40(0x8)
};


// Size 0x18
struct TimeStampedShipDiveMusicState
{
public:
	struct FName                                                 MusicThemeName;                                    // 0x0(0x8)
	char                                                         DiveMusicState;                                    // 0x8(0x1)
	double                                                       EnteredStateServerTimeStamp;                       // 0x10(0x8)
};


// Size 0x28
struct ConsumedIngestibleTelemetryEvent
{
public:
	struct FString                                               ItemName;                                          // 0x0(0x10)
	char                                                         CookState;                                         // 0x10(0x1)
	TArray<String>                                               StatusesApplied;                                   // 0x18(0x10)
};


// Size 0x1c
struct BuoyancyComponentLockToSurfaceParams
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
	float                                                        SpringAcceleration;                                // 0x4(0x4)
	float                                                        EnterLockStateBlendTime;                           // 0x8(0x4)
	float                                                        ExitLockStateBlendTime;                            // 0xc(0x4)
	float                                                        ChoppinessScalar;                                  // 0x10(0x4)
	float                                                        SubmersionHint;                                    // 0x14(0x4)
	float                                                        DistanceFromWaterSurfaceToConsiderSurfaced;        // 0x18(0x4)
};


// Size 0x20
struct ChangeDartTypeRPC
{
public:
	int                                                          NewDartID;                                         // 0x18(0x4)
};


// Size 0x20
struct CrewSpawnTelemetryEvent
{
public:
	struct Vector                                                OldShipSinkLocation;                               // 0x0(0xc)
	bool                                                         HasValidShipSpawn;                                 // 0xc(0x1)
	struct Vector                                                ShipSpawnLocation;                                 // 0x10(0xc)
	bool                                                         IsContestSpawnPoint;                               // 0x1c(0x1)
	bool                                                         IsOnCompetitiveVoyage;                             // 0x1d(0x1)
};


// Size 0x2
struct SeaFortAlignment
{
public:
	char                                                         IslandType;                                        // 0x0(0x1)
	char                                                         Alignment;                                         // 0x1(0x1)
};


// Size 0x28
struct CloudWeatherParameters
{
public:
	struct Vector2D                                              DefaultCloudVelocity;                              // 0x0(0x8)
	class MaterialParameterCollection*                           AtmosphericMaterialParams;                         // 0x8(0x8)
	float                                                        GlobalAtmosphericPressure;                         // 0x10(0x4)
	float                                                        AtmosphericPressureThresholdSize;                  // 0x14(0x4)
	float                                                        MaxWindDelayLength;                                // 0x18(0x4)
	float                                                        WindSpeedMultiplier;                               // 0x1c(0x4)
	bool                                                         UsesGlobalWindService;                             // 0x20(0x1)
	bool                                                         UsesPressureZones;                                 // 0x20(0x1)
	bool                                                         CloudsCastShadows;                                 // 0x20(0x1)
	bool                                                         PressureIsControlledByParameterCollection;         // 0x20(0x1)
};


// Size 0x30
struct PlayerSetFlameOfFateTelemetryEvent
{
public:
	struct FString                                               LitObjectId;                                       // 0x0(0x10)
	struct FString                                               FlameColour;                                       // 0x10(0x10)
	struct FString                                               LitObjectType;                                     // 0x20(0x10)
};


// Size 0x10
struct EventCustomizableActorChanged
{
public:
	class Actor*                                                 CustomizableActor;                                 // 0x0(0x8)
	bool                                                         StripOverrideMaterials;                            // 0x8(0x1)
};


// Size 0x10
struct MerchantQuestRequiredItemsGroup
{
public:
	TArray<class MerchantQuestItemData*>                         RequiredItems;                                     // 0x0(0x10)
};


// Size 0x1
struct EventFaunaAnimationLocationChanged
{
public:
	char                                                         Location;                                          // 0x0(0x1)
};


// Size 0x50
struct TreasureSpawnedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         BootyType;                                         // 0x10(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
	char                                                         Source;                                            // 0x28(0x1)
	struct FString                                               SourceId;                                          // 0x30(0x10)
	struct Vector                                                TreasureLocation;                                  // 0x40(0xc)
};


// Size 0x28
struct AthenaAnimationObjectActionOneShotPlayingStructPitchOverride
{
public:
	class BlendSpace1D*                                          Action;                                            // 0x0(0x8)
	class BlendSpace1D*                                          ActionVariant1;                                    // 0x8(0x8)
	class BlendSpace1D*                                          ActionVariant2;                                    // 0x10(0x8)
	class BlendSpace1D*                                          ActionVariant3;                                    // 0x18(0x8)
	class BlendSpace1D*                                          ActionVariant4;                                    // 0x20(0x8)
};


// Size 0x18
struct DeferralReasonPopUpNotificationInfo
{
public:
	struct FString                                               DeferralReason;                                    // 0x0(0x10)
	class PopUpMessageDesc*                                      PopUp;                                             // 0x10(0x8)
};


// Size 0x8
struct RequestCreateShipPreviewEvent
{
public:
	int                                                          ResolutionX;                                       // 0x0(0x4)
	int                                                          ResolutionY;                                       // 0x4(0x4)
};


// Size 0x10
struct PlayerExitedStormEvent
{
public:
	class Actor*                                                 Storm;                                             // 0x0(0x8)
	class Controller*                                            Player;                                            // 0x8(0x8)
};


// Size 0x50
struct ShipDamageEntry
{
public:
	class UClass*                                                OtherShipSize;                                     // 0x0(0x8)
	class ForceFeedbackEffect*                                   ForceFeedbackEffect;                               // 0x8(0x8)
	struct Int32Range                                            NumZonesToDamageForInstigator;                     // 0x10(0x10)
	struct Int32Range                                            DamageLevelForInstigator;                          // 0x20(0x10)
	struct Int32Range                                            NumZonesToDamageForReceiver;                       // 0x30(0x10)
	struct Int32Range                                            DamageLevelForReceiver;                            // 0x40(0x10)
};


// Size 0x48
struct TreasureMapTextEntry
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	struct FText                                                 Substitution;                                      // 0x10(0x38)
};


// Size 0x38
struct EventSpawnedAsGhostNotification
{
public:
	struct FText                                                 NotificationText;                                  // 0x0(0x38)
};


// Size 0x28
struct BootFlowWaitForLoadingScreenStateTransitionEvent
{
public:
	struct FString                                               OldState;                                          // 0x0(0x10)
	struct FString                                               NewState;                                          // 0x10(0x10)
	float                                                        OldStateDuration;                                  // 0x20(0x4)
};


// Size 0x68
struct AthenaAnimationLocomotion
{
public:
	struct Vector                                                CharacterVelocity;                                 // 0x0(0xc)
	float                                                        WantedMovementSpeed;                               // 0xc(0x4)
	float                                                        HalfWantedMovementSpeed;                           // 0x10(0x4)
	bool                                                         CharacterMoving;                                   // 0x14(0x1)
	bool                                                         RunStopWanted;                                     // 0x15(0x1)
	float                                                        TurnRate;                                          // 0x18(0x4)
	float                                                        CurrentYaw;                                        // 0x1c(0x4)
	float                                                        CurrentDirection;                                  // 0x20(0x4)
	bool                                                         TurningActive;                                     // 0x24(0x1)
	bool                                                         TurningLeft;                                       // 0x25(0x1)
	bool                                                         IsSwimming;                                        // 0x26(0x1)
	bool                                                         IsUnderwaterSwimming;                              // 0x27(0x1)
	float                                                        BlendedTurnRate;                                   // 0x28(0x4)
	float                                                        MinimumMoveSpeedToTriggerRunStop;                  // 0x2c(0x4)
	float                                                        InterpSpeed;                                       // 0x30(0x4)
	float                                                        TurnRateToDisableTurns;                            // 0x34(0x4)
	float                                                        TurningAnimationExplicitTime;                      // 0x38(0x4)
	float                                                        FixedBlendedTurnRateForAI;                         // 0x3c(0x4)
	bool                                                         IsInAITurn;                                        // 0x40(0x1)
	class AthenaAnimationInstance*                               CachedOwner;                                       // 0x58(0x8)
};


// Size 0x10
struct CrewManagementMemberBrigState
{
public:
	bool                                                         Voted;                                             // 0x0(0x1)
	int                                                          VotesCast;                                         // 0x4(0x4)
	int                                                          VotesRequired;                                     // 0x8(0x4)
	char                                                         State;                                             // 0xc(0x1)
};


// Size 0x10
struct CaptainsShopInventoryCountsRequestEvent
{
public:
	TArray<String>                                               Requests;                                          // 0x0(0x10)
};


// Size 0x40
struct TreasureMapDataCaptureParams
{
public:
	struct Vector                                                CameraPosition;                                    // 0x0(0xc)
	struct Rotator                                               CameraOrientation;                                 // 0xc(0xc)
	struct Vector                                                WorldSpaceCameraPosition;                          // 0x18(0xc)
	float                                                        CameraFOV;                                         // 0x24(0x4)
	float                                                        CameraAspect;                                      // 0x28(0x4)
	float                                                        CameraOrthoWidth;                                  // 0x2c(0x4)
	float                                                        CameraNearClip;                                    // 0x30(0x4)
	float                                                        CameraFarClip;                                     // 0x34(0x4)
	int                                                          TextureWidth;                                      // 0x38(0x4)
	int                                                          TextureHeight;                                     // 0x3c(0x4)
};


// Size 0x10
struct QuestPageListPopulator
{
public:
	TArray<class QuestBookPageList*>                             PageListsToUpdate;                                 // 0x0(0x10)
};


// Size 0x20
struct AthenaAnimationActiveOneShotAnimationStruct
{
public:
	class AnimSequence*                                          Action;                                            // 0x0(0x8)
	class BlendSpace1D*                                          ActionPitchOverride;                               // 0x8(0x8)
	class BlendSpace*                                            ActionLocomotion;                                  // 0x10(0x8)
	bool                                                         UsePitchOverride;                                  // 0x18(0x1)
	bool                                                         LocomotingWithPitchOverrideDisabled;               // 0x19(0x1)
	bool                                                         IdleWithPitchOverrideDisabled;                     // 0x1a(0x1)
};


// Size 0x18
struct StartEmoteGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	struct FString                                               EmoteName;                                         // 0x8(0x10)
};


// Size 0xa8
struct LaunchableProjectileServiceTelemetryHitTrackingRpc
{
public:
	double                                                       TimeStamp;                                         // 0x18(0x8)
	int                                                          CurrentTimeOfImpact;                               // 0x20(0x4)
	struct Guid                                                  AttackId;                                          // 0x24(0x10)
	float                                                        TimeAlive;                                         // 0x34(0x4)
	struct Vector_NetQuantize                                    InitialProjectilePosition;                         // 0x38(0xc)
	struct Vector_NetQuantize                                    FinalProjectilePosition;                           // 0x44(0xc)
	struct Vector                                                Direction;                                         // 0x50(0xc)
	float                                                        Speed;                                             // 0x5c(0x4)
	class UClass*                                                DamagerType;                                       // 0x60(0x8)
	class Character*                                             InstigatingPlayerCharacter;                        // 0x68(0x8)
	float                                                        InstigatorSpeed;                                   // 0x70(0x4)
	class Actor*                                                 HitActor;                                          // 0x78(0x8)
	class SceneComponent*                                        HitComponent;                                      // 0x80(0x8)
	struct Vector_NetQuantize                                    HitComponentLocation;                              // 0x88(0xc)
	struct Rotator                                               HitComponentRotation;                              // 0x94(0xc)
	float                                                        LatencyMs;                                         // 0xa0(0x4)
};


// Size 0x4
struct EventAthenaLocalPlayerControllerPairingChanged
{
public:
	int                                                          ControllerId;                                      // 0x0(0x4)
};


// Size 0x8
struct ItemLoadoutItemRemovedEvent
{
public:
	class ItemInfo*                                              Item;                                              // 0x0(0x8)
};


// Size 0x18
struct BootyItemTransferredToVendor
{
public:
	class BootyItemInfo*                                         ItemInfo;                                          // 0x0(0x8)
	struct Guid                                                  CrewId;                                            // 0x8(0x10)
};


// Size 0x38
struct TunnelOfTheDamnedBaseTelemetryFragmentInput
{
public:
	struct Guid                                                  TunnelInstanceId;                                  // 0x0(0x10)
	struct FString                                               TunnelType;                                        // 0x10(0x10)
	struct FString                                               TunnelDescName;                                    // 0x20(0x10)
	double                                                       TunnelLifetimeSeconds;                             // 0x30(0x8)
};


// Size 0x60
struct RemoveWorldEventGameServerRequestModel
{
public:
	struct FString                                               EventType;                                         // 0x0(0x10)
	map                                                          Parameters;                                        // 0x10(0x50)
};


// Size 0x28
struct UIMessageOfTheDayCloseToEmporiumEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               MessageId;                                         // 0x10(0x10)
	float                                                        TimeSpentInMessage;                                // 0x20(0x4)
};


// Size 0x28
struct StandardAnchorDynamicsParameters
{
public:
	float                                                        AnchorForce;                                       // 0x0(0x4)
	float                                                        VelocityDeadZoneThreshold;                         // 0x4(0x4)
	class CurveFloat*                                            UnaryWheelAngleBasedTorque;                        // 0x8(0x8)
	class CurveFloat*                                            ForwardSpeedBasedTorque;                           // 0x10(0x8)
	float                                                        BaseHandbrakeTorque;                               // 0x18(0x4)
	float                                                        TimeAfterAnchorDownToGrabWantedYaw;                // 0x1c(0x4)
	class CurveFloat*                                            YawDeltaVsCorrectiveTorquePerKgMass;               // 0x20(0x8)
};


// Size 0x10
struct DartLimitsInfo
{
public:
	class UClass*                                                DartTypeId;                                        // 0x0(0x8)
	int                                                          MaxDartNumber;                                     // 0x8(0x4)
};


// Size 0x58
struct RiddleTextRenderer
{
public:
	float                                                        MaskSizeScale;                                     // 0x0(0x4)
	class Font*                                                  Font;                                              // 0x8(0x8)
	float                                                        FontScale;                                         // 0x10(0x4)
	float                                                        FontMaxScale;                                      // 0x14(0x4)
	float                                                        FontScaleChange;                                   // 0x18(0x4)
	float                                                        FontLineSpacingScale;                              // 0x1c(0x4)
	TArray<String>                                               DroppedTextCharacters;                             // 0x20(0x10)
	bool                                                         VerticallyCentredText;                             // 0x30(0x1)
	bool                                                         HorizontallyCentredText;                           // 0x31(0x1)
	float                                                        MaxTextHeightRatioForRiddleText;                   // 0x34(0x4)
	float                                                        MarginSize;                                        // 0x38(0x4)
	struct Vector2D                                              OriginRatio;                                       // 0x3c(0x8)
	float                                                        StepSpacingRatio;                                  // 0x44(0x4)
	float                                                        StepSpacingWithDroppedTailInLastLineRatio;         // 0x48(0x4)
	float                                                        MaskOffsetRatio;                                   // 0x4c(0x4)
	struct Vector2D                                              MaskBorderRatio;                                   // 0x50(0x8)
};


// Size 0x30
struct PoolDensityData
{
public:
	class WwiseObjectPoolWrapper*                                WwiseObjectPoolDensityWrapper;                     // 0x0(0x8)
	struct WwiseEmitter                                          DensityEmitter;                                    // 0x8(0x20)
};


// Size 0x10
struct KrakenAnimatedTentacleHoldingStateTransitionChance
{
public:
	float                                                        WeightedChance;                                    // 0x0(0x4)
	class UClass*                                                StateToTransitionTo;                               // 0x8(0x8)
};


// Size 0x20
struct MatineeActorPlayNetworkEvent
{
public:
	class MatineeActor*                                          MatineeActor;                                      // 0x18(0x8)
};


// Size 0x38
struct FallbackAnimUsageInfo
{
public:
	struct FString                                               AnimationsStructName;                              // 0x0(0x10)
	struct FString                                               FallbackForCharacterName;                          // 0x10(0x10)
	float                                                        DurationOfUsage;                                   // 0x20(0x4)
	struct FString                                               ItemName;                                          // 0x28(0x10)
};


// Size 0x38
struct UIQuestTablePageTransitionTelemetryEvent
{
public:
	struct FString                                               CurrentPage;                                       // 0x0(0x10)
	struct FString                                               PreviousPage;                                      // 0x10(0x10)
	float                                                        TimeOnPreviousPage;                                // 0x20(0x4)
	struct FString                                               SessionId;                                         // 0x28(0x10)
};


// Size 0x30
struct QuickTransferTelemetryEvent
{
public:
	struct FString                                               SrcClass;                                          // 0x0(0x10)
	struct FString                                               DestClass;                                         // 0x10(0x10)
	float                                                        TransferTime;                                      // 0x20(0x4)
	int                                                          NumTransferred;                                    // 0x24(0x4)
	bool                                                         Giving;                                            // 0x28(0x1)
};


// Size 0x18
struct AddStatusesGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	TArray<String>                                               Statuses;                                          // 0x8(0x10)
};


// Size 0x18
struct HoleContainer
{
public:
	TArray<uintptr_t>                                            Holes;                                             // 0x0(0x10)
	struct FName                                                 IslandName;                                        // 0x10(0x8)
};


// Size 0x40
struct TrinketMetadata
{
public:
	assetclass                                                   TrinketDescription;                                // 0x0(0x20)
	assetclass                                                   TrinketMountableType;                              // 0x20(0x20)
};


// Size 0x2
struct OnRepIsSoloSeas
{
public:
	bool                                                         IsSet;                                             // 0x0(0x1)
	bool                                                         IsSoloSeasServer;                                  // 0x1(0x1)
};


// Size 0x8
struct PetChestEquipPetEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x60
struct CargoRunItemDropOffData
{
public:
	struct Guid                                                  PickUpId;                                          // 0x0(0x10)
	struct Guid                                                  DeliveryLocationId;                                // 0x10(0x10)
	int64                                                        DeliveryDeadlineTicks;                             // 0x20(0x8)
	struct FText                                                 DeliveryLocationHintText;                          // 0x28(0x38)
};


// Size 0x8
struct FishSizeAndWeight
{
public:
	char                                                         Size;                                              // 0x0(0x1)
	float                                                        Weight;                                            // 0x4(0x4)
};


// Size 0x10
struct BootFlowStateQueryResponseEvent
{
public:
	struct FString                                               StateName;                                         // 0x0(0x10)
};


// Size 0x90
struct PlayerRelevancyRequest
{
public:
	class AthenaPlayerController*                                PlayerController;                                  // 0x0(0x8)
	char                                                         RequestState;                                      // 0x8(0x1)
	float                                                        TimeRemaining;                                     // 0xc(0x4)
};


// Size 0x10
struct CharacterHitReactionDamagerTypeToAnimTypePair
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
};


// Size 0x10
struct AssociatedCompanies
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct FName                                                 FeatureToggle;                                     // 0x8(0x8)
};


// Size 0xc
struct PlayerCurseToAudioSwitchValue
{
public:
	char                                                         CurseTag;                                          // 0x0(0x1)
	struct FName                                                 SwitchValue;                                       // 0x4(0x8)
};


// Size 0x20
struct RequestPurchasePremiumShopOfferEvent
{
public:
	struct Guid                                                  OfferId;                                           // 0x0(0x10)
	struct FString                                               CatalogName;                                       // 0x10(0x10)
};


// Size 0x10
struct NPCDialogContextConditionContextPayload
{
public:
	class Object*                                                Context;                                           // 0x8(0x8)
};


// Size 0x1c
struct AthenaAnimationIKFootplantingAnimData
{
public:
	bool                                                         Active;                                            // 0x0(0x1)
	float                                                        HipHeight;                                         // 0x4(0x4)
	float                                                        HipPullStrength;                                   // 0x8(0x4)
	float                                                        DownDistance;                                      // 0xc(0x4)
	float                                                        DownDistanceRangeStart;                            // 0x10(0x4)
	float                                                        DownDistanceRangeEnd;                              // 0x14(0x4)
	float                                                        IKLegStretch;                                      // 0x18(0x4)
};


// Size 0x28
struct AIShipEncounterDynamicWaveNetworkEvent
{
public:
	uint32                                                       RemainingAIShips;                                  // 0x18(0x4)
	uint32                                                       TotalAIShips;                                      // 0x1c(0x4)
	uint32                                                       TotalAIShipsInFinalWave;                           // 0x20(0x4)
};


// Size 0x30
struct DioramaDebugMenuEntry
{
public:
	class AISpawner*                                             Spawner;                                           // 0x0(0x8)
	class AIDioramaDesc*                                         DioramaDesc;                                       // 0x8(0x8)
	struct FString                                               DioramaName;                                       // 0x10(0x10)
	struct FString                                               TaleId;                                            // 0x20(0x10)
};


// Size 0x20
struct UIScreenTransitionTelemetryEvent
{
public:
	struct FString                                               CurrentScreen;                                     // 0x0(0x10)
	struct FString                                               PreviousScreen;                                    // 0x10(0x10)
};


// Size 0x28
struct ResponseEventSchedulerStatusNetworkEvent
{
public:
	TArray<String>                                               EventStatus;                                       // 0x18(0x10)
};


// Size 0x1
struct ScrambleShipNameSettingChanged
{
public:
	bool                                                         ShouldScrambleShipName;                            // 0x0(0x1)
};


// Size 0xc
struct PlayerModerationParams
{
public:
	float                                                        PlayerReportableDistance;                          // 0x0(0x4)
	float                                                        PlayerReportableTimeBetweenChecksInSeconds;        // 0x4(0x4)
	float                                                        RemovePlayerFromListAfterSeconds;                  // 0x8(0x4)
};


// Size 0x1
struct EventFaceTargetEnabled
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
};


// Size 0xc
struct RiddleTextPhraseId
{
public:
	struct FName                                                 PhraseId;                                          // 0x0(0x8)
	int                                                          VariantIndex;                                      // 0x8(0x4)
};


// Size 0x28
struct PlayersGuildRewardUnlockedEvent
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct FString                                               EntitlementId;                                     // 0x10(0x10)
	uint32                                                       RewardLevel;                                       // 0x20(0x4)
	uint32                                                       RewardDistinctionLevel;                            // 0x24(0x4)
};


// Size 0x38
struct GuildPlaqueDisplayInfo
{
public:
	struct FString                                               GuildDisplayName;                                  // 0x0(0x10)
	int8                                                         GuildDistinctionLevel;                             // 0x10(0x1)
	struct FString                                               GuildIconKey;                                      // 0x18(0x10)
	struct Guid                                                  GuildId;                                           // 0x28(0x10)
};


// Size 0x28
struct ObjectLeakDetectionTelemetryRpc
{
public:
	TArray<char>                                                 DataBlob;                                          // 0x18(0x10)
};


// Size 0x10
struct NetPerformanceMonitorConnectionErrorTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
};


// Size 0x1c
struct CrewWinEvent
{
public:
	char                                                         ScoreId;                                           // 0x0(0x1)
	struct Guid                                                  CrewId;                                            // 0x4(0x10)
	int                                                          CrewScore;                                         // 0x14(0x4)
	char                                                         ReasonForScoring;                                  // 0x18(0x1)
};


// Size 0x60
struct VoyageCompleteAnimationEvent
{
public:
	struct FText                                                 VoyageTitle;                                       // 0x0(0x38)
	struct FString                                               AudioSwitchName;                                   // 0x38(0x10)
	struct FString                                               AudioSwitchValue;                                  // 0x48(0x10)
	struct FName                                                 CompanyId;                                         // 0x58(0x8)
};


// Size 0x1
struct EventPickupableObjectDropped
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
};


// Size 0x1
struct OnLiquidProjectileImpactEvent
{
public:
	bool                                                         ImpactFilledShip;                                  // 0x0(0x1)
};


// Size 0x30
struct ShipwreckStateData
{
public:
	struct FString                                               Name;                                              // 0x20(0x10)
};


// Size 0x10
struct ContestMatchmakingLocationsRequestModel
{
public:
	TArray<String>                                               PlayModeTags;                                      // 0x0(0x10)
};


// Size 0x18
struct PossessableSequence
{
public:
	class Actor*                                                 ActorToPossess;                                    // 0x0(0x8)
	struct FString                                               TrackNameToPossess;                                // 0x8(0x10)
};


// Size 0x30
struct AthenaAnimationWaterPump
{
public:
	class Actor*                                                 WaterPump;                                         // 0x10(0x8)
};


// Size 0x60
struct ActorInsideLiquidInformation
{
public:
	class Actor*                                                 HitActor;                                          // 0x0(0x8)
	interface                                                    DamageableInterface;                               // 0x8(0x10)
	interface                                                    StatusEffectRecipientInterface;                    // 0x18(0x10)
	class Actor*                                                 ActorWithLiquidPropagationInterface;               // 0x28(0x8)
};


// Size 0x10
struct UIRequestOpenCompanyShopEvent
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
};


// Size 0xc
struct EventUserGameSettingsSetBoolean
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	bool                                                         Value;                                             // 0x8(0x1)
};


// Size 0x18
struct RequestTrinketBoxActionEvent
{
public:
	char                                                         Action;                                            // 0x0(0x1)
	struct FString                                               TrinketDesc;                                       // 0x8(0x10)
};


// Size 0x38
struct StartShipSessionFailedNetworkEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x18(0x10)
	struct Guid                                                  GuildId;                                           // 0x28(0x10)
};


// Size 0x18
struct CloudTypeNormalizedWeight
{
public:
	struct LinearColor                                           LodScreenPercentages;                              // 0x0(0x10)
	float                                                        ProbabilityWeight;                                 // 0x10(0x4)
	float                                                        MeshRadius;                                        // 0x14(0x4)
};


// Size 0x18
struct FeatureToggledMechanismGroups
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	TArray<class MechanismGroup*>                                MechanismGroups;                                   // 0x8(0x10)
};


// Size 0x28
struct ToggleCinematicModeRpc
{
public:
	bool                                                         bInCinematicMode;                                  // 0x18(0x1)
	class PlayerController*                                      PlayerController;                                  // 0x20(0x8)
};


// Size 0x8
struct EmissaryState
{
public:
	bool                                                         EmissaryActive;                                    // 0x0(0x1)
	float                                                        Level;                                             // 0x4(0x4)
};


// Size 0x8
struct EventSetRemappedPlayerDirection
{
public:
	struct Vector2D                                              PlayerDirection;                                   // 0x0(0x8)
};


// Size 0x40
struct AnimatedMaterialData
{
public:
	struct FName                                                 ParamName;                                         // 0x0(0x8)
	float                                                        BlendDuration;                                     // 0x8(0x4)
	class CurveFloat*                                            InCurve;                                           // 0x10(0x8)
	class CurveFloat*                                            OutCurve;                                          // 0x18(0x8)
	TArray<class MaterialInstanceDynamic*>                       FoundMaterials;                                    // 0x20(0x10)
	class CurveFloat*                                            CurrentBlendCurve;                                 // 0x30(0x8)
};


// Size 0x10
struct FishingMiniGameData
{
public:
	class FishingMiniGameSetupDataAsset*                         SetupDataAsset;                                    // 0x0(0x8)
	class FishingMiniGameFishDataAsset*                          FishDataAsset;                                     // 0x8(0x8)
};


// Size 0x28
struct ItemSnapshotSwapInstigatedEvent
{
public:
	struct Guid                                                  SnapshotID;                                        // 0x0(0x10)
	interface                                                    NewInstagator;                                     // 0x10(0x10)
	class Actor*                                                 WorldContextObject;                                // 0x20(0x8)
};


// Size 0x30
struct PlayerCheatTelemetryEvent
{
public:
	struct FString                                               CheatSource;                                       // 0x0(0x10)
	struct FString                                               CheatFunction;                                     // 0x10(0x10)
	struct FString                                               CheatArguments;                                    // 0x20(0x10)
};


// Size 0x20
struct BountyQuestTargetKilledTelemetryEvent
{
public:
	struct FString                                               BountyTargetName;                                  // 0x0(0x10)
	struct Guid                                                  BootyId;                                           // 0x10(0x10)
};


// Size 0x20
struct AIShipEncounterCompleteNetEvent
{
public:
	int                                                          BattleIdx;                                         // 0x18(0x4)
	char                                                         CannonballIconType;                                // 0x1c(0x1)
	char                                                         SkellyFormIconType;                                // 0x1d(0x1)
};


// Size 0x1
struct EventUseAlternateIdle
{
public:
	bool                                                         UseAlternateIdle;                                  // 0x0(0x1)
};


// Size 0x20
struct RecentlyInteractedWithPlayers
{
public:
	TArray<class AthenaPlayerCharacter*>                         RecentlyInteractedPlayers;                         // 0x0(0x10)
	class AthenaPlayerCharacter*                                 ReportingCharacter;                                // 0x10(0x8)
	struct DateTime                                              InteractionTime;                                   // 0x18(0x8)
};


// Size 0x40
struct SingleNPCCompanyRedirectionData
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct FText                                                 VisitNPCTooltip;                                   // 0x8(0x38)
};


// Size 0x10
struct CarouselPirateClothingCategoryBias
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	float                                                        LikelihoodOfHaving;                                // 0x8(0x4)
	bool                                                         ProgressivlyDecreaseChance;                        // 0xc(0x1)
};


// Size 0x40
struct AthenaAnimationPlayingFacialAnimations
{
public:
	class BlendSpace1D*                                          Capstan;                                           // 0x0(0x8)
	class AnimSequence*                                          SailAction;                                        // 0x8(0x8)
	class AnimSequence*                                          SailIdle;                                          // 0x10(0x8)
	class AnimSequence*                                          CannonFire;                                        // 0x18(0x8)
	class AnimSequence*                                          CannonAim;                                         // 0x20(0x8)
	class AnimSequence*                                          HarpoonFire;                                       // 0x28(0x8)
	class AnimSequence*                                          FacialIdle0;                                       // 0x30(0x8)
	class AnimSequence*                                          FacialIdle1;                                       // 0x38(0x8)
};


// Size 0x118
struct VoyageProposalDescViewModel
{
public:
	struct FString                                               ProposalDesc;                                      // 0x100(0x10)
	char                                                         State;                                             // 0x110(0x1)
	int                                                          VoyageIndex;                                       // 0x114(0x4)
};


// Size 0x18
struct MovedByActorActionStateParams
{
public:
	float                                                        InitialSpeed;                                      // 0x0(0x4)
	float                                                        MaxSpeed;                                          // 0x4(0x4)
	float                                                        AccelerationDuration;                              // 0x8(0x4)
	bool                                                         HideFirstPersonMesh;                               // 0xc(0x1)
	float                                                        ServerTargetSnapOnEndMaxDistance;                  // 0x10(0x4)
	float                                                        StartLocationErrorTolerance;                       // 0x14(0x4)
};


// Size 0x20
struct AnimInfo
{
public:
	struct FString                                               AnimationsStructName;                              // 0x0(0x10)
	struct FString                                               CharacterName;                                     // 0x10(0x10)
};


// Size 0x18
struct EventPlayerDockToObjectStart
{
public:
	interface                                                    ObjectBeingUsed;                                   // 0x0(0x10)
	bool                                                         CanLookAtBeDisabledWhenDockedToObject;             // 0x10(0x1)
};


// Size 0x10
struct OnEndSprintingOnWalkwayEvent
{
public:
	class WwiseEvent*                                            WalkwaySprintLoopEnd;                              // 0x0(0x8)
	class WwiseEvent*                                            WalkwayLoopStart;                                  // 0x8(0x8)
};


// Size 0x10
struct EventExitedShipLadder
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Actor;                                             // 0x8(0x8)
};


// Size 0x10
struct KrakenAnimatedTentacleHitReactAnimation
{
public:
	int                                                          CollisionBoneIndex;                                // 0x0(0x4)
	class AnimSequence*                                          HitReactAnimation;                                 // 0x8(0x8)
};


// Size 0x18
struct AthenaAnimationKeyedInstrumentAnimData
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          Action;                                            // 0x8(0x8)
	class AnimSequence*                                          Outof;                                             // 0x10(0x8)
};


// Size 0x20
struct FortTogglerUnit
{
public:
	class AIProximityPlayerTracker*                              AIProxPlayerTracker;                               // 0x8(0x8)
	TArray<class AISpawner*>                                     AISpawners;                                        // 0x10(0x10)
};


// Size 0x14
struct PlayerBuriedItemServiceNumMapsTakenFromStoreThisDayPerCrew
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	int                                                          NumMaps;                                           // 0x10(0x4)
};


// Size 0x30
struct EntitlementBundle
{
public:
	bool                                                         IsCommodity;                                       // 0x0(0x1)
	class UClass*                                                BundleKey;                                         // 0x8(0x8)
	struct Guid                                                  BundleOfferId;                                     // 0x10(0x10)
	TArray<class Class*>                                         BundleContents;                                    // 0x20(0x10)
};


// Size 0x20
struct EventCannonFired
{
public:
	class Cannon*                                                FiredCannon;                                       // 0x0(0x8)
};


// Size 0x10
struct PlayerItemEquipTelemetryEvent
{
public:
	struct FString                                               ItemId;                                            // 0x0(0x10)
};


// Size 0x80
struct CinematicQuestEvent
{
public:
	struct FText                                                 Message;                                           // 0x0(0x38)
	struct FText                                                 Header;                                            // 0x38(0x38)
	struct FName                                                 Tag;                                               // 0x70(0x8)
	bool                                                         DisableMusic;                                      // 0x78(0x1)
};


// Size 0x40
struct SeaFortDistantLightsSignal
{
public:
	struct Transform                                             SeaFortIslandTransform;                            // 0x0(0x30)
	struct FName                                                 SeaFortIslandName;                                 // 0x30(0x8)
	bool                                                         ShouldShowLights;                                  // 0x38(0x1)
};


// Size 0x28
struct PlayerItemAddToContainerTelemetryEvent
{
public:
	struct FString                                               ContainerId;                                       // 0x0(0x10)
	struct FString                                               ItemType;                                          // 0x10(0x10)
	int                                                          NumberOfItemsInContainer;                          // 0x20(0x4)
};


// Size 0x38
struct UIPremiumStorePanelHighlightEvent
{
public:
	struct FString                                               CurrentPage;                                       // 0x0(0x10)
	struct FString                                               CurrentPanel;                                      // 0x10(0x10)
	struct FString                                               SessionId;                                         // 0x20(0x10)
	float                                                        TimeOnPanel;                                       // 0x30(0x4)
};


// Size 0x20
struct EnableObjectLeakDetectionTelemetryRpc
{
public:
	float                                                        Interval;                                          // 0x18(0x4)
};


// Size 0x20
struct StarPointConnector
{
public:
	class StaticMeshComponent*                                   StaticMesh;                                        // 0x0(0x8)
	class StarPointComponent*                                    StarPointOne;                                      // 0x8(0x8)
	class StarPointComponent*                                    StarPointTwo;                                      // 0x10(0x8)
	int                                                          StarPointOneId;                                    // 0x18(0x4)
	int                                                          StarPointTwoId;                                    // 0x1c(0x4)
};


// Size 0x20
struct GameEventExclusionZone
{
public:
	struct Vector2D                                              Location;                                          // 0x0(0x8)
	float                                                        Radius;                                            // 0x8(0x4)
	TArray<class Class*>                                         GameEventExceptions;                               // 0x10(0x10)
};


// Size 0x10
struct ServerMigrateToTelemetryEvent
{
public:
	struct Guid                                                  MigrationId;                                       // 0x0(0x10)
};


// Size 0x18
struct EmblemId
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	struct Guid                                                  Id;                                                // 0x8(0x10)
};


// Size 0x58
struct ImpactDamageEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	class UClass*                                                DamagerType;                                       // 0x10(0x8)
	class Actor*                                                 DirectInstigator;                                  // 0x18(0x8)
	class Actor*                                                 RootInstigator;                                    // 0x20(0x8)
	struct Vector                                                Location;                                          // 0x28(0xc)
	struct Vector                                                SurfaceNormal;                                     // 0x34(0xc)
	struct Vector                                                Velocity;                                          // 0x40(0xc)
	float                                                        DamageAmount;                                      // 0x4c(0x4)
	int                                                          DamageSpread;                                      // 0x50(0x4)
	char                                                         Reason;                                            // 0x54(0x1)
	bool                                                         DealFriendlyFireDamage;                            // 0x55(0x1)
};


// Size 0xc
struct MermaidAnimMapping
{
public:
	char                                                         State;                                             // 0x0(0x1)
	struct FName                                                 MontageLabel;                                      // 0x4(0x8)
};


// Size 0x10
struct BeckonTag
{
public:
	class UClass*                                                NPCGroupID;                                        // 0x0(0x8)
	class UClass*                                                GestureID;                                         // 0x8(0x8)
};


// Size 0xc
struct GetActorsInRadiusGameServerRequestModel
{
public:
	struct Vector2D                                              Position;                                          // 0x0(0x8)
	float                                                        Radius;                                            // 0x8(0x4)
};


// Size 0xc
struct PiratePreviewMoveCameraEvent
{
public:
	float                                                        Rotation;                                          // 0x0(0x4)
	float                                                        Pitch;                                             // 0x4(0x4)
	float                                                        Zoom;                                              // 0x8(0x4)
};


// Size 0x18
struct StoreOnlinePurchaseResult
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct FString                                               ProductId;                                         // 0x8(0x10)
};


// Size 0x1
struct CrewManagementOtherCrewData
{
public:
	char                                                         Muted;                                             // 0x0(0x1)
};


// Size 0x10
struct CrewBasedRespawnTimes
{
public:
	float                                                        CrewOfOneSpawnTimer;                               // 0x0(0x4)
	float                                                        CrewOfTwoSpawnTimer;                               // 0x4(0x4)
	float                                                        CrewOfThreeSpawnTimer;                             // 0x8(0x4)
	float                                                        CrewOfFourSpawnTimer;                              // 0xc(0x4)
};


// Size 0x1
struct ThrowingKnifeProxyPickupTelemetryEvent
{
public:
	bool                                                         HasKnivesEquipped;                                 // 0x0(0x1)
};


// Size 0x1
struct EventPlayerControllerHitNotification
{
public:
	bool                                                         PlaySfx;                                           // 0x0(0x1)
};


// Size 0x70
struct GhostPawnEntry
{
public:
	float                                                        TimeRemaining;                                     // 0x0(0x4)
	class Pawn*                                                  Pawn;                                              // 0x8(0x8)
	bool                                                         RespawnCompleted;                                  // 0x10(0x1)
	bool                                                         IsDoorOpen;                                        // 0x11(0x1)
	struct ObjectMessagingHandle                                 FinishedSpawningHandle;                            // 0x18(0x58)
};


// Size 0x18
struct GetAmmoChestsGameServerResponseModel
{
public:
	TArray<struct AmmoChestStateData>                            Data;                                              // 0x8(0x10)
};


// Size 0x28
struct RewardPouchGivenRewardTelemetryEvent
{
public:
	struct Guid                                                  PouchId;                                           // 0x0(0x10)
	struct FName                                                 RewardId;                                          // 0x10(0x8)
	char                                                         BootyType;                                         // 0x18(0x1)
	struct FName                                                 Rarity;                                            // 0x1c(0x8)
	char                                                         TrackedActorType;                                  // 0x24(0x1)
};


// Size 0x8
struct LightingControllerIslandDangerParams
{
public:
	float                                                        IslandDangerSpringAcceleration;                    // 0x0(0x4)
	float                                                        MaxDangerValue;                                    // 0x4(0x4)
};


// Size 0x68
struct RewardGrantedEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct FString                                               RewardId;                                          // 0x10(0x10)
	char                                                         CurrencyId;                                        // 0x20(0x1)
	uint32                                                       CurrencyAmount;                                    // 0x24(0x4)
	struct FString                                               CompanyId;                                         // 0x28(0x10)
	uint32                                                       Xp;                                                // 0x38(0x4)
	uint32                                                       NumLevels;                                         // 0x3c(0x4)
	TArray<String>                                               Entitlements;                                      // 0x40(0x10)
	struct FString                                               DeferralReason;                                    // 0x50(0x10)
	char                                                         Propogation;                                       // 0x60(0x1)
};


// Size 0x20
struct TitleDescIconEntry
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	struct StringAssetReference                                  IconPath;                                          // 0x10(0x10)
};


// Size 0x60
struct CanvasWorldMapIslandData
{
public:
	struct FText                                                 Name;                                              // 0x0(0x38)
	class Texture*                                               IslandTex;                                         // 0x38(0x8)
	struct Box2D                                                 Bounds;                                            // 0x40(0x14)
	float                                                        Rotation;                                          // 0x54(0x4)
	float                                                        LabelOffset;                                       // 0x58(0x4)
};


// Size 0x8
struct TaleVoteAdded
{
public:
	class Actor*                                                 Voter;                                             // 0x0(0x8)
};


// Size 0x18
struct PetRoamingAnimationStateLoadableWeightedDefinition
{
public:
	struct StringAssetReference                                  LoadableDefinition;                                // 0x0(0x10)
	float                                                        Weight;                                            // 0x10(0x4)
};


// Size 0x18
struct WeightedItemDescSpawnDataAssetWithWeight
{
public:
	class WeightedItemDescSpawnDataAsset*                        WeightedItemSpawnDataAsset;                        // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	bool                                                         LimitMaxSpawnedItems;                              // 0xc(0x1)
	int                                                          MaxTimesCanBeSelected;                             // 0x10(0x4)
};


// Size 0x10
struct DynamicMaterialsList
{
public:
	TArray<uintptr_t>                                            Materials;                                         // 0x0(0x10)
};


// Size 0x1c
struct UseMapTableActionStateParams
{
public:
	float                                                        CameraDockTime;                                    // 0x18(0x4)
};


// Size 0x10
struct RequestArmoryItemEntitlementsEvent
{
public:
	struct FString                                               ItemCategory;                                      // 0x0(0x10)
};


// Size 0x8
struct VoyageChapterBegun
{
public:
	int                                                          ChapterIndex;                                      // 0x0(0x4)
	int                                                          ChapterCount;                                      // 0x4(0x4)
};


// Size 0x1
struct SessionTypeSelectionResponseEvent
{
public:
	char                                                         SessionType;                                       // 0x0(0x1)
};


// Size 0x80
struct UseBalanceableWalkwayActionStateConstructionInfo
{
public:
	class BalanceableWalkwayComponent*                           DockableObject;                                    // 0x58(0x8)
	struct Vector                                                DockLocation;                                      // 0x60(0xc)
	struct Quat                                                  DockRotation;                                      // 0x70(0x10)
};


// Size 0xc
struct SetTriggerDetectingItemGameServerRequestModel
{
public:
	int                                                          ItemId;                                            // 0x8(0x4)
};


// Size 0x10
struct ShipIdChangedEvent
{
public:
	struct FString                                               ShipId;                                            // 0x0(0x10)
};


// Size 0x18
struct EventDockToObjectFullyDocked
{
public:
	interface                                                    ObjectBeingUsed;                                   // 0x0(0x10)
	bool                                                         CanLookAtBeDisabledWhenDockedToObject;             // 0x10(0x1)
};


// Size 0x10
struct FishingRodForceFeedbackLevel
{
public:
	float                                                        MinimumTensionFactor;                              // 0x0(0x4)
	class ForceFeedbackEffect*                                   ForceFeedback;                                     // 0x8(0x8)
};


// Size 0x20
struct EntitlementInfosRequestUIEvent
{
public:
	TArray<String>                                               EntitlementIds;                                    // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x40
struct AthenaAnimationDeathAnimData
{
public:
	class AnimSequence*                                          SwimmingSurfaceDeath;                              // 0x0(0x8)
	class AnimSequence*                                          LocomotionDeath;                                   // 0x8(0x8)
	class AnimSequence*                                          DrowningDeath;                                     // 0x10(0x8)
	class AnimSequence*                                          WakeUp;                                            // 0x18(0x8)
	class AnimSequence*                                          WakeUpSwimming;                                    // 0x20(0x8)
	class BlendSpace1D*                                          DrowningDeath3rdPerson;                            // 0x28(0x8)
	class AnimSequence*                                          BeckonInto;                                        // 0x30(0x8)
	class AnimSequence*                                          BeckonLoop;                                        // 0x38(0x8)
};


// Size 0x20
struct ShipSizeRequirementData
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	int                                                          OpenCrewMemberCount;                               // 0x8(0x4)
	struct FString                                               OpenCrewCountRetrivalString;                       // 0x10(0x10)
};


// Size 0x10
struct FaunaAnimationEatingStructure
{
public:
	class AnimSequence*                                          EatingNormal;                                      // 0x0(0x8)
	class AnimSequence*                                          EatingStarving;                                    // 0x8(0x8)
};


// Size 0x8
struct EventReceiveCollectorsChestItemSlotsState
{
public:
	class CollectorsChestItemSlotInteractable*                   Source;                                            // 0x0(0x8)
};


// Size 0x10
struct EventActiveDialogueInteractorsOnServerChanged
{
public:
	TArray<class Actor*>                                         ActiveDialogueInteractors;                         // 0x0(0x10)
};


// Size 0x8
struct OnItemReplenisherItemSpawned
{
public:
	class Actor*                                                 InteractedPlayer;                                  // 0x0(0x8)
};


// Size 0x10
struct SendScrambledShipNamesToUIEvent
{
public:
	TArray<struct Text>                                          ScrambledShipNames;                                // 0x0(0x10)
};


// Size 0x50
struct AreAllCrewMembersInProximityCondition
{
public:
	struct ConditionContextPayloadSelectorInstance               CrewPayloadSelector;                               // 0x8(0x20)
	struct ConditionContextPayloadSelectorInstance               PositionPayloadSelector;                           // 0x28(0x20)
	float                                                        Radius;                                            // 0x48(0x4)
};


// Size 0x8
struct TooltipInvalidatedEvent
{
public:
	int                                                          SlotId;                                            // 0x0(0x4)
	int                                                          Priority;                                          // 0x4(0x4)
};


// Size 0xc
struct MastSailLoweredProportionChangedEvent
{
public:
	float                                                        Proportion;                                        // 0x0(0x4)
	float                                                        DeltaTime;                                         // 0x4(0x4)
	float                                                        MovementRate;                                      // 0x8(0x4)
};


// Size 0x40
struct JoinGuildSessionRequestEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               SessionTemplateName;                               // 0x10(0x10)
	struct FString                                               OwnerUserId;                                       // 0x20(0x10)
	struct FString                                               Signature;                                         // 0x30(0x10)
};


// Size 0x1
struct EventLocalPlayerEnteredHangingState
{
public:
	bool                                                         HangingPointSupportsThirdPersonCamera;             // 0x0(0x1)
};


// Size 0x10
struct EventMastSailsBillowed
{
public:
	char                                                         MastType;                                          // 0x0(0x1)
	class Actor*                                                 ParentShip;                                        // 0x8(0x8)
};


// Size 0x18
struct BeckonCrewEntry
{
public:
	class UClass*                                                GestureID;                                         // 0x0(0x8)
};


// Size 0x10
struct EventShipLightStateChange
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Light;                                             // 0x8(0x8)
};


// Size 0xc
struct SeaRock
{
public:
	struct Vector2D                                              Location;                                          // 0x0(0x8)
	float                                                        Radius;                                            // 0x8(0x4)
};


// Size 0x1
struct CutsceneStateChangedEvent
{
public:
	char                                                         NewState;                                          // 0x0(0x1)
};


// Size 0x1
struct ToogleAFKKickFunctionalityRequest
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
};


// Size 0x8
struct ShipAnnouncementProximityEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x18
struct CategoryDefaultsUnit
{
public:
	TArray<String>                                               PartialStrings;                                    // 0x0(0x10)
	class UClass*                                                Category;                                          // 0x10(0x8)
};


// Size 0x40
struct LaunchableProjectileState
{
public:
	struct Transform                                             SpawnTransform;                                    // 0x0(0x30)
	char                                                         SpawnedState;                                      // 0x30(0x1)
};


// Size 0x28
struct PlayerEncounterStartTelemetryEvent
{
public:
	struct Guid                                                  EncounterId;                                       // 0x0(0x10)
	struct FString                                               EncounteredObjectId;                               // 0x10(0x10)
	char                                                         EncounterType;                                     // 0x20(0x1)
	char                                                         ShipRegion;                                        // 0x21(0x1)
	float                                                        EncounterDistance;                                 // 0x24(0x4)
};


// Size 0x20
struct CanvasWorldMapBackgroundItems
{
public:
	class Texture*                                               Texture;                                           // 0x0(0x8)
	struct Vector2D                                              WorldSize;                                         // 0x8(0x8)
	TArray<struct Vector2D>                                      Locations;                                         // 0x10(0x10)
};


// Size 0x38
struct ShipAnnouncementPartDesc
{
public:
	struct StringAssetReference                                  Icon;                                              // 0x0(0x10)
	struct StringAssetReference                                  Alignment;                                         // 0x10(0x10)
	char                                                         AlignmentId;                                       // 0x20(0x1)
	struct FString                                               AudioCueKey;                                       // 0x28(0x10)
};


// Size 0x18
struct ReplyToGuildInviteEvent
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	bool                                                         Accept;                                            // 0x10(0x1)
};


// Size 0x8
struct EventReceiveOpenableItemComponentState
{
public:
	class OpenableItemComponent*                                 Source;                                            // 0x0(0x8)
};


// Size 0x10
struct SessionCreationCrewMemberModel
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x8
struct EventReceiveQuestBookPagesInContainerComponentState
{
public:
	class QuestBookPagesInContainerComponent*                    Source;                                            // 0x0(0x8)
};


// Size 0x18
struct SkySphereMaterialParams
{
public:
	class MaterialInstanceDynamic*                               DynamicMaterialInstance;                           // 0x0(0x8)
	int                                                          MaterialIndex;                                     // 0x8(0x4)
	struct FName                                                 StarSpinScalarParamName;                           // 0xc(0x8)
};


// Size 0x10
struct StarFieldMaskStartSkySpinEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x28
struct UIMessageOfTheDayCloseToEmporiumTelemetryEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               MessageId;                                         // 0x10(0x10)
	float                                                        TimeSpentInMessage;                                // 0x20(0x4)
};


// Size 0x20
struct FireRequestHitActorWorldTransform
{
public:
	class Actor*                                                 Actor;                                             // 0x0(0x8)
	struct Vector                                                Location;                                          // 0x8(0xc)
	struct Rotator                                               Rotation;                                          // 0x14(0xc)
};


// Size 0x38
struct OpenReputationMenuTelemetryEvent
{
public:
	struct FString                                               ShopLocation;                                      // 0x0(0x10)
	struct FString                                               VisitStartDate;                                    // 0x10(0x10)
	uint32                                                       VisitDuration;                                     // 0x20(0x4)
	char                                                         NavigationAction;                                  // 0x24(0x1)
	struct FString                                               CompanyId;                                         // 0x28(0x10)
};


// Size 0x38
struct ReplacementDialogue
{
public:
	struct FText                                                 ReplacementText;                                   // 0x0(0x38)
};


// Size 0x10
struct MerchantItemGroupDesc
{
public:
	TArray<class MerchantQuestItemData*>                         Items;                                             // 0x0(0x10)
};


// Size 0x10
struct EventCompanyReputationCampaignInformationRequest
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
};


// Size 0x1c
struct WeaponProjectileMaxIterationsTelemetryEvent
{
public:
	int                                                          MaxSimulationIterations;                           // 0x0(0x4)
	float                                                        MinTickTimeSecs;                                   // 0x4(0x4)
	float                                                        MaxSimulationTimeStep;                             // 0x8(0x4)
	struct Guid                                                  TelemetryAttackId;                                 // 0xc(0x10)
};


// Size 0x10
struct AIStrategySpeedOverride
{
public:
	class UClass*                                                Strategy;                                          // 0x0(0x8)
	float                                                        Speed;                                             // 0x8(0x4)
};


// Size 0x78
struct PirateIdentity
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct FString                                               PirateId;                                          // 0x18(0x10)
	map                                                          Claims;                                            // 0x28(0x50)
};


// Size 0x38
struct HasEntitlementsConditionBase
{
public:
	TArray<Class>                                                Entitlements;                                      // 0x28(0x10)
};


// Size 0x1
struct AllowCrewToCustomiseCaptainedShipSettingChanged
{
public:
	bool                                                         AllowCrewToCustomiseCaptainedShip;                 // 0x0(0x1)
};


// Size 0x28
struct GuildSessionEndedNetworkEvent
{
public:
	struct Guid                                                  GuildId;                                           // 0x18(0x10)
};


// Size 0x1c
struct CustomWreckEntry
{
public:
	struct Guid                                                  OwningCrewID;                                      // 0x0(0x10)
	class CustomShipwreck*                                       WreckObject;                                       // 0x10(0x8)
	bool                                                         WreckExpired;                                      // 0x18(0x1)
};


// Size 0x10
struct CrewCancelledTaleEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x58
struct ServerChatExploitTelemetryFragment
{
public:
	struct FString                                               EventName;                                         // 0x0(0x10)
	struct FString                                               Context;                                           // 0x10(0x10)
	struct FString                                               ErrorString;                                       // 0x20(0x10)
	uint32                                                       ErrorCode;                                         // 0x30(0x4)
	struct FString                                               Sender;                                            // 0x38(0x10)
	struct FString                                               Message;                                           // 0x48(0x10)
};


// Size 0x28
struct ServerDeniedClientAtPreLoginTelemetryEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               UserId;                                            // 0x10(0x10)
	char                                                         ReasonCode;                                        // 0x20(0x1)
};


// Size 0x1
struct EventAthenaLocalPlayerControllerTypeChange
{
public:
	char                                                         ControllerType;                                    // 0x0(0x1)
};


// Size 0x20
struct RequestAuthoritativeFire
{
public:
	class Object*                                                RequestingObject;                                  // 0x0(0x8)
};


// Size 0x10
struct CanvasLerpData
{
public:
	float                                                        LerpTime;                                          // 0x0(0x4)
	float                                                        EaseExponent;                                      // 0x4(0x4)
};


// Size 0x4
struct VoyageQuestsBegun
{
public:
	int                                                          QuestCount;                                        // 0x0(0x4)
};


// Size 0x1
struct RequestClosePossessionsChestEvent
{
public:
	char                                                         PossessionsChestType;                              // 0x0(0x1)
};


// Size 0x14
struct BuriedFactor
{
public:
	int                                                          CurrentBuriedFactor;                               // 0x0(0x4)
	int                                                          FactorToConsiderFullyBuried;                       // 0x4(0x4)
	int                                                          BuryStep;                                          // 0x8(0x4)
	int                                                          ExhumeStep;                                        // 0xc(0x4)
	char                                                         LastDigDirection;                                  // 0x10(0x1)
};


// Size 0x28
struct ItemDiggingMergedConfig
{
public:
	class ItemDiggingBaseConfig*                                 BaseConfig;                                        // 0x0(0x8)
	class ItemDiggingAnimationConfig*                            AnimationConfig;                                   // 0x8(0x8)
	class ItemDiggingEffectsConfig*                              EffectsConfig;                                     // 0x10(0x8)
	class ItemDiggingAudioConfig*                                AudioConfig;                                       // 0x18(0x8)
	class ItemDiggingBuryConfig*                                 BuryingConfig;                                     // 0x20(0x8)
};


// Size 0x28
struct SignedGuildId
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	char                                                         GuildAffiliation;                                  // 0x10(0x1)
	struct FString                                               Signature;                                         // 0x18(0x10)
};


// Size 0x20
struct DebugSuperSailorSetSpeedAmpRPCEvent
{
public:
	float                                                        FwdSpdAmp;                                         // 0x18(0x4)
	float                                                        YawSpdAmp;                                         // 0x1c(0x4)
};


// Size 0x8
struct EventReceiveTankardRefillerComponentState
{
public:
	class TankardRefillerComponent*                              Source;                                            // 0x0(0x8)
};


// Size 0x38
struct UpdateCameraPositionRpc
{
public:
	class AthenaPlayerController*                                AthenaPlayerController;                            // 0x18(0x8)
	struct Vector                                                Location;                                          // 0x20(0xc)
	struct Rotator                                               Rotation;                                          // 0x2c(0xc)
};


// Size 0x70
struct MeshAnimatorInstance
{
public:
	TArray<class MeshComponent*>                                 Meshes;                                            // 0x60(0x10)
};


// Size 0x60
struct DeferredRewardRequestMessage
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct FName                                                 CompanyAffiliation;                                // 0x10(0x8)
	struct FName                                                 RewardId;                                          // 0x18(0x8)
	struct FString                                               UserId;                                            // 0x20(0x10)
	struct FString                                               PirateId;                                          // 0x30(0x10)
	bool                                                         RewardAccount;                                     // 0x40(0x1)
	bool                                                         NotifyPlayer;                                      // 0x41(0x1)
	bool                                                         DontRewardCurrency;                                // 0x42(0x1)
	bool                                                         DontRewardXp;                                      // 0x43(0x1)
	bool                                                         DontRewardSeasonXp;                                // 0x44(0x1)
	struct FString                                               DeferralReason;                                    // 0x48(0x10)
	double                                                       RewardMultiplier;                                  // 0x58(0x8)
};


// Size 0x10
struct RewardGroup
{
public:
	TArray<class Class*>                                         Rewards;                                           // 0x0(0x10)
};


// Size 0x8
struct WalkConditionsParams
{
public:
	float                                                        WalkSpeedMultiplier;                               // 0x0(0x4)
	float                                                        WalkStopThreshold;                                 // 0x4(0x4)
};


// Size 0x8
struct HeldStateSpecificBlendWeight
{
public:
	char                                                         HeldState;                                         // 0x0(0x1)
	float                                                        BlendWeight;                                       // 0x4(0x4)
};


// Size 0x18
struct InteractableMechanismIslandData
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
};


// Size 0x70
struct AthenaAnimationObjectFacial
{
public:
	TArray<class AnimMontage*>                                   PrimaryContinuous;                                 // 0x0(0x10)
	TArray<class AnimMontage*>                                   SecondaryContinuous;                               // 0x10(0x10)
	TArray<class AnimMontage*>                                   PrimaryOneShot;                                    // 0x20(0x10)
	TArray<class AnimMontage*>                                   SecondaryOneShot;                                  // 0x30(0x10)
	TArray<class AnimMontage*>                                   MeleeBlocking;                                     // 0x40(0x10)
	TArray<class AnimMontage*>                                   MeleeAttack;                                       // 0x50(0x10)
	TArray<class AnimMontage*>                                   MeleeBlockReact;                                   // 0x60(0x10)
};


// Size 0x68
struct AthenaPlayerCharacterModelSwap
{
public:
	class SkeletalMesh*                                          FirstPersonMesh;                                   // 0x0(0x8)
	class UClass*                                                FirstPersonAnimSetDataId;                          // 0x8(0x8)
	struct PirateGeneratorAdditionalBakeInfo                     FirstPersonAdditionalBakeInfo;                     // 0x10(0x20)
	class SkeletalMesh*                                          ThirdPersonMesh;                                   // 0x30(0x8)
	class UClass*                                                ThirdPersonAnimSetDataId;                          // 0x38(0x8)
	struct PirateGeneratorAdditionalBakeInfo                     ThirdPersonAdditionalBakeInfo;                     // 0x40(0x20)
};


// Size 0x30
struct CurrencyGrantedEvent
{
public:
	uint32                                                       Amount;                                            // 0x0(0x4)
	char                                                         Currency;                                          // 0x4(0x1)
	struct Guid                                                  TransactionId;                                     // 0x8(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0x18(0x8)
	uint32                                                       EmissaryLevel;                                     // 0x20(0x4)
	double                                                       EmissaryMultiplier;                                // 0x28(0x8)
};


// Size 0x10
struct RequestRandomiseClothingCategoryPiratePreviewEvent
{
public:
	TArray<class Class*>                                         ClothingCategories;                                // 0x0(0x10)
};


// Size 0x8
struct EventCurrentShipChanged
{
public:
	class Actor*                                                 CurrentShip;                                       // 0x0(0x8)
};


// Size 0x10
struct CarouselPirateClothingItem
{
public:
	class UClass*                                                Item;                                              // 0x0(0x8)
	char                                                         EthnicityFilter;                                   // 0x8(0x1)
};


// Size 0x10
struct EventPickupableObjectPickUpStarted
{
public:
	class PickupableObject*                                      PickupableObject;                                  // 0x0(0x8)
	class Actor*                                                 InteractingPlayer;                                 // 0x8(0x8)
};


// Size 0x10
struct ContestParticipantJoinedServerEvent
{
public:
	struct Guid                                                  NewCrewJoining;                                    // 0x0(0x10)
};


// Size 0x80
struct ServerPerformanceHeartbeatTelemetryEvent
{
public:
	float                                                        FrameMSAverage;                                    // 0x0(0x4)
	float                                                        FrameMSMin;                                        // 0x4(0x4)
	float                                                        FrameMSMax;                                        // 0x8(0x4)
	float                                                        FPSAverage;                                        // 0xc(0x4)
	float                                                        FPSMin;                                            // 0x10(0x4)
	float                                                        FPSMax;                                            // 0x14(0x4)
	uint64                                                       MemAvailPhyAvg;                                    // 0x18(0x8)
	uint64                                                       MemAvailPhyMin;                                    // 0x20(0x8)
	uint64                                                       MemAvailPhyMax;                                    // 0x28(0x8)
	uint64                                                       MemAvailVirAvg;                                    // 0x30(0x8)
	uint64                                                       MemAvailVirMin;                                    // 0x38(0x8)
	uint64                                                       MemAvailVirMax;                                    // 0x40(0x8)
	uint64                                                       MemUsedPhyAvg;                                     // 0x48(0x8)
	uint64                                                       MemUsedPhyMin;                                     // 0x50(0x8)
	uint64                                                       MemUsedPhyMax;                                     // 0x58(0x8)
	uint64                                                       MemUsedVirAvg;                                     // 0x60(0x8)
	uint64                                                       MemUsedVirMin;                                     // 0x68(0x8)
	uint64                                                       MemUsedVirMax;                                     // 0x70(0x8)
	int                                                          NumOfPlayers;                                      // 0x78(0x4)
	int                                                          NumOfAI;                                           // 0x7c(0x4)
};


// Size 0x8
struct EventStartDialogueOnServer
{
public:
	class Actor*                                                 Interactor;                                        // 0x0(0x8)
};


// Size 0x78
struct ClientTelemetryFragment
{
public:
	struct Guid                                                  TitleSession;                                      // 0x0(0x10)
	struct FString                                               UserId;                                            // 0x10(0x10)
	char                                                         PlatformId;                                        // 0x20(0x1)
	char                                                         DeviceSpecScore;                                   // 0x21(0x1)
	char                                                         RHIType;                                           // 0x22(0x1)
	bool                                                         AppInForeground;                                   // 0x23(0x1)
	struct FString                                               DeviceID;                                          // 0x28(0x10)
	struct Guid                                                  PlayerGameId;                                      // 0x38(0x10)
	struct FString                                               BuildId;                                           // 0x48(0x10)
	struct FString                                               ClientPlayMode;                                    // 0x58(0x10)
	struct FString                                               PlayModeState;                                     // 0x68(0x10)
};


// Size 0x20
struct WieldableItemFirstTimeEquipRpc
{
public:
	class WwiseEvent*                                            FirstTimeEquipSfx;                                 // 0x18(0x8)
};


// Size 0x8
struct EventPlayerCapstanUsageStart
{
public:
	class Actor*                                                 ObjectBeingUsed;                                   // 0x0(0x8)
};


// Size 0x20
struct CrewSizeToCloseDelayDurationInfo
{
public:
	TArray<class Class*>                                         VaultKeyDescs;                                     // 0x0(0x10)
	TArray<float>                                                CrewSizeToCloseDelayDuration;                      // 0x10(0x10)
};


// Size 0x20
struct GamertagsRequestEvent
{
public:
	TArray<String>                                               XUIDs;                                             // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x20
struct ShipPlatformRestrictedEntitlementSettings
{
public:
	struct StringClassReference                                  EntitlementClassReference;                         // 0x0(0x10)
	TArray<struct Name>                                          RestrictedDeviceTypes;                             // 0x10(0x10)
};


// Size 0x20
struct ShovelTelemetryEvent
{
public:
	struct FString                                               DigType;                                           // 0x0(0x10)
	struct FString                                               Terrain;                                           // 0x10(0x10)
};


// Size 0x18
struct IslandItemSpawnLocationData
{
public:
	struct Vector                                                SpawnLocation;                                     // 0x0(0xc)
	struct Vector                                                SpawnLocationNormal;                               // 0xc(0xc)
};


// Size 0x10
struct AudioStingRelevantShips
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	bool                                                         IsAIShip;                                          // 0x8(0x1)
	bool                                                         IsEmissary;                                        // 0x9(0x1)
	bool                                                         IsCaptainedShip;                                   // 0xa(0x1)
};


// Size 0x28
struct AggressiveGhostShipDespawnTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	char                                                         ShipType;                                          // 0x10(0x1)
	struct Guid                                                  EncounterId;                                       // 0x14(0x10)
	char                                                         Reason;                                            // 0x24(0x1)
};


// Size 0x20
struct ManagedVulnerabilityLayer
{
public:
	struct FName                                                 LayerName;                                         // 0x0(0x8)
	class DamageableVulnerabilityLayer*                          VulnerabilityLayerToApply;                         // 0x10(0x8)
};


// Size 0x8
struct BuoyancyComponentExclusionParams
{
public:
	float                                                        MaxDistanceCheck;                                  // 0x0(0x4)
	char                                                         HitsChannel;                                       // 0x4(0x1)
};


// Size 0x10
struct EventConversationSpeakerChanged
{
public:
	class Actor*                                                 PreviousSpeaker;                                   // 0x0(0x8)
	class Actor*                                                 NewSpeaker;                                        // 0x8(0x8)
};


// Size 0x28
struct MountedOnMountpointEvent
{
public:
	class Actor*                                                 MountedByActor;                                    // 0x20(0x8)
};


// Size 0x8
struct EventFaunaAnimationSpecial
{
public:
	bool                                                         LoopAnimation;                                     // 0x0(0x1)
};


// Size 0x60
struct IslandDiscoveredRpc
{
public:
	struct FName                                                 IslandName;                                        // 0x18(0x8)
	struct FText                                                 AlternativeDisplayText;                            // 0x20(0x38)
	char                                                         SuppressionFlags;                                  // 0x58(0x1)
};


// Size 0x8
struct EventPlayerControllerPossess
{
public:
	class Pawn*                                                  Pawn;                                              // 0x0(0x8)
};


// Size 0x10
struct ShipSpecificData
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	class LevelSequence*                                         VignetteSequence;                                  // 0x8(0x8)
};


// Size 0x48
struct AthenaAnimationSkeletonShipCaptainAnimations
{
public:
	class AnimSequence*                                          EnterDockedPose;                                   // 0x0(0x8)
	TArray<class AnimSequence*>                                  DockedIdles;                                       // 0x8(0x10)
	class AnimSequence*                                          ExitDockedPose;                                    // 0x18(0x8)
	class AnimSequence*                                          Taunt;                                             // 0x20(0x8)
	class AnimSequence*                                          RamInto;                                           // 0x28(0x8)
	class AnimSequence*                                          RamCycle;                                          // 0x30(0x8)
	class AnimSequence*                                          RamImpact;                                         // 0x38(0x8)
	class AnimSequence*                                          RamOutOf;                                          // 0x40(0x8)
};


// Size 0x18
struct SpawnableItemCategory
{
public:
	struct FName                                                 Category;                                          // 0x0(0x8)
	TArray<class Class*>                                         SpawnableItems;                                    // 0x8(0x10)
};


// Size 0xa8
struct TutorialStepPlayIntroAnimatic
{
public:
	class FirstPersonAnimationInstance*                          AnimInstance;                                      // 0x80(0x8)
};


// Size 0x1
struct EnableDefaultFogBanksGameServerRequestModel
{
public:
	bool                                                         Enable;                                            // 0x0(0x1)
};


// Size 0x40
struct AddMapToContainerRPC
{
public:
	struct NetSubObjectPtr                                       Container;                                         // 0x18(0x14)
	struct Guid                                                  MapToAddToContainer;                               // 0x2c(0x10)
};


// Size 0x20
struct ClothingChestChangeClothingEvent
{
public:
	TArray<class Class*>                                         Adds;                                              // 0x0(0x10)
	TArray<class Class*>                                         Removes;                                           // 0x10(0x10)
};


// Size 0x18
struct ReapersTributeShipHandoverComplete
{
public:
	class Actor*                                                 ReapersTributeShipActor;                           // 0x0(0x8)
	struct Guid                                                  ControllingCrewId;                                 // 0x8(0x10)
};


// Size 0x40
struct AssetDelayLoadEntry
{
public:
	struct FString                                               Comment;                                           // 0x0(0x10)
	char                                                         LoadAtPhase;                                       // 0x10(0x1)
	char                                                         Persistence;                                       // 0x11(0x1)
	bool                                                         LoadForClient;                                     // 0x12(0x1)
	bool                                                         LoadForServer;                                     // 0x13(0x1)
	struct FName                                                 Feature;                                           // 0x14(0x8)
	TArray<struct StringAssetReference>                          AssetsToLoad;                                      // 0x20(0x10)
	TArray<Class>                                                BlueprintsToLoad;                                  // 0x30(0x10)
};


// Size 0x20
struct EntitlementsRequestEvent
{
public:
	TArray<String>                                               EntitlementIds;                                    // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x4
struct EventFaunaAnimationImpact
{
public:
	float                                                        ImpactStrength;                                    // 0x0(0x4)
};


// Size 0x1
struct PlayerBlockingUnblockPlayersResponse
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
};


// Size 0x98
struct PiratePreviewReadyEvent
{
public:
	class SkeletalMesh*                                          Mesh;                                              // 0x0(0x8)
	class SkeletalMeshComponent*                                 MeshComponent;                                     // 0x8(0x8)
	struct PirateDescription                                     Desc;                                              // 0x10(0x80)
	bool                                                         Valid;                                             // 0x90(0x1)
};


// Size 0x68
struct FlamethrowerCollisionsParams
{
public:
	float                                                        CollisionCapsuleRadius;                            // 0x0(0x4)
	float                                                        FlamePointTravelDistance;                          // 0x4(0x4)
	float                                                        InheritOwnerForwardVelocityScalar;                 // 0x8(0x4)
	float                                                        FlamePointTravelTime;                              // 0xc(0x4)
	float                                                        FlamePointFireRate;                                // 0x10(0x4)
	float                                                        MaxDistanceSquaredBetweenPointsBeforeDiscontinuity; // 0x14(0x4)
	int                                                          MaxNumOfHitsProccessedPerFlameCollision;           // 0x18(0x4)
	struct Vector                                                FlameOriginOffset;                                 // 0x1c(0xc)
	struct Rotator                                               FlameOrientationOffset;                            // 0x28(0xc)
	class CurveFloat*                                            FlamePointsTravelCurve;                            // 0x38(0x8)
	char                                                         CollisionChannel;                                  // 0x40(0x1)
	struct CollisionResponseContainer                            CollisionResponse;                                 // 0x41(0x20)
};


// Size 0x30
struct MessageInABottleGivenVoyageTelemetryEvent
{
public:
	struct Guid                                                  BottleId;                                          // 0x0(0x10)
	struct Guid                                                  VoyageID;                                          // 0x10(0x10)
	struct FString                                               EmergentVoyageSource;                              // 0x20(0x10)
};


// Size 0x10
struct SetPresenceConnectionStringRequestModel
{
public:
	struct FString                                               ConnectionString;                                  // 0x0(0x10)
};


// Size 0x10
struct QuestTableCommendationProgress
{
public:
	TArray<String>                                               LegendOfTheSunkenKingdomCommendationIcons;         // 0x0(0x10)
};


// Size 0x14
struct ContestTavernStagingTelemetryFragment
{
public:
	int                                                          CrewCountNeeded;                                   // 0x0(0x4)
	int                                                          OpenCrewMemberCountNeeded;                         // 0x4(0x4)
	bool                                                         TickingCountdown;                                  // 0x8(0x1)
	bool                                                         HasServerRecruitmentTimeEnded;                     // 0x9(0x1)
	int                                                          TavernPlayersAwaitingSpawn;                        // 0xc(0x4)
	bool                                                         AreCrewsReadyToStart;                              // 0x10(0x1)
};


// Size 0x1
struct EventIsDrunk
{
public:
	bool                                                         bIsDrunk;                                          // 0x0(0x1)
};


// Size 0x50
struct EventPlayerConfigRequestAllConfigsResponse
{
public:
	map                                                          AllConfigs;                                        // 0x0(0x50)
};


// Size 0x188
struct WieldableBookMaterialHandler
{
public:
	int                                                          PageWidth;                                         // 0x0(0x4)
	int                                                          PageHeight;                                        // 0x4(0x4)
	class MaybeCompressedCanvasRenderTarget2D*                   LeftSpreadLeftPageRenderTarget;                    // 0x8(0x8)
	class MaybeCompressedCanvasRenderTarget2D*                   LeftSpreadRightPageRenderTarget;                   // 0x10(0x8)
	class MaybeCompressedCanvasRenderTarget2D*                   RightSpreadLeftPageRenderTarget;                   // 0x18(0x8)
	class MaybeCompressedCanvasRenderTarget2D*                   RightSpreadRightPageRenderTarget;                  // 0x20(0x8)
	class WieldableBookPageLayout*                               LeftSpreadLeftPageContents;                        // 0x28(0x8)
	class WieldableBookPageLayout*                               LeftSpreadRightPageContents;                       // 0x40(0x8)
	class WieldableBookPageLayout*                               RightSpreadLeftPageContents;                       // 0x58(0x8)
	class WieldableBookPageLayout*                               RightSpreadRightPageContents;                      // 0x70(0x8)
};


// Size 0x8
struct VoyageLocationFixedParams
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
};


// Size 0x38
struct RepairObjectActionStateSerialisableData
{
public:
	bool                                                         SuccessfulRepair;                                  // 0x30(0x1)
};


// Size 0x1
struct MultiShopStoreSelectedEvent
{
public:
	char                                                         StoreType;                                         // 0x0(0x1)
};


// Size 0x10
struct FeedStruct
{
public:
	class Actor*                                                 ActorToFeed;                                       // 0x0(0x8)
	bool                                                         WantRules;                                         // 0x8(0x1)
};


// Size 0x8
struct AdventureFortAllignmentState
{
public:
	class SeaFortDataAsset*                                      FortData;                                          // 0x0(0x8)
};


// Size 0x20
struct KeyBinding
{
public:
	struct FString                                               BindingName;                                       // 0x0(0x10)
	struct FName                                                 KeyName;                                           // 0x10(0x8)
	char                                                         ControllerType;                                    // 0x18(0x1)
};


// Size 0x68
struct QuestDistributionPerChapterParams
{
public:
	int                                                          MinNumChapters;                                    // 0x0(0x4)
	struct WeightedProbabilityRange                              NumQuests;                                         // 0x8(0x20)
	struct WeightedProbabilityRange                              NumQuestsInFirstChapter;                           // 0x28(0x20)
	struct WeightedProbabilityRange                              NumQuestsInOtherChapters;                          // 0x48(0x20)
};


// Size 0x20
struct CanvasWorldMapGeneric
{
public:
	class Actor*                                                 MarkerActor;                                       // 0x0(0x8)
	class Texture*                                               Icon;                                              // 0x8(0x8)
	struct Vector                                                Location;                                          // 0x10(0xc)
	bool                                                         HasLocationSet;                                    // 0x1c(0x1)
};


// Size 0xc
struct SingleStickMappingUserSettingsInteger
{
public:
	struct FName                                                 SettingName;                                       // 0x0(0x8)
	int                                                          Value;                                             // 0x8(0x4)
};


// Size 0x14
struct EventItemsRetrieved
{
public:
	struct Guid                                                  CrewRetrieving;                                    // 0x0(0x10)
	int16                                                        IslandHash;                                        // 0x10(0x2)
};


// Size 0x1b0
struct ProjectileHitRegistrationTelemetry
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct Guid                                                  NotTelemetryAttackId;                              // 0x10(0x10)
	int                                                          ProjectileIndex;                                   // 0x20(0x4)
	bool                                                         HitExpandedProjectileTraceVolumeRegion;            // 0x24(0x1)
	bool                                                         ExpandedProjectileTraceVolumeImpactValidated;      // 0x25(0x1)
	struct FString                                               DamagerType;                                       // 0x28(0x10)
	double                                                       ClientHitTimestamp;                                // 0x38(0x8)
	double                                                       ServerHitTimestamp;                                // 0x40(0x8)
	int                                                          ClientTimeOfImpact;                                // 0x48(0x4)
	int                                                          ServerTimeOfImpact;                                // 0x4c(0x4)
	float                                                        ClientTimeAlive;                                   // 0x50(0x4)
	float                                                        ServerTimeAlive;                                   // 0x54(0x4)
	struct Vector                                                ClientInitialProjectilePosition;                   // 0x58(0xc)
	struct Vector                                                ServerInitialProjectilePosition;                   // 0x64(0xc)
	struct Vector                                                ClientFinalProjectilePosition;                     // 0x70(0xc)
	struct Vector                                                ServerFinalProjectilePosition;                     // 0x7c(0xc)
	float                                                        ClientProjectileTravelDistance;                    // 0x88(0x4)
	float                                                        ServerProjectileTravelDistance;                    // 0x8c(0x4)
	struct Vector                                                ClientProjectileDirection;                         // 0x90(0xc)
	struct Vector                                                ServerProjectileDirection;                         // 0x9c(0xc)
	float                                                        ClientProjectileDownForce;                         // 0xa8(0x4)
	float                                                        ServerProjectileDownForce;                         // 0xac(0x4)
	float                                                        ClientProjectileSpeed;                             // 0xb0(0x4)
	float                                                        ServerProjectileSpeed;                             // 0xb4(0x4)
	int                                                          ClientHitActorNetGuid;                             // 0xb8(0x4)
	struct FString                                               ClientHitActorTypeName;                            // 0xc0(0x10)
	struct FString                                               ClientHitComponentName;                            // 0xd0(0x10)
	int                                                          ServerHitActorNetGuid;                             // 0xe0(0x4)
	struct FString                                               ServerHitActorTypeName;                            // 0xe8(0x10)
	struct FString                                               ServerHitComponentName;                            // 0xf8(0x10)
	bool                                                         HitAgreement;                                      // 0x108(0x1)
	float                                                        ClientServerComponentPositionDelta;                // 0x10c(0x4)
	float                                                        ClientServerComponentAngleDelta;                   // 0x110(0x4)
	bool                                                         ServerWasRewound;                                  // 0x114(0x1)
	bool                                                         ServerRewindWasInBounds;                           // 0x115(0x1)
	float                                                        ServerRewindTimestamp;                             // 0x118(0x4)
	float                                                        InstigatorActorSpeed;                              // 0x11c(0x4)
	bool                                                         InstigatorIsOnLand;                                // 0x120(0x1)
	bool                                                         InstigatorIsFalling;                               // 0x121(0x1)
	bool                                                         InstigatorIsSwimmingOnSurface;                     // 0x122(0x1)
	bool                                                         InstigatorIsSwimmingSubmerged;                     // 0x123(0x1)
	struct FString                                               InstigatorBaseShipName;                            // 0x128(0x10)
	float                                                        InstigatorBaseShipSpeed;                           // 0x138(0x4)
	float                                                        ClientHitActorSpeed;                               // 0x13c(0x4)
	bool                                                         ClientHitActorIsOnLand;                            // 0x140(0x1)
	bool                                                         ClientHitActorIsFalling;                           // 0x141(0x1)
	bool                                                         ClientHitActorIsSwimmingOnSurface;                 // 0x142(0x1)
	bool                                                         ClientHitActorIsSwimmingSubmerged;                 // 0x143(0x1)
	struct FString                                               ClientHitActorBaseShipName;                        // 0x148(0x10)
	float                                                        ClientHitActorBaseShipSpeed;                       // 0x158(0x4)
	float                                                        ClientHitCapsuleCoreOffsetInViewPlane;             // 0x15c(0x4)
	bool                                                         IsUseTimeServiceEverywhereFeatureEnabled;          // 0x160(0x1)
	bool                                                         IsBelieveClientMissesFeatureEnabled;               // 0x161(0x1)
	bool                                                         IsDisableRewindTimeStampModifierFeatureEnabled;    // 0x162(0x1)
	bool                                                         IsPlayerControllerTicksAfterTimeServiceFeatureEnabled; // 0x163(0x1)
	bool                                                         IsFixInaccuracySeedMismatchFeatureEnabled;         // 0x164(0x1)
	bool                                                         IsOverrideCharacterInterpolationDistanceWhenAimingFeatureEnabled; // 0x165(0x1)
	bool                                                         IsCharacterMovementOrientProjectileHitVolumeWhenInterpolatingFeatureEnabled; // 0x166(0x1)
	bool                                                         IsEvaluateAngleWhenDeterminingWhetherToInterpolateFeatureEnabled; // 0x167(0x1)
	bool                                                         IsProjectileFixedTimestepFeatureEnabled;           // 0x168(0x1)
	bool                                                         IsShipNewTimeServiceFeatureEnabled;                // 0x169(0x1)
	bool                                                         IsResetTimeServiceBuffersFeatureEnabled;           // 0x16a(0x1)
	bool                                                         IsAlternativeShipPhysicsCorrectionMethodEnabled;   // 0x16b(0x1)
	bool                                                         IsTickProjectileServiceAfterCharacterMovementOnClientFeatureEnabled; // 0x16c(0x1)
	bool                                                         IsGenerateRandomStreamUsingClientTimestampFeatureEnabled; // 0x16d(0x1)
	bool                                                         IsCharacterSetProjectileCollisionResponseFixFeatureEnabled; // 0x16e(0x1)
	bool                                                         IsProjectileUseRewoundBaseVelocityFeatureEnabled;  // 0x16f(0x1)
	bool                                                         IsExpandProjectileTraceHitVolumeOnServerFeatureEnabled; // 0x170(0x1)
	bool                                                         IsExpandProjectileTraceHitVolumeDelayedResolutionFeatureEnabled; // 0x171(0x1)
	float                                                        ServerImpactLatencyMs;                             // 0x174(0x4)
	float                                                        ClientImpactLatencyMs;                             // 0x178(0x4)
	bool                                                         IsCrewOnInvasion;                                  // 0x17c(0x1)
	float                                                        ClientServerShotAngleDelta;                        // 0x180(0x4)
	struct FString                                               ClientHitPlayerUserId;                             // 0x188(0x10)
	struct FString                                               ServerHitPlayerUserId;                             // 0x198(0x10)
	char                                                         ClientNetworkPerformanceFlags;                     // 0x1a8(0x1)
	bool                                                         IsCrouchingOnClient;                               // 0x1a9(0x1)
	bool                                                         IsRewindCrouching;                                 // 0x1aa(0x1)
};


// Size 0x30
struct SirenStatuesSelector_BasedOnShipSize_Entry
{
public:
	assetclass                                                   ShipSize;                                          // 0x0(0x20)
	TArray<Class>                                                SirenStatueTypes;                                  // 0x20(0x10)
};


// Size 0x30
struct PlayerTalkingSettings
{
public:
	struct LinearColor                                           IconTint;                                          // 0x0(0x10)
	class Texture2D*                                             Icon;                                              // 0x10(0x8)
	float                                                        ScreenEdgePadding;                                 // 0x18(0x4)
	float                                                        Scale;                                             // 0x1c(0x4)
	float                                                        FadeInTimeInSeconds;                               // 0x20(0x4)
};


// Size 0x18
struct PlayerBuriedItemServiceMapAddedToTavernBoardEvent
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x10(0x8)
};


// Size 0x20
struct PlayerActionCannonTelemetryEvent
{
public:
	struct FString                                               ProjectileId;                                      // 0x0(0x10)
	struct Guid                                                  AttackId;                                          // 0x10(0x10)
};


// Size 0x8
struct ClothingChestUnequipClothingEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x28
struct ClientBootFlowLocStateLocRetrievalTelemetryEvent
{
public:
	struct FString                                               Culture;                                           // 0x0(0x10)
	bool                                                         Success;                                           // 0x10(0x1)
	struct FString                                               Reason;                                            // 0x18(0x10)
};


// Size 0x90
struct EmissaryDisplayInformation
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct FText                                                 Description;                                       // 0x38(0x38)
	struct StringAssetReference                                  KeyArt;                                            // 0x70(0x10)
	struct StringAssetReference                                  Icon;                                              // 0x80(0x10)
};


// Size 0x10
struct ChapterDataEntry
{
public:
	int                                                          NumQuests;                                         // 0x0(0x4)
	class VoyageRewardDataAsset*                                 PerChapterRewardAsset;                             // 0x8(0x8)
};


// Size 0x18
struct QuestTableShipOffset
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct Vector                                                Offset;                                            // 0x8(0xc)
};


// Size 0x10
struct XMarksTheSpotMapMark
{
public:
	struct Vector2D                                              Position;                                          // 0x0(0x8)
	float                                                        Rotation;                                          // 0x8(0x4)
	bool                                                         IsUnderground;                                     // 0xc(0x1)
};


// Size 0x1
struct RequestInventoryCountsEvent
{
public:
	char                                                         Type;                                              // 0x0(0x1)
};


// Size 0x18
struct CanvasWorldMapShipIcons
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	class Texture*                                               ShipTexture;                                       // 0x8(0x8)
	class Texture*                                               OffscreenTexture;                                  // 0x10(0x8)
};


// Size 0x8
struct ClientPlayerEmblemUnlockTelemetryEvent
{
public:
	struct FName                                                 EmblemName;                                        // 0x0(0x8)
};


// Size 0x10
struct GuildRemoteErrorMessage
{
public:
	struct FString                                               Error;                                             // 0x0(0x10)
};


// Size 0x40
struct SpawnInstance
{
public:
	class ItemSpawnData*                                         ItemSpawnData;                                     // 0x30(0x8)
	bool                                                         CustomLifetimeManagement;                          // 0x38(0x1)
};


// Size 0x8
struct EventCurseSpawnAIOnShip
{
public:
	class AIFixedWavesSpawner*                                   AISpawner;                                         // 0x0(0x8)
};


// Size 0x20
struct RumbleParameters
{
public:
	class ForceFeedbackEffect*                                   ForceFeedbackEffect;                               // 0x0(0x8)
	class UClass*                                                CameraShakeEffect;                                 // 0x8(0x8)
	bool                                                         Looping;                                           // 0x10(0x1)
	struct FName                                                 Tag;                                               // 0x14(0x8)
};


// Size 0x14
struct NotesManagementAddNoteScheduleResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	struct Guid                                                  ScheduleId;                                        // 0x4(0x10)
};


// Size 0x10
struct CrewManagementMatchmakingVisibilityData
{
public:
	bool                                                         Voted;                                             // 0x0(0x1)
	int                                                          VotesCast;                                         // 0x4(0x4)
	int                                                          VotesRequired;                                     // 0x8(0x4)
	char                                                         State;                                             // 0xc(0x1)
};


// Size 0x60
struct UseItemActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           UsableObject;                                      // 0x40(0x14)
	class UClass*                                                InputID;                                           // 0x58(0x8)
};


// Size 0x40
struct ActorFailedToSpawnTelemetryEvent
{
public:
	int                                                          ChannelIndex;                                      // 0x0(0x4)
	struct SerializeNewActorFailureContext                       FailureContext;                                    // 0x8(0x38)
};


// Size 0x28
struct QuestTableQuestTileDetails
{
public:
	struct FString                                               TileId;                                            // 0x0(0x10)
	struct FString                                               QuestId;                                           // 0x10(0x10)
	struct FName                                                 QuestType;                                         // 0x20(0x8)
};


// Size 0x48
struct CrewServerRequestMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
	struct FString                                               BuildId;                                           // 0x20(0x10)
	bool                                                         JoinInProgress;                                    // 0x30(0x1)
	char                                                         SessionType;                                       // 0x31(0x1)
	TArray<String>                                               ServerLocations;                                   // 0x38(0x10)
};


// Size 0x8
struct EventGhostShipDoorDestroyed
{
public:
	class GhostShipDoor*                                         GhostShipDoor;                                     // 0x0(0x8)
};


// Size 0xb0
struct RewardGrantedNetworkEvent
{
public:
	struct FString                                               RewardId;                                          // 0x18(0x10)
	char                                                         CurrencyId;                                        // 0x28(0x1)
	uint32                                                       CurrencyAmount;                                    // 0x2c(0x4)
	struct FString                                               CompanyId;                                         // 0x30(0x10)
	uint32                                                       Xp;                                                // 0x40(0x4)
	uint32                                                       NumLevels;                                         // 0x44(0x4)
	TArray<String>                                               Entitlements;                                      // 0x48(0x10)
	struct FString                                               DeferralReason;                                    // 0x58(0x10)
	struct FString                                               ShipName;                                          // 0x68(0x10)
	struct FText                                                 ScrambledShipName;                                 // 0x78(0x38)
};


// Size 0x10
struct PurchaseOfferResponse
{
public:
	TArray<String>                                               PurchasedItems;                                    // 0x0(0x10)
};


// Size 0x1c
struct EventScreenSizeInfo
{
public:
	int                                                          ScreenWidth;                                       // 0x0(0x4)
	int                                                          ScreenHeight;                                      // 0x4(0x4)
	int                                                          WindowWidth;                                       // 0x8(0x4)
	int                                                          WindowHeight;                                      // 0xc(0x4)
	int                                                          AutoDetectedMaxVerticalResolution;                 // 0x10(0x4)
	int                                                          AutoDetectedMachineSpec;                           // 0x14(0x4)
	bool                                                         IsFullScreen;                                      // 0x18(0x1)
};


// Size 0x24
struct ArrivalTunnelOfTheDamnedActionStateParams
{
public:
	float                                                        FadeDuration;                                      // 0x0(0x4)
	float                                                        FadeEventTimeout;                                  // 0x4(0x4)
	float                                                        FadeServerTimeout;                                 // 0x8(0x4)
	struct LinearColor                                           FadeColour;                                        // 0xc(0x10)
	float                                                        ClientSetupResponseTimeout;                        // 0x1c(0x4)
	float                                                        OverrideWaitNetRelevancyTimeout;                   // 0x20(0x4)
};


// Size 0x48
struct EventIslandDiscoveredNotification
{
public:
	struct FText                                                 IslandName;                                        // 0x0(0x38)
	char                                                         IslandType;                                        // 0x38(0x1)
	struct FName                                                 SeaName;                                           // 0x3c(0x8)
	char                                                         IslandActiveEventType;                             // 0x44(0x1)
};


// Size 0x40
struct TeleportLocation
{
public:
	bool                                                         Valid;                                             // 0x0(0x1)
	struct FName                                                 Description;                                       // 0x4(0x8)
	TArray<struct Name>                                          TeleportLocationTags;                              // 0x10(0x10)
	class SceneComponent*                                        TeleportBase;                                      // 0x20(0x8)
	struct Vector                                                TeleportLocation;                                  // 0x28(0xc)
	struct Rotator                                               TeleportRotation;                                  // 0x34(0xc)
};


// Size 0x38
struct AthenaAnimationSkeletonFleeInGraph
{
public:
	class AnimSequence*                                          TurnLeft;                                          // 0x0(0x8)
	class AnimSequence*                                          TurnRight;                                         // 0x8(0x8)
	class BlendSpace*                                            LocomotionBase;                                    // 0x10(0x8)
	class BlendSpace*                                            LocomotionVariant;                                 // 0x18(0x8)
	TArray<class BlendSpace*>                                    LocomotionVariantSelection;                        // 0x20(0x10)
	int                                                          PrecentageChanceOfVariantOccuring;                 // 0x30(0x4)
};


// Size 0x1
struct CrewMuteOthersPhrasesEvent
{
public:
	bool                                                         IsMuted;                                           // 0x0(0x1)
};


// Size 0x78
struct ItemReplenisherInteractionParams
{
public:
	class UClass*                                                SpawnItemNotificationInputId;                      // 0x0(0x8)
	struct FText                                                 CanSpawnItemDescriptorText;                        // 0x8(0x38)
	struct FText                                                 CannotSpawnItemDescriptorText;                     // 0x40(0x38)
};


// Size 0x18
struct PetAnimationCycleMontage
{
public:
	class AnimMontage*                                           In;                                                // 0x0(0x8)
	class AnimMontage*                                           Loop;                                              // 0x8(0x8)
	class AnimMontage*                                           Out;                                               // 0x10(0x8)
};


// Size 0x20
struct ProgressPoint
{
public:
	float                                                        Level;                                             // 0x0(0x4)
	struct FString                                               Image;                                             // 0x8(0x10)
	int                                                          Distinction;                                       // 0x18(0x4)
};


// Size 0x10
struct PlayerGameEndTelemetryEvent
{
public:
	uint32                                                       IdleDuration;                                      // 0x0(0x4)
	uint32                                                       ActiveDuration;                                    // 0x4(0x4)
	uint32                                                       VoiceChatDuration;                                 // 0x8(0x4)
	bool                                                         IsMigration;                                       // 0xc(0x1)
	bool                                                         HadSTTEnabled;                                     // 0xd(0x1)
	bool                                                         HadTTSEnabled;                                     // 0xe(0x1)
	bool                                                         HadTranslationEnabled;                             // 0xf(0x1)
};


// Size 0x10
struct GetLinkedPSNIdFromXuidRequestModel
{
public:
	TArray<String>                                               XUIDs;                                             // 0x0(0x10)
};


// Size 0x80
struct TreasureChestSoldInContestNetworkEvent
{
public:
	struct FName                                                 RewardId;                                          // 0x18(0x8)
	struct FText                                                 CrewName;                                          // 0x20(0x38)
	struct StringAssetReference                                  ToastBackgroundImage;                              // 0x58(0x10)
	struct StringAssetReference                                  BackgroundImage;                                   // 0x68(0x10)
	struct FName                                                 AudioEventName;                                    // 0x78(0x8)
};


// Size 0x20
struct ItemSnapshotOwnerDestroyed
{
public:
	struct Guid                                                  SnapshotID;                                        // 0x0(0x10)
	interface                                                    CurrentInstigator;                                 // 0x10(0x10)
};


// Size 0x18
struct AmbientWrecksInsRangeRemovedTelemetryEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	float                                                        Range;                                             // 0xc(0x4)
	int                                                          NumWrecksWithinRange;                              // 0x10(0x4)
	int                                                          NumWrecksEvicted;                                  // 0x14(0x4)
};


// Size 0x40
struct LobbyCrewMember
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
};


// Size 0x10
struct TunnelOfTheDamnedFactionThemedPopUpDesc
{
public:
	class UClass*                                                Faction;                                           // 0x0(0x8)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x8(0x8)
};


// Size 0x78
struct CatalogOfferPrerequisites
{
public:
	TArray<String>                                               Entitlements;                                      // 0x0(0x10)
	map                                                          CompanyLevel;                                      // 0x10(0x50)
	uint32                                                       EntitlementRequirementThreshold;                   // 0x60(0x4)
	struct FString                                               Sig;                                               // 0x68(0x10)
};


// Size 0x8
struct EventReceiveWeepingComponentState
{
public:
	class WeepingComponent*                                      Source;                                            // 0x0(0x8)
};


// Size 0x10
struct StreamSnapshotModel
{
public:
	int                                                          ViewerCount;                                       // 0x0(0x4)
	struct DateTime                                              TimeStamp;                                         // 0x8(0x8)
};


// Size 0x28
struct ResponseMigrationStatusNetworkEvent
{
public:
	struct FString                                               MigrationStatusLog;                                // 0x18(0x10)
};


// Size 0x60
struct MechanismAnimationEventContainer
{
public:
	TArray<class MechanismOneShotEvent*>                         AnimationStartedEvents;                            // 0x0(0x10)
	TArray<class MechanismAnimationEvent*>                       OneShotTimelineEvents;                             // 0x10(0x10)
	TArray<class MechanismAnimationEvent*>                       ContinuousTimelineEvents;                          // 0x20(0x10)
	TArray<class MechanismOneShotEvent*>                         AnimationStoppedEvents;                            // 0x30(0x10)
	TArray<class MechanismAnimationEvent*>                       AllTimelineEvents;                                 // 0x40(0x10)
};


// Size 0x38
struct LevelCancelRequestedTelemetryEvent
{
public:
	float                                                        TimeCancelRequested;                               // 0x30(0x4)
};


// Size 0x14
struct CrewAllianceJoinStatus
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	char                                                         AllianceJoinStatus;                                // 0x10(0x1)
	char                                                         LastAllianceJoinStatus;                            // 0x11(0x1)
};


// Size 0x10
struct StrongholdKeyInfo
{
public:
	class UClass*                                                SkellyFortEventType;                               // 0x0(0x8)
	class UClass*                                                StrongholdKey;                                     // 0x8(0x8)
};


// Size 0x2
struct SurfaceDigType
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	char                                                         DigType;                                           // 0x1(0x1)
};


// Size 0x30
struct AthenaAnimationMapTable
{
public:
	TArray<class AnimSequence*>                                  Into;                                              // 0x0(0x10)
	TArray<class AnimSequence*>                                  IdleCycle;                                         // 0x10(0x10)
	TArray<class AnimSequence*>                                  Outof;                                             // 0x20(0x10)
};


// Size 0x48
struct QuestTableTallTaleRewardData
{
public:
	struct FString                                               RewardImageUrl;                                    // 0x0(0x10)
	struct FText                                                 RewardDescription;                                 // 0x10(0x38)
};


// Size 0x1
struct EventAthenaLocalPlayerControllerTypeOverride
{
public:
	char                                                         ControllerType;                                    // 0x0(0x1)
};


// Size 0x18
struct EventReputationDisplayMessageData
{
public:
	bool                                                         IsActive;                                          // 0x0(0x1)
	TArray<String>                                               Messages;                                          // 0x8(0x10)
};


// Size 0x1c
struct PlayDockableKeyedInstrumentActionStateParams
{
public:
	float                                                        CameraDockTime;                                    // 0x18(0x4)
};


// Size 0x18
struct NetRelevancyTelemetryEvent
{
public:
	struct JsonObjectWrapper                                     NetRelevancyStatJson;                              // 0x0(0x18)
};


// Size 0x8
struct CrewEnteredTunnelOfTheDamnedPortalProximityEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x20
struct TreasureSurfacedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	struct FString                                               Rarity;                                            // 0x10(0x10)
};


// Size 0x10
struct ClearOverrideCrewSpawnTeleportLocation
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x10
struct HealthChangeAudio
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
	class WwiseEvent*                                            Sfx;                                               // 0x8(0x8)
};


// Size 0x10
struct PopupQueueStarted
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
};


// Size 0x20
struct GuildSignUpToken
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	class Actor*                                                 InviterActor;                                      // 0x10(0x8)
	bool                                                         IsValid;                                           // 0x18(0x1)
};


// Size 0x20
struct RejectGrenadeThrowRpc
{
public:
	class Grenade*                                               Grenade;                                           // 0x18(0x8)
};


// Size 0x1
struct PetChestNamePetFeedbackEvent
{
public:
	bool                                                         bSuccess;                                          // 0x0(0x1)
};


// Size 0x8
struct EventPlayerCharacterLeft
{
public:
	class Actor*                                                 AthenaCharacter;                                   // 0x0(0x8)
};


// Size 0x128
struct AthenaAnimationMountedWeapon
{
public:
	bool                                                         IsFiring;                                          // 0x0(0x1)
	float                                                        Pitch;                                             // 0x4(0x4)
	float                                                        Yaw;                                               // 0x8(0x4)
	class Actor*                                                 ControlledObject;                                  // 0x10(0x8)
};


// Size 0x40
struct NPCChat
{
public:
	struct FString                                               SenderName;                                        // 0x0(0x10)
	struct FString                                               Text;                                              // 0x10(0x10)
	char                                                         Type;                                              // 0x20(0x1)
	struct FString                                               Image;                                             // 0x28(0x10)
	int                                                          Timeout;                                           // 0x38(0x4)
};


// Size 0x70
struct NetworkDataTelemetryFragmentInput
{
public:
	uint64                                                       AvgRttMilliseconds;                                // 0x0(0x8)
	uint32                                                       AvgRttVariationMilliseconds;                       // 0x8(0x4)
	uint64                                                       AvgOutBytesPerSecond;                              // 0x10(0x8)
	uint64                                                       AvgInBytesPerSecond;                               // 0x18(0x8)
	uint64                                                       AvgOutVoiceBytesPerSecond;                         // 0x20(0x8)
	uint64                                                       AvgInVoiceBytesPerSecond;                          // 0x28(0x8)
	uint32                                                       TotalOutPacketsLost;                               // 0x30(0x4)
	uint32                                                       TotalInPacketsLost;                                // 0x34(0x4)
	float                                                        AvgOutPacketLossRatio;                             // 0x38(0x4)
	float                                                        AvgInPacketLossRatio;                              // 0x3c(0x4)
	uint32                                                       StatPeriodTotalInPacketsLost;                      // 0x40(0x4)
	uint32                                                       StatPeriodTotalOutPacketsLost;                     // 0x44(0x4)
	uint32                                                       StatPeriodPeakInPacketsLost;                       // 0x48(0x4)
	uint32                                                       StatPeriodPeakOutPacketsLost;                      // 0x4c(0x4)
	TArray<struct PacketLossSpikeEventData>                      InPacketLossSpikeEventHistory;                     // 0x50(0x10)
	TArray<struct PacketLossSpikeEventData>                      OutPacketLossSpikeEventHistory;                    // 0x60(0x10)
};


// Size 0x18
struct EventShipHasBeenSpotted
{
public:
	class Actor*                                                 SpottingPlayer;                                    // 0x0(0x8)
	struct Guid                                                  SpottedShipId;                                     // 0x8(0x10)
};


// Size 0x68
struct CinematicCrewNetworkEvent
{
public:
	TArray<class PlayerState*>                                   CrewMembersPlayerStates;                           // 0x18(0x10)
	struct FText                                                 Header;                                            // 0x28(0x38)
	struct FName                                                 Tag;                                               // 0x60(0x8)
};


// Size 0x18
struct EnableSkeletonSpawnerGameServerRequestModel
{
public:
	bool                                                         Skeletons;                                         // 0x0(0x1)
	bool                                                         CannonSkeletons;                                   // 0x1(0x1)
	bool                                                         SkeletonCaptains;                                  // 0x2(0x1)
	bool                                                         AncientSkeletons;                                  // 0x3(0x1)
	struct FString                                               IslandName;                                        // 0x8(0x10)
};


// Size 0x18
struct VoyageProposalDiscardEvent
{
public:
	struct FString                                               ProposalDesc;                                      // 0x0(0x10)
	bool                                                         IsTin;                                             // 0x10(0x1)
};


// Size 0x20
struct ItemHealthMetaWrapper
{
public:
	float                                                        MaxHealth;                                         // 0x18(0x4)
	float                                                        CurrentHealth;                                     // 0x1c(0x4)
};


// Size 0x2
struct PremiumStoreTimeLimited
{
public:
	bool                                                         Item;                                              // 0x0(0x1)
	bool                                                         Price;                                             // 0x1(0x1)
};


// Size 0x24
struct FortCompletedTelemetryEvent
{
public:
	struct Guid                                                  FortId;                                            // 0x0(0x10)
	struct FName                                                 FortIsland;                                        // 0x10(0x8)
	struct FName                                                 FortType;                                          // 0x18(0x8)
	bool                                                         PresentForCompletion;                              // 0x20(0x1)
};


// Size 0x8
struct PlayerMermaidsSuppressedEvent
{
public:
	class Actor*                                                 SuppressingActor;                                  // 0x0(0x8)
};


// Size 0x10
struct DuplicateEmissaryFlagByFeatureToggle
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x0(0xc)
	bool                                                         ShouldDuplicateEmissaryFlagWhenTeleporting;        // 0xc(0x1)
};


// Size 0x30
struct ProjectileWeaponFireEnhancedClientRewindEstimationTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	double                                                       ClientSentTimeStamp;                               // 0x10(0x8)
	double                                                       ServerTimeStamp;                                   // 0x18(0x8)
	double                                                       CorrectedServerTimeStamp;                          // 0x20(0x8)
	int                                                          NumCorrectedProjectiles;                           // 0x28(0x4)
	int                                                          NumStillMissingProjectiles;                        // 0x2c(0x4)
};


// Size 0x1
struct EventSummonMegalodon
{
public:
	char                                                         SoulType;                                          // 0x0(0x1)
};


// Size 0x30
struct CreativeCrewMember
{
public:
	int                                                          CrewId;                                            // 0x0(0x4)
	struct FString                                               GamerTag;                                          // 0x8(0x10)
	struct FString                                               Xuid;                                              // 0x18(0x10)
	char                                                         Platform;                                          // 0x28(0x1)
};


// Size 0x10
struct SwimmingCreatureLoadedMaterial
{
public:
	class MaterialInstance*                                      MaterialInstance;                                  // 0x0(0x8)
	bool                                                         CastShadows;                                       // 0x8(0x1)
};


// Size 0x8
struct AddWaterToVaultGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	float                                                        WaterAmount;                                       // 0x4(0x4)
};


// Size 0x10
struct ClientPirateDeleteTelemetryEvent
{
public:
	struct FString                                               PirateId;                                          // 0x0(0x10)
};


// Size 0x28
struct AthenaAnimationSkeletonSensingAnimations
{
public:
	class UClass*                                                UseWithObject;                                     // 0x0(0x8)
	class AnimSequence*                                          InitialReaction;                                   // 0x8(0x8)
	class BlendSpace1D*                                          Searching;                                         // 0x10(0x8)
	class AnimSequence*                                          AlertingOthers;                                    // 0x18(0x8)
	class BlendSpace1D*                                          Pursuit;                                           // 0x20(0x8)
};


// Size 0x30
struct EmissaryLeaderboardScoreUpdatedNetworkEvent
{
public:
	struct FName                                                 EmissaryAffiliation;                               // 0x18(0x8)
	int64                                                        From;                                              // 0x20(0x8)
	int64                                                        To;                                                // 0x28(0x8)
};


// Size 0x38
struct LocationMapBannerParams
{
public:
	int                                                          NumChests;                                         // 0x0(0x4)
	struct StringAssetReference                                  BannerTexture;                                     // 0x8(0x10)
	struct Vector2D                                              BannerSize;                                        // 0x18(0x8)
	struct Vector2D                                              BannerLocation;                                    // 0x20(0x8)
	TArray<struct Vector2D>                                      ChestCanvasOffsets;                                // 0x28(0x10)
};


// Size 0x28
struct ProjectileWeaponFireWeaponStateMismatchTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	char                                                         ClientWeaponState;                                 // 0x10(0x1)
	char                                                         ClientPreviousWeaponState;                         // 0x11(0x1)
	char                                                         ClientLastWeaponStateChangeReason;                 // 0x12(0x1)
	char                                                         ServerWeaponState;                                 // 0x13(0x1)
	char                                                         ServerPreviousWeaponState;                         // 0x14(0x1)
	char                                                         ServerLastWeaponStateChangeReason;                 // 0x15(0x1)
	bool                                                         ClientIsAimingButtonHeld;                          // 0x16(0x1)
	bool                                                         ServerIsAimingButtonHeld;                          // 0x17(0x1)
	int                                                          AvgPings;                                          // 0x18(0x4)
};


// Size 0x18
struct FogColourForSea
{
public:
	class UClass*                                                Sea;                                               // 0x0(0x8)
	struct LinearColor                                           Colour;                                            // 0x8(0x10)
};


// Size 0x10
struct TextboxTextFromVirtualKeyboard
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0x10
struct AudioEmitterParameters
{
public:
	class WwiseObjectPoolWrapper*                                LocalEmitterPool;                                  // 0x0(0x8)
	class WwiseObjectPoolWrapper*                                RemoteEmitterPool;                                 // 0x8(0x8)
};


// Size 0x10
struct EventShipSailedDistance
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	float                                                        DistanceSailedMetres;                              // 0x8(0x4)
};


// Size 0x20
struct MoreInfoDetails
{
public:
	struct FString                                               DescriptionFirst;                                  // 0x0(0x10)
	struct FString                                               DescriptionSecond;                                 // 0x10(0x10)
};


// Size 0x10
struct CheckCanPlayerInviteToGuildResponseModel
{
public:
	TArray<String>                                               ReasonsWhyPirateCannotInvite;                      // 0x0(0x10)
};


// Size 0x8
struct EventNamedProgressLocationDestroyed
{
public:
	class ProgressSpawnLocation*                                 SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x20
struct ChainLightningParameters
{
public:
	float                                                        ChainLightningOverlapRadius;                       // 0x0(0x4)
	float                                                        InitialSelectionRadiusSquared;                     // 0x4(0x4)
	int                                                          InitialNumberOfNodesSelected;                      // 0x8(0x4)
	float                                                        MaxDistanceBetweenChainsSquared;                   // 0xc(0x4)
	int                                                          MaxNumberOfLinks;                                  // 0x10(0x4)
	bool                                                         OverrideMaxFramesBeforeReplication;                // 0x14(0x1)
	int                                                          MaxFramesBeforeReplicationOverride;                // 0x18(0x4)
	float                                                        ChainVisualActorLifetime;                          // 0x1c(0x4)
};


// Size 0x10
struct StreamingLocation
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	struct Vector                                                Location;                                          // 0x4(0xc)
};


// Size 0x30
struct QuestStartBountyTelemetryEvent
{
public:
	struct FString                                               IslandName;                                        // 0x0(0x10)
	struct FString                                               LandmarkName;                                      // 0x10(0x10)
	int                                                          NumWaves;                                          // 0x20(0x4)
	int                                                          NumCrew;                                           // 0x24(0x4)
	int                                                          NumCaptains;                                       // 0x28(0x4)
	int                                                          NumLords;                                          // 0x2c(0x4)
};


// Size 0x48
struct MermaidServiceMermaidSpawnParams
{
public:
	float                                                        MinDistFromSpawnOrigin;                            // 0x0(0x4)
	float                                                        MinDistFromSpawnOriginForDestroyedShip;            // 0x4(0x4)
	float                                                        MaxDistFromSpawnOriginBeforeGivingUp;              // 0x8(0x4)
	float                                                        DistIncrementPerFailedSpawnCircle;                 // 0xc(0x4)
	int                                                          NumSamplesInSpawnCircle;                           // 0x10(0x4)
	float                                                        SpawnCastStartZ;                                   // 0x14(0x4)
	float                                                        MinSpawnDepth;                                     // 0x18(0x4)
	float                                                        SpawnHalfConeAngleRestrictIfSpawningForPlayer;     // 0x1c(0x4)
	char                                                         HitTestTraceChannel;                               // 0x20(0x1)
	float                                                        AssumedMermaidRadius;                              // 0x24(0x4)
	float                                                        MinDistanceOfFinalSpawnPosToAnyActiveMermaid;      // 0x28(0x4)
	float                                                        MinDistanceOfFinalSpawnPosToAnyActiveMermaidWhenNearEnemyShip; // 0x2c(0x4)
	float                                                        MinDistFromEdgeOfWorld;                            // 0x30(0x4)
	float                                                        MinAngularStepSize;                                // 0x34(0x4)
	float                                                        MaxAngularStepSize;                                // 0x38(0x4)
	float                                                        MinDistanceIncrementPerFail;                       // 0x3c(0x4)
	float                                                        MaxDistanceIncrementPerFail;                       // 0x40(0x4)
	float                                                        AdditionalDistanceFromOriginMultiplierPerMeter;    // 0x44(0x4)
};


// Size 0x10
struct EventAIUseAlternateLocomotionSet
{
public:
	bool                                                         UseAlternateLocomotionSet;                         // 0x0(0x1)
	class UClass*                                                WieldedItemAnimationStoreId;                       // 0x8(0x8)
};


// Size 0x10
struct GuildOverviewModel
{
public:
	int                                                          NumberOfMembers;                                   // 0x0(0x4)
	int                                                          NumberOfShips;                                     // 0x4(0x4)
	struct DateTime                                              LastSailedUtc;                                     // 0x8(0x8)
};


// Size 0xc
struct ServerLifetimeConfigurationSettings
{
public:
	float                                                        ServerTimeToLiveSeconds;                           // 0x0(0x4)
	float                                                        HeartbeatFrequencySeconds;                         // 0x4(0x4)
	float                                                        MaxTimeToAcceptShutdownRequestSeconds;             // 0x8(0x4)
};


// Size 0x10
struct AthenaAnimationIdleVariantChange
{
public:
	float                                                        CurrentTime;                                       // 0x0(0x4)
	float                                                        TriggerTime;                                       // 0x4(0x4)
	int                                                          VariantID;                                         // 0x8(0x4)
	bool                                                         VariantCompleted;                                  // 0xc(0x1)
};


// Size 0xc
struct ClientConfigResponseModel
{
public:
	int                                                          MaxGuildNameLength;                                // 0x0(0x4)
	int                                                          MaxNumberOfPiratesThatCanBeInAGuild;               // 0x4(0x4)
	int                                                          MaxNumberOfGuildsThatAPirateCanBeAMemberOf;        // 0x8(0x4)
};


// Size 0x10
struct PlayersSpawningInTavern
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
};


// Size 0x18
struct PlayerEmoteTelemetryEvent
{
public:
	struct FString                                               EmoteName;                                         // 0x0(0x10)
	uint32                                                       EmoteDuration;                                     // 0x10(0x4)
};


// Size 0x58
struct IInventoryItemDescription
{
public:
	struct FString                                               ThumbnailImageUrl;                                 // 0x0(0x10)
	struct FString                                               PreviewImageUrl;                                   // 0x10(0x10)
	struct FString                                               DisplayName;                                       // 0x20(0x10)
	struct FString                                               Description;                                       // 0x30(0x10)
	struct FString                                               ItemDesc;                                          // 0x40(0x10)
	class UClass*                                                DescKey;                                           // 0x50(0x8)
};


// Size 0x28
struct IslandTeleportLocation
{
public:
	struct FString                                               Description;                                       // 0x0(0x10)
	struct Vector                                                TeleportLocation;                                  // 0x10(0xc)
	float                                                        TeleportYaw;                                       // 0x1c(0x4)
	class UClass*                                                SeaId;                                             // 0x20(0x8)
};


// Size 0xc0
struct RPCTelemetryFragment
{
public:
	struct RPCStats                                              RPCStats;                                          // 0x0(0xc0)
};


// Size 0xc
struct FlameOfFateEffectParams
{
public:
	bool                                                         ShouldAffectShadowFormAI;                          // 0x0(0x1)
	float                                                        FlameOfFateEffectRadiusIdle;                       // 0x4(0x4)
	float                                                        FlameOfFateEffectRadiusActive;                     // 0x8(0x4)
};


// Size 0x40
struct VoyageComplete
{
public:
	bool                                                         DoNotNotifyParticipantsOnVoyageComplete;           // 0x0(0x1)
	struct FText                                                 Title;                                             // 0x8(0x38)
};


// Size 0x30
struct FlamethrowerStatusOverride
{
public:
	assetclass                                                   ActorType;                                         // 0x0(0x20)
	TArray<struct Status>                                        StatusesToApplyOnOverlap;                          // 0x20(0x10)
};


// Size 0x1
struct ShopCatalogDesc
{
public:
	char                                                         CurrencyType;                                      // 0x0(0x1)
};


// Size 0x38
struct LoadRequestAssetInfo
{
public:
	float                                                        LoadDuration;                                      // 0x0(0x4)
	struct FString                                               AnimationsStructName;                              // 0x8(0x10)
	struct FString                                               LoadingForCharacterName;                           // 0x18(0x10)
	struct FString                                               ItemName;                                          // 0x28(0x10)
};


// Size 0x10
struct ShroudBreakerActivateEffectsEvent
{
public:
	struct Guid                                                  ShroudBreakerId;                                   // 0x0(0x10)
};


// Size 0x10
struct ShipSunkTelemetryEvent
{
public:
	TArray<struct Guid>                                          SinkContributors;                                  // 0x0(0x10)
};


// Size 0x40
struct EventLogParams
{
public:
	struct FText                                                 NameParam;                                         // 0x0(0x38)
	int                                                          NumberParam;                                       // 0x38(0x4)
};


// Size 0x10
struct PlayerModerationReportReason
{
public:
	struct FString                                               Type;                                              // 0x0(0x10)
};


// Size 0x20
struct OneShotAnimationElement
{
public:
	struct FName                                                 SequenceName;                                      // 0x0(0x8)
	TArray<class AnimSequence*>                                  OneShotSequence;                                   // 0x8(0x10)
	float                                                        EffectTime;                                        // 0x18(0x4)
	float                                                        BlendTime;                                         // 0x1c(0x4)
};


// Size 0x10
struct EventPlayerEnteredHangingState
{
public:
	class UClass*                                                HangingAnimationId;                                // 0x0(0x8)
	class Object*                                                HangingPointObject;                                // 0x8(0x8)
};


// Size 0x50
struct InventoryMemory
{
public:
	map                                                          LastEquippedIndexOfCategoryMap;                    // 0x0(0x50)
};


// Size 0x20
struct GameSessionIdTelemetryFragment
{
public:
	struct FString                                               SessionHostId;                                     // 0x0(0x10)
	struct Guid                                                  SessionId;                                         // 0x10(0x10)
};


// Size 0x40
struct IsWieldingItemCondition
{
public:
	TArray<Class>                                                TargetItems;                                       // 0x28(0x10)
	bool                                                         InvalidIfStashed;                                  // 0x38(0x1)
};


// Size 0x20
struct OwnedCrewCostumes
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<Class>                                                Costumes;                                          // 0x10(0x10)
};


// Size 0x18
struct RequiredShipCustomizationData
{
public:
	int                                                          RequiredNumberToMatch;                             // 0x0(0x4)
	TArray<class Class*>                                         RequiredShipCustomizations;                        // 0x8(0x10)
};


// Size 0x8
struct EventShipSpawnLocationDestroyed
{
public:
	class ShipSpawnLocation*                                     SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x10
struct TrinketChestItemInfoUpdatedEvent
{
public:
	TArray<struct ChestEntitlementTrinketItem>                   Items;                                             // 0x0(0x10)
};


// Size 0x10
struct MapTableStateForTunnel
{
public:
	class Actor*                                                 Table;                                             // 0x0(0x8)
	bool                                                         Enabled;                                           // 0x8(0x1)
};


// Size 0x4
struct EventCurseCapstan
{
public:
	float                                                        DurationToToggleCapstanPosition;                   // 0x0(0x4)
};


// Size 0x30
struct VoyageChestDiscovered
{
public:
	struct NetActorPtr                                           PlayerStateOfDiscoverer;                           // 0x0(0x14)
	bool                                                         IsDiscovererMe;                                    // 0x14(0x1)
	struct FName                                                 ChestRarity;                                       // 0x18(0x8)
	bool                                                         PlayAudio;                                         // 0x20(0x1)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x28(0x8)
};


// Size 0x20
struct AirGivingVolumeData
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	float                                                        Radius;                                            // 0x18(0x4)
	bool                                                         UseLineOfSight;                                    // 0x1c(0x1)
	bool                                                         CanBeUsedOutsideIslandBounds;                      // 0x1d(0x1)
};


// Size 0x20
struct UILiveCampaignDataErrorEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
	struct FString                                               ErrorStack;                                        // 0x10(0x10)
};


// Size 0x1c
struct PlayerStatsDispatcherSettings
{
public:
	float                                                        DispatchFrequencySeconds;                          // 0x0(0x4)
	uint32                                                       NumOfCachedValuesToTriggerFlush;                   // 0x4(0x4)
	float                                                        PollIntervalSeconds;                               // 0x8(0x4)
	float                                                        BatchWindowMilliseconds;                           // 0xc(0x4)
	uint32                                                       MaxBatchMessageNumberOfStats;                      // 0x10(0x4)
	uint32                                                       BatchesPerSecond;                                  // 0x14(0x4)
	uint32                                                       BurstCapacity;                                     // 0x18(0x4)
};


// Size 0x4
struct EventAthenaLocalPlayerControllerDisconnected
{
public:
	int                                                          ControllerId;                                      // 0x0(0x4)
};


// Size 0x40
struct MastDesc
{
public:
	class StaticMesh*                                            MastUnbrokenMesh;                                  // 0x0(0x8)
	class StaticMesh*                                            MastMainYardMesh;                                  // 0x8(0x8)
	class StaticMesh*                                            MastTopYardMesh;                                   // 0x10(0x8)
	class StaticMesh*                                            MastTopgallantYardMesh;                            // 0x18(0x8)
	class StaticMesh*                                            MastPennantMesh;                                   // 0x20(0x8)
	class MaterialInterface*                                     MastPennantMaterial;                               // 0x28(0x8)
	class StaticMesh*                                            MastSecondaryPennantMesh;                          // 0x30(0x8)
	class StaticMesh*                                            MastCrowsNestMesh;                                 // 0x38(0x8)
};


// Size 0x18
struct EventShipRegionChanged
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Actor;                                             // 0x8(0x8)
	char                                                         ShipRegion;                                        // 0x10(0x1)
	char                                                         PreviousShipRegion;                                // 0x11(0x1)
};


// Size 0x10
struct DebugSuperSailorActionStateParams
{
public:
	float                                                        BaseForwardSpeed;                                  // 0x0(0x4)
	float                                                        YawSpeed;                                          // 0x4(0x4)
	float                                                        RightTriggerHeldSpdAmp;                            // 0x8(0x4)
	float                                                        RightTriggerHeldYawAmp;                            // 0xc(0x4)
};


// Size 0x1c
struct SiteGeneratorThresholdData
{
public:
	float                                                        MinSpawnDistanceFromEndOfWorldZone;                // 0x0(0x4)
	float                                                        ClearanceRadius;                                   // 0x4(0x4)
	float                                                        MinDistanceFromClosestShipwreck;                   // 0x8(0x4)
	float                                                        MinDistanceFromClosestCrewShip;                    // 0xc(0x4)
	float                                                        MinDistanceFromClosestIsland;                      // 0x10(0x4)
	float                                                        MinDistanceFromClosestPlayer;                      // 0x14(0x4)
	float                                                        MinDistanceFromClosestRock;                        // 0x18(0x4)
};


// Size 0x10
struct EventShipWaterAddedOnOffEvent
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	float                                                        WaterAdded;                                        // 0x8(0x4)
	float                                                        PrevWaterAdded;                                    // 0xc(0x4)
};


// Size 0x40
struct OpenableItemMeshAnimationReactionComponentAnimationNameAndSfxCueSet
{
public:
	struct FName                                                 Open;                                              // 0x0(0x8)
	struct FName                                                 OpeningFirstTime;                                  // 0x8(0x8)
	class WwiseEvent*                                            OpeningFirstTimeSfx;                               // 0x10(0x8)
	struct FName                                                 Opening;                                           // 0x18(0x8)
	class WwiseEvent*                                            OpeningSfx;                                        // 0x20(0x8)
	struct FName                                                 Closing;                                           // 0x28(0x8)
	class WwiseEvent*                                            ClosingSfx;                                        // 0x30(0x8)
	struct FName                                                 Closed;                                            // 0x38(0x8)
};


// Size 0x30
struct ProjectileWeaponClientDebugLogRPC
{
public:
	class ProjectileWeapon*                                      Weapon;                                            // 0x18(0x8)
	TArray<String>                                               ClientDebugStrings;                                // 0x20(0x10)
};


// Size 0x48
struct RecentPlayer
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct FString                                               Xuid;                                              // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
	struct FString                                               PlatformUsername;                                  // 0x28(0x10)
	struct FString                                               PlatformUserId;                                    // 0x38(0x10)
};


// Size 0x28
struct AllianceStatEvent
{
public:
	class Object*                                                ObjectOfInterest;                                  // 0x18(0x8)
};


// Size 0xc
struct EventUserGameSettingsSetFloat
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	float                                                        Value;                                             // 0x8(0x4)
};


// Size 0x8
struct TrapItemProxySpawnEvent
{
public:
	class ItemProxy*                                             Proxy;                                             // 0x0(0x8)
};


// Size 0x20
struct PetAnimationDataJump
{
public:
	class AnimSequenceBase*                                      JumpStart;                                         // 0x0(0x8)
	class AnimSequenceBase*                                      JumpCycle;                                         // 0x8(0x8)
	class AnimSequenceBase*                                      PreImpact;                                         // 0x10(0x8)
	class AnimSequenceBase*                                      LandLight;                                         // 0x18(0x8)
};


// Size 0x10
struct WeightedAIBoobyTrapSpawner
{
public:
	class AIBoobyTrapSpawner*                                    Spawner;                                           // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	int                                                          CrewSize;                                          // 0xc(0x4)
};


// Size 0x28
struct AggressiveGhostShipVisualsMaterialOverride
{
public:
	int                                                          MaterialIndexToReplace;                            // 0x0(0x4)
	struct StringAssetReference                                  OriginalMaterial;                                  // 0x8(0x10)
	struct StringAssetReference                                  ReplacementMaterial;                               // 0x18(0x10)
};


// Size 0x24
struct MapTransformRenderData
{
public:
	struct Vector2D                                              Pivot;                                             // 0x0(0x8)
	struct Vector2D                                              Position;                                          // 0x8(0x8)
	char                                                         BlendMode;                                         // 0x10(0x1)
	struct Vector2D                                              Size;                                              // 0x14(0x8)
	float                                                        RotationToNorth;                                   // 0x1c(0x4)
	float                                                        RotationOffset;                                    // 0x20(0x4)
};


// Size 0x8
struct EventSpawnLocationCreated
{
public:
	class SpawnLocation*                                         SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x14
struct FogBankLocalPlayerPenetrationEvent
{
public:
	char                                                         FogBankType;                                       // 0x0(0x1)
	float                                                        PenetrationT3D;                                    // 0x4(0x4)
	float                                                        PenetrationTHorizontal;                            // 0x8(0x4)
	float                                                        PenetrationTVertical;                              // 0xc(0x4)
	float                                                        MaximumAudioFogIntensityRTPC;                      // 0x10(0x4)
};


// Size 0x1
struct SetScreenSpaceTooltips
{
public:
	bool                                                         IsEnabled;                                         // 0x0(0x1)
};


// Size 0x38
struct CinematicEmissaryNetworkEvent
{
public:
	int                                                          Level;                                             // 0x18(0x4)
	struct FName                                                 Tag;                                               // 0x1c(0x8)
	struct Guid                                                  GuildId;                                           // 0x24(0x10)
};


// Size 0x1a0
struct LightingControllerPostProcessParams
{
public:
	struct RainPostProcessSettings                               RainPostProcessParams;                             // 0x0(0xc0)
	struct RainPostProcessSettings                               UnderwaterPostProcessParams;                       // 0xc0(0xc0)
	class MaterialInterface*                                     PostProcessUnderWaterPrelightingMaterial;          // 0x180(0x8)
	class MaterialInterface*                                     PostProcessUnderwaterCausticsMaterial;             // 0x188(0x8)
	class MaterialInterface*                                     PostProcessDistortionMaterial;                     // 0x190(0x8)
	class MaterialInterface*                                     PostProcessColourOverlayMaterial;                  // 0x198(0x8)
};


// Size 0x10
struct EventPickupableObjectPickUpEnded
{
public:
	class PickupableObject*                                      PickupableObject;                                  // 0x0(0x8)
	class Actor*                                                 InteractingPlayer;                                 // 0x8(0x8)
};


// Size 0x8
struct EventSpawnLocationDestroyed
{
public:
	class SpawnLocation*                                         SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x40
struct PremiumShopBundleOfferItem
{
public:
	bool                                                         IsPurchasable;                                     // 0x0(0x1)
	struct FText                                                 LockedReason;                                      // 0x8(0x38)
};


// Size 0x10
struct VaultKeyMapping
{
public:
	class UClass*                                                VaultKey;                                          // 0x0(0x8)
	class UClass*                                                VaultMedallion;                                    // 0x8(0x8)
};


// Size 0x28
struct QuestTableCompanyVoyageSelectedEvent
{
public:
	struct FString                                               InstanceId;                                        // 0x0(0x10)
	struct FString                                               ProposalDesc;                                      // 0x10(0x10)
	bool                                                         DiveToDestination;                                 // 0x20(0x1)
	char                                                         VoyageType;                                        // 0x21(0x1)
};


// Size 0x20
struct SkeletonCampTempleHallEncounter
{
public:
	bool                                                         IsAshenBladeCrewPresent;                           // 0x0(0x1)
	class Actor*                                                 PlayerActorWithLargestNonAshenCrew;                // 0x8(0x8)
	struct Guid                                                  CrewIdOfLargestNonAshenCrew;                       // 0x10(0x10)
};


// Size 0x8
struct EventPickupableObjectDestroyed
{
public:
	class PickupableObject*                                      PickupableObject;                                  // 0x0(0x8)
};


// Size 0x1c
struct IslandNameAndBounds
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	struct Box2D                                                 IslandBounds;                                      // 0x8(0x14)
};


// Size 0x14
struct DrunkennessSetupData
{
public:
	char                                                         DrunkennessType;                                   // 0x0(0x1)
	float                                                        MaxDrunkenness;                                    // 0x4(0x4)
	float                                                        GettingDrunkDrunkennessChangePerSec;               // 0x8(0x4)
	float                                                        SoberingUpDrunkennessChangePerSec;                 // 0xc(0x4)
	bool                                                         AutoSoberUpWhenFullyDrunk;                         // 0x10(0x1)
};


// Size 0x18
struct NPCBeckonGestureEntry
{
public:
	class UClass*                                                GestureID;                                         // 0x0(0x8)
	struct StringAssetReference                                  BeckonGestureDataAsset;                            // 0x8(0x10)
};


// Size 0x14
struct ExitTunnelOfTheDamnedActionStateParams
{
public:
	float                                                        ClientSetupResponseTimeout;                        // 0x0(0x4)
	float                                                        CameraAnimationRate;                               // 0x4(0x4)
	float                                                        CameraAnimationScale;                              // 0x8(0x4)
	float                                                        CameraAnimationBlendInTime;                        // 0xc(0x4)
	float                                                        CameraAnimationBlendOutTime;                       // 0x10(0x4)
};


// Size 0x20
struct AthenaAnimationObjectJumpingAnimationsPitchOverride
{
public:
	class BlendSpace1D*                                          Start;                                             // 0x0(0x8)
	class BlendSpace1D*                                          Cycle;                                             // 0x8(0x8)
	class BlendSpace1D*                                          PreImpact;                                         // 0x10(0x8)
	class BlendSpace1D*                                          LandLight;                                         // 0x18(0x8)
};


// Size 0x10
struct ContextAction
{
public:
	class RadialContextBase*                                     Context;                                           // 0x0(0x8)
	class RadialCreationRuleAsset*                               Radial;                                            // 0x8(0x8)
};


// Size 0x10
struct MusicEvent
{
public:
	class WwiseEvent*                                            StartEvent;                                        // 0x0(0x8)
	class WwiseEvent*                                            StopEvent;                                         // 0x8(0x8)
};


// Size 0x2
struct QuestBookPageRenderingTriggerRedraw
{
public:
	char                                                         PreviousMode;                                      // 0x0(0x1)
	char                                                         NewMode;                                           // 0x1(0x1)
};


// Size 0x30
struct GuildNameData
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct FString                                               GuildName;                                         // 0x10(0x10)
	struct FString                                               GuildOwnerUserId;                                  // 0x20(0x10)
};


// Size 0x28
struct ServerMigrationCrewMigrationStatus
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	bool                                                         Migratable;                                        // 0x10(0x1)
	TArray<struct Vector2D>                                      Locations;                                         // 0x18(0x10)
};


// Size 0x1
struct PlayerControllerTypeTelemetryEvent
{
public:
	char                                                         ControllerType;                                    // 0x0(0x1)
};


// Size 0x10
struct VoyageHandInEntry
{
public:
	class VoyageRecipeDataAsset*                                 VoyageRecipe;                                      // 0x0(0x8)
	class UClass*                                                Item;                                              // 0x8(0x8)
};


// Size 0x10
struct PetChestPetNameUpdatedEvent
{
public:
	struct FString                                               PetName;                                           // 0x0(0x10)
};


// Size 0x18
struct RequestPetChestActionEvent
{
public:
	char                                                         Action;                                            // 0x0(0x1)
	struct FString                                               Subject;                                           // 0x8(0x10)
};


// Size 0x10
struct AchievementUpdatedTelemetry
{
public:
	TArray<struct AchievementUpdatedEvent>                       UpdatedAchievements;                               // 0x0(0x10)
};


// Size 0x10
struct RequestClothingChestClothingLoadoutEvent
{
public:
	TArray<String>                                               Categories;                                        // 0x0(0x10)
};


// Size 0x20
struct LoadoutSubstitution
{
public:
	struct StringAssetReference                                  LoadoutToSubstituteOut;                            // 0x0(0x10)
	TArray<struct StringAssetReference>                          LoadoutsToSubstituteIn;                            // 0x10(0x10)
};


// Size 0x10
struct TutorialAnimationResult
{
public:
	class FirstPersonAnimationInstance*                          AnimInstance;                                      // 0x8(0x8)
};


// Size 0x1
struct EventFrontendSetSceneVisibility
{
public:
	bool                                                         Visible;                                           // 0x0(0x1)
};


// Size 0x30
struct EntitlementInfo
{
public:
	struct FString                                               InstanceId;                                        // 0x0(0x10)
	struct FString                                               CatalogItemId;                                     // 0x10(0x10)
	struct FString                                               Signature;                                         // 0x20(0x10)
};


// Size 0x10
struct EventStormLightningImpact
{
public:
	struct Vector                                                ImpactPoint;                                       // 0x0(0xc)
	float                                                        TimeTillImpact;                                    // 0xc(0x4)
};


// Size 0x10
struct CompanyProgressIcon
{
public:
	struct StringAssetReference                                  Icon;                                              // 0x0(0x10)
};


// Size 0x8
struct QuestSelectionParams
{
public:
	char                                                         PoolSelectionMethod;                               // 0x0(0x1)
	char                                                         LocationSelectionMethod;                           // 0x1(0x1)
	bool                                                         ForceAlwaysNoLocationRepetition;                   // 0x2(0x1)
	bool                                                         UseChapterBasedVoyageHistory;                      // 0x3(0x1)
	int                                                          MaxNumberOfPoolRetries;                            // 0x4(0x4)
};


// Size 0x20
struct MaterialAnimatorGroupInstance
{
public:
	struct FName                                                 MaterialParamName;                                 // 0x0(0x8)
	struct FName                                                 CurrentAnimation;                                  // 0x8(0x8)
	struct FName                                                 WantedAnimation;                                   // 0x10(0x8)
	float                                                        CurrentAnimTime;                                   // 0x18(0x4)
	float                                                        AnimDuration;                                      // 0x1c(0x4)
};


// Size 0x70
struct CampaignGoalModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct DateTime                                              ActiveFrom;                                        // 0x10(0x8)
	struct DateTime                                              ActiveUntil;                                       // 0x18(0x8)
	map                                                          Meta;                                              // 0x20(0x50)
};


// Size 0x8
struct TrapItemProxyRemovedEvent
{
public:
	class ItemProxy*                                             Proxy;                                             // 0x0(0x8)
};


// Size 0x1
struct NarrationStateEvent
{
public:
	bool                                                         IsEnabled;                                         // 0x0(0x1)
};


// Size 0x1
struct EventHealthChangeContinuousRemoved
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
};


// Size 0x1
struct GameNarrationActivityChangedEvent
{
public:
	bool                                                         IsActive;                                          // 0x0(0x1)
};


// Size 0x8
struct AggressiveGhostHealthToVfxLevel
{
public:
	int                                                          NumShotsLeftToKill;                                // 0x0(0x4)
	float                                                        VfxLevel;                                          // 0x4(0x4)
};


// Size 0x30
struct PlayerRecieveFlameTelemetryEvent
{
public:
	struct FString                                               LightSourceId;                                     // 0x0(0x10)
	struct FString                                               LightSourceType;                                   // 0x10(0x10)
	struct FString                                               FlameColour;                                       // 0x20(0x10)
};


// Size 0x28
struct SkullOfStormsSailSuperBillowedTelemetryEvent
{
public:
	struct Guid                                                  ShipCrewId;                                        // 0x0(0x10)
	struct FString                                               ShipTypeString;                                    // 0x10(0x10)
	double                                                       SuperBillowTime;                                   // 0x20(0x8)
};


// Size 0x20
struct FailedToFindPlayerSpawnLocationPotentialLocation
{
public:
	struct Vector                                                Position;                                          // 0x0(0xc)
	struct FString                                               Description;                                       // 0x10(0x10)
};


// Size 0x10
struct GetBulkGuildsRequestModel
{
public:
	TArray<String>                                               GuildIds;                                          // 0x0(0x10)
};


// Size 0x10
struct SkeletonCampEnteredTelemetryEvent
{
public:
	struct FString                                               CampLocation;                                      // 0x0(0x10)
};


// Size 0x50
struct UICompanyShopInfo
{
public:
	bool                                                         ShouldShowCompanyInfo;                             // 0x0(0x1)
	struct FText                                                 InfoTitle;                                         // 0x8(0x38)
	TArray<struct Text>                                          InfoTips;                                          // 0x40(0x10)
};


// Size 0x1
struct EventChangeMatchmakingVisibility
{
public:
	bool                                                         MatchmakingEnabled;                                // 0x0(0x1)
};


// Size 0x18
struct UIPremiumStoreOpenTelemetryEvent
{
public:
	bool                                                         IsFrontend;                                        // 0x0(0x1)
	struct FString                                               SessionId;                                         // 0x8(0x10)
};


// Size 0x40
struct PriorityStruct
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
	struct FText                                                 LocTag;                                            // 0x8(0x38)
};


// Size 0x28
struct SetRivalVotingUIEvent
{
public:
	struct FString                                               TitleTextAsString;                                 // 0x0(0x10)
	struct FString                                               BodyTextAsString;                                  // 0x10(0x10)
	class UClass*                                                NotificationInputId;                               // 0x20(0x8)
};


// Size 0x6
struct BootFlowSessionDetailsEvent
{
public:
	char                                                         SessionVisibility;                                 // 0x0(0x1)
	char                                                         SessionType;                                       // 0x1(0x1)
	char                                                         SelectedPlayMode;                                  // 0x2(0x1)
	char                                                         SelectedPlayModeVariant;                           // 0x3(0x1)
	bool                                                         CrossInput;                                        // 0x4(0x1)
	bool                                                         CrossPlay;                                         // 0x5(0x1)
};


// Size 0x1
struct EventApplicationExitRequest
{
public:
	bool                                                         RestartProcess;                                    // 0x0(0x1)
};


// Size 0x10
struct EventAncientAIFormDespawned
{
public:
	bool                                                         WasKilled;                                         // 0x0(0x1)
	class Actor*                                                 KilledBy;                                          // 0x8(0x8)
};


// Size 0x4
struct SetCurrentInteractionIndexEvent
{
public:
	int                                                          DesiredIndex;                                      // 0x0(0x4)
};


// Size 0x8
struct EventProxyCreated
{
public:
	class Actor*                                                 ProxyItem;                                         // 0x0(0x8)
};


// Size 0x10
struct ActorId
{
public:
	struct FString                                               ActorLocalName;                                    // 0x0(0x10)
};


// Size 0x10
struct EventPickupableObjectPickedUp
{
public:
	class PickupableObject*                                      PickupableObject;                                  // 0x0(0x8)
	class Actor*                                                 InteractingPlayer;                                 // 0x8(0x8)
};


// Size 0x4
struct MermaidUsedTelemetryEvent
{
public:
	int                                                          MermaidId;                                         // 0x0(0x4)
};


// Size 0x8
struct NPCOnSurfaceFloodedLevel
{
public:
	float                                                        NormalisedWaterLevel;                              // 0x0(0x4)
	char                                                         FloodedLevel;                                      // 0x4(0x1)
};


// Size 0x20
struct DebugReplicatedAbilityData
{
public:
	struct AIAbilityDebugReplicatedIntervals                     AbilityIntervals;                                  // 0x0(0xc)
	class UClass*                                                TypeClass;                                         // 0x10(0x8)
	bool                                                         AbilityInRange;                                    // 0x18(0x1)
	bool                                                         AbilityDebugBlocked;                               // 0x19(0x1)
	bool                                                         UseTimerBetween;                                   // 0x1a(0x1)
	bool                                                         UseDamageBetween;                                  // 0x1b(0x1)
	char                                                         DamageIntervalBlockMode;                           // 0x1c(0x1)
};


// Size 0x30
struct MermaidStatueSpawnTelemetryEvent
{
public:
	struct FString                                               LocationName;                                      // 0x0(0x10)
	struct FString                                               MermaidStatueId;                                   // 0x10(0x10)
	struct FString                                               MermaidStatueClass;                                // 0x20(0x10)
};


// Size 0x8
struct ReapersTributeShipCrewTributeChanged
{
public:
	int                                                          NewTributeCount;                                   // 0x0(0x4)
	int                                                          OldTributeCount;                                   // 0x4(0x4)
};


// Size 0x8
struct InteractionCompletedWithFailedConditionEvent
{
public:
	class Actor*                                                 InteractingPlayer;                                 // 0x0(0x8)
};


// Size 0xa0
struct DamageParamWeights
{
public:
	float                                                        StrainUpperBound;                                  // 0x0(0x4)
	float                                                        ArenaStrainUpperBound;                             // 0x4(0x4)
	struct WeightedProbabilityRangeOfRanges                      MinMaxRanges;                                      // 0x8(0x30)
	struct WeightedProbabilityRangeOfRanges                      AnticipationRanges;                                // 0x38(0x30)
	struct WeightedProbabilityRangeOfRanges                      DamageRanges;                                      // 0x68(0x30)
	float                                                        BottomDeckWeight;                                  // 0x98(0x4)
	float                                                        ExistingHoleWeight;                                // 0x9c(0x4)
};


// Size 0x28
struct AddItemToShipGameServerRequestModel
{
public:
	struct FString                                               ItemName;                                          // 0x0(0x10)
	struct Guid                                                  CrewId;                                            // 0x10(0x10)
	int                                                          Quantity;                                          // 0x20(0x4)
};


// Size 0x20
struct RemoveAITypeSpawnRuleGameServerRequestModel
{
public:
	struct FString                                               TypeName;                                          // 0x0(0x10)
	struct FString                                               Region;                                            // 0x10(0x10)
};


// Size 0x20
struct VoyageProposalOverride
{
public:
	TArray<struct Name>                                          NecessaryFeatures;                                 // 0x0(0x10)
	class UClass*                                                Proposal;                                          // 0x10(0x8)
	int                                                          ProposalIndex;                                     // 0x18(0x4)
};


// Size 0x40
struct SpawnerData
{
public:
	class ItemSpawnData*                                         ItemSpawnData;                                     // 0x0(0x8)
};


// Size 0x50
struct SpawnedItem
{
public:
	class Actor*                                                 SpawnedActor;                                      // 0x0(0x8)
	class ItemSpawnData*                                         ItemSpawnData;                                     // 0x8(0x8)
	bool                                                         CustomLifetimeManagement;                          // 0x40(0x1)
};


// Size 0x30
struct ContestLaunchStartBlinds
{
public:
	struct Guid                                                  CrewId;                                            // 0x18(0x10)
	float                                                        DisplayDuration;                                   // 0x28(0x4)
};


// Size 0x28
struct ItemSpawnDistributionAssets
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	class WeightedItemDescSpawnDataAsset*                        ReferencedSpawnDistributionAsset;                  // 0x10(0x8)
	TArray<class SpawnRequirement*>                              Requirements;                                      // 0x18(0x10)
};


// Size 0x20
struct SetVulnerabilityGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
	struct FString                                               DamagerType;                                       // 0x8(0x10)
	float                                                        DamageMultipler;                                   // 0x18(0x4)
};


// Size 0x18
struct ItemInfoTogglePair
{
public:
	struct FName                                                 Toggle;                                            // 0x0(0x8)
	struct StringClassReference                                  ItemInfo;                                          // 0x8(0x10)
};


// Size 0x10
struct ShroudBreakerSoftTearDownEvent
{
public:
	struct Guid                                                  ShroudBreakerId;                                   // 0x0(0x10)
};


// Size 0x48
struct FogBankManagerFogBankTemplate
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	TArray<class Class*>                                         FogBanks;                                          // 0x8(0x10)
	struct WeightedProbabilityRangeOfRanges                      DistanceFromIslandInKm;                            // 0x18(0x30)
};


// Size 0x1
struct EventAISkeletalShipCaptainAnimState
{
public:
	char                                                         ActiveAnimationState;                              // 0x0(0x1)
};


// Size 0x8
struct EventItemPickedUpAndStored
{
public:
	class Actor*                                                 PickerUpper;                                       // 0x0(0x8)
};


// Size 0x30
struct EventUserGameSettingsSetKeyBinding
{
public:
	char                                                         BindingSet;                                        // 0x0(0x1)
	struct FString                                               BindingName;                                       // 0x8(0x10)
	struct FString                                               KeyName;                                           // 0x18(0x10)
	char                                                         Instigator;                                        // 0x28(0x1)
};


// Size 0x20
struct ShipwreckDiscoveredRpc
{
public:
	class Shipwreck*                                             Wreck;                                             // 0x18(0x8)
};


// Size 0x70
struct WhatsNewArticleModel
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	struct FString                                               Description;                                       // 0x10(0x10)
	struct FString                                               HeroImage;                                         // 0x20(0x10)
	struct FString                                               GridImage;                                         // 0x30(0x10)
	struct FString                                               GridPrimaryDescription;                            // 0x40(0x10)
	struct FString                                               GridSecondaryDescription;                          // 0x50(0x10)
	struct FString                                               DescriptionTimes;                                  // 0x60(0x10)
};


// Size 0x4
struct LoadoutRepairTelemetryEventBase
{
public:
	int                                                          PirateSeed;                                        // 0x0(0x4)
};


// Size 0x48
struct NPCDialogRankGatedText
{
public:
	struct FText                                                 Text;                                              // 0x0(0x38)
	TArray<class Class*>                                         RequiredRanks;                                     // 0x38(0x10)
};


// Size 0x118
struct Entitlements
{
public:
	TArray<class Class*>                                         PreCachedEntitlementTypes;                         // 0x8(0x10)
	TArray<class Class*>                                         OrderedEntitlements;                               // 0x18(0x10)
};


// Size 0x10
struct VaultPuzzleSolutionPositions
{
public:
	TArray<int>                                                  SolutionPositions;                                 // 0x0(0x10)
};


// Size 0xc
struct VfxStoryResponseSetting
{
public:
	struct StoryFlag                                             Story;                                             // 0x0(0x8)
	float                                                        EmitterValue;                                      // 0x8(0x4)
};


// Size 0x18
struct QuestTableCloseTelemetryEvent
{
public:
	float                                                        TotalTimeInQuestTable;                             // 0x0(0x4)
	struct FString                                               SessionId;                                         // 0x8(0x10)
};


// Size 0x1
struct EventShipNameTextboxFocusRequest
{
public:
	bool                                                         ShouldFocusShipNameTextbox;                        // 0x0(0x1)
};


// Size 0x1c
struct AthenaAnimationPitchShoulders
{
public:
	struct Rotator                                               Shoulder;                                          // 0x0(0xc)
	struct Rotator                                               Clavicle;                                          // 0xc(0xc)
	bool                                                         ActiveLeft;                                        // 0x18(0x1)
	bool                                                         ActiveRight;                                       // 0x19(0x1)
};


// Size 0x30
struct TQStructGenEntry
{
public:
	class TaleQuestDescAsset*                                    TaleQuestDesc;                                     // 0x10(0x8)
	class PLQuestLocationDataBundle*                             LocationBundle;                                    // 0x18(0x8)
	bool                                                         LocationFiltering;                                 // 0x20(0x1)
	struct Vector2D                                              AcceptableAreaLocation;                            // 0x24(0x8)
	float                                                        AcceptableAreaRadius;                              // 0x2c(0x4)
};


// Size 0x50
struct ShopDialogueMessages
{
public:
	struct FString                                               ConfirmPurchaseMessage;                            // 0x0(0x10)
	struct FString                                               PurchaseFailedMessage;                             // 0x10(0x10)
	struct FString                                               PurchasePendingMessage;                            // 0x20(0x10)
	struct FString                                               PurchaseSuccessMessage;                            // 0x30(0x10)
	struct FString                                               GetShopOffersFailedMessage;                        // 0x40(0x10)
};


// Size 0x40
struct CanShowSecondaryActionButton
{
public:
	bool                                                         CanShow;                                           // 0x4(0x1)
	struct FText                                                 Text;                                              // 0x8(0x38)
};


// Size 0x1
struct EventSubmergedStateChanged
{
public:
	char                                                         SubmergedState;                                    // 0x0(0x1)
};


// Size 0x10
struct NPCDialogCustomLookAtInfo
{
public:
	struct FName                                                 OptionalSocketName;                                // 0x0(0x8)
	class SceneComponent*                                        TargetLookAtComponent;                             // 0x8(0x8)
};


// Size 0x58
struct BucketContentsInfo
{
public:
	char                                                         ThrowableLiquidType;                               // 0x0(0x1)
	class UClass*                                                ProjectileClassToSpawn;                            // 0x8(0x8)
	class UClass*                                                ProjectileClassToSpawnAtWielder;                   // 0x10(0x8)
	class WwiseEvent*                                            ThrowSfx;                                          // 0x18(0x8)
	class Object*                                                ThrowVfxFirstPerson;                               // 0x20(0x8)
	class Object*                                                ThrowVfxThirdPerson;                               // 0x28(0x8)
	class Object*                                                DrenchWielderVfxThirdPerson;                       // 0x30(0x8)
	class Object*                                                BucketContentsParticleSystemFirstPerson;           // 0x38(0x8)
	class Object*                                                BucketContentsParticleSystemThirdPerson;           // 0x40(0x8)
	struct FName                                                 SwitchState;                                       // 0x48(0x8)
	float                                                        LiquidLevel;                                       // 0x50(0x4)
};


// Size 0x8
struct EventStartedBeingFed
{
public:
	class Actor*                                                 FedBy;                                             // 0x0(0x8)
};


// Size 0x58
struct UseMountedWeaponActionStateParams
{
public:
	float                                                        CameraDockTime;                                    // 0x18(0x4)
	class ForceFeedbackEffect*                                   FireForceFeedbackEffect;                           // 0x20(0x8)
	class UClass*                                                FireCameraShake;                                   // 0x28(0x8)
	class UClass*                                                FireInputId;                                       // 0x30(0x8)
	TArray<class Class*>                                         AimYawInputId;                                     // 0x38(0x10)
	TArray<class Class*>                                         AimPitchInputId;                                   // 0x48(0x10)
};


// Size 0x10
struct ItemStoredInChestEvent
{
public:
	class ItemInfo*                                              StoredItem;                                        // 0x0(0x8)
	class ItemInfo*                                              CollectorsChestStoredIn;                           // 0x8(0x8)
};


// Size 0x10
struct EventPlayerNameOverrideAssigned
{
public:
	struct FString                                               PlayerNameOverride;                                // 0x0(0x10)
};


// Size 0x28
struct ClientNPCDialogOptionSelectedTelemetryEvent
{
public:
	struct Guid                                                  NPCInteractionSessionId;                           // 0x0(0x10)
	struct FString                                               NPCDialogTreeDataAsset;                            // 0x10(0x10)
	int                                                          DialogIndex;                                       // 0x20(0x4)
	int                                                          OptionChosenIndex;                                 // 0x24(0x4)
};


// Size 0x8
struct InvasionDepartureTunnelOfTheDamnedInitializedTelemetryEvent
{
public:
	char                                                         RequestedSessionType;                              // 0x0(0x1)
	int                                                          CrewSkillScore;                                    // 0x4(0x4)
};


// Size 0x10
struct PlayerJoinRefusedMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x10
struct NPCInitialSpawnedCosmeticItems
{
public:
	class UClass*                                                CosmeticItemObject;                                // 0x0(0x8)
	struct FName                                                 AttachSocketName;                                  // 0x8(0x8)
};


// Size 0x48
struct AthenaAnimationHitReactsSelectedAnimations
{
public:
	class BlendSpace1D*                                          SelectedHitReact0;                                 // 0x0(0x8)
	class BlendSpace1D*                                          SelectedHitReactItem0;                             // 0x8(0x8)
	class BlendSpace1D*                                          SelectedHitReactItemAction0;                       // 0x10(0x8)
	class BlendSpace1D*                                          SelectedHitReactSubtle0;                           // 0x18(0x8)
	class BlendSpace1D*                                          SelectedHitReact1;                                 // 0x20(0x8)
	class BlendSpace1D*                                          SelectedHitReactItem1;                             // 0x28(0x8)
	class BlendSpace1D*                                          SelectedHitReactItemAction1;                       // 0x30(0x8)
	class BlendSpace1D*                                          SelectedHitReactSubtle1;                           // 0x38(0x8)
	class BlendSpace1D*                                          SelectedOverrideHitReact;                          // 0x40(0x8)
};


// Size 0x10
struct DynamicMaterialListContainer
{
public:
	TArray<class MaterialInstanceDynamic*>                       MaterialsList;                                     // 0x0(0x10)
};


// Size 0x10
struct EventPlayerUseItemEnd
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 UsedItem;                                          // 0x8(0x8)
};


// Size 0x30
struct Encounter
{
public:
	class Actor*                                                 EncounterActor;                                    // 0x0(0x8)
};


// Size 0x40
struct RewardDefinition
{
public:
	struct FName                                                 RewardIdentifier;                                  // 0x0(0x8)
	class PopUpMessageDesc*                                      PopUp;                                             // 0x8(0x8)
	bool                                                         IgnorePopUp;                                       // 0x10(0x1)
	TArray<class Reward*>                                        Rewards;                                           // 0x18(0x10)
	TArray<class Class*>                                         PrerequisiteEntitlements;                          // 0x28(0x10)
	bool                                                         AllowedFromInsecureSources;                        // 0x38(0x1)
	bool                                                         AwardToAccountAndNotJustToPirate;                  // 0x39(0x1)
	bool                                                         EmissaryExempt;                                    // 0x3a(0x1)
};


// Size 0x20
struct IslandSnapshotV1
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	struct Vector                                                Position;                                          // 0x4(0xc)
	struct FString                                               Name;                                              // 0x10(0x10)
};


// Size 0x28
struct AthenaAnimationSkeletonCurseAnimations
{
public:
	class AnimSequence*                                          SkeletonDrunk;                                     // 0x0(0x8)
	class AnimSequence*                                          SkeletonDance;                                     // 0x8(0x8)
	class AnimSequence*                                          SkeletonSleepInto;                                 // 0x10(0x8)
	class AnimSequence*                                          SkeletonSleepLoop;                                 // 0x18(0x8)
	class AnimSequence*                                          SkeletonSleepOut;                                  // 0x20(0x8)
};


// Size 0x1c
struct CargoRunQuestCategoryGroupBounds
{
public:
	struct FName                                                 GroupName;                                         // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
	int                                                          MinNum;                                            // 0xc(0x4)
	int                                                          MaxNum;                                            // 0x10(0x4)
	int                                                          MinDifferent;                                      // 0x14(0x4)
	int                                                          MaxDifferent;                                      // 0x18(0x4)
};


// Size 0x48
struct QuestTableTallTaleReward
{
public:
	struct StringAssetReference                                  RewardImageUrl;                                    // 0x0(0x10)
	struct FText                                                 RewardDescription;                                 // 0x10(0x38)
};


// Size 0x8
struct EventClientItemUseSpeedScaled
{
public:
	float                                                        ClientTimeStamp;                                   // 0x0(0x4)
	bool                                                         bItemUseSlowed;                                    // 0x4(0x1)
};


// Size 0x10
struct CrewCancelVoteOutOfBrigEvent
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
};


// Size 0x28
struct AeolusIncorrectAchievementsRemovedTelemetry
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
	bool                                                         Success;                                           // 0x20(0x1)
	int                                                          AchievementsRemovedCount;                          // 0x24(0x4)
};


// Size 0x18
struct WielderInfo
{
public:
	class AthenaPlayerCharacter*                                 Character;                                         // 0x0(0x8)
	class AthenaPlayerController*                                Controller;                                        // 0x8(0x8)
	class AthenaPlayerState*                                     State;                                             // 0x10(0x8)
};


// Size 0x40
struct WheelIKActivationRanges
{
public:
	struct FloatRange                                            LeftArmDownRangeA;                                 // 0x0(0x10)
	struct FloatRange                                            LeftArmDownRangeB;                                 // 0x10(0x10)
	struct FloatRange                                            RightArmDownRangeA;                                // 0x20(0x10)
	struct FloatRange                                            RightArmDownRangeB;                                // 0x30(0x10)
};


// Size 0x68
struct MechanismBindingSettings
{
public:
	char                                                         ActionActivationMode;                              // 0x0(0x1)
	struct WeightedProbabilityRangeOfRanges                      NumActionsToSelect;                                // 0x8(0x30)
	struct WeightedProbabilityRangeOfRanges                      NumTriggersToSelect;                               // 0x38(0x30)
};


// Size 0x3c
struct PointLightData
{
public:
	float                                                        AttenuationRadius;                                 // 0x0(0x4)
	bool                                                         bUseInverseSquaredFalloff;                         // 0x4(0x1)
	float                                                        LightFalloffExponent;                              // 0x8(0x4)
	float                                                        IntensityScaleForWater;                            // 0xc(0x4)
	float                                                        MinDistanceToLightAssumed;                         // 0x10(0x4)
	float                                                        SourceRadius;                                      // 0x14(0x4)
	float                                                        SourceLength;                                      // 0x18(0x4)
	char                                                         SimpleFunctionType;                                // 0x1c(0x1)
	float                                                        ScaleOffset;                                       // 0x20(0x4)
	float                                                        PulsePhase;                                        // 0x24(0x4)
	float                                                        FlickerFrequency;                                  // 0x28(0x4)
	int                                                          FlickerPerlinRow;                                  // 0x2c(0x4)
	struct LightmassPointLightSettings                           LightmassSettings;                                 // 0x30(0xc)
};


// Size 0x30
struct CloudTypeDefinition
{
public:
	class StaticMesh*                                            CloudMesh;                                         // 0x0(0x8)
	class StaticMesh*                                            CloudFluffyMesh;                                   // 0x8(0x8)
	struct Vector2D                                              ScaleRange;                                        // 0x10(0x8)
	struct Vector2D                                              StorminessRange;                                   // 0x18(0x8)
	float                                                        ProbabilityWeight;                                 // 0x20(0x4)
	float                                                        OverlapTolerance;                                  // 0x24(0x4)
	bool                                                         IsStreetCloud;                                     // 0x28(0x1)
	bool                                                         CastsShadow;                                       // 0x29(0x1)
};


// Size 0x78
struct ResponseServerMemoryNetworkEvent
{
public:
	struct MemoryCommonData                                      MemoryData;                                        // 0x18(0x50)
	TArray<struct MemoryVisualiserCategory>                      VisualiserCategories;                              // 0x68(0x10)
};


// Size 0x20
struct VoyageOnDemandArrivalTunnelOfTheDamnedInitializedTelemetryEvent
{
public:
	struct Guid                                                  VoyageID;                                          // 0x0(0x10)
	struct Guid                                                  MigrationId;                                       // 0x10(0x10)
};


// Size 0xc
struct GameEventSchedulerConfigInfo
{
public:
	char                                                         TrackedActorType;                                  // 0x0(0x1)
	int                                                          NumAllowed;                                        // 0x4(0x4)
	bool                                                         IsMainEvent;                                       // 0x8(0x1)
};


// Size 0x8
struct EventShipBuilt
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x10
struct GameEventCount
{
public:
	class UClass*                                                GameEventType;                                     // 0x0(0x8)
	int                                                          NumAllowed;                                        // 0x8(0x4)
};


// Size 0x4
struct AthenaAnimationSkeletonAIFastPathData
{
public:
	bool                                                         FullBodyAISensingCanActivate;                      // 0x0(0x1)
	bool                                                         ArmOverlayAISensingCanActivate;                    // 0x0(0x1)
	bool                                                         AIShadowStunActive;                                // 0x0(0x1)
	bool                                                         CanBeKnockedBack;                                  // 0x0(0x1)
	bool                                                         AICanFlee;                                         // 0x0(0x1)
	bool                                                         AICanEmote;                                        // 0x0(0x1)
	bool                                                         AIControllingCaptainWheel;                         // 0x0(0x1)
};


// Size 0x60
struct CaptainsLogInteractableActionStateConstructionInfo
{
public:
	class Actor*                                                 OwningActor;                                       // 0x58(0x8)
};


// Size 0xc
struct AthenaAnimationWaterPumpParams
{
public:
	float                                                        WaterPumpHandlePosition;                           // 0x0(0x4)
	float                                                        WaterPumpHandlePreviousPosition;                   // 0x4(0x4)
	bool                                                         WaterPumpHandleInMotion;                           // 0x8(0x1)
};


// Size 0xc
struct EventUserGameSettingsFloatChanged
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	float                                                        Value;                                             // 0x8(0x4)
};


// Size 0x1
struct EventCustomAnimationStateChanged
{
public:
	char                                                         CustomAnimationState;                              // 0x0(0x1)
};


// Size 0x20
struct EventAIBountySpawnerAllTargetsKilled
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	struct Guid                                                  CrewId;                                            // 0x8(0x10)
	class Actor*                                                 InstigatorOfFinalAIPawnDeath;                      // 0x18(0x8)
};


// Size 0x50
struct GameEventSchedulerEventStateChangeTelemetryEvent
{
public:
	struct Guid                                                  ConfigId;                                          // 0x0(0x10)
	struct Guid                                                  EventHandleId;                                     // 0x10(0x10)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
	char                                                         EventType;                                         // 0x30(0x1)
	char                                                         GameEventStatus;                                   // 0x31(0x1)
	struct FString                                               StatusInfo;                                        // 0x38(0x10)
	char                                                         HandleState;                                       // 0x48(0x1)
	float                                                        TimeTillChange;                                    // 0x4c(0x4)
};


// Size 0x10
struct CrewMemberRivalVoteEvent
{
public:
	class PlayerState*                                           CrewMemberPlayerState;                             // 0x0(0x8)
	bool                                                         IsInFavourOfRivalChange;                           // 0x8(0x1)
};


// Size 0x40
struct NonVerbalRadialSlot
{
public:
	struct FString                                               Phrase;                                            // 0x0(0x10)
	struct FString                                               BackgroundImageUrl;                                // 0x10(0x10)
	struct FString                                               IconImageUrl;                                      // 0x20(0x10)
	struct FString                                               DisableReason;                                     // 0x30(0x10)
};


// Size 0x1
struct OtherCrewMuteStateResponse
{
public:
	char                                                         MuteState;                                         // 0x0(0x1)
};


// Size 0x38
struct MerchantQuestCrateFilledNetworkEvent
{
public:
	struct FString                                               PlayerName;                                        // 0x18(0x10)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x28(0x8)
	bool                                                         OnlyPlayAudio;                                     // 0x30(0x1)
};


// Size 0x8
struct CompanyLevelDefinition
{
public:
	uint32                                                       Level;                                             // 0x0(0x4)
	uint32                                                       XpRequiredToAttain;                                // 0x4(0x4)
};


// Size 0x8
struct EventHealthChangeContinuousApplied
{
public:
	float                                                        ChangeDelta;                                       // 0x0(0x4)
	char                                                         Reason;                                            // 0x4(0x1)
};


// Size 0x58
struct WeightedItemDescSpawnDataWithRandomQuantity
{
public:
	struct WeightedProbabilityRange                              ProbabilityRange;                                  // 0x38(0x20)
};


// Size 0x1
struct ShipSittingInteractionDisabledSettingChanged
{
public:
	bool                                                         ShipSittingInteractionsDisabled;                   // 0x0(0x1)
};


// Size 0x28
struct NPCCustomAnimationBlueprintPlayingMontage
{
public:
	class AnimMontage*                                           OneShot;                                           // 0x0(0x8)
	class AnimMontage*                                           ContinouousIn;                                     // 0x8(0x8)
	class AnimMontage*                                           ContinouousLoop_A;                                 // 0x10(0x8)
	class AnimMontage*                                           ContinouousLoop_B;                                 // 0x18(0x8)
	class AnimMontage*                                           ContinouousOut;                                    // 0x20(0x8)
};


// Size 0x3
struct EventUserGameSettingsResetToDefaultBindings
{
public:
	char                                                         ControllerTypeToReset;                             // 0x0(0x1)
	bool                                                         ResetActions;                                      // 0x1(0x1)
	bool                                                         ResetAxes;                                         // 0x2(0x1)
};


// Size 0x10
struct FeaturedClothingCategory
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	struct FName                                                 Feature;                                           // 0x8(0x8)
};


// Size 0x8
struct ItemRemovedFromChestEvent
{
public:
	class ItemInfo*                                              RemovedItem;                                       // 0x0(0x8)
};


// Size 0x30
struct FortKeyUsedTelemetryEvent
{
public:
	struct Guid                                                  FortId;                                            // 0x0(0x10)
	struct Guid                                                  FortKeyId;                                         // 0x10(0x10)
	struct FName                                                 FortName;                                          // 0x20(0x8)
	struct FName                                                 KeyType;                                           // 0x28(0x8)
};


// Size 0x20
struct AthenaAnimationFire
{
public:
	float                                                        MinimumDistanceToStartCoughing;                    // 0x0(0x4)
	bool                                                         Coughing;                                          // 0x4(0x1)
};


// Size 0x20
struct LobbyInviteCode
{
public:
	struct FString                                               Code;                                              // 0x0(0x10)
	struct FString                                               CreatedUtc;                                        // 0x10(0x10)
};


// Size 0x10
struct PlayerReleasedFromBrig
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
};


// Size 0x58
struct SwallowedByKrakenActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           Tentacle;                                          // 0x40(0x14)
};


// Size 0x38
struct AthenaAnimationTalking
{
public:
	bool                                                         Talking;                                           // 0x0(0x1)
	class Pawn*                                                  Owner;                                             // 0x4(0x8)
	interface                                                    VoiceChatEmitter;                                  // 0x10(0x10)
};


// Size 0x10
struct AllianceNotificationData
{
public:
	char                                                         NotificationType;                                  // 0x0(0x1)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x8(0x8)
};


// Size 0x3
struct CrewMatchmakingVisibilityData
{
public:
	bool                                                         Vote;                                              // 0x0(0x1)
	char                                                         NumVotes;                                          // 0x1(0x1)
	char                                                         MatchmakingVisibilityState;                        // 0x2(0x1)
};


// Size 0x50
struct HitRegTrailData
{
public:
	TArray<struct Vector>                                        Trail;                                             // 0x0(0x10)
	float                                                        DistanceBeforeGravity;                             // 0x10(0x4)
	bool                                                         GravityActivated;                                  // 0x14(0x1)
	bool                                                         HitSomething;                                      // 0x15(0x1)
	struct Vector                                                GravityStartPoint;                                 // 0x18(0xc)
	struct Vector                                                ImpactPoint;                                       // 0x24(0xc)
	class PrimitiveComponent*                                    ImpactedComponent;                                 // 0x30(0x8)
	struct FString                                               ImpactedActorName;                                 // 0x38(0x10)
	int                                                          ImpactedActorNetId;                                // 0x48(0x4)
};


// Size 0x20
struct PioneerObjectiveCompleteNetworkEvent
{
public:
	bool                                                         Granted;                                           // 0x18(0x1)
};


// Size 0x10
struct MermaidServicePopUpData
{
public:
	class DataAsset*                                             EnabledPopUpMessageDesc;                           // 0x0(0x8)
	class DataAsset*                                             DisabledPopUpMessageDesc;                          // 0x8(0x8)
};


// Size 0x10
struct EventSessionCodeTextboxTextFromVirtualKeyboard
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0x38
struct PlayerBucketScoopTelemetryEvent
{
public:
	struct FString                                               BucketContents;                                    // 0x0(0x10)
	struct Guid                                                  ScoopID;                                           // 0x10(0x10)
	struct FString                                               ScoopSource;                                       // 0x20(0x10)
	float                                                        ScoopVolume;                                       // 0x30(0x4)
};


// Size 0x78
struct NPCReactionDualActorVOEntry
{
public:
	assetclass                                                   Actor1ToReactTo;                                   // 0x0(0x20)
	assetclass                                                   Actor2ToReactTo;                                   // 0x20(0x20)
	struct FName                                                 VOGroupName;                                       // 0x40(0x8)
	struct WeightedProbabilityRangeOfRanges                      VOCooldown;                                        // 0x48(0x30)
};


// Size 0x40
struct NonVerbalPhraseData
{
public:
	struct FText                                                 TextToBroadcast;                                   // 0x0(0x38)
	bool                                                         RequiresWieldedItemObjectNameAsArgument;           // 0x38(0x1)
	bool                                                         WieldedItemObjectNameIsNotLocalised;               // 0x39(0x1)
};


// Size 0x18
struct ServerMigrationCompletedTelemetryActorData
{
public:
	struct FString                                               ActorClass;                                        // 0x0(0x10)
	int                                                          Count;                                             // 0x10(0x4)
};


// Size 0x10
struct PlayerObjectUsageBaseTelemetryFragment
{
public:
	struct FString                                               ObjectId;                                          // 0x0(0x10)
};


// Size 0x1
struct TutorialDialogOptionSelectEvent
{
public:
	char                                                         OptionSelected;                                    // 0x0(0x1)
};


// Size 0x90
struct AthenaAnimationFishingAnimations
{
public:
	class AnimSequence*                                          CastIntoHoldBack;                                  // 0x0(0x8)
	class BlendSpace*                                            CastHoldBackLoop;                                  // 0x8(0x8)
	class AnimSequence*                                          CastForwards;                                      // 0x10(0x8)
	class AnimSequence*                                          CastHoldLoop;                                      // 0x18(0x8)
	class AnimSequence*                                          CastToFishing;                                     // 0x20(0x8)
	class AnimSequence*                                          CastFail;                                          // 0x28(0x8)
	class BlendSpace*                                            Fishing;                                           // 0x30(0x8)
	class BlendSpace1D*                                          FishingAdditive;                                   // 0x38(0x8)
	class BlendSpace1D*                                          IntoFighting;                                      // 0x40(0x8)
	class BlendSpace*                                            FightingCentral;                                   // 0x48(0x8)
	class BlendSpace1D*                                          FightingAdditive;                                  // 0x50(0x8)
	class BlendSpace1D*                                          Linesnap;                                          // 0x58(0x8)
	class AnimSequence*                                          SuccessReelIn;                                     // 0x60(0x8)
	class AnimSequence*                                          ComedyItemSuccessReelIn;                           // 0x68(0x8)
	class AnimSequence*                                          ShakingAdditive;                                   // 0x70(0x8)
	class AnimSequence*                                          LineSnapShakingAdditive;                           // 0x78(0x8)
	class AnimSequence*                                          FishingToIdle;                                     // 0x80(0x8)
	class AnimSequence*                                          FishingToUnequip;                                  // 0x88(0x8)
};


// Size 0x40
struct EventPlayerSendOutDirectTextMessage
{
public:
	class PlayerState*                                           Sender;                                            // 0x0(0x8)
	struct FText                                                 Message;                                           // 0x8(0x38)
};


// Size 0x1
struct ClientBannedHandlerRetrieveDataResponse
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
};


// Size 0x20
struct PurchaseRequestSuccessResponse
{
public:
	struct Guid                                                  TransactionId;                                     // 0x0(0x10)
	TArray<String>                                               PurchasedItems;                                    // 0x10(0x10)
};


// Size 0x4
struct EventStarvingAmountChanged
{
public:
	float                                                        PercentageStarved;                                 // 0x0(0x4)
};


// Size 0x58
struct RiddleQuestParams
{
public:
	uint32                                                       MinNumGates;                                       // 0x48(0x4)
	uint32                                                       MaxNumGates;                                       // 0x4c(0x4)
	class BoobyTrapSpawnerDataAsset*                             BoobyTrapSpawnerDataAsset;                         // 0x50(0x8)
};


// Size 0x48
struct CaptainsLogbookAccoladeLocalisedTextDefinition
{
public:
	struct FString                                               ServiceGuid;                                       // 0x0(0x10)
	struct FText                                                 LocalisedText;                                     // 0x10(0x38)
};


// Size 0x58
struct NPCDialogFormattedHeaderByConditionText
{
public:
	struct FText                                                 Text;                                              // 0x0(0x38)
	struct FString                                               ParameterName;                                     // 0x38(0x10)
	TArray<class NPCDialogConditional*>                          Conditions;                                        // 0x48(0x10)
};


// Size 0x10
struct PlayerDepartLocationTelemetryEvent
{
public:
	struct FString                                               LocationName;                                      // 0x0(0x10)
};


// Size 0x18
struct CampaignRanks
{
public:
	struct FName                                                 CampaignId;                                        // 0x0(0x8)
	TArray<class Class*>                                         Ranks;                                             // 0x8(0x10)
};


// Size 0x8
struct EventPlayerTakenControlOfControllable
{
public:
	class Actor*                                                 ControllableObject;                                // 0x0(0x8)
};


// Size 0x18
struct AlignmentModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	int64                                                        MilestoneSum;                                      // 0x10(0x8)
};


// Size 0x40
struct AthenaAnimationHitReactsAnimData
{
public:
	TArray<class BlendSpace1D*>                                  HitReact;                                          // 0x0(0x10)
	TArray<class BlendSpace1D*>                                  HitReactItem;                                      // 0x10(0x10)
	TArray<class BlendSpace1D*>                                  HitReactItemAction;                                // 0x20(0x10)
	TArray<class BlendSpace1D*>                                  HitReactSubtle;                                    // 0x30(0x10)
};


// Size 0x8
struct EventPlayerWaitingToSpawnComplete
{
public:
	class AthenaPlayerState*                                     PlayerState;                                       // 0x0(0x8)
};


// Size 0x38
struct ShipAnnouncementBuildAnnouncementRpc
{
public:
	class Controller*                                            Controller;                                        // 0x18(0x8)
	class Actor*                                                 Ship;                                              // 0x20(0x8)
	struct Guid                                                  CrewId;                                            // 0x28(0x10)
};


// Size 0x20
struct TriggerStopUseEvent
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	class Actor*                                                 ActionSource;                                      // 0x8(0x8)
	class Actor*                                                 Usable;                                            // 0x10(0x8)
	char                                                         TrackToUse;                                        // 0x18(0x1)
};


// Size 0x8
struct CapstanNetState
{
public:
	float                                                        TargetRatio;                                       // 0x0(0x4)
	bool                                                         IsLocked;                                          // 0x4(0x1)
};


// Size 0x20
struct RequestPurchaseSeasonPassOfferEvent
{
public:
	struct FString                                               OfferId;                                           // 0x0(0x10)
	struct FString                                               CatalogName;                                       // 0x10(0x10)
};


// Size 0x18
struct RequestClothingChestPreviewUpdateEvent
{
public:
	char                                                         Action;                                            // 0x0(0x1)
	struct FString                                               Subject;                                           // 0x8(0x10)
};


// Size 0x28
struct PlayerGameLeftVoyageTelemetryEvent
{
public:
	struct FString                                               VoyageTitle;                                       // 0x0(0x10)
	struct Guid                                                  VoyageID;                                          // 0x10(0x10)
	char                                                         LeaveStatus;                                       // 0x20(0x1)
	bool                                                         IsTale;                                            // 0x21(0x1)
	bool                                                         IsStarlightTale;                                   // 0x22(0x1)
};


// Size 0xc
struct WaterPuzzleWaterLevel
{
public:
	float                                                        WaterLevel;                                        // 0x0(0x4)
	float                                                        FillTransitionTime;                                // 0x4(0x4)
	float                                                        DrainTransitionTime;                               // 0x8(0x4)
};


// Size 0x20
struct AthenaPlayerZonePenetrationTrackerUpdateEvent
{
public:
	class Actor*                                                 PenetratedActor;                                   // 0x0(0x8)
	class Actor*                                                 Player;                                            // 0x8(0x8)
	float                                                        PenetrationT3D;                                    // 0x10(0x4)
	float                                                        PenetrationTHorizontal;                            // 0x14(0x4)
	float                                                        PenetrationTVertical;                              // 0x18(0x4)
};


// Size 0x18
struct ShipwreckSite
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	struct Rotator                                               Rotation;                                          // 0xc(0xc)
};


// Size 0x10
struct UIQuestTableOpenTelemetryEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
};


// Size 0x10
struct AudioStingShipsSpotted
{
public:
	class Actor*                                                 SpottedShip;                                       // 0x0(0x8)
	double                                                       TimeSpotted;                                       // 0x8(0x8)
};


// Size 0x18
struct MeleeAIAbilityAngleChecker
{
public:
	interface                                                    PawnCharacterOrientationInterface;                 // 0x0(0x10)
};


// Size 0x2
struct WieldableBookPageRenderingTriggerRedraw
{
public:
	char                                                         PreviousMode;                                      // 0x0(0x1)
	char                                                         NewMode;                                           // 0x1(0x1)
};


// Size 0x10
struct EventExitedShip
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
	class Actor*                                                 Actor;                                             // 0x8(0x8)
};


// Size 0x8
struct EventPlayerLeftProximity
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0x18
struct ReloadRequest
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	struct Guid                                                  TelemetryReloadId;                                 // 0x8(0x10)
};


// Size 0x10
struct MeleeWeaponSpecialAttackData
{
public:
	class UClass*                                                NotificationInputId;                               // 0x0(0x8)
	class MeleeAttackDataAsset*                                  Asset;                                             // 0x8(0x8)
};


// Size 0x28
struct FeatureConfigTelemetryEvent
{
public:
	struct FString                                               FeatureConfigHash;                                 // 0x0(0x10)
	struct JsonObjectWrapper                                     Json;                                              // 0x10(0x18)
};


// Size 0x10
struct UseLimitedVoyageRequestModel
{
public:
	struct FString                                               TileId;                                            // 0x0(0x10)
};


// Size 0x18
struct HUDBlur
{
public:
	class MaterialParameterCollectionInstance*                   ScreenEffectsMaterialParameterCollectionInstance;  // 0x0(0x8)
};


// Size 0x20
struct CategoryTypeMapEntry
{
public:
	struct FString                                               Type;                                              // 0x0(0x10)
	TArray<class Class*>                                         Categories;                                        // 0x10(0x10)
};


// Size 0x28
struct CaptainsLogInteractableActionStateParams
{
public:
	class UClass*                                                ItemToSpawn;                                       // 0x18(0x8)
	float                                                        TimeBeforeUndock;                                  // 0x20(0x4)
};


// Size 0x38
struct QuestTablePageTransitionTelemetryEvent
{
public:
	struct FString                                               CurrentPage;                                       // 0x0(0x10)
	struct FString                                               PreviousPage;                                      // 0x10(0x10)
	float                                                        TimeOnPreviousPage;                                // 0x20(0x4)
	struct FString                                               SessionId;                                         // 0x28(0x10)
};


// Size 0x30
struct BootFlowSetContentEngagementMessage
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	struct FString                                               Body;                                              // 0x10(0x10)
	struct FString                                               KeyArt;                                            // 0x20(0x10)
};


// Size 0x8
struct EventShipSetSail
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x8
struct EventPlayerTeleportComplete
{
public:
	class Actor*                                                 TeleportedActor;                                   // 0x0(0x8)
};


// Size 0xc
struct SailSnapshot
{
public:
	float                                                        LengthProportion;                                  // 0x0(0x4)
	float                                                        Angle;                                             // 0x4(0x4)
	float                                                        Damage;                                            // 0x8(0x4)
};


// Size 0x10
struct RequestEquipmentChestItemEntitlementsEvent
{
public:
	struct FString                                               ItemCategory;                                      // 0x0(0x10)
};


// Size 0x10
struct SendGuildInvitesRequestModel
{
public:
	TArray<String>                                               UserIdsToInvite;                                   // 0x0(0x10)
};


// Size 0x8
struct EventItemDroppedOnActor
{
public:
	class Actor*                                                 DroppedActor;                                      // 0x0(0x8)
};


// Size 0x40
struct ItemSpawnTransformWithRandomQuantity
{
public:
	struct Transform                                             Transform;                                         // 0x0(0x30)
	class WeightedItemDescSpawnDataAssetWithRandomQuantity*      ReferencedSpawnDistributionAssetWithRandomQuantity; // 0x30(0x8)
	float                                                        SpawnRadius;                                       // 0x38(0x4)
};


// Size 0xc
struct TankardContentsInfo
{
public:
	char                                                         LiquidType;                                        // 0x0(0x1)
	float                                                        AlcoholStrengthMultiplier;                         // 0x4(0x4)
	bool                                                         ApplySoberStatus;                                  // 0x8(0x1)
};


// Size 0x10
struct GetDisplayNamesRequestModel
{
public:
	TArray<String>                                               UserIds;                                           // 0x0(0x10)
};


// Size 0x20
struct AccoladeSubStatsInformationModel
{
public:
	struct FString                                               LocalizedTitle;                                    // 0x0(0x10)
	struct FString                                               Key;                                               // 0x10(0x10)
};


// Size 0x28
struct BlendableDrowningParams
{
public:
	float                                                        TimeToEmptyLungs;                                  // 0x0(0x4)
	float                                                        TimeToFillLungs;                                   // 0x4(0x4)
	float                                                        DamagePerMinute;                                   // 0x8(0x4)
	float                                                        DrownWaterLevel;                                   // 0xc(0x4)
	float                                                        GulpingStartTime;                                  // 0x10(0x4)
	float                                                        GulpingPeakTime;                                   // 0x14(0x4)
	float                                                        ClientErrorOxygenDifference;                       // 0x18(0x4)
	class Object*                                                ExtraBubblesFirstPerson;                           // 0x20(0x8)
};


// Size 0xe0
struct AthenaAnimationRowing
{
public:
	class Actor*                                                 ControlledObject;                                  // 0x0(0x8)
	class Actor*                                                 CachedPlayerCharacter;                             // 0x8(0x8)
	class UClass*                                                CosmeticOarClass;                                  // 0x10(0x8)
};


// Size 0x10
struct BountyQuestLayoutOption
{
public:
	int                                                          NumCaptains;                                       // 0x0(0x4)
	int                                                          NumCrew;                                           // 0x4(0x4)
	class BountyMapLayout*                                       Layout;                                            // 0x8(0x8)
};


// Size 0x58
struct PickupObjectActionStateConstructionInfo
{
public:
	struct NetActorPtr                                           PickupableObject;                                  // 0x40(0x14)
};


// Size 0x10
struct PetChestNamePetEvent
{
public:
	struct FString                                               PetName;                                           // 0x0(0x10)
};


// Size 0x48
struct VirtualAxisBindingDefinition
{
public:
	TArray<struct Name>                                          AxisNames;                                         // 0x0(0x10)
	TArray<struct Name>                                          CombinedAxisNamesX;                                // 0x10(0x10)
	TArray<struct Name>                                          CombinedAxisNamesY;                                // 0x20(0x10)
	struct FString                                               BindingName;                                       // 0x30(0x10)
	float                                                        Scale;                                             // 0x40(0x4)
};


// Size 0x38
struct ContestBaseTelemetryFragment
{
public:
	struct Guid                                                  ContestUniqueId;                                   // 0x0(0x10)
	struct FString                                               ContestVoyageName;                                 // 0x10(0x10)
	char                                                         ContestScoreIdentifier;                            // 0x20(0x1)
	float                                                        TimeRemainingInCurrentContestState;                // 0x24(0x4)
	struct FString                                               ShipSize;                                          // 0x28(0x10)
};


// Size 0x18
struct LoadableProjectileData
{
public:
	struct StringAssetReference                                  DataAsset;                                         // 0x0(0x10)
	int                                                          GeneratedDataRNGSeed;                              // 0x10(0x4)
	bool                                                         ShouldProjectileTrailDoReflections;                // 0x14(0x1)
};


// Size 0x18
struct VoyageProposalSelectedEvent
{
public:
	struct FString                                               ProposalDesc;                                      // 0x0(0x10)
	bool                                                         IsTin;                                             // 0x10(0x1)
};


// Size 0x30
struct PlayerCompanyProgress
{
public:
	struct FName                                                 CompanyId;                                         // 0x0(0x8)
	uint32                                                       Level;                                             // 0x8(0x4)
	uint32                                                       Distinction;                                       // 0xc(0x4)
	uint32                                                       Xp;                                                // 0x10(0x4)
	uint32                                                       XpRequiredToAttain;                                // 0x14(0x4)
	uint32                                                       Rank;                                              // 0x18(0x4)
	struct FString                                               Sig;                                               // 0x20(0x10)
};


// Size 0x18
struct BuoyantObjectSpawnDesc
{
public:
	float                                                        LifeTime;                                          // 0x0(0x4)
	float                                                        SpawnDepth;                                        // 0x4(0x4)
	struct Vector2D                                              Location;                                          // 0x8(0x8)
	class UClass*                                                Type;                                              // 0x10(0x8)
};


// Size 0x18
struct AggressiveGhostShipNameBucket
{
public:
	struct FName                                                 Key;                                               // 0x0(0x8)
	TArray<struct Text>                                          Names;                                             // 0x8(0x10)
};


// Size 0x18
struct ItemDiggingBaseOverride
{
public:
	TArray<Class>                                                Classes;                                           // 0x0(0x10)
	class ItemDiggingBaseConfig*                                 DiggingBaseConfig;                                 // 0x10(0x8)
};


// Size 0x48
struct ShopOfferPrice
{
public:
	char                                                         Currency;                                          // 0x0(0x1)
	struct FText                                                 DisplayPrice;                                      // 0x8(0x38)
	uint32                                                       Price;                                             // 0x40(0x4)
};


// Size 0x20
struct InstrumentHandlePairedWithActor
{
public:
	class Actor*                                                 InstrumentActor;                                   // 0x0(0x8)
};


// Size 0x5
struct HiddenActionStateParams
{
public:
	bool                                                         MakeInvincibleWhileInState;                        // 0x0(0x1)
	bool                                                         DisableCollisionWhileInState;                      // 0x1(0x1)
	bool                                                         MakeInvisibleWhileInState;                         // 0x2(0x1)
	bool                                                         HideNamePlatesWhileInState;                        // 0x3(0x1)
	bool                                                         DisableGravityWhileInState;                        // 0x4(0x1)
};


// Size 0x40
struct ClientBootFlowExistingSessionTelemetry
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
	struct FString                                               PlayMode;                                          // 0x10(0x10)
	struct FString                                               SessionType;                                       // 0x20(0x10)
	struct FString                                               OwningUserId;                                      // 0x30(0x10)
};


// Size 0x1
struct EventSwimmingCreatureDeathCustomEvent
{
public:
	char                                                         EventType;                                         // 0x0(0x1)
};


// Size 0x8
struct EventCharacterStartedOneShotUse
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
};


// Size 0x18
struct GuildIconTextureKeyValue
{
public:
	struct FString                                               ImageKey;                                          // 0x0(0x10)
	class Texture*                                               Image;                                             // 0x10(0x8)
};


// Size 0x48
struct DisplayServiceStatusNotificationClient
{
public:
	uint32                                                       NotificationId;                                    // 0x0(0x4)
	struct FText                                                 NotificationText;                                  // 0x8(0x38)
	struct Timespan                                              Duration;                                          // 0x40(0x8)
};


// Size 0x38
struct VoyageCancelled
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
};


// Size 0x8
struct EventCustomAnimationPlayAnimation
{
public:
	struct FName                                                 AnimSequenceName;                                  // 0x0(0x8)
};


// Size 0x10
struct DamageableVulnerabilityLayerData
{
public:
	struct FName                                                 Key;                                               // 0x0(0x8)
	class DamageableVulnerabilityLayer*                          Layer;                                             // 0x8(0x8)
};


// Size 0xc
struct StunnedEvent
{
public:
	bool                                                         Stunned;                                           // 0x0(0x1)
	bool                                                         ApplyStunAnim;                                     // 0x1(0x1)
	char                                                         StunAnimType;                                      // 0x2(0x1)
	bool                                                         TriggerStunnedVFX;                                 // 0x3(0x1)
	float                                                        Duration;                                          // 0x4(0x4)
	bool                                                         InterruptMeleeAttacks;                             // 0x8(0x1)
};


// Size 0x30
struct TeleportActionStateParams
{
public:
	float                                                        FadeDuration;                                      // 0x0(0x4)
	float                                                        FadeEventTimeout;                                  // 0x4(0x4)
	float                                                        FadeServerTimeout;                                 // 0x8(0x4)
	struct LinearColor                                           FadeColour;                                        // 0xc(0x10)
	bool                                                         FadeAudio;                                         // 0x1c(0x1)
	float                                                        EndFadeInDuration;                                 // 0x20(0x4)
	float                                                        CharacterFadeCompleteTimeout;                      // 0x24(0x4)
	float                                                        TeleportCompleteTimeout;                           // 0x28(0x4)
	float                                                        TeleportNetRelevancyTimeout;                       // 0x2c(0x4)
};


// Size 0x18
struct AthenaAnimationCamera
{
public:
	float                                                        CameraAlpha;                                       // 0x0(0x4)
	float                                                        CameraLookYawTime;                                 // 0x4(0x4)
	float                                                        CameraLookPitchTime;                               // 0x8(0x4)
	float                                                        CameraYaw;                                         // 0xc(0x4)
	float                                                        CameraPitch;                                       // 0x10(0x4)
	char                                                         CameraObjectAttachmentType;                        // 0x14(0x1)
};


// Size 0x118
struct EmoteActionStateConstructionInfo
{
public:
	struct EmoteData                                             EmoteData;                                         // 0x40(0xc8)
	struct FName                                                 EmoteIdentifier;                                   // 0x108(0x8)
	bool                                                         ForcedEmote;                                       // 0x110(0x1)
};


// Size 0x10
struct DefinitionUpdatedMessage
{
public:
	struct FString                                               ContentHash;                                       // 0x0(0x10)
};


// Size 0x10
struct NPCAnimationResponseIdlesVariantStruct
{
public:
	class AnimSequence*                                          StateAnim;                                         // 0x0(0x8)
	char                                                         InteractResponseTypeID;                            // 0x8(0x1)
	bool                                                         StateAnimValid;                                    // 0x9(0x1)
};


// Size 0xc
struct WreckEvictionAfterMigrationFailedTelemetryEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
};


// Size 0x10
struct RivalChangeTelemetryEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
};


// Size 0x1
struct IntroVideoSkippedTelemetryEvent
{
public:
	char                                                         Reason;                                            // 0x0(0x1)
};


// Size 0x8
struct EventPlayerCapstanUsageEnd
{
public:
	class Actor*                                                 ObjectBeingUsed;                                   // 0x0(0x8)
};


// Size 0x1
struct ReapersTributeShipIsInCombatChangedEvent
{
public:
	bool                                                         NewRTSIsInCombat;                                  // 0x0(0x1)
};


// Size 0xc
struct PlayerActivityLifetimeRule
{
public:
	char                                                         ActivityType;                                      // 0x0(0x1)
	float                                                        ActivityDuration;                                  // 0x4(0x4)
	char                                                         ActivityToEnd;                                     // 0x8(0x1)
	int8                                                         ActivityPriority;                                  // 0x9(0x1)
};


// Size 0x14
struct ContestCrewResult
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	uint32                                                       Score;                                             // 0x10(0x4)
};


// Size 0x18
struct RammableDamageEntry
{
public:
	class UClass*                                                RammerType;                                        // 0x0(0x8)
	class ForceFeedbackEffect*                                   ForceFeedbackEffect;                               // 0x8(0x8)
	int                                                          DamageAmount;                                      // 0x10(0x4)
};


// Size 0x40
struct NotesRemoteServiceNoteDetailModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               NoteType;                                          // 0x10(0x10)
	struct FString                                               Title;                                             // 0x20(0x10)
	struct FString                                               Note;                                              // 0x30(0x10)
};


// Size 0x30
struct GameNarrationStateChangeEvent
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
	struct FString                                               PreferredVoice;                                    // 0x8(0x10)
	struct FString                                               Language;                                          // 0x18(0x10)
	int                                                          Gender;                                            // 0x28(0x4)
};


// Size 0x28
struct AeolusAchievementsUpdatedFromServicesTelemetry
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
	bool                                                         Success;                                           // 0x20(0x1)
	int                                                          AchievementsUpdatedCount;                          // 0x24(0x4)
};


// Size 0xc
struct AggressiveGhostShipsEncounterHeightPerIslandOffsets
{
public:
	struct FName                                                 IslandName;                                        // 0x0(0x8)
	float                                                        EventSignalHeightOffset;                           // 0x8(0x4)
};


// Size 0x20
struct TriggerPlaceableReactionEvent
{
public:
	class PlaceableReaction*                                     PlaceableReaction;                                 // 0x18(0x8)
};


// Size 0x18
struct BalanceableWalkwayAnimationsFirstPerson
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	class AnimSequence*                                          SlideAction;                                       // 0x8(0x8)
	class BlendSpace*                                            BlendSpace;                                        // 0x10(0x8)
};


// Size 0x18
struct SurfaceDigHole
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	class UClass*                                                DigHoleClass;                                      // 0x8(0x8)
	float                                                        DigAINoiseRange;                                   // 0x10(0x4)
};


// Size 0x50
struct BeingRetractedActionStateConstructionInfo
{
public:
	class SceneComponent*                                        RetractingComponent;                               // 0x40(0x8)
	bool                                                         RetainOriginalOrientation;                         // 0x48(0x1)
};


// Size 0x20
struct InvalidDependencyRootPackageEncounteredTelemetryEvent
{
public:
	struct FString                                               DependencyRootPackageName;                         // 0x0(0x10)
	struct FString                                               ImportPackageName;                                 // 0x10(0x10)
};


// Size 0x58
struct PromptsCounterModel
{
public:
	map                                                          PromptCounters;                                    // 0x0(0x50)
	struct DateTime                                              NowUtc;                                            // 0x50(0x8)
};


// Size 0x10
struct EventShipNameTextboxTextFromVirtualKeyboard
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0x60
struct UIPremiumStoreItemInteractTelemetryEvent
{
public:
	struct FString                                               CurrencyUsed;                                      // 0x0(0x10)
	struct FString                                               EngagementOutcome;                                 // 0x10(0x10)
	struct FString                                               ItemCost;                                          // 0x20(0x10)
	struct FString                                               ItemName;                                          // 0x30(0x10)
	struct FString                                               PageName;                                          // 0x40(0x10)
	struct FString                                               SessionId;                                         // 0x50(0x10)
};


// Size 0x30
struct HasRankCondition
{
public:
	class UClass*                                                Rank;                                              // 0x28(0x8)
};


// Size 0x60
struct CinematicCrewEvent
{
public:
	TArray<String>                                               CrewMembers;                                       // 0x0(0x10)
	struct FText                                                 Header;                                            // 0x10(0x38)
	struct FName                                                 Tag;                                               // 0x48(0x8)
	struct FString                                               GuildId;                                           // 0x50(0x10)
};


// Size 0x30
struct PurchasePremiumCurrencyResponseEvent
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
	struct FString                                               Title;                                             // 0x10(0x10)
	struct FString                                               ImageUrl;                                          // 0x20(0x10)
};


// Size 0x10
struct ItemPreviewCreatedEvent
{
public:
	struct FString                                               PreviewURL;                                        // 0x0(0x10)
};


// Size 0x20
struct EventRequestSayPhraseWithArgument
{
public:
	struct FString                                               PhraseKey;                                         // 0x0(0x10)
	struct FString                                               ArgumentKey;                                       // 0x10(0x10)
};


// Size 0x10
struct ShopUpsellOfferResponse
{
public:
	struct FString                                               OfferId;                                           // 0x0(0x10)
};


// Size 0x14
struct UICompanyProgress
{
public:
	struct FName                                                 CompanyId;                                         // 0x0(0x8)
	float                                                        Level;                                             // 0x8(0x4)
	uint32                                                       Distinction;                                       // 0xc(0x4)
	uint32                                                       Rank;                                              // 0x10(0x4)
};


// Size 0x8
struct CrewBaseTelemetryFragmentPlayerCharacterLookupInput
{
public:
	class Character*                                             CrewMemberCharacter;                               // 0x0(0x8)
};


// Size 0x10
struct MeleeAttackMoveSpeedValidationTelemetryEvent
{
public:
	char                                                         CorrectionReason;                                  // 0x0(0x1)
	float                                                        AllowedWindowStartTimeSeconds;                     // 0x4(0x4)
	float                                                        AllowedWindowFinishTimeSeconds;                    // 0x8(0x4)
	float                                                        CurrentAttackClientTimeSeconds;                    // 0xc(0x4)
};


// Size 0x8
struct SpawnItemGameServerResponseModel
{
public:
	bool                                                         Success;                                           // 0x0(0x1)
	uint32                                                       ItemId;                                            // 0x4(0x4)
};


// Size 0x8
struct EventItemRepresentationReplicated
{
public:
	class Actor*                                                 ItemRepresentation;                                // 0x0(0x8)
};


// Size 0x8
struct SetPresenceConnectionStringResponseModel
{
public:
	struct Timespan                                              ResetAfter;                                        // 0x0(0x8)
};


// Size 0x10
struct MapTablePersistenceModel
{
public:
	TArray<struct Vector2D>                                      MapPins;                                           // 0x0(0x10)
};


// Size 0x38
struct TreasureDroppedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	char                                                         BootyType;                                         // 0x10(0x1)
	struct FString                                               Rarity;                                            // 0x18(0x10)
	struct FString                                               LocationOnShip;                                    // 0x28(0x10)
};


// Size 0x1c
struct LookAtOffsetParams
{
public:
	bool                                                         UseLookAtPosition;                                 // 0x0(0x1)
	bool                                                         UseSpring;                                         // 0x1(0x1)
	float                                                        SpringAccel;                                       // 0x4(0x4)
	float                                                        MinYaw;                                            // 0x8(0x4)
	float                                                        MaxYaw;                                            // 0xc(0x4)
	float                                                        MinPitch;                                          // 0x10(0x4)
	float                                                        MaxPitch;                                          // 0x14(0x4)
	char                                                         CameraLookatAnimationType;                         // 0x18(0x1)
};


// Size 0x28
struct FuseComponentMetaWrapper
{
public:
	class Actor*                                                 Instigator;                                        // 0x18(0x8)
	bool                                                         FuseEnabled;                                       // 0x20(0x1)
	float                                                        FuseTimeScale;                                     // 0x24(0x4)
};


// Size 0x38
struct QuestTableTileInteractionTelemetryEvent
{
public:
	struct FString                                               TileTitle;                                         // 0x0(0x10)
	struct FString                                               TileId;                                            // 0x10(0x10)
	int                                                          CurrentTilePage;                                   // 0x20(0x4)
	struct FString                                               SessionId;                                         // 0x28(0x10)
};


// Size 0x20
struct AdventuresActorBundleInfo
{
public:
	struct StringAssetReference                                  Actor;                                             // 0x0(0x10)
	TArray<struct StringAssetReference>                          Pages;                                             // 0x10(0x10)
};


// Size 0x10
struct EventGuildNameTextboxTextFromVirtualKeyboard
{
public:
	struct FString                                               Text;                                              // 0x0(0x10)
};


// Size 0x10
struct RequestJoinSessionEvent
{
public:
	struct FString                                               SessionCode;                                       // 0x0(0x10)
};


// Size 0x8
struct ClothingChestEquipClothingEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0xc
struct FactionStatsInformation
{
public:
	int                                                          TotalRivalShipsSunk;                               // 0x0(0x4)
	int                                                          HighestFactionStreak;                              // 0x4(0x4)
	int                                                          HighestHourglassValue;                             // 0x8(0x4)
};


// Size 0x28
struct WheelDesc
{
public:
	struct StringAssetReference                                  WheelMesh;                                         // 0x0(0x10)
	int64                                                        WheelCachedMeshResourceSize;                       // 0x10(0x8)
	TArray<class MaterialInterface*>                             WheelMeshOverrideMaterials;                        // 0x18(0x10)
};


// Size 0xc
struct RewardIdCount
{
public:
	struct FName                                                 RewardId;                                          // 0x0(0x8)
	int                                                          Count;                                             // 0x8(0x4)
};


// Size 0xa0
struct ShipAnnouncementCinematicEventServer
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct FText                                                 ShipTitle;                                         // 0x10(0x38)
	struct FString                                               CaptainName;                                       // 0x48(0x10)
	struct FText                                                 CaptainScrambledName;                              // 0x58(0x38)
	struct Guid                                                  GuildId;                                           // 0x90(0x10)
};


// Size 0x18
struct UIFloatOptionSelectedTelemetryEvent
{
public:
	struct FString                                               Option;                                            // 0x0(0x10)
	float                                                        Value;                                             // 0x10(0x4)
};


// Size 0x10
struct ReapersMarkTrackedBootyItemInfo
{
public:
	struct Vector                                                ItemLocation;                                      // 0x0(0xc)
	char                                                         ItemType;                                          // 0xc(0x1)
};


// Size 0x20
struct EventRequestSayPhraseWithNonLocalisedArgument
{
public:
	struct FString                                               PhraseKey;                                         // 0x0(0x10)
	struct FString                                               Argument;                                          // 0x10(0x10)
};


// Size 0x38
struct StorageContainerContentModifierConditions
{
public:
	bool                                                         Shipwreck;                                         // 0x0(0x1)
	bool                                                         BarrelsOfPlenty;                                   // 0x1(0x1)
	bool                                                         IsOnShip;                                          // 0x2(0x1)
	TArray<char>                                                 ReplenishableContainerTypeRestrictions;            // 0x8(0x10)
	TArray<char>                                                 IslandTypeRestrictions;                            // 0x18(0x10)
	TArray<class Class*>                                         SeaRestrictions;                                   // 0x28(0x10)
};


// Size 0x8
struct EventHUDSetMousePosition
{
public:
	struct Vector2D                                              Position;                                          // 0x0(0x8)
};


// Size 0x38
struct IslandEventData
{
public:
	class UClass*                                                EventType;                                         // 0x0(0x8)
	struct StringAssetReference                                  VoyageDescAssetString;                             // 0x8(0x10)
	struct Vector2D                                              WorldPos;                                          // 0x18(0x8)
	bool                                                         IsActive;                                          // 0x20(0x1)
	struct Guid                                                  EventID;                                           // 0x24(0x10)
};


// Size 0x4
struct EventHealthStageChanged
{
public:
	int                                                          CurrentHealthStage;                                // 0x0(0x4)
};


// Size 0x18
struct EventPlayerTreasureMapSet
{
public:
	class Texture*                                               MapTexture;                                        // 0x0(0x8)
	TArray<struct Vector2D>                                      Marks;                                             // 0x8(0x10)
};


// Size 0x18
struct LaunchableProjectileDamageEvent
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	class Actor*                                                 ProjectileActor;                                   // 0x8(0x8)
	class Actor*                                                 ActorHit;                                          // 0x10(0x8)
};


// Size 0x10
struct AthenaAnimationItemListingMappings
{
public:
	class UClass*                                                AnimDataBodyTypeID;                                // 0x0(0x8)
	class AthenaAnimationItemListingAsset*                       ItemListing;                                       // 0x8(0x8)
};


// Size 0x18
struct ContestMatchmakingLocationsResponseModel
{
public:
	TArray<String>                                               Locations;                                         // 0x0(0x10)
	int                                                          MaxHops;                                           // 0x10(0x4)
};


// Size 0x10
struct EventCompanyRankProgressUpdateNotification
{
public:
	struct FName                                                 Company;                                           // 0x0(0x8)
	uint32                                                       Rank;                                              // 0x8(0x4)
	uint32                                                       PreviousRank;                                      // 0xc(0x4)
};


// Size 0x28
struct ProjectileWeaponFireWeaponServerStateNotValid
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	char                                                         ClientWeaponState;                                 // 0x10(0x1)
	char                                                         ServerWeaponState;                                 // 0x11(0x1)
	float                                                        ServerStateTimer;                                  // 0x14(0x4)
	struct FString                                               DamagerType;                                       // 0x18(0x10)
};


// Size 0x20
struct ItemConsumptionStatusChanceEntry
{
public:
	float                                                        Chance;                                            // 0x0(0x4)
	struct Status                                                Status;                                            // 0x8(0x18)
};


// Size 0x50
struct SleepingActionStateParams
{
public:
	char                                                         ControllableObjectType;                            // 0x18(0x1)
	class UClass*                                                BedAnimationId;                                    // 0x20(0x8)
	float                                                        CameraFadeDuration;                                // 0x28(0x4)
	float                                                        TooltipDelay;                                      // 0x2c(0x4)
	float                                                        HealthRegenDelay;                                  // 0x30(0x4)
	float                                                        HealthRegenTickInterval;                           // 0x34(0x4)
	float                                                        HealthRegenTickAmount;                             // 0x38(0x4)
	bool                                                         ShouldHideFirstPersonMesh;                         // 0x3c(0x1)
	char                                                         DockingMode;                                       // 0x3d(0x1)
	float                                                        SleepingSfxDelay;                                  // 0x40(0x4)
	float                                                        SleepingAudioStateDelay;                           // 0x44(0x4)
	bool                                                         NeverFartWhileSleeping;                            // 0x48(0x1)
	float                                                        UnderwaterDepthThreshold;                          // 0x4c(0x4)
};


// Size 0x40
struct ProjectileServiceRecordProjectileHitVolumeImpactRpc
{
public:
	int                                                          ProjectileIndex;                                   // 0x18(0x4)
	struct Guid                                                  TelemetryAttackId;                                 // 0x1c(0x10)
	class AthenaPlayerCharacter*                                 InstigatingPlayerCharacter;                        // 0x30(0x8)
	class Actor*                                                 HitActor;                                          // 0x38(0x8)
};


// Size 0x8
struct EventHealthChangeContinuousStart
{
public:
	float                                                        CurrentHealth;                                     // 0x0(0x4)
	float                                                        ChangeRate;                                        // 0x4(0x4)
};


// Size 0x8
struct MigrationRequestedAutomationEvent
{
public:
	class WaitForTunnelOfTheDamnedMigrationTaleQuestStep*        MigrationStep;                                     // 0x0(0x8)
};


// Size 0x1
struct EnableDefaultGameEventSchedulerGameServerRequestModel
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
};


// Size 0x20
struct StatEvent
{
public:
	class Object*                                                ObjectOfInterest;                                  // 0x10(0x8)
};


// Size 0x38
struct ProjectileLauncherMechanismSourceWatercraftParams
{
public:
	float                                                        ShipBoundsMultiplier;                              // 0x0(0x4)
	float                                                        NearMissChance;                                    // 0x4(0x4)
	struct WeightedProbabilityRangeOfRanges                      NearMissShipOffsetInMetres;                        // 0x8(0x30)
};


// Size 0x1
struct EventQueriedPlayerSpawnLocation
{
public:
	char                                                         CrewSpawnState;                                    // 0x0(0x1)
};


// Size 0x8
struct EventReceiveExplosiveComponentState
{
public:
	class ExplosiveComponent*                                    Source;                                            // 0x0(0x8)
};


// Size 0x10
struct ArmoryChestEquipItemEvent
{
public:
	class UClass*                                                ItemDesc;                                          // 0x0(0x8)
	int                                                          SlotIndex;                                         // 0x8(0x4)
};


// Size 0x28
struct AllPlayersInRangeStatEvent
{
public:
	class Object*                                                ObjectOfInterest;                                  // 0x18(0x8)
};


// Size 0x58
struct QuestTableLimitedQuestTileDetails
{
public:
	struct FName                                                 Usability;                                         // 0x28(0x8)
	int                                                          RemainingUseCount;                                 // 0x30(0x4)
	struct FString                                               StartDateTimeUtc;                                  // 0x38(0x10)
	struct FString                                               EndDateTimeUtc;                                    // 0x48(0x10)
};


// Size 0x10
struct EventPlayerSetFootOnIsland
{
public:
	class Actor*                                                 Player;                                            // 0x0(0x8)
};


// Size 0x50
struct SittingThirdPersonCameraActionStateConstructionInfo
{
public:
	class AthenaSpringArmComponentParams*                        SpringArmParams;                                   // 0x40(0x8)
	float                                                        VerticalOffsetFactorWhenZoomed;                    // 0x48(0x4)
};


// Size 0x8
struct ShipCustomizationChestUnequipShipCustomizationEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x20
struct PuzzleVaultKeyUsedTelemetryEvent
{
public:
	struct Guid                                                  VaultId;                                           // 0x0(0x10)
	struct FName                                                 VaultType;                                         // 0x10(0x8)
	struct FName                                                 VaultKeyUsed;                                      // 0x18(0x8)
};


// Size 0x1
struct IntroVideoEvent_Advance
{
public:
	bool                                                         HasPlayedVideo;                                    // 0x0(0x1)
};


// Size 0x38
struct UndoRepairActionStateSerialisableData
{
public:
	bool                                                         SuccessfulUndo;                                    // 0x30(0x1)
};


// Size 0x60
struct TalkToNPCActionStateConstructionInfo
{
public:
	class Actor*                                                 NPC;                                               // 0x40(0x8)
	class NPCDialogComponent*                                    NPCDialogComp;                                     // 0x48(0x8)
};


// Size 0x8
struct RadialInventorySlotHighlighted
{
public:
	int                                                          SlotIndex;                                         // 0x4(0x4)
};


// Size 0x70
struct AggressiveGhostShipEncounterFormationLocationDesc
{
public:
	float                                                        ForwardOffsetInMetres;                             // 0x0(0x4)
	struct WeightedProbabilityRangeOfRanges                      ForwardOffsetVarianceInMetres;                     // 0x8(0x30)
	float                                                        SidewaysOffsetInMetres;                            // 0x38(0x4)
	struct WeightedProbabilityRangeOfRanges                      SidewaysOffsetVarianceInMetres;                    // 0x40(0x30)
};


// Size 0x14
struct NetAccoladeModel
{
public:
	struct Guid                                                  GoalId;                                            // 0x0(0x10)
	int                                                          Progress;                                          // 0x10(0x4)
};


// Size 0x10
struct QuestTableOpenTelemetryEvent
{
public:
	struct FString                                               SessionId;                                         // 0x0(0x10)
};


// Size 0x40
struct OpenableItemMaterialAnimationReactionComponentAnimationNameAndSfxCueSet
{
public:
	struct FName                                                 Open;                                              // 0x0(0x8)
	struct FName                                                 OpeningFirstTime;                                  // 0x8(0x8)
	class WwiseEvent*                                            OpeningFirstTimeSfx;                               // 0x10(0x8)
	struct FName                                                 Opening;                                           // 0x18(0x8)
	class WwiseEvent*                                            OpeningSfx;                                        // 0x20(0x8)
	struct FName                                                 Closing;                                           // 0x28(0x8)
	class WwiseEvent*                                            ClosingSfx;                                        // 0x30(0x8)
	struct FName                                                 Closed;                                            // 0x38(0x8)
};


// Size 0x28
struct QuestTableTallTaleQuestSelectedEvent
{
public:
	struct FString                                               InstanceId;                                        // 0x0(0x10)
	struct FString                                               ProposalDesc;                                      // 0x10(0x10)
	bool                                                         DiveToDestination;                                 // 0x20(0x1)
};


// Size 0x20
struct SkullOfStormsFireDousedTelemetryEvent
{
public:
	struct Guid                                                  BootyId;                                           // 0x0(0x10)
	struct Guid                                                  ShipCrewId;                                        // 0x10(0x10)
};


// Size 0x20
struct UICompanyState
{
public:
	struct FName                                                 CompanyId;                                         // 0x0(0x8)
	bool                                                         IsLocked;                                          // 0x8(0x1)
	struct FString                                               RibbonImageUrl;                                    // 0x10(0x10)
};


// Size 0x28
struct RiddleQuestGateStartedTelemetryEvent
{
public:
	char                                                         RiddleLocation;                                    // 0x0(0x1)
	char                                                         RiddleActionLocationOffset;                        // 0x1(0x1)
	char                                                         RiddleAction;                                      // 0x2(0x1)
	struct FString                                               LandmarkName;                                      // 0x8(0x10)
	struct FString                                               GateDescription;                                   // 0x18(0x10)
};


// Size 0x4
struct EventAthenaLocalPlayerSetControllerId
{
public:
	int                                                          ControllerId;                                      // 0x0(0x4)
};


// Size 0x20
struct TypedStorageContainerContentTypeSelectorEntry
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	float                                                        Weight;                                            // 0xc(0x4)
	int                                                          MinimumUses;                                       // 0x10(0x4)
	int                                                          MaximumUses;                                       // 0x14(0x4)
	class UClass*                                                ContentSpawnerType;                                // 0x18(0x8)
};


// Size 0x10
struct PlayerSetFootLocationTelemetryEvent
{
public:
	struct FString                                               LocationName;                                      // 0x0(0x10)
};


// Size 0xc
struct EventPlayerConfigSetBooleanValue
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	bool                                                         Value;                                             // 0x8(0x1)
};


// Size 0x10
struct BootFlowErrorOccurredEvent
{
public:
	struct FString                                               ErrorMessage;                                      // 0x0(0x10)
};


// Size 0x10
struct CompletionEventsRemoteServiceModel
{
public:
	TArray<String>                                               CompletionEvents;                                  // 0x0(0x10)
};


// Size 0x20
struct QuestBaseTelemetryFragment
{
public:
	struct Guid                                                  QuestId;                                           // 0x0(0x10)
	struct Guid                                                  VoyageID;                                          // 0x10(0x10)
};


// Size 0x20
struct PlayerChangedLoadoutTelemetryEvent
{
public:
	struct FString                                               EquippedItemType;                                  // 0x0(0x10)
	struct FString                                               EquippedItemName;                                  // 0x10(0x10)
};


// Size 0x20
struct MerchantCrateItemMountedNetworkEvent
{
public:
	class UClass*                                                MountableType;                                     // 0x18(0x8)
};


// Size 0x4
struct AdvanceGameEventSchedulerGameServerRequestModel
{
public:
	int                                                          Seconds;                                           // 0x0(0x4)
};


// Size 0x30
struct TaleQuestSelectWreckLocationTelemetryEvent
{
public:
	struct FString                                               EventIdent;                                        // 0x0(0x10)
	int                                                          NumLocations;                                      // 0x10(0x4)
	int                                                          LocationIndex;                                     // 0x14(0x4)
	int                                                          KeyIndex;                                          // 0x18(0x4)
	TArray<int>                                                  FlagResponses;                                     // 0x20(0x10)
};


// Size 0x40
struct PlayerBuriedItemServiceHaulSizeEntry
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	int                                                          MinHaulSize;                                       // 0x38(0x4)
};


// Size 0x18
struct FallbackSittingDataAsset
{
public:
	class AthenaAnimationSittingDataAsset*                       SittingAnimCorrectionDataAsset;                    // 0x0(0x8)
	float                                                        NormalizedWheelAngle;                              // 0x8(0x4)
	float                                                        MinSliderRange;                                    // 0xc(0x4)
	float                                                        MaxSliderRange;                                    // 0x10(0x4)
};


// Size 0x10
struct RequestPetChestPetLoadoutEvent
{
public:
	TArray<String>                                               Categories;                                        // 0x0(0x10)
};


// Size 0x28
struct RevealableStateChangeServerRpc
{
public:
	class RevealableComponent*                                   RevealableComponent;                               // 0x18(0x8)
	char                                                         RevealState;                                       // 0x20(0x1)
};


// Size 0xc
struct NoValidWreckLocationFoundTelemetryEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
};


// Size 0x20
struct AggressiveGhostShipProjectileCollidedTelemetryEvent
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	struct FString                                               ProjectileType;                                    // 0x10(0x10)
};


// Size 0x10
struct EventCompanyReputationCampaignDetailRequest
{
public:
	struct FString                                               CampaignId;                                        // 0x0(0x10)
};


// Size 0x38
struct PS5IncorrectAchievementsRemovedTelemetry
{
public:
	struct FString                                               UserId;                                            // 0x0(0x10)
	struct FString                                               PirateId;                                          // 0x10(0x10)
	struct FString                                               PsnId;                                             // 0x20(0x10)
	bool                                                         Success;                                           // 0x30(0x1)
	int                                                          AchievementsRemovedCount;                          // 0x34(0x4)
};


// Size 0x8
struct EventShipCreated
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0x8
struct PetChestUnequipPetEvent
{
public:
	class UClass*                                                Desc;                                              // 0x0(0x8)
};


// Size 0x8
struct DefenderLootLevelThreshold
{
public:
	char                                                         LootLevel;                                         // 0x0(0x1)
	int                                                          Threshold;                                         // 0x4(0x4)
};


// Size 0x8
struct KeyTakenEvent
{
public:
	class ItemInfo*                                              KeyTaken;                                          // 0x0(0x8)
};


// Size 0x28
struct SyncLoadPackageTelemetryEvent
{
public:
	struct FString                                               ObjectName;                                        // 0x0(0x10)
	struct FString                                               PackageName;                                       // 0x10(0x10)
	double                                                       DurationSeconds;                                   // 0x20(0x8)
};


// Size 0x10
struct EventCharacterEndTeleport
{
public:
	class Actor*                                                 Character;                                         // 0x0(0x8)
	bool                                                         PlayOnTeleportEndSounds;                           // 0x8(0x1)
	char                                                         TeleportNotificationSource;                        // 0x9(0x1)
};


// Size 0x4
struct RemoveStormGameServerRequestModel
{
public:
	int                                                          ActorId;                                           // 0x0(0x4)
};


// Size 0x20
struct QueryServerMemoryRpc
{
public:
	class AthenaPlayerController*                                AthenaPlayerController;                            // 0x18(0x8)
};


// Size 0x10
struct FailCollisions
{
public:
	class TriggerBase*                                           Collider;                                          // 0x0(0x8)
	char                                                         OverlapFailCondition;                              // 0x8(0x1)
};


// Size 0x8
struct EventPlayerItemEquip
{
public:
	class Actor*                                                 EquippedItem;                                      // 0x0(0x8)
};


// Size 0x18
struct ItemSnapshotExpandedEvent
{
public:
	struct Guid                                                  SnapshotID;                                        // 0x0(0x10)
	class Object*                                                CreatedObject;                                     // 0x10(0x8)
};


// Size 0x40
struct GuildActivityMessage
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct FString                                               CreatedAtUtc;                                      // 0x10(0x10)
	struct FString                                               Type;                                              // 0x20(0x10)
	struct FString                                               payload;                                           // 0x30(0x10)
};


// Size 0x1
struct EventCannonAimingStoppedPitch
{
public:
	bool                                                         IsAtEnd;                                           // 0x0(0x1)
};


// Size 0x4
struct EventSetFishingTensionShake
{
public:
	float                                                        TensionShake;                                      // 0x0(0x4)
};


// Size 0x1c
struct LocationGeneratorSample
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	struct Vector                                                Location;                                          // 0x4(0xc)
	struct Vector                                                Normal;                                            // 0x10(0xc)
};


// Size 0x8
struct EventPlayerControllerUnPossess
{
public:
	class Pawn*                                                  Pawn;                                              // 0x0(0x8)
};


// Size 0x28
struct TunnelOfTheDamnedCancellationReminderNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
	class UClass*                                                Company;                                           // 0x20(0x8)
};


// Size 0x50
struct TakeControlActionStateConstructionInfo
{
public:
	interface                                                    ControlledObject;                                  // 0x40(0x10)
};


// Size 0x70
struct ServerTelemetryFragment
{
public:
	uint32                                                       ServerSequenceId;                                  // 0x0(0x4)
	struct Guid                                                  ServerSessionId;                                   // 0x4(0x10)
	struct FString                                               ServerBuildId;                                     // 0x18(0x10)
	struct FString                                               ServerLocation;                                    // 0x28(0x10)
	struct FString                                               ServerPlayMode;                                    // 0x38(0x10)
	struct FString                                               PlayModeState;                                     // 0x48(0x10)
	struct Guid                                                  PrivateServerId;                                   // 0x58(0x10)
	bool                                                         ServerIsPrivateServer;                             // 0x68(0x1)
	bool                                                         ServerIsActive;                                    // 0x69(0x1)
	bool                                                         ServerIsXboxPadOnlySession;                        // 0x6a(0x1)
};


// Size 0x8
struct WheelEventProperties
{
public:
	float                                                        VelocityThresholdForStopped;                       // 0x0(0x4)
	float                                                        DeadZoneForCenter;                                 // 0x4(0x4)
};


// Size 0x8
struct TutorialEventControlledObjectDestroyed
{
public:
	class TutorialEventControlledObject*                         TutorialEventControlledObject;                     // 0x0(0x8)
};


// Size 0xd0
struct CharacterFootImpactResult
{
public:
	struct HitResult                                             HitResult;                                         // 0x0(0x80)
	char                                                         FootImpactType;                                    // 0x80(0x1)
	struct Transform                                             SocketTransform;                                   // 0x90(0x30)
	struct Vector                                                SocketVelocity;                                    // 0xc0(0xc)
	int                                                          FootIndex;                                         // 0xcc(0x4)
};


// Size 0x20
struct AlignmentOfTypePopUpInformation
{
public:
	struct FString                                               AlignmentKey;                                      // 0x0(0x10)
	class PopUpMessageDesc*                                      PlayerPopUp;                                       // 0x10(0x8)
	class PopUpMessageDesc*                                      ShipPopUp;                                         // 0x18(0x8)
};


// Size 0x28
struct BootyItemInfoMetaWrapper
{
public:
	struct Guid                                                  BootyId;                                           // 0x18(0x10)
};


// Size 0x18
struct CannonAILocation
{
public:
	struct Vector                                                Centre;                                            // 0x0(0xc)
	struct Vector                                                Direction;                                         // 0xc(0xc)
};


// Size 0x20
struct AthenaAnimationObjectJumpingAnimations
{
public:
	class BlendSpace*                                            Start;                                             // 0x0(0x8)
	class BlendSpace*                                            Cycle;                                             // 0x8(0x8)
	class BlendSpace*                                            PreImpact;                                         // 0x10(0x8)
	class BlendSpace*                                            LandLight;                                         // 0x18(0x8)
};


// Size 0x30
struct PeriodicResponse
{
public:
	struct FloatRange                                            PeriodRange;                                       // 0x0(0x10)
	class Object*                                                Owner;                                             // 0x10(0x8)
};


// Size 0x18
struct PlayerHeroStatUpdatedTelemetryEvent
{
public:
	struct FString                                               Result;                                            // 0x0(0x10)
	uint32                                                       Stat;                                              // 0x10(0x4)
};


// Size 0x1
struct UseSoloSeasFlowEvent
{
public:
	bool                                                         IsSoloSeas;                                        // 0x0(0x1)
};


// Size 0x10
struct FlameOfFateAudioParams
{
public:
	class WwiseObjectPoolWrapper*                                SfxPool;                                           // 0x0(0x8)
	class WwiseEvent*                                            FlameOfFateTypeChangedAudioEvent;                  // 0x8(0x8)
};


// Size 0x30
struct StartGameNarrative
{
public:
	struct FString                                               TexturePath;                                       // 0x0(0x10)
	struct FString                                               Text;                                              // 0x10(0x10)
	float                                                        EnterDurationSeconds;                              // 0x20(0x4)
	float                                                        HoldDurationSeconds;                               // 0x24(0x4)
	float                                                        ExitDurationSeconds;                               // 0x28(0x4)
	char                                                         AlignX;                                            // 0x2c(0x1)
	char                                                         AlignY;                                            // 0x2d(0x1)
	char                                                         Size;                                              // 0x2e(0x1)
};


// Size 0x1a0
struct TutorialStepUseMap
{
public:
	class WieldableItem*                                         TutorialMap;                                       // 0x198(0x8)
};


// Size 0x5f0
struct AthenaAnimationWieldedItemStateMachine
{
public:
	char                                                         CurrentState;                                      // 0x0(0x1)
	char                                                         PreviousState;                                     // 0x1(0x1)
	bool                                                         ExpectingTransition;                               // 0x2(0x1)
	class UClass*                                                ContinuousUseInputId;                              // 0x8(0x8)
	class UClass*                                                OutOfContinuousUseInputId;                         // 0x10(0x8)
	class UClass*                                                OneShotUseInputId;                                 // 0x18(0x8)
	bool                                                         OneShotIsAlternate;                                // 0x20(0x1)
	bool                                                         ContinuousIsAlternate;                             // 0x21(0x1)
	char                                                         OneShotAnimationVariant;                           // 0x22(0x1)
	bool                                                         IdleIsAlternate;                                   // 0x23(0x1)
	bool                                                         UsePrimaryContinuousAnimations;                    // 0x24(0x1)
	bool                                                         UsePrimaryContinuousOutOfAnimations;               // 0x25(0x1)
	bool                                                         UsePrimaryOneShotAnimations;                       // 0x26(0x1)
	class AnimSequence*                                          LastValidAnimSequence;                             // 0x50(0x8)
	class BlendSpace1D*                                          LastValidBlendspace;                               // 0x58(0x8)
	class Actor*                                                 PreviousWieldedItem;                               // 0x60(0x8)
	bool                                                         DuplicateTransition;                               // 0x68(0x1)
	struct FName                                                 WieldSockets;                                      // 0x6c(0x8)
};


// Size 0x40
struct ThrowGrenadeRpc
{
public:
	struct Vector                                                RelativeLocalThrowLocation;                        // 0x18(0xc)
	struct Rotator                                               LocalLaunchAngle;                                  // 0x24(0xc)
	float                                                        LocalLaunchSpeed;                                  // 0x30(0x4)
	struct Vector                                                LocalWielderVelocity;                              // 0x34(0xc)
};


// Size 0x28
struct EventGameNarrationClientNotificationMessage
{
public:
	char                                                         NotificationType;                                  // 0x0(0x1)
	struct FString                                               Sender;                                            // 0x8(0x10)
	struct FString                                               Text;                                              // 0x18(0x10)
};


// Size 0x10
struct DestroyingUnsafeWreckTelemetryEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	bool                                                         IsCustomWreck;                                     // 0xc(0x1)
};


// Size 0x40
struct PremiumShopOfferItem
{
public:
	bool                                                         IsSuperPremium;                                    // 0x0(0x1)
	struct FText                                                 LockedReason;                                      // 0x8(0x38)
};


// Size 0x60
struct ClientProjectileHitRegInfoTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	struct FString                                               ProjectileId;                                      // 0x10(0x10)
	struct FString                                               HitObjectId;                                       // 0x20(0x10)
	struct FString                                               HitObjectType;                                     // 0x30(0x10)
	struct FString                                               HitActorName;                                      // 0x40(0x10)
	struct Vector                                                HitLocation;                                       // 0x50(0xc)
	bool                                                         IsHitScanShot;                                     // 0x5c(0x1)
};


// Size 0x20
struct ShipCustomizationCategorySettings
{
public:
	class UClass*                                                ShipCustomizationCategory;                         // 0x0(0x8)
	TArray<class Class*>                                         EligibleShipSizes;                                 // 0x8(0x10)
	bool                                                         IsTinSessionOnly;                                  // 0x18(0x1)
};


// Size 0x40
struct NPCOnSurfaceCannonManagerCannon
{
public:
	class Cannon*                                                Cannon;                                            // 0x0(0x8)
	struct Transform                                             NearestLocation;                                   // 0x10(0x30)
};


// Size 0x50
struct ServerMeleeHitRegInfoTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	int                                                          NumHits;                                           // 0x10(0x4)
	struct FString                                               HitObjectId;                                       // 0x18(0x10)
	struct FString                                               HitObjectType;                                     // 0x28(0x10)
	struct FString                                               HitActorName;                                      // 0x38(0x10)
	bool                                                         IsDamageBlocked;                                   // 0x48(0x1)
	bool                                                         IsDamageConfirmed;                                 // 0x49(0x1)
	bool                                                         HasPerformedKnockBack;                             // 0x4a(0x1)
	bool                                                         HasPerformedStun;                                  // 0x4b(0x1)
};


// Size 0x10
struct EventAISenseAnimationChange
{
public:
	char                                                         ActiveSenseState;                                  // 0x0(0x1)
	class AthenaCharacter*                                       Owner;                                             // 0x8(0x8)
};


// Size 0x70
struct CloudVisualParameters
{
public:
	bool                                                         RenderInMainPass;                                  // 0x0(0x1)
	struct Vector                                                ScalingVector;                                     // 0x4(0xc)
	struct Vector2D                                              BillboardScale;                                    // 0x10(0x8)
	struct Vector2D                                              BillboardRandomScale;                              // 0x18(0x8)
	struct Vector2D                                              BillboardRearCutOff;                               // 0x20(0x8)
	struct Vector2D                                              BillboardForeCutOff;                               // 0x28(0x8)
	struct Vector2D                                              BillboardSink;                                     // 0x30(0x8)
	float                                                        BillboardScaleAlphaDependence;                     // 0x38(0x4)
	float                                                        BillboardRotationRate;                             // 0x3c(0x4)
	float                                                        DistanceFadeExponent;                              // 0x40(0x4)
	float                                                        TurbulenceScale;                                   // 0x44(0x4)
	float                                                        TurbulenceStrength;                                // 0x48(0x4)
	float                                                        FluffCullDistance;                                 // 0x4c(0x4)
	class MaterialInterface*                                     MaterialTemplatePointCloudSolid;                   // 0x50(0x8)
	class MaterialInterface*                                     MaterialTemplatePointCloudFluffy;                  // 0x58(0x8)
	class MaterialInterface*                                     MaterialTemplateStreetCloudSolid;                  // 0x60(0x8)
	class MaterialInterface*                                     MaterialTemplateStreetCloudFluffy;                 // 0x68(0x8)
};


// Size 0x50
struct ProjectileAim
{
public:
	struct Vector                                                AimDirection;                                      // 0x0(0xc)
	struct Vector                                                AimPosition;                                       // 0xc(0xc)
	class PrimitiveComponent*                                    AimBase;                                           // 0x18(0x8)
	struct Transform                                             AimBaseTransform;                                  // 0x20(0x30)
};


// Size 0x28
struct BakedInvasionTunnelSceneryTileInstances
{
public:
	class StaticMesh*                                            MeshType;                                          // 0x0(0x8)
	TArray<class MaterialInterface*>                             MeshMaterials;                                     // 0x8(0x10)
	TArray<struct Transform>                                     Instances;                                         // 0x18(0x10)
};


// Size 0x4
struct RadialInventoryEvent
{
public:
	int                                                          RadialIdentifier;                                  // 0x0(0x4)
};


// Size 0x40
struct ClientStartCrewMatchmakingTelemetryEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct FString                                               SessionType;                                       // 0x10(0x10)
	struct Guid                                                  MatchmakingAttemptId;                              // 0x20(0x10)
	struct FString                                               ActiveExperiments;                                 // 0x30(0x10)
};


// Size 0x20
struct MerchantQuestContractCompleteNetworkEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
};


// Size 0x38
struct HideoutRevealedEvent
{
public:
	struct FText                                                 HideoutName;                                       // 0x0(0x38)
};


// Size 0x1
struct EnableMovementDuringRadialEvent
{
public:
	bool                                                         EnableMovementDuringRadial;                        // 0x0(0x1)
};


// Size 0x18
struct RewardRequestSucceededEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct FName                                                 RewardId;                                          // 0x10(0x8)
};


// Size 0x10
struct NotesRemoteServiceModel
{
public:
	TArray<struct Guid>                                          Notes;                                             // 0x0(0x10)
};


// Size 0x58
struct CrewShipSessionData
{
public:
	bool                                                         IsCaptainedSession;                                // 0x0(0x1)
	struct Guid                                                  ShipId;                                            // 0x4(0x10)
	struct FString                                               CaptainPirateId;                                   // 0x18(0x10)
	struct UniqueNetIdRepl                                       CaptainUserId;                                     // 0x28(0x18)
	bool                                                         CaptainIsPresent;                                  // 0x40(0x1)
	struct Guid                                                  GuildId;                                           // 0x44(0x10)
};


// Size 0x2
struct WreckQueryPriorityEntry
{
public:
	char                                                         FlagIdent;                                         // 0x0(0x1)
	char                                                         BlockType;                                         // 0x1(0x1)
};


// Size 0x10
struct ProjectileWeaponQuickSwitchTimingTelemetryEvent
{
public:
	float                                                        OtherWeaponFireTimestamp;                          // 0x0(0x4)
	float                                                        WorldTimeSeconds;                                  // 0x4(0x4)
	float                                                        MaxTimeDiffAllowed;                                // 0x8(0x4)
	bool                                                         HasCancelledEquipAnim;                             // 0xc(0x1)
};


// Size 0x20
struct CannonProjectileKillEvent
{
public:
	class Actor*                                                 HitActor;                                          // 0x0(0x8)
	struct Guid                                                  AttackId;                                          // 0x8(0x10)
	class UClass*                                                ProjectileId;                                      // 0x18(0x8)
};


// Size 0x58
struct WaitingToSpawnActionStateConstructionInfo
{
public:
	class Actor*                                                 StartSpot;                                         // 0x40(0x8)
	int                                                          StreamOutLevel;                                    // 0x48(0x4)
	int                                                          StreamInLevel;                                     // 0x4c(0x4)
	char                                                         Reason;                                            // 0x50(0x1)
	bool                                                         ReceiveLoadout;                                    // 0x51(0x1)
	bool                                                         ReceiveEntitlement;                                // 0x52(0x1)
	bool                                                         WaitForRelevancy;                                  // 0x53(0x1)
};


// Size 0x18
struct UpdateRadialIconUrls
{
public:
	TArray<String>                                               ItemUrlCacheList;                                  // 0x8(0x10)
};


// Size 0x8
struct ShipCustomizationChestUnsaveFromLoadoutEvent
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
};


// Size 0x8
struct EventDAASItemAnimationsLoaded
{
public:
	class UClass*                                                ItemId;                                            // 0x0(0x8)
};


// Size 0x18
struct RequestOpenPossessionsChestEvent
{
public:
	char                                                         PossessionsChestType;                              // 0x0(0x1)
	TArray<String>                                               Categories;                                        // 0x8(0x10)
};


// Size 0x18
struct CrewScore
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	int                                                          Score;                                             // 0x10(0x4)
	char                                                         ScoreId;                                           // 0x14(0x1)
};


// Size 0x8
struct EventShipStuck
{
public:
	class Actor*                                                 Ship;                                              // 0x0(0x8)
};


// Size 0xc
struct AimSensitivitySettingParams
{
public:
	struct FloatInterval                                         Range;                                             // 0x0(0x8)
	float                                                        Default;                                           // 0x8(0x4)
};


// Size 0x30
struct PlayCutsceneNetworkEvent
{
public:
	class CutsceneComponent*                                     TargetComponent;                                   // 0x18(0x8)
	int                                                          GroupIdx;                                          // 0x20(0x4)
	int                                                          PoolIdx;                                           // 0x24(0x4)
	int                                                          VariantIdx;                                        // 0x28(0x4)
};


// Size 0x90
struct AchievementSailThroughStormAtNightWithLightsOff
{
public:
	uint32                                                       RequiredTravelDistance;                            // 0x0(0x4)
	class Ship*                                                  Ship;                                              // 0x60(0x8)
};


// Size 0x20
struct PlayerBriggedEndTelemetryEvent
{
public:
	struct Guid                                                  BriggedId;                                         // 0x0(0x10)
	struct DateTime                                              BriggedStartDateTime;                              // 0x10(0x8)
	char                                                         ReleaseReason;                                     // 0x18(0x1)
};


// Size 0xc
struct CurseShipCannonsEvent
{
public:
	float                                                        PitchAngle;                                        // 0x0(0x4)
	float                                                        YawAngle;                                          // 0x4(0x4)
	float                                                        BlendTime;                                         // 0x8(0x4)
};


// Size 0x60
struct AddWorldEventGameServerRequestModel
{
public:
	struct FString                                               EventType;                                         // 0x0(0x10)
	map                                                          Parameters;                                        // 0x10(0x50)
};


// Size 0x20
struct ChargeRequest
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	struct Guid                                                  TelemetryChargeId;                                 // 0x8(0x10)
	struct ProjectileTimeStamp                                   TimeStamp;                                         // 0x18(0x8)
};


// Size 0x18
struct PlayerBuriedItemServiceMapBundlePickedUpEvent
{
public:
	struct FString                                               PlayerName;                                        // 0x0(0x10)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x10(0x8)
};


// Size 0x30
struct PlayerHealthChangeTelemetryEvent
{
public:
	struct Guid                                                  AttackId;                                          // 0x0(0x10)
	float                                                        CurrentHealth;                                     // 0x10(0x4)
	float                                                        PreviousHealth;                                    // 0x14(0x4)
	float                                                        HealthDelta;                                       // 0x18(0x4)
	char                                                         Reason;                                            // 0x1c(0x1)
	uint32                                                       PossessCount;                                      // 0x20(0x4)
	double                                                       SecondsSinceSpawned;                               // 0x28(0x8)
};


// Size 0x1
struct RequestOpenMultiShopSelectionScreenEvent
{
public:
	char                                                         MultiShopTypeValue;                                // 0x0(0x1)
};


// Size 0x20
struct PlayerPositionTelemetryFragment
{
public:
	struct Vector                                                Position;                                          // 0x0(0xc)
	struct FString                                               WorldLocationName;                                 // 0x10(0x10)
};


// Size 0x40
struct UnequipAllTrinketsOfClassOnServerLoadoutRpc
{
public:
	struct NetSubObjectPtr                                       TrinketLoadoutComponent;                           // 0x18(0x14)
	class UClass*                                                TrinketToUnequip;                                  // 0x30(0x8)
	bool                                                         ShouldVerifyCaptainsPermissions;                   // 0x38(0x1)
};


// Size 0x48
struct AthenaAnimationPulleyControlAnimData
{
public:
	class AnimSequence*                                          Entry;                                             // 0x0(0x8)
	class AnimSequence*                                          IntoLeft;                                          // 0x8(0x8)
	class AnimSequence*                                          IdleLeft;                                          // 0x10(0x8)
	class AnimSequence*                                          ActionLeft;                                        // 0x18(0x8)
	class AnimSequence*                                          OutOfLeft;                                         // 0x20(0x8)
	class AnimSequence*                                          IntoRight;                                         // 0x28(0x8)
	class AnimSequence*                                          IdleRight;                                         // 0x30(0x8)
	class AnimSequence*                                          ActionRight;                                       // 0x38(0x8)
	class AnimSequence*                                          OutOfRight;                                        // 0x40(0x8)
};


// Size 0x28
struct ReservedCrewSlotData
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	char                                                         Platform;                                          // 0x20(0x1)
};


// Size 0x18
struct RequestEmoteSelectEquipEvent
{
public:
	int                                                          Index;                                             // 0x0(0x4)
	struct FString                                               ItemDesc;                                          // 0x8(0x10)
};


// Size 0x18
struct WwiseEventsIcon
{
public:
	class Texture2D*                                             IconTexture;                                       // 0x0(0x8)
	TArray<class WwiseEvent*>                                    WwiseEvents;                                       // 0x8(0x10)
};


// Size 0x20
struct AthenaAnimationObjectActionOneShotPitchOverride
{
public:
	TArray<class BlendSpace1D*>                                  MainAction;                                        // 0x0(0x10)
	TArray<class BlendSpace1D*>                                  AlternateAction;                                   // 0x10(0x10)
};


// Size 0x20
struct RequestCompanyShopOffersEvent
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
	struct FString                                               CompanyId;                                         // 0x10(0x10)
};


// Size 0x38
struct PirateSelectedTelemetryEvent
{
public:
	struct FString                                               PirateEthnicity;                                   // 0x0(0x10)
	struct FString                                               PirateGender;                                      // 0x10(0x10)
	struct FString                                               HighestWeightedBodyShape;                          // 0x20(0x10)
	float                                                        PirateAge;                                         // 0x30(0x4)
	int                                                          PirateGenerationRequestCount;                      // 0x34(0x4)
};


// Size 0x8
struct StandardRudderDynamicsParameters
{
public:
	float                                                        SteeringBoostMultiplier;                           // 0x0(0x4)
	float                                                        RudderBrakeAmplitude;                              // 0x4(0x4)
};


// Size 0x8
struct AshenLordNewHealthStageTelemetryEvent
{
public:
	uint32                                                       CurrentStage;                                      // 0x0(0x4)
	uint32                                                       NumStages;                                         // 0x4(0x4)
};


// Size 0xa8
struct PopUpNotificationUIEvent
{
public:
	struct FString                                               BackgroundImage;                                   // 0x0(0x10)
	struct FString                                               ForegroundImage;                                   // 0x10(0x10)
	struct FText                                                 Text;                                              // 0x20(0x38)
	struct FString                                               AudioSfxEventName;                                 // 0x58(0x10)
	struct FString                                               AudioEventName;                                    // 0x68(0x10)
	struct FString                                               AudioSwitchName;                                   // 0x78(0x10)
	struct FString                                               AudioSwitchValue;                                  // 0x88(0x10)
	struct FString                                               StyleModifier;                                     // 0x98(0x10)
};


// Size 0x18
struct AthenaAnimationWheelTurnsAnimData
{
public:
	class AnimSequence*                                          Turn;                                              // 0x0(0x8)
	class AnimSequence*                                          TurnFast;                                          // 0x8(0x8)
	class AnimSequence*                                          TurnFast180;                                       // 0x10(0x8)
};


// Size 0x1
struct UseMaidenVoyageFlowEvent
{
public:
	bool                                                         IsNewPlayer;                                       // 0x0(0x1)
};


// Size 0x1
struct EventApplySingleStickSettings
{
public:
	char                                                         UseSingleStick;                                    // 0x0(0x1)
};


// Size 0x18
struct EventTakenControlOfObject
{
public:
	interface                                                    ControlledObject;                                  // 0x0(0x10)
	char                                                         ControllableType;                                  // 0x10(0x1)
};


// Size 0x4
struct EventPlayerNetworkPerformance
{
public:
	bool                                                         IsPerformanceBad;                                  // 0x0(0x1)
	bool                                                         HasHighPing;                                       // 0x1(0x1)
	bool                                                         HasHighPingVariability;                            // 0x2(0x1)
	bool                                                         HasHighPacketLoss;                                 // 0x3(0x1)
};


// Size 0x20
struct EventApplyStatusShipCurse
{
public:
	struct Status                                                Status;                                            // 0x8(0x18)
};


// Size 0x28
struct CloudDomeParameters
{
public:
	float                                                        Width;                                             // 0x0(0x4)
	float                                                        DomeToTileProportion;                              // 0x4(0x4)
	float                                                        Height;                                            // 0x8(0x4)
	float                                                        HighPressureExtraHeight;                           // 0xc(0x4)
	float                                                        FadeProportion;                                    // 0x10(0x4)
	float                                                        DistanceCurvatureOvershoot;                        // 0x14(0x4)
	float                                                        DistantStreetCloudRotation;                        // 0x18(0x4)
	float                                                        ProportionOfCloudDomeToAlwaysUpdate;               // 0x1c(0x4)
	int                                                          SplitRemainingCloudsOverThisManyUpdates;           // 0x20(0x4)
	bool                                                         UpdateClosestProportionEveryOtherFrame;            // 0x24(0x1)
	bool                                                         EnableDistanceCurvature;                           // 0x25(0x1)
};


// Size 0xa0
struct WieldableBookNamedWidgetText
{
public:
	struct FName                                                 TextKey;                                           // 0x80(0x8)
	char                                                         WidgetVisibilityGroup;                             // 0x88(0x1)
	struct LinearColor                                           TextColour;                                        // 0x8c(0x10)
	char                                                         BlendType;                                         // 0x9c(0x1)
};


// Size 0x10
struct InitialShipSpawnLocations
{
public:
	TArray<class ShipSpawnLocation*>                             ShipSpawnLocations;                                // 0x0(0x10)
};


// Size 0x2
struct QuestTableExperiencesRequestModel
{
public:
	char                                                         PlayModeVariant;                                   // 0x0(0x1)
	char                                                         ImageResolution;                                   // 0x1(0x1)
};


// Size 0x20
struct IslandMaterialZoneStatusMapping
{
public:
	class PhysicalMaterial*                                      SurfaceMaterial;                                   // 0x0(0x8)
	bool                                                         ActivateOnStart;                                   // 0x8(0x1)
	TArray<struct Status>                                        Status;                                            // 0x10(0x10)
};


// Size 0x28
struct AddAITypeSpawnRuleGameServerRequestModel
{
public:
	struct FString                                               TypeName;                                          // 0x0(0x10)
	struct FString                                               Region;                                            // 0x10(0x10)
	bool                                                         Enabled;                                           // 0x20(0x1)
};


// Size 0x10
struct AIRowboatEncounterParamsSpawnerData
{
public:
	class AISpawner*                                             Spawner;                                           // 0x0(0x8)
	struct FName                                                 SpawnType;                                         // 0x8(0x8)
};


// Size 0x38
struct OneShotToggleCollisionAudioParams
{
public:
	class WwiseEvent*                                            OverlapBeginAudioEvent;                            // 0x0(0x8)
	class WwiseEvent*                                            OverlapEndAudioEvent;                              // 0x8(0x8)
	class WwiseObjectPoolWrapper*                                OverlapEventAudioPool;                             // 0x10(0x8)
	struct WwiseEmitter                                          OverlapEmitter;                                    // 0x18(0x20)
};


// Size 0x8
struct EventPlayerFellDistance
{
public:
	float                                                        FallDamage;                                        // 0x0(0x4)
	float                                                        LandingSpeed;                                      // 0x4(0x4)
};


// Size 0x10
struct EDTelemetryEvent
{
public:
	struct FString                                               Description;                                       // 0x0(0x10)
};


// Size 0x20
struct CompanyShopSkin
{
public:
	struct StringAssetReference                                  TopBanner;                                         // 0x0(0x10)
	struct StringAssetReference                                  BottomBanner;                                      // 0x10(0x10)
};


// Size 0x30
struct NPCDialogExecuteOptionOnServerRpc
{
public:
	class NPCDialogComponent*                                    DialogComponent;                                   // 0x18(0x8)
	int                                                          OverrideDataIndex;                                 // 0x20(0x4)
	int                                                          CurrentDialog;                                     // 0x24(0x4)
	int                                                          CurrentOption;                                     // 0x28(0x4)
};


// Size 0xd8
struct FishingFishSelector
{
public:
	class AvailableFishForSpawning*                              AvailableFish;                                     // 0x0(0x8)
	TArray<class FishSpawnParamsDataAsset*>                      SelectedFishCache;                                 // 0xb0(0x10)
	class Object*                                                Root;                                              // 0xc0(0x8)
	class FishSpawnParamsDataAsset*                              GatheredConditions;                                // 0xc8(0x8)
	class VoyageLocationOnlyNamedIslandListDataAsset*            GatheredIsland;                                    // 0xd0(0x8)
};


// Size 0x10
struct ClientNPCDialogOptionUsedTelemetryEvent
{
public:
	struct FString                                               DialogOptionName;                                  // 0x0(0x10)
};


// Size 0x40
struct ContestMapCrewData
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	bool                                                         IsLocalCrew;                                       // 0x10(0x1)
	class Texture*                                               CrewIcon;                                          // 0x18(0x8)
	class Texture*                                               ScoreIcon;                                         // 0x20(0x8)
	class Texture*                                               UnderlineIcon;                                     // 0x28(0x8)
	struct FName                                                 CrewName;                                          // 0x30(0x8)
	int                                                          Score;                                             // 0x38(0x4)
};


// Size 0x40
struct CanShowTertiaryActionButton
{
public:
	bool                                                         CanShow;                                           // 0x4(0x1)
	struct FText                                                 Text;                                              // 0x8(0x38)
};


// Size 0x68
struct EmissaryProgressUpdatedNotificationUIEvent
{
public:
	float                                                        Old;                                               // 0x0(0x4)
	float                                                        New;                                               // 0x4(0x4)
	struct FString                                               CompanyId;                                         // 0x8(0x10)
	struct FString                                               RankIncreaseAudioCue;                              // 0x18(0x10)
	struct FString                                               RankIncreaseStopAudioCue;                          // 0x28(0x10)
	struct FString                                               RankLevelUpAudioCue;                               // 0x38(0x10)
	struct FString                                               RankTriggerAudioCue;                               // 0x48(0x10)
	struct FString                                               RankLevelUpMusicCue;                               // 0x58(0x10)
};


// Size 0x28
struct EmissaryCompanyQuestIcons
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct StringAssetReference                                  Background;                                        // 0x8(0x10)
	TArray<struct StringAssetReference>                          Icons;                                             // 0x18(0x10)
};


// Size 0x10
struct ExpireCustomWreckEvent
{
public:
	struct Guid                                                  CrewOwner;                                         // 0x0(0x10)
};


// Size 0x38
struct ContestCrewManagementMemberData
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	char                                                         Muted;                                             // 0x20(0x1)
	struct FString                                               CrewIcon;                                          // 0x28(0x10)
};


// Size 0x20
struct EventWieldableItemDropped
{
public:
	class UClass*                                                DroppedItemCategory;                               // 0x0(0x8)
	class ItemInfo*                                              DroppedItemInfo;                                   // 0x8(0x8)
	class Actor*                                                 ContactActor;                                      // 0x10(0x8)
	float                                                        DropDistance;                                      // 0x18(0x4)
	bool                                                         InDeepWater;                                       // 0x1c(0x1)
};


// Size 0x8
struct RequestCreateItemPreviewEvent
{
public:
	int                                                          ResolutionX;                                       // 0x0(0x4)
	int                                                          ResolutionY;                                       // 0x4(0x4)
};


// Size 0xc
struct NPCDemandMultiplier
{
public:
	struct FName                                                 NPCId;                                             // 0x0(0x8)
	float                                                        Multiplier;                                        // 0x8(0x4)
};


// Size 0x10
struct ReapersTributeShipHandInVotesCancelledEvent
{
public:
	TArray<class PlayerState*>                                   OldVoters;                                         // 0x0(0x10)
};


// Size 0x20
struct ShowJupiterAccountLinkingConfirmationPrompt
{
public:
	struct FString                                               JupiterUsername;                                   // 0x0(0x10)
	struct FString                                               XboxUsername;                                      // 0x10(0x10)
};


// Size 0x10
struct PocketWatchTickAnimation
{
public:
	class CurveFloat*                                            AnimationCurve;                                    // 0x0(0x8)
	class WwiseEvent*                                            AnimationSound;                                    // 0x8(0x8)
};


// Size 0x10
struct UIAudioCueEvent
{
public:
	struct FString                                               CueKey;                                            // 0x0(0x10)
};


// Size 0x1
struct ServerContestStateUpdateTelemetryEvent
{
public:
	char                                                         CurrentContestState;                               // 0x0(0x1)
};


// Size 0x30
struct NotesManagementRemoteServiceNoteTextModel
{
public:
	struct FString                                               Locale;                                            // 0x0(0x10)
	struct FString                                               Title;                                             // 0x10(0x10)
	struct FString                                               Text;                                              // 0x20(0x10)
};


// Size 0x1
struct EventInGameBlurRequest
{
public:
	bool                                                         ShouldBlurGame;                                    // 0x0(0x1)
};


// Size 0x18
struct FogTypeToAudio
{
public:
	char                                                         FogBankType;                                       // 0x0(0x1)
	class WwiseEvent*                                            FogMusicPlayEvent;                                 // 0x8(0x8)
	class WwiseEvent*                                            FogMusicStopEvent;                                 // 0x10(0x8)
};


// Size 0x38
struct TaleQuestNotificationStepEvent
{
public:
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x18(0x8)
	struct NetActorPtr                                           DiscoveringPlayerStateNetPtr;                      // 0x20(0x14)
};


// Size 0x20
struct ShipCurseVFXTemplate
{
public:
	class UClass*                                                ActorClass;                                        // 0x0(0x8)
	class ParticleSystem*                                        Template;                                          // 0x8(0x8)
	struct FString                                               SocketNameSubstring;                               // 0x10(0x10)
};


// Size 0x10
struct EventMastDamageLevelChanged
{
public:
	class Actor*                                                 Mast;                                              // 0x0(0x8)
	int                                                          DamageLevel;                                       // 0x8(0x4)
};


// Size 0x68
struct PeriodObjectiveCompleteMessage
{
public:
	struct FString                                               PeriodId;                                          // 0x0(0x10)
	struct DateTime                                              PeriodStartDateTime;                               // 0x10(0x8)
	struct DateTime                                              PeriodEndDateTime;                                 // 0x18(0x8)
	struct FString                                               PeriodObjectiveId;                                 // 0x20(0x10)
	struct FString                                               UserId;                                            // 0x30(0x10)
	TArray<struct Guid>                                          PlayerGameIds;                                     // 0x40(0x10)
	bool                                                         HasReward;                                         // 0x50(0x1)
	struct FString                                               RewardId;                                          // 0x58(0x10)
};


// Size 0x20
struct GuildEnrolledShipModel
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct Guid                                                  ShipId;                                            // 0x10(0x10)
};


// Size 0x20
struct CrewLeftAllianceTelemetryEvent
{
public:
	struct Guid                                                  AllianceId;                                        // 0x0(0x10)
	struct Guid                                                  LeavingCrewSessionId;                              // 0x10(0x10)
};


// Size 0xa8
struct CreatePirateRequestEvent
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct Guid                                                  RequestID;                                         // 0x18(0x10)
	struct PirateDescription                                     Description;                                       // 0x28(0x80)
};


// Size 0x20
struct QuestTableInfoTileDetails
{
public:
	struct FString                                               TileId;                                            // 0x0(0x10)
	struct FString                                               InfoTipId;                                         // 0x10(0x10)
};


// Size 0x10
struct AnimationLODParameters
{
public:
	int                                                          MaxIKEntities;                                     // 0x0(0x4)
	float                                                        MaxIKDistance;                                     // 0x4(0x4)
	float                                                        MinLODSolverDistance;                              // 0x8(0x4)
	float                                                        MinFootPlantingActiveDistance;                     // 0xc(0x4)
};


// Size 0x48
struct CargoRunQuestDescDataNPCNameLocationHintEntry
{
public:
	struct FString                                               NPCNameSubstring;                                  // 0x0(0x10)
	struct FText                                                 LocationHint;                                      // 0x10(0x38)
};


// Size 0x4
struct IntentSignChangedEvent
{
public:
	int                                                          NewIntentSign;                                     // 0x0(0x4)
};


// Size 0x14
struct ContestParticipantData
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	int                                                          NumberOfCrewMembers;                               // 0x10(0x4)
};


// Size 0x28
struct QuestTableQuestTravelSettings
{
public:
	bool                                                         CanDive;                                           // 0x0(0x1)
	bool                                                         CanSail;                                           // 0x1(0x1)
	TArray<struct Text>                                          DiveDescriptions;                                  // 0x8(0x10)
	TArray<struct Text>                                          SailDescriptions;                                  // 0x18(0x10)
};


// Size 0x10
struct CrewMemberData
{
public:
	bool                                                         Vote;                                              // 0x0(0x1)
	char                                                         NumVotes;                                          // 0x1(0x1)
	char                                                         BrigState;                                         // 0x2(0x1)
	class PlayerState*                                           PlayerState;                                       // 0x8(0x8)
};


// Size 0x1c
struct NoValidWreckLocationFoundEvent
{
public:
	struct Vector                                                Location;                                          // 0x0(0xc)
	struct Guid                                                  CrewId;                                            // 0xc(0x10)
};


// Size 0x40
struct HitRegCapsuleTargetData
{
public:
	int                                                          CapsuleOwnerId;                                    // 0x0(0x4)
	struct FString                                               OwnerName;                                         // 0x8(0x10)
	struct Vector                                                Center;                                            // 0x18(0xc)
	float                                                        HalfHeight;                                        // 0x24(0x4)
	float                                                        Radius;                                            // 0x28(0x4)
	struct Quat                                                  Rotation;                                          // 0x30(0x10)
};


// Size 0x10
struct AggressiveGhostShipLocationEntryDesc
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	int                                                          MaxNumShips;                                       // 0x4(0x4)
	class AggressiveGhostShipLocationDataAsset*                  Location;                                          // 0x8(0x8)
};


// Size 0x18
struct MerchantQuestRandomRequiredItemsEntry
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	int                                                          MinNum;                                            // 0x4(0x4)
	int                                                          MaxNum;                                            // 0x8(0x4)
	class MerchantQuestItemData*                                 RequiredItem;                                      // 0x10(0x8)
};


// Size 0x150
struct OrbOfSecretsActionRuleVerbiage
{
public:
	struct FText                                                 PickUpOrbOfSecretsVerbiage;                        // 0x0(0x38)
	struct FText                                                 OrbOfSecretsIsProtectedVerbiage;                   // 0x38(0x38)
	struct FText                                                 PrepareTempleRitualVerbiage;                       // 0x70(0x38)
	struct FText                                                 CompleteTempleRitualVerbiage;                      // 0xa8(0x38)
	struct FText                                                 ProtectOrbOfSecretsVerbiage;                       // 0xe0(0x38)
	struct FText                                                 ReapersShipOutOfRangeVerbiage;                     // 0x118(0x38)
};


// Size 0x10
struct MeshMemoryConstraintShipPartCannotSetAsShipIsUnsafe
{
public:
	struct FString                                               ShipPartName;                                      // 0x0(0x10)
};


// Size 0x20
struct PlayerChangedLoadoutEvent
{
public:
	struct FString                                               EquippedType;                                      // 0x0(0x10)
	struct FString                                               EquippedName;                                      // 0x10(0x10)
};


// Size 0x10
struct FakedBuoyancyParams
{
public:
	float                                                        PitchSpeed;                                        // 0x0(0x4)
	float                                                        MaxPitch;                                          // 0x4(0x4)
	float                                                        RollSpeed;                                         // 0x8(0x4)
	float                                                        MaxRoll;                                           // 0xc(0x4)
};


// Size 0x8
struct NetPositionErrorTolerance
{
public:
	float                                                        ZDistance;                                         // 0x0(0x4)
	float                                                        XYDistance;                                        // 0x4(0x4)
};


// Size 0x1
struct TransitionLadderEndEvent
{
public:
	char                                                         LadderTransitionMode;                              // 0x0(0x1)
};


// Size 0x40
struct ClientStartServerMatchmakingTelemetryEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct FString                                               SessionType;                                       // 0x10(0x10)
	struct Guid                                                  MatchmakingAttemptId;                              // 0x20(0x10)
	struct FString                                               ActiveExperiments;                                 // 0x30(0x10)
};


// Size 0x10
struct MastDamageStateChangedEvent
{
public:
	char                                                         NewMastDamageState;                                // 0x0(0x1)
	class Actor*                                                 Mast;                                              // 0x8(0x8)
};


// Size 0x44
struct PlayerBuriedItemsMapTakenFromStoreTelemetryEvent
{
public:
	struct Guid                                                  MapBundleId;                                       // 0x0(0x10)
	struct Guid                                                  TakingCrewId;                                      // 0x10(0x10)
	struct Guid                                                  TakingCrewSessionId;                               // 0x20(0x10)
	struct Guid                                                  MapID;                                             // 0x30(0x10)
	bool                                                         IsPlayerGenerated;                                 // 0x40(0x1)
};


// Size 0x20
struct BoxedRpcDiscardVoyage
{
public:
	class UClass*                                                VoyageToDiscard;                                   // 0x18(0x8)
};


// Size 0xa0
struct PiratePurchaseClaims
{
public:
	map                                                          CompanyLevels;                                     // 0x0(0x50)
	map                                                          Emblems;                                           // 0x50(0x50)
};


// Size 0x10
struct StateChangeCoordination
{
public:
	class Actor*                                                 OtherCutscene;                                     // 0x0(0x8)
	char                                                         OtherCutsceneStateChangeCondition;                 // 0x8(0x1)
	char                                                         CutsceneStateChangeResponse;                       // 0x9(0x1)
};


// Size 0x10
struct BootFlowSetEngagementMessage
{
public:
	struct FString                                               Message;                                           // 0x0(0x10)
};


// Size 0x38
struct AshenWindsSkullMissfireParams
{
public:
	float                                                        ChargeThreshold;                                   // 0x0(0x4)
	struct FloatRange                                            SecondsBetweenMissfires;                           // 0x4(0x10)
	struct FloatRange                                            MissfireDurationInSeconds;                         // 0x14(0x10)
	class WwiseEvent*                                            MissfireStartedSFX;                                // 0x28(0x8)
	class WwiseEvent*                                            MissfireStoppedSFX;                                // 0x30(0x8)
};


// Size 0x60
struct UndoRepairActionStateConstructionInfo
{
public:
	struct NetSubObjectPtr                                       RepairableObject;                                  // 0x40(0x14)
	class UClass*                                                InputID;                                           // 0x58(0x8)
};


// Size 0x50
struct MerchantSpawnData
{
public:
	assetclass                                                   MerchantReference;                                 // 0x0(0x20)
	struct Transform                                             MerchantTransform;                                 // 0x20(0x30)
};


// Size 0x30
struct RewindPhysicsServiceEntry
{
public:
	class RewindComponent*                                       Rewindable;                                        // 0x0(0x8)
};


// Size 0x8
struct ShipPartCustomizationModel
{
public:
	struct FName                                                 EntitlementId;                                     // 0x0(0x8)
};


// Size 0x40
struct QuestTableLimitedInfoTileDetails
{
public:
	struct FString                                               StartDateTimeUtc;                                  // 0x20(0x10)
	struct FString                                               EndDateTimeUtc;                                    // 0x30(0x10)
};


// Size 0x80
struct RadialInstance
{
public:
	struct FText                                                 Name;                                              // 0x8(0x38)
	class RadialContentRule*                                     Content;                                           // 0x40(0x8)
	class RadialAction*                                          PrimaryAction;                                     // 0x48(0x8)
	class RadialAction*                                          SecondaryAction;                                   // 0x50(0x8)
	class RadialAction*                                          TertiaryAction;                                    // 0x58(0x8)
	class RadialAction*                                          QuaternaryAction;                                  // 0x60(0x8)
	class RadialAction*                                          OpenAlternateRadialInstanceAction;                 // 0x68(0x8)
	class RadialManagerInputComponent*                           InputComponent;                                    // 0x70(0x8)
	bool                                                         ShouldActionsUpdateWhenContextChanges;             // 0x78(0x1)
	bool                                                         ShouldContentUpdateWhenContextChanges;             // 0x79(0x1)
	bool                                                         ShouldRadialCloseWhenWieldingNewItem;              // 0x7a(0x1)
	bool                                                         ShouldRadialCloseWhenStowingWieldedItem;           // 0x7b(0x1)
};


// Size 0x10
struct ClothingChestRandomFilter
{
public:
	class UClass*                                                Category;                                          // 0x0(0x8)
	float                                                        Likelihood;                                        // 0x8(0x4)
};


// Size 0x1
struct EventFireWeapon
{
public:
	bool                                                         bForFirstPerson;                                   // 0x0(0x1)
};


// Size 0x30
struct TreasureMapWidgetTexture
{
public:
	class Texture*                                               Image;                                             // 0x20(0x8)
	float                                                        RelativeHeightModifier;                            // 0x28(0x4)
	bool                                                         FlipX;                                             // 0x2c(0x1)
	bool                                                         ScaleHeightOnMultipleLines;                        // 0x2d(0x1)
};


// Size 0x10
struct EventWieldableStashedToStashPoint
{
public:
	class PrimitiveComponent*                                    StashPointAttachParent;                            // 0x0(0x8)
	bool                                                         Visible;                                           // 0x8(0x1)
};


// Size 0x8
struct HideRadialInventory
{
public:
	bool                                                         IsSwitchingToLinkedRadial;                         // 0x4(0x1)
};


// Size 0x10
struct IslandEventIcons
{
public:
	class Texture*                                               ActiveEventIcon;                                   // 0x0(0x8)
	class Texture*                                               InactiveEventIcon;                                 // 0x8(0x8)
};


// Size 0x10
struct EventCapstanDamageLevelChanged
{
public:
	class Actor*                                                 Capstan;                                           // 0x0(0x8)
	int                                                          DamageLevel;                                       // 0x8(0x4)
};


// Size 0x110
struct GameEventSettings
{
public:
	struct FeatureFlag                                           Feature;                                           // 0x0(0xc)
	class UClass*                                                GameEventType;                                     // 0x10(0x8)
	float                                                        RepeatQueryTime;                                   // 0x18(0x4)
	float                                                        InertQueryTime;                                    // 0x1c(0x4)
	float                                                        InertCancelTime;                                   // 0x20(0x4)
	struct WeightedProbabilityRangeOfRanges                      FirstRegenInterval;                                // 0x28(0x30)
	struct WeightedProbabilityRangeOfRanges                      RegenInterval;                                     // 0x58(0x30)
	struct WeightedProbabilityRangeOfRanges                      ReinsertionMinRegenTime;                           // 0x88(0x30)
	struct WeightedProbabilityRangeOfRanges                      SpawnTime;                                         // 0xb8(0x30)
	TArray<class Class*>                                         ExcludedGlobalEvents;                              // 0xe8(0x10)
	bool                                                         Required;                                          // 0xf8(0x1)
	TArray<char>                                                 ExcludedPlayModeVariants;                          // 0x100(0x10)
};


// Size 0x10
struct RequestEquipClothingPiratePreviewEvent
{
public:
	struct FString                                               ClothingDesc;                                      // 0x0(0x10)
};


// Size 0x30
struct ChandelierPartDesc
{
public:
	struct StringAssetReference                                  ChandelierMesh;                                    // 0x0(0x10)
	struct StringAssetReference                                  FlamesMesh;                                        // 0x10(0x10)
	int64                                                        ChandelierCachedMeshResourceSize;                  // 0x20(0x8)
	int64                                                        ChandelierFlamesCachedMeshResourceSize;            // 0x28(0x8)
};


// Size 0x18
struct LoadoutRepairFailedTelemetryEvent
{
public:
	TArray<int>                                                  CarouselSeeds;                                     // 0x8(0x10)
};


// Size 0x40
struct CharacterActionStateConstructionInfo
{
public:
	class AthenaCharacter*                                       CharacterOwner;                                    // 0x38(0x8)
};


// Size 0x20
struct CatalogTab
{
public:
	struct FString                                               CatalogName;                                       // 0x0(0x10)
	struct FString                                               CatalogTabImageUrl;                                // 0x10(0x10)
};


// Size 0x18
struct ActiveCampaignInfo
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	int64                                                        ActiveFromTicks;                                   // 0x8(0x8)
	int64                                                        ActiveUntilTicks;                                  // 0x10(0x8)
};


// Size 0x10
struct WeightedPetAnimation
{
public:
	class AnimSequence*                                          Animation;                                         // 0x0(0x8)
	float                                                        Weighting;                                         // 0x8(0x4)
};


// Size 0xc
struct AthenaAnimationFirstPersonTurnDelay
{
public:
	float                                                        MaxAngle;                                          // 0x0(0x4)
	float                                                        DelayOutSpeed;                                     // 0x4(0x4)
	float                                                        DelayInSpeed;                                      // 0x8(0x4)
};


// Size 0x8
struct AttackTimingWindow
{
public:
	float                                                        StartTime;                                         // 0x0(0x4)
	float                                                        EndTime;                                           // 0x4(0x4)
};


// Size 0x98
struct SkeletonLordInfo
{
public:
	struct FText                                                 DisplayName;                                       // 0x0(0x38)
	class UClass*                                                ClassId;                                           // 0x38(0x8)
	class AthenaAIFormDataAsset*                                 Form;                                              // 0x40(0x8)
	class AthenaAIControllerParamsDataAsset*                     Skillset;                                          // 0x48(0x8)
	assetclass                                                   ItemDropComponentClass;                            // 0x50(0x20)
	class LoadoutAsset*                                          Loadout;                                           // 0x70(0x8)
	class Texture*                                               MugShot;                                           // 0x78(0x8)
	class BountyMapLayout*                                       Layout;                                            // 0x80(0x8)
	TArray<struct Text>                                          BountyMapDescriptions;                             // 0x88(0x10)
};


// Size 0x1
struct EventLocalPlayerSuperheatedWaterZoneChanged
{
public:
	bool                                                         IsInSuperheatedWaterZone;                          // 0x0(0x1)
};


// Size 0x8
struct PlayerStartedDiggingEvent
{
public:
	class Actor*                                                 ActorBeingDugUp;                                   // 0x0(0x8)
};


// Size 0x50
struct SinkingTunnelOfTheDamnedActionStateConstructionInfo
{
public:
	int                                                          TunnelId;                                          // 0x40(0x4)
	int                                                          Seed;                                              // 0x44(0x4)
	int                                                          Entry;                                             // 0x48(0x4)
};


// Size 0x20
struct PartCustomisation
{
public:
	struct FString                                               Category;                                          // 0x0(0x10)
	struct StringAssetReference                                  Customisation;                                     // 0x10(0x10)
};


// Size 0x8
struct MeshMemoryConstraintServiceRequestScoringEvent
{
public:
	class UClass*                                                ConstraintBudget;                                  // 0x0(0x8)
};


// Size 0x28
struct CrewMigrationStatusInfo
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<String>                                               CrewMigrationStatusLog;                            // 0x10(0x10)
	bool                                                         CrewMigrationStatusState;                          // 0x20(0x1)
};


// Size 0x8
struct PreSellTutorialItem
{
public:
	class ItemInfo*                                              SpawnedItem;                                       // 0x0(0x8)
};


// Size 0xc
struct EventUserGameSettingsIntegerChanged
{
public:
	struct FName                                                 KeyName;                                           // 0x0(0x8)
	int                                                          Value;                                             // 0x8(0x4)
};


// Size 0x8
struct TutorialStepEnteredEvent
{
public:
	struct FName                                                 StepName;                                          // 0x0(0x8)
};


// Size 0x18
struct PlayerActionBaseTelemetryFragmentInput
{
public:
	class Object*                                                ObjectBeingUsed;                                   // 0x0(0x8)
	struct FString                                               ActionName;                                        // 0x8(0x10)
};


// Size 0x28
struct ShipCreationRequestModel
{
public:
	struct FString                                               ShipType;                                          // 0x0(0x10)
	struct FString                                               ShipName;                                          // 0x10(0x10)
	bool                                                         HintSkipCommerceFlow;                              // 0x20(0x1)
};


// Size 0x38
struct ScoreboardItems
{
public:
	struct FString                                               Icon;                                              // 0x0(0x10)
	struct FString                                               CrewName;                                          // 0x10(0x10)
	struct FString                                               Score;                                             // 0x20(0x10)
	bool                                                         IsMyCrew;                                          // 0x30(0x1)
};


// Size 0x8
struct TaleResourceHandle
{
public:
	int                                                          ResourceHandle;                                    // 0x0(0x4)
	int                                                          ValidationId;                                      // 0x4(0x4)
};


// Size 0x8
struct EventJustBeenFed
{
public:
	class Actor*                                                 FedBy;                                             // 0x0(0x8)
};


// Size 0x10
struct ShroudBreakerActivatedEvent
{
public:
	struct Guid                                                  ShroudBreakerId;                                   // 0x0(0x10)
};


// Size 0x30
struct NPCStateData
{
public:
	struct FString                                               Name;                                              // 0x20(0x10)
};


// Size 0x88
struct MovedByPortableHarpoonGrappleActionStateConstructionInfo
{
public:
	struct Vector                                                TargetRelativeSurfaceNormal;                       // 0x78(0xc)
};


// Size 0x18
struct GetSkeletonThronesGameServerResponseModel
{
public:
	TArray<struct SkeletonThroneStateData>                       Data;                                              // 0x8(0x10)
};


// Size 0x8
struct EventNamedProgressLocationCreated
{
public:
	class ProgressSpawnLocation*                                 SpawnLocation;                                     // 0x0(0x8)
};


// Size 0x1
struct InviteFriendsEvent
{
public:
	bool                                                         IsFromCreatorMode;                                 // 0x0(0x1)
};


// Size 0x70
struct ClassicFireworkDebugList
{
public:
	TArray<class ItemDescSpawnData*>                             Peony;                                             // 0x0(0x10)
	TArray<class ItemDescSpawnData*>                             Crackle;                                           // 0x10(0x10)
	TArray<class ItemDescSpawnData*>                             Strobe;                                            // 0x20(0x10)
	TArray<class ItemDescSpawnData*>                             Brocade;                                           // 0x30(0x10)
	TArray<class ItemDescSpawnData*>                             Comet;                                             // 0x40(0x10)
	TArray<class ItemDescSpawnData*>                             HummingSnakes;                                     // 0x50(0x10)
	TArray<class ItemDescSpawnData*>                             Cakes;                                             // 0x60(0x10)
};


// Size 0x48
struct BootyItemOwnershipChangedParams
{
public:
	struct Guid                                                  NewCrewId;                                         // 0x0(0x10)
	struct Guid                                                  PreviousCrewId;                                    // 0x10(0x10)
	struct Guid                                                  BootyId;                                           // 0x20(0x10)
	char                                                         BootyType;                                         // 0x30(0x1)
	struct FName                                                 Rarity;                                            // 0x34(0x8)
	class ItemInfo*                                              BootyItemInfo;                                     // 0x40(0x8)
};


// Size 0x8
struct ItemLoadoutItemCategoryRemovedEvent
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
};


// Size 0x28
struct PageLayoutRepInfo
{
public:
	TArray<struct TreasureMapWidgetTexture>                      Images;                                            // 0x8(0x10)
	TArray<struct TreasureMapWidgetLocalisedTextWithFontOverride> GeneralText;                                       // 0x18(0x10)
};


// Size 0x10
struct ItemSpawnDistribution
{
public:
	TArray<struct ItemSpawnWeightedType>                         WeightedList;                                      // 0x0(0x10)
};


// Size 0x18
struct StorageContainerWeightedItemListEntryList
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	TArray<struct StorageContainerWeightedItemListEntry>         Entries;                                           // 0x8(0x10)
};


// Size 0x28
struct TQStructGenGroup
{
public:
	struct FName                                                 FeatureName;                                       // 0x10(0x8)
	TArray<struct TQStructGenEntry>                              Entries;                                           // 0x18(0x10)
};


// Size 0x20
struct CanvasWorldMapWorldData
{
public:
	struct Vector2D                                              Min;                                               // 0x0(0x8)
	struct Vector2D                                              Max;                                               // 0x8(0x8)
	TArray<struct CanvasWorldMapIslandData>                      Islands;                                           // 0x10(0x10)
};


// Size 0x70
struct ShutdownServerMessage
{
public:
	struct FString                                               ShutdownReason;                                    // 0x0(0x10)
	bool                                                         ShutdownNonActiveServers;                          // 0x10(0x1)
	struct ServerShutdownRequestFilter                           ServerShutdownRequestFilter;                       // 0x18(0x58)
};


// Size 0x20
struct CaptainsLogbookIconKeyValue
{
public:
	struct FName                                                 ImageKey;                                          // 0x0(0x8)
	struct PlayerStat                                            StatId;                                            // 0x8(0x4)
	char                                                         LogEntryType;                                      // 0xc(0x1)
	class Texture*                                               Image;                                             // 0x10(0x8)
	int                                                          IconPriority;                                      // 0x18(0x4)
};


// Size 0x10
struct ShipLiveryCatalogue
{
public:
	TArray<struct ShipLiveryCatalogueEntry>                      Liveries;                                          // 0x0(0x10)
};


// Size 0x40
struct PlayerModerationReportablePlayers
{
public:
	struct FString                                               ReportingGamerTag;                                 // 0x0(0x10)
	struct FString                                               ReportingXUID;                                     // 0x10(0x10)
	TArray<struct PlayerModerationReportablePlayerDetails>       Players;                                           // 0x20(0x10)
	struct FString                                               ServerSessionId;                                   // 0x30(0x10)
};


// Size 0x68
struct ScoreRewardWieldableItemData
{
public:
	class UClass*                                                WieldableItemClass;                                // 0x0(0x8)
	struct ScoreRewardValueData                                  NotStolenScore;                                    // 0x8(0x30)
	struct ScoreRewardValueData                                  StolenScore;                                       // 0x38(0x30)
};


// Size 0xe0
struct AthenaAnimationPets
{
public:
	char                                                         PetSpawnState;                                     // 0x8(0x1)
	bool                                                         PetIsSad;                                          // 0x9(0x1)
	bool                                                         FlyingScared;                                      // 0xa(0x1)
	bool                                                         StaticBaseHeldPoseActive;                          // 0xb(0x1)
	bool                                                         UseAlternativeStrokeAnimations;                    // 0xc(0x1)
	bool                                                         CurrentlyLocomoting;                               // 0xd(0x1)
	bool                                                         UseShowingLocomotionSet;                           // 0xe(0x1)
	char                                                         CurrentHeldState;                                  // 0xf(0x1)
	char                                                         CurrentRoamingState;                               // 0x10(0x1)
	char                                                         ParentCurrentWieldedState;                         // 0x11(0x1)
	struct AthenaAnimationLocomotion                             ParentLocomotionData;                              // 0x18(0x68)
	char                                                         ParentJumpingState;                                // 0x80(0x1)
	class PetsAnimationData*                                     PetAnimations;                                     // 0x88(0x8)
	struct AthenaAnimationPetSelectedArrayAnimations             PetSelectedArrayAnimations;                        // 0x90(0x10)
	char                                                         ReactState;                                        // 0xa0(0x1)
	float                                                        JumpAlphaBlend;                                    // 0xa4(0x4)
	bool                                                         CurrentlyJumping;                                  // 0xa8(0x1)
	bool                                                         Submerged;                                         // 0xa9(0x1)
};


// Size 0x40
struct GuildDataModel
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct FString                                               GuildName;                                         // 0x10(0x10)
	struct GuildUserPirateModel                                  GuildOwner;                                        // 0x20(0x20)
};


// Size 0x8
struct CoordinatedCutsceneTriggerStat
{
public:
	struct PlayerStat                                            StatToFire;                                        // 0x0(0x4)
	bool                                                         FireToWholeCrew;                                   // 0x4(0x1)
	bool                                                         FireEachTime;                                      // 0x5(0x1)
};


// Size 0xc8
struct TeleportActionStateConstructionInfo
{
public:
	struct TeleportLocation                                      TeleportLocationOverride;                          // 0x40(0x40)
	char                                                         TeleportFadeType;                                  // 0x80(0x1)
	int                                                          StreamInLevelId;                                   // 0x84(0x4)
	int                                                          StreamOutLevelId;                                  // 0x88(0x4)
	char                                                         TeleportConditions;                                // 0x8c(0x1)
	char                                                         TeleportAudioMode;                                 // 0x8d(0x1)
	bool                                                         ShouldWaitForLoadout;                              // 0x8f(0x1)
	bool                                                         ShouldWaitForEntitlements;                         // 0x90(0x1)
	bool                                                         CallFinishSpawningOnEnd;                           // 0x91(0x1)
	char                                                         Reason;                                            // 0x92(0x1)
	char                                                         TeleportSpace;                                     // 0x93(0x1)
	char                                                         TeleportActionStateLargeItemMode;                  // 0x94(0x1)
};


// Size 0x10
struct ShipLiveryTeamSet
{
public:
	TArray<struct ShipLiveryCatalogueEntry>                      ShipCatalogue;                                     // 0x0(0x10)
};


// Size 0x48
struct CategorisedLoadout
{
public:
	TArray<struct LoadoutCategory>                               ItemLoadout;                                       // 0x0(0x10)
	TArray<struct LoadoutCategory>                               ClothingLoadout;                                   // 0x10(0x10)
	TArray<struct LoadoutPetCategory>                            PetLoadout;                                        // 0x20(0x10)
	bool                                                         PetNamingDisallowed;                               // 0x30(0x1)
	bool                                                         InitialLoadout;                                    // 0x31(0x1)
	struct FString                                               Hash;                                              // 0x38(0x10)
};


// Size 0x10
struct TrinketEntitlementsUpdatedUIEvent
{
public:
	TArray<struct ChestEntitlementViewModel>                     Entitlements;                                      // 0x0(0x10)
};


// Size 0x20
struct EventRemoveCrewBeckonTag
{
public:
	struct BeckonTag                                             BeckonTag;                                         // 0x0(0x10)
};


// Size 0x20
struct MultiShopResponse
{
public:
	char                                                         ShopType;                                          // 0x0(0x1)
	class ShopDesc*                                              ShopDesc;                                          // 0x8(0x8)
	TArray<struct MultiShopResponsePerNPCEntry>                  PerNPCShopDescs;                                   // 0x10(0x10)
};


// Size 0xc
struct WeightedGoldReward
{
public:
	struct RewardId                                              RewardId;                                          // 0x0(0x8)
	float                                                        Weight;                                            // 0x8(0x4)
};


// Size 0x48
struct PremiumCatalogItemSet
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	TArray<struct PremiumShopOfferItem>                          Items;                                             // 0x38(0x10)
};


// Size 0x20
struct CharacterFootWaterImpactResult
{
public:
	struct CharacterSocketFootWaterImpactResult                  SocketFootImpactResult;                            // 0x0(0x1c)
	int                                                          FootIndex;                                         // 0x1c(0x4)
};


// Size 0x70
struct CrewEventLogEntry
{
public:
	char                                                         EntryType;                                         // 0x0(0x1)
	struct ReplicatedDateTime                                    EntryTime;                                         // 0x8(0x8)
	struct EventLogParams                                        Params;                                            // 0x10(0x40)
	uint64                                                       SourceStat;                                        // 0x50(0x8)
	char                                                         Day;                                               // 0x58(0x1)
	TArray<struct PlayerStat>                                    SourceIdsToOverwrite;                              // 0x60(0x10)
};


// Size 0x38
struct SpeechAccessibilityProfileUser
{
public:
	struct FString                                               Id;                                                // 0x0(0x10)
	struct FString                                               HostId;                                            // 0x10(0x10)
	TArray<struct SpeechAccessibilitySetting>                    Settings;                                          // 0x20(0x10)
	bool                                                         IsSponsoredUser;                                   // 0x30(0x1)
};


// Size 0x28
struct GoldInContainerData
{
public:
	struct RewardId                                              RewardIdentifier;                                  // 0x0(0x8)
	struct Vector                                                Position;                                          // 0x8(0xc)
	struct Vector                                                Scale;                                             // 0x14(0xc)
	class StaticMesh*                                            GoldMesh;                                          // 0x20(0x8)
};


// Size 0x18
struct QuestDistributionFixedChaptersParams
{
public:
	bool                                                         UseProceduralQuestRewards;                         // 0x0(0x1)
	int                                                          NumChapters;                                       // 0x4(0x4)
	TArray<struct ChapterDataEntry>                              Chapters;                                          // 0x8(0x10)
};


// Size 0x50
struct CaptainsLogbookCrewMember
{
public:
	class PlayerState*                                           PlayerState;                                       // 0x0(0x8)
	struct FString                                               PirateName;                                        // 0x8(0x10)
	int                                                          ScrambledPirateNameIndex;                          // 0x18(0x4)
	int                                                          PirateTitleIndex;                                  // 0x1c(0x4)
	struct FString                                               PetName;                                           // 0x20(0x10)
	bool                                                         IsCaptain;                                         // 0x30(0x1)
	TArray<struct NetAccoladeModel>                              CrewAccolades;                                     // 0x38(0x10)
	bool                                                         IsInCurrentSessionGuild;                           // 0x48(0x1)
};


// Size 0x1d0
struct QuestTableCompanyData
{
public:
	struct FText                                                 CompanyDescription;                                // 0x0(0x38)
	struct FText                                                 LockedCompanyDescription;                          // 0x38(0x38)
	struct FText                                                 CompanyRequirementsDescription;                    // 0x70(0x38)
	struct FText                                                 CompanyInTutorialModeDescription;                  // 0xa8(0x38)
	struct StringAssetReference                                  CompanyRankRibbonImage;                            // 0xe0(0x10)
	struct StringAssetReference                                  CompanyCurrentRankBackgroundImage;                 // 0xf0(0x10)
	struct StringAssetReference                                  CompanyNextRankBackgroundImage;                    // 0x100(0x10)
	struct StringAssetReference                                  CompanyBackgroundImage;                            // 0x110(0x10)
	TArray<struct StringAssetReference>                          CompanyVoyageIcons;                                // 0x120(0x10)
	TArray<struct QuestTableCompanyRequirementIcon>              CompanyRequirementIcons;                           // 0x130(0x10)
	struct StringAssetReference                                  CompanyTabBackgroundImage;                         // 0x140(0x10)
	struct FText                                                 SaferSeasWarningText;                              // 0x150(0x38)
	struct FText                                                 SaferSeasPromotionLockedReason;                    // 0x188(0x38)
	TArray<struct QuestTableCompanyVoyageCategoryData>           VoyageCategories;                                  // 0x1c0(0x10)
};


// Size 0xf0
struct AudioDataTelemetryFragment
{
public:
	uint32                                                       WwiseDefaultPoolMemoryUsage;                       // 0x0(0x4)
	uint32                                                       WwiseTotalMemoryUsage;                             // 0x4(0x4)
	uint32                                                       APUHeapFreeBytes;                                  // 0x8(0x4)
	uint32                                                       APUHeapAllocatedBytes;                             // 0xc(0x4)
	uint32                                                       APUHeapLostBytes;                                  // 0x10(0x4)
	uint32                                                       APUHeapMaxBlockSizeAvailable;                      // 0x14(0x4)
	uint32                                                       APUHeapAllocationCount;                            // 0x18(0x4)
	uint32                                                       WwiseTotalMediaMemoryUsage;                        // 0x1c(0x4)
	uint32                                                       TritonMemoryUsage;                                 // 0x20(0x4)
	int8                                                         WwiseKWeightedOutput;                              // 0x24(0x1)
	uint32                                                       OutputClippingCount;                               // 0x28(0x4)
	int8                                                         NonUIBusKWeightedOutput;                           // 0x2c(0x1)
	TArray<int>                                                  WwiseStateGroups;                                  // 0x30(0x10)
	TArray<int>                                                  WwiseStateValues;                                  // 0x40(0x10)
	TArray<int>                                                  PeakProxyCountsPools;                              // 0x50(0x10)
	TArray<int>                                                  PeakProxyCounts;                                   // 0x60(0x10)
	TArray<int>                                                  StreamFindFailedIDs;                               // 0x70(0x10)
	TArray<int>                                                  StreamOpenFailedIDs;                               // 0x80(0x10)
	TArray<int>                                                  StreamReadFailedIDs;                               // 0x90(0x10)
	TArray<struct SoundBankFailureTelemetryEntry>                FailedToLoadBankIDs;                               // 0xa0(0x10)
	uint32                                                       FailedPostEventCount;                              // 0xb0(0x4)
	uint32                                                       IODeviceMemUsage;                                  // 0xb4(0x4)
	uint32                                                       PeakIOBytesRead;                                   // 0xb8(0x4)
	float                                                        AverageIOBytesPerSecondRead;                       // 0xbc(0x4)
	struct FrameDurationDataTelemetryFragment                    FrameKickoffTimesInMs;                             // 0xc0(0x10)
	struct FrameDurationDataTelemetryFragment                    UpdateDurationsInMs;                               // 0xd0(0x10)
	struct FrameDurationDataTelemetryFragment                    TritonQueryAcousticsTimesInMs;                     // 0xe0(0x10)
};


// Size 0x30
struct CompanyReputationProgressModel
{
public:
	struct FName                                                 CompanyId;                                         // 0x0(0x8)
	uint32                                                       Level;                                             // 0x8(0x4)
	uint32                                                       DistinctionLevel;                                  // 0xc(0x4)
	uint32                                                       Xp;                                                // 0x10(0x4)
	struct CompanyLevelDefinition                                NextCompanyLevel;                                  // 0x14(0x8)
	struct FString                                               Sig;                                               // 0x20(0x10)
};


// Size 0x20
struct PlayerJoinedGuildActivityMessageModel
{
public:
	struct UserPirateId                                          JoiningPlayer;                                     // 0x0(0x20)
};


// Size 0x18
struct NPCOneShotAnimationElement
{
public:
	struct FName                                                 SequenceName;                                      // 0x0(0x8)
	TArray<struct NPCAnimationSequence>                          OneShotSequence;                                   // 0x8(0x10)
};


// Size 0x660
struct LockState
{
public:
	struct LockData                                              LockData;                                          // 0x0(0x590)
	bool                                                         Locked;                                            // 0x590(0x1)
	TArray<class Class*>                                         AcceptableKeys;                                    // 0x598(0x10)
	class ItemInfo*                                              KeyItem;                                           // 0x5a8(0x8)
	class StaticMeshMemoryConstraintComponent*                   TargetKeyMesh;                                     // 0x5b0(0x8)
	bool                                                         UnlockBySpecificKey;                               // 0x5b8(0x1)
	class ItemInfo*                                              RequiredSpecificKey;                               // 0x5c0(0x8)
	class LockComponent*                                         OwnerLockComponent;                                // 0x5c8(0x8)
	float                                                        CurrentAnimationSequenceTime;                      // 0x5d0(0x4)
	bool                                                         IsInUnlockingSequence;                             // 0x5d4(0x1)
	char                                                         AnimationSequenceState;                            // 0x5d5(0x1)
	class InterpolatingItem*                                     InterpolatingItem;                                 // 0x5d8(0x8)
	class Actor*                                                 UnlockingInteractor;                               // 0x5e0(0x8)
	class StaticMeshMemoryConstraintComponent*                   CachedOverridenKeyStaticMesh;                      // 0x5e8(0x8)
};


// Size 0x24
struct RegionMapIslandData
{
public:
	struct IslandSelectionType                                   Island;                                            // 0x0(0x8)
	bool                                                         RenderToMap;                                       // 0x8(0x1)
	float                                                        Scale;                                             // 0xc(0x4)
	float                                                        RotationOffset;                                    // 0x10(0x4)
	struct Vector2D                                              LocationOffset;                                    // 0x14(0x8)
	bool                                                         Selectable;                                        // 0x1c(0x1)
	int                                                          MaxNumSelections;                                  // 0x20(0x4)
};


// Size 0xc
struct ReapersTributeBandReward
{
public:
	struct RewardId                                              RewardId;                                          // 0x0(0x8)
	int                                                          MinimumTribute;                                    // 0x8(0x4)
};


// Size 0x58
struct IslandEventIconData
{
public:
	struct IslandEventData                                       EventData;                                         // 0x0(0x38)
	struct IslandEventIcons                                      IslandIcons;                                       // 0x38(0x10)
	struct IslandEventIcons                                      HeaderIcons;                                       // 0x48(0x10)
};


// Size 0x38
struct EventCharacterDead
{
public:
	struct DamageInstance                                        FinalBlow;                                         // 0x0(0x30)
	char                                                         DeathType;                                         // 0x30(0x1)
};


// Size 0xf0
struct MerchantQuestParams
{
public:
	bool                                                         IsMerchantQuestV2;                                 // 0x48(0x1)
	TArray<char>                                                 IslandTypes;                                       // 0x50(0x10)
	struct WeightedProbabilityRange                              NumberOfRequiredItems;                             // 0x60(0x20)
	struct WeightedProbabilityRangeOfRanges                      TimeLimitInMinutes;                                // 0x80(0x30)
	class MerchantQuestRequiredItemsDataAsset*                   RequiredItemsDataAsset;                            // 0xb0(0x8)
	class MerchantQuestRandomRequiredItemsDataAsset*             RandomRequiredItemsDataAsset;                      // 0xb8(0x8)
	struct WeightedProbabilityRange                              NumberOfGroups;                                    // 0xc0(0x20)
	TArray<struct MerchantQuestCategoryGroupBounds>              CategoryGroupBounds;                               // 0xe0(0x10)
};


// Size 0x10
struct ReapersMarkStatusStatInfo
{
public:
	class UClass*                                                Status;                                            // 0x0(0x8)
	struct PlayerStat                                            StatToFire;                                        // 0x8(0x4)
};


// Size 0x10
struct CutscenePriorityQueueEntry
{
public:
	TArray<struct QueuedCutsceneData>                            QueuedCutscenes;                                   // 0x0(0x10)
};


// Size 0x10
struct LightningTargetSelector
{
public:
	TArray<struct LightningTarget>                               Targets;                                           // 0x0(0x10)
};


// Size 0x10
struct GuildsThatPirateIsAMemberOfResponseModel
{
public:
	TArray<struct SignedGuildIdModel>                            SignedGuildIds;                                    // 0x0(0x10)
};


// Size 0x50
struct ShipPersistenceModel
{
public:
	TArray<struct ShipPartDamagePersistenceModel>                PartDamagePersistenceModels;                       // 0x0(0x10)
	struct HullDamagePersistenceModel                            HullDamageModel;                                   // 0x10(0x10)
	struct HullCharringPersistenceModel                          HullCharringModel;                                 // 0x20(0x18)
	struct MapTablePersistenceModel                              MapTablePersistenceModel;                          // 0x38(0x10)
	struct ShipInternalWaterPersistenceModel                     InternalWaterModel;                                // 0x48(0x4)
};


// Size 0x38
struct SetRadialItemsAggregate
{
public:
	TArray<struct SetItemOnRadialInventorySlot>                  Items;                                             // 0x8(0x10)
	TArray<struct SetTotalItemsOnRadialInventorySlot>            Quantities;                                        // 0x18(0x10)
	TArray<struct SetMapTypeOnRadialInventorySlot>               Maps;                                              // 0x28(0x10)
};


// Size 0x30
struct VfxSelectorRange
{
public:
	float                                                        MinValue;                                          // 0x0(0x4)
	float                                                        MaxValue;                                          // 0x4(0x4)
	struct VfxSelectorEntry                                      EffectParams;                                      // 0x8(0x28)
};


// Size 0xa0
struct GuildMemberLeaderboardScoreUpdateMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Guid                                                  GuildId;                                           // 0x78(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0x88(0x8)
	int64                                                        Before;                                            // 0x90(0x8)
	int64                                                        After;                                             // 0x98(0x8)
};


// Size 0x18
struct GetShipwrecksGameServerResponseModel
{
public:
	TArray<struct ShipwreckStateData>                            Data;                                              // 0x8(0x10)
};


// Size 0xd8
struct ShopDefinition
{
public:
	struct FString                                               ShopName;                                          // 0x0(0x10)
	struct FString                                               CatalogName;                                       // 0x10(0x10)
	TArray<struct CatalogTab>                                    CatalogTabs;                                       // 0x20(0x10)
	struct FString                                               Storefront;                                        // 0x30(0x10)
	struct FString                                               OpenAudioCue;                                      // 0x40(0x10)
	struct ShopDialogueMessages                                  Dialogue;                                          // 0x50(0x50)
	struct FString                                               CompanyId;                                         // 0xa0(0x10)
	bool                                                         EnablePiratePreview;                               // 0xb0(0x1)
	char                                                         CurrencyType;                                      // 0xb1(0x1)
	TArray<struct CategoryTab>                                   Categories;                                        // 0xb8(0x10)
	struct StringAssetReference                                  AllTabIcon;                                        // 0xc8(0x10)
};


// Size 0x38
struct GuildInvite
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	TArray<struct GuildSender>                                   Senders;                                           // 0x10(0x10)
	char                                                         GuildAffiliation;                                  // 0x20(0x1)
	struct FString                                               GuildSignature;                                    // 0x28(0x10)
};


// Size 0x18
struct WeightedTunnelCreatureDioramaCollection
{
public:
	TArray<struct WeightedTunnelCreatureDioramaType>             CreatureDioramas;                                  // 0x0(0x10)
	float                                                        CumulativeWeight;                                  // 0x10(0x4)
};


// Size 0x60
struct FaunaTypeSettings
{
public:
	class UClass*                                                FaunaSpecies;                                      // 0x0(0x8)
	bool                                                         bGuaranteedSpawn;                                  // 0x8(0x1)
	int                                                          FaunaTypeSpawnChance;                              // 0xc(0x4)
	struct WeightedProbabilityRange                              NumFaunaGroups;                                    // 0x10(0x20)
	struct WeightedProbabilityRange                              NumFaunaPerGroup;                                  // 0x30(0x20)
	TArray<struct FaunaWeightedAISpawnTypeParams>                SpawnTypes;                                        // 0x50(0x10)
};


// Size 0x10
struct CaptureChatMessagesRequestModel
{
public:
	TArray<struct CaptureChatMessage>                            ChatMessages;                                      // 0x0(0x10)
};


// Size 0x28
struct SwitchMechanismTriggerProjectileParams
{
public:
	class UClass*                                                ProjectileClass;                                   // 0x0(0x8)
	TArray<struct SwitchMechanismTriggerCustomTarget>            CustomTargets;                                     // 0x8(0x10)
	class WwiseEvent*                                            PlayProjectileOneShotEvent;                        // 0x18(0x8)
	float                                                        DefaultForwardLaunchSpeed;                         // 0x20(0x4)
	bool                                                         ActivateTrailEffectsOnLaunch;                      // 0x24(0x1)
	bool                                                         PreferHigherAnglesOnCustomTargetShots;             // 0x25(0x1)
};


// Size 0x8
struct ReapersMarkCurseStatInfo
{
public:
	char                                                         Curse;                                             // 0x0(0x1)
	struct PlayerStat                                            StatToFire;                                        // 0x4(0x4)
};


// Size 0x88
struct TargetPlayerForWalletBalance
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct PirateIdentity                                        TargetPlayer;                                      // 0x10(0x78)
};


// Size 0x20
struct ClothingChestOpenRequestEvent
{
public:
	struct RequestOpenPossessionsChestEvent                      OpenPossessionsChestEvent;                         // 0x0(0x18)
	class Actor*                                                 Interaction;                                       // 0x18(0x8)
};


// Size 0xd0
struct HangingActionStateConstructionInfo
{
public:
	struct HangingActionStateParams                              HangingActionStateParams;                          // 0x58(0x78)
};


// Size 0x50
struct ShipsLogServiceForceUpdateRpc
{
public:
	class Controller*                                            Controller;                                        // 0x18(0x8)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
	struct CaptainsLogAccoladesCommittedEvent                    UpdateEvent;                                       // 0x30(0x20)
};


// Size 0x20
struct CargoRunReward
{
public:
	TArray<struct RewardId>                                      OnTimeRewards;                                     // 0x0(0x10)
	TArray<struct RewardId>                                      LateRewards;                                       // 0x10(0x10)
};


// Size 0x18
struct MaterialAnimatorGroup
{
public:
	struct FName                                                 MaterialParamName;                                 // 0x0(0x8)
	TArray<struct MaterialAnimatorAnimationEntry>                Animations;                                        // 0x8(0x10)
};


// Size 0x40
struct EventTeleportLocationDestroyed
{
public:
	struct TeleportLocation                                      TeleportLocation;                                  // 0x0(0x40)
};


// Size 0x28
struct HitRegSnapshotStaleDataTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	char                                                         ShotType;                                          // 0x10(0x1)
	TArray<struct HitRegSnapshotDisagreementTelemetryEntry>      Disagreements;                                     // 0x18(0x10)
};


// Size 0x3
struct ViewVoyageBanners
{
public:
	char                                                         ShowIntroBanners;                                  // 0x0(0x1)
	char                                                         ShowOutroBanners;                                  // 0x1(0x1)
	struct ViewCustomVoyageBanners                               ShowCustomIntroBanners;                            // 0x2(0x1)
};


// Size 0x18
struct GetItemsGameServerResponseModel
{
public:
	TArray<struct ItemStateData>                                 Data;                                              // 0x8(0x10)
};


// Size 0x30
struct ScrambledNamesRefreshRequestEvent
{
public:
	TArray<struct ScrambledIdentity>                             Entities;                                          // 0x0(0x10)
	char                                                         ScrambleType;                                      // 0x10(0x1)
	TArray<struct Text>                                          ScrambledNamesUsed;                                // 0x18(0x10)
	bool                                                         AssignScrambledNames;                              // 0x28(0x1)
};


// Size 0x18
struct VoyageStartTelemetryEvent
{
public:
	bool                                                         IsEmergent;                                        // 0x0(0x1)
	TArray<struct VoyageStartTelemetryEventPerQuest>             Quests;                                            // 0x8(0x10)
};


// Size 0x10
struct RemoteEntitlementsModel
{
public:
	TArray<struct EntitlementInfo>                               Entitlements;                                      // 0x0(0x10)
};


// Size 0x20
struct MeshAnimatorAnimationEntry
{
public:
	struct FName                                                 AnimationName;                                     // 0x0(0x8)
	struct FName                                                 NextAnimationName;                                 // 0x8(0x8)
	TArray<struct MeshAnimatorAnimationMeshEntry>                PerMeshAnimations;                                 // 0x10(0x10)
};


// Size 0x10
struct WhatsNewArticleClientResponseModel
{
public:
	TArray<struct WhatsNewArticleModel>                          WhatsNewArticleList;                               // 0x0(0x10)
};


// Size 0x20
struct UserPresenceResponseEvent
{
public:
	TArray<struct UserPresence>                                  UsersPresence;                                     // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x18
struct SeagullManagerFormation
{
public:
	int                                                          NumInFormation;                                    // 0x0(0x4)
	TArray<struct SeagullManagerFormationOffset>                 FormationOffsets;                                  // 0x8(0x10)
};


// Size 0x20
struct AthenaAnimationFirstPersonTurnDelayStates
{
public:
	struct AthenaAnimationFirstPersonTurnDelay                   PassiveState;                                      // 0x0(0xc)
	struct AthenaAnimationFirstPersonTurnDelay                   ContinuousUse;                                     // 0xc(0xc)
	float                                                        TurnDelayAngle;                                    // 0x18(0x4)
	float                                                        InvTurnDelayAngle;                                 // 0x1c(0x4)
};


// Size 0x2c
struct LightingZoneParametersAndLocation
{
public:
	struct LightingZoneParameters                                LightingZoneParameters;                            // 0x0(0x20)
	struct Vector                                                Location;                                          // 0x20(0xc)
};


// Size 0x180
struct MemoryDataTelemetryFragment
{
public:
	uint32                                                       PageFaultsAvg;                                     // 0x0(0x4)
	uint32                                                       PageFaultsMin;                                     // 0x4(0x4)
	uint32                                                       PageFaultsMax;                                     // 0x8(0x4)
	uint64                                                       MemAvailPhyAvg;                                    // 0x10(0x8)
	uint64                                                       MemAvailPhyMin;                                    // 0x18(0x8)
	uint64                                                       MemAvailPhyMax;                                    // 0x20(0x8)
	uint64                                                       MemAvailVirAvg;                                    // 0x28(0x8)
	uint64                                                       MemAvailVirMin;                                    // 0x30(0x8)
	uint64                                                       MemAvailVirMax;                                    // 0x38(0x8)
	uint64                                                       MemUsedPhyAvg;                                     // 0x40(0x8)
	uint64                                                       MemUsedPhyMin;                                     // 0x48(0x8)
	uint64                                                       MemUsedPhyMax;                                     // 0x50(0x8)
	uint64                                                       MemUsedVirAvg;                                     // 0x58(0x8)
	uint64                                                       MemUsedVirMin;                                     // 0x60(0x8)
	uint64                                                       MemUsedVirMax;                                     // 0x68(0x8)
	uint64                                                       MemAvailPhyUIAvg;                                  // 0x70(0x8)
	uint64                                                       MemAvailPhyUIMin;                                  // 0x78(0x8)
	uint64                                                       MemAvailPhyUIMax;                                  // 0x80(0x8)
	uint64                                                       MemAvailVirUIAvg;                                  // 0x88(0x8)
	uint64                                                       MemAvailVirUIMin;                                  // 0x90(0x8)
	uint64                                                       MemAvailVirUIMax;                                  // 0x98(0x8)
	uint64                                                       MemUsedPhyUIAvg;                                   // 0xa0(0x8)
	uint64                                                       MemUsedPhyUIMin;                                   // 0xa8(0x8)
	uint64                                                       MemUsedPhyUIMax;                                   // 0xb0(0x8)
	uint64                                                       MemUsedVirUIAvg;                                   // 0xb8(0x8)
	uint64                                                       MemUsedVirUIMin;                                   // 0xc0(0x8)
	uint64                                                       MemUsedVirUIMax;                                   // 0xc8(0x8)
	uint64                                                       MemUsedMallocCurrent;                              // 0xd0(0x8)
	uint64                                                       MemUsedMallocPeak;                                 // 0xd8(0x8)
	TArray<struct MemoryTableData>                               TableInfo;                                         // 0xe0(0x10)
	uint64                                                       NumLargeAllocations;                               // 0xf0(0x8)
	uint64                                                       PeakLargeAllocations;                              // 0xf8(0x8)
	uint64                                                       MemUsedCachedPagesCurrent;                         // 0x100(0x8)
	uint64                                                       MemUsedCachedPagesPeak;                            // 0x108(0x8)
	uint64                                                       MemUsedAsyncLoadingRegularMax;                     // 0x110(0x8)
	uint64                                                       MemUsedAsyncLoadingOverflowMax;                    // 0x118(0x8)
	uint64                                                       MemUsedAsyncLoadingExtraOverflowMax;               // 0x120(0x8)
	int                                                          HighMemoryThresholdPercentage;                     // 0x128(0x4)
	uint64                                                       MemUsedTexturePoolAvg;                             // 0x130(0x8)
	uint64                                                       MemUsedTexturePoolMin;                             // 0x138(0x8)
	uint64                                                       MemUsedTexturePoolMax;                             // 0x140(0x8)
	uint64                                                       MemUsedTextureUnstreamedAvg;                       // 0x148(0x8)
	uint64                                                       MemUsedTextureUnstreamedMin;                       // 0x150(0x8)
	uint64                                                       MemUsedTextureUnstreamedMax;                       // 0x158(0x8)
	uint64                                                       MemUsedRenderTargetAvg;                            // 0x160(0x8)
	uint64                                                       MemUsedRenderTargetMin;                            // 0x168(0x8)
	uint64                                                       MemUsedRenderTargetMax;                            // 0x170(0x8)
	uint64                                                       NumActiveUObjects;                                 // 0x178(0x8)
};


// Size 0x18
struct FeatureToggledChapters
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	TArray<struct ChapterQuests>                                 Chapters;                                          // 0x8(0x10)
};


// Size 0x48
struct RequestPlayerNameplateUIEventData
{
public:
	int                                                          Index;                                             // 0x0(0x4)
	int                                                          Id;                                                // 0x4(0x4)
	struct PlayerNameplateUIInfo                                 Data;                                              // 0x8(0x40)
};


// Size 0x90
struct PenaltyRequestEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct PirateIdentity                                        PirateIdentity;                                    // 0x10(0x78)
	struct FName                                                 PenaltyId;                                         // 0x88(0x8)
};


// Size 0x20
struct PartDesc
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	TArray<struct PartCustomisation>                             Customisations;                                    // 0x10(0x10)
};


// Size 0x60
struct WorldLocationBannerEvent
{
public:
	struct GenericPopupAudioDescriptor                           Audio;                                             // 0x0(0x40)
	struct FString                                               IconPath;                                          // 0x40(0x10)
	struct FString                                               Text;                                              // 0x50(0x10)
};


// Size 0xb8
struct SeasonGoalProgressionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	int                                                          PreviousProgress;                                  // 0x78(0x4)
	int                                                          CurrentProgress;                                   // 0x7c(0x4)
	int                                                          CompletionThreshold;                               // 0x80(0x4)
	struct Guid                                                  SeasonId;                                          // 0x84(0x10)
	struct Guid                                                  GoalId;                                            // 0x94(0x10)
	char                                                         GoalType;                                          // 0xa4(0x1)
	struct Guid                                                  GoalGroupId;                                       // 0xa8(0x10)
};


// Size 0x108
struct ContestMapLayoutCrew
{
public:
	struct TreasureMapWidgetTexture                              CrewIcon;                                          // 0x0(0x30)
	struct TreasureMapWidgetTexture                              ScoreIcon;                                         // 0x30(0x30)
	struct TreasureMapWidgetTexture                              UnderlineIcon;                                     // 0x60(0x30)
	struct TreasureMapWidgetText                                 CrewName;                                          // 0x90(0x3c)
	struct TreasureMapWidgetText                                 Score;                                             // 0xcc(0x3c)
};


// Size 0x68
struct ShowRadialInventory
{
public:
	struct RadialActionBindings                                  ActionBindings;                                    // 0x4(0x20)
	struct FText                                                 ActionText;                                        // 0x28(0x38)
	bool                                                         AsLinkedRadial;                                    // 0x60(0x1)
};


// Size 0x18
struct CommodityDemandMultipliers
{
public:
	struct FName                                                 RewardId;                                          // 0x0(0x8)
	TArray<struct NPCDemandMultiplier>                           NPCMultipliers;                                    // 0x8(0x10)
};


// Size 0x350
struct WeaponProjectile
{
public:
	struct ProjectileAim                                         AimData;                                           // 0x110(0x50)
	class Object*                                                WeaponMesh;                                        // 0x160(0x8)
};


// Size 0x8
struct SharkPlayerStats
{
public:
	struct PlayerStat                                            SharkDefeatStat;                                   // 0x0(0x4)
	struct PlayerStat                                            SharkDefeatStatLegend;                             // 0x4(0x4)
};


// Size 0xe0
struct CommerceRemoteServicePurchaseRequest
{
public:
	struct FString                                               StoreId;                                           // 0x0(0x10)
	struct Guid                                                  OfferId;                                           // 0x10(0x10)
	char                                                         CurrencyId;                                        // 0x20(0x1)
	struct FString                                               TransactionId;                                     // 0x28(0x10)
	struct PiratePurchaseClaims                                  PiratePurchaseClaims;                              // 0x38(0xa0)
	char                                                         PlayMode;                                          // 0xd8(0x1)
	char                                                         PlayModeVariant;                                   // 0xd9(0x1)
};


// Size 0x40
struct AccoladePirateBreakDownModel
{
public:
	struct Guid                                                  PirateId;                                          // 0x0(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0x10(0x24)
	int64                                                        ProgressValue;                                     // 0x38(0x8)
};


// Size 0x60
struct LobbyServiceModel
{
public:
	struct LobbyInviteCode                                       InviteCode;                                        // 0x0(0x20)
	struct FString                                               HostXuid;                                          // 0x20(0x10)
	struct FString                                               HostToken;                                         // 0x30(0x10)
	struct LobbyCreationRequestModel                             LobbyCreationRequest;                              // 0x40(0x10)
	struct FString                                               CreationTimeUtc;                                   // 0x50(0x10)
};


// Size 0x18
struct ImpactProjectileData
{
public:
	class UClass*                                                ProjectileId;                                      // 0x0(0x8)
	TArray<struct ImpactSurfaceData>                             SurfaceList;                                       // 0x8(0x10)
};


// Size 0x10
struct ContestCrewManagementMemberDataEvent
{
public:
	TArray<struct ContestCrewManagementMemberData>               Members;                                           // 0x0(0x10)
};


// Size 0x48
struct TreasureMapTextDesc
{
public:
	struct FText                                                 Pattern;                                           // 0x0(0x38)
	TArray<struct TreasureMapTextEntry>                          Substitutions;                                     // 0x38(0x10)
};


// Size 0x90
struct PetShopPetSpecies
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct StringAssetReference                                  Icon;                                              // 0x38(0x10)
	struct FText                                                 Description;                                       // 0x48(0x38)
	TArray<struct PetShopPetBreed>                               Breeds;                                            // 0x80(0x10)
};


// Size 0x1
struct PetChestCloseRequestEvent
{
public:
	struct RequestClosePossessionsChestEvent                     ClosePossessionsChestEvent;                        // 0x0(0x1)
};


// Size 0x48
struct RemoteRewardRequestModel
{
public:
	TArray<struct PirateIdentity>                                Pirates;                                           // 0x0(0x10)
	struct Guid                                                  RequestID;                                         // 0x10(0x10)
	struct FString                                               CrewId;                                            // 0x20(0x10)
	struct FName                                                 RewardId;                                          // 0x30(0x8)
	struct FName                                                 Company;                                           // 0x38(0x8)
	bool                                                         NotifyPlayer;                                      // 0x40(0x1)
};


// Size 0x10
struct VoyageCompletionReward
{
public:
	TArray<struct RewardId>                                      Rewards;                                           // 0x0(0x10)
};


// Size 0x8
struct PlayerStatOption
{
public:
	struct PlayerStat                                            StatToFire;                                        // 0x0(0x4)
	bool                                                         FireForWholeCrew;                                  // 0x4(0x1)
};


// Size 0x10
struct WreckSpawnQueryPriorityData
{
public:
	TArray<struct WreckQueryPriorityEntry>                       PriorityTable;                                     // 0x0(0x10)
};


// Size 0x18
struct PrisonerToPositionMapping
{
public:
	TArray<struct SpawnablePrisoner>                             SpawnablePrisoners;                                // 0x0(0x10)
	char                                                         Position;                                          // 0x10(0x1)
};


// Size 0x18
struct GetGeysersGameServerResponseModel
{
public:
	TArray<struct GeyserStateData>                               Data;                                              // 0x8(0x10)
};


// Size 0x30
struct AthenaAnimationShopInteractionParams
{
public:
	TArray<struct AthenaAnimationShopInteractionAnimations>      AllLoadedInteractionAnimations;                    // 0x0(0x10)
	class AnimSequence*                                          IntoAnimToPlay;                                    // 0x10(0x8)
	class AnimSequence*                                          LoopAnimToPlay;                                    // 0x18(0x8)
	class AnimSequence*                                          OutOfAnimToPlay;                                   // 0x20(0x8)
	bool                                                         Active;                                            // 0x28(0x1)
};


// Size 0x110
struct ShipMilestoneCompletionEvent
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       Progress;                                          // 0xd0(0x8)
	uint64                                                       Alignment;                                         // 0xd8(0x8)
	uint64                                                       Level;                                             // 0xe0(0x8)
	struct DateTime                                              CompletedAt;                                       // 0xe8(0x8)
	struct FString                                               ShipId;                                            // 0xf0(0x10)
	struct FString                                               AlignmentKey;                                      // 0x100(0x10)
};


// Size 0x4c
struct UseLadderActionStateParams
{
public:
	float                                                        ClimbUpSpeed;                                      // 0x10(0x4)
	float                                                        ClimbDownSpeed;                                    // 0x14(0x4)
	float                                                        LadderRungHeight;                                  // 0x18(0x4)
	float                                                        SpeedToEnterSlidingAnimationMs;                    // 0x1c(0x4)
	float                                                        MaxLadderSlidingSpeedMs;                           // 0x20(0x4)
	float                                                        InitialDockBottomPitch;                            // 0x24(0x4)
	float                                                        InitialDockTopPitch;                               // 0x28(0x4)
	float                                                        TopBottomTolerance;                                // 0x2c(0x4)
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x30(0x1c)
};


// Size 0x20
struct RemoteLocalizationData
{
public:
	TArray<struct LocText>                                       LocDictionary;                                     // 0x0(0x10)
	struct FString                                               Locale;                                            // 0x10(0x10)
};


// Size 0x58
struct VoyageLocationCompetitiveVoyageParams
{
public:
	bool                                                         Feature;                                           // 0x0(0x1)
	bool                                                         Resource;                                          // 0x1(0x1)
	bool                                                         IsTreasureHunt;                                    // 0x2(0x1)
	struct VoyageLocationDistance                                PreferredDistanceFromAverageShipLocation;          // 0x4(0x8)
	bool                                                         IsHandIn;                                          // 0xc(0x1)
	struct VoyageLocationDistance                                PreferredDistanceForHandInIsland;                  // 0x10(0x8)
	bool                                                         AvoidUsedIslands;                                  // 0x18(0x1)
	bool                                                         AvoidWorldEventIslands;                            // 0x19(0x1)
	float                                                        MinDistanceFromUsedVoyageIslands;                  // 0x1c(0x4)
	bool                                                         OnlyNamedIslands;                                  // 0x20(0x1)
	class VoyageLocationOnlyNamedIslandListDataAsset*            OnlyNamedIslandsListDataAsset;                     // 0x28(0x8)
	TArray<struct Name>                                          ProhibitedIslandNames;                             // 0x30(0x10)
	TArray<class Class*>                                         Seas;                                              // 0x40(0x10)
	bool                                                         AllowFallbackSelection;                            // 0x50(0x1)
};


// Size 0x50
struct CreativeSession
{
public:
	TArray<struct CreativeCrewConfig>                            CrewConfigs;                                       // 0x0(0x10)
	bool                                                         IsHost;                                            // 0x10(0x1)
	TArray<struct CreativeCrewMember>                            Members;                                           // 0x18(0x10)
	struct FString                                               SessionCode;                                       // 0x28(0x10)
	int                                                          State;                                             // 0x38(0x4)
	struct FString                                               Xuid;                                              // 0x40(0x10)
};


// Size 0x88
struct AchievementUnlockedMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct FString                                               AchievementId;                                     // 0x78(0x10)
};


// Size 0x38
struct ScrambledNamesRequestEvent
{
public:
	TArray<struct ScrambledIdentity>                             Entities;                                          // 0x0(0x10)
	struct FString                                               RequestID;                                         // 0x10(0x10)
	char                                                         TypeOfNameCheck;                                   // 0x20(0x1)
	TArray<bool>                                                 PermissionBlocked;                                 // 0x28(0x10)
};


// Size 0x34
struct ControlWheelActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x18(0x1c)
};


// Size 0xb0
struct CampaignGoalProgressMessage
{
public:
	int64                                                        PreviousProgress;                                  // 0x0(0x8)
	int64                                                        CurrentProgress;                                   // 0x8(0x8)
	int64                                                        CompletionThreshold;                               // 0x10(0x8)
	struct Guid                                                  GoalId;                                            // 0x18(0x10)
	struct DateTime                                              ActiveFrom;                                        // 0x28(0x8)
	struct DateTime                                              ActiveUtil;                                        // 0x30(0x8)
	struct PirateIdentity                                        Pirate;                                            // 0x38(0x78)
};


// Size 0x10
struct WeightedItemDescSpawnDataAssetsWithWeights
{
public:
	TArray<struct WeightedItemDescSpawnDataAssetWithWeight>      WeightedItemSpawnDatas;                            // 0x0(0x10)
};


// Size 0x50
struct GetGuildBrandingResponseModel
{
public:
	struct GuildBrandingModel                                    GuildBranding;                                     // 0x0(0x50)
};


// Size 0x38
struct TaleProposalVoteSlotUpdatedEvent
{
public:
	struct ProposedTaleEntry                                     TaleProposal;                                      // 0x0(0x20)
	class VoyageDescDataAsset*                                   CurrentActiveTale;                                 // 0x20(0x8)
	struct Guid                                                  CrewId;                                            // 0x28(0x10)
};


// Size 0x100
struct PirateMilestoneCompletionEvent
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       Progress;                                          // 0xd0(0x8)
	uint64                                                       Alignment;                                         // 0xd8(0x8)
	uint64                                                       Level;                                             // 0xe0(0x8)
	struct DateTime                                              CompletedAt;                                       // 0xe8(0x8)
	struct FString                                               AlignmentKey;                                      // 0xf0(0x10)
};


// Size 0x240
struct VomitVFX
{
public:
	float                                                        Delay;                                             // 0x0(0x4)
	TArray<struct VomitVFXObject>                                VomitVFXObjects;                                   // 0x8(0x10)
	struct FName                                                 SocketName1st;                                     // 0x18(0x8)
	struct Vector                                                Location1st;                                       // 0x20(0xc)
	struct Rotator                                               Rotation1st;                                       // 0x2c(0xc)
	class ParticleSystemComponent*                               Component1st;                                      // 0x38(0x8)
	struct FName                                                 SocketName3rd;                                     // 0x40(0x8)
	struct Vector                                                Location3rd;                                       // 0x48(0xc)
	struct Rotator                                               Rotation3rd;                                       // 0x54(0xc)
	class ParticleSystemComponent*                               Component3rd;                                      // 0x60(0x8)
	TArray<class Class*>                                         No1stObjects;                                      // 0x68(0x10)
	class Controller*                                            Controller;                                        // 0x78(0x8)
};


// Size 0x40
struct EmblemRemoteProgress
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FName                                                 CompanyId;                                         // 0x10(0x8)
	bool                                                         IsCompleted;                                       // 0x18(0x1)
	TArray<struct EmblemRemoteCriteriaProgress>                  CriteriaProgress;                                  // 0x20(0x10)
	struct FString                                               Sig;                                               // 0x30(0x10)
};


// Size 0x48
struct MilestoneData
{
public:
	struct AccoladeProgressId                                    ProgressId;                                        // 0x0(0x24)
	struct Guid                                                  AlignmentId;                                       // 0x24(0x10)
	uint64                                                       InitialClassLevel;                                 // 0x38(0x8)
	uint64                                                       CurrentClassLevel;                                 // 0x40(0x8)
};


// Size 0x20
struct PlayModeLevelArray
{
public:
	TArray<struct StringAssetReference>                          PlayModeLevels;                                    // 0x0(0x10)
	TArray<struct SubModeLevel>                                  SubModes;                                          // 0x10(0x10)
};


// Size 0x34
struct WaterBarrelActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x18(0x1c)
};


// Size 0x20
struct RemoveMemberFromGuildRequestModel
{
public:
	struct GuildUserPirateModel                                  IdOfUserPirateToKick;                              // 0x0(0x20)
};


// Size 0x40
struct AccoladeModel
{
public:
	struct AccoladeProgressId                                    ProgressId;                                        // 0x0(0x24)
	int64                                                        MilestoneLevel;                                    // 0x28(0x8)
	int64                                                        CurrentProgress;                                   // 0x30(0x8)
	int64                                                        Threshold;                                         // 0x38(0x8)
};


// Size 0x38
struct QuestStartCargoRunTelemetryEvent
{
public:
	TArray<struct CargoRunQuestCrateEntries>                     ContractList;                                      // 0x0(0x10)
	struct FString                                               DeliveryLocationIslandName;                        // 0x10(0x10)
	struct FString                                               PickupLocationIslandName;                          // 0x20(0x10)
	int                                                          DeliveryTimeLimitInMinutes;                        // 0x30(0x4)
};


// Size 0x28
struct WieldableBookPageLayoutRepInfo
{
public:
	TArray<struct WieldableBookNamedWidgetTexture>               Images;                                            // 0x0(0x10)
	TArray<struct WieldableBookNamedWidgetText>                  GeneralText;                                       // 0x10(0x10)
	char                                                         Type;                                              // 0x20(0x1)
};


// Size 0xd0
struct SpotLightTemplate
{
public:
	struct SpotLightData                                         SpotLightData;                                     // 0xc0(0xc)
};


// Size 0x10
struct MerchantQuestItemDescAndReward
{
public:
	class UClass*                                                CrateDesc;                                         // 0x0(0x8)
	struct RewardId                                              HandInOnTimeRewardId;                              // 0x8(0x8)
};


// Size 0x10
struct PlayerBlockingUnblockPlayersRequest
{
public:
	TArray<struct BlockablePlayer>                               UnblockPlayers;                                    // 0x0(0x10)
};


// Size 0x20
struct GuildNamesRequestEvent
{
public:
	TArray<struct GuildNameData>                                 GuildNameData;                                     // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x20
struct QuestTableTileOverviews
{
public:
	TArray<struct QuestTableLimitedQuestTileDetails>             LimitedVoyages;                                    // 0x0(0x10)
	TArray<struct QuestTableTileOverview>                        DiscoveryTiles;                                    // 0x10(0x10)
};


// Size 0x18
struct ScrambledNamesRefreshResponseEvent
{
public:
	TArray<struct ScrambledIdentity>                             Entities;                                          // 0x0(0x10)
	char                                                         ScrambleType;                                      // 0x10(0x1)
};


// Size 0x18
struct NPCOnSurfaceShipSizeFloodedLevels
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	TArray<struct NPCOnSurfaceFloodedLevel>                      FloodedLevels;                                     // 0x8(0x10)
};


// Size 0x90
struct AthenaAnimationFacialAnimData
{
public:
	int                                                          FacialIdleAnimationIndex0;                         // 0x0(0x4)
	int                                                          FacialIdleAnimationIndex1;                         // 0x4(0x4)
	TArray<class AnimSequence*>                                  IdleAnimations;                                    // 0x8(0x10)
	class AnimSequence*                                          Death;                                             // 0x18(0x8)
	class AnimSequence*                                          HitReact;                                          // 0x20(0x8)
	struct AthenaAnimationControllableFacialAnimData             Controllables;                                     // 0x28(0x30)
	class AnimMontage*                                           Sick;                                              // 0x58(0x8)
	class AnimSequence*                                          Cough;                                             // 0x60(0x8)
	class AnimSequence*                                          Talk;                                              // 0x68(0x8)
	class AnimSequence*                                          UnderwaterIdle;                                    // 0x70(0x8)
	class AnimMontage*                                           CurrentFacialMontage;                              // 0x78(0x8)
	class AnimMontage*                                           PlayingFacialMontage;                              // 0x80(0x8)
	char                                                         CurrentFacialPriority;                             // 0x88(0x1)
};


// Size 0x40
struct SignedShipId
{
public:
	struct UserPirateId                                          ShipOwner;                                         // 0x0(0x20)
	struct FString                                               ShipId;                                            // 0x20(0x10)
	struct FString                                               Signature;                                         // 0x30(0x10)
};


// Size 0x38
struct PetRoamingAnimationStateDefinition
{
public:
	char                                                         AnimationType;                                     // 0x0(0x1)
	class AnimMontage*                                           MontageData;                                       // 0x8(0x8)
	struct PetAnimationCycleMontage                              CycleData;                                         // 0x10(0x18)
	char                                                         CurrentWieldableLocation;                          // 0x28(0x1)
	char                                                         ResetWieldableLocation;                            // 0x29(0x1)
	float                                                        BlendInTime;                                       // 0x2c(0x4)
	float                                                        BlendOutTime;                                      // 0x30(0x4)
	bool                                                         Uninterruptable;                                   // 0x34(0x1)
	bool                                                         ResetWieldableIfInterrupted;                       // 0x35(0x1)
	bool                                                         AllowHappyReact;                                   // 0x36(0x1)
};


// Size 0x48
struct BuoyantObjectSpawnParams
{
public:
	class BuoyantObjectSpawnProfileDataAsset*                    ArenaSpawnProfile;                                 // 0x0(0x8)
	class BuoyantObjectSpawnProfileDataAsset*                    FloatingItemsWithBarrelsOfPlentySpawnProfile;      // 0x8(0x8)
	class BuoyantObjectSpawnProfileDataAsset*                    MerchantAllianceBarrelsOfPlentySpawnProfile;       // 0x10(0x8)
	char                                                         HitTestTraceChannel;                               // 0x18(0x1)
	TArray<class Class*>                                         ExcludedShipSizes;                                 // 0x20(0x10)
	struct BuoyantObjectSpawnDistributionParams                  SpawnDistributionParams;                           // 0x30(0x14)
};


// Size 0x30
struct ClamberActionStateParams
{
public:
	float                                                        InitialClamberPitch;                               // 0x10(0x4)
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x14(0x1c)
};


// Size 0x100
struct PirateMilestoneCompletionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       Progress;                                          // 0xd0(0x8)
	uint64                                                       Alignment;                                         // 0xd8(0x8)
	uint64                                                       Level;                                             // 0xe0(0x8)
	struct DateTime                                              CompletedAt;                                       // 0xe8(0x8)
	struct FString                                               AlignmentKey;                                      // 0xf0(0x10)
};


// Size 0x40
struct AccoladeShipBreakDownModel
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0x10(0x24)
	int64                                                        ProgressValue;                                     // 0x38(0x8)
};


// Size 0xd0
struct RewardRequestCrewGame
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  ShipId;                                            // 0x10(0x10)
	TArray<struct PirateIdentity>                                Pirates;                                           // 0x20(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0x30(0x8)
	uint32                                                       EmissaryLevel;                                     // 0x38(0x4)
	struct FName                                                 FactionAffiliation;                                // 0x3c(0x8)
	uint32                                                       FactionStreakLevel;                                // 0x44(0x4)
	uint32                                                       OpponentStreakLevel;                               // 0x48(0x4)
	char                                                         FactionDefenderLootLevel;                          // 0x4c(0x1)
	struct PirateIdentity                                        Captain;                                           // 0x50(0x78)
	bool                                                         DontApplyShipProgression;                          // 0xc8(0x1)
};


// Size 0xa0
struct LevelCompletionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  SeasonId;                                          // 0x78(0x10)
	int                                                          Level;                                             // 0x88(0x4)
	int                                                          TimeSpentInLevel;                                  // 0x8c(0x4)
	int                                                          Tier;                                              // 0x90(0x4)
	int                                                          TimeSpentInTier;                                   // 0x94(0x4)
	bool                                                         TierCompleted;                                     // 0x98(0x1)
	bool                                                         SeasonCompleted;                                   // 0x99(0x1)
};


// Size 0x20
struct EventCrewBeckonTags
{
public:
	TArray<struct BeckonTag>                                     CrewBeckonTags;                                    // 0x10(0x10)
};


// Size 0x78
struct DeadActionStateConstructionInfo
{
public:
	struct DamageInstance                                        FinalBlow;                                         // 0x40(0x30)
	char                                                         DeathType;                                         // 0x70(0x1)
	char                                                         RespawnCharacterType;                              // 0x71(0x1)
};


// Size 0x10
struct TavernBoardAvailableMapsEvent
{
public:
	TArray<struct ITavernBoardMap>                               Maps;                                              // 0x0(0x10)
};


// Size 0x30
struct DetailAppearenceDesc
{
public:
	struct StringAssetReference                                  Mesh;                                              // 0x0(0x10)
	TArray<struct DetailAppearenceMaterialDesc>                  Materials;                                         // 0x10(0x10)
	struct StringAssetReference                                  CustomDepthMaterial;                               // 0x20(0x10)
};


// Size 0x10
struct WeightedPetAnimations
{
public:
	TArray<struct WeightedPetAnimation>                          Weightings;                                        // 0x0(0x10)
};


// Size 0x20
struct CarouselPirateClothing
{
public:
	TArray<struct CarouselPirateClothingItem>                    AvailableItems;                                    // 0x0(0x10)
	TArray<struct CarouselPirateClothingCategoryBias>            Probabilities;                                     // 0x10(0x10)
};


// Size 0x1
struct ClothingChestCloseRequestEvent
{
public:
	struct RequestClosePossessionsChestEvent                     ClosePossessionsChestEvent;                        // 0x0(0x1)
};


// Size 0x40
struct VoyageCreatedTelemetryEvent
{
public:
	struct FString                                               VoyageRecipeAsset;                                 // 0x0(0x10)
	struct FString                                               VoyageGenerationLocation;                          // 0x10(0x10)
	int                                                          VoyageRank;                                        // 0x20(0x4)
	int                                                          NumIslandsToAvoid;                                 // 0x24(0x4)
	uint32                                                       VoyageGenerationSeed;                              // 0x28(0x4)
	TArray<struct RewardIdCount>                                 GeneratedRewards;                                  // 0x30(0x10)
};


// Size 0x10
struct ContestZoneDistribution
{
public:
	TArray<struct WeightedContestZone>                           WeightedContestZones;                              // 0x0(0x10)
};


// Size 0x58
struct WeightedItemDescSpawner
{
public:
	char                                                         SpawnSource;                                       // 0x0(0x1)
	TArray<struct SpawnerData>                                   SpawnList;                                         // 0x8(0x10)
	TArray<uintptr_t>                                            SpawnedItems;                                      // 0x18(0x10)
};


// Size 0x48
struct PlayerStateSnapshot
{
public:
	int                                                          PlayerStateId;                                     // 0x0(0x4)
	struct Guid                                                  PlayerGameId;                                      // 0x4(0x10)
	struct FString                                               GamerTag;                                          // 0x18(0x10)
	struct PlayerCharacterSnapshot                               Character;                                         // 0x28(0x14)
};


// Size 0x18
struct ClientBootFlowExistingSessionsRetrievedTelemetryEvent
{
public:
	int                                                          OfferedSessionIndex;                               // 0x0(0x4)
	TArray<struct ClientBootFlowExistingSessionTelemetry>        ExistingSessions;                                  // 0x8(0x10)
};


// Size 0xf8
struct ShipMilestoneProgressionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       ProgressChange;                                    // 0xd0(0x8)
	uint64                                                       CurrentLevel;                                      // 0xd8(0x8)
	struct DateTime                                              UpdatedAt;                                         // 0xe0(0x8)
	struct FString                                               ShipId;                                            // 0xe8(0x10)
};


// Size 0x34
struct ControlCapstanArmActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x18(0x1c)
};


// Size 0x78
struct RequestEmblemProgressMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
};


// Size 0x18
struct NamedStateSelector
{
public:
	TArray<struct NameActiveStatePair>                           NamedStates;                                       // 0x0(0x10)
	struct FName                                                 DefaultStateName;                                  // 0x10(0x8)
};


// Size 0xa8
struct ArrivalTunnelOfTheDamnedActionStateConstructionInfo
{
public:
	struct Guid                                                  SourceServerSessionId;                             // 0x40(0x10)
	struct Guid                                                  CrewId;                                            // 0x50(0x10)
	int                                                          DepartureTunnelStreamingLevelId;                   // 0x60(0x4)
	char                                                         TeleportAudioMode;                                 // 0x64(0x1)
	struct TeleportLocation                                      PlayerLocationRelativeToShip;                      // 0x68(0x40)
};


// Size 0x20
struct StorageContainerContentModifier
{
public:
	TArray<struct StorageContainerContentModifierExtraContentSpawnerEntry> ExtraContentSpawners;                              // 0x0(0x10)
	TArray<class StorageContainerSpecialTypeSelectorEntries*>    ExtraSpecialEntries;                               // 0x10(0x10)
};


// Size 0x1c8
struct RemotePreferences
{
public:
	TArray<struct KeyBindingRemote>                              ActionBindings;                                    // 0x0(0x10)
	TArray<struct KeyBindingRemote>                              AxisBindings;                                      // 0x10(0x10)
	struct Guid                                                  Tag;                                               // 0x20(0x10)
	float                                                        ForceFeedbackIntensity;                            // 0x30(0x4)
	float                                                        MouseSensitivity;                                  // 0x34(0x4)
	float                                                        ControllerSensitivity;                             // 0x38(0x4)
	float                                                        ControllerDeadzone;                                // 0x3c(0x4)
	float                                                        ControllerDeadzoneMenu;                            // 0x40(0x4)
	int                                                          ControllerAutoRepeatMenu;                          // 0x44(0x4)
	float                                                        ControllerNonLinearity;                            // 0x48(0x4)
	float                                                        FieldOfView;                                       // 0x4c(0x4)
	float                                                        MasterVolume;                                      // 0x50(0x4)
	float                                                        SfxVolume;                                         // 0x54(0x4)
	float                                                        MusicVolume;                                       // 0x58(0x4)
	float                                                        ShantyVolume;                                      // 0x5c(0x4)
	float                                                        CrewChatVolume;                                    // 0x60(0x4)
	float                                                        NonCrewChatVolume;                                 // 0x64(0x4)
	float                                                        HitNotificationVolume;                             // 0x68(0x4)
	bool                                                         ExtendedSeaRockAudioEnabled;                       // 0x6c(0x1)
	bool                                                         UsePushToTalk;                                     // 0x6d(0x1)
	bool                                                         UseVirtualKeyboard;                                // 0x6e(0x1)
	bool                                                         InvertYAxisGamepad;                                // 0x6f(0x1)
	bool                                                         InvertYAxisMouse;                                  // 0x70(0x1)
	bool                                                         InvertXAxisGamepad;                                // 0x71(0x1)
	bool                                                         InvertXAxisMouse;                                  // 0x72(0x1)
	bool                                                         UsePlatformForUnattenuatedChat;                    // 0x73(0x1)
	bool                                                         UseProximityChatDirection;                         // 0x74(0x1)
	int                                                          NumberOfLogins;                                    // 0x78(0x4)
	bool                                                         OptedIntoMarketing;                                // 0x7c(0x1)
	int                                                          KeyboardLayout;                                    // 0x80(0x4)
	bool                                                         ShowPlayerTalkingIndicator;                        // 0x84(0x1)
	bool                                                         MuteCopyrightedAudio;                              // 0x85(0x1)
	bool                                                         UseAltMapMarkTexture;                              // 0x86(0x1)
	float                                                        MouseSensitivity_Blunderbuss;                      // 0x88(0x4)
	float                                                        ControllerSensitivity_Blunderbuss;                 // 0x8c(0x4)
	float                                                        MouseSensitivity_Flintlock;                        // 0x90(0x4)
	float                                                        ControllerSensitivity_Flintlock;                   // 0x94(0x4)
	float                                                        MouseSensitivity_EyeOfReach;                       // 0x98(0x4)
	float                                                        ControllerSensitivity_EyeOfReach;                  // 0x9c(0x4)
	float                                                        MouseSensitivity_DoubleBarrelFlintlock;            // 0xa0(0x4)
	float                                                        ControllerSensitivity_DoubleBarrelFlintlock;       // 0xa4(0x4)
	float                                                        MouseSensitivity_ThrowingKnife;                    // 0xa8(0x4)
	float                                                        ControllerSensitivity_ThrowingKnife;               // 0xac(0x4)
	float                                                        MouseSensitivity_Spyglass;                         // 0xb0(0x4)
	float                                                        ControllerSensitivity_Spyglass;                    // 0xb4(0x4)
	float                                                        MouseSensitivity_TridentOfDarkTides;               // 0xb8(0x4)
	float                                                        ControllerSensitivity_TridentOfDarkTides;          // 0xbc(0x4)
	bool                                                         VariableRefreshRate;                               // 0xc0(0x1)
	float                                                        HighDynamicRangeCalib;                             // 0xc4(0x4)
	float                                                        HDRBrightness;                                     // 0xc8(0x4)
	float                                                        HDRContrast;                                       // 0xcc(0x4)
	float                                                        Brightness;                                        // 0xd0(0x4)
	float                                                        Contrast;                                          // 0xd4(0x4)
	int                                                          CVDMode;                                           // 0xd8(0x4)
	float                                                        CVDStrength;                                       // 0xdc(0x4)
	float                                                        ColorSaturationScale;                              // 0xe0(0x4)
	float                                                        NotificationScale;                                 // 0xe4(0x4)
	bool                                                         Joinable;                                          // 0xe8(0x1)
	bool                                                         ShowOwnCrewNameplates;                             // 0xe9(0x1)
	bool                                                         ShowOtherCrewNameplates;                           // 0xea(0x1)
	bool                                                         ShowFishNameplates;                                // 0xeb(0x1)
	bool                                                         ShowOwnCrewStatusTags;                             // 0xec(0x1)
	bool                                                         ScrambleGamertags;                                 // 0xed(0x1)
	bool                                                         ScrambleShipName;                                  // 0xee(0x1)
	bool                                                         ScrambleGuildName;                                 // 0xef(0x1)
	bool                                                         ScrambleGamertagOnShipAnnouncementBanner;          // 0xf0(0x1)
	bool                                                         ScrambleShipNameOnOtherClients;                    // 0xf1(0x1)
	bool                                                         ScrambleGuildNameOnOtherClients;                   // 0xf2(0x1)
	bool                                                         ShowTallTalesOnMapTable;                           // 0xf3(0x1)
	bool                                                         AutoVoteOnProposedVoyage;                          // 0xf4(0x1)
	bool                                                         NotificationsInMenus;                              // 0xf5(0x1)
	bool                                                         ToggleRadialMenu;                                  // 0xf6(0x1)
	bool                                                         StickyRadialItems;                                 // 0xf7(0x1)
	bool                                                         EnableMovementDuringRadial;                        // 0xf8(0x1)
	bool                                                         EnableLookWhenControllingObject;                   // 0xf9(0x1)
	bool                                                         EnableAutoCentreLook;                              // 0xfa(0x1)
	float                                                        AutoCentreLookTimeDelay;                           // 0xfc(0x4)
	float                                                        AutoCentreLookSpeed;                               // 0x100(0x4)
	bool                                                         HoldActionsDontRequireHold;                        // 0x104(0x1)
	bool                                                         HoldActionsWithHeldItemsDontRequireHold;           // 0x105(0x1)
	int                                                          TTSOverride;                                       // 0x108(0x4)
	int                                                          TTSRate;                                           // 0x10c(0x4)
	int                                                          STTOverride;                                       // 0x110(0x4)
	int                                                          LGRTMOverride;                                     // 0x114(0x4)
	bool                                                         TranslateOtherPlayers;                             // 0x118(0x1)
	bool                                                         ScreenSpaceTooltips;                               // 0x119(0x1)
	bool                                                         NarrateToasts;                                     // 0x11a(0x1)
	bool                                                         NarrateBanners;                                    // 0x11b(0x1)
	float                                                        ToastHoldDurationMultiplier;                       // 0x11c(0x4)
	bool                                                         NarrateOnHover;                                    // 0x120(0x1)
	bool                                                         NarrateChangeOnly;                                 // 0x121(0x1)
	bool                                                         NarrateEmotes;                                     // 0x122(0x1)
	bool                                                         UniversalOverlayEnabled;                           // 0x123(0x1)
	int                                                          UniversalOverlayBackgroundColor;                   // 0x124(0x4)
	int                                                          UniversalOverlayTextColor;                         // 0x128(0x4)
	int                                                          UniversalOverlayOpacityPercent;                    // 0x12c(0x4)
	int                                                          UniversalOverlayScalePercent;                      // 0x130(0x4)
	int                                                          UniversalOverlayAnchorXPercent;                    // 0x134(0x4)
	int                                                          UniversalOverlayFontSize;                          // 0x138(0x4)
	int                                                          UniversalOverlayFontStyle;                         // 0x13c(0x4)
	float                                                        UniversalOverlayAnchorYPercent;                    // 0x140(0x4)
	bool                                                         EscapeAsBackAccessibilityOption;                   // 0x144(0x1)
	bool                                                         CrossInputPreference;                              // 0x145(0x1)
	bool                                                         AdventureCrossInputPreference;                     // 0x146(0x1)
	bool                                                         AllowCrossPlatformPlayOnJupiter;                   // 0x147(0x1)
	bool                                                         EnableTalkingIndicatorOnJupiter;                   // 0x148(0x1)
	int                                                          AdventureIslandBanners;                            // 0x14c(0x4)
	int                                                          ArenaIslandBanners;                                // 0x150(0x4)
	bool                                                         OutpostLocationBanners;                            // 0x154(0x1)
	int                                                          UseSingleStick;                                    // 0x158(0x4)
	int                                                          UseSingleStickSettingsApplied;                     // 0x15c(0x4)
	int                                                          UseSingleStickCameraToggle;                        // 0x160(0x4)
	bool                                                         DisableControllerOnPC;                             // 0x164(0x1)
	bool                                                         RecenterMouseInMenus;                              // 0x165(0x1)
	bool                                                         AutoFloatInWater;                                  // 0x166(0x1)
	bool                                                         DisablePirateToast;                                // 0x167(0x1)
	bool                                                         DisableShipToast;                                  // 0x168(0x1)
	int                                                          PushToTalkMode;                                    // 0x16c(0x4)
	bool                                                         CircularUINavigation;                              // 0x170(0x1)
	bool                                                         Enable120Hz;                                       // 0x171(0x1)
	bool                                                         AlwaysSkipMapTableAnimation;                       // 0x172(0x1)
	bool                                                         AudioMonoMix;                                      // 0x173(0x1)
	bool                                                         AudioOutputHeadphones;                             // 0x174(0x1)
	bool                                                         DisableSeasonsNotifications;                       // 0x175(0x1)
	bool                                                         AllowCrewToCustomiseCaptainedShip;                 // 0x176(0x1)
	bool                                                         EnableTutorialAttractAnimation;                    // 0x177(0x1)
	bool                                                         DisableInviteNotifications;                        // 0x178(0x1)
	bool                                                         ControlledTextAlignment;                           // 0x179(0x1)
	bool                                                         ControlledLineHeight;                              // 0x17a(0x1)
	int                                                          OtherCrewsMuteState;                               // 0x17c(0x4)
	int                                                          NauticalNarrationEnabled;                          // 0x180(0x4)
	bool                                                         NarrateInteractableText;                           // 0x184(0x1)
	bool                                                         NarrateInteractableButtons;                        // 0x185(0x1)
	bool                                                         IgnoreDisabledInteractables;                       // 0x186(0x1)
	bool                                                         FishNameplateNarrationEnabled;                     // 0x187(0x1)
	bool                                                         UseContinuousNarration;                            // 0x188(0x1)
	float                                                        ContinuousNarrationDelay;                          // 0x18c(0x4)
	bool                                                         DisableFlashes;                                    // 0x190(0x1)
	bool                                                         DisableBlur;                                       // 0x191(0x1)
	bool                                                         DisableScreenShake;                                // 0x192(0x1)
	bool                                                         DisableOnScreenEffects;                            // 0x193(0x1)
	bool                                                         EnchantedCompassProximityAnnouncerEnabled;         // 0x194(0x1)
	bool                                                         DisableRats;                                       // 0x195(0x1)
	bool                                                         EnableSqueakyWheel;                                // 0x196(0x1)
	float                                                        SqueakyWheelVolume;                                // 0x198(0x4)
	bool                                                         EnableAimAssistAudio;                              // 0x19c(0x1)
	int                                                          RemoteGameLanguage;                                // 0x1a0(0x4)
	bool                                                         DisableShipSittingInteractions;                    // 0x1a4(0x1)
	bool                                                         DisableShipTrinketInteractions;                    // 0x1a5(0x1)
	bool                                                         EnableAimAssist;                                   // 0x1a6(0x1)
	bool                                                         EnableHipFireSlowdownAimAssist;                    // 0x1a7(0x1)
	bool                                                         EnableHipFireRotationalAimAssist;                  // 0x1a8(0x1)
	bool                                                         EnableADSSlowdownAimAssist;                        // 0x1a9(0x1)
	bool                                                         EnableADSRotationalAimAssist;                      // 0x1aa(0x1)
	bool                                                         EnableAllianceAimAssist;                           // 0x1ab(0x1)
	float                                                        ADSSlowdownStrengthAimAssist;                      // 0x1ac(0x4)
	float                                                        ADSRotationStrengthAimAssist;                      // 0x1b0(0x4)
	float                                                        HipFireSlowdownStrengthAimAssist;                  // 0x1b4(0x4)
	float                                                        HipFireRotationStrengthAimAssist;                  // 0x1b8(0x4)
	bool                                                         ShouldStabliseZiplines;                            // 0x1bc(0x1)
	bool                                                         DisableGuildInvites;                               // 0x1bd(0x1)
	bool                                                         DisableGuildActionNotifications;                   // 0x1be(0x1)
	bool                                                         HighContrastKillNotifications;                     // 0x1bf(0x1)
	bool                                                         ServerAuthoritativeHitNotifications;               // 0x1c0(0x1)
	bool                                                         UIMenusSwapBackAndSelectButtons;                   // 0x1c1(0x1)
};


// Size 0x38
struct CutScenePlayData
{
public:
	int                                                          PlayIndex;                                         // 0x0(0x4)
	double                                                       StartTimeInSeconds;                                // 0x8(0x8)
	class SceneDialogueData*                                     DialogueData;                                      // 0x10(0x8)
	TArray<struct Text>                                          LocalisableNames;                                  // 0x18(0x10)
	TArray<struct PossessableSequence>                           PossessableSequences;                              // 0x28(0x10)
};


// Size 0x30
struct ConditionalStatConditionContextPayload
{
public:
	class Object*                                                ObjectOfInterest1;                                 // 0x8(0x8)
	class Object*                                                ObjectOfInterest2;                                 // 0x10(0x8)
	uint32                                                       Increment;                                         // 0x18(0x4)
	TArray<struct PlayerStat>                                    ConditionalStatsFired;                             // 0x20(0x10)
};


// Size 0x88
struct RadialRuleInstanceMapping
{
public:
	class RadialCreationRuleAsset*                               Rule;                                              // 0x0(0x8)
	struct RadialInstance                                        Instance;                                          // 0x8(0x80)
};


// Size 0x148
struct QuestTableTallTaleQuest
{
public:
	struct FString                                               InstanceId;                                        // 0x0(0x10)
	struct FString                                               TallTaleQuestId;                                   // 0x10(0x10)
	struct FText                                                 DisplayName;                                       // 0x20(0x38)
	struct FText                                                 Description;                                       // 0x58(0x38)
	struct FString                                               BackgroundImageUrl;                                // 0x90(0x10)
	int                                                          CheckpointProgress;                                // 0xa0(0x4)
	int                                                          TotalCheckpoints;                                  // 0xa4(0x4)
	struct FString                                               CheckpointQuestId;                                 // 0xa8(0x10)
	struct FText                                                 CheckpointDescription;                             // 0xb8(0x38)
	int                                                          TallTaleDuration;                                  // 0xf0(0x4)
	TArray<struct QuestTableTallTaleRewardData>                  Rewards;                                           // 0xf8(0x10)
	bool                                                         IsLocked;                                          // 0x108(0x1)
	TArray<struct Text>                                          LockedDescriptions;                                // 0x110(0x10)
	struct QuestTableQuestTravelSettings                         TravelSettings;                                    // 0x120(0x28)
};


// Size 0x18
struct MilestoneAlignment
{
public:
	struct FName                                                 FeatureName;                                       // 0x0(0x8)
	TArray<struct MilestoneAlignmentThreshold>                   MilestoneAlignmentThresholds;                      // 0x8(0x10)
};


// Size 0x58
struct ShipLeak
{
public:
	struct ShipLeakParams                                        Params;                                            // 0x0(0x1c)
	class ParticleSystemComponent*                               SplashParticleSystem;                              // 0x40(0x8)
};


// Size 0x18
struct GetCampfiresGameServerResponseModel
{
public:
	TArray<struct CampfireStateData>                             Data;                                              // 0x8(0x10)
};


// Size 0x48
struct LockMetaWrapper
{
public:
	TArray<struct StorableLockState>                             LockStates;                                        // 0x18(0x10)
	multicastinlinedelegate                                      LockOpenDelegate;                                  // 0x28(0x10)
	multicastinlinedelegate                                      LockOpened;                                        // 0x38(0x10)
};


// Size 0x68
struct PocketWatchHandParams
{
public:
	TArray<struct PocketWatchTickAnimation>                      PrimaryTickAnimations;                             // 0x0(0x10)
	struct WeightedProbabilityRange                              PrimaryTickAnimationProbabilities;                 // 0x10(0x20)
	TArray<struct PocketWatchTickAnimation>                      SpecialTickAnimations;                             // 0x30(0x10)
	struct WeightedProbabilityRange                              SpecialTickAnimationProbabilities;                 // 0x40(0x20)
	float                                                        ProbabilityOfSpecialTick;                          // 0x60(0x4)
};


// Size 0x18
struct RelativePercentageRewardDistributionModel
{
public:
	float                                                        DefaultPercentage;                                 // 0x0(0x4)
	TArray<struct NumCrewsPercentageModel>                       NumCrewsPercentageMap;                             // 0x8(0x10)
};


// Size 0x10
struct InvasionTunnelLoadedSceneryTileAssetEntryWrapper
{
public:
	TArray<struct InvasionTunnelLoadedSceneryTileAssetEntry>     Data;                                              // 0x0(0x10)
};


// Size 0x18
struct StorageContainerWeightedItemListFeatureGroup
{
public:
	struct FName                                                 Feature;                                           // 0x0(0x8)
	TArray<struct StorageContainerWeightedItemListEntry>         Entries;                                           // 0x8(0x10)
};


// Size 0x90
struct EnterTunnelOfTheDamnedActionStateConstructionInfo
{
public:
	int                                                          TunnelId;                                          // 0x40(0x4)
	int                                                          TunnelStreamingLevelId;                            // 0x44(0x4)
	struct TeleportLocation                                      TeleportLocation;                                  // 0x48(0x40)
	char                                                         TeleportAudioMode;                                 // 0x88(0x1)
	bool                                                         WasRevivable;                                      // 0x89(0x1)
};


// Size 0x78
struct PirateDeletionRequestedEvent
{
public:
	struct PirateIdentity                                        Target;                                            // 0x0(0x78)
};


// Size 0xf8
struct ShipMilestoneProgressionEvent
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       ProgressChange;                                    // 0xd0(0x8)
	uint64                                                       CurrentLevel;                                      // 0xd8(0x8)
	struct DateTime                                              UpdatedAt;                                         // 0xe0(0x8)
	struct FString                                               ShipId;                                            // 0xe8(0x10)
};


// Size 0x68
struct GuildInvitesRecievedModel
{
public:
	struct GuildUserPirateModel                                  InviterUserPirateId;                               // 0x0(0x20)
	struct SignedGuildIdModel                                    SignedGuildId;                                     // 0x20(0x28)
	struct Guid                                                  InviteId;                                          // 0x48(0x10)
	struct FString                                               InviterSignature;                                  // 0x58(0x10)
};


// Size 0x88
struct NoteDeletedEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Guid                                                  NoteId;                                            // 0x78(0x10)
};


// Size 0x40
struct AlignmentFlagMeshParams
{
public:
	struct FlagMeshParams                                        BelleFlag;                                         // 0x0(0x20)
	struct FlagMeshParams                                        ReaperFlag;                                        // 0x20(0x20)
};


// Size 0x28
struct StrainDamage
{
public:
	TArray<struct DamageParamWeights>                            DamageParams;                                      // 0x0(0x10)
	class UClass*                                                DamagerType;                                       // 0x10(0x8)
};


// Size 0x168
struct AthenaAnimationPitchControlStates
{
public:
	struct AthenaAnimationObjectTargetingOptions                 StandardPassive;                                   // 0x0(0x3c)
	struct AthenaAnimationObjectTargetingOptions                 StandardWater;                                     // 0x3c(0x3c)
	struct AthenaAnimationObjectTargetingOptions                 Action1;                                           // 0x78(0x3c)
	struct AthenaAnimationObjectTargetingOptions                 Action1Water;                                      // 0xb4(0x3c)
	struct AthenaAnimationObjectTargetingOptions                 Action2;                                           // 0xf0(0x3c)
	struct AthenaAnimationObjectTargetingOptions                 Action2Water;                                      // 0x12c(0x3c)
};


// Size 0x40
struct EventNPCChatUINotification
{
public:
	struct NPCChat                                               NpcMessage;                                        // 0x0(0x40)
};


// Size 0xa8
struct MechanismBinding
{
public:
	TArray<class MechanismElementProxy*>                         Actions;                                           // 0x0(0x10)
	TArray<class MechanismElementProxy*>                         Triggers;                                          // 0x10(0x10)
	struct MechanismBindingSettings                              Settings;                                          // 0x20(0x68)
	TArray<class MechanismElementProxy*>                         SelectedActions;                                   // 0x88(0x10)
	TArray<class MechanismElementProxy*>                         SelectedTriggers;                                  // 0x98(0x10)
};


// Size 0x90
struct PioneerRewardEpochCompleteEvent
{
public:
	int64                                                        PlayTime;                                          // 0x0(0x8)
	struct PirateIdentity                                        PirateIdentity;                                    // 0x8(0x78)
	struct Guid                                                  PlayerGameId;                                      // 0x80(0x10)
};


// Size 0x38
struct AthenaAnimationDeathData
{
public:
	struct DamageInstance                                        KillingDamage;                                     // 0x0(0x30)
	char                                                         DeathType;                                         // 0x30(0x1)
	bool                                                         IsDead;                                            // 0x34(0x1)
	bool                                                         Reviving;                                          // 0x34(0x1)
};


// Size 0xe8
struct PirateMilestoneProgressionEvent
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       ProgressChange;                                    // 0xd0(0x8)
	uint64                                                       CurrentLevel;                                      // 0xd8(0x8)
	struct DateTime                                              UpdatedAt;                                         // 0xe0(0x8)
};


// Size 0x50
struct AggressiveGhostShipSplineData
{
public:
	struct AggressiveGhostShipSplineDataVariables                Variables;                                         // 0x0(0x38)
	struct AggressiveGhostShipSplineDataOffsets                  Offsets;                                           // 0x38(0x18)
};


// Size 0x18
struct CompanySpecificBootyReward
{
public:
	class UClass*                                                CompanyId;                                         // 0x0(0x8)
	struct RewardId                                              RewardId;                                          // 0x8(0x8)
	bool                                                         RequirePirateLegend;                               // 0x10(0x1)
	bool                                                         CanOnlySellToIfNotOwnedByCrew;                     // 0x11(0x1)
};


// Size 0x78
struct TavernBoardTakeMapRequestEvent
{
public:
	struct ITavernBoardMap                                       Map;                                               // 0x0(0x78)
};


// Size 0x38
struct ClothingLoadoutContainer
{
public:
	struct ClothingLoadout                                       Loadout;                                           // 0x0(0x30)
	bool                                                         HasBeenSet;                                        // 0x30(0x1)
};


// Size 0x28
struct ContestCrewResultModel
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<struct ContestCrewMemberModel>                        Members;                                           // 0x10(0x10)
	uint32                                                       Reputation;                                        // 0x20(0x4)
	uint32                                                       Score;                                             // 0x24(0x4)
};


// Size 0x20
struct AISwimmingCreatureDeadActionStateParams
{
public:
	float                                                        TimeLeftInStateToStartDithering;                   // 0x4(0x4)
	TArray<struct AISwimmingCreatureDeadActionStateEventMapItem> CustomEvents;                                      // 0x8(0x10)
	float                                                        DoQuickDeathTestWhenLessThanTimeLeftInState;       // 0x18(0x4)
	float                                                        QuickDeathTime;                                    // 0x1c(0x4)
};


// Size 0x38
struct AthenaAnimationSkeletonSensingParams
{
public:
	TArray<struct AthenaAnimationSkeletonSensingAnimations>      AllLoadedAISensingAnimations;                      // 0x0(0x10)
	char                                                         CurrentSensingState;                               // 0x10(0x1)
	class AnimSequence*                                          InitialReactionAnimation;                          // 0x18(0x8)
	class BlendSpace1D*                                          SearchingAnimation;                                // 0x20(0x8)
	class AnimSequence*                                          AlertingOthersAnimation;                           // 0x28(0x8)
	class BlendSpace1D*                                          PursuitAnimation;                                  // 0x30(0x8)
};


// Size 0x78
struct TradeRouteMapTextData
{
public:
	struct FText                                                 Text;                                              // 0x0(0x38)
	char                                                         TextId;                                            // 0x38(0x1)
	struct TreasureMapWidgetText                                 TextLayout;                                        // 0x3c(0x3c)
};


// Size 0x78
struct WreckSpawnBlockingObjectArrays
{
public:
	TArray<struct Vector>                                        ShipsLocations;                                    // 0x20(0x10)
	TArray<class Interface*>                                     AmbientShipwrecks;                                 // 0x30(0x10)
	TArray<class Interface*>                                     ActiveCustomShipwrecks;                            // 0x40(0x10)
	TArray<struct WreckMatch>                                    AmbientWrecksWithoutClosePlayers;                  // 0x50(0x10)
	TArray<struct WreckMatch>                                    AmbientWrecksWithClosePlayers;                     // 0x60(0x10)
};


// Size 0x20
struct StaticMeshVoteIndicator
{
public:
	int                                                          VoteId;                                            // 0x0(0x4)
	struct FName                                                 CompanyName;                                       // 0x4(0x8)
	TArray<struct CompanyMeshVoteIndicator>                      CompanyMeshes;                                     // 0x10(0x10)
};


// Size 0x10
struct VoyageProposalsUpdatedEvent
{
public:
	TArray<struct VoyageProposalDescViewModel>                   Entitlements;                                      // 0x0(0x10)
};


// Size 0x20
struct CloudTileParameters
{
public:
	TArray<struct CloudTypeDefinition>                           Meshes;                                            // 0x0(0x10)
	int                                                          Samples;                                           // 0x10(0x4)
	int                                                          Seed;                                              // 0x14(0x4)
	float                                                        MeshScaleMultiplier;                               // 0x18(0x4)
	bool                                                         ShouldCloudTileBeGenerated;                        // 0x1c(0x1)
};


// Size 0xb0
struct PirateReRollRequestModel
{
public:
	struct PirateInventoryItemModel                              EntitlementItem;                                   // 0x0(0x30)
	struct PirateDescription                                     PirateDescription;                                 // 0x30(0x80)
};


// Size 0xc8
struct AthenaAnimationRowboatParams
{
public:
	bool                                                         InLeftArmRow;                                      // 0x0(0x1)
	bool                                                         InLeftArmRecover;                                  // 0x1(0x1)
	bool                                                         InRightArmRow;                                     // 0x2(0x1)
	bool                                                         InRightArmRecover;                                 // 0x3(0x1)
	float                                                        LeftArmForce;                                      // 0x4(0x4)
	float                                                        LeftArmRecover;                                    // 0x8(0x4)
	float                                                        RightArmForce;                                     // 0xc(0x4)
	float                                                        RightArmRecover;                                   // 0x10(0x4)
	char                                                         Braking;                                           // 0x14(0x1)
	bool                                                         BrakingLeftOrBoth;                                 // 0x15(0x1)
	bool                                                         BrakingRightOrBoth;                                // 0x16(0x1)
	int                                                          Direction;                                         // 0x18(0x4)
	bool                                                         PlayIdle;                                          // 0x1c(0x1)
	bool                                                         LeftArmInactive;                                   // 0x1d(0x1)
	bool                                                         RightArmInactive;                                  // 0x1e(0x1)
	struct Vector                                                CameraAdjustment;                                  // 0x20(0xc)
	bool                                                         IsSeated;                                          // 0x2c(0x1)
	struct AthenaAnimationRowboatAnimationsFirstPerson           RowBoatAnimationsFirstPerson;                      // 0x30(0x30)
	struct AthenaAnimationRowboatAnimationsThirdPerson           RowBoatAnimationsThirdPerson;                      // 0x60(0x50)
	struct AthenaAnimationRowboatAnimationsPassenger             RowBoatAnimationsPassenger;                        // 0xb0(0x18)
};


// Size 0xf0
struct BuoyantObjectSpawnProfile
{
public:
	struct WeightedProbabilityRangeOfRanges                      TravelDistanceToSpawnObjects;                      // 0x0(0x30)
	float                                                        MaximumDistanceThresholdToIncrementCurrentDistanceTravelled; // 0x30(0x4)
	struct WeightedProbabilityRange                              NumberOfBarrelsToSpawn;                            // 0x38(0x20)
	struct WeightedProbabilityRange                              NumberOfSpecialItemTypesToSpawn;                   // 0x58(0x20)
	struct FloatRange                                            SpawnCentreDistanceInFrontOfShip;                  // 0x78(0x10)
	struct FloatRange                                            SpawnCentreOffsetFromShipPath;                     // 0x88(0x10)
	struct FloatRange                                            ObjectSpawnDepth;                                  // 0x98(0x10)
	struct FloatRange                                            ObjectLifetime;                                    // 0xa8(0x10)
	float                                                        ObjectSinkingTime;                                 // 0xb8(0x4)
	float                                                        ObjectSinkRadius;                                  // 0xbc(0x4)
	float                                                        MinShipSpeedInKnotsToSpawnObjects;                 // 0xc0(0x4)
	float                                                        WildlifeSpawnHeight;                               // 0xc4(0x4)
	float                                                        ChanceOfSpawningSpecialItems;                      // 0xc8(0x4)
	class UClass*                                                WildlifeType;                                      // 0xd0(0x8)
	class UClass*                                                BarrelType;                                        // 0xd8(0x8)
	TArray<struct BuoyantObjectWeightedGroup>                    SpecialItemTypes;                                  // 0xe0(0x10)
};


// Size 0x28
struct HitRegSnapshotDisagreementTelemetryEvent
{
public:
	struct Guid                                                  TelemetryAttackId;                                 // 0x0(0x10)
	char                                                         ShotType;                                          // 0x10(0x1)
	TArray<struct HitRegSnapshotDisagreementTelemetryEntry>      Disagreements;                                     // 0x18(0x10)
};


// Size 0x20
struct EventSingleCompanyStateUpdate
{
public:
	struct UICompanyState                                        State;                                             // 0x0(0x20)
};


// Size 0x20
struct IndividualMeshScoringToAdd
{
public:
	struct FName                                                 MeshName;                                          // 0x0(0x8)
	struct IndividualMeshScoring                                 IndividualMeshScoring;                             // 0x8(0x18)
};


// Size 0x20
struct OnlinePermissionsRequestEvent
{
public:
	TArray<struct OnlinePermissionsRequestData>                  PlayerIdsAndPermissionMasks;                       // 0x0(0x10)
	struct Guid                                                  RequestID;                                         // 0x10(0x10)
};


// Size 0x1c
struct AtmosphericPressureZoneParametersAndLocation
{
public:
	struct AtmosphericPressureZoneParameters                     PressureZoneParameters;                            // 0x0(0x14)
	struct Vector2D                                              Location;                                          // 0x14(0x8)
};


// Size 0x10
struct SkellyFortPlayerStat
{
public:
	class UClass*                                                GameEventType;                                     // 0x0(0x8)
	struct PlayerStat                                            StatToFire;                                        // 0x8(0x4)
};


// Size 0x20
struct PlayerUserSettings
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct ServerUserGameSettings                                UserSettings;                                      // 0x18(0x3)
};


// Size 0x34
struct ControlPulleyActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x18(0x1c)
};


// Size 0x28
struct FlamesOfFateFlameInfo
{
public:
	char                                                         FlameOfFateType;                                   // 0x0(0x1)
	struct Color                                                 LightColour;                                       // 0x4(0x4)
	struct Color                                                 FXColour;                                          // 0x8(0x4)
	struct Color                                                 GlowColour;                                        // 0xc(0x4)
	struct Color                                                 FlameColour;                                       // 0x10(0x4)
	class Texture*                                               FlameTexture;                                      // 0x18(0x8)
	struct PlayerStat                                            StatToFireWhenTaken;                               // 0x20(0x4)
	struct PlayerStat                                            StatToFireWhenTakenInAlliance;                     // 0x24(0x4)
};


// Size 0x28
struct EventGetAllKeybindingsResponse
{
public:
	TArray<struct KeyBinding>                                    ActionBindings;                                    // 0x0(0x10)
	TArray<struct KeyBinding>                                    AxisBindings;                                      // 0x10(0x10)
	int                                                          DefaultKeyboardLayout;                             // 0x20(0x4)
};


// Size 0x18
struct HUDBlurParams
{
public:
	class MaterialParameterCollection*                           ScreenEffectsMaterialParameterCollection;          // 0x0(0x8)
	struct HUDBlurSourceParams                                   MenuBlurParams;                                    // 0x8(0x8)
	struct HUDBlurSourceParams                                   MigrationBlurParams;                               // 0x10(0x8)
};


// Size 0x48
struct NonVerbalPageData
{
public:
	TArray<struct NonVerbalPhraseData>                           Phrases;                                           // 0x0(0x10)
	struct FText                                                 PageName;                                          // 0x10(0x38)
};


// Size 0x30
struct ShipDiveMusicUpdatedNetworkEvent
{
public:
	struct TimeStampedShipDiveMusicState                         TimeStampedMusicStateWithTheme;                    // 0x18(0x18)
};


// Size 0x18
struct CarouselPirateBodyshape
{
public:
	float                                                        RandomizationBias;                                 // 0x0(0x4)
	struct FloatRange                                            ShapeMagnitude;                                    // 0x4(0x10)
	struct CarouselPirateBodyshapeCompass                        BodyShapeCompass;                                  // 0x14(0x2)
};


// Size 0x128
struct ProgressUpdatedNotificationUIEvent
{
public:
	struct ProgressPoint                                         Old;                                               // 0x0(0x20)
	struct ProgressPoint                                         New;                                               // 0x20(0x20)
	struct FString                                               RibbonImage;                                       // 0x40(0x10)
	struct FString                                               BackgroundImage;                                   // 0x50(0x10)
	struct FText                                                 Title;                                             // 0x60(0x38)
	struct FText                                                 Body;                                              // 0x98(0x38)
	char                                                         Style;                                             // 0xd0(0x1)
	struct FString                                               RankIncreaseAudioCue;                              // 0xd8(0x10)
	struct FString                                               RankIncreaseStopAudioCue;                          // 0xe8(0x10)
	struct FString                                               RankLevelUpAudioCue;                               // 0xf8(0x10)
	struct FString                                               RankTriggerAudioCue;                               // 0x108(0x10)
	struct FString                                               DistinctionRankLevelUpAudioCue;                    // 0x118(0x10)
};


// Size 0x20
struct AthenaAnimationSkeletonKnockbackLocomotionStrength
{
public:
	struct AthenaAnimationSkeletonKnockbackLocomotion            LowStrength;                                       // 0x0(0x10)
	struct AthenaAnimationSkeletonKnockbackLocomotion            HighStrength;                                      // 0x10(0x10)
};


// Size 0x14
struct EventSingleCompanyProgressUpdate
{
public:
	struct UICompanyProgress                                     Progress;                                          // 0x0(0x14)
};


// Size 0x30
struct UIKeyBindingOptionSelectedTelemetryEvent
{
public:
	struct FString                                               BindingSet;                                        // 0x0(0x10)
	struct KeyBinding                                            Value;                                             // 0x10(0x20)
};


// Size 0x30
struct GuildRolePermissionsRequestModel
{
public:
	struct RolePermissionsModel                                  RolePermissions;                                   // 0x0(0x30)
};


// Size 0x78
struct GuildInfo
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct GuildBranding                                         Branding;                                          // 0x10(0x50)
	int                                                          Level;                                             // 0x60(0x4)
	int                                                          DistinctionLevel;                                  // 0x64(0x4)
	int                                                          LedgerPosition;                                    // 0x68(0x4)
	int                                                          NumberOfMembers;                                   // 0x6c(0x4)
	int                                                          NumberOfShips;                                     // 0x70(0x4)
};


// Size 0x48
struct PetRoamingAnimationStateDefinitionWrapper
{
public:
	struct StringAssetReference                                  LoadableDefinition;                                // 0x0(0x10)
	TArray<struct PetRoamingAnimationStateLoadableWeightedDefinition> LoadableWeightedDefinitions;                       // 0x10(0x10)
	char                                                         AnimationState;                                    // 0x20(0x1)
	class PetRoamingAnimationStateDefinitionDataAsset*           DefinitionAsset;                                   // 0x28(0x8)
	TArray<struct PetRoamingAnimationStateDefinitionWeightedDataAsset> WeightedDefinitionAssets;                          // 0x30(0x10)
	bool                                                         LoadOnDemand;                                      // 0x40(0x1)
	bool                                                         UseWeightedAnimationArray;                         // 0x41(0x1)
};


// Size 0x18
struct AIShipWorldSettings
{
public:
	TArray<struct FeatureLockedAIShipBattles>                    FeatureToggledBattlesData;                         // 0x0(0x10)
	class AIShipBattlesDataAsset*                                DefaultBattlesData;                                // 0x10(0x8)
};


// Size 0x10
struct TimedDoorLandmarkReactions
{
public:
	TArray<struct LandmarkReactionKeyFrame>                      Reactions;                                         // 0x0(0x10)
};


// Size 0x50
struct DynamicAnimationAllocationTelemetryEvent
{
public:
	TArray<struct LoadRequestAssetInfo>                          LoadAssetFailedInfo;                               // 0x0(0x10)
	TArray<struct LoadRequestAssetInfo>                          LoadAssetSuccessInfo;                              // 0x10(0x10)
	TArray<struct FallbackAnimUsageInfo>                         FallbackAnimUsageInfo;                             // 0x20(0x10)
	TArray<struct AssetLoadSkipInfo>                             AssetLoadSkipInfo;                                 // 0x30(0x10)
	TArray<struct AnimInfo>                                      LoadOrderMismatchOccuranceAnimInfo;                // 0x40(0x10)
};


// Size 0x88
struct EjectFromTunnelOfTheDamnedActionStateConstructionInfo
{
public:
	int                                                          TunnelId;                                          // 0x40(0x4)
	int                                                          TunnelStreamingLevelId;                            // 0x44(0x4)
	struct TeleportLocation                                      TeleportLocation;                                  // 0x48(0x40)
};


// Size 0x18
struct ReapersMarkLevelEntry
{
public:
	int                                                          VoyageCount;                                       // 0x0(0x4)
	TArray<struct ReapersMarkLevelMultiplier>                    CompanyMultipliers;                                // 0x8(0x10)
};


// Size 0x20
struct MastSnapshot
{
public:
	TArray<struct SailSnapshot>                                  Sails;                                             // 0x0(0x10)
	float                                                        LengthProportionRatio;                             // 0x10(0x4)
	float                                                        AngleRatio;                                        // 0x14(0x4)
	int                                                          DamageLevel;                                       // 0x18(0x4)
};


// Size 0x10
struct EquipmentChestItemEntitlementsUpdatedEvent
{
public:
	TArray<struct ChestEntitlementViewModel>                     ItemEntitlements;                                  // 0x0(0x10)
};


// Size 0x80
struct EventInactivityDetectionActionPerformed
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct FName                                                 ActionName;                                        // 0x78(0x8)
};


// Size 0xc8
struct ActiveLightning
{
public:
	struct LightningImpact                                       Impact;                                            // 0x0(0x28)
};


// Size 0x68
struct AthenaAnimationSinkingTunnel
{
public:
	struct AthenaAnimationSinkingTunnelAnimData                  SinkingAnimData;                                   // 0x0(0x8)
	bool                                                         Activated;                                         // 0x8(0x1)
	class AthenaAnimationSinkingTunnelDataAsset*                 DrowningAnimationsDataAsset;                       // 0x10(0x8)
};


// Size 0xe0
struct CargoRunQuestParams
{
public:
	bool                                                         IsCargoRunQuestV2;                                 // 0x48(0x1)
	struct WeightedProbabilityRange                              NumberOfRequiredItems;                             // 0x50(0x20)
	struct WeightedProbabilityRangeOfRanges                      TimeLimitInMinutes;                                // 0x70(0x30)
	class CargoRunQuestRandomRequiredItemsDataAsset*             RequiredItemsDataAsset;                            // 0xa0(0x8)
	class CargoRunQuestRandomRequiredItemsDataAsset*             GroupedRequiredItemsDataAsset;                     // 0xa8(0x8)
	struct WeightedProbabilityRange                              NumberOfGroups;                                    // 0xb0(0x20)
	TArray<struct CargoRunQuestCategoryGroupBounds>              CategoryGroupBounds;                               // 0xd0(0x10)
};


// Size 0x20
struct SendUserSettingsToServerRpc
{
public:
	struct ServerUserGameSettings                                ServerUserGameSettings;                            // 0x18(0x3)
};


// Size 0x18
struct InvasionTunnelCreatureDioramaSpawnManager
{
public:
	TArray<struct InvasionTunnelDioramaRestrictedSpawnSettings>  DioramaRestrictedSpawnSettings;                    // 0x8(0x10)
};


// Size 0x38
struct EventOneShotUseTriggered
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	class UClass*                                                InputID;                                           // 0x8(0x8)
	bool                                                         PlayOneShotAnimation;                              // 0x10(0x1)
	struct WieldableItemActionVisuals                            Visuals;                                           // 0x18(0x18)
	bool                                                         WieldableUseVisualVariant;                         // 0x30(0x1)
	bool                                                         KeepOnIdle;                                        // 0x31(0x1)
	bool                                                         TriggerIndependently;                              // 0x32(0x1)
};


// Size 0x20
struct PlayFabPartyTelemetryFragment
{
public:
	int64                                                        TotalMemoryUsed;                                   // 0x0(0x8)
	uint32                                                       FailedPermissionsChecksCount;                      // 0x8(0x4)
	uint32                                                       RequestEntityIDsFromXUIDsFailedCount;              // 0xc(0x4)
	TArray<struct PlayFabPartyNetworkStats>                      PerNetworkStats;                                   // 0x10(0x10)
};


// Size 0x10
struct GuildReputationRequestContent
{
public:
	TArray<struct SignedGuildIdModel>                            SignedGuildIds;                                    // 0x0(0x10)
};


// Size 0x80
struct TreasureMapWidgetTextWithScaledWidthBackground
{
public:
	struct TreasureMapWidgetTexture                              Background;                                        // 0x40(0x30)
	float                                                        MaxTextWidthForDefaultTextureScale;                // 0x70(0x4)
	float                                                        MinScaleModifier;                                  // 0x74(0x4)
	float                                                        MaxScaleModifier;                                  // 0x78(0x4)
};


// Size 0x28
struct VoyageProposalCompanyAssetData
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct StringAssetReference                                  OpenVoyageProposalMesh;                            // 0x8(0x10)
	TArray<struct VoyageProposalAssetData>                       Ranks;                                             // 0x18(0x10)
};


// Size 0x88
struct AthenaAnimationServerAnimAISpawnData
{
public:
	assetclass                                                   ObjectId;                                          // 0x0(0x20)
	float                                                        MaxSpawnAnimDurations;                             // 0x20(0x4)
	struct AthenaAnimationServerAnimSpawnTimings                 SpawnAnimDurations;                                // 0x38(0x10)
};


// Size 0x50
struct RewardRequestMessage
{
public:
	TArray<struct PirateIdentity>                                Pirates;                                           // 0x0(0x10)
	struct Guid                                                  RequestID;                                         // 0x10(0x10)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
	struct FName                                                 RewardId;                                          // 0x30(0x8)
	struct FName                                                 CompanyAffiliation;                                // 0x38(0x8)
	struct FName                                                 EmissaryAffiliation;                               // 0x40(0x8)
	int                                                          EmissaryLevel;                                     // 0x48(0x4)
	bool                                                         NotifyPlayer;                                      // 0x4c(0x1)
	char                                                         PlayMode;                                          // 0x4d(0x1)
	char                                                         PlayModeVariant;                                   // 0x4e(0x1)
};


// Size 0x70
struct ClamberActionStateConstructionInfo
{
public:
	float                                                        NormalisedInteractionWidth;                        // 0x58(0x4)
	char                                                         ClimbId;                                           // 0x5c(0x1)
	struct LadderBlendParams                                     ClamberBlendParams;                                // 0x60(0xc)
};


// Size 0x28
struct UpdateScoreBalanceHUDEvent
{
public:
	TArray<struct ContestLeaderboardEntry>                       ContestLeaderboard;                                // 0x18(0x10)
};


// Size 0x10
struct SeaOfThievesOnDemandTreasurePopupConversionTable
{
public:
	TArray<struct SeaOfThievesOnDemandTreasurePopupConversionPair> Conversions;                                       // 0x0(0x10)
};


// Size 0x9c
struct AthenaCharacterSwimParams
{
public:
	float                                                        EnterSwimmingDepth;                                // 0x0(0x4)
	float                                                        ExitSwimmingDepth;                                 // 0x4(0x4)
	float                                                        FloatHeight;                                       // 0x8(0x4)
	float                                                        ThirdPersonMeshOffset;                             // 0xc(0x4)
	float                                                        ThirdPersonMeshAdjustTime;                         // 0x10(0x4)
	float                                                        FullGravityHeight;                                 // 0x14(0x4)
	float                                                        SurfaceSwimDepth;                                  // 0x18(0x4)
	float                                                        SurfaceSwimExitDepth;                              // 0x1c(0x4)
	float                                                        SubmergedBuoyancyDepth;                            // 0x20(0x4)
	float                                                        ZeroDragDepth;                                     // 0x24(0x4)
	float                                                        MaxBuoyancyAcceleration;                           // 0x28(0x4)
	float                                                        SubmergedBuoyancyAcceleration;                     // 0x2c(0x4)
	float                                                        SubmergedBuoyancyTime;                             // 0x30(0x4)
	float                                                        DragFactor;                                        // 0x34(0x4)
	float                                                        MaxDragAcceleration;                               // 0x38(0x4)
	float                                                        MinPushDownRoofAngle;                              // 0x3c(0x4)
	float                                                        MinPushDownRoofZ;                                  // 0x40(0x4)
	float                                                        MinCorrectionVelForSurfaceSwim;                    // 0x44(0x4)
	float                                                        SurfaceVelBlendTime;                               // 0x48(0x4)
	float                                                        UnderwaterSwimmingEntryPitch;                      // 0x4c(0x4)
	float                                                        UnderwaterSwimmingEntryAccel;                      // 0x50(0x4)
	float                                                        UnderwaterSwimDepth;                               // 0x54(0x4)
	float                                                        UnderwaterSwimmingDragSpeed;                       // 0x58(0x4)
	float                                                        UnderwaterSwimmingSpeed;                           // 0x5c(0x4)
	float                                                        PitchBlendOffRate;                                 // 0x60(0x4)
	float                                                        MaxSwimDepth;                                      // 0x64(0x4)
	float                                                        MaxSwimDepthBuoyancy;                              // 0x68(0x4)
	float                                                        MaxSwimDepthBuoyancyRange;                         // 0x6c(0x4)
	float                                                        MaxSwimDepthDragFactor;                            // 0x70(0x4)
	float                                                        CharacterCentreOffset;                             // 0x74(0x4)
	char                                                         WaterDepthTraceQueryType;                          // 0x78(0x1)
	struct AthenaCharacterSwimSpeed                              SurfaceSwimSpeeds;                                 // 0x7c(0xc)
	struct AthenaCharacterSwimSpeed                              UnderwaterSwimSpeeds;                              // 0x88(0xc)
	float                                                        SurfaceSwimmingDepthWhenEnteredWater;              // 0x94(0x4)
};


// Size 0x58
struct EventCharacterHitReaction
{
public:
	struct ImpactDamageEvent                                     ImpactDamage;                                      // 0x0(0x58)
};


// Size 0x20
struct AthenaAnimationItemListingMappingType
{
public:
	TArray<struct AthenaAnimationItemListingMappings>            FirstPersonListing;                                // 0x0(0x10)
	TArray<struct AthenaAnimationItemListingMappings>            ThirdPersonListing;                                // 0x10(0x10)
};


// Size 0x20
struct AggressiveGhostShipDifficultyShipSizeTargetSelection
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	bool                                                         IsSoloCrew;                                        // 0x8(0x1)
	TArray<struct AggressiveGhostShipDifficultyTargetSelection>  TargetSelection;                                   // 0x10(0x10)
};


// Size 0x18
struct FailedToFindPlayerSpawnLocationTelemetryEvent
{
public:
	char                                                         SpawnState;                                        // 0x0(0x1)
	bool                                                         IsInBrig;                                          // 0x1(0x1)
	bool                                                         IsInHideout;                                       // 0x2(0x1)
	bool                                                         IsFirstTimePlaying;                                // 0x3(0x1)
	bool                                                         IsOnContestServer;                                 // 0x4(0x1)
	bool                                                         IsInContestTavern;                                 // 0x5(0x1)
	TArray<struct FailedToFindPlayerSpawnLocationPotentialLocation> PotentialLocations;                                // 0x8(0x10)
};


// Size 0x30
struct PlayerModerationReportResultBoxedRPC
{
public:
	struct PlayerModerationReportSubmitResponse                  PlayerModerationResponse;                          // 0x18(0x18)
};


// Size 0x10
struct PremiumCurrencyItemsResponseEvent
{
public:
	TArray<struct PremiumCurrencyItem>                           PremiumCurrencyItems;                              // 0x0(0x10)
};


// Size 0xb0
struct GenericNotificationUIEvent
{
public:
	TArray<struct Text>                                          Text;                                              // 0x0(0x10)
	TArray<String>                                               Images;                                            // 0x10(0x10)
	struct FString                                               Background;                                        // 0x20(0x10)
	TArray<String>                                               FlagIcons;                                         // 0x30(0x10)
	struct FString                                               StampIcon;                                         // 0x40(0x10)
	struct GenericPopupAudioDescriptor                           Audio;                                             // 0x50(0x40)
	TArray<char>                                                 StyleModifiers;                                    // 0x90(0x10)
	bool                                                         OnlyPlayAudio;                                     // 0xa0(0x1)
	bool                                                         PlayAudio;                                         // 0xa1(0x1)
	float                                                        HoldDuration;                                      // 0xa4(0x4)
	int                                                          Multiplier;                                        // 0xa8(0x4)
	bool                                                         SupportsHotlinkToMenus;                            // 0xac(0x1)
};


// Size 0x78
struct WaterModifierZoneParameters
{
public:
	float                                                        OuterRadius;                                       // 0x0(0x4)
	float                                                        InnerRadius;                                       // 0x4(0x4)
	float                                                        Strength;                                          // 0x8(0x4)
	bool                                                         UseDragScalar;                                     // 0xc(0x1)
	float                                                        DragScalar;                                        // 0x10(0x4)
	struct BlendableDrowningParams                               DrowningParameters;                                // 0x18(0x28)
	struct BlendableDrowningParams                               ShipInternalWaterDrowningParameters;               // 0x40(0x28)
	bool                                                         IsSuperHeatedWater;                                // 0x68(0x1)
	bool                                                         ResetOxygenLevel;                                  // 0x69(0x1)
	bool                                                         Is3DWaterModifierZone;                             // 0x6a(0x1)
	float                                                        OuterCylinderHalfHeight;                           // 0x6c(0x4)
	float                                                        InnerCylinderHalfHeight;                           // 0x70(0x4)
};


// Size 0x10
struct ContestScoreTelemetryFragment
{
public:
	TArray<struct CrewScore>                                     CrewScores;                                        // 0x0(0x10)
};


// Size 0x80
struct BaseLightTemplate
{
public:
	struct BaseLightData                                         BaseLightData;                                     // 0x0(0x80)
};


// Size 0x30
struct ShipCurseFXData
{
public:
	char                                                         ShipCurseTag;                                      // 0x0(0x1)
	TArray<struct ShipCurseVFXTemplate>                          VFXTemplates;                                      // 0x8(0x10)
	struct ShipCurseAudioLoop                                    AudioLoop;                                         // 0x18(0x18)
};


// Size 0x40
struct GuildOverviewForMemberResponseModel
{
public:
	struct GuildOverviewModel                                    OverviewInfo;                                      // 0x0(0x10)
	struct RolePermissionsModel                                  RolePermissions;                                   // 0x10(0x30)
};


// Size 0x10
struct FriendsListResponse
{
public:
	TArray<struct FriendViewModel>                               Friends;                                           // 0x0(0x10)
};


// Size 0x30
struct EventWieldableItemUseStarted
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	class UClass*                                                InputID;                                           // 0x8(0x8)
	struct WieldableItemActionVisuals                            Visuals;                                           // 0x10(0x18)
	char                                                         TrackId;                                           // 0x28(0x1)
};


// Size 0x30
struct WaterModifierDrowningParams
{
public:
	struct BlendableDrowningParams                               BlendableDrowningParams;                           // 0x0(0x28)
};


// Size 0x28
struct ContestLeaderboardUpdateEvent
{
public:
	TArray<struct CrewScore>                                     Leaderboard;                                       // 0x18(0x10)
};


// Size 0x18
struct TypedIslandItemSpawnLocationData
{
public:
	class UClass*                                                LocationType;                                      // 0x0(0x8)
	TArray<struct IslandItemSpawnLocationData>                   Locations;                                         // 0x8(0x10)
};


// Size 0x28
struct OpenNPCTraderEvent
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
	struct EmissaryState                                         EmissaryState;                                     // 0x10(0x8)
	struct FString                                               EmissaryLockedReason;                              // 0x18(0x10)
};


// Size 0x20
struct NotesManagementRemoteServiceAddNoteModel
{
public:
	struct FString                                               Type;                                              // 0x0(0x10)
	TArray<struct NotesManagementRemoteServiceNoteTextModel>     NoteText;                                          // 0x10(0x10)
};


// Size 0x60
struct RewardRequestEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	TArray<struct PirateIdentity>                                PirateIdentities;                                  // 0x10(0x10)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
	struct Guid                                                  GuildId;                                           // 0x30(0x10)
	struct FName                                                 RewardId;                                          // 0x40(0x8)
	struct FName                                                 CompanyAffiliation;                                // 0x48(0x8)
	struct FName                                                 EmissaryAffiliation;                               // 0x50(0x8)
	int                                                          EmissaryLevel;                                     // 0x58(0x4)
	char                                                         NotifyPlayer;                                      // 0x5c(0x1)
	char                                                         IsSovereignHandIn;                                 // 0x5d(0x1)
};


// Size 0x18
struct PetLoadout
{
public:
	TArray<struct PetLoadoutItem>                                Items;                                             // 0x0(0x10)
	bool                                                         PetNamingDisallowed;                               // 0x10(0x1)
	int                                                          CurrentPetIndex;                                   // 0x14(0x4)
};


// Size 0x20
struct WeightedRewardEntry
{
public:
	struct RewardId                                              Reward;                                            // 0x0(0x8)
	struct FString                                               WeightingConfigurationKey;                         // 0x8(0x10)
	float                                                        FallbackWeight;                                    // 0x18(0x4)
};


// Size 0x10
struct MechanismMaterialMapEntry
{
public:
	TArray<struct MechanismMaterialOverride>                     Materials;                                         // 0x0(0x10)
};


// Size 0x40
struct QuestTableTileDetails
{
public:
	TArray<struct QuestTableQuestTileDetails>                    QuestTileDetails;                                  // 0x0(0x10)
	TArray<struct QuestTableLimitedQuestTileDetails>             LimitedQuestTileDetails;                           // 0x10(0x10)
	TArray<struct QuestTableInfoTileDetails>                     InfoTileDetails;                                   // 0x20(0x10)
	TArray<struct QuestTableLimitedInfoTileDetails>              LimitedInfoTileDetails;                            // 0x30(0x10)
};


// Size 0x10
struct TunnelsOfTheDamnedMigrationDataHolder
{
public:
	TArray<struct TunnelsOfTheDamnedMigrationDataEntry>          CrewEntries;                                       // 0x0(0x10)
};


// Size 0x50
struct AthenaAnimationLocomotionAlternateAnimData
{
public:
	class AnimSequence*                                          Idle;                                              // 0x0(0x8)
	class BlendSpace*                                            MainMovement;                                      // 0x8(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningLeft;                                       // 0x10(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningRight;                                      // 0x18(0x8)
	class AnimSequence*                                          TurnOut;                                           // 0x20(0x8)
	class BlendSpace*                                            RunStop;                                           // 0x28(0x8)
	struct AthenaAnimationLocomotionStairsAnimData               StairsLocomotion;                                  // 0x30(0x20)
};


// Size 0xc8
struct RewardRequestForPirateEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct PirateIdentity                                        PirateIdentity;                                    // 0x10(0x78)
	struct Guid                                                  CrewId;                                            // 0x88(0x10)
	struct Guid                                                  GuildId;                                           // 0x98(0x10)
	struct FName                                                 RewardId;                                          // 0xa8(0x8)
	struct FName                                                 CompanyAffiliation;                                // 0xb0(0x8)
	struct FName                                                 EmissaryAffiliation;                               // 0xb8(0x8)
	int                                                          EmissaryLevel;                                     // 0xc0(0x4)
	char                                                         SourceReliability;                                 // 0xc4(0x1)
	char                                                         NotifyPlayer;                                      // 0xc5(0x1)
	char                                                         IsSovereignHandIn;                                 // 0xc6(0x1)
};


// Size 0x1c
struct SeaOfThievesOnDemandRewardRequestSucceededTelemetryEvent
{
public:
	char                                                         OverrideHistory;                                   // 0x0(0x1)
	struct RewardRequestSucceededEvent                           Reward;                                            // 0x4(0x18)
};


// Size 0x28
struct ActivePortal
{
public:
	struct PortalSpawningInfo                                    PortalSpawnInfo;                                   // 0x0(0x10)
	class TunnelOfTheDamnedPortal*                               Portal;                                            // 0x10(0x8)
	struct Guid                                                  CrewId;                                            // 0x18(0x10)
};


// Size 0x78
struct CargoRunCrateMetaWrapper
{
public:
	struct CargoRunItemDropOffData                               DropOffData;                                       // 0x18(0x60)
};


// Size 0x30
struct GamerTagUpdated
{
public:
	struct FString                                               GamerTag;                                          // 0x0(0x10)
	struct UserPirateId                                          UserPirateId;                                      // 0x10(0x20)
};


// Size 0x168
struct ExplosionInfo
{
public:
	class UClass*                                                DamagerType;                                       // 0x0(0x8)
	char                                                         HealthChangedReason;                               // 0x8(0x1)
	char                                                         CollisionChannel;                                  // 0x9(0x1)
	float                                                        MaxExplosionRadius;                                // 0xc(0x4)
	float                                                        BaseDamageAmount;                                  // 0x10(0x4)
	class CurveFloat*                                            PlayerDamageCurve;                                 // 0x18(0x8)
	class CurveFloat*                                            OtherPawnDamageCurve;                              // 0x20(0x8)
	float                                                        PlayerInsideShipDamageMultiplier;                  // 0x28(0x4)
	bool                                                         DealFriendlyFireDamage;                            // 0x2c(0x1)
	bool                                                         DealFriendlyFireStatuses;                          // 0x2d(0x1)
	struct ShipDamageParams                                      ShipDamageParams;                                  // 0x30(0x10)
	int                                                          MaxNumDamageHolesPerShip;                          // 0x40(0x4)
	class CurveFloat*                                            ShipDamageCurveInMetres;                           // 0x48(0x8)
	bool                                                         ShouldIgnoreZForShipHullDamage;                    // 0x50(0x1)
	struct WeightedProbabilityRangeOfRanges                      ForceToApplyToShip;                                // 0x58(0x30)
	TArray<struct ExplosionShipSizeForceToApplyToShipOverride>   ShipSizeForceToApplyToShipOverride;                // 0x88(0x10)
	float                                                        ForceModifierToApplyToKrakenWrappedShip;           // 0x98(0x4)
	struct FName                                                 IgnitionFeatureName;                               // 0x9c(0x8)
	class FireGridCellSelectionParamsDataAsset*                  IgnitionParameters;                                // 0xa8(0x8)
	TArray<struct Status>                                        StatusesToApply;                                   // 0xb0(0x10)
	bool                                                         ApplyStatusEffectsWhenUnderwater;                  // 0xc0(0x1)
	float                                                        StatusEffectInnerRadiusMultiplier;                 // 0xc4(0x4)
	struct KnockBackInfo                                         KnockbackParams;                                   // 0xc8(0x54)
	TArray<struct ExplosionShipSizeKnockbackModifier>            ShipSizeKnockbackModifiers;                        // 0x120(0x10)
	float                                                        KnockbackInnerRadiusMultiplier;                    // 0x130(0x4)
	class ForceFeedbackEffect*                                   ForceFeedbackEffect;                               // 0x138(0x8)
	class ForceFeedbackEffect*                                   ForceFeedbackEffectLower;                          // 0x140(0x8)
	float                                                        ForceFeedbackEffectInnerRadiusMultiplier;          // 0x148(0x4)
	struct FName                                                 ForceFeedbackTag;                                  // 0x14c(0x8)
	class UClass*                                                CameraShake;                                       // 0x158(0x8)
	float                                                        CameraShakeInnerRadiusMultiplier;                  // 0x160(0x4)
};


// Size 0x20
struct EntitlementInfosResponseUIEvent
{
public:
	TArray<struct EntitlementInfo>                               EntitlementInfos;                                  // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x18
struct SetNonVerbalOptionWithImages
{
public:
	TArray<struct NonVerbalRadialSlot>                           Slots;                                             // 0x8(0x10)
};


// Size 0x40
struct SignedShipRequestModel
{
public:
	struct UserPirateId                                          Owner;                                             // 0x0(0x20)
	struct FString                                               ShipId;                                            // 0x20(0x10)
	struct FString                                               Signature;                                         // 0x30(0x10)
};


// Size 0x30
struct InventoryResponseEvent
{
public:
	TArray<struct IInventoryItem>                                Equipment;                                         // 0x0(0x10)
	TArray<struct IInventoryItem>                                Resources;                                         // 0x10(0x10)
	TArray<struct IInventoryItemDescription>                     Descriptions;                                      // 0x20(0x10)
};


// Size 0x20
struct ItemLoadoutComponentSlots
{
public:
	TArray<class Class*>                                         WeaponSlots;                                       // 0x0(0x10)
	TArray<struct ItemLoadoutSlot>                               Slots;                                             // 0x10(0x10)
};


// Size 0x50
struct PlayerLeftGuildEvent
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct UserPirateId                                          LeavingPlayer;                                     // 0x10(0x20)
	struct UserPirateId                                          Initiator;                                         // 0x30(0x20)
};


// Size 0x38
struct AthenaAnimationSkeletonEmoteActionParams
{
public:
	TArray<struct AthenaAnimationSkeletonEmoteActionAnimations>  AllLoadedAIEmoteActionAnimations;                  // 0x0(0x10)
	char                                                         CurrentEmoteActionState;                           // 0x10(0x1)
	class AnimSequence*                                          TauntAnimation;                                    // 0x18(0x8)
	class AnimSequence*                                          CheerAnimation;                                    // 0x20(0x8)
	class AnimSequence*                                          TauntAnimationB;                                   // 0x28(0x8)
	class AnimSequence*                                          CheerAnimationB;                                   // 0x30(0x8)
};


// Size 0x78
struct TavernBoardCreateMapRequestEvent
{
public:
	struct ITavernBoardMap                                       Map;                                               // 0x0(0x78)
};


// Size 0x1f8
struct PremiumStoreBundleItem
{
public:
	bool                                                         EnablePurchase;                                    // 0x1e0(0x1)
	struct PremiumStoreTimeLimited                               TimeLimited;                                       // 0x1e1(0x2)
	struct FString                                               LockedReason;                                      // 0x1e8(0x10)
};


// Size 0x18
struct NPCOnSurfaceVOGroup
{
public:
	struct FName                                                 GroupName;                                         // 0x0(0x8)
	TArray<struct NPCOnSurfaceVOEntry>                           VOEntries;                                         // 0x8(0x10)
};


// Size 0x20
struct PlayerNamesRequestEvent
{
public:
	TArray<struct PlayerNameData>                                PlayerNameData;                                    // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x18
struct BoobyTrapSpawnerRankEntry
{
public:
	int                                                          Rank;                                              // 0x0(0x4)
	float                                                        ChanceOfBeingBoobyTrapped;                         // 0x4(0x4)
	TArray<struct WeightedAIBoobyTrapSpawner>                    WeightedSpawners;                                  // 0x8(0x10)
};


// Size 0x18
struct ShipDiveMusicEvent
{
public:
	struct FName                                                 MusicThemeName;                                    // 0x0(0x8)
	struct MusicEvent                                            Event;                                             // 0x8(0x10)
};


// Size 0x88
struct MountTrinketActionRuleParams
{
public:
	class UClass*                                                PressedNotificationInputId;                        // 0x0(0x8)
	class UClass*                                                ReleasedNotificationInputId;                       // 0x8(0x8)
	float                                                        InteractionInputHoldTime;                          // 0x10(0x4)
	struct OpenTrinketBoxActionRuleVerbiage                      ActionRuleVerbiage;                                // 0x18(0x70)
};


// Size 0x208
struct PremiumStoreBundleOffer
{
public:
	struct FString                                               Saving;                                            // 0x1e0(0x10)
	struct FString                                               AccentUrl;                                         // 0x1f0(0x10)
	struct PremiumStoreTimeLimited                               TimeLimited;                                       // 0x200(0x2)
};


// Size 0x30
struct CatalogDescTab
{
public:
	struct StringAssetReference                                  FilterIcon;                                        // 0x0(0x10)
	class CatalogDataAsset*                                      Catalog;                                           // 0x10(0x8)
	TArray<struct CatalogDescTabCatalogOverrides>                CatalogOverrides;                                  // 0x18(0x10)
	struct ShopCatalogDesc                                       CatalogData;                                       // 0x28(0x1)
};


// Size 0x18
struct AggressiveGhostShipRewardData
{
public:
	TArray<struct GhostShipRewardData>                           Rewards;                                           // 0x0(0x10)
	float                                                        SpawnRate;                                         // 0x10(0x4)
};


// Size 0x30
struct ShantyData
{
public:
	struct FName                                                 ShantyName;                                        // 0x0(0x8)
	TArray<struct ShantyInstrumentData>                          InstrumentData;                                    // 0x8(0x10)
	int                                                          LengthOfShantyInMs;                                // 0x18(0x4)
	class UClass*                                                UnlockEntitlement;                                 // 0x20(0x8)
	struct PlayerStat                                            OnShantyPlayedStat;                                // 0x28(0x4)
	bool                                                         CanRandomPlay;                                     // 0x2c(0x1)
	bool                                                         CanBeSelected;                                     // 0x2d(0x1)
	bool                                                         DisableMigrationWhilePlaying;                      // 0x2e(0x1)
};


// Size 0x38
struct DigSurfaceTypeParams
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	struct DigEventFxParams                                      EnterGroundFx;                                     // 0x8(0x18)
	struct DigEventFxParams                                      LeaveGroundFx;                                     // 0x20(0x18)
};


// Size 0x28
struct VoyageAndTaleProposalsUpdatedEvent
{
public:
	TArray<struct VoyageProposalDescViewModel>                   VoyageProposalEntitlements;                        // 0x0(0x10)
	TArray<struct VoyageProposalDescViewModel>                   TaleProposalEntitlements;                          // 0x10(0x10)
	bool                                                         VoyageIsActive;                                    // 0x20(0x1)
	bool                                                         TaleIsActive;                                      // 0x21(0x1)
};


// Size 0x10
struct CatalogOfferRewardDataAsset
{
public:
	class UClass*                                                Company;                                           // 0x0(0x8)
	struct RewardId                                              Reward;                                            // 0x8(0x8)
};


// Size 0x4c
struct InventoryCountsResponseEvent
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	struct CappedCount                                           Cannonballs;                                       // 0x4(0x8)
	struct CappedCount                                           CursedCannonballs;                                 // 0xc(0x8)
	struct CappedCount                                           Food;                                              // 0x14(0x8)
	struct CappedCount                                           Hardware;                                          // 0x1c(0x8)
	struct CappedCount                                           Bait;                                              // 0x24(0x8)
	struct CappedCount                                           Firebombs;                                         // 0x2c(0x8)
	struct CappedCount                                           ChainShots;                                        // 0x34(0x8)
	struct CappedCount                                           GrapeShots;                                        // 0x3c(0x8)
	struct CappedCount                                           Fireworks;                                         // 0x44(0x8)
};


// Size 0x18
struct HoopData
{
public:
	float                                                        HoopRadius;                                        // 0x0(0x4)
	TArray<struct WwiseEventsIcon>                               EventIcons;                                        // 0x8(0x10)
};


// Size 0x3c
struct SinkingTunnelOfTheDamnedActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x0(0x1c)
	float                                                        ClientSetupResponseTimeout;                        // 0x1c(0x4)
	float                                                        FadeOutDuration;                                   // 0x20(0x4)
	float                                                        FadeOutStartDelay;                                 // 0x24(0x4)
	struct LinearColor                                           FadeColour;                                        // 0x28(0x10)
	bool                                                         FadeAudio;                                         // 0x38(0x1)
};


// Size 0x88
struct RequestEmblemProgressEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Guid                                                  RequestID;                                         // 0x78(0x10)
};


// Size 0x68
struct UpdatedGuildDataEvent
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct GuildBranding                                         GuildBranding;                                     // 0x10(0x50)
	int8                                                         GuildDistinctionLevel;                             // 0x60(0x1)
};


// Size 0x70
struct AthenaAnimationSitting
{
public:
	struct AthenaAnimationSittingAnimData                        SittingAnimData;                                   // 0x0(0x10)
	bool                                                         AnimationLoaded;                                   // 0x10(0x1)
	class AthenaAnimationSittingDataAsset*                       SittingDataAsset;                                  // 0x18(0x8)
};


// Size 0x20
struct EncounterServiceParams
{
public:
	TArray<struct EncounterServiceEntry>                         EncounterList;                                     // 0x0(0x10)
	int                                                          MinEventsToTriggerPerCycle;                        // 0x10(0x4)
	double                                                       SecondsToSpendTriggeringEventsPerCycle;            // 0x18(0x8)
};


// Size 0x18
struct GetBeaconsGameServerResponseModel
{
public:
	TArray<struct BeaconStateData>                               Data;                                              // 0x8(0x10)
};


// Size 0x90
struct EventCharacterDeath
{
public:
	struct DamageInstance                                        DamageInstance;                                    // 0x0(0x30)
};


// Size 0x1f0
struct AthenaAnimationWheel
{
public:
	struct SocketId                                              LeftHandMaleSocket;                                // 0x0(0x20)
	struct SocketId                                              RightHandMaleSocket;                               // 0x20(0x20)
	struct SocketId                                              LeftHandFemaleSocket;                              // 0x40(0x20)
	struct SocketId                                              RightHandFemaleSocket;                             // 0x60(0x20)
	float                                                        TranslationStrength;                               // 0x80(0x4)
	float                                                        RotationStrength;                                  // 0x84(0x4)
	float                                                        BlendInSpeed;                                      // 0x88(0x4)
	float                                                        BlendOutSpeed;                                     // 0x8c(0x4)
	struct HandOnWheelAnimationRanges                            HandOnWheelAnimationRanges;                        // 0x90(0x40)
	struct WheelIKActivationRanges                               WheelArmIKDownWithinRange;                         // 0xd0(0x40)
	char                                                         WheelAnimationType;                                // 0x110(0x1)
	float                                                        WheelTime;                                         // 0x114(0x4)
	float                                                        WheelDirection;                                    // 0x118(0x4)
	float                                                        RightFingerAlpha;                                  // 0x11c(0x4)
	float                                                        LeftFingerAlpha;                                   // 0x120(0x4)
	float                                                        FullBodyAlpha;                                     // 0x124(0x4)
	float                                                        WheelDockingHandClaspAlpha;                        // 0x128(0x4)
	bool                                                         LeftWheelArmDown;                                  // 0x12c(0x1)
	bool                                                         RightWheelArmDown;                                 // 0x12d(0x1)
	class Actor*                                                 ControlledObject;                                  // 0x130(0x8)
};


// Size 0x78
struct FeatureToggledMarkerVariants
{
public:
	struct FName                                                 FeatureToggle;                                     // 0x0(0x8)
	struct MarkerVariantDesc                                     ToggleOnMarkerVariant;                             // 0x8(0x38)
	struct MarkerVariantDesc                                     ToggleOffMarkerVariant;                            // 0x40(0x38)
};


// Size 0x20
struct ShipLivery
{
public:
	TArray<struct ShipLiveryTextureSwap>                         LiveryTextureSwaps;                                // 0x0(0x10)
	TArray<struct ShipLiveryRGBSwap>                             LiveryRGBSwaps;                                    // 0x10(0x10)
};


// Size 0x18
struct ShipSizePartCustomizationInfo
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	TArray<struct ShipPartCustomizationInfo>                     Customizations;                                    // 0x8(0x10)
};


// Size 0x70
struct AlliancePennantData
{
public:
	struct StringAssetReference                                  PennantDesc;                                       // 0x0(0x10)
	TArray<struct AllianceNotificationData>                      PopUpNotificationDescs;                            // 0x10(0x10)
	struct StringAssetReference                                  GenericPopupAllianceIcon;                          // 0x20(0x10)
	class Texture*                                               MapFlagIcon;                                       // 0x30(0x8)
	struct FText                                                 AllianceName;                                      // 0x38(0x38)
};


// Size 0x60
struct RemoteProjectileAim
{
public:
	struct ProjectileAim                                         AimData;                                           // 0x0(0x50)
	bool                                                         IsRelativeAim;                                     // 0x50(0x1)
	struct ProjectileTimeStamp                                   TimeStamp;                                         // 0x58(0x8)
};


// Size 0x10
struct GuildShipsResponseModel
{
public:
	TArray<struct GuildEnrolledShipModel>                        EnrolledShips;                                     // 0x0(0x10)
};


// Size 0xc
struct EventFactionStatsResponse
{
public:
	struct FactionStatsInformation                               FactionStats;                                      // 0x0(0xc)
};


// Size 0x110
struct QuestTableCompanyVoyage
{
public:
	struct FString                                               InstanceId;                                        // 0x0(0x10)
	struct FString                                               CompanyVoyageId;                                   // 0x10(0x10)
	char                                                         VoyageType;                                        // 0x20(0x1)
	struct FString                                               UsageLimit;                                        // 0x28(0x10)
	struct FText                                                 DisplayName;                                       // 0x38(0x38)
	struct FText                                                 Description;                                       // 0x70(0x38)
	struct FString                                               BackgroundImageUrl;                                // 0xa8(0x10)
	int                                                          VoyageLength;                                      // 0xb8(0x4)
	bool                                                         IsNew;                                             // 0xbc(0x1)
	bool                                                         IsLocked;                                          // 0xbd(0x1)
	int                                                          RemainingUseCount;                                 // 0xc0(0x4)
	struct FString                                               EndDateTimeUtc;                                    // 0xc8(0x10)
	TArray<struct Text>                                          LockedDescriptions;                                // 0xd8(0x10)
	struct QuestTableQuestTravelSettings                         TravelSettings;                                    // 0xe8(0x28)
};


// Size 0x10
struct ShipCustomizationChestShipCustomizationEntitlementsUpdatedEvent
{
public:
	TArray<struct ChestEntitlementViewModel>                     Entitlements;                                      // 0x0(0x10)
};


// Size 0x8
struct PlayerHeroStatUpdatedEvent
{
public:
	char                                                         Result;                                            // 0x0(0x1)
	struct PlayerStat                                            Stat;                                              // 0x4(0x4)
};


// Size 0x98
struct RequestCompanyProgressEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Guid                                                  RequestID;                                         // 0x78(0x10)
	TArray<struct SignedGuildIdModel>                            SignedGuilds;                                      // 0x88(0x10)
};


// Size 0x18
struct DebugFishSelectionColour
{
public:
	int                                                          ColourIndex;                                       // 0x0(0x4)
	TArray<struct DebugFishSelectionSize>                        FishSizes;                                         // 0x8(0x10)
};


// Size 0x34
struct DockableCutsceneActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x18(0x1c)
};


// Size 0x38
struct PetRoamingAnimationState
{
public:
	char                                                         AnimationType;                                     // 0x0(0x1)
	class AnimMontage*                                           MontageData;                                       // 0x8(0x8)
	struct PetAnimationCycleMontage                              CycleData;                                         // 0x10(0x18)
	char                                                         CurrentWieldableLocation;                          // 0x28(0x1)
	char                                                         ResetWieldableLocation;                            // 0x29(0x1)
	float                                                        BlendInTime;                                       // 0x2c(0x4)
	float                                                        BlendOutTime;                                      // 0x30(0x4)
	bool                                                         Uninterruptable;                                   // 0x34(0x1)
	bool                                                         ResetWieldableIfInterrupted;                       // 0x35(0x1)
	bool                                                         AllowHappyReact;                                   // 0x36(0x1)
};


// Size 0x2c
struct AttachedToObjectActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x10(0x1c)
};


// Size 0x30
struct GuildSessionData
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct Guid                                                  CrewId;                                            // 0x10(0x10)
	TArray<struct GuildSessionCrewMember>                        CrewMembers;                                       // 0x20(0x10)
};


// Size 0x20
struct SingleStickSettings
{
public:
	TArray<struct SingleStickMappingUserSettingsBoolean>         UserSettingsBooleans;                              // 0x0(0x10)
	TArray<struct SingleStickMappingUserSettingsInteger>         UserSettingsIntegers;                              // 0x10(0x10)
};


// Size 0x20
struct EventAddCrewBeckonTag
{
public:
	struct BeckonTag                                             BeckonTag;                                         // 0x0(0x10)
};


// Size 0x90
struct FirstPersonAnimaticActionStateConstructionInfo
{
public:
	struct FirstPersonAnimaticSettings                           FirstPersonAnimaticSettings;                       // 0x40(0x2c)
	struct FirstPersonAnimaticDockInfo                           FirstPersonAnimaticDockInfo;                       // 0x70(0x20)
};


// Size 0x10
struct WeightedContestIslandData
{
public:
	struct ContestVoyageIslandData                               IslandData;                                        // 0x0(0xc)
	int                                                          WeightedChance;                                    // 0xc(0x4)
};


// Size 0x18
struct AchievementCriteria
{
public:
	struct PlayerStat                                            PlayerStat;                                        // 0x0(0x4)
	uint64                                                       Threshold;                                         // 0x8(0x8)
	char                                                         Operator;                                          // 0x10(0x1)
};


// Size 0x40
struct GuildMemberModel
{
public:
	struct GuildUserPirateModel                                  UserPirateId;                                      // 0x0(0x20)
	struct FString                                               Role;                                              // 0x20(0x10)
	struct FString                                               Signature;                                         // 0x30(0x10)
};


// Size 0x1c
struct LadderDefinition
{
public:
	char                                                         LadderType;                                        // 0x0(0x1)
	struct LadderBlendParams                                     OnTopLadderBlendParams;                            // 0x4(0xc)
	struct LadderBlendParams                                     OffTopLadderBlendParams;                           // 0x10(0xc)
};


// Size 0x10
struct ProjectileWeaponEquipTelemetryEvent
{
public:
	TArray<struct ProjectileWeaponEquipTelemetryData>            BatchData;                                         // 0x0(0x10)
};


// Size 0x28
struct OneShotInput
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	bool                                                         PlayOneShotAnimation;                              // 0x8(0x1)
	struct WieldableItemActionVisuals                            ActionVisuals;                                     // 0x10(0x18)
};


// Size 0x78
struct WalletUpdatedMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
};


// Size 0x10
struct PlayerBlockingBlockedPlayersResponse
{
public:
	TArray<struct BlockablePlayer>                               BlockedPlayers;                                    // 0x0(0x10)
};


// Size 0xc8
struct StreamingStatusModel
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	map                                                          StreamSnapshots;                                   // 0x78(0x50)
};


// Size 0x18
struct GetVaultsGameServerResponseModel
{
public:
	TArray<struct VaultStateData>                                Data;                                              // 0x8(0x10)
};


// Size 0x10
struct EmblemCriteriaProgress
{
public:
	struct PlayerStat                                            Stat;                                              // 0x0(0x4)
	uint32                                                       Value;                                             // 0x4(0x4)
	uint32                                                       Threshold;                                         // 0x8(0x4)
	bool                                                         IsCompleted;                                       // 0xc(0x1)
};


// Size 0x20
struct ShipVoyageSaveData
{
public:
	TArray<struct ShipVoyageModel>                               AddedVoyages;                                      // 0x0(0x10)
	TArray<struct ShipVoyageModel>                               RemovedVoyages;                                    // 0x10(0x10)
};


// Size 0x18
struct ValidRiddleOptions
{
public:
	struct RiddleActionLocation                                  RiddleActionLocation;                              // 0x0(0x8)
	TArray<struct RiddleActionLocation>                          ValidRiddleActionLocations;                        // 0x8(0x10)
};


// Size 0x150
struct AthenaAnimationEmoteAnimgraphStructure
{
public:
	TArray<struct AthenaAnimationEmoteAnimations>                EmoteAnimationArray;                               // 0x0(0x10)
	class AnimSequence*                                          OneShotAnimationToUse;                             // 0x10(0x8)
	class AnimSequence*                                          ContinuousInAnimationToUse;                        // 0x18(0x8)
	class AnimSequence*                                          ContinuousLoopAnimationToUseA;                     // 0x20(0x8)
	class AnimSequence*                                          ContinuousLoopAnimationToUseB;                     // 0x28(0x8)
	class BlendSpace*                                            ContinuousLocomotionToUse;                         // 0x30(0x8)
	bool                                                         EmoteActive;                                       // 0x38(0x1)
	bool                                                         OneShotEmoteActive;                                // 0x39(0x1)
	bool                                                         ContinuousEmoteActive;                             // 0x3a(0x1)
	bool                                                         ContinuousEmoteLoopExit;                           // 0x3b(0x1)
};


// Size 0x40
struct NPCGenericReactionVOEntry
{
public:
	struct FName                                                 ResponseName;                                      // 0x0(0x8)
	struct ReactionVOEntry                                       VOEntry;                                           // 0x8(0x38)
};


// Size 0x58
struct StunnedActionStateConstructionInfo
{
public:
	struct StunnedActionStateParams                              Params;                                            // 0x40(0x18)
};


// Size 0x40
struct CurrentPhaseData
{
public:
	struct BattleElevatorEventRoomPhase                          CurrentPhase;                                      // 0x0(0x38)
};


// Size 0x20
struct ConditionalHandInStat
{
public:
	struct PlayerStat                                            Stat;                                              // 0x18(0x4)
};


// Size 0x44
struct PinnedShipAccolade
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	struct Guid                                                  AlignmentId;                                       // 0x10(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0x20(0x24)
};


// Size 0x68
struct CollectorsChestStoredItemInfo
{
public:
	class ItemInfo*                                              ItemInfo;                                          // 0x0(0x8)
	class SceneComponent*                                        SourceAttachParent;                                // 0x8(0x8)
	struct FName                                                 SourceAttachSocket;                                // 0x10(0x8)
	int64                                                        ItemStoreTimestamp;                                // 0x18(0x8)
	struct ItemSnapshot                                          StoredItemInfoSnapshot;                            // 0x20(0x38)
	struct StringAssetReference                                  ChestMeshCustomizationPartDesc;                    // 0x58(0x10)
};


// Size 0x38
struct TavernBoardRequestOpenEvent
{
public:
	struct CappedCount                                           TakeLimit;                                         // 0x0(0x8)
	struct IBoardAvailability                                    QuestBoard;                                        // 0x8(0x18)
	struct IBoardAvailability                                    MyMaps;                                            // 0x20(0x18)
};


// Size 0x110
struct ReputationCompanyDisplayInformation
{
public:
	struct FText                                                 CompanyName;                                       // 0x0(0x38)
	struct FText                                                 Motto;                                             // 0x38(0x38)
	struct FText                                                 CurrentRank;                                       // 0x70(0x38)
	struct FString                                               BackgroundImageUrl;                                // 0xa8(0x10)
	struct FString                                               RibbonImageUrl;                                    // 0xb8(0x10)
	struct FName                                                 CompanyId;                                         // 0xc8(0x8)
	char                                                         Style;                                             // 0xd0(0x1)
	float                                                        CompanyLevel;                                      // 0xd4(0x4)
	uint32                                                       CompanyDistinction;                                // 0xd8(0x4)
	TArray<String>                                               CompanyDistinctionIconsUrls;                       // 0xe0(0x10)
	struct EmissaryState                                         EmissaryState;                                     // 0xf0(0x8)
	bool                                                         Retired;                                           // 0xf8(0x1)
	bool                                                         IsLocked;                                          // 0xf9(0x1)
	TArray<String>                                               LockedDescriptions;                                // 0x100(0x10)
};


// Size 0x78
struct CreateGuildRequestModel
{
public:
	struct GuildBrandingModel                                    GuildBranding;                                     // 0x0(0x50)
	struct Guid                                                  ShipId;                                            // 0x50(0x10)
	struct GuildShipConfigModel                                  ShipConfig;                                        // 0x60(0x1)
	struct FString                                               Signature;                                         // 0x68(0x10)
};


// Size 0x80
struct StatSingleMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	uint64                                                       Value;                                             // 0x78(0x8)
};


// Size 0x10
struct WalletBalance
{
public:
	TArray<struct WalletBalanceItem>                             Balances;                                          // 0x0(0x10)
};


// Size 0x10
struct ShipLoadoutCustomizationsModel
{
public:
	TArray<struct ShipPartCustomizationModel>                    ShipPartCustomisations;                            // 0x0(0x10)
};


// Size 0x10
struct GuildInvitesRequestModel
{
public:
	TArray<struct GuildUserPirateModel>                          Invites;                                           // 0x0(0x10)
};


// Size 0x30
struct NPCAnimationContinuousCycle
{
public:
	struct NPCAnimationSequence                                  In;                                                // 0x0(0x10)
	TArray<struct NPCAnimationSequence>                          Loop;                                              // 0x10(0x10)
	struct NPCAnimationSequence                                  Out;                                               // 0x20(0x10)
};


// Size 0x20
struct EventAddCrewToBeBeckoned
{
public:
	struct BeckonTag                                             BeckonTag;                                         // 0x0(0x10)
};


// Size 0x50
struct FishingMiniGame
{
public:
	struct FishingMiniGameData                                   Data;                                              // 0x0(0x10)
};


// Size 0x88
struct AthenaAnimationWheelAnimData
{
public:
	class AnimSequence*                                          Into;                                              // 0x0(0x8)
	struct AthenaAnimationWheelTurnsAnimData                     LeftTurn;                                          // 0x8(0x18)
	struct AthenaAnimationWheelTurnsAnimData                     RightTurn;                                         // 0x20(0x18)
	struct AthenaAnimationWheelArmOverlayAnimData                LeftArm;                                           // 0x38(0x10)
	struct AthenaAnimationWheelArmOverlayAnimData                RightArm;                                          // 0x48(0x10)
	TArray<class AnimSequence*>                                  Idles;                                             // 0x58(0x10)
	TArray<class AnimSequence*>                                  LeftFingerIdles;                                   // 0x68(0x10)
	TArray<class AnimSequence*>                                  RightFingerIdles;                                  // 0x78(0x10)
};


// Size 0x20
struct ItemLoadout
{
public:
	TArray<struct ItemLoadoutCapacity>                           Capacities;                                        // 0x0(0x10)
	TArray<class Class*>                                         Items;                                             // 0x10(0x10)
};


// Size 0x28
struct GuildSessionMember
{
public:
	struct UserPirateId                                          Member;                                            // 0x0(0x20)
	bool                                                         IsMemberInGuild;                                   // 0x20(0x1)
};


// Size 0x48
struct MerchantQuestStartTelemetryEvent
{
public:
	struct FString                                               PickupLocationIslandName;                          // 0x0(0x10)
	struct FString                                               DeliveryLocationIslandName;                        // 0x10(0x10)
	int                                                          RealTimeLimitInMins;                               // 0x20(0x4)
	struct FString                                               DeliverByTimeText;                                 // 0x28(0x10)
	TArray<struct MerchantQuestStartTelemetryEventRequiredItemEntry> ContractList;                                      // 0x38(0x10)
};


// Size 0x40
struct GetShipLoadoutPersistenceResponseModel
{
public:
	TArray<struct ShipPartCustomizationModel>                    ShipPartCustomisations;                            // 0x0(0x10)
	TArray<struct TrinketLoadoutModelEntry>                      Trinkets;                                          // 0x10(0x10)
	TArray<struct ShipVoyageModel>                               Voyages;                                           // 0x20(0x10)
	struct RowboatPersistenceModel                               Rowboat;                                           // 0x30(0x10)
};


// Size 0xe8
struct PirateMilestoneProgressionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       ProgressChange;                                    // 0xd0(0x8)
	uint64                                                       CurrentLevel;                                      // 0xd8(0x8)
	struct DateTime                                              UpdatedAt;                                         // 0xe0(0x8)
};


// Size 0x168
struct EmblemRuntimeDefinition
{
public:
	class PopUpMessageDesc*                                      UnlockPopUp;                                       // 0x140(0x8)
	class PopUpAudioDesc*                                        UnlockPopUpAudioOverrides;                         // 0x148(0x8)
	struct EmblemId                                              PrerequisiteEmblem;                                // 0x150(0x18)
};


// Size 0x58
struct EventStatueThreatWasDamaged
{
public:
	struct ImpactDamageEvent                                     ImpactDamageEvent;                                 // 0x0(0x58)
};


// Size 0x98
struct CinematicQuestNetworkEvent
{
public:
	struct CinematicQuestEvent                                   BannerData;                                        // 0x18(0x80)
};


// Size 0x18
struct GameEventWeightedListInfo
{
public:
	TArray<struct GameEventCountInfo>                            Events;                                            // 0x0(0x10)
	float                                                        Weight;                                            // 0x10(0x4)
};


// Size 0x18
struct NPCBeckonGroupEntry
{
public:
	class UClass*                                                NPCGroupID;                                        // 0x0(0x8)
	TArray<struct NPCBeckonGestureEntry>                         NPCBeckonGestures;                                 // 0x8(0x10)
};


// Size 0x20
struct SentGuildInvite
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	TArray<struct GuildSender>                                   Recipients;                                        // 0x10(0x10)
};


// Size 0x90
struct EmissaryLeaderboardScoreUpdatedEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct FName                                                 EmissaryAffiliation;                               // 0x78(0x8)
	int64                                                        From;                                              // 0x80(0x8)
	int64                                                        To;                                                // 0x88(0x8)
};


// Size 0x10
struct ReceivedServerUserSettingsEvent
{
public:
	class Controller*                                            Controller;                                        // 0x0(0x8)
	struct ServerUserGameSettings                                ServerUserGameSettings;                            // 0x8(0x3)
};


// Size 0x30
struct SkeletonAICharacterItemSpecificAudioEvents
{
public:
	TArray<class Class*>                                         ItemCategories;                                    // 0x0(0x10)
	struct SkeletonAudioEvents                                   Events;                                            // 0x10(0x20)
};


// Size 0x20
struct GuildOwnerRequestModel
{
public:
	struct GuildUserPirateModel                                  IdOfNewOwningUserPirate;                           // 0x0(0x20)
};


// Size 0xc8
struct CompanyXpGrantedMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct FName                                                 CompanyId;                                         // 0x78(0x8)
	uint32                                                       Xp;                                                // 0x80(0x4)
	struct Guid                                                  RequestID;                                         // 0x84(0x10)
	struct Guid                                                  BootyId;                                           // 0x94(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0xa4(0x8)
	uint32                                                       EmissaryLevel;                                     // 0xac(0x4)
	struct Guid                                                  GuildId;                                           // 0xb0(0x10)
	uint32                                                       Distinction;                                       // 0xc0(0x4)
};


// Size 0x48
struct AccoladeStatsInformationModel
{
public:
	struct FString                                               LocalizedTitle;                                    // 0x0(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0x10(0x24)
	TArray<struct AccoladeSubStatsInformationModel>              SubStats;                                          // 0x38(0x10)
};


// Size 0x20
struct ClientCargoRunCrewDataUnit
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<struct ClientCargoRunCrewNPCDataUnit>                 NPCPickUpPoints;                                   // 0x10(0x10)
};


// Size 0x10
struct PlayerBlockingBlockPlayersRequest
{
public:
	TArray<struct BlockablePlayer>                               BlockPlayers;                                      // 0x0(0x10)
};


// Size 0xf8
struct MeleeAttackHitResponseData
{
public:
	class Pawn*                                                  AttackingCharacter;                                // 0x0(0x8)
	struct HitResult                                             Hit;                                               // 0x8(0x80)
	struct ImpactDamageEvent                                     ImpactDamageEvent;                                 // 0x88(0x58)
	bool                                                         DamageConfirmed;                                   // 0xe0(0x1)
	bool                                                         Blocked;                                           // 0xe1(0x1)
	class MeleeAttackDataAsset*                                  AttackData;                                        // 0xe8(0x8)
	bool                                                         AttackCanDamage;                                   // 0xf0(0x1)
};


// Size 0x10
struct FrontendCrewDefinition
{
public:
	TArray<struct FrontendCrewMember>                            CrewMembers;                                       // 0x0(0x10)
};


// Size 0x78
struct EntitlementsUpdatedMessage
{
public:
	struct PirateIdentity                                        Identity;                                          // 0x0(0x78)
};


// Size 0x20
struct GuildNamesResponseEvent
{
public:
	TArray<struct GuildNameData>                                 GuildNameData;                                     // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x10
struct CompanyRankData
{
public:
	TArray<struct CompanyRankGradeData>                          RankGradeData;                                     // 0x0(0x10)
};


// Size 0x78
struct AthenaAnimationJumpingAnimData
{
public:
	struct AthenaAnimationJumpingFirstPersonAnimData             Jumping1stPerson;                                  // 0x0(0x28)
	struct AthenaAnimationJumpingThirdPersonAnimData             Jumping3rdPerson;                                  // 0x28(0x50)
};


// Size 0xa0
struct SeasonRewardEarnedMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  SeasonId;                                          // 0x78(0x10)
	bool                                                         MultipleRewards;                                   // 0x88(0x1)
	TArray<struct SeasonReward>                                  Rewards;                                           // 0x90(0x10)
};


// Size 0x50
struct SingleStickMapping
{
public:
	TArray<struct SingleStickMappingAxis>                        BindToLeftX;                                       // 0x0(0x10)
	TArray<struct SingleStickMappingAxis>                        BindToLeftY;                                       // 0x10(0x10)
	TArray<struct SingleStickMappingAxis>                        BindToRightX;                                      // 0x20(0x10)
	TArray<struct SingleStickMappingAxis>                        BindToRightY;                                      // 0x30(0x10)
	TArray<String>                                               Unbind;                                            // 0x40(0x10)
};


// Size 0x40
struct EventTeleportLocationCreated
{
public:
	struct TeleportLocation                                      TeleportLocation;                                  // 0x0(0x40)
};


// Size 0x10
struct BellPlayerStats
{
public:
	TArray<struct PlayerStat>                                    StatsToFireUponBellRing;                           // 0x0(0x10)
};


// Size 0x68
struct AthenaAnimationSwimmingAnimData
{
public:
	class BlendSpace*                                            SwimmingMovement;                                  // 0x0(0x8)
	class BlendSpace*                                            SwimmingMovementUnderwater;                        // 0x8(0x8)
	class BlendSpace1D*                                          UnderwaterTreadwater;                              // 0x10(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningLeft;                                       // 0x18(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningRight;                                      // 0x20(0x8)
	TArray<class AnimSequence*>                                  Idles;                                             // 0x28(0x10)
	TArray<class AnimSequence*>                                  IdlesUnderwater;                                   // 0x38(0x10)
	struct AthenaAnimationSwimmingSprintAnimData                 SwimSprint;                                        // 0x48(0x20)
};


// Size 0x18
struct GetStorageContainersGameServerResponseModel
{
public:
	TArray<struct StorageContainerStateData>                     Data;                                              // 0x8(0x10)
};


// Size 0x38
struct LandmarkReaction
{
public:
	bool                                                         Enabled;                                           // 0x0(0x1)
	float                                                        RelevantRadiusInMetres;                            // 0x4(0x4)
	TArray<char>                                                 ActionsThatTriggerThisReaction;                    // 0x8(0x10)
	class WwiseEvent*                                            GateCompletedAudioCue;                             // 0x18(0x8)
	class WwiseEvent*                                            GateCompletedMusicCue;                             // 0x20(0x8)
	TArray<struct LandmarkReactionKeyFrame>                      Events;                                            // 0x28(0x10)
};


// Size 0x28
struct VoteSessionData
{
public:
	TArray<struct VotersByOption>                                Votes;                                             // 0x0(0x10)
	struct Guid                                                  SessionId;                                         // 0x10(0x10)
	bool                                                         IsLocked;                                          // 0x20(0x1)
};


// Size 0xe8
struct ContestMatchmakingClientRequestModel
{
public:
	TArray<String>                                               PlayModeTags;                                      // 0x0(0x10)
	TArray<String>                                               PlayModeStates;                                    // 0x10(0x10)
	map                                                          OptionalPlayModeInfo;                              // 0x20(0x50)
	struct FString                                               HostId;                                            // 0x70(0x10)
	struct FString                                               HostSessionSignature;                              // 0x80(0x10)
	TArray<struct ContestMatchmakingCrewModel>                   Crews;                                             // 0x90(0x10)
	struct FString                                               ServerLocation;                                    // 0xa0(0x10)
	uint32                                                       FeatureHash;                                       // 0xb0(0x4)
	struct FString                                               PrivateServerId;                                   // 0xb8(0x10)
	struct FString                                               ServerForcedPlatform;                              // 0xc8(0x10)
	struct Guid                                                  RequestCorrelationId;                              // 0xd8(0x10)
};


// Size 0x20
struct GuildAddMemberRequestModel
{
public:
	struct GuildUserPirateModel                                  PirateToAdd;                                       // 0x0(0x20)
};


// Size 0x38
struct StorageContainerBackingStore
{
public:
	TArray<struct AllowedItemsBasedOnFeature>                    AllowedItems;                                      // 0x0(0x10)
	int                                                          MaxCapacityPerNode;                                // 0x10(0x4)
	int                                                          MaxNumNodes;                                       // 0x14(0x4)
	int                                                          MaxCapacityTotal;                                  // 0x18(0x4)
	bool                                                         AllowedItemsAreCached;                             // 0x1c(0x1)
	TArray<struct StorageContainerNode>                          ContainerNodes;                                    // 0x20(0x10)
	class ContainerAllowedItemsDataAsset*                        CachedAllowedItems;                                // 0x30(0x8)
};


// Size 0x38
struct CrewManagementMemberData
{
public:
	struct FString                                               Xuid;                                              // 0x0(0x10)
	struct FString                                               GamerTag;                                          // 0x10(0x10)
	struct CrewManagementMemberBrigState                         Brig;                                              // 0x20(0x10)
	char                                                         Muted;                                             // 0x30(0x1)
	char                                                         Platform;                                          // 0x31(0x1)
};


// Size 0x10
struct WeightedRewardTable
{
public:
	TArray<struct WeightedRewardTableUnit>                       Rewards;                                           // 0x0(0x10)
};


// Size 0x18
struct RewardGroupList
{
public:
	int                                                          NumRewards;                                        // 0x0(0x4)
	TArray<struct RewardGroup>                                   RewardGroups;                                      // 0x8(0x10)
};


// Size 0x70
struct EventCompanyReputationCampaignInformation
{
public:
	struct FString                                               CampaignId;                                        // 0x0(0x10)
	struct FString                                               Title;                                             // 0x10(0x10)
	struct FString                                               Description;                                       // 0x20(0x10)
	struct CappedCount                                           Progress;                                          // 0x30(0x8)
	struct FString                                               ImageUrl;                                          // 0x38(0x10)
	bool                                                         MarkAsNew;                                         // 0x48(0x1)
	bool                                                         Locked;                                            // 0x49(0x1)
	struct MoreInfoDetails                                       MoreInfo;                                          // 0x50(0x20)
};


// Size 0x18
struct ShipCurseSpawnedFXForCurse
{
public:
	TArray<struct ShipCurseSpawnedFXObject>                      SpawnedFXObjects;                                  // 0x8(0x10)
};


// Size 0x18
struct EmblemCriteria
{
public:
	struct PlayerStat                                            PlayerStat;                                        // 0x0(0x4)
	uint64                                                       Threshold;                                         // 0x8(0x8)
	char                                                         Operator;                                          // 0x10(0x1)
};


// Size 0x28
struct WeakActorHandle
{
public:
	struct ActorId                                               ActorId;                                           // 0x0(0x10)
	struct NetActorPtr                                           NetActorPtr;                                       // 0x10(0x14)
	bool                                                         Valid;                                             // 0x24(0x1)
};


// Size 0x18
struct MerchantQuestRequiredItemsGroupList
{
public:
	int                                                          NumRequiredItems;                                  // 0x0(0x4)
	TArray<struct MerchantQuestRequiredItemsGroup>               RequiredItemsGroups;                               // 0x8(0x10)
};


// Size 0x200
struct PremiumStoreOffer
{
public:
	bool                                                         IsSuperPremium;                                    // 0x1e0(0x1)
	struct FString                                               LockedReason;                                      // 0x1e8(0x10)
	struct PremiumStoreTimeLimited                               TimeLimited;                                       // 0x1f8(0x2)
};


// Size 0x10
struct EventCompanyProgressData
{
public:
	TArray<struct UICompanyProgress>                             CompanyProgress;                                   // 0x0(0x10)
};


// Size 0xa0
struct FireBroadcast
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	TArray<struct HitResult>                                     HitResults;                                        // 0x8(0x10)
	struct Vector                                                FirePosition;                                      // 0x18(0xc)
	struct Vector                                                FireDirection;                                     // 0x24(0xc)
	struct ProjectileAim                                         ProjectileAim;                                     // 0x30(0x50)
	int                                                          InaccuracySeed;                                    // 0x80(0x4)
	bool                                                         IsOutOfAmmo;                                       // 0x84(0x1)
	int                                                          NumProjectilesFired;                               // 0x88(0x4)
	struct Vector                                                WielderVelocityToInherit;                          // 0x8c(0xc)
	class Actor*                                                 HomingTarget;                                      // 0x98(0x8)
};


// Size 0x60
struct ActionSequenceSingleInteractionParam
{
public:
	struct FText                                                 DescriptorVerb;                                    // 0x0(0x38)
	struct Vector                                                TooltipOffset;                                     // 0x38(0xc)
	float                                                        HoldTime;                                          // 0x44(0x4)
	float                                                        TimeBeforeNextInteraction;                         // 0x48(0x4)
	TArray<struct ActionSequenceSingleInteractionConditionParam> Conditions;                                        // 0x50(0x10)
};


// Size 0x48
struct PlayerTextChatMessage
{
public:
	struct UniqueNetIdRepl                                       SenderNetId;                                       // 0x0(0x18)
	struct FString                                               GamerTag;                                          // 0x18(0x10)
	struct FString                                               Text;                                              // 0x28(0x10)
	char                                                         NotificationType;                                  // 0x38(0x1)
	struct NotificationStickiness                                Stickiness;                                        // 0x3c(0x8)
};


// Size 0x140
struct QuestBookMaterialHandler
{
public:
	int                                                          PageWidth;                                         // 0x0(0x4)
	int                                                          PageHeight;                                        // 0x4(0x4)
	struct QuestBookPageRenderer                                 PageTextRenderer;                                  // 0x8(0x18)
	class MaybeCompressedCanvasRenderTarget2D*                   LeftSpreadLeftPageRenderTarget;                    // 0x20(0x8)
	class MaybeCompressedCanvasRenderTarget2D*                   LeftSpreadRightPageRenderTarget;                   // 0x28(0x8)
	class MaybeCompressedCanvasRenderTarget2D*                   RightSpreadLeftPageRenderTarget;                   // 0x30(0x8)
	class MaybeCompressedCanvasRenderTarget2D*                   RightSpreadRightPageRenderTarget;                  // 0x38(0x8)
	class QuestBookPageLayout*                                   LeftSpreadLeftPageContents;                        // 0x40(0x8)
	class QuestBookPageLayout*                                   LeftSpreadRightPageContents;                       // 0x58(0x8)
	class QuestBookPageLayout*                                   RightSpreadLeftPageContents;                       // 0x70(0x8)
	class QuestBookPageLayout*                                   RightSpreadRightPageContents;                      // 0x88(0x8)
};


// Size 0xb0
struct PiratePreviewGeneratePirateEvent
{
public:
	struct PirateDescription                                     PirateDescription;                                 // 0x0(0x80)
	struct PiratePreviewView                                     View;                                              // 0x80(0x20)
	bool                                                         ForceRebuild;                                      // 0xa0(0x1)
};


// Size 0x48
struct AggressiveGhostShipEncounterShipDesc
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	class AggressiveGhostShipDifficultyDataAsset*                Difficulty;                                        // 0x8(0x8)
	class AggressiveGhostShipShotSelectionDataAsset*             ShotSelection;                                     // 0x10(0x8)
	class UClass*                                                Ship;                                              // 0x18(0x8)
	class AggressiveGhostShipVisualsDataAsset*                   Visuals;                                           // 0x20(0x8)
	TArray<struct AggressiveGhostShipLocationEntryDesc>          Locations;                                         // 0x28(0x10)
	TArray<struct PlayerStat>                                    StatsToFireOnDeath;                                // 0x38(0x10)
};


// Size 0x48
struct GuildChronicleShipAccolade
{
public:
	struct AccoladeProgressId                                    ProgressId;                                        // 0x0(0x24)
	struct Guid                                                  AlignmentId;                                       // 0x24(0x10)
	uint64                                                       PreviousProgress;                                  // 0x38(0x8)
	uint64                                                       CurrentProgress;                                   // 0x40(0x8)
};


// Size 0x10
struct UnlockedOffersContainerModel
{
public:
	TArray<struct UnlockedShopOffersThroughAccoladesAndMilestonesModel> Offers;                                            // 0x0(0x10)
};


// Size 0x28
struct LobbyCrewInfo
{
public:
	char                                                         SessionType;                                       // 0x0(0x1)
	TArray<struct LobbyCrewMember>                               Members;                                           // 0x8(0x10)
	struct FString                                               SessionName;                                       // 0x18(0x10)
};


// Size 0x58
struct MeshRegistration
{
public:
	TArray<struct IndividualMeshConsumer>                        RegisteredComponents;                              // 0x0(0x10)
	class UClass*                                                MeshFallbackCategory;                              // 0x18(0x8)
	class Object*                                                FallbackMeshToAssign;                              // 0x20(0x8)
};


// Size 0x10
struct AimSensitivityRuntimeDataEntry
{
public:
	struct AimSensitivitySettingParams                           SettingParams;                                     // 0x0(0xc)
	float                                                        CurrentAimSensitivity;                             // 0xc(0x4)
};


// Size 0x20
struct SpecialisedClothingCategories
{
public:
	class UClass*                                                DisplayIfWorn;                                     // 0x0(0x8)
	TArray<struct FeaturedClothingCategory>                      Categories;                                        // 0x8(0x10)
	bool                                                         AllTab;                                            // 0x18(0x1)
};


// Size 0x10
struct RandomParticleSystemPicker
{
public:
	TArray<struct RandomParticleSystemPickerEntry>               Effects;                                           // 0x0(0x10)
};


// Size 0x60
struct FishAnimationSwimmingLoops
{
public:
	struct FishAnimationSwimmingLoopAnimations                   TurnLeftLoopAnimations;                            // 0x0(0x20)
	struct FishAnimationSwimmingLoopAnimations                   TurnRightLoopAnimations;                           // 0x20(0x20)
	struct FishAnimationSwimmingLoopAnimations                   JumpingLoopAnimations;                             // 0x40(0x20)
};


// Size 0x60
struct AthenaAnimationSkeletonShipCaptainParams
{
public:
	struct AthenaAnimationSkeletonShipCaptainAnimations          AllSkeletonShipCaptainAnimations;                  // 0x0(0x48)
	class AnimSequence*                                          ShipCaptainIdleCycleA;                             // 0x48(0x8)
	class AnimSequence*                                          ShipCaptainIdleCycleB;                             // 0x50(0x8)
	char                                                         DockedAnimationState;                              // 0x58(0x1)
};


// Size 0x50
struct ActiveGuildBrandingUpdated
{
public:
	struct GuildBranding                                         GuildBranding;                                     // 0x0(0x50)
};


// Size 0x70
struct EmblemInformation
{
public:
	struct FString                                               BackgroundImageUrl;                                // 0x0(0x10)
	struct FText                                                 Name;                                              // 0x10(0x38)
	TArray<struct Text>                                          ProgressDescriptions;                              // 0x48(0x10)
	TArray<struct CappedCount>                                   Progressions;                                      // 0x58(0x10)
	uint32                                                       Doubloons;                                         // 0x68(0x4)
};


// Size 0x28
struct CompanyProgressIcons
{
public:
	TArray<struct CompanyProgressIcon>                           Icons;                                             // 0x0(0x10)
	uint32                                                       Step;                                              // 0x10(0x4)
	TArray<struct CompanyProgressDistinctionIcon>                DistinctionIcons;                                  // 0x18(0x10)
};


// Size 0x30
struct AggressiveGhostShipVisualsExtraMesh
{
public:
	struct StringAssetReference                                  Mesh;                                              // 0x0(0x10)
	struct Vector                                                Offset;                                            // 0x10(0xc)
	TArray<struct AggressiveGhostShipVisualsMaterialOverride>    MaterialOverrides;                                 // 0x20(0x10)
};


// Size 0x10
struct ServerMigrationStatusTelemetryFragment
{
public:
	TArray<struct CrewMigrationStatusInfo>                       CrewsMigrationStatusInfo;                          // 0x0(0x10)
};


// Size 0x18
struct AthenaAIItemEngageEnemyMethods
{
public:
	class UClass*                                                ItemCategory;                                      // 0x0(0x8)
	TArray<struct AthenaAIEngageEnemyData>                       EngageEnemyDataList;                               // 0x8(0x10)
};


// Size 0x20
struct EventSyncBeckonTagsToBeckonServiceForMigratedCrew
{
public:
	TArray<struct BeckonTag>                                     CrewBeckonTags;                                    // 0x10(0x10)
};


// Size 0x6c
struct WeaponProjectileEffectParams
{
public:
	bool                                                         ApplyStun;                                         // 0x0(0x1)
	float                                                        StunDuration;                                      // 0x4(0x4)
	bool                                                         ApplyKnockback;                                    // 0x8(0x1)
	struct KnockBackInfo                                         KnockbackParams;                                   // 0xc(0x54)
	int                                                          MinimumHitProjectilesForKnockback;                 // 0x60(0x4)
	float                                                        MaximumKnockbackDistance;                          // 0x64(0x4)
	bool                                                         EnableKnockbackFalloffOverDistance;                // 0x68(0x1)
};


// Size 0x68
struct VoyageProposalVoteSlotUpdatedEvent
{
public:
	struct ProposedVoyageEntry                                   Proposal;                                          // 0x0(0x50)
	int                                                          VoteIndex;                                         // 0x50(0x4)
	struct FString                                               ShipName;                                          // 0x58(0x10)
};


// Size 0x68
struct NPCCustomAnimationBlueprintData
{
public:
	bool                                                         SequenceActive;                                    // 0x0(0x1)
	bool                                                         LoopActive;                                        // 0x1(0x1)
	int                                                          ActiveSequenceIndex;                               // 0x4(0x4)
	bool                                                         IsOneShot;                                         // 0x8(0x1)
	struct NPCCustomAnimationBlueprintPlayingAnimations          BlueprintPlayingAnimations;                        // 0x10(0x28)
	struct NPCCustomAnimationBlueprintPlayingMontage             BlueprintPlayingFacialMontages;                    // 0x38(0x28)
	char                                                         CustomAnimationState;                              // 0x60(0x1)
};


// Size 0x40
struct EquipRequest
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	struct Guid                                                  TelemetryEquipId;                                  // 0x8(0x10)
	struct Vector                                                EquipLocation;                                     // 0x18(0xc)
	float                                                        OtherWeaponFiredTimestamp;                         // 0x24(0x4)
	bool                                                         ShouldHaveCancelledEquipAnim;                      // 0x28(0x1)
	bool                                                         DidCancelEquipAnim;                                // 0x29(0x1)
	struct EventWieldableItemSetIsWielded                        WieldEvent;                                        // 0x30(0x10)
};


// Size 0x40
struct GuildActivityMessageUI
{
public:
	struct GuildActivityMessage                                  Activity;                                          // 0x0(0x40)
};


// Size 0x10
struct RewardPopUpNotificationInfo
{
public:
	struct RewardId                                              RewardId;                                          // 0x0(0x8)
	class PopUpMessageDesc*                                      PopUp;                                             // 0x8(0x8)
};


// Size 0x10
struct PendingInvitesListEvent
{
public:
	TArray<struct PendingInviteViewModel>                        Invites;                                           // 0x0(0x10)
};


// Size 0x20
struct CargoRunQuestCategoryGroup
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	struct FName                                                 GroupName;                                         // 0x4(0x8)
	TArray<struct CargoRunQuestRandomRequiredItemsEntry>         RequiredItemEntries;                               // 0x10(0x10)
};


// Size 0x38
struct ClientTallTaleDebugInfoNetworkEvent
{
public:
	struct TallTaleDebugInfo                                     QuestInfo;                                         // 0x18(0x20)
};


// Size 0x40
struct GuildInviteSentModel
{
public:
	struct GuildUserPirateModel                                  UserPirateId;                                      // 0x0(0x20)
	struct Guid                                                  GuildId;                                           // 0x20(0x10)
	struct Guid                                                  InviteId;                                          // 0x30(0x10)
};


// Size 0x8
struct TavernBoardTakeMapSuccessEvent
{
public:
	struct CappedCount                                           TakeLimit;                                         // 0x0(0x8)
};


// Size 0x34
struct DockableBaseActionStateParams
{
public:
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x18(0x1c)
};


// Size 0x60
struct UseCannonActionStateParams
{
public:
	struct UseMountedWeaponActionStateParams                     MountedWeaponParams;                               // 0x0(0x58)
	float                                                        ReloadAttemptRepeatRate;                           // 0x58(0x4)
};


// Size 0x20
struct SpawnLocationReservation
{
public:
	class UClass*                                                LocationType;                                      // 0x0(0x8)
	struct IslandItemSpawnLocationData                           SpawnData;                                         // 0x8(0x18)
};


// Size 0x10
struct EventCompanyStateData
{
public:
	TArray<struct UICompanyState>                                State;                                             // 0x0(0x10)
};


// Size 0x18
struct PirateSelectionAdvanceWithExistingPirateEvent
{
public:
	TArray<struct EntitlementInfo>                               ValidMVPirateEntitlements;                         // 0x0(0x10)
	bool                                                         WasEntitlementRequestSuccess;                      // 0x10(0x1)
	bool                                                         WantsToPutPlayerInMaidenVoyage;                    // 0x11(0x1)
};


// Size 0x30
struct LocationBootyStorage
{
public:
	char                                                         IslandHash;                                        // 0x0(0x1)
	struct FName                                                 IslandName;                                        // 0x4(0x8)
	struct Vector                                                IslandLocation;                                    // 0xc(0xc)
	TArray<struct ItemSnapshot>                                  StoredTreasure;                                    // 0x18(0x10)
	char                                                         StoredTreasureCount;                               // 0x28(0x1)
};


// Size 0x170
struct BalanceableWalkwayAnimationParams
{
public:
	bool                                                         IsDocked;                                          // 0x0(0x1)
	bool                                                         IsSliding;                                         // 0x1(0x1)
	bool                                                         IsSprinting;                                       // 0x2(0x1)
	float                                                        CurrentTilt;                                       // 0x4(0x4)
	float                                                        CurrentSpeed;                                      // 0x8(0x4)
	assetobject                                                  FirstPersonIntoAssetPtr;                           // 0x10(0x20)
	assetobject                                                  FirstPersonBlendSpaceAssetPtr;                     // 0x30(0x20)
	assetobject                                                  ThirdPersonIntoAssetPtr;                           // 0x50(0x20)
	assetobject                                                  ThirdPersonBackupAssetPtr;                         // 0x70(0x20)
	assetobject                                                  ThirdPersonBlendSpaceAssetPtr;                     // 0x90(0x20)
	struct BalanceableWalkwayAnimationsFirstPerson               BalanceableWalkwayAnimationsFirstPerson;           // 0xb0(0x18)
	struct BalanceableWalkwayAnimationsThirdPerson               BalanceableWalkwayAnimationsThirdPerson;           // 0xc8(0x18)
};


// Size 0x18
struct ContestParticipantTelemetryFragment
{
public:
	int                                                          NumberOfCrews;                                     // 0x0(0x4)
	int                                                          NumberOfParticipants;                              // 0x4(0x4)
	TArray<struct ContestParticipantData>                        ContestParticipants;                               // 0x8(0x10)
};


// Size 0x58
struct VoyageLocationRandomParams
{
public:
	bool                                                         AddToVoyageHistory;                                // 0x0(0x1)
	bool                                                         AvoidWorldEventIslands;                            // 0x1(0x1)
	bool                                                         NPCsOnly;                                          // 0x2(0x1)
	bool                                                         CargoRunNPCsOnly;                                  // 0x3(0x1)
	bool                                                         NoCargoRunNPCs;                                    // 0x4(0x1)
	bool                                                         Feature;                                           // 0x5(0x1)
	bool                                                         Resource;                                          // 0x6(0x1)
	bool                                                         Outpost;                                           // 0x7(0x1)
	bool                                                         Fort;                                              // 0x8(0x1)
	bool                                                         SeaPost;                                           // 0x9(0x1)
	bool                                                         HasWashedUpItemLocations;                          // 0xa(0x1)
	bool                                                         HasLandmarks;                                      // 0xb(0x1)
	bool                                                         OnlyNamedIslands;                                  // 0xc(0x1)
	class VoyageLocationOnlyNamedIslandListDataAsset*            OnlyNamedIslandsListDataAsset;                     // 0x10(0x8)
	TArray<class Class*>                                         Seas;                                              // 0x18(0x10)
	TArray<struct SeaOverride>                                   SeasOverrides;                                     // 0x28(0x10)
	bool                                                         WithinDistance;                                    // 0x38(0x1)
	struct VoyageLocationDistance                                Distance;                                          // 0x3c(0x8)
};


// Size 0x10
struct BootFlowSetWhatsNewArticleList
{
public:
	TArray<struct BootFlowWhatsNewArticle>                       WhatsNewArticleList;                               // 0x0(0x10)
};


// Size 0x20
struct OnlinePermissionsResponseEvent
{
public:
	TArray<struct OnlinePermissionsResponseData>                 PlayerIdsAndHasPermission;                         // 0x0(0x10)
	struct Guid                                                  RequestID;                                         // 0x10(0x10)
};


// Size 0x18
struct NPCOnSurfaceLocationGroup
{
public:
	struct FName                                                 GroupName;                                         // 0x0(0x8)
	TArray<struct NPCOnSurfaceLocationsEntry>                    LocationsEntries;                                  // 0x8(0x10)
};


// Size 0x70
struct MerchantMapLayoutItem
{
public:
	struct TreasureMapWidgetText                                 Name;                                              // 0x0(0x3c)
	struct TreasureMapWidgetTexture                              IconImage;                                         // 0x40(0x30)
};


// Size 0x78
struct AthenaAnimationObjectActionContinuousStructPitchOverride
{
public:
	class BlendSpace1D*                                          MainInto;                                          // 0x0(0x8)
	class BlendSpace1D*                                          MainCycleIdle;                                     // 0x8(0x8)
	class BlendSpace1D*                                          MainCycleLocomotion;                               // 0x10(0x8)
	TArray<class BlendSpace1D*>                                  VariantCycleIdle;                                  // 0x18(0x10)
	bool                                                         UseMainCycleJump;                                  // 0x28(0x1)
	bool                                                         IgnoreFullBody;                                    // 0x29(0x1)
	struct AthenaAnimationObjectJumpingAnimationsPitchOverride   MainCycleJump;                                     // 0x30(0x20)
	class BlendSpace1D*                                          MainOutOf;                                         // 0x50(0x8)
	struct AthenaAnimationObjectActionContinuousSwimming         MainSwimming;                                      // 0x58(0x20)
};


// Size 0x20
struct MeshMemoryConstraintTelemetryFragment
{
public:
	TArray<struct MeshMemoryConstraintTelemetryBudgetFragment>   BudgetData;                                        // 0x0(0x10)
	int                                                          MemoryUsedInBytes;                                 // 0x10(0x4)
	int                                                          MemoryUsedOfNoFallbackMeshesInBytes;               // 0x14(0x4)
	int                                                          MaximumMemoryUsedInBytes;                          // 0x18(0x4)
	int                                                          ThresholdScale;                                    // 0x1c(0x4)
};


// Size 0x18
struct GetNPCsGameServerResponseModel
{
public:
	TArray<struct NPCStateData>                                  Data;                                              // 0x8(0x10)
};


// Size 0x10
struct BeckonCrewEntryContainer
{
public:
	TArray<struct BeckonCrewEntry>                               Entries;                                           // 0x0(0x10)
};


// Size 0x18
struct Checkpoint
{
public:
	class Actor*                                                 CheckpointActor;                                   // 0x0(0x8)
	TArray<struct FailCollisions>                                FailCollisions;                                    // 0x8(0x10)
};


// Size 0xc
struct SailWithFlameOfFateColoursAboardStatData
{
public:
	uint32                                                       NumberOfUniqueFlameColoursAboard;                  // 0x0(0x4)
	struct PlayerStat                                            DefaultStatToFire;                                 // 0x4(0x4)
	struct PlayerStat                                            AllianceStatToFire;                                // 0x8(0x4)
};


// Size 0x90
struct RatManagerRatInfestationLevel
{
public:
	float                                                        WaterLevel;                                        // 0x0(0x4)
	struct WeightedProbabilityRangeOfRanges                      RatSpawnFrequency;                                 // 0x8(0x30)
	struct WeightedProbabilityRangeOfRanges                      RatSpeed;                                          // 0x38(0x30)
	TArray<struct Name>                                          Locations;                                         // 0x68(0x10)
	double                                                       Modulo;                                            // 0x78(0x8)
	TArray<struct RatManagerPseudoRandomEntry>                   Intervals;                                         // 0x80(0x10)
};


// Size 0x180
struct AthenaAnimationCrouchingAnimData
{
public:
	struct AthenaAnimationCrouchingThirdPersonAnimData           Crouching3rdPerson;                                // 0x0(0x28)
	struct AthenaAnimationCrouchingFirstPersonAnimData           Crouching1stPerson;                                // 0x28(0x10)
	bool                                                         IsCrouching;                                       // 0x38(0x1)
	assetobject                                                  ThirdPersonBlendSpaceAssetPtr;                     // 0x40(0x20)
	assetobject                                                  FirstPersonBlendSpaceAssetPtr;                     // 0x60(0x20)
	class AnimSequence*                                          FirstPersonAnimFallback;                           // 0x80(0x8)
	class AnimSequence*                                          ThirdPersonAnimFallback;                           // 0x88(0x8)
	assetobject                                                  ThirdPersonTurn90RightAssetPtr;                    // 0x90(0x20)
	assetobject                                                  ThirdPersonTurn90LeftAssetPtr;                     // 0xb0(0x20)
	assetobject                                                  ThirdPersonTurnOutAssetPtr;                        // 0xd0(0x20)
};


// Size 0x18
struct GetCannonsGameServerResponseModel
{
public:
	TArray<struct CannonStateData>                               Data;                                              // 0x8(0x10)
};


// Size 0x58
struct NPCDialogData
{
public:
	class NPCDialogHeader*                                       Header;                                            // 0x0(0x8)
	TArray<class NPCDialogOption*>                               Options;                                           // 0x8(0x10)
	struct NPCDialogTheme                                        Theme;                                             // 0x18(0x40)
};


// Size 0x110
struct ShipMilestoneCompletionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  AlignmentId;                                       // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	struct Guid                                                  ScheduleId;                                        // 0x98(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0xa8(0x24)
	uint64                                                       Progress;                                          // 0xd0(0x8)
	uint64                                                       Alignment;                                         // 0xd8(0x8)
	uint64                                                       Level;                                             // 0xe0(0x8)
	struct DateTime                                              CompletedAt;                                       // 0xe8(0x8)
	struct FString                                               ShipId;                                            // 0xf0(0x10)
	struct FString                                               AlignmentKey;                                      // 0x100(0x10)
};


// Size 0x30
struct StaggerModifiersEntry
{
public:
	char                                                         StaggerToModify;                                   // 0x0(0x1)
	TArray<char>                                                 StaggersThatCancelThisModifier;                    // 0x8(0x10)
	bool                                                         OnlyWhenSprinting;                                 // 0x18(0x1)
	struct StaggerModifiers                                      Modifiers;                                         // 0x1c(0x10)
};


// Size 0x20
struct UniversalDescriptionSection
{
public:
	struct FString                                               Heading;                                           // 0x0(0x10)
	TArray<struct UniversalDescriptionParagraph>                 Paragraphs;                                        // 0x10(0x10)
};


// Size 0x28
struct PageReference
{
public:
	struct StringAssetReference                                  PageReference;                                     // 0x0(0x10)
	char                                                         NumberOfPages;                                     // 0x10(0x1)
	bool                                                         IsSkippable;                                       // 0x11(0x1)
	int                                                          Priority;                                          // 0x14(0x4)
	TArray<struct PageCultureOverride>                           CultureOverrides;                                  // 0x18(0x10)
};


// Size 0x10
struct GuildOverviewForInviteResponseModel
{
public:
	struct GuildOverviewModel                                    OverviewInfo;                                      // 0x0(0x10)
};


// Size 0x28
struct CatalogOfferPrerequisitesDataAsset
{
public:
	TArray<class Class*>                                         Entitlements;                                      // 0x0(0x10)
	TArray<struct CatalogOfferCompanyLevelDataAsset>             CompanyLevel;                                      // 0x10(0x10)
	uint32                                                       EntitlementRequirementThreshold;                   // 0x20(0x4)
};


// Size 0x38
struct CrewShipPersistentData
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class CrewShipManifest*                                      CrewShipManifest;                                  // 0x10(0x8)
	TArray<struct PirateIdentity>                                PiratesWhoHaveSpottedCrewsShip;                    // 0x18(0x10)
	TArray<struct Guid>                                          CrewsWhoHaveSpottedCrewsShip;                      // 0x28(0x10)
};


// Size 0x18
struct MerchantQuestCategoryGroup
{
public:
	struct FName                                                 GroupName;                                         // 0x0(0x8)
	TArray<struct MerchantQuestRandomRequiredItemsEntry>         RequiredItemEntries;                               // 0x8(0x10)
};


// Size 0x40
struct ProjectileLauncherMechanismSourceShipParams
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	struct ProjectileLauncherMechanismSourceWatercraftParams     Params;                                            // 0x8(0x38)
};


// Size 0x98
struct QuestTableCompanySkin
{
public:
	struct FString                                               BackgroundImageUrl;                                // 0x0(0x10)
	TArray<String>                                               VoyageIconUrls;                                    // 0x10(0x10)
	struct FString                                               TabBackgroundImageUrl;                             // 0x20(0x10)
	struct QuestTableRankSkin                                    RankSkin;                                          // 0x30(0x68)
};


// Size 0x68
struct ChestTabViewModel
{
public:
	struct FString                                               ItemCategory;                                      // 0x0(0x10)
	struct FString                                               CategoryImageUrl;                                  // 0x10(0x10)
	struct FString                                               Name;                                              // 0x20(0x10)
	TArray<struct ChestEntitlementViewModel>                     EquippedEntitlements;                              // 0x30(0x10)
	TArray<struct ChestEntitlementViewModel>                     SavedToLoadoutEntitlements;                        // 0x40(0x10)
	bool                                                         IsLocked;                                          // 0x50(0x1)
	TArray<String>                                               LockedDescriptions;                                // 0x58(0x10)
};


// Size 0x30
struct ContestEndEvent
{
public:
	int                                                          Position;                                          // 0x0(0x4)
	struct FString                                               Message;                                           // 0x8(0x10)
	TArray<struct ScoreboardItems>                               Scores;                                            // 0x18(0x10)
	float                                                        HoldDuration;                                      // 0x28(0x4)
};


// Size 0x90
struct UICompanySkin
{
public:
	char                                                         Style;                                             // 0x0(0x1)
	struct FString                                               BackgroundImageUrl;                                // 0x8(0x10)
	struct FString                                               RibbonImageUrl;                                    // 0x18(0x10)
	int                                                          ProgressStep;                                      // 0x28(0x4)
	TArray<String>                                               ProgressIconUrls;                                  // 0x30(0x10)
	TArray<String>                                               DistinctionIconUrls;                               // 0x40(0x10)
	struct FString                                               ShopTopBannerUrl;                                  // 0x50(0x10)
	struct FString                                               ShopBottomBannerUrl;                               // 0x60(0x10)
	TArray<struct UIRankSkin>                                    Ranks;                                             // 0x70(0x10)
	struct FString                                               ShopInfoUrl;                                       // 0x80(0x10)
};


// Size 0x28
struct TrackedCrewInContest
{
public:
	TArray<struct PlayersSpawningInTavern>                       PlayersSpawningInTavern;                           // 0x18(0x10)
};


// Size 0xc
struct AmmoEffectState
{
public:
	struct EventAmmoChanged                                      LastAmmoEvent;                                     // 0x0(0x8)
	bool                                                         ShouldSkipUpdates;                                 // 0x8(0x1)
};


// Size 0x18
struct EmissaryBootyItemStats
{
public:
	class UClass*                                                EmissaryCompany;                                   // 0x0(0x8)
	TArray<struct PlayerStat>                                    Stats;                                             // 0x8(0x10)
};


// Size 0x10
struct TavernBoardMyMapsEvent
{
public:
	TArray<struct ITavernBoardMap>                               MyMaps;                                            // 0x0(0x10)
};


// Size 0x90
struct PenaltyRequestMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  RequestID;                                         // 0x78(0x10)
	struct FName                                                 PenaltyId;                                         // 0x88(0x8)
};


// Size 0xaf0
struct RenderingTelemetryFragment
{
public:
	struct TextureGroupMemorySummary                             StreamedTexturePoolGroupsMemorySummary;            // 0x0(0x28)
	struct TextureGroupMemorySummary                             UnstreamedTexturePoolGroupsMemorySummary;          // 0x578(0x28)
};


// Size 0x10
struct BuoyantObjectSpawnGroup
{
public:
	TArray<struct BuoyantObjectSpawnDesc>                        Objects;                                           // 0x0(0x10)
};


// Size 0x10
struct PurchasedShipStockOffersTelemetryEvent
{
public:
	TArray<struct ShipStockOfferDetailsTelemetryEvent>           Offers;                                            // 0x0(0x10)
};


// Size 0x1e0
struct ShopOffer
{
public:
	struct Guid                                                  OfferId;                                           // 0x0(0x10)
	struct FString                                               DisplayName;                                       // 0x10(0x10)
	struct FString                                               Description;                                       // 0x20(0x10)
	struct ShopOfferPrice                                        Price;                                             // 0x30(0x48)
	struct FString                                               ThumbnailImageUrl;                                 // 0x78(0x10)
	TArray<String>                                               ClientIds;                                         // 0x88(0x10)
	struct FString                                               CatalogName;                                       // 0x98(0x10)
	TArray<String>                                               PurchaseStats;                                     // 0xa8(0x10)
	struct ShopOfferPrerequisites                                Prerequisites;                                     // 0xb8(0x68)
	struct ShopOfferPrerequisites                                ExclusionConditions;                               // 0x120(0x68)
	char                                                         Availability;                                      // 0x188(0x1)
	map                                                          MetaData;                                          // 0x190(0x50)
};


// Size 0x40
struct GuildValidityRequestModel
{
public:
	struct GuildUserPirateModel                                  ShipOwner;                                         // 0x0(0x20)
	struct Guid                                                  ShipId;                                            // 0x20(0x10)
	TArray<struct GuildUserPirateModel>                          CrewMembers;                                       // 0x30(0x10)
};


// Size 0x110
struct InteractableLightParams
{
public:
	bool                                                         DebugDraw;                                         // 0x0(0x1)
	bool                                                         IsSpotlight;                                       // 0x1(0x1)
	struct FName                                                 LightTag;                                          // 0x4(0x8)
	struct InteractableLightState                                OnParameters;                                      // 0x10(0x80)
	struct InteractableLightState                                OffParameters;                                     // 0x90(0x80)
};


// Size 0x48
struct OpenInventoryInteractionEvent
{
public:
	struct FString                                               InventoryName;                                     // 0x0(0x10)
	TArray<struct IInventoryItem>                                Current;                                           // 0x10(0x10)
	TArray<struct IInventoryItem>                                Available;                                         // 0x20(0x10)
	TArray<struct IInventoryItemDescription>                     Descriptions;                                      // 0x30(0x10)
	bool                                                         CanPlayerStoreItems;                               // 0x40(0x1)
};


// Size 0x40
struct GuildShipSetSailActivityMessageModel
{
public:
	struct FString                                               ShipId;                                            // 0x0(0x10)
	struct FString                                               ShipName;                                          // 0x10(0x10)
	struct UserPirateId                                          ShipOwner;                                         // 0x20(0x20)
};


// Size 0x20
struct SaveToLoadoutCosts
{
public:
	TArray<struct SaveToLoadoutItemCost>                         CategoryCosts;                                     // 0x0(0x10)
	TArray<struct SaveToLoadoutItemCost>                         EntitlementCosts;                                  // 0x10(0x10)
};


// Size 0x30
struct AccoladeBreakDownTotalModel
{
public:
	struct AccoladeProgressId                                    ProgressId;                                        // 0x0(0x24)
	int64                                                        ProgressValue;                                     // 0x28(0x8)
};


// Size 0x1
struct GuildShipConfigWrapperModel
{
public:
	struct GuildShipConfigModel                                  ShipConfig;                                        // 0x0(0x1)
};


// Size 0x68
struct SeasonChallengeInfo
{
public:
	struct Guid                                                  GoalId;                                            // 0x0(0x10)
	int64                                                        Threshold;                                         // 0x10(0x8)
	struct FString                                               XPGain;                                            // 0x18(0x10)
	struct FString                                               Category;                                          // 0x28(0x10)
	struct FString                                               LocalizedTitle;                                    // 0x38(0x10)
	struct FString                                               LocalizedCopy;                                     // 0x48(0x10)
	TArray<struct SeasonGoalInfo>                                Goals;                                             // 0x58(0x10)
};


// Size 0x28
struct TreasureMapData
{
public:
	class TreasureMapDataAsset*                                  Map;                                               // 0x0(0x8)
	class GeneratedLocationsDataAsset*                           LocationSource;                                    // 0x8(0x8)
	TArray<struct TreasureLocationData>                          TreasureLocations;                                 // 0x10(0x10)
	float                                                        RotationFromNorth;                                 // 0x20(0x4)
};


// Size 0x14
struct RainZoneParametersAndLocation
{
public:
	struct RainZoneParameters                                    RainZoneParameters;                                // 0x0(0xc)
	struct Vector2D                                              Location;                                          // 0xc(0x8)
};


// Size 0x70
struct ShipStorageJettisonRequest
{
public:
	class UClass*                                                LoadedAsset;                                       // 0x0(0x8)
	TArray<struct StorageContainerNode>                          CachedContainerNodes;                              // 0x8(0x10)
};


// Size 0x10
struct StoreCatalog
{
public:
	TArray<struct StoreCatalogItem>                              Items;                                             // 0x0(0x10)
};


// Size 0x58
struct FaunaAnimationSnakeAttack
{
public:
	struct FaunaAnimationSnakeBiteStructure                      BiteForwards;                                      // 0x0(0x20)
	struct FaunaAnimationSnakeBiteStructure                      BiteBackwards;                                     // 0x20(0x20)
	struct FaunaAnimationSnakeCharmStructure                     Charm;                                             // 0x40(0x18)
};


// Size 0x50
struct ItemSpawnTransform
{
public:
	struct Transform                                             Transform;                                         // 0x0(0x30)
	class WeightedItemDescSpawnDataAsset*                        ReferencedSpawnDistributionAsset;                  // 0x30(0x8)
	TArray<struct ItemSpawnTransformOverrideEntry>               ReferencedSpawnDistributionAssetOverrides;         // 0x38(0x10)
	int                                                          Weight;                                            // 0x48(0x4)
};


// Size 0x20
struct EntitlementsResponseEvent
{
public:
	TArray<struct EntitlementItem>                               Entitlements;                                      // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x28
struct SessionCreationCrewModel
{
public:
	struct FString                                               CrewLeaderXuid;                                    // 0x0(0x10)
	TArray<struct SessionCreationCrewMemberModel>                CrewMembers;                                       // 0x10(0x10)
	char                                                         SessionType;                                       // 0x20(0x1)
};


// Size 0x18
struct ItemPreviewUpdateCameraEvent
{
public:
	struct ItemPreviewView                                       View;                                              // 0x0(0x18)
};


// Size 0x18
struct JumpHeldAdditiveBlendWeight
{
public:
	TArray<struct HeldStateSpecificBlendWeight>                  HeldStateSpecificBlendWeights;                     // 0x0(0x10)
	float                                                        DefaultBlendWeight;                                // 0x10(0x4)
};


// Size 0x20
struct CaptainsLogPlayerStatEvent
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct PlayerStat                                            PlayerStat;                                        // 0x10(0x4)
	uint64                                                       Value;                                             // 0x18(0x8)
};


// Size 0x58
struct AthenaAnimationCustomSkeletonAnimationBlueprintData
{
public:
	bool                                                         SequenceActive;                                    // 0x0(0x1)
	bool                                                         LoopActive;                                        // 0x1(0x1)
	int                                                          ActiveSequenceIndex;                               // 0x4(0x4)
	bool                                                         IsOneShot;                                         // 0x8(0x1)
	struct SkeletonCustomAnimationBlueprintPlayingAnimations     BlueprintPlayingAnimations;                        // 0x10(0x38)
	class NPCHeldObjectData*                                     WieldableCosmeticItemList;                         // 0x48(0x8)
	char                                                         CustomAnimationState;                              // 0x50(0x1)
	float                                                        BlendTime;                                         // 0x54(0x4)
};


// Size 0x78
struct EventAthenaLocalPlayerPirateIdentitySet
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
};


// Size 0x1c
struct IntentPredictor
{
public:
	struct IntentPredictorParams                                 Params;                                            // 0x4(0x18)
};


// Size 0x28
struct GameEventSchedulerConfigChangeTelemetryEvent
{
public:
	struct Guid                                                  ConfigId;                                          // 0x0(0x10)
	struct FName                                                 ConfigName;                                        // 0x10(0x8)
	TArray<struct GameEventSchedulerConfigInfo>                  Events;                                            // 0x18(0x10)
};


// Size 0x20
struct BaseRadialEntry
{
public:
	struct RadialInputBindings                                   RadialBindings;                                    // 0x0(0x10)
	class RadialCreationRuleAsset*                               RadialCreationRule;                                // 0x10(0x8)
	class RadialContextBase*                                     RadialContextBase;                                 // 0x18(0x8)
};


// Size 0x58
struct ContinuousAnimationElement
{
public:
	struct FName                                                 SequenceName;                                      // 0x0(0x8)
	struct AnimationContinuousCycle                              ContinuousSequence;                                // 0x8(0x48)
	float                                                        BlendTime;                                         // 0x50(0x4)
};


// Size 0x50
struct ConditionalStat
{
public:
	struct PlayerStat                                            Stat;                                              // 0x0(0x4)
	char                                                         StatType;                                          // 0x4(0x1)
	float                                                        Range;                                             // 0x8(0x4)
	struct PlayerTrackedObjective                                TrackedObjective;                                  // 0xc(0x10)
	char                                                         TrackedObjectiveType;                              // 0x1c(0x1)
	char                                                         TrackedObjectiveTargetType;                        // 0x1d(0x1)
	TArray<class StatCondition*>                                 Conditions;                                        // 0x20(0x10)
	struct ConditionInstance                                     ConditionInstance;                                 // 0x30(0x20)
};


// Size 0xc
struct PlayerHeroStatUnit
{
public:
	struct PlayerStat                                            PlayerStat;                                        // 0x0(0x4)
	struct FName                                                 HeroStatId;                                        // 0x4(0x8)
};


// Size 0x38
struct ScoreRewardShipPartData
{
public:
	class UClass*                                                ShipPart;                                          // 0x0(0x8)
	struct ScoreRewardValueData                                  Score;                                             // 0x8(0x30)
};


// Size 0xd0
struct EventCharacterFootImpact
{
public:
	struct CharacterFootImpactResult                             Result;                                            // 0x0(0xd0)
};


// Size 0x90
struct PlayerInfoResponse
{
public:
	struct FText                                                 GamerTag;                                          // 0x0(0x38)
	struct FText                                                 Title;                                             // 0x38(0x38)
	struct UserPirateId                                          UserPirateId;                                      // 0x70(0x20)
};


// Size 0x20
struct PlayerNamesResponseEvent
{
public:
	TArray<struct PlayerNameData>                                PlayerNameData;                                    // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x80
struct PlayerActiveInWorldMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	char                                                         PlayMode;                                          // 0x78(0x1)
	char                                                         PlayModeVariant;                                   // 0x79(0x1)
};


// Size 0x60
struct HullDamageParamSet
{
public:
	struct ShipLeakParams                                        LeakParams;                                        // 0x0(0x1c)
	float                                                        LeakAmount;                                        // 0x1c(0x4)
	struct Transform                                             InternalHoleDecalOffset;                           // 0x20(0x30)
	char                                                         Deck;                                              // 0x50(0x1)
};


// Size 0x110
struct IslandEventTooltipData
{
public:
	struct VoyageDisplayInformation                              DisplayInfo;                                       // 0x0(0x100)
	struct Guid                                                  EventID;                                           // 0x100(0x10)
};


// Size 0x38
struct GuildProgressModel
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
	uint32                                                       Level;                                             // 0x10(0x4)
	uint32                                                       DistinctionLevel;                                  // 0x14(0x4)
	uint32                                                       Xp;                                                // 0x18(0x4)
	struct GuildLevelDefinition                                  NextCompanyLevel;                                  // 0x1c(0x8)
	struct FString                                               Sig;                                               // 0x28(0x10)
};


// Size 0x10
struct ReplicatedRewindBuffer
{
public:
	TArray<struct ReplicatedRewindBufferEntry>                   Entries;                                           // 0x0(0x10)
};


// Size 0x10
struct SpawnRequests
{
public:
	TArray<struct SalvageSpawnCompRequest>                       Requests;                                          // 0x0(0x10)
};


// Size 0xcd0
struct MainTutorialSequence
{
public:
	struct TutorialStepPlayIntroAnimatic                         PlayIntro;                                         // 0xb8(0xa8)
	struct TutorialStepEatBanana                                 EatBanana;                                         // 0x160(0x190)
	struct TutorialStepUseMap                                    UseMap;                                            // 0x2f0(0x1a0)
	struct TutorialStepBuyVoyage                                 BuyVoyage;                                         // 0x490(0x138)
	struct TutorialStepCycleWeapons                              CycleWeapons;                                      // 0x5c8(0x80)
	struct TutorialStepSellTreasure                              SellTreasure;                                      // 0x648(0x2f8)
	struct TutorialStepBuyClothes                                BuyClothes;                                        // 0x940(0x98)
	struct TutorialStepReturnToStranger                          ReturnToStranger;                                  // 0x9d8(0x190)
	struct TutorialStepBeginTallTale                             BeginTallTale;                                     // 0xb68(0xd8)
	struct TutorialStepEndOfTutorial                             EndOfTutorial;                                     // 0xc40(0x80)
};


// Size 0x88
struct NoteDeletedMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Guid                                                  NoteId;                                            // 0x78(0x10)
};


// Size 0x38
struct ReloadDoubleBarrelledWeaponOnServerRpc
{
public:
	class DoubleBarrelledProjectileWeapon*                       Weapon;                                            // 0x18(0x8)
	struct ReloadRequest                                         ReloadRequest;                                     // 0x20(0x18)
};


// Size 0x30
struct GuildMemberRoleRequestModel
{
public:
	struct GuildUserPirateModel                                  IdOfUserPirateToSet;                               // 0x0(0x20)
	struct FString                                               Role;                                              // 0x20(0x10)
};


// Size 0x208
struct PlayerMusicController
{
public:
	class PlayerMusicControllerParams*                           PlayerMusicParams;                                 // 0x0(0x8)
	class Actor*                                                 LocalPlayerActor;                                  // 0x38(0x8)
	class PlayerOceanAudioComponent*                             PlayerOceanAudioComponent;                         // 0x40(0x8)
	class PlayerAtmosphericsAudioComponent*                      AtmosphericsAudioComponent;                        // 0x48(0x8)
	class AthenaPlayerCharacter*                                 AthenaPlayerCharacter;                             // 0x50(0x8)
	class AthenaWorldSettings*                                   AthenaWorldSettings;                               // 0x58(0x8)
	struct TimeStampedShipDiveMusicState                         TimeStampedShipDiveMusicState;                     // 0x1b8(0x18)
	TArray<struct AudioStingRelevantShips>                       RelevantAudioStingShips;                           // 0x1e0(0x10)
	TArray<struct AudioStingShipsSpotted>                        AudioStingShipsSpottedRecently;                    // 0x1f0(0x10)
};


// Size 0x20
struct ActionVisualsOverride
{
public:
	class UClass*                                                InputID;                                           // 0x0(0x8)
	struct WieldableItemActionVisuals                            ActionVisuals;                                     // 0x8(0x18)
};


// Size 0x38
struct CompanyCargoRunHandInStats
{
public:
	class UClass*                                                CompanyId;                                         // 0x0(0x8)
	TArray<struct PlayerStat>                                    StatsToFireOnHandIn;                               // 0x8(0x10)
	TArray<struct PlayerStat>                                    StatsToFireOnDamagedHandIn;                        // 0x18(0x10)
	TArray<struct PlayerStat>                                    StatsToFirePerHealthTierOnHandIn;                  // 0x28(0x10)
};


// Size 0x40
struct ChargeWeaponOnServerRpc
{
public:
	class DoubleBarrelledProjectileWeapon*                       Weapon;                                            // 0x18(0x8)
	struct ChargeRequest                                         ChargeRequest;                                     // 0x20(0x20)
};


// Size 0xa0
struct SittingActionStateParams
{
public:
	char                                                         ControllableObjectType;                            // 0x18(0x1)
	class UClass*                                                SeatAnimationId;                                   // 0x20(0x8)
	struct LookAtOffsetParams                                    LookAtOffsetParams;                                // 0x28(0x1c)
	bool                                                         ShouldHideFirstPersonMesh;                         // 0x44(0x1)
	class WwiseEvent*                                            OnSitSfx;                                          // 0x48(0x8)
	class WwiseEvent*                                            OnStandSfx;                                        // 0x50(0x8)
	class WwiseObjectPoolWrapper*                                SeatPool;                                          // 0x58(0x8)
	bool                                                         AllowInteractWithOtherObjectsWhileSitting;         // 0x60(0x1)
	TArray<class Class*>                                         AllowedInteractableTypes;                          // 0x68(0x10)
	TArray<class Class*>                                         AllowedInteractionNotificationInputIds;            // 0x78(0x10)
	char                                                         DockingMode;                                       // 0x88(0x1)
	bool                                                         DisableDisengageInput;                             // 0x89(0x1)
	bool                                                         ThirdPersonCameraEnabled;                          // 0x8a(0x1)
	class AthenaSpringArmComponentParams*                        ThirdPersonCameraParams;                           // 0x90(0x8)
	bool                                                         CameraRollEnabled;                                 // 0x98(0x1)
	bool                                                         OffsetCameraUsingSeatRotation;                     // 0x99(0x1)
};


// Size 0x98
struct EmblemUnlockedMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Guid                                                  EmblemId;                                          // 0x78(0x10)
	struct FString                                               Sig;                                               // 0x88(0x10)
};


// Size 0x218
struct PersistentUserGameSettings
{
public:
	bool                                                         InvertYAxisGamepad;                                // 0x0(0x1)
	bool                                                         InvertYAxisMouse;                                  // 0x1(0x1)
	bool                                                         InvertXAxisGamepad;                                // 0x2(0x1)
	bool                                                         InvertXAxisMouse;                                  // 0x3(0x1)
	bool                                                         UseVirtualKeyboard;                                // 0x4(0x1)
	bool                                                         UsePlatformForUnattenuatedChat;                    // 0x5(0x1)
	bool                                                         UsePushToTalk;                                     // 0x6(0x1)
	bool                                                         UseProximityChatDirection;                         // 0x7(0x1)
	float                                                        ForceFeedbackIntensity;                            // 0x8(0x4)
	float                                                        FieldOfView;                                       // 0xc(0x4)
	float                                                        MouseSensitivity;                                  // 0x10(0x4)
	float                                                        MasterVolume;                                      // 0x14(0x4)
	float                                                        SfxVolume;                                         // 0x18(0x4)
	float                                                        MusicVolume;                                       // 0x1c(0x4)
	float                                                        ShantyVolume;                                      // 0x20(0x4)
	float                                                        CrewChatVolume;                                    // 0x24(0x4)
	float                                                        NonCrewChatVolume;                                 // 0x28(0x4)
	float                                                        HitNotificationVolume;                             // 0x2c(0x4)
	bool                                                         ExtendedSeaRockAudioEnabled;                       // 0x30(0x1)
	int                                                          VSync;                                             // 0x34(0x4)
	int                                                          MaxFPS;                                            // 0x38(0x4)
	bool                                                         Fullscreen;                                        // 0x3c(0x1)
	int                                                          MaxVerticalResolution;                             // 0x40(0x4)
	int                                                          DefaultDetail;                                     // 0x44(0x4)
	int                                                          ShadowDetail;                                      // 0x48(0x4)
	int                                                          ModelDetail;                                       // 0x4c(0x4)
	int                                                          TextureDetail;                                     // 0x50(0x4)
	int                                                          WaterDetail;                                       // 0x54(0x4)
	int                                                          AnimationQuality;                                  // 0x58(0x4)
	int                                                          MMCThresholdScale;                                 // 0x5c(0x4)
	int                                                          ParticleEmitterQuality;                            // 0x60(0x4)
	int                                                          ParticleResolutionQuality;                         // 0x64(0x4)
	float                                                        ResolutionScaling;                                 // 0x68(0x4)
	int                                                          LightingDetail;                                    // 0x6c(0x4)
	int                                                          BackBufferCount;                                   // 0x70(0x4)
	float                                                        ControllerSensitivity;                             // 0x74(0x4)
	float                                                        ControllerDeadzone;                                // 0x78(0x4)
	float                                                        ControllerDeadzoneMenu;                            // 0x7c(0x4)
	int                                                          ControllerAutoRepeatMenu;                          // 0x80(0x4)
	float                                                        ControllerNonLinearity;                            // 0x84(0x4)
	float                                                        MouseSensitivity_Blunderbuss;                      // 0x88(0x4)
	float                                                        ControllerSensitivity_Blunderbuss;                 // 0x8c(0x4)
	float                                                        MouseSensitivity_Flintlock;                        // 0x90(0x4)
	float                                                        ControllerSensitivity_Flintlock;                   // 0x94(0x4)
	float                                                        MouseSensitivity_EyeOfReach;                       // 0x98(0x4)
	float                                                        ControllerSensitivity_EyeOfReach;                  // 0x9c(0x4)
	float                                                        MouseSensitivity_DoubleBarrelFlintlock;            // 0xa0(0x4)
	float                                                        ControllerSensitivity_DoubleBarrelFlintlock;       // 0xa4(0x4)
	float                                                        MouseSensitivity_ThrowingKnife;                    // 0xa8(0x4)
	float                                                        ControllerSensitivity_ThrowingKnife;               // 0xac(0x4)
	float                                                        MouseSensitivity_Spyglass;                         // 0xb0(0x4)
	float                                                        ControllerSensitivity_Spyglass;                    // 0xb4(0x4)
	float                                                        MouseSensitivity_TridentOfDarkTides;               // 0xb8(0x4)
	float                                                        ControllerSensitivity_TridentOfDarkTides;          // 0xbc(0x4)
	TArray<struct KeyBinding>                                    ActionBindings;                                    // 0xc0(0x10)
	TArray<struct KeyBinding>                                    AxisBindings;                                      // 0xd0(0x10)
	int                                                          ShowPerformanceCounters;                           // 0xe0(0x4)
	int                                                          NumberOfLogins;                                    // 0xe4(0x4)
	bool                                                         OptedIntoMarketing;                                // 0xe8(0x1)
	int                                                          KeyboardLayout;                                    // 0xec(0x4)
	int                                                          GameLanguage;                                      // 0xf0(0x4)
	bool                                                         ShowPlayerTalkingIndicator;                        // 0xf4(0x1)
	bool                                                         MuteCopyrightedAudio;                              // 0xf5(0x1)
	bool                                                         UseAltMapMarkTexture;                              // 0xf6(0x1)
	bool                                                         VariableRefreshRate;                               // 0xf7(0x1)
	float                                                        HighDynamicRangeCalib;                             // 0xf8(0x4)
	float                                                        HDRBrightness;                                     // 0xfc(0x4)
	float                                                        HDRContrast;                                       // 0x100(0x4)
	float                                                        Brightness;                                        // 0x104(0x4)
	float                                                        Contrast;                                          // 0x108(0x4)
	bool                                                         HDR;                                               // 0x10c(0x1)
	int                                                          CVDMode;                                           // 0x110(0x4)
	float                                                        CVDStrength;                                       // 0x114(0x4)
	float                                                        ColorSaturationScale;                              // 0x118(0x4)
	float                                                        NotificationScale;                                 // 0x11c(0x4)
	bool                                                         Joinable;                                          // 0x120(0x1)
	bool                                                         ShowOwnCrewNameplates;                             // 0x121(0x1)
	bool                                                         ShowOtherCrewNameplates;                           // 0x122(0x1)
	bool                                                         ShowFishNameplates;                                // 0x123(0x1)
	bool                                                         ShowOwnCrewStatusTags;                             // 0x124(0x1)
	bool                                                         ScrambleGamertags;                                 // 0x125(0x1)
	bool                                                         ScrambleShipName;                                  // 0x126(0x1)
	bool                                                         ScrambleGuildName;                                 // 0x127(0x1)
	bool                                                         ScrambleGamertagOnShipAnnouncementBanner;          // 0x128(0x1)
	bool                                                         ScrambleShipNameOnOtherClients;                    // 0x129(0x1)
	bool                                                         ScrambleGuildNameOnOtherClients;                   // 0x12a(0x1)
	bool                                                         ShowTallTalesOnMapTable;                           // 0x12b(0x1)
	bool                                                         AutoVoteOnProposedVoyage;                          // 0x12c(0x1)
	bool                                                         NotificationsInMenus;                              // 0x12d(0x1)
	bool                                                         ToggleRadialMenu;                                  // 0x12e(0x1)
	bool                                                         StickyRadialItems;                                 // 0x12f(0x1)
	bool                                                         EnableMovementDuringRadial;                        // 0x130(0x1)
	bool                                                         EnableLookWhenControllingObject;                   // 0x131(0x1)
	bool                                                         EnableAutoCentreLook;                              // 0x132(0x1)
	float                                                        AutoCentreLookTimeDelay;                           // 0x134(0x4)
	float                                                        AutoCentreLookSpeed;                               // 0x138(0x4)
	bool                                                         HoldActionsDontRequireHold;                        // 0x13c(0x1)
	bool                                                         HoldActionsWithHeldItemsDontRequireHold;           // 0x13d(0x1)
	int                                                          TTSOverride;                                       // 0x140(0x4)
	int                                                          TTSRate;                                           // 0x144(0x4)
	int                                                          STTOverride;                                       // 0x148(0x4)
	int                                                          LGRTMOverride;                                     // 0x14c(0x4)
	bool                                                         TranslateOtherPlayers;                             // 0x150(0x1)
	bool                                                         ScreenSpaceTooltips;                               // 0x151(0x1)
	bool                                                         NarrateToasts;                                     // 0x152(0x1)
	bool                                                         NarrateBanners;                                    // 0x153(0x1)
	float                                                        ToastHoldDurationMultiplier;                       // 0x154(0x4)
	bool                                                         NarrateOnHover;                                    // 0x158(0x1)
	bool                                                         NarrateChangeOnly;                                 // 0x159(0x1)
	bool                                                         NarrateEmotes;                                     // 0x15a(0x1)
	bool                                                         EscapeAsBackAccessibilityOption;                   // 0x15b(0x1)
	bool                                                         CrossInputPreference;                              // 0x15c(0x1)
	bool                                                         AdventureCrossInputPreference;                     // 0x15d(0x1)
	bool                                                         AllowCrossPlatformPlayOnJupiter;                   // 0x15e(0x1)
	bool                                                         EnableTalkingIndicatorOnJupiter;                   // 0x15f(0x1)
	int                                                          AdventureIslandBanners;                            // 0x160(0x4)
	int                                                          ArenaIslandBanners;                                // 0x164(0x4)
	bool                                                         OutpostLocationBanners;                            // 0x168(0x1)
	int                                                          UseSingleStick;                                    // 0x16c(0x4)
	int                                                          UseSingleStickSettingsApplied;                     // 0x170(0x4)
	int                                                          UseSingleStickCameraToggle;                        // 0x174(0x4)
	int                                                          SingleStickState;                                  // 0x178(0x4)
	bool                                                         DisableControllerOnPC;                             // 0x17c(0x1)
	bool                                                         RecenterMouseInMenus;                              // 0x17d(0x1)
	bool                                                         AutoFloatInWater;                                  // 0x17e(0x1)
	bool                                                         DisablePirateToast;                                // 0x17f(0x1)
	bool                                                         DisableShipToast;                                  // 0x180(0x1)
	int                                                          PushToTalkMode;                                    // 0x184(0x4)
	bool                                                         CircularUINavigation;                              // 0x188(0x1)
	bool                                                         Enable120Hz;                                       // 0x189(0x1)
	bool                                                         AlwaysSkipMapTableAnimation;                       // 0x18a(0x1)
	bool                                                         AudioMonoMix;                                      // 0x18b(0x1)
	bool                                                         AudioOutputHeadphones;                             // 0x18c(0x1)
	bool                                                         AudioOutputSpatialAudio;                           // 0x18d(0x1)
	bool                                                         DisableSeasonsNotifications;                       // 0x18e(0x1)
	bool                                                         AllowCrewToCustomiseCaptainedShip;                 // 0x18f(0x1)
	bool                                                         EnableTutorialAttractAnimation;                    // 0x190(0x1)
	bool                                                         DisableInviteNotifications;                        // 0x191(0x1)
	bool                                                         ControlledTextAlignment;                           // 0x192(0x1)
	bool                                                         ControlledLineHeight;                              // 0x193(0x1)
	int                                                          OtherCrewsMuteState;                               // 0x194(0x4)
	int                                                          NauticalNarrationEnabled;                          // 0x198(0x4)
	bool                                                         NarrateInteractableText;                           // 0x19c(0x1)
	int                                                          NarrateInteractableButtons;                        // 0x1a0(0x4)
	bool                                                         IgnoreDisabledInteractables;                       // 0x1a4(0x1)
	float                                                        NarrationInitialDelaySeconds;                      // 0x1a8(0x4)
	bool                                                         RepeatTooltipNarration;                            // 0x1ac(0x1)
	float                                                        NarrationRepeatingDelaySeconds;                    // 0x1b0(0x4)
	bool                                                         RenarrateAfterClosingMenus;                        // 0x1b4(0x1)
	bool                                                         FishNameplateNarrationEnabled;                     // 0x1b5(0x1)
	float                                                        ContinuousNarrationDelay;                          // 0x1b8(0x4)
	bool                                                         DisableFlashes;                                    // 0x1bc(0x1)
	bool                                                         DisableBlur;                                       // 0x1bd(0x1)
	bool                                                         DisableScreenShake;                                // 0x1be(0x1)
	bool                                                         DisableOnScreenEffects;                            // 0x1bf(0x1)
	bool                                                         EnchantedCompassProximityAnnouncerEnabled;         // 0x1c0(0x1)
	bool                                                         DisableRats;                                       // 0x1c1(0x1)
	bool                                                         EnableSqueakyWheel;                                // 0x1c2(0x1)
	float                                                        SqueakyWheelVolume;                                // 0x1c4(0x4)
	bool                                                         EnableAimAssistAudio;                              // 0x1c8(0x1)
	bool                                                         DisableShipSittingInteractions;                    // 0x1c9(0x1)
	bool                                                         DisableShipTrinketInteractions;                    // 0x1ca(0x1)
	bool                                                         EnableAimAssist;                                   // 0x1cb(0x1)
	bool                                                         EnableHipFireSlowdownAimAssist;                    // 0x1cc(0x1)
	bool                                                         EnableHipFireRotationalAimAssist;                  // 0x1cd(0x1)
	bool                                                         EnableADSSlowdownAimAssist;                        // 0x1ce(0x1)
	bool                                                         EnableADSRotationalAimAssist;                      // 0x1cf(0x1)
	bool                                                         EnableAllianceAimAssist;                           // 0x1d0(0x1)
	float                                                        ADSSlowdownStrengthAimAssist;                      // 0x1d4(0x4)
	float                                                        ADSRotationStrengthAimAssist;                      // 0x1d8(0x4)
	float                                                        HipFireSlowdownStrengthAimAssist;                  // 0x1dc(0x4)
	float                                                        HipFireRotationStrengthAimAssist;                  // 0x1e0(0x4)
	bool                                                         ShouldStabliseZiplines;                            // 0x1e4(0x1)
	bool                                                         DisableGuildInvites;                               // 0x1e5(0x1)
	bool                                                         DisableGuildActionNotifications;                   // 0x1e6(0x1)
	bool                                                         HighContrastKillNotifications;                     // 0x1e7(0x1)
	bool                                                         ServerAuthoritativeHitNotifications;               // 0x1e8(0x1)
	int                                                          D3DVersion;                                        // 0x1ec(0x4)
	bool                                                         ParallelRendering;                                 // 0x1f0(0x1)
	bool                                                         UIMenusSwapBackAndSelectButtons;                   // 0x1f1(0x1)
	bool                                                         UniversalOverlayEnabled;                           // 0x1f2(0x1)
	int                                                          UniversalOverlayBackgroundColor;                   // 0x1f4(0x4)
	int                                                          UniversalOverlayTextColor;                         // 0x1f8(0x4)
	int                                                          UniversalOverlayOpacityPercent;                    // 0x1fc(0x4)
	int                                                          UniversalOverlayScalePercent;                      // 0x200(0x4)
	int                                                          UniversalOverlayAnchorXPercent;                    // 0x204(0x4)
	int                                                          UniversalOverlayAnchorYPercent;                    // 0x208(0x4)
	int                                                          UniversalOverlayFontSize;                          // 0x20c(0x4)
	int                                                          UniversalOverlayFontStyle;                         // 0x210(0x4)
};


// Size 0x30
struct HitchDataTelemetryFragment
{
public:
	uint64                                                       NumLowSeverityHitches;                             // 0x0(0x8)
	uint64                                                       NumMediumSeverityHitches;                          // 0x8(0x8)
	uint64                                                       NumHighSeverityHitches;                            // 0x10(0x8)
	uint64                                                       NumHighestSeverityHitches;                         // 0x18(0x8)
	TArray<struct SyncLoad>                                      SyncLoads;                                         // 0x20(0x10)
};


// Size 0xd0
struct GenericLightTemplate
{
public:
	char                                                         LightType;                                         // 0x0(0x1)
	struct BaseLightData                                         BaseLightData;                                     // 0x8(0x80)
	struct PointLightData                                        PointLightData;                                    // 0x88(0x3c)
	struct SpotLightData                                         SpotLightData;                                     // 0xc4(0xc)
};


// Size 0x20
struct ShipPartModel
{
public:
	struct FString                                               ShipId;                                            // 0x0(0x10)
	TArray<struct ShipPartCustomizationModel>                    ShipPartCustomisations;                            // 0x10(0x10)
};


// Size 0x40
struct PlayerLeftGuildActivityMessageModel
{
public:
	struct UserPirateId                                          LeavingPlayer;                                     // 0x0(0x20)
	struct UserPirateId                                          Initiator;                                         // 0x20(0x20)
};


// Size 0x18
struct GetVolcanoesGameServerResponseModel
{
public:
	TArray<struct VolcanoActorStateData>                         Data;                                              // 0x8(0x10)
};


// Size 0x34
struct PinnedCaptainsLogAccolade
{
public:
	struct Guid                                                  AlignmentId;                                       // 0x0(0x10)
	struct AccoladeProgressId                                    ProgressId;                                        // 0x10(0x24)
};


// Size 0x80
struct PirateGoldReward
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	uint32                                                       Amount;                                            // 0x78(0x4)
};


// Size 0x78
struct PlayerDeemedInactiveTelemetryEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
};


// Size 0x148
struct StatBatchMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct PirateIdentity                                        Captain;                                           // 0x78(0x78)
	char                                                         PlayMode;                                          // 0xf0(0x1)
	char                                                         PlayModeVariant;                                   // 0xf1(0x1)
	map                                                          StatIds;                                           // 0xf8(0x50)
};


// Size 0x58
struct CanvasWorldMapShipLocation
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class UClass*                                                ShipSize;                                          // 0x10(0x8)
	struct Vector2D                                              Location;                                          // 0x18(0x8)
	float                                                        Rotation;                                          // 0x20(0x4)
	struct CanvasLerpData                                        LerpData;                                          // 0x24(0x10)
	bool                                                         IsInAlliance;                                      // 0x34(0x1)
	bool                                                         IsInFaction;                                       // 0x35(0x1)
	bool                                                         IsFactionMaxRank;                                  // 0x36(0x1)
	bool                                                         IsInvadingShip;                                    // 0x37(0x1)
	struct FName                                                 CrewFactionName;                                   // 0x38(0x8)
	char                                                         ReapersMarkLevel;                                  // 0x40(0x1)
	char                                                         EmissaryLevel;                                     // 0x41(0x1)
	bool                                                         IsMaxGradedGuildShip;                              // 0x42(0x1)
	class Texture*                                               CrewLiveryOverlayIcon;                             // 0x48(0x8)
	bool                                                         IsReapersTrackedShip;                              // 0x50(0x1)
	bool                                                         IsInTunnel;                                        // 0x51(0x1)
	bool                                                         IsReapersTributeShip;                              // 0x52(0x1)
};


// Size 0x18
struct EmissaryRewardMultiplierModel
{
public:
	struct FName                                                 EmissaryName;                                      // 0x0(0x8)
	TArray<struct EmissaryLevelMultiplierModel>                  Multipliers;                                       // 0x8(0x10)
};


// Size 0x10
struct ClothingChestClothingEntitlementsUpdatedEvent
{
public:
	TArray<struct ChestEntitlementViewModel>                     Entitlements;                                      // 0x0(0x10)
};


// Size 0xd0
struct UseBalanceableWalkwayActionStateParams
{
public:
	float                                                        BaseMovementSpeed;                                 // 0x10(0x4)
	float                                                        TiltSpeed;                                         // 0x14(0x4)
	float                                                        IncreasedTiltSpeed;                                // 0x18(0x4)
	float                                                        IncreasedMovementSpeed;                            // 0x1c(0x4)
	float                                                        JumpSpeedMultiplierWhenSliding;                    // 0x20(0x4)
	float                                                        MaxJumpSpeed;                                      // 0x24(0x4)
	float                                                        BalanceMaxTiltAngle;                               // 0x28(0x4)
	float                                                        AdditiveFOV;                                       // 0x2c(0x4)
	float                                                        SmoothingFactor;                                   // 0x30(0x4)
	float                                                        ControllerTiltDeadzone;                            // 0x34(0x4)
	float                                                        ControllerMoveDeadzone;                            // 0x38(0x4)
	class CurveFloat*                                            MovementSpeedScalarOverTiltAngle;                  // 0x40(0x8)
	class CurveFloat*                                            MovementSpeedScalarOverSlopeAngle;                 // 0x48(0x8)
	class CurveFloat*                                            MovementSpeedScalarOverSlopeTime;                  // 0x50(0x8)
	class CurveFloat*                                            TiltSpeedModifierOverTime;                         // 0x58(0x8)
	class CurveFloat*                                            BalanceForceEfficiencyCurve;                       // 0x60(0x8)
	class CurveFloat*                                            CounterBalanceForceCurve;                          // 0x68(0x8)
	class CurveFloat*                                            PlayerBalanceForceCurve;                           // 0x70(0x8)
	struct Vector2D                                              BalanceForceEfficiencyCurve_DurationTimeRange;     // 0x78(0x8)
	struct Vector2D                                              CounterbalanceRedecisionTimeRange;                 // 0x80(0x8)
	float                                                        CounterbalanceForce;                               // 0x88(0x4)
	bool                                                         ShouldUseTiltPredictor;                            // 0x8c(0x1)
	struct IntentPredictorParams                                 TiltPredictorParams;                               // 0x90(0x18)
	struct IntentPredictorParams                                 WalkPredictorParams;                               // 0xa8(0x18)
	struct PlayerStat                                            TransferBootyStat;                                 // 0xc0(0x4)
	struct PlayerStat                                            TransferToEnemyShipStat;                           // 0xc4(0x4)
	struct PlayerStat                                            SlideToPlayerShipStat;                             // 0xc8(0x4)
};


// Size 0xc
struct ClamberBeginEvent
{
public:
	struct LadderBlendParams                                     ClamberBlendParams;                                // 0x0(0xc)
};


// Size 0x30
struct InventoryInteractionUpdateEvent
{
public:
	TArray<struct IInventoryItem>                                Current;                                           // 0x0(0x10)
	TArray<struct IInventoryItem>                                Available;                                         // 0x10(0x10)
	TArray<struct IInventoryItemDescription>                     Descriptions;                                      // 0x20(0x10)
};


// Size 0x8c
struct MermaidServiceParams
{
public:
	float                                                        LocallyActiveMermaidCheckInterval;                 // 0x0(0x4)
	float                                                        PlayerAbandonedCheckInterval;                      // 0x4(0x4)
	float                                                        MinDestroyDistancePlayerToMermaidIfPlayerNearEnemyShip; // 0x8(0x4)
	float                                                        MinDestroyDistancePlayerToMermaidIfPlayerNearIsland; // 0xc(0x4)
	float                                                        MinDestroyDistancePlayerToMermaidIfPlayerNotNearIsland; // 0x10(0x4)
	float                                                        MaxDistFromCoastForPlayerToCountAsNearIsland;      // 0x14(0x4)
	float                                                        MaxDistFromCoastForShipToCountAsNearIsland;        // 0x18(0x4)
	float                                                        MaxInvadingPlayerVelocityForPlayerToQualifyAsAbandoned; // 0x1c(0x4)
	float                                                        MinPlayerToShipDistForPlayerToQualifyAsAbandoned;  // 0x20(0x4)
	float                                                        MinPlayerToShipDistForPlayerToBeClearedOfAbandonedStatus; // 0x24(0x4)
	float                                                        MinPlayerToEnemyShipDistForPlayerToQualifyForStealthSpawns; // 0x28(0x4)
	float                                                        MinPlayerToWatercraftDistForPlayerToQualifyAsAbandoned; // 0x2c(0x4)
	float                                                        MinDistFromAnyMermaidForPlayerToBeAbandonedIfPlayerNotNearIsland; // 0x30(0x4)
	float                                                        MinDistFromAnyMermaidForPlayerToBeAbandonedIfPlayerNearIsland; // 0x34(0x4)
	int                                                          MaxNumberOfConcurrentMermaids;                     // 0x38(0x4)
	float                                                        MinLifeTimeOfMermaidBeforeCanBeCulledInPopulationCheck; // 0x3c(0x4)
	float                                                        SpawnDistAroundSaviourMermaid;                     // 0x40(0x4)
	struct MermaidServiceMermaidSpawnParams                      SpawnParams;                                       // 0x44(0x48)
};


// Size 0x20
struct FlameSpecificDataEntry
{
public:
	char                                                         FlameType;                                         // 0x0(0x1)
	struct StringAssetReference                                  TextureAsset;                                      // 0x8(0x10)
	struct PlayerStat                                            StatToFireWhenKilled;                              // 0x18(0x4)
};


// Size 0x20
struct ShipNamesResponseEvent
{
public:
	TArray<struct ShipNameData>                                  ShipNameData;                                      // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x98
struct TrophyUnlockedMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct FString                                               TrophyObjectId;                                    // 0x78(0x10)
	struct FString                                               PsnId;                                             // 0x88(0x10)
};


// Size 0x128
struct PremiumCatalogOfferData
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	TArray<String>                                               TileImages;                                        // 0x8(0x10)
	int                                                          TileSize;                                          // 0x18(0x4)
	struct FText                                                 PageTitle;                                         // 0x20(0x38)
	struct FString                                               PageIcon;                                          // 0x58(0x10)
	TArray<struct PremiumCatalogOfferGroup>                      Groups;                                            // 0x68(0x10)
	struct FText                                                 LockedReason;                                      // 0x78(0x38)
	bool                                                         TimeLimited;                                       // 0xb0(0x1)
	bool                                                         TimeLimitedPrice;                                  // 0xb1(0x1)
	int                                                          PremiumCurrencyRealMoneyPrice;                     // 0xb4(0x4)
	bool                                                         Purchasable;                                       // 0xb8(0x1)
	bool                                                         SuperPremium;                                      // 0xb9(0x1)
	struct FText                                                 Saving;                                            // 0xc0(0x38)
	struct FString                                               Accent;                                            // 0xf8(0x10)
	struct FString                                               TopBanner;                                         // 0x108(0x10)
	struct FString                                               BottomBanner;                                      // 0x118(0x10)
};


// Size 0x48
struct QuestTypeParams
{
public:
	class WeightedTreasureChestDescAsset*                        ReferencedRewards;                                 // 0x8(0x8)
	TArray<struct WeightedTreasureChestDesc>                     Rewards;                                           // 0x10(0x10)
	bool                                                         UseRewardAssetList;                                // 0x20(0x1)
	class WeightedItemDescSpawnDataAsset*                        RewardsAsset;                                      // 0x28(0x8)
	TArray<class WeightedItemDescSpawnDataAsset*>                RewardsAssets;                                     // 0x30(0x10)
	class UClass*                                                OverrideTreasureMapItemDesc;                       // 0x40(0x8)
};


// Size 0x18
struct BeaconLitWithFlameOfFateStatsToFire
{
public:
	char                                                         FlameOfFateType;                                   // 0x0(0x1)
	TArray<struct PlayerStat>                                    StatsToFire;                                       // 0x8(0x10)
};


// Size 0x10
struct MechanismCheckpoint
{
public:
	struct MechanismTransformAnimationCurve                      AnimationCurve;                                    // 0x0(0x8)
	float                                                        StartDelay;                                        // 0x8(0x4)
	char                                                         ClosingState;                                      // 0xc(0x1)
};


// Size 0x38
struct EventPlayerCharacterDeath
{
public:
	class Character*                                             PirateKilled;                                      // 0x0(0x8)
	struct DamageInstance                                        FinalBlowInformation;                              // 0x8(0x30)
};


// Size 0x80
struct WalletTransactionFinishedEvent
{
public:
	bool                                                         WasSuccessful;                                     // 0x0(0x1)
	struct PirateIdentity                                        PirateIdentity;                                    // 0x8(0x78)
};


// Size 0x28
struct GameEventWeightedList
{
public:
	struct FName                                                 EditorDisplayName;                                 // 0x0(0x8)
	struct FName                                                 ServerConfigName;                                  // 0x8(0x8)
	TArray<struct GameEventCount>                                Events;                                            // 0x10(0x10)
	float                                                        Weight;                                            // 0x20(0x4)
};


// Size 0x118
struct GetFilteredCatalogRequestModel
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	map                                                          Balances;                                          // 0x78(0x50)
	map                                                          CompanyLevels;                                     // 0xc8(0x50)
};


// Size 0xb0
struct CampaignGoalProgressEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	int64                                                        PreviousProgress;                                  // 0x78(0x8)
	int64                                                        CurrentProgress;                                   // 0x80(0x8)
	int64                                                        CompletionThreshold;                               // 0x88(0x8)
	struct Guid                                                  GoalId;                                            // 0x90(0x10)
	struct DateTime                                              ActiveFrom;                                        // 0xa0(0x8)
	struct DateTime                                              ActiveUntil;                                       // 0xa8(0x8)
};


// Size 0xb0
struct SeasonGoalCompletionMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  SeasonId;                                          // 0x78(0x10)
	struct Guid                                                  GoalId;                                            // 0x88(0x10)
	char                                                         GoalType;                                          // 0x98(0x1)
	struct Guid                                                  GoalGroupId;                                       // 0x9c(0x10)
};


// Size 0x80
struct TutorialStep
{
public:
	struct TutorialStepDependencies                              Dependencies;                                      // 0x20(0x58)
};


// Size 0x90
struct TutorialSequence
{
public:
	int                                                          CurrentStep;                                       // 0x8(0x4)
	struct TutorialStepDependencies                              Dependencies;                                      // 0x20(0x58)
};


// Size 0x38
struct TreasureData
{
public:
	struct TreasureLocationData                                  TreasureLocation;                                  // 0x0(0x20)
	class UClass*                                                TreasureChestDesc;                                 // 0x20(0x8)
	class ItemSpawnData*                                         TreasureSpawnData;                                 // 0x28(0x8)
	float                                                        DigRadius;                                         // 0x30(0x4)
};


// Size 0xa0
struct WeightedPetAnimationSelector
{
public:
	TArray<struct PetAnimationWeighting>                         Weightings;                                        // 0x0(0x10)
};


// Size 0x38
struct VoyageAndTaleAndCaptainsVoyageProposalsUpdatedEvent
{
public:
	TArray<struct VoyageProposalDescViewModel>                   VoyageProposalEntitlements;                        // 0x0(0x10)
	TArray<struct VoyageProposalDescViewModel>                   TaleProposalEntitlements;                          // 0x10(0x10)
	TArray<struct VoyageProposalDescViewModel>                   CaptainsVoyageProposalEntitlements;                // 0x20(0x10)
	bool                                                         VoyageIsActive;                                    // 0x30(0x1)
	bool                                                         TaleIsActive;                                      // 0x31(0x1)
	bool                                                         CaptainsVoyageIsActive;                            // 0x32(0x1)
};


// Size 0x50
struct StatEventDefinition
{
public:
	struct PlayerStat                                            StatId;                                            // 0x0(0x4)
	char                                                         EventType;                                         // 0x4(0x1)
	struct FText                                                 LogEntryText;                                      // 0x8(0x38)
	TArray<struct PlayerStat>                                    SourceStatsToOverwrite;                            // 0x40(0x10)
};


// Size 0xd0
struct AdditionalCaptainTarget
{
public:
	assetclass                                                   PawnClass;                                         // 0x0(0x20)
	class UClass*                                                ClassId;                                           // 0x20(0x8)
	class AthenaAIFormDataAsset*                                 Form;                                              // 0x28(0x8)
	class AthenaAIControllerParamsDataAsset*                     Skillset;                                          // 0x30(0x8)
	assetclass                                                   ItemDropComponentClass;                            // 0x38(0x20)
	class LoadoutAsset*                                          Loadout;                                           // 0x58(0x8)
	class AthenaAIAmmoDataAsset*                                 AmmoOverride;                                      // 0x60(0x8)
	struct FText                                                 NameplateOverride;                                 // 0x68(0x38)
	TArray<struct PlayerStat>                                    CrewStatsToFireWhenDefeated;                       // 0xa0(0x10)
	TArray<struct PlayerStat>                                    AllianceStatsToFireWhenDefeated;                   // 0xb0(0x10)
	bool                                                         IsUsingDialogue;                                   // 0xc0(0x1)
	class UClass*                                                OverrideAICombatDialogue;                          // 0xc8(0x8)
};


// Size 0x70
struct ContestMapLayoutScoreInfo
{
public:
	struct TreasureMapWidgetTexture                              ScoreInfoIcon;                                     // 0x0(0x30)
	struct TreasureMapWidgetText                                 ScoreInfoText;                                     // 0x30(0x3c)
	char                                                         ScoreReason;                                       // 0x6c(0x1)
};


// Size 0xf8
struct PirateProfile
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct PirateDescription                                     Description;                                       // 0x78(0x80)
};


// Size 0x48
struct EventHealthChanged
{
public:
	struct HealthChange                                          ChangePayload;                                     // 0x0(0x40)
	bool                                                         IsLocalPrediction;                                 // 0x40(0x1)
	bool                                                         IsRepetitionOfPrediction;                          // 0x41(0x1)
};


// Size 0x30
struct MeshScoring
{
public:
	struct FName                                                 MeshName;                                          // 0x0(0x8)
	TArray<struct IndividualMeshScoring>                         RegisteredComponents;                              // 0x8(0x10)
};


// Size 0x68
struct AthenaAnimationLadderAnimData
{
public:
	class AnimSequence*                                          Climb;                                             // 0x0(0x8)
	class AnimSequence*                                          Slide;                                             // 0x8(0x8)
	class BlendSpace1D*                                          SlideStop;                                         // 0x10(0x8)
	struct AthenaAnimationLadderTransitionsAnimData              Mast;                                              // 0x18(0x28)
	struct AthenaAnimationLadderTransitionsAnimData              ShipSide;                                          // 0x40(0x28)
};


// Size 0x370
struct GhostShipCoordinator
{
public:
	TArray<struct GhostPawnEntry>                                GhostPawns;                                        // 0x0(0x10)
	TArray<struct IndefiniteDoorLockEntry>                       IndefiniteDoorLocks;                               // 0x10(0x10)
	class Object*                                                Parent;                                            // 0x20(0x8)
	class GhostShipPlayerSpawnLocation*                          SpawnLocation;                                     // 0x40(0x8)
	class GhostShipDoor*                                         GhostShipDoor;                                     // 0x48(0x8)
};


// Size 0x10
struct ShipHullRammingSpurDamageEntry
{
public:
	TArray<struct ShipDamageEntry>                               DamageAppliedToSelf;                               // 0x0(0x10)
};


// Size 0x40
struct PlayerModerationReportSubmitRequest
{
public:
	struct FString                                               ReportingPlayerGamerTag;                           // 0x0(0x10)
	struct FString                                               ReportingPlayerXUID;                               // 0x10(0x10)
	TArray<struct PlayerModerationReportablePlayerDetails>       ReportedPlayers;                                   // 0x20(0x10)
	TArray<String>                                               Reasons;                                           // 0x30(0x10)
};


// Size 0x10
struct ArmoryItemEntitlementsUpdatedEvent
{
public:
	TArray<struct ChestEntitlementViewModel>                     ItemEntitlements;                                  // 0x0(0x10)
};


// Size 0x48
struct AthenaAnimationWeaponData
{
public:
	TArray<struct AthenaAnimationObjectComplexOneShot>           ComboAttacks;                                      // 0x0(0x10)
	TArray<struct AthenaAnimationObjectComplexOneShot>           StaticComboAttacks;                                // 0x10(0x10)
	struct AthenaAnimationObjectComplexOneShot                   HeavyAttack;                                       // 0x20(0x28)
};


// Size 0x10
struct UpdateWalletBalanceHUDEvent
{
public:
	TArray<struct HUDWalletBalance>                              Balances;                                          // 0x0(0x10)
};


// Size 0x18
struct AggressiveGhostShipMineFormationOptions
{
public:
	int                                                          NumMinesInFormation;                               // 0x0(0x4)
	TArray<struct AggressiveGhostShipMineFormation>              Formations;                                        // 0x8(0x10)
};


// Size 0x180
struct ShipIdentityOwnership
{
public:
	struct Guid                                                  OwningCrewID;                                      // 0x0(0x10)
	struct ShipLiveryCatalogueEntry                              Identity;                                          // 0x10(0x170)
};


// Size 0x88
struct GuildOverviewForInvite
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	int                                                          NumberOfMembers;                                   // 0x10(0x4)
	int                                                          NumberOfShips;                                     // 0x14(0x4)
	struct GuildBrandingModel                                    GuildBranding;                                     // 0x18(0x50)
	struct GuildUserPirateModel                                  Owner;                                             // 0x68(0x20)
};


// Size 0x50
struct ItemPreviewDataReadyEvent
{
public:
	class ItemDesc*                                              ItemDesc;                                          // 0x0(0x8)
	class SkeletalMesh*                                          SkeletalMesh;                                      // 0x8(0x8)
	class SkeletalMeshComponent*                                 SkeletalMeshComponent;                             // 0x10(0x8)
	class AnimationAsset*                                        AnimationAsset;                                    // 0x18(0x8)
	class StaticMesh*                                            StaticMesh;                                        // 0x20(0x8)
	class StaticMeshComponent*                                   StaticMeshComponent;                               // 0x28(0x8)
	struct ItemPreviewView                                       ItemView;                                          // 0x30(0x18)
	bool                                                         Valid;                                             // 0x48(0x1)
	float                                                        PreviewTickInitialTime;                            // 0x4c(0x4)
};


// Size 0x1c
struct AimSensitivitySettingsEntry
{
public:
	char                                                         SettingCategory;                                   // 0x0(0x1)
	struct AimSensitivitySettingParams                           SettingParams_Mouse;                               // 0x4(0xc)
	struct AimSensitivitySettingParams                           SettingParams_Controller;                          // 0x10(0xc)
};


// Size 0x18
struct CutsceneGroup
{
public:
	float                                                        GroupCooldown;                                     // 0x0(0x4)
	TArray<struct CutscenePool>                                  Pools;                                             // 0x8(0x10)
};


// Size 0x10
struct ServerStateUpdateMessage
{
public:
	TArray<struct ServerUpdateCrewState>                         Crews;                                             // 0x0(0x10)
};


// Size 0x30
struct PlayerJoinedGuildEvent
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct UserPirateId                                          JoiningPlayer;                                     // 0x10(0x20)
};


// Size 0x10
struct ShovelSurfaceDigType
{
public:
	TArray<struct SurfaceDigType>                                SurfaceDigType;                                    // 0x0(0x10)
};


// Size 0x10
struct SpawnerTypeMappings
{
public:
	TArray<struct SpawnerTypeMapping>                            Mappings;                                          // 0x0(0x10)
};


// Size 0xc8
struct ShipAnnouncementSubmitAnnouncementRpc
{
public:
	class Controller*                                            Controller;                                        // 0x18(0x8)
	class Actor*                                                 ShipActor;                                         // 0x20(0x8)
	struct ShipAnnouncementCinematicEventServer                  ServerAnnouncementEvent;                           // 0x28(0xa0)
};


// Size 0x278
struct AthenaAnimationAsyncLoadedContinuousActionAnimations
{
public:
	assetobject                                                  MainInto;                                          // 0x8(0x20)
	assetobject                                                  MainIntoLocomotion;                                // 0x28(0x20)
	assetobject                                                  OneShotInto;                                       // 0x48(0x20)
	assetobject                                                  MainCycleIdle;                                     // 0x68(0x20)
	assetobject                                                  MainCycleLocomotion;                               // 0x88(0x20)
	bool                                                         UseMainJump;                                       // 0xa8(0x1)
	struct AthenaAnimationAsyncLoadedObjectJumpingAnimations     JumpingAnimations;                                 // 0xb0(0x80)
	assetobject                                                  MainOutOf;                                         // 0x130(0x20)
	assetobject                                                  MainOutOfLocomotion;                               // 0x150(0x20)
	assetobject                                                  MainInSwimming;                                    // 0x170(0x20)
	assetobject                                                  MainOneShotInSwimming;                             // 0x190(0x20)
	assetobject                                                  MainCycleSwimming;                                 // 0x1b0(0x20)
	assetobject                                                  MainOutSwimming;                                   // 0x1d0(0x20)
	struct AthenaAnimationAsyncLoadedLocomotionTurningAnimData   TurningLeftAlt;                                    // 0x1f0(0x20)
	struct AthenaAnimationAsyncLoadedLocomotionTurningAnimData   TurningRightAlt;                                   // 0x210(0x20)
	assetobject                                                  TurnOutAlt;                                        // 0x230(0x20)
	bool                                                         IgnoreOverlayHandAdditiveForAction;                // 0x250(0x1)
	assetobject                                                  CustomAdditiveForAction;                           // 0x258(0x20)
};


// Size 0x28
struct CreateGuildResponseModel
{
public:
	struct SignedGuildIdModel                                    SignedGuildId;                                     // 0x0(0x28)
};


// Size 0x50
struct PlayerReportPayload
{
public:
	struct PlayerModerationReportingPlayerDetails                ReportingPlayer;                                   // 0x0(0x20)
	TArray<struct PlayerModerationReportablePlayerDetails>       ReportedPlayers;                                   // 0x20(0x10)
	TArray<struct PlayerModerationReportReason>                  Reasons;                                           // 0x30(0x10)
	struct FString                                               ServerSessionId;                                   // 0x40(0x10)
};


// Size 0x30
struct VaultPuzzleSolutionEntry
{
public:
	struct VaultPuzzleSolutionPositions                          SolutionPositions;                                 // 0x0(0x10)
	struct StringAssetReference                                  MaterialSet;                                       // 0x10(0x10)
	struct StringAssetReference                                  TreasureVaultTableMaterialSet;                     // 0x20(0x10)
};


// Size 0x18
struct UnscrambledNamesReplicationEvent
{
public:
	TArray<struct UnscrambledIdentity>                           Entities;                                          // 0x0(0x10)
	char                                                         ScrambleType;                                      // 0x10(0x1)
};


// Size 0xa8
struct SleepingActionStateConstructionInfo
{
public:
	struct SleepingActionStateParams                             SleepingActionStateParams;                         // 0x58(0x50)
};


// Size 0xc0
struct PointLightTemplate
{
public:
	struct PointLightData                                        PointLightData;                                    // 0x80(0x3c)
};


// Size 0x10
struct PlayerBlockingBlockablePlayersResponse
{
public:
	TArray<struct BlockablePlayer>                               BlockablePlayers;                                  // 0x0(0x10)
};


// Size 0x28
struct ContestCrewRequirementData
{
public:
	int                                                          CrewCount;                                         // 0x0(0x4)
	struct FString                                               CrewCountServicesConfigRetrievalString;            // 0x8(0x10)
	TArray<struct ShipSizeRequirementData>                       OpenCrewRequirementData;                           // 0x18(0x10)
};


// Size 0xa8
struct RewardRequestForPirateMessage
{
public:
	struct PirateIdentity                                        Pirate;                                            // 0x0(0x78)
	struct Guid                                                  RequestID;                                         // 0x78(0x10)
	struct FName                                                 RewardId;                                          // 0x88(0x8)
	struct FName                                                 CompanyAffiliation;                                // 0x90(0x8)
	struct FName                                                 EmissaryAffiliation;                               // 0x98(0x8)
	int                                                          EmissaryLevel;                                     // 0xa0(0x4)
	bool                                                         NotifyPlayer;                                      // 0xa4(0x1)
	char                                                         PlayMode;                                          // 0xa5(0x1)
	char                                                         PlayModeVariant;                                   // 0xa6(0x1)
};


// Size 0x10
struct RecentPlayers
{
public:
	TArray<struct RecentPlayer>                                  Players;                                           // 0x0(0x10)
};


// Size 0x20
struct ShipPartsCataloguePartCustomisation
{
public:
	struct FString                                               FriendlyName;                                      // 0x0(0x10)
	TArray<struct PartCustomisation>                             Customisation;                                     // 0x10(0x10)
};


// Size 0x38
struct EventWieldableItemUseStopped
{
public:
	class Actor*                                                 Item;                                              // 0x0(0x8)
	class UClass*                                                InputID;                                           // 0x8(0x8)
	char                                                         ItemUseStoppedReason;                              // 0x10(0x1)
	struct WieldableItemActionVisuals                            Visuals;                                           // 0x18(0x18)
	char                                                         TrackId;                                           // 0x30(0x1)
	bool                                                         IgnoreItemAnimationStop;                           // 0x31(0x1)
};


// Size 0x10
struct ServiceStatusNotificationCollectionModel
{
public:
	TArray<struct ServiceStatusNotificationModel>                Notifications;                                     // 0x0(0x10)
};


// Size 0x5b0
struct VaultLock
{
public:
	int                                                          Tier;                                              // 0x0(0x4)
	struct LockData                                              VaultLock;                                         // 0x10(0x590)
	class StaticMeshMemoryConstraintComponent*                   MeshComponent;                                     // 0x5a0(0x8)
};


// Size 0x38
struct RewardRequestFailedMessage
{
public:
	TArray<struct PirateIdentity>                                PirateIdentities;                                  // 0x0(0x10)
	struct Guid                                                  RequestID;                                         // 0x10(0x10)
	struct Guid                                                  CrewId;                                            // 0x20(0x10)
	char                                                         FailureReason;                                     // 0x30(0x1)
};


// Size 0x30
struct MapTableCanvasDetails
{
public:
	TArray<struct CanvasWorldMapBackgroundItems>                 BackgroundDetails;                                 // 0x0(0x10)
	TArray<struct CanvasWorldMapForegroundItems>                 ForegroundDetails;                                 // 0x10(0x10)
	TArray<struct CanvasWorldMapSeaAreaItems>                    SeaDetails;                                        // 0x20(0x10)
};


// Size 0x18
struct CompanySpecificCargoRunStats
{
public:
	class UClass*                                                CompanyId;                                         // 0x0(0x8)
	TArray<struct PlayerStat>                                    StatsToFireUponPerfectOnTimeHandIn;                // 0x8(0x10)
};


// Size 0x30
struct CollectorsChestMetaWrapper
{
public:
	TArray<struct ItemSnapshot>                                  StoredItemInfoSnapshots;                           // 0x18(0x10)
};


// Size 0xa8
struct AthenaAnimationObjectActionContinuousStruct
{
public:
	class AnimSequence*                                          MainInto;                                          // 0x0(0x8)
	class BlendSpace*                                            MainIntoLocomotion;                                // 0x8(0x8)
	class AnimSequence*                                          OneShotInto;                                       // 0x10(0x8)
	class AnimSequence*                                          MainCycleIdle;                                     // 0x18(0x8)
	class BlendSpace*                                            MainCycleLocomotion;                               // 0x20(0x8)
	bool                                                         UseMainCycleJump;                                  // 0x28(0x1)
	struct AthenaAnimationObjectJumpingAnimations                MainCycleJump;                                     // 0x30(0x20)
	class AnimSequence*                                          MainOutOf;                                         // 0x50(0x8)
	class BlendSpace*                                            MainOutOfLocomotion;                               // 0x58(0x8)
	struct AthenaAnimationObjectActionContinuousSwimming         MainSwimming;                                      // 0x60(0x20)
	struct AthenaAnimationLocomotionTurningAnimData              TurningLeftAlt;                                    // 0x80(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningRightAlt;                                   // 0x88(0x8)
	class AnimSequence*                                          TurnOutAlt;                                        // 0x90(0x8)
	bool                                                         IgnoreOverlayHandAdditiveForAction;                // 0x98(0x1)
	class AnimSequence*                                          CustomAdditiveForAction;                           // 0xa0(0x8)
};


// Size 0x20
struct WorldMapWorldData
{
public:
	float                                                        MinX;                                              // 0x0(0x4)
	float                                                        MinY;                                              // 0x4(0x4)
	float                                                        MaxX;                                              // 0x8(0x4)
	float                                                        MaxY;                                              // 0xc(0x4)
	TArray<struct WorldMapIslandData>                            Islands;                                           // 0x10(0x10)
};


// Size 0x10
struct PetChestPetEntitlementsUpdatedEvent
{
public:
	TArray<struct ChestEntitlementViewModel>                     Entitlements;                                      // 0x0(0x10)
};


// Size 0x10
struct GetDisplayNameResponseModel
{
public:
	TArray<struct MatchModel>                                    Matches;                                           // 0x0(0x10)
};


// Size 0x50
struct AthenaAnimationObjectMeleeV2SpecialAttack
{
public:
	struct AthenaAnimationObjectComplexOneShot                   Attack;                                            // 0x0(0x28)
	struct AthenaAnimationObjectComplexOneShot                   SwimmingAttack;                                    // 0x28(0x28)
};


// Size 0xa0
struct LeaderboardScoreUpdateMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct FName                                                 EmissaryAffiliation;                               // 0x78(0x8)
	struct Guid                                                  GuildId;                                           // 0x80(0x10)
	int64                                                        Before;                                            // 0x90(0x8)
	int64                                                        After;                                             // 0x98(0x8)
};


// Size 0x70
struct AthenaAnimationUndoRepair
{
public:
	struct AthenaAnimationUndoRepairAnimData                     UndoRepairAnimData;                                // 0x0(0x10)
	bool                                                         UndoingRepair;                                     // 0x10(0x1)
	class AthenaAnimationUndoRepairDataAsset*                    UndoRepairDataAsset;                               // 0x18(0x8)
};


// Size 0x48
struct WorldMapShipLocation
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	class UClass*                                                ShipSize;                                          // 0x10(0x8)
	struct Vector2D                                              Location;                                          // 0x18(0x8)
	float                                                        Rotation;                                          // 0x20(0x4)
	char                                                         ReplicatedRotation;                                // 0x24(0x1)
	class Texture*                                               CrewLiveryOverlayIcon;                             // 0x28(0x8)
	struct WorldMapShipFlags                                     Flags;                                             // 0x30(0x14)
};


// Size 0x68
struct VaultTreasureRarity
{
public:
	class UClass*                                                VaultKeyDesc;                                      // 0x0(0x8)
	TArray<class Class*>                                         VaultKeyDescs;                                     // 0x8(0x10)
	struct ItemSpawnParams                                       SpawnParams;                                       // 0x18(0x48)
	class WeightedItemDescSpawnDataAsset*                        ReferencedSpawnDistributionAsset;                  // 0x60(0x8)
};


// Size 0x78
struct VoyageCompleteAnimationNetworkEvent
{
public:
	struct VoyageCompleteAnimationEvent                          Event;                                             // 0x18(0x60)
};


// Size 0x10
struct ShipCustomizationModelSentToLoadoutServicesTelemetryEvent
{
public:
	TArray<struct ShipPartCustomizationModel>                    ShipPartCustomizationModels;                       // 0x0(0x10)
};


// Size 0x20
struct GamertagsResponseEvent
{
public:
	TArray<struct UIGamertagResponseInformation>                 Gamertags;                                         // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0x30
struct ServerMigrationCompletedDevTelemetryEvent
{
public:
	struct Guid                                                  MigrationId;                                       // 0x0(0x10)
	TArray<struct ServerMigrationCompletedTelemetryActorData>    ActorDetails;                                      // 0x10(0x10)
	float                                                        TotalTime;                                         // 0x20(0x4)
	int                                                          NumClients;                                        // 0x24(0x4)
	int                                                          NumActorsMigrated;                                 // 0x28(0x4)
	int                                                          ActorSerialisationBytes;                           // 0x2c(0x4)
};


// Size 0x88
struct GuildData
{
public:
	struct FString                                               GuildId;                                           // 0x0(0x10)
	struct GuildBranding                                         GuildBranding;                                     // 0x10(0x50)
	int                                                          NumberOfMembers;                                   // 0x60(0x4)
	int                                                          NumberOfShips;                                     // 0x64(0x4)
	int                                                          LedgerPosition;                                    // 0x68(0x4)
	int                                                          DistinctionLevel;                                  // 0x6c(0x4)
	float                                                        Level;                                             // 0x70(0x4)
	struct FString                                               GuildOwnerUserId;                                  // 0x78(0x10)
};


// Size 0x20
struct LegendOfTheSunkenKingdomPrerequisite
{
public:
	struct StringAssetReference                                  Icon;                                              // 0x0(0x10)
	TArray<struct PlayerStat>                                    Stats;                                             // 0x10(0x10)
};


// Size 0x50
struct PlayerBuriedItemServiceDataAssetMapStorePopulationHaul
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	struct FName                                                 MapName;                                           // 0x4(0x8)
	class VoyageLocationOnlyNamedIslandListDataAsset*            NamedIslands;                                      // 0x10(0x8)
	struct WeightedProbabilityRange                              NumXs;                                             // 0x18(0x20)
	class WeightedItemDescSpawnDataAsset*                        WeightedItemDescSpawnDataAsset;                    // 0x38(0x8)
	TArray<struct PlayerBuriedItemServiceDataAssetMapStorePopulationHaulOverride> WeightedItemDescSpawnDataAssetOverrides;           // 0x40(0x10)
};


// Size 0x20
struct ShipNamesRequestEvent
{
public:
	TArray<struct ShipNameData>                                  ShipNameData;                                      // 0x0(0x10)
	struct FString                                               Id;                                                // 0x10(0x10)
};


// Size 0xd0
struct RewardRequestCrew
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct Guid                                                  ShipId;                                            // 0x10(0x10)
	TArray<struct PirateIdentity>                                Pirates;                                           // 0x20(0x10)
	struct FName                                                 EmissaryAffiliation;                               // 0x30(0x8)
	uint32                                                       EmissaryLevel;                                     // 0x38(0x4)
	struct FName                                                 FactionAffiliation;                                // 0x3c(0x8)
	uint32                                                       FactionStreakLevel;                                // 0x44(0x4)
	uint32                                                       OpponentStreakLevel;                               // 0x48(0x4)
	char                                                         FactionDefenderLootLevel;                          // 0x4c(0x1)
	struct PirateIdentity                                        Captain;                                           // 0x50(0x78)
	bool                                                         DontApplyShipProgression;                          // 0xc8(0x1)
};


// Size 0x18
struct RammableDamageSpeedEntry
{
public:
	class UClass*                                                SpeedBand;                                         // 0x0(0x8)
	TArray<struct RammableDamageEntry>                           DamageRammerTypes;                                 // 0x8(0x10)
};


// Size 0x40
struct InteractionDefinition
{
public:
	struct FString                                               Header;                                            // 0x0(0x10)
	struct InteractionTheme                                      Theme;                                             // 0x10(0x20)
	TArray<struct InteractionOption>                             Options;                                           // 0x30(0x10)
};


// Size 0x28
struct FeatureToggledBeckonTag
{
public:
	struct BeckonTag                                             BeckonTag;                                         // 0x0(0x10)
	struct FeatureFlag                                           Feature;                                           // 0x10(0xc)
	struct StoryFlag                                             Story;                                             // 0x1c(0x8)
};


// Size 0x18
struct ChainData
{
public:
	TArray<struct ChainLink>                                     Chain;                                             // 0x0(0x10)
	float                                                        LifeTime;                                          // 0x10(0x4)
};


// Size 0x50
struct AthenaAnimationLocomotionAnimData
{
public:
	class BlendSpace*                                            MainMovement;                                      // 0x0(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningLeft;                                       // 0x8(0x8)
	struct AthenaAnimationLocomotionTurningAnimData              TurningRight;                                      // 0x10(0x8)
	class AnimSequence*                                          MovementOutOf;                                     // 0x18(0x8)
	class AnimSequence*                                          TurnOut;                                           // 0x20(0x8)
	class BlendSpace*                                            RunStop;                                           // 0x28(0x8)
	struct AthenaAnimationLocomotionStairsAnimData               StairsLocomotion;                                  // 0x30(0x20)
};


// Size 0x40
struct HoldToUseInput
{
public:
	struct FName                                                 FeatureFlag;                                       // 0x0(0x8)
	class UClass*                                                StartUse;                                          // 0x8(0x8)
	class UClass*                                                StopUse;                                           // 0x10(0x8)
	struct WieldableItemActionVisuals                            ActionVisuals;                                     // 0x18(0x18)
	class HoldToUseInputVisualModifier*                          WieldableVisualModifier;                           // 0x30(0x8)
	bool                                                         SplitActionRules;                                  // 0x38(0x1)
};


// Size 0x10
struct AggressiveGhostShipEncounterFormationDesc
{
public:
	TArray<struct AggressiveGhostShipEncounterFormationLocationDesc> Locations;                                         // 0x0(0x10)
};


// Size 0x18
struct VisualFeedbackList
{
public:
	TArray<struct VisualFeedbackEntry>                           Entires;                                           // 0x0(0x10)
	float                                                        StartDelay;                                        // 0x10(0x4)
	float                                                        TransitionTime;                                    // 0x14(0x4)
};


// Size 0x1a8
struct BountyQuestParams
{
public:
	bool                                                         ConvertFinalCaptainToSkeletonLord;                 // 0x48(0x1)
	class BountyQuestSkeletonLordInfoData*                       SkeletonLordInfoData;                              // 0x50(0x8)
	class AIBountySpawner*                                       Spawner;                                           // 0x58(0x8)
	struct BountyQuestRandomSpawnGeneratorParams                 BountyQuestRandomSpawnGeneratorParams;             // 0x60(0x148)
};


// Size 0x20
struct PetChestOpenRequestEvent
{
public:
	struct RequestOpenPossessionsChestEvent                      OpenPossessionsChestEvent;                         // 0x0(0x18)
	class Actor*                                                 Interaction;                                       // 0x18(0x8)
};


// Size 0x10
struct GuildLevelBatchRequestModel
{
public:
	TArray<struct SignedGuildIdModel>                            SignedGuildIds;                                    // 0x0(0x10)
};


// Size 0x78
struct UpdatedEntitlementsAvailableEvent
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
};


// Size 0x20
struct MapTextureRenderData
{
public:
	class MapRenderResource*                                     RenderResource;                                    // 0x0(0x8)
	class MaterialInstance*                                      Material;                                          // 0x8(0x8)
	TArray<struct MapTransformRenderData>                        Transforms;                                        // 0x10(0x10)
};


// Size 0x48
struct EventBuriableAdded
{
public:
	struct BuriedBuriable                                        BuryData;                                          // 0x0(0x48)
};


// Size 0x120
struct ScoreRewardRequestEvent
{
public:
	struct FName                                                 ScoreId;                                           // 0x0(0x8)
	int                                                          ScoreValue;                                        // 0x8(0x4)
	struct RewardRequestCrewGame                                 Recipient;                                         // 0x10(0xd0)
	struct Guid                                                  RequestID;                                         // 0xe0(0x10)
	struct FName                                                 CompanyAffiliation;                                // 0xf0(0x8)
	struct Guid                                                  BootyId;                                           // 0xf8(0x10)
	struct Guid                                                  GuildId;                                           // 0x108(0x10)
	char                                                         PlayMode;                                          // 0x118(0x1)
	char                                                         PlayModeVariant;                                   // 0x119(0x1)
	char                                                         NotifyPlayer;                                      // 0x11a(0x1)
	char                                                         IsSovereignHandIn;                                 // 0x11b(0x1)
};


// Size 0x10
struct EventCompanyReputationCampaignInformationResponse
{
public:
	TArray<struct EventCompanyReputationCampaignInformation>     CampaignInformation;                               // 0x0(0x10)
};


// Size 0x58
struct CrewManagementData
{
public:
	TArray<struct CrewManagementMemberData>                      CrewMembers;                                       // 0x0(0x10)
	TArray<struct ReservedCrewSlotData>                          CrewMembersThatAreNotConnectedToTheServerButHaveAReservedSlot; // 0x10(0x10)
	struct CrewManagementOtherCrewData                           OtherCrews;                                        // 0x20(0x1)
	struct CrewManagementShipData                                Ship;                                              // 0x24(0x14)
	struct CrewManagementMatchmakingVisibilityData               MatchmakingVisibility;                             // 0x38(0x10)
	struct CrewManagementArenaRivalVotingData                    ArenaRivalVoting;                                  // 0x48(0xc)
	bool                                                         CrewFull;                                          // 0x54(0x1)
};


// Size 0x228
struct PremiumStoreBundleView
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	struct PremiumStoreBundleOffer                               Offer;                                             // 0x10(0x208)
	TArray<struct PremiumStoreBundleItem>                        Items;                                             // 0x218(0x10)
};


// Size 0x140
struct AthenaAnimationObjectMeleeV2
{
public:
	TArray<struct AthenaAnimationObjectComplexOneShot>           ComboAttacks;                                      // 0x0(0x10)
	TArray<struct AthenaAnimationObjectComplexOneShot>           ComboAttacksStatic;                                // 0x10(0x10)
	TArray<struct AthenaAnimationObjectComplexOneShot>           SwimmingComboAttacks;                              // 0x20(0x10)
	struct AthenaAnimationObjectComplexOneShot                   HeavyAttack;                                       // 0x30(0x28)
	struct AthenaAnimationObjectComplexOneShot                   SwimmingHeavyAttack;                               // 0x58(0x28)
	TArray<struct AthenaAnimationObjectMeleeV2SpecialAttack>     SpecialAttacks;                                    // 0x80(0x10)
	class AnimSequence*                                          BlockingMainInto;                                  // 0x90(0x8)
	class AnimSequence*                                          BlockingIntoFromCombat;                            // 0x98(0x8)
	class BlendSpace*                                            BlockingMainBlendSpace;                            // 0xa0(0x8)
	TArray<class AnimSequence*>                                  BlockingFeedbackSequences;                         // 0xa8(0x10)
	class AnimSequence*                                          BlockingOut;                                       // 0xb8(0x8)
	class AnimSequence*                                          BlockingMainIntoSwimming;                          // 0xc0(0x8)
	class BlendSpace*                                            BlockingMainBlendSpaceSwimming;                    // 0xc8(0x8)
	TArray<class AnimSequence*>                                  BlockingFeedbackSequencesSwimming;                 // 0xd0(0x10)
	class AnimSequence*                                          BlockingOutSwimming;                               // 0xe0(0x8)
	struct AthenaAnimationObjectJumpingAnimations                BlockingJump;                                      // 0xe8(0x20)
	class BlendSpace*                                            CombatLocomotion;                                  // 0x108(0x8)
	class AnimSequence*                                          CombatLocomotionTurningLeft;                       // 0x110(0x8)
	class AnimSequence*                                          CombatLocomotionTurningRight;                      // 0x118(0x8)
	class AnimSequence*                                          CombatLocomotionTurnOut;                           // 0x120(0x8)
	class BlendSpace*                                            Dodge;                                             // 0x128(0x8)
	class BlendSpace*                                            LungeWarmupLocomotion;                             // 0x130(0x8)
	bool                                                         AttacksRespectFullBodyFlag;                        // 0x138(0x1)
	bool                                                         IgnoreOverlayHandAdditive;                         // 0x13c(0x1)
};


// Size 0x20
struct UniversalDescriptionPage
{
public:
	struct FString                                               Heading;                                           // 0x0(0x10)
	TArray<struct UniversalDescriptionSection>                   Sections;                                          // 0x10(0x10)
};


// Size 0x78
struct TQStructGenParams
{
public:
	int                                                          GenerationIterations;                              // 0x0(0x4)
	bool                                                         FailIfNoLocationData;                              // 0x4(0x1)
	float                                                        PreferredDistance;                                 // 0x8(0x4)
	float                                                        EventExclusionZoneRadius;                          // 0xc(0x4)
	float                                                        TransientActorExclusionZoneRadius;                 // 0x10(0x4)
	int                                                          ModuleCount;                                       // 0x14(0x4)
	struct TQStructGenEntry                                      FinalModuleOverride;                               // 0x18(0x30)
	float                                                        CombatWeight;                                      // 0x48(0x4)
	int                                                          MaxCombatOccurrences;                              // 0x4c(0x4)
	TArray<struct TQStructGenGroup>                              CombatGroups;                                      // 0x50(0x10)
	int                                                          MaxNonCombatOccurrences;                           // 0x60(0x4)
	TArray<struct TQStructGenGroup>                              NonCombatGroups;                                   // 0x68(0x10)
};


// Size 0x10
struct TrinketLoadoutUpdatedUIEvent
{
public:
	TArray<struct ChestTabViewModel>                             Loadout;                                           // 0x0(0x10)
};


// Size 0x68
struct EmblemRankDefinition
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct StringAssetReference                                  ImagePath;                                         // 0x10(0x10)
	struct StringAssetReference                                  LockedImagePath;                                   // 0x20(0x10)
	TArray<struct EmblemCriteria>                                UnlockCriteria;                                    // 0x30(0x10)
	struct RewardId                                              RewardId;                                          // 0x40(0x8)
	uint32                                                       UnlockAtNumCriteriaCompleted;                      // 0x48(0x4)
	struct EmblemId                                              PrerequisiteEmblem;                                // 0x4c(0x18)
};


// Size 0x1e8
struct OfferPurchasedEvent
{
public:
	struct ShopOffer                                             Purchase;                                          // 0x0(0x1e0)
	struct FName                                                 NPCName;                                           // 0x1e0(0x8)
};


// Size 0x50
struct BountyMapTargetDesc
{
public:
	struct TreasureMapTextDesc                                   Name;                                              // 0x0(0x48)
	class Texture*                                               MugShotImage;                                      // 0x48(0x8)
};


// Size 0x78
struct GetShipPersistenceResponseModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	char                                                         ShipType;                                          // 0x10(0x1)
	struct FString                                               Name;                                              // 0x18(0x10)
	struct ShipPersistenceModel                                  State;                                             // 0x28(0x50)
};


// Size 0x50
struct QuestTableExperiences
{
public:
	TArray<struct QuestTableTileOverview>                        DiscoverTabTiles;                                  // 0x0(0x10)
	struct QuestTableTileDetails                                 TileDetails;                                       // 0x10(0x40)
};


// Size 0xd8
struct OpenPremiumStoreFrontEvent
{
public:
	struct ShopDefinition                                        ShopDefinition;                                    // 0x0(0xd8)
};


// Size 0x20
struct RewardDistributionModelData
{
public:
	struct ConsistentPercentageRewardDistributionModel           ConsistentPercentage;                              // 0x0(0x8)
	struct RelativePercentageRewardDistributionModel             RelativePercentage;                                // 0x8(0x18)
};


// Size 0x20
struct CompanyRankDataOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	struct CompanyRankData                                       RankData;                                          // 0x10(0x10)
};


// Size 0x10
struct AimSensitivitySettingsDefaults
{
public:
	TArray<struct AimSensitivitySettingsEntry>                   Entries;                                           // 0x0(0x10)
};


// Size 0x30
struct ShipActiveCurseFXData
{
public:
	struct ShipCurseFXData                                       CurseFXData;                                       // 0x0(0x30)
};


// Size 0x40
struct UIPromotionRewards
{
public:
	struct FString                                               RibbonImageUrl;                                    // 0x0(0x10)
	struct FString                                               Title;                                             // 0x10(0x10)
	TArray<struct QuestTableCompanyVoyage>                       Voyages;                                           // 0x20(0x10)
	TArray<struct NpcTraderPromotionOffer>                       ShopItems;                                         // 0x30(0x10)
};


// Size 0x10
struct TradeRouteMapTextLayout
{
public:
	TArray<struct TradeRouteMapTextData>                         TextFields;                                        // 0x0(0x10)
};


// Size 0x10
struct CrewShipPersistentDataManager
{
public:
	TArray<struct CrewShipPersistentData>                        Data;                                              // 0x0(0x10)
};


// Size 0x20
struct CrewBootyStorage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<struct LocationBootyStorage>                          CrewStorage;                                       // 0x10(0x10)
};


// Size 0x88
struct WaterModifierZoneParametersAndLocation
{
public:
	struct WaterModifierZoneParameters                           WaterModifierZoneParameters;                       // 0x0(0x78)
	struct Vector                                                Location;                                          // 0x78(0xc)
};


// Size 0x70
struct GuildChroniclesInWorldMessage
{
public:
	struct GuildChroniclesPirateId                               OriginatingPlayer;                                 // 0x0(0x28)
	struct Guid                                                  GuildId;                                           // 0x28(0x10)
	uint32                                                       DaysAtSea;                                         // 0x38(0x4)
	uint32                                                       GoldEarned;                                        // 0x3c(0x4)
	uint32                                                       EmissaryValueEarned;                               // 0x40(0x4)
	struct Guid                                                  ShipId;                                            // 0x44(0x10)
	TArray<struct GuildChronicleShipAccolade>                    ShipAccolades;                                     // 0x58(0x10)
	uint32                                                       ShipAccoladesIncreased;                            // 0x68(0x4)
};


// Size 0x60
struct CargoRunMapContents
{
public:
	struct Guid                                                  NPCId;                                             // 0x0(0x10)
	int                                                          CompanyIndex;                                      // 0x10(0x4)
	int                                                          NumOfItems;                                        // 0x14(0x4)
	struct TreasureMapTextDesc                                   PickupLocationHint;                                // 0x18(0x48)
};


// Size 0xa60
struct AthenaAnimationAsyncLoadedBaseItemAnimations
{
public:
	struct AthenaAnimationAsyncLoadedContinuousActionAnimations  PrimaryActionAnimations;                           // 0x8(0x278)
	struct AthenaAnimationAsyncLoadedContinuousActionAnimations  AlternatePrimaryActionAnimations;                  // 0x280(0x278)
	struct AthenaAnimationAsyncLoadedContinuousActionAnimations  SecondaryActionAnimations;                         // 0x4f8(0x278)
	struct AthenaAnimationAsyncLoadedContinuousActionAnimations  AlternateSecondaryActionAnimations;                // 0x770(0x278)
	struct AthenaAnimationAsyncLoadedFacialActionAnimations      FacialActionAnimations;                            // 0x9e8(0x78)
};


// Size 0x38
struct CaptaincyRequestIsValidCaptaincySessionModel
{
public:
	float                                                        ShipX;                                             // 0x0(0x4)
	float                                                        ShipY;                                             // 0x4(0x4)
	TArray<String>                                               CrewPirateIds;                                     // 0x8(0x10)
	TArray<String>                                               CrewUserIds;                                       // 0x18(0x10)
	TArray<struct GuildSessionMember>                            SessionMembers;                                    // 0x28(0x10)
};


// Size 0x18
struct RiddleMapContents
{
public:
	TArray<struct TreasureMapTextDesc>                           Text;                                              // 0x0(0x10)
	int                                                          Progress;                                          // 0x10(0x4)
};


// Size 0x40
struct UserPresenceRequestAndResponse
{
public:
	struct UserPresenceRequestEvent                              RequestEvent;                                      // 0x0(0x20)
	struct UserPresenceResponseEvent                             ResponseEvent;                                     // 0x20(0x20)
};


// Size 0xd0
struct QuestTableTallTale
{
public:
	struct FName                                                 TallTaleId;                                        // 0x0(0x8)
	struct FString                                               TallTaleCategory;                                  // 0x8(0x10)
	struct FText                                                 DisplayName;                                       // 0x18(0x38)
	struct FText                                                 Description;                                       // 0x50(0x38)
	struct FString                                               BackgroundImageUrl;                                // 0x88(0x10)
	struct FString                                               IconImageUrl;                                      // 0x98(0x10)
	bool                                                         IsLocked;                                          // 0xa8(0x1)
	TArray<struct Text>                                          LockedDescriptions;                                // 0xb0(0x10)
	TArray<struct QuestTableTallTaleQuest>                       TallTaleQuests;                                    // 0xc0(0x10)
};


// Size 0x10
struct GuildInvitesReceivedResponseModel
{
public:
	TArray<struct GuildInvitesRecievedModel>                     InvitesReceived;                                   // 0x0(0x10)
};


// Size 0x28
struct QuickSwitchDebugWeaponData
{
public:
	char                                                         WeaponType;                                        // 0x0(0x1)
	float                                                        TimeStamp;                                         // 0x4(0x4)
	TArray<struct EquipRequest>                                  EquipRequests;                                     // 0x18(0x10)
};


// Size 0x28
struct QuestBookRepInfo
{
public:
	int                                                          LeftPageIndex;                                     // 0x0(0x4)
	TArray<int>                                                  CurrentBookContents;                               // 0x8(0x10)
	TArray<struct PageLayoutRepInfo>                             ProcPageList;                                      // 0x18(0x10)
};


// Size 0xd8
struct RequestOpenShopEvent
{
public:
	struct ShopDefinition                                        ShopDefinition;                                    // 0x0(0xd8)
};


// Size 0x330
struct AthenaAnimationLadder
{
public:
	float                                                        TranslationStrength;                               // 0x0(0x4)
	float                                                        RotationStrength;                                  // 0x4(0x4)
	float                                                        BlendInSpeed;                                      // 0x8(0x4)
	float                                                        BlendOutSpeed;                                     // 0xc(0x4)
	bool                                                         AnimationOverride;                                 // 0x10(0x1)
	float                                                        AnimationLoopMod;                                  // 0x14(0x4)
	float                                                        HeightPerStep;                                     // 0x18(0x4)
	struct FName                                                 LeftHandSocketName;                                // 0x1c(0x8)
	struct FName                                                 RightHandSocketName;                               // 0x24(0x8)
	struct FName                                                 LeftFootSocketName;                                // 0x2c(0x8)
	struct FName                                                 RightFootSocketName;                               // 0x34(0x8)
	char                                                         LadderState;                                       // 0x3c(0x1)
	char                                                         LadderTransitionState;                             // 0x3d(0x1)
	struct LadderDefinition                                      LadderDefinition;                                  // 0x40(0x1c)
	float                                                        ClimbDistance;                                     // 0x5c(0x4)
	float                                                        AnimationDistance;                                 // 0x60(0x4)
	float                                                        PlayerIntent;                                      // 0x64(0x4)
	bool                                                         ClimbOnComplete;                                   // 0x68(0x1)
	bool                                                         ClimbOffComplete;                                  // 0x69(0x1)
	bool                                                         IsClambering;                                      // 0x6a(0x1)
};


// Size 0x10
struct PirateRemoteServiceModel
{
public:
	TArray<struct PirateProfile>                                 Pirates;                                           // 0x0(0x10)
};


// Size 0x10
struct StreamersResponse
{
public:
	TArray<struct StreamingStatusModel>                          StreamingStatuses;                                 // 0x0(0x10)
};


// Size 0x10
struct GetGuildInvitesSentResponseModel
{
public:
	TArray<struct SentGuildInvite>                               InvitesPerGuild;                                   // 0x0(0x10)
};


// Size 0xf8
struct FactionLeaveFightRewardMessage
{
public:
	struct RewardRequestCrew                                     Recipient;                                         // 0x0(0xd0)
	struct Guid                                                  RequestID;                                         // 0xd0(0x10)
	struct Guid                                                  GuildId;                                           // 0xe0(0x10)
	int                                                          SandOfFateGoldLevel;                               // 0xf0(0x4)
	char                                                         PlayMode;                                          // 0xf4(0x1)
	char                                                         PlayModeVariant;                                   // 0xf5(0x1)
};


// Size 0x40
struct EmblemProgress
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FName                                                 CompanyId;                                         // 0x10(0x8)
	bool                                                         IsCompleted;                                       // 0x18(0x1)
	TArray<struct EmblemCriteriaProgress>                        CriteriaProgress;                                  // 0x20(0x10)
	struct FString                                               Sig;                                               // 0x30(0x10)
};


// Size 0xe8
struct NPCOnSurfaceStateInfo
{
public:
	struct FName                                                 StateName;                                         // 0x0(0x8)
	struct FName                                                 LocationGroupName;                                 // 0x8(0x8)
	bool                                                         PeriodicallyChangeLocation;                        // 0x10(0x1)
	bool                                                         ChangeLocationEvenIfPlayerIsNearby;                // 0x11(0x1)
	struct WeightedProbabilityRangeOfRanges                      ChangeLocationTime;                                // 0x18(0x30)
	bool                                                         HideWhenInDanger;                                  // 0x48(0x1)
	float                                                        InternalWaterWarningDepth;                         // 0x4c(0x4)
	struct FName                                                 InternalWaterWarningVOGroupName;                   // 0x50(0x8)
	struct WeightedProbabilityRangeOfRanges                      InternalWaterWarningVOCooldown;                    // 0x58(0x30)
	bool                                                         UseCannons;                                        // 0x88(0x1)
	bool                                                         DespawnIfNoCrewOnShip;                             // 0x89(0x1)
	struct FName                                                 AppearVOGroupName;                                 // 0x8c(0x8)
	TArray<struct NPCOnDespawnVOEntry>                           DespawnVOGroupEntries;                             // 0x98(0x10)
	TArray<struct NPCReactionVOEntry>                            OnActorDamagedReactions;                           // 0xa8(0x10)
	TArray<struct NPCReactionVOEntry>                            OnActorKilledReactions;                            // 0xb8(0x10)
	TArray<struct NPCReactionDualActorVOEntry>                   OnActorSpawnedActorReactions;                      // 0xc8(0x10)
	TArray<struct NPCGenericReactionVOEntry>                     OnGenericResponseEntries;                          // 0xd8(0x10)
};


// Size 0x20
struct ShopOffersEvent
{
public:
	TArray<struct ShopOffer>                                     Offers;                                            // 0x0(0x10)
	TArray<String>                                               Categories;                                        // 0x10(0x10)
};


// Size 0x38
struct GetGuildProgressResponseModel
{
public:
	struct GuildProgressModel                                    GuildProgress;                                     // 0x0(0x38)
};


// Size 0x150
struct AthenaAnimationObjectActionContinuous
{
public:
	struct AthenaAnimationObjectActionContinuousStruct           MainContinuousActions;                             // 0x0(0xa8)
	struct AthenaAnimationObjectActionContinuousStruct           AlternateContinuousActions;                        // 0xa8(0xa8)
};


// Size 0xa8
struct XMarksTheSpotQuestDesc
{
public:
	TArray<struct TreasureData>                                  Treasure;                                          // 0x28(0x10)
	assetobject                                                  MapTexture;                                        // 0x38(0x20)
	assetobject                                                  MapInventoryTexture;                               // 0x58(0x20)
	float                                                        RotationFromNorth;                                 // 0x78(0x4)
	struct Guid                                                  MapGroupGuid;                                      // 0x7c(0x10)
	TArray<class AIBoobyTrapSpawner*>                            BoobyTrapSpawners;                                 // 0x90(0x10)
	class UClass*                                                OverrideTreasureMapItemDesc;                       // 0xa0(0x8)
};


// Size 0x20
struct RemoteLocalizationModel
{
public:
	struct RemoteLocalizationData                                LocalizationData;                                  // 0x0(0x20)
};


// Size 0x28
struct GameEventConfigurationInfo
{
public:
	TArray<struct GameEventCountInfo>                            MainEvents;                                        // 0x0(0x10)
	TArray<struct GameEventWeightedListInfo>                     SubConfigs;                                        // 0x10(0x10)
	float                                                        Weight;                                            // 0x20(0x4)
};


// Size 0x38
struct SkeletonAICharacterStrategyAudioEvents
{
public:
	class UClass*                                                AIStrategy;                                        // 0x0(0x8)
	struct SkeletonAudioEvents                                   DefaultEvents;                                     // 0x8(0x20)
	TArray<struct SkeletonAICharacterItemSpecificAudioEvents>    ItemSpecificEventOverrides;                        // 0x28(0x10)
};


// Size 0x10
struct StreamersRequest
{
public:
	TArray<struct StreamingStatusModel>                          StreamingStatuses;                                 // 0x0(0x10)
};


// Size 0xc8
struct AggressiveGhostShipEncounterWaveFormationDesc
{
public:
	int                                                          NumShipsInFormation;                               // 0x0(0x4)
	struct AggressiveGhostShipEncounterShipDesc                  FormationShipDesc;                                 // 0x8(0x48)
	struct AggressiveGhostShipEncounterShipDesc                  FormationLeaderShipDesc;                           // 0x50(0x48)
	TArray<class AggressiveGhostShipVisualsDataAsset*>           FormationGruntVisuals;                             // 0x98(0x10)
	bool                                                         FormationLeaderIsCaptain;                          // 0xa8(0x1)
	bool                                                         IsBurningBlade;                                    // 0xa9(0x1)
	bool                                                         IsHellishMermaid;                                  // 0xaa(0x1)
	bool                                                         IsReaper;                                          // 0xab(0x1)
	bool                                                         PreventSpawningFormationGruntsUntilNotified;       // 0xac(0x1)
	bool                                                         DespawnShipsInFormationWhenLeaderIsDestroyed;      // 0xad(0x1)
	char                                                         SpawnDirection;                                    // 0xae(0x1)
	bool                                                         SpawnShipOnTopOfPlayer;                            // 0xaf(0x1)
	float                                                        SpawnShipOnTopOfPlayerSpawnAheadDistanceInMetres;  // 0xb0(0x4)
	class AggressiveGhostShipFixedSplinesDataAsset*              FixedSpline;                                       // 0xb8(0x8)
	int                                                          DoNotDamageFormationLeaderShipBelowThisNumShots;   // 0xc0(0x4)
	bool                                                         ImmuneToLightning;                                 // 0xc4(0x1)
	bool                                                         FlipSideOffsetIfReversed;                          // 0xc5(0x1)
};


// Size 0x20
struct EventCharacterFootEnterWater
{
public:
	struct CharacterFootWaterImpactResult                        Result;                                            // 0x0(0x20)
};


// Size 0x30
struct CompanyProgressUpdateEvent
{
public:
	struct CompanyReputationProgressModel                        CompanyProgress;                                   // 0x0(0x30)
};


// Size 0x40
struct StartInteractionEvent
{
public:
	struct InteractionDefinition                                 Definition;                                        // 0x0(0x40)
};


// Size 0xa8
struct GuildReceivedInviteResponse
{
public:
	TArray<String>                                               InvitedByXUIDs;                                    // 0x0(0x10)
	struct GuildData                                             GuildData;                                         // 0x10(0x88)
	struct FString                                               InviteExpiry;                                      // 0x98(0x10)
};


// Size 0x10
struct ClothingChestClothingLoadoutUpdatedEvent
{
public:
	TArray<struct ChestTabViewModel>                             Loadout;                                           // 0x0(0x10)
};


// Size 0x30
struct AthenaAnimationAIKnockback
{
public:
	struct AthenaAnimationSkeletonKnockbackLocomotionStrength    KnockbackAnimations;                               // 0x0(0x20)
	char                                                         AIKnockbackDirection;                              // 0x20(0x1)
	bool                                                         KnockbackActive;                                   // 0x24(0x1)
	class AnimSequence*                                          KnockbackAnimToUse;                                // 0x28(0x8)
};


// Size 0x10
struct CatagoriesDataResponseUIEvent
{
public:
	TArray<struct ShopOffer>                                     Offers;                                            // 0x0(0x10)
};


// Size 0x20
struct PeriodicCommodityMultipliers
{
public:
	struct DateTime                                              DateFrom;                                          // 0x0(0x8)
	struct DateTime                                              DateTo;                                            // 0x8(0x8)
	TArray<struct CommodityDemandMultipliers>                    Rewards;                                           // 0x10(0x10)
};


// Size 0xf8
struct EventMeleeAttackHit
{
public:
	struct MeleeAttackHitResponseData                            HitResponseData;                                   // 0x0(0xf8)
};


// Size 0x48
struct ShipHullDamageTypeEntry
{
public:
	char                                                         DamageType;                                        // 0x0(0x1)
	struct ShipHullLandscapeDamageEntry                          LandscapeDamageParams;                             // 0x8(0x30)
	struct ShipHullRammingSpurDamageEntry                        RammingSpurDamageParams;                           // 0x38(0x10)
};


// Size 0x50
struct EventProjectileWeaponEquipRequest
{
public:
	struct EquipRequest                                          EquipRequest;                                      // 0x0(0x40)
};


// Size 0x60
struct EventCompanyProgressUpdateNotification
{
public:
	struct CompanyReputationProgressModel                        CurrentProgress;                                   // 0x0(0x30)
	struct CompanyReputationProgressModel                        PreviousProgress;                                  // 0x30(0x30)
};


// Size 0x88
struct GuildChroniclesData
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct Guid                                                  PirateId;                                          // 0x18(0x10)
	struct Guid                                                  CrewId;                                            // 0x28(0x10)
	struct Guid                                                  GuildId;                                           // 0x38(0x10)
	uint32                                                       DaysAtSea;                                         // 0x48(0x4)
	uint64                                                       GoldEarnt;                                         // 0x50(0x8)
	uint32                                                       EmissaryValue;                                     // 0x58(0x4)
	uint32                                                       LastKnownEmissaryValueFrom;                        // 0x5c(0x4)
	uint32                                                       LastKnownEmissaryValueTo;                          // 0x60(0x4)
	struct Guid                                                  ShipId;                                            // 0x64(0x10)
	uint32                                                       ShipAccoladesIncreased;                            // 0x74(0x4)
	TArray<struct MilestoneData>                                 Milestones;                                        // 0x78(0x10)
};


// Size 0x10
struct ShipLoadoutRequestShipPartsSignedModel
{
public:
	TArray<struct SignedShipRequestModel>                        Ships;                                             // 0x0(0x10)
};


// Size 0xb0
struct BountyMapLayoutTarget
{
public:
	struct TreasureMapWidgetTextWithScaledWidthBackground        Name;                                              // 0x0(0x80)
	struct TreasureMapWidgetTexture                              MugShot;                                           // 0x80(0x30)
};


// Size 0x10
struct WalletLastKnownBalanceUpdatedEvent
{
public:
	struct WalletBalance                                         Balance;                                           // 0x0(0x10)
};


// Size 0x10
struct GuildMemberContainerModel
{
public:
	TArray<struct GuildMemberModel>                              GuildMembers;                                      // 0x0(0x10)
};


// Size 0x10
struct GetBulkGuildsResponseModel
{
public:
	TArray<struct GuildDataModel>                                GuildData;                                         // 0x0(0x10)
};


// Size 0x18
struct PerChapterRankRewardEntry
{
public:
	int                                                          Rank;                                              // 0x0(0x4)
	int                                                          Payout;                                            // 0x4(0x4)
	TArray<struct RewardGroupList>                               Rewards;                                           // 0x8(0x10)
};


// Size 0x40
struct ShipLoadoutPersistenceModel
{
public:
	struct ShipLoadoutCustomizationsModel                        Customizations;                                    // 0x0(0x10)
	TArray<struct ShipVoyageModel>                               Voyages;                                           // 0x10(0x10)
	struct TrinketLoadoutModel                                   Trinkets;                                          // 0x20(0x10)
	struct RowboatPersistenceModel                               Rowboat;                                           // 0x30(0x10)
};


// Size 0x38
struct ItemInfoPartDescCustomizationMetaWrapper
{
public:
	struct PartDesc                                              Customization;                                     // 0x18(0x20)
};


// Size 0x88
struct FishAnimationSequences
{
public:
	struct FishAnimationSwimmingLoops                            FishAnimationSwimmingLoops;                        // 0x0(0x60)
	class AnimMontage*                                           FishAnimationOnHookFighting;                       // 0x60(0x8)
	class AnimMontage*                                           FishAnimationOnHookTired;                          // 0x68(0x8)
	class AnimMontage*                                           FishAnimationOnHookCaught;                         // 0x70(0x8)
	class AnimMontage*                                           FishAnimationOnHookCaughtIdle;                     // 0x78(0x8)
	class AnimMontage*                                           FishAnimationEscaping;                             // 0x80(0x8)
};


// Size 0x28
struct CompanySpecificCargoRunReward
{
public:
	class UClass*                                                CompanyId;                                         // 0x0(0x8)
	struct CargoRunReward                                        Reward;                                            // 0x8(0x20)
};


// Size 0x20
struct LobbySetup
{
public:
	TArray<struct LobbyCrewInfo>                                 Crews;                                             // 0x0(0x10)
	TArray<struct LobbyCrewMember>                               CrewlessMembers;                                   // 0x10(0x10)
};


// Size 0x48
struct AccoladeInformationModel
{
public:
	struct AccoladeProgressId                                    ProgressId;                                        // 0x0(0x24)
	struct FString                                               LocalizedTitle;                                    // 0x28(0x10)
	TArray<struct AccoladeStatsInformationModel>                 Stats;                                             // 0x38(0x10)
};


// Size 0x30
struct EventShipCurseFX
{
public:
	struct ShipCurseFXData                                       CurseFXData;                                       // 0x0(0x30)
};


// Size 0x20
struct WorldMapRequestWorldResponse
{
public:
	struct WorldMapWorldData                                     WorldData;                                         // 0x0(0x20)
};


// Size 0x50
struct SessionEvent
{
public:
	struct CreativeSession                                       Session;                                           // 0x0(0x50)
};


// Size 0x18
struct WeightedRewardDistribution
{
public:
	TArray<struct WeightedRewardEntry>                           RewardWeightings;                                  // 0x0(0x10)
};


// Size 0x160
struct PetAnimationDataBeingHeld
{
public:
	struct WeightedPetAnimations                                 WeightedBaseIdle;                                  // 0x0(0x10)
	struct WeightedAnimationTimeoutSelector                      WeightedIdleTimeouts;                              // 0x10(0x10)
	class AnimSequenceBase*                                      DefaultIdle;                                       // 0x20(0x8)
	class AnimSequenceBase*                                      Equip;                                             // 0x28(0x8)
	class AnimSequenceBase*                                      Drop;                                              // 0x30(0x8)
	class AnimSequenceBase*                                      Chew;                                              // 0x38(0x8)
	class AnimSequenceBase*                                      PositiveFeedingReact;                              // 0x40(0x8)
	class AnimSequenceBase*                                      PositiveFeedingReactShown;                         // 0x48(0x8)
	class AnimSequenceBase*                                      NegativeFeedingReact;                              // 0x50(0x8)
	class AnimSequenceBase*                                      NegativeFeedingReactShown;                         // 0x58(0x8)
	class AnimSequenceBase*                                      RefuseFeedingReact;                                // 0x60(0x8)
	class AnimSequenceBase*                                      RefuseFeedingReactShown;                           // 0x68(0x8)
	struct PetAnimationCycle                                     Stroke;                                            // 0x70(0x18)
	struct PetAnimationCycle                                     StrokeAlternate;                                   // 0x88(0x18)
	struct PetAnimationCycle                                     Give;                                              // 0xa0(0x18)
	class BlendSpace*                                            Locomotion;                                        // 0xb8(0x8)
	class BlendSpace*                                            ShowingLocomotion;                                 // 0xc0(0x8)
	class AnimSequenceBase*                                      Underwater;                                        // 0xc8(0x8)
	class AnimSequenceBase*                                      ShowingUnderwater;                                 // 0xd0(0x8)
	struct PetAnimationDataJump                                  Jump;                                              // 0xd8(0x20)
	struct PetAnimationDataJump                                  JumpAlternateStroke;                               // 0xf8(0x20)
	struct PetAnimationDataJump                                  JumpShowing;                                       // 0x118(0x20)
	struct JumpHeldAdditiveBlendWeight                           JumpHeldAdditiveBlendWeight;                       // 0x138(0x18)
	struct AlternateHeldPose                                     AlternateHeldPose;                                 // 0x150(0x10)
};


// Size 0x70
struct HullDamageNamedParamSet
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	struct HullDamageParamSet                                    Params;                                            // 0x10(0x60)
};


// Size 0x18
struct AggressiveGhostShipEncounterFormationDescGroup
{
public:
	int                                                          NumShipsInFormation;                               // 0x0(0x4)
	TArray<struct AggressiveGhostShipEncounterFormationDesc>     FormationDescs;                                    // 0x8(0x10)
};


// Size 0x60
struct QuestTableExperiencesModel
{
public:
	struct QuestTableTileOverviews                               TileOverviews;                                     // 0x0(0x20)
	struct QuestTableTileDetails                                 TileDetails;                                       // 0x20(0x40)
};


// Size 0x28
struct ActionSequenceInteractableParams
{
public:
	class UClass*                                                PressedNotificationInputId;                        // 0x0(0x8)
	class UClass*                                                ReleasedNotificationInputId;                       // 0x8(0x8)
	TArray<struct ActionSequenceSingleInteractionParam>          Interactions;                                      // 0x10(0x10)
	bool                                                         HideActorAfterFinalInteraction;                    // 0x20(0x1)
};


// Size 0x20
struct DebugFishSelectionBreed
{
public:
	struct FString                                               BreedName;                                         // 0x0(0x10)
	TArray<struct DebugFishSelectionColour>                      FishColours;                                       // 0x10(0x10)
};


// Size 0x200
struct VoyageOffer
{
public:
	struct ShopOffer                                             ShopOffer;                                         // 0x0(0x1e0)
	struct FString                                               BackgroundImage;                                   // 0x1e0(0x10)
	struct FString                                               RibbonImage;                                       // 0x1f0(0x10)
};


// Size 0x30
struct EventShipCurseFXEnd
{
public:
	struct ShipCurseFXData                                       CurseFXData;                                       // 0x0(0x30)
};


// Size 0xc8
struct GuildMemberCompanyProgressUpdateMessage
{
public:
	struct Guid                                                  GuildId;                                           // 0x0(0x10)
	struct PirateIdentity                                        PirateIdentity;                                    // 0x10(0x78)
	struct CompanyReputationProgressModel                        CompanyProgress;                                   // 0x88(0x30)
	struct Guid                                                  RequestID;                                         // 0xb8(0x10)
};


// Size 0xf0
struct AthenaAnimationObjectActionContinuousPitchOverride
{
public:
	struct AthenaAnimationObjectActionContinuousStructPitchOverride MainContinuousActions;                             // 0x0(0x78)
	struct AthenaAnimationObjectActionContinuousStructPitchOverride AlternateContinuousActions;                        // 0x78(0x78)
};


// Size 0x38
struct NPCContinuousAnimationElement
{
public:
	struct FName                                                 SequenceName;                                      // 0x0(0x8)
	struct NPCAnimationContinuousCycle                           ContinuousSequence;                                // 0x8(0x30)
};


// Size 0x20
struct PartsCustomisation
{
public:
	TArray<struct PartDesc>                                      Parts;                                             // 0x0(0x10)
	TArray<class Class*>                                         InitialEntitlements;                               // 0x10(0x10)
};


// Size 0x40
struct AwardGoldMessage
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	TArray<struct PirateGoldReward>                              Rewards;                                           // 0x10(0x10)
	struct Guid                                                  TransactionId;                                     // 0x20(0x10)
	struct FString                                               Source;                                            // 0x30(0x10)
};


// Size 0x10
struct ReapersTributeBandRewardSet
{
public:
	TArray<struct ReapersTributeBandReward>                      RewardDefinitions;                                 // 0x0(0x10)
};


// Size 0x80
struct ProjectileAttackGroup
{
public:
	TArray<struct WeaponProjectile>                              Projectiles;                                       // 0x0(0x10)
	class Actor*                                                 Instigator;                                        // 0x10(0x8)
	class Actor*                                                 HomingTarget;                                      // 0x20(0x8)
	interface                                                    HomingTargetRewindInterface;                       // 0x28(0x10)
	class UClass*                                                DamagerType;                                       // 0x50(0x8)
};


// Size 0x80
struct MerchantMapItemData
{
public:
	struct TreasureMapTextDesc                                   Name;                                              // 0x0(0x48)
	class Texture*                                               IconImage;                                         // 0x48(0x8)
	class UClass*                                                CrateItemDesc;                                     // 0x50(0x8)
	TArray<struct MerchantQuestItemDescAndReward>                AcceptableAlternativeCrateItemData;                // 0x58(0x10)
	class UClass*                                                FaunaSpecies;                                      // 0x68(0x8)
	class UClass*                                                FaunaBreed;                                        // 0x70(0x8)
	int                                                          NumLeftToAllocate;                                 // 0x78(0x4)
	int                                                          NumLeftToDeliver;                                  // 0x7c(0x4)
};


// Size 0x60
struct ShipPersistenceModelReceivedFromPartServicesTelemetryEvent
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	struct ShipPersistenceModel                                  ShipPersistenceModel;                              // 0x10(0x50)
};


// Size 0x18
struct DistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry
{
public:
	char                                                         SurfaceType;                                       // 0x0(0x1)
	struct RandomParticleSystemPicker                            Effect;                                            // 0x8(0x10)
};


// Size 0x228
struct UserSettingsTelemetryEvent
{
public:
	int                                                          AutoDetectedMachineSpec;                           // 0x0(0x4)
	struct PersistentUserGameSettings                            UserSettings;                                      // 0x8(0x218)
	bool                                                         RHIThread;                                         // 0x220(0x1)
};


// Size 0xb8
struct CompanyProgressUpdateMessage
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct CompanyReputationProgressModel                        CompanyProgress;                                   // 0x78(0x30)
	struct Guid                                                  RequestID;                                         // 0xa8(0x10)
};


// Size 0xc0
struct VoyageInfo
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct Guid                                                  Id;                                                // 0x38(0x10)
	class UClass*                                                Company;                                           // 0x48(0x8)
	bool                                                         IsEmergent;                                        // 0x50(0x1)
	bool                                                         IsTale;                                            // 0x51(0x1)
	bool                                                         IsOnDemand;                                        // 0x52(0x1)
	bool                                                         IsUtilityVoyage;                                   // 0x53(0x1)
	char                                                         EmergentSource;                                    // 0x54(0x1)
	struct ViewVoyageBanners                                     ViewVoyageBanners;                                 // 0x55(0x3)
	int                                                          Rank;                                              // 0x58(0x4)
	TArray<struct PlayerStat>                                    VoyageProposedStats;                               // 0x60(0x10)
	TArray<struct PlayerStat>                                    VoyageBegunStats;                                  // 0x70(0x10)
	TArray<struct PlayerStat>                                    VoyageCompletionStats;                             // 0x80(0x10)
	TArray<struct PlayerStat>                                    DiveVoyageCompletionStats;                         // 0x90(0x10)
	TArray<struct PlayerStat>                                    ReapersMarkCompletionStats;                        // 0xa0(0x10)
	TArray<struct VoyageCompletionReward>                        VoyageCompletionRewards;                           // 0xb0(0x10)
};


// Size 0x28
struct UseLadderBeginEvent
{
public:
	struct LadderDefinition                                      LadderDefinition;                                  // 0x0(0x1c)
	class Object*                                                LadderObject;                                      // 0x20(0x8)
};


// Size 0x48
struct CrewSnapshotV1
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct FString                                               ShipSize;                                          // 0x10(0x10)
	int                                                          ShipId;                                            // 0x20(0x4)
	TArray<struct PlayerStateSnapshot>                           Players;                                           // 0x28(0x10)
	TArray<struct CollectedBootySnapshot>                        Booty;                                             // 0x38(0x10)
};


// Size 0xc0
struct GuildInviteData
{
public:
	struct GuildData                                             GuildData;                                         // 0x0(0x88)
	struct FString                                               InviteExpiry;                                      // 0x88(0x10)
	TArray<String>                                               InvitedByXUIDs;                                    // 0x98(0x10)
	struct FString                                               GuildSignature;                                    // 0xa8(0x10)
	char                                                         GuildAffiliation;                                  // 0xb8(0x1)
};


// Size 0x38
struct GameEventSchedulerMainConfig
{
public:
	struct FName                                                 EditorDisplayName;                                 // 0x0(0x8)
	struct FName                                                 ServerConfigName;                                  // 0x8(0x8)
	TArray<struct GameEventCount>                                MainEvents;                                        // 0x10(0x10)
	TArray<struct GameEventWeightedList>                         SubConfigs;                                        // 0x20(0x10)
	float                                                        Weight;                                            // 0x30(0x4)
};


// Size 0x18
struct AchievementDefinition
{
public:
	struct FName                                                 DevCenterId;                                       // 0x0(0x8)
	TArray<struct AchievementCriteria>                           UnlockCriteria;                                    // 0x8(0x10)
};


// Size 0x80
struct TransitionLadderActionStateConstructionInfo
{
public:
	float                                                        StartingInteractionHeight;                         // 0x58(0x4)
	char                                                         ClimbId;                                           // 0x5c(0x1)
	char                                                         LadderTransitionMode;                              // 0x5d(0x1)
	struct LadderDefinition                                      LadderDefinition;                                  // 0x60(0x1c)
};


// Size 0x38
struct CompanyProgressIconsOverride
{
public:
	struct FeatureFlag                                           FeatureFlag;                                       // 0x0(0xc)
	struct CompanyProgressIcons                                  ProgressIcons;                                     // 0x10(0x28)
};


// Size 0x100
struct UICompanyData
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
	struct FString                                               DisplayName;                                       // 0x10(0x10)
	struct UICompanySkin                                         Skin;                                              // 0x20(0x90)
	struct UICompanyShopInfo                                     ShopInfo;                                          // 0xb0(0x50)
};


// Size 0x20
struct TransitionLadderBeginEvent
{
public:
	char                                                         LadderTransitionMode;                              // 0x0(0x1)
	struct LadderDefinition                                      LadderDefinition;                                  // 0x4(0x1c)
};


// Size 0x78
struct UpdateShipPreviewWorldEvent
{
public:
	class UClass*                                                ShipSize;                                          // 0x0(0x8)
	TArray<class Class*>                                         ShipCustomizationClasses;                          // 0x8(0x10)
	struct ShipPersistenceModel                                  DamageState;                                       // 0x18(0x50)
	struct FString                                               Name;                                              // 0x68(0x10)
};


// Size 0x38
struct HitRegRewindSnapshot
{
public:
	int                                                          CapsuleOwnerId;                                    // 0x0(0x4)
	struct FString                                               OwnerName;                                         // 0x8(0x10)
	float                                                        HalfHeight;                                        // 0x18(0x4)
	float                                                        Radius;                                            // 0x1c(0x4)
	float                                                        TimeStampModifier;                                 // 0x20(0x4)
	struct ReplicatedRewindBuffer                                RewindBuffer;                                      // 0x28(0x10)
};


// Size 0x48
struct ContestResultMessage
{
public:
	struct Guid                                                  SessionId;                                         // 0x0(0x10)
	struct FString                                               ContestType;                                       // 0x10(0x10)
	struct FString                                               ShipType;                                          // 0x20(0x10)
	TArray<struct ContestCrewResultModel>                        CrewResults;                                       // 0x30(0x10)
	struct DateTime                                              TimestampUtc;                                      // 0x40(0x8)
};


// Size 0xf8
struct FactionLeaveFightRewardEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct RewardRequestCrewGame                                 Recipient;                                         // 0x10(0xd0)
	struct Guid                                                  GuildId;                                           // 0xe0(0x10)
	int                                                          SandOfFateGoldLevel;                               // 0xf0(0x4)
	char                                                         PlayMode;                                          // 0xf4(0x1)
	char                                                         PlayModeVariant;                                   // 0xf5(0x1)
};


// Size 0x68
struct ShipSnapshotV1
{
public:
	int                                                          Id;                                                // 0x0(0x4)
	struct Vector                                                Position;                                          // 0x4(0xc)
	struct WheelSnapshot                                         Wheel;                                             // 0x10(0x8)
	struct CapstanSnapshot                                       Capstan;                                           // 0x18(0x4)
	TArray<struct MastSnapshot>                                  Masts;                                             // 0x20(0x10)
	TArray<struct CannonStateData>                               Cannons;                                           // 0x30(0x10)
	TArray<struct StorageContainerStateData>                     StorageContainers;                                 // 0x40(0x10)
};


// Size 0x108
struct CargoRunQuestDesc
{
public:
	struct TreasureMapTextDesc                                   PickupLocationHintText;                            // 0x88(0x48)
	TArray<class Class*>                                         CrateItemDesc;                                     // 0xd0(0x10)
	class UClass*                                                OverrideTreasureMapItemDesc;                       // 0xe0(0x8)
	struct Vector                                                TargetLocation;                                    // 0xe8(0xc)
	struct Vector                                                DirectionToApproachIsland;                         // 0xf4(0xc)
	bool                                                         IsCargoRunQuestV2;                                 // 0x100(0x1)
};


// Size 0x10
struct GuildLevelBatchResponseModel
{
public:
	TArray<struct GuildProgressModel>                            GuildLevels;                                       // 0x0(0x10)
};


// Size 0x40
struct UpdateInteractionEvent
{
public:
	struct InteractionDefinition                                 Definition;                                        // 0x0(0x40)
};


// Size 0xc8
struct QuestDistributionParams
{
public:
	char                                                         Method;                                            // 0x0(0x1)
	struct QuestDistributionAllAtOnceParams                      AllAtOnce;                                         // 0x8(0x40)
	struct QuestDistributionPerChapterParams                     PerChapter;                                        // 0x48(0x68)
	struct QuestDistributionFixedChaptersParams                  FixedChapters;                                     // 0xb0(0x18)
};


// Size 0x20
struct AccoladeProgressModel
{
public:
	TArray<struct AlignmentModel>                                Alignments;                                        // 0x0(0x10)
	TArray<struct AccoladeModel>                                 Accolades;                                         // 0x10(0x10)
};


// Size 0xc0
struct VoyageMembershipInfo
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct Guid                                                  Id;                                                // 0x38(0x10)
	TArray<struct QuestInfo>                                     QuestStatus;                                       // 0x48(0x10)
	class UClass*                                                Company;                                           // 0x58(0x8)
	bool                                                         IsEmergent;                                        // 0x60(0x1)
	bool                                                         IsTale;                                            // 0x61(0x1)
	bool                                                         IsOnDemand;                                        // 0x62(0x1)
	bool                                                         IsUtilityVoyage;                                   // 0x63(0x1)
	char                                                         EmergentSource;                                    // 0x64(0x1)
	struct ViewVoyageBanners                                     ViewVoyageBanners;                                 // 0x65(0x3)
	bool                                                         DoNotNotifyParticipantsOnVoyageComplete;           // 0x68(0x1)
	int                                                          Rank;                                              // 0x6c(0x4)
	TArray<struct PlayerStat>                                    VoyageBegunStats;                                  // 0x70(0x10)
	TArray<struct PlayerStat>                                    VoyageCompletionStats;                             // 0x80(0x10)
	TArray<struct PlayerStat>                                    DiveVoyageCompletionStats;                         // 0x90(0x10)
	TArray<struct PlayerStat>                                    ReapersMarkCompletionStats;                        // 0xa0(0x10)
	TArray<struct VoyageCompletionReward>                        VoyageCompletionRewards;                           // 0xb0(0x10)
};


// Size 0xb8
struct AthenaAnimationWeapon
{
public:
	struct AthenaAnimationActiveItemComplexAnimData              AnimData;                                          // 0x18(0x38)
	bool                                                         Attacking;                                         // 0x50(0x1)
	bool                                                         NewAttack;                                         // 0x51(0x1)
	struct AthenaAnimationWeaponData                             WeaponData;                                        // 0x58(0x48)
};


// Size 0x28
struct WieldableBookRepInfo
{
public:
	int                                                          LeftPageIndex;                                     // 0x0(0x4)
	TArray<int>                                                  CurrentBookContents;                               // 0x8(0x10)
	TArray<struct WieldableBookPageLayoutRepInfo>                ProcPageList;                                      // 0x18(0x10)
};


// Size 0x100
struct VoyageParticipantViewData
{
public:
	struct FText                                                 Title;                                             // 0x0(0x38)
	struct Guid                                                  Id;                                                // 0x38(0x10)
	int                                                          ChapterIndex;                                      // 0x48(0x4)
	int                                                          ChapterCount;                                      // 0x4c(0x4)
	int                                                          ActiveQuestCount;                                  // 0x50(0x4)
	char                                                         History;                                           // 0x54(0x1)
	class UClass*                                                Company;                                           // 0x58(0x8)
	bool                                                         IsEmergent;                                        // 0x60(0x1)
	bool                                                         IsTale;                                            // 0x61(0x1)
	bool                                                         IsDiveVoyage;                                      // 0x62(0x1)
	char                                                         EmergentSource;                                    // 0x63(0x1)
	struct ViewVoyageBanners                                     ViewVoyageBanners;                                 // 0x64(0x3)
	bool                                                         DoNotNotifyParticipantsOnVoyageComplete;           // 0x67(0x1)
	int                                                          Rank;                                              // 0x68(0x4)
	struct NetActorPtr                                           PlayerStateOfDiscoverer;                           // 0x6c(0x14)
	bool                                                         IsDiscovererMe;                                    // 0x80(0x1)
	struct FName                                                 ChestRarity;                                       // 0x84(0x8)
	bool                                                         PlayAudio;                                         // 0x8c(0x1)
	int                                                          ChestDiscoveredId;                                 // 0x90(0x4)
	class PopUpMessageDesc*                                      PopUpDesc;                                         // 0x98(0x8)
	int                                                          CollectCratesPopUpId;                              // 0xa0(0x4)
	TArray<struct PlayerStat>                                    VoyageBegunStats;                                  // 0xa8(0x10)
	TArray<struct PlayerStat>                                    VoyageCompletionStats;                             // 0xb8(0x10)
	TArray<struct PlayerStat>                                    DiveVoyageCompletionStats;                         // 0xc8(0x10)
	TArray<struct PlayerStat>                                    ReapersMarkCompletionStats;                        // 0xd8(0x10)
	TArray<struct VoyageCompletionReward>                        VoyageCompletionRewards;                           // 0xe8(0x10)
	char                                                         VoyageHintType;                                    // 0xf8(0x1)
};


// Size 0x10
struct CompanyReputationProgressModelCollection
{
public:
	TArray<struct CompanyReputationProgressModel>                CompanyProgress;                                   // 0x0(0x10)
};


// Size 0x358
struct AthenaAnimationAI
{
public:
	bool                                                         SpawnAnimationActive;                              // 0x0(0x1)
	bool                                                         SpawnAnimationReadyToBegin;                        // 0x1(0x1)
	class AnimSequence*                                          AISpawn;                                           // 0x8(0x8)
	class AnimSequence*                                          AIDespawn;                                         // 0x10(0x8)
	float                                                        AIAnimationSpawnTime;                              // 0x18(0x4)
	bool                                                         AISpawnOnLand;                                     // 0x1c(0x1)
	bool                                                         AIFleeActive;                                      // 0x1d(0x1)
	struct AthenaAnimationSkeletonSensingParams                  AISensing;                                         // 0x20(0x38)
	struct AthenaAnimationSkeletonEmoteActionParams              AIEmoteActions;                                    // 0x58(0x38)
	struct AthenaAnimationSkeletonShipCaptainParams              SkeletonShipCaptainParams;                         // 0x90(0x60)
};


// Size 0xd0
struct WeaponProjectileParams
{
public:
	float                                                        Damage;                                            // 0x0(0x4)
	float                                                        DamageMultiplierAtMaximumRange;                    // 0x4(0x4)
	float                                                        LifeTime;                                          // 0x8(0x4)
	float                                                        TrailFadeOutTime;                                  // 0xc(0x4)
	float                                                        Velocity;                                          // 0x10(0x4)
	float                                                        TimeBeforeApplyingGravity;                         // 0x14(0x4)
	float                                                        GravityFalloffTimeScalar;                          // 0x18(0x4)
	float                                                        DownForceVelocityFractionPerSecond;                // 0x1c(0x4)
	float                                                        VelocityDampeningPerSecond;                        // 0x20(0x4)
	struct LinearColor                                           Color;                                             // 0x24(0x10)
	class UClass*                                                ProjectileId;                                      // 0x38(0x8)
	char                                                         HealthChangeReason;                                // 0x40(0x1)
	struct WeaponProjectileEffectParams                          ProjectileEffects;                                 // 0x44(0x6c)
	int                                                          SuggestedMaxSimulationIterations;                  // 0xb0(0x4)
	float                                                        SuggestedMinTickTimeSecs;                          // 0xb4(0x4)
	float                                                        SuggestedMaxSimulationTimeStep;                    // 0xb8(0x4)
	int                                                          SuggestedFixedTimestepMaxSimulationIterations;     // 0xbc(0x4)
	float                                                        SuggestedFixedTimestepMinTickTimeSecs;             // 0xc0(0x4)
	float                                                        SuggestedFixedSimulationTimeStep;                  // 0xc4(0x4)
	bool                                                         DrawTrail;                                         // 0xc8(0x1)
};


// Size 0x20
struct EventCharacterFootExitWater
{
public:
	struct CharacterFootWaterImpactResult                        Result;                                            // 0x0(0x20)
};


// Size 0x48
struct RegionMapData
{
public:
	struct Vector2D                                              RegionCenter;                                      // 0x0(0x8)
	struct Vector2D                                              RegionMin;                                         // 0x8(0x8)
	struct Vector2D                                              RegionMax;                                         // 0x10(0x8)
	struct Vector2D                                              RegionExtents;                                     // 0x18(0x8)
	struct Vector2D                                              CenterOffset;                                      // 0x20(0x8)
	float                                                        DistanceScaling;                                   // 0x28(0x4)
	float                                                        MapRotation;                                       // 0x2c(0x4)
	float                                                        GlobalTextureScaling;                              // 0x30(0x4)
	TArray<struct RegionMapIslandData>                           IslandData;                                        // 0x38(0x10)
};


// Size 0x10
struct ArmoryItemLoadoutUpdatedEvent
{
public:
	TArray<struct ChestTabViewModel>                             ItemLoadout;                                       // 0x0(0x10)
};


// Size 0x60
struct TunnelCreatureDiorama
{
public:
	struct Transform                                             DioramaTransform;                                  // 0x0(0x30)
	float                                                        ChanceToSpawnCreatures;                            // 0x30(0x4)
	class InvasionTunnelSceneryCreatureDioramaGroup*             CreaturePool;                                      // 0x38(0x8)
	bool                                                         OverrideCreatureDioramaTypes;                      // 0x40(0x1)
	struct WeightedTunnelCreatureDioramaCollection               OverrideCreaturePool;                              // 0x48(0x18)
};


// Size 0x18
struct MerchantQuestRequiredItemsRankEntry
{
public:
	int                                                          Rank;                                              // 0x0(0x4)
	int                                                          Payout;                                            // 0x4(0x4)
	TArray<struct MerchantQuestRequiredItemsGroupList>           RequiredItems;                                     // 0x8(0x10)
};


// Size 0x40
struct StorageContainerReplicatedContainerNodes
{
public:
	uint32                                                       ResponseCounter;                                   // 0x0(0x4)
	struct StorageContainerBackingStore                          ContainerNodes;                                    // 0x8(0x38)
};


// Size 0xa0
struct ControlPulleyActionStateConstructionInfo
{
public:
	char                                                         ControllableType;                                  // 0x58(0x1)
	class UClass*                                                AnalogInputId;                                     // 0x60(0x8)
	struct ControlPulleyActionStateParams                        ActionStateParamsOverride;                         // 0x68(0x34)
	bool                                                         UseActionStateParamsOverride;                      // 0x9c(0x1)
};


// Size 0x70
struct RiddleQuestGateDesc
{
public:
	char                                                         RiddleLocation;                                    // 0x0(0x1)
	char                                                         RiddleActionLocationOffset;                        // 0x1(0x1)
	char                                                         RiddleAction;                                      // 0x2(0x1)
	struct TreasureMapTextDesc                                   Text;                                              // 0x8(0x48)
	class Landmark*                                              Landmark;                                          // 0x50(0x8)
	struct Vector                                                TargetPositionIfNotLandmark;                       // 0x58(0xc)
	struct FName                                                 NonVagueNonUniqueLandmarkPhraseId;                 // 0x64(0x8)
};


// Size 0x10
struct ShipCustomizationLoadoutPartCustomizations
{
public:
	TArray<struct PartDesc>                                      Parts;                                             // 0x0(0x10)
};


// Size 0x38
struct RetrieveAllPiratesRequestSuccessEvent
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	TArray<struct PirateProfile>                                 PirateProfiles;                                    // 0x18(0x10)
	struct Guid                                                  RequestID;                                         // 0x28(0x10)
};


// Size 0xd8
struct OpenShopFrontEvent
{
public:
	struct ShopDefinition                                        ShopDefinition;                                    // 0x0(0xd8)
};


// Size 0x38
struct EmblemSetInformation
{
public:
	bool                                                         LockedStatus;                                      // 0x0(0x1)
	TArray<String>                                               LockedDescriptions;                                // 0x8(0x10)
	struct FString                                               IconType;                                          // 0x18(0x10)
	TArray<struct EmblemInformation>                             Emblems;                                           // 0x28(0x10)
};


// Size 0x40
struct SeasonChallengeGroupInfo
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               LocalizedTitle;                                    // 0x10(0x10)
	struct FString                                               LocalizedCopy;                                     // 0x20(0x10)
	TArray<struct SeasonChallengeInfo>                           Challenges;                                        // 0x30(0x10)
};


// Size 0x30
struct AggressiveGhostShipShotSelection
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	class UClass*                                                ProjectileClass;                                   // 0x8(0x8)
	TArray<struct AggressiveGhostShipDifficultyShipSizeTargetSelection> ShipSizeTargetSelection;                           // 0x10(0x10)
	TArray<struct AggressiveGhostShipDifficultyTargetSelection>  LongRangeTargetSelection;                          // 0x20(0x10)
};


// Size 0x4e8
struct QuestParams
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	struct XMarksTheSpotQuestParams                              XMarksTheSpot;                                     // 0x8(0xa0)
	struct RiddleQuestParams                                     Riddle;                                            // 0xa8(0x58)
	struct BountyQuestParams                                     Bounty;                                            // 0x100(0x1a8)
	struct MerchantQuestParams                                   Merchant;                                          // 0x2a8(0xf0)
	struct CargoRunQuestParams                                   CargoRun;                                          // 0x398(0xe0)
	struct TaleQuestParams                                       Tale;                                              // 0x478(0x68)
	struct MatchmakingQuestParams                                Matchmake;                                         // 0x4e0(0x1)
	struct StagingQuestParams                                    Staging;                                           // 0x4e1(0x1)
	struct EmergantVoyageQuestParams                             EmergantVoyage;                                    // 0x4e2(0x1)
	struct RewardQuestParams                                     Reward;                                            // 0x4e3(0x1)
};


// Size 0x58
struct PlayerModerationReportSubmitBoxedRPC
{
public:
	struct PlayerModerationReportSubmitRequest                   RequestedReportPayload;                            // 0x18(0x40)
};


// Size 0x10
struct SpeechAccessibilityModel
{
public:
	TArray<struct SpeechAccessibilityProfileUser>                ProfileUsers;                                      // 0x0(0x10)
};


// Size 0x10
struct ContestIslandArchetype
{
public:
	TArray<struct WeightedContestIslandData>                     AvailableIslands;                                  // 0x0(0x10)
};


// Size 0x40
struct ShipPersistenceModelReceivedFromLoadoutServicesTelemetryEvent
{
public:
	struct GetShipLoadoutPersistenceResponseModel                ShipLoadoutPersistenceModel;                       // 0x0(0x40)
};


// Size 0x80
struct UseLadderActionStateConstructionInfo
{
public:
	float                                                        StartingInteractionHeight;                         // 0x58(0x4)
	char                                                         ClimbId;                                           // 0x5c(0x1)
	struct LadderDefinition                                      LadderDefinition;                                  // 0x60(0x1c)
};


// Size 0x1c8
struct RemotePreferencesModel
{
public:
	struct RemotePreferences                                     Preferences;                                       // 0x0(0x1c8)
};


// Size 0x1f8
struct EmergentContestVoyageRecipe
{
public:
	bool                                                         IsSharableVoyage;                                  // 0x180(0x1)
	struct ContestZoneDistribution                               WeightedContestZonesToActivate;                    // 0x188(0x10)
	struct ContestTimerData                                      ContestVoyageTime;                                 // 0x198(0x18)
	struct StringClassReference                                  ScoreSystemToLoad;                                 // 0x1b0(0x10)
	struct FText                                                 ContestArenaName;                                  // 0x1c0(0x38)
};


// Size 0x1b0
struct RequestOpenCaptainsShopEvent
{
public:
	struct ShopDefinition                                        VoyagesDefinition;                                 // 0x0(0xd8)
	struct ShopDefinition                                        ConsumablesDefinition;                             // 0xd8(0xd8)
};


// Size 0x40
struct PremiumStoreItemsView
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	TArray<struct PremiumStoreOffer>                             Items;                                             // 0x10(0x10)
	struct FString                                               TopBannerUrl;                                      // 0x20(0x10)
	struct FString                                               BottomBannerUrl;                                   // 0x30(0x10)
};


// Size 0x48
struct EventPlayerTextChatMessageUINotification
{
public:
	struct PlayerTextChatMessage                                 PlayerTextChatMessage;                             // 0x0(0x48)
};


// Size 0x100
struct AthenaAnimationDeath
{
public:
	struct AthenaAnimationDeathData                              DeathData;                                         // 0x8(0x38)
	struct AthenaAnimationDeathAnimData                          DeathAnimData;                                     // 0x40(0x40)
	class AthenaAnimationDeathDataAsset*                         DeathDataAsset;                                    // 0x80(0x8)
};


// Size 0x10
struct GetGuildOverviewsForInvitesResponseModel
{
public:
	TArray<struct GuildOverviewForInvite>                        GuildOverviews;                                    // 0x0(0x10)
};


// Size 0x120
struct FaunaAnimationBaseStructure
{
public:
	TArray<class AnimSequence*>                                  Idle;                                              // 0x0(0x10)
	TArray<class BlendSpace1D*>                                  Locomotion;                                        // 0x10(0x10)
	struct FaunaAnimationTurningStructure                        Turning;                                           // 0x20(0x10)
	struct FaunaAnimationStartledStructure                       Startled;                                          // 0x30(0x18)
	TArray<class BlendSpace1D*>                                  Impact;                                            // 0x48(0x10)
	TArray<class AnimSequence*>                                  DyingLoop;                                         // 0x58(0x10)
	TArray<class AnimSequence*>                                  Death;                                             // 0x68(0x10)
	TArray<class AnimSequence*>                                  Special;                                           // 0x78(0x10)
	struct FaunaAnimationPigStarvingStructure                    PigStarving;                                       // 0x88(0x30)
	struct FaunaAnimationEatingStructure                         Eating;                                            // 0xb8(0x10)
	struct FaunaAnimationSnakeAttack                             SnakeAttack;                                       // 0xc8(0x58)
};


// Size 0x40
struct AdditionalWave
{
public:
	TArray<struct AdditionalCaptainTarget>                       TargetOptions;                                     // 0x0(0x10)
	struct WeightedProbabilityRange                              NumberOfTargets;                                   // 0x10(0x20)
	bool                                                         RandomSelect;                                      // 0x30(0x1)
	class UClass*                                                AICombatDialogue;                                  // 0x38(0x8)
};


// Size 0xc0
struct CaptainsLogbookServiceCache
{
public:
	struct FString                                               ShipName;                                          // 0x0(0x10)
	int                                                          ScrambledShipNameIndex;                            // 0x10(0x4)
	int                                                          ShipTitleIndex;                                    // 0x14(0x4)
	struct FString                                               GuildName;                                         // 0x18(0x10)
	struct FString                                               GuildMotto;                                        // 0x28(0x10)
	struct FString                                               GuildIcon;                                         // 0x38(0x10)
	struct CaptainsLogCrewSessionStatsEntry                      StatsEntry;                                        // 0x48(0x24)
	TArray<struct CaptainsLogbookCrewMember>                     CrewMembers;                                       // 0x70(0x10)
	char                                                         ShipType;                                          // 0x80(0x1)
	TArray<struct NetAccoladeModel>                              ShipAccolades;                                     // 0x88(0x10)
	TArray<struct CrewEventLogEntry>                             CrewEventLog;                                      // 0x98(0x10)
	bool                                                         IsValid;                                           // 0xa8(0x1)
	bool                                                         IsRuinedLog;                                       // 0xa9(0x1)
	bool                                                         IsGuildLog;                                        // 0xaa(0x1)
	struct Guid                                                  GuildId;                                           // 0xac(0x10)
};


// Size 0x10
struct PetChestPetLoadoutUpdatedEvent
{
public:
	TArray<struct ChestTabViewModel>                             Loadout;                                           // 0x0(0x10)
};


// Size 0xc0
struct VoyageLocationParams
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	struct VoyageLocationFixedParams                             Fixed;                                             // 0x4(0x8)
	struct VoyageLocationRandomParams                            Random;                                            // 0x10(0x58)
	struct VoyageLocationCompetitiveVoyageParams                 CompetitiveVoyage;                                 // 0x68(0x58)
};


// Size 0x80
struct StorageContainerContentModifierEntry
{
public:
	struct StoryFlagContainer                                    StoryFlagContainer;                                // 0x0(0x18)
	struct FeatureFlag                                           FeatureFlag;                                       // 0x18(0xc)
	struct StorageContainerContentModifierConditions             Conditions;                                        // 0x28(0x38)
	struct StorageContainerContentModifier                       Modifiers;                                         // 0x60(0x20)
};


// Size 0x148
struct AllianceRewardRequestEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct Guid                                                  AllianceId;                                        // 0x10(0x10)
	struct Guid                                                  GuildId;                                           // 0x20(0x10)
	struct RewardRequestCrewGame                                 PrimaryRecipient;                                  // 0x30(0xd0)
	TArray<struct RewardRequestCrewGame>                         SecondaryRecipients;                               // 0x100(0x10)
	struct FName                                                 RewardId;                                          // 0x110(0x8)
	uint32                                                       ScoreValue;                                        // 0x118(0x4)
	struct FName                                                 CompanyAffiliation;                                // 0x11c(0x8)
	struct Guid                                                  BootyId;                                           // 0x124(0x10)
	struct FName                                                 NPCName;                                           // 0x134(0x8)
	char                                                         NotifyPlayer;                                      // 0x13c(0x1)
	char                                                         RewardGold;                                        // 0x13d(0x1)
	char                                                         RewardXP;                                          // 0x13e(0x1)
	char                                                         RewardSeasonRenown;                                // 0x13f(0x1)
	char                                                         RewardFactionAllegiance;                           // 0x140(0x1)
	char                                                         IsSovereignHandIn;                                 // 0x141(0x1)
};


// Size 0x1e8
struct RankOffer
{
public:
	struct ShopOffer                                             ShopOffer;                                         // 0x0(0x1e0)
	int                                                          LevelRequirement;                                  // 0x1e0(0x4)
};


// Size 0x20
struct AshenWindsSkullRewardLevel
{
public:
	float                                                        MaximumChargePercentage;                           // 0x0(0x4)
	struct RewardId                                              DefaultRewardId;                                   // 0x4(0x8)
	TArray<struct CompanySpecificBootyReward>                    CompanyRewardIds;                                  // 0x10(0x10)
};


// Size 0x38
struct SessionCreationCrewResponseModel
{
public:
	struct FString                                               SessionName;                                       // 0x0(0x10)
	struct SessionCreationCrewModel                              Crew;                                              // 0x10(0x28)
};


// Size 0x30
struct EventShopOffersEvent
{
public:
	TArray<struct ShopOffer>                                     Offers;                                            // 0x0(0x10)
	TArray<String>                                               Categories;                                        // 0x10(0x10)
	TArray<struct ShopOffer>                                     GildedVoyages;                                     // 0x20(0x10)
};


// Size 0x20
struct AccoladeProgressBreakdownShipModel
{
public:
	TArray<struct AccoladeBreakDownTotalModel>                   Totals;                                            // 0x0(0x10)
	TArray<struct AccoladePirateBreakDownModel>                  Pirates;                                           // 0x10(0x10)
};


// Size 0x60
struct SharedShovelParams
{
public:
	struct ShovelSurfaceDigType                                  DigSurfaceDigType;                                 // 0x0(0x10)
	char                                                         SandSurfaceType;                                   // 0x10(0x1)
	char                                                         WetSandSurfaceType;                                // 0x11(0x1)
	float                                                        MaxHeightDifferenceToNotBeConsideredWetSand;       // 0x14(0x4)
	struct Vector                                                DigPosOffsetFromPlayerPos;                         // 0x18(0xc)
	float                                                        SurfaceTypeRaycastLength;                          // 0x24(0x4)
	float                                                        MaxSurfaceAngleForDig;                             // 0x28(0x4)
	float                                                        InitialSphereCastRadiusForSuccessfulDig;           // 0x2c(0x4)
	char                                                         ItemProxyCollisionChannel;                         // 0x30(0x1)
	float                                                        SphereRadiusForItemProxySweep;                     // 0x34(0x4)
	float                                                        RequiredObstacleFreeRadiusForSuccessfulDig;        // 0x38(0x4)
	float                                                        ObstacleCheckStartOffsetZFromSphereTestPos;        // 0x3c(0x4)
	int                                                          NumSamplesForBlockingSurfacesTest;                 // 0x40(0x4)
	float                                                        MaxWaterDepthToStartSuccessfulDig;                 // 0x44(0x4)
	char                                                         HitTestTraceChannel;                               // 0x48(0x1)
	float                                                        MinPlanarTestRadius;                               // 0x4c(0x4)
	int                                                          NumSamplesForPlanarityTest;                        // 0x50(0x4)
	float                                                        MaxBumpinessForPlanarityTestInCm;                  // 0x54(0x4)
	float                                                        AssumedPlayerWaistHeight;                          // 0x58(0x4)
	bool                                                         bDrawDebug;                                        // 0x5c(0x1)
};


// Size 0x38
struct SkeletonCustomAnimationDataStructure
{
public:
	TArray<struct OneShotAnimationElement>                       OneShotSequences;                                  // 0x0(0x10)
	TArray<struct ContinuousAnimationElement>                    ContinuousSequences;                               // 0x10(0x10)
	class NPCHeldObjectData*                                     WieldableCosmeticItemList;                         // 0x20(0x8)
	TArray<class WwiseEvent*>                                    AudioEvents;                                       // 0x28(0x10)
};


// Size 0x120
struct CreatePirateRequestSuccessEvent
{
public:
	struct UniqueNetIdRepl                                       UserId;                                            // 0x0(0x18)
	struct PirateProfile                                         PirateProfile;                                     // 0x18(0xf8)
	struct Guid                                                  RequestID;                                         // 0x110(0x10)
};


// Size 0x348
struct CatalogOffer
{
public:
	struct Guid                                                  OfferId;                                           // 0x0(0x10)
	struct FText                                                 DisplayName;                                       // 0x10(0x38)
	struct FText                                                 DisplayDescription;                                // 0x48(0x38)
	uint32                                                       Price;                                             // 0x80(0x4)
	struct FString                                               CurrencyType;                                      // 0x88(0x10)
	TArray<String>                                               AssetPaths;                                        // 0x98(0x10)
	struct FString                                               Thumbnail;                                         // 0xa8(0x10)
	TArray<String>                                               PurchaseStats;                                     // 0xb8(0x10)
	struct CatalogOfferPrerequisites                             Prerequisites;                                     // 0xc8(0x78)
	struct CatalogOfferPrerequisites                             ExclusionConditions;                               // 0x140(0x78)
	char                                                         Availability;                                      // 0x1b8(0x1)
	map                                                          MetaData;                                          // 0x1c0(0x50)
	struct PremiumCatalogOfferData                               Premium;                                           // 0x210(0x128)
	struct FString                                               Sig;                                               // 0x338(0x10)
};


// Size 0x10
struct EquipmentChestItemLoadoutUpdatedEvent
{
public:
	TArray<struct ChestTabViewModel>                             ItemLoadout;                                       // 0x0(0x10)
};


// Size 0x60
struct EquipWeaponOnServerRpc
{
public:
	class ProjectileWeapon*                                      Weapon;                                            // 0x18(0x8)
	struct EquipRequest                                          EquipRequest;                                      // 0x20(0x40)
};


// Size 0x120
struct RewardRequestForScoreMessage
{
public:
	struct FName                                                 ScoreId;                                           // 0x0(0x8)
	int                                                          ScoreValue;                                        // 0x8(0x4)
	struct RewardRequestCrew                                     Recipient;                                         // 0x10(0xd0)
	struct Guid                                                  RequestID;                                         // 0xe0(0x10)
	struct FName                                                 CompanyAffiliation;                                // 0xf0(0x8)
	struct Guid                                                  BootyId;                                           // 0xf8(0x10)
	struct Guid                                                  GuildId;                                           // 0x108(0x10)
	bool                                                         NotifyPlayer;                                      // 0x118(0x1)
	char                                                         PlayMode;                                          // 0x119(0x1)
	char                                                         PlayModeVariant;                                   // 0x11a(0x1)
	bool                                                         IsSovereignHandIn;                                 // 0x11b(0x1)
};


// Size 0x68
struct Loadout
{
public:
	struct ItemLoadout                                           ItemLoadout;                                       // 0x0(0x20)
	struct ClothingLoadout                                       ClothingLoadout;                                   // 0x20(0x30)
	struct PetLoadout                                            PetLoadout;                                        // 0x50(0x18)
};


// Size 0x20
struct AccoladeProgressBreakdownPirateModel
{
public:
	TArray<struct AccoladeBreakDownTotalModel>                   Totals;                                            // 0x0(0x10)
	TArray<struct AccoladeShipBreakDownModel>                    Ships;                                             // 0x10(0x10)
};


// Size 0xf8
struct SittingActionStateConstructionInfo
{
public:
	struct SittingActionStateParams                              SittingActionStateParams;                          // 0x58(0xa0)
};


// Size 0x218
struct EventUserGameSettingsResponse
{
public:
	struct PersistentUserGameSettings                            CurrentSettings;                                   // 0x0(0x218)
};


// Size 0x140
struct QuestTableCompanyVoyageCategory
{
public:
	struct FString                                               CompanyVoyageCategoryId;                           // 0x0(0x10)
	struct FText                                                 DisplayName;                                       // 0x10(0x38)
	struct FString                                               IconUrl;                                           // 0x48(0x10)
	bool                                                         IsNew;                                             // 0x58(0x1)
	bool                                                         IsLocked;                                          // 0x59(0x1)
	TArray<struct Text>                                          LockedDescriptions;                                // 0x60(0x10)
	bool                                                         IsInfoCategory;                                    // 0x70(0x1)
	struct QuestTableCompanyVoyageInfoCategory                   InfoContent;                                       // 0x78(0xb8)
	TArray<struct QuestTableCompanyVoyage>                       CompanyVoyages;                                    // 0x130(0x10)
};


// Size 0x50
struct GetCombinedEntitlementsRequestModel
{
public:
	TArray<String>                                               ShipIds;                                           // 0x0(0x10)
	TArray<struct SignedGuildId>                                 SignedGuildIds;                                    // 0x10(0x10)
	TArray<String>                                               EntitlementIdsFilter;                              // 0x20(0x10)
	TArray<struct SignedShipId>                                  SignedShipIds;                                     // 0x30(0x10)
	struct FString                                               Device;                                            // 0x40(0x10)
};


// Size 0x58
struct PetBreedViewModel
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	struct FString                                               Icon;                                              // 0x10(0x10)
	struct FString                                               Description;                                       // 0x20(0x10)
	bool                                                         HasNewStuff;                                       // 0x30(0x1)
	bool                                                         IsOwned;                                           // 0x31(0x1)
	TArray<struct ShopOffer>                                     Offers;                                            // 0x38(0x10)
	TArray<struct CategoryTab>                                   Categories;                                        // 0x48(0x10)
};


// Size 0x108
struct ProjectileQueuedEffect
{
public:
	int                                                          HitCount;                                          // 0x0(0x4)
	struct HitResult                                             HitResult;                                         // 0x4(0x80)
	struct WeaponProjectileEffectParams                          Effects;                                           // 0x84(0x6c)
	struct Vector                                                InitialShootingPosition;                           // 0xf0(0xc)
	class UClass*                                                DamagerType;                                       // 0x100(0x8)
};


// Size 0x10
struct ShipCustomizationChestShipCustomizationLoadoutUpdatedEvent
{
public:
	TArray<struct ChestTabViewModel>                             Loadout;                                           // 0x0(0x10)
};


// Size 0x180
struct ProjectileHitEvent
{
public:
	struct ImpactDamageEvent                                     DamageEvent;                                       // 0x0(0x58)
	struct HitResult                                             HitResult;                                         // 0x58(0x80)
	class UClass*                                                ProjectileId;                                      // 0xd8(0x8)
	struct WeaponProjectileEffectParams                          Effects;                                           // 0xe0(0x6c)
	struct Vector                                                InitialPosition;                                   // 0x14c(0xc)
	struct Guid                                                  TelemetryAttackId;                                 // 0x158(0x10)
	TArray<struct Vector>                                        TrailData;                                         // 0x168(0x10)
	double                                                       RewindTime;                                        // 0x178(0x8)
};


// Size 0x138
struct CompanyReputationSummary
{
public:
	struct ReputationCompanyDisplayInformation                   CompanyData;                                       // 0x0(0x110)
	struct CappedCount                                           Commendations;                                     // 0x110(0x8)
	struct CappedCount                                           Items;                                             // 0x118(0x8)
	struct CappedCount                                           Promotions;                                        // 0x120(0x8)
	struct CappedCount                                           FactionFigureheads;                                // 0x128(0x8)
	struct CappedCount                                           Titles;                                            // 0x130(0x8)
};


// Size 0x90
struct BootyItemStats
{
public:
	TArray<struct PlayerStat>                                    HandInPlayerStats;                                 // 0x0(0x10)
	TArray<struct PlayerStat>                                    HandInStolenPlayerStats;                           // 0x10(0x10)
	TArray<struct PlayerStat>                                    HandInAsPirateLegendPlayerStats;                   // 0x20(0x10)
	TArray<struct PlayerStat>                                    HandInOnSchedulePlayerStats;                       // 0x30(0x10)
	TArray<struct PlayerStat>                                    HandInAsPirateLegendOnSchedulePlayerStats;         // 0x40(0x10)
	TArray<struct EmissaryBootyItemStats>                        HandInAsEmissaryPlayerStats;                       // 0x50(0x10)
	TArray<struct EmissaryBootyItemStats>                        HandInAsMaxLevelEmissaryPlayerStats;               // 0x60(0x10)
	TArray<struct EmissaryBootyItemStats>                        HandInStolenAsEmissaryPlayerStats;                 // 0x70(0x10)
	TArray<struct EmissaryBootyItemStats>                        HandInStolenAsMaxLevelEmissaryPlayerStats;         // 0x80(0x10)
};


// Size 0xd0
struct FireRequest
{
public:
	class Actor*                                                 Instigator;                                        // 0x0(0x8)
	struct RemoteProjectileAim                                   RemoteAimData;                                     // 0x10(0x60)
	TArray<struct HitResult>                                     HitResults;                                        // 0x70(0x10)
	bool                                                         HitResultsAreFromShadowHitScan;                    // 0x80(0x1)
	TArray<struct FireRequestHitActorWorldTransform>             HitActorWorldTransforms;                           // 0x88(0x10)
	struct Guid                                                  TelemetryAttackId;                                 // 0x98(0x10)
	int                                                          InaccuracySeed;                                    // 0xa8(0x4)
	char                                                         WeaponState;                                       // 0xac(0x1)
	char                                                         PreviousWeaponState;                               // 0xad(0x1)
	char                                                         LastWeaponStateChangeReason;                       // 0xae(0x1)
	bool                                                         IsAimingButtonHeld;                                // 0xaf(0x1)
	struct Vector                                                WielderVelocityToInherit;                          // 0xb0(0xc)
	class Actor*                                                 HomingTarget;                                      // 0xc0(0x8)
	float                                                        GravityFalloffTimeScalar;                          // 0xc8(0x4)
};


// Size 0x28
struct KeySequence
{
public:
	class UClass*                                                VaultKeyDesc;                                      // 0x0(0x8)
	TArray<struct MechanismCheckpoint>                           ActiveToInactiveSequenceCheckpoints;               // 0x8(0x10)
	TArray<struct MechanismCheckpoint>                           InactiveToActiveSequenceCheckpoints;               // 0x18(0x10)
};


// Size 0x30
struct SessionCreationRequestModel
{
public:
	struct FString                                               PrivateServerId;                                   // 0x0(0x10)
	struct FString                                               HostId;                                            // 0x10(0x10)
	TArray<struct SessionCreationCrewModel>                      Crews;                                             // 0x20(0x10)
};


// Size 0x6c
struct CarouselPirateGroup
{
public:
	struct FName                                                 Name;                                              // 0x0(0x8)
	int                                                          Count;                                             // 0x8(0x4)
	struct FloatRange                                            Age;                                               // 0xc(0x10)
	struct FloatRange                                            Wonkiness;                                         // 0x1c(0x10)
	struct FloatRange                                            Dirt;                                              // 0x2c(0x10)
	struct CarouselPirateBodyshape                               MaleBodyShape;                                     // 0x3c(0x18)
	struct CarouselPirateBodyshape                               FemaleBodyShape;                                   // 0x54(0x18)
};


// Size 0x148
struct AllianceRewardRequestMessage
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct Guid                                                  AllianceId;                                        // 0x10(0x10)
	struct Guid                                                  GuildId;                                           // 0x20(0x10)
	struct RewardRequestCrew                                     PrimaryRecipient;                                  // 0x30(0xd0)
	TArray<struct RewardRequestCrew>                             SecondaryRecipients;                               // 0x100(0x10)
	struct FName                                                 RewardId;                                          // 0x110(0x8)
	uint32                                                       ScoreValue;                                        // 0x118(0x4)
	struct FName                                                 CompanyAffiliation;                                // 0x11c(0x8)
	struct Guid                                                  BootyId;                                           // 0x124(0x10)
	struct FName                                                 NPCName;                                           // 0x134(0x8)
	bool                                                         NotifyPlayer;                                      // 0x13c(0x1)
	char                                                         PlayMode;                                          // 0x13d(0x1)
	char                                                         PlayModeVariant;                                   // 0x13e(0x1)
	bool                                                         DontRewardCurrency;                                // 0x13f(0x1)
	bool                                                         DontRewardXp;                                      // 0x140(0x1)
	bool                                                         DontRewardSeasonXp;                                // 0x141(0x1)
	bool                                                         DontRewardAllegiance;                              // 0x142(0x1)
	bool                                                         SkipXpToAllegianceMultiplier;                      // 0x143(0x1)
	bool                                                         IsSovereignHandIn;                                 // 0x144(0x1)
};


// Size 0x10
struct CrewUpdateEvent
{
public:
	struct FrontendCrewDefinition                                CrewDefinition;                                    // 0x0(0x10)
};


// Size 0x20
struct ShipPartsCataloguePartCustomisations
{
public:
	struct FString                                               PartName;                                          // 0x0(0x10)
	TArray<struct ShipPartsCataloguePartCustomisation>           Customisations;                                    // 0x10(0x10)
};


// Size 0x18
struct PlayerBuriedItemServiceDataAssetMapStorePopulationSeaRegion
{
public:
	class UClass*                                                SeaId;                                             // 0x0(0x8)
	TArray<struct PlayerBuriedItemServiceDataAssetMapStorePopulationHaul> Hauls;                                             // 0x8(0x10)
};


// Size 0x80
struct CachedShipLoadout
{
public:
	struct Guid                                                  ShipId;                                            // 0x0(0x10)
	struct FString                                               Name;                                              // 0x10(0x10)
	TArray<struct ShipPartCustomizationModel>                    ShipPartCustomisations;                            // 0x20(0x10)
	struct ShipPersistenceModel                                  DamageState;                                       // 0x30(0x50)
};


// Size 0x20
struct PetLoadoutContainer
{
public:
	struct PetLoadout                                            Loadout;                                           // 0x0(0x18)
	bool                                                         HasBeenSet;                                        // 0x18(0x1)
};


// Size 0x310
struct AthenaAnimationBaseItemAnimations
{
public:
	struct AthenaAnimationObjectActionContinuousStruct           PrimaryActionStruct;                               // 0x0(0xa8)
	struct AthenaAnimationObjectActionContinuousStruct           AlternatePrimaryActionStruct;                      // 0xa8(0xa8)
	struct AthenaAnimationObjectActionContinuousStruct           SecondaryActionStruct;                             // 0x150(0xa8)
	struct AthenaAnimationObjectActionContinuousStruct           AlternateSecondaryActionStruct;                    // 0x1f8(0xa8)
	struct AthenaAnimationObjectFacial                           FacialActionStruct;                                // 0x2a0(0x70)
};


// Size 0xe0
struct ScoreRewardData
{
public:
	TArray<struct ScoreRewardWieldableItemData>                  WieldableItemScores;                               // 0x0(0x10)
	TArray<struct ScoreRewardShipPartData>                       ShipPartScores;                                    // 0x10(0x10)
	struct ScoreRewardValueData                                  KillingPlayerScore;                                // 0x20(0x30)
	struct ScoreRewardValueData                                  DownedPlayerScore;                                 // 0x50(0x30)
	struct ScoreRewardValueData                                  CrewShipSunkScore;                                 // 0x80(0x30)
	struct ScoreRewardValueData                                  DigUpChestScore;                                   // 0xb0(0x30)
};


// Size 0x58
struct CaptaincyRequestStartedSessionModel
{
public:
	struct FString                                               ShipType;                                          // 0x0(0x10)
	TArray<struct GuildSessionMember>                            SessionMembers;                                    // 0x10(0x10)
	struct FString                                               SessionId;                                         // 0x20(0x10)
	struct FString                                               SessionTemplateName;                               // 0x30(0x10)
	struct FString                                               ServerForcedPlatform;                              // 0x40(0x10)
	bool                                                         CanInviteGuildMembers;                             // 0x50(0x1)
};


// Size 0x10
struct GetGuildInvitesResponseModel
{
public:
	TArray<struct GuildInvite>                                   InvitesPerGuild;                                   // 0x0(0x10)
};


// Size 0x18
struct WeightedVoyageLocationParams
{
public:
	char                                                         Filter;                                            // 0x0(0x1)
	float                                                        Weight;                                            // 0x4(0x4)
	TArray<struct VoyageLocationParams>                          Locations;                                         // 0x8(0x10)
};


// Size 0xe8
struct CaptainsLogbookDataCache
{
public:
	struct CaptainsLogbookServiceCache                           ServiceCache;                                      // 0x0(0xc0)
	struct ShipIdentity                                          ShipIdentity;                                      // 0xc0(0x28)
};


// Size 0x2b8
struct PremiumStoreBundleSetView
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               PageTitle;                                         // 0x10(0x10)
	struct FString                                               PageIcon;                                          // 0x20(0x10)
	struct PremiumStoreBundleView                                Bundle;                                            // 0x30(0x228)
	struct PremiumStoreItemsView                                 Items;                                             // 0x258(0x40)
	struct FString                                               TopBannerUrl;                                      // 0x298(0x10)
	struct FString                                               BottomBannerUrl;                                   // 0x2a8(0x10)
};


// Size 0x20
struct RequestCompanyProgressSucceededEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	struct CompanyReputationProgressModelCollection              PirateCompanyProgress;                             // 0x10(0x10)
};


// Size 0x58
struct CrewManagementEvent
{
public:
	struct CrewManagementData                                    CrewDefinition;                                    // 0x0(0x58)
};


// Size 0x118
struct EmergentVoyageParticipantView
{
public:
	TArray<struct VoyageParticipantViewData>                     EmergentViews;                                     // 0x108(0x10)
};


// Size 0x20
struct DistanceThrottledRandomParticleSystemPickerEntry
{
public:
	float                                                        DistanceInMetres;                                  // 0x0(0x4)
	TArray<struct DistanceThrottledRandomParticleSystemPickerSurfaceTypeEntry> EffectsBySurfaceType;                              // 0x8(0x10)
	int                                                          MaxNumber;                                         // 0x18(0x4)
};


// Size 0x10
struct SessionCreationResponseModel
{
public:
	TArray<struct SessionCreationCrewResponseModel>              Crews;                                             // 0x0(0x10)
};


// Size 0x70
struct SeasonInfoModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               ThemeId;                                           // 0x10(0x10)
	struct DateTime                                              ActiveFrom;                                        // 0x20(0x8)
	struct DateTime                                              ActiveUntil;                                       // 0x28(0x8)
	struct FString                                               LocalizedTitle;                                    // 0x30(0x10)
	TArray<struct SeasonTierInfo>                                Tiers;                                             // 0x40(0x10)
	TArray<struct SeasonChallengeGroupInfo>                      ChallengeGroups;                                   // 0x50(0x10)
	TArray<struct SeasonGoalInfo>                                IndividualGoals;                                   // 0x60(0x10)
};


// Size 0x920
struct AthenaAnimationCoreObjectAnimations
{
public:
	struct AthenaAnimationObjectLocomotionAnimations             Locomotion;                                        // 0x0(0x40)
	struct AthenaAnimationObjectLocomotionAnimations             AlternateLocomotion;                               // 0x40(0x40)
	struct AthenaAnimationObjectJumpingAnimations                Jumping;                                           // 0x80(0x20)
	struct AthenaAnimationObjectJumpingAnimations                AlternateJumping;                                  // 0xa0(0x20)
	struct AthenaAnimationObjectEquipAnimations                  Equipping;                                         // 0xc0(0x40)
	struct AthenaAnimationObjectIdleAnimations                   Idles;                                             // 0x100(0x18)
	struct AthenaAnimationObjectIdleAnimations                   AlternateIdles;                                    // 0x118(0x18)
	struct AthenaAnimationObjectActionOneShot                    ActionPrimarySingle;                               // 0x130(0x48)
	struct AthenaAnimationObjectActionContinuous                 ActionPrimaryContinuous;                           // 0x178(0x150)
	bool                                                         PrimaryActionPitchOverride;                        // 0x2c8(0x1)
	struct AthenaAnimationObjectActionOneShotPitchOverride       ActionPrimarySinglePitchOverride;                  // 0x2d0(0x20)
	struct AthenaAnimationObjectActionContinuousPitchOverride    ActionPrimaryContinuousPitchOverride;              // 0x2f0(0xf0)
	struct AthenaAnimationObjectActionOneShot                    ActionSecondarySingle;                             // 0x3e0(0x48)
	struct AthenaAnimationObjectActionContinuous                 ActionSecondaryContinuous;                         // 0x428(0x150)
	bool                                                         SecondaryActionPitchOverride;                      // 0x578(0x1)
	struct AthenaAnimationObjectActionOneShotPitchOverride       ActionSecondarySinglePitchOverride;                // 0x580(0x20)
	struct AthenaAnimationObjectActionContinuousPitchOverride    ActionSecondaryContinuousPitchOverride;            // 0x5a0(0xf0)
	struct AthenaAnimationObjectMeleeV2                          MeleeV2;                                           // 0x690(0x140)
	class AnimSequence*                                          HandAdditive;                                      // 0x7d0(0x8)
	float                                                        HandAdditiveDeactivationBlendTime;                 // 0x7d8(0x4)
	struct Transform                                             OffsetLeftHand;                                    // 0x7e0(0x30)
	struct Transform                                             OffsetRightHand;                                   // 0x810(0x30)
	struct WieldAnimationParams                                  Params;                                            // 0x840(0x40)
	struct AthenaAnimationObjectFacial                           Facial;                                            // 0x880(0x70)
	bool                                                         RangedWeapon;                                      // 0x8f0(0x1)
	bool                                                         UseAlternateAsTransition;                          // 0x8f1(0x1)
	struct AthenaAnimationSkeletonKnockbackLocomotionStrength    KnockBack;                                         // 0x8f8(0x20)
	class AnimSequence*                                          ScreamStun;                                        // 0x918(0x8)
};


// Size 0x10
struct ShipPartsCatalogue
{
public:
	TArray<struct ShipPartsCataloguePartCustomisations>          Parts;                                             // 0x0(0x10)
};


// Size 0xa0
struct AggressiveGhostShipEncounterWaveDesc
{
public:
	bool                                                         BackfillActive;                                    // 0x0(0x1)
	int                                                          NumGrunts;                                         // 0x4(0x4)
	int                                                          NumGruntsToKill;                                   // 0x8(0x4)
	TArray<struct AggressiveGhostShipEncounterWaveFormationDesc> Formations;                                        // 0x10(0x10)
	struct WeightedProbabilityRangeOfRanges                      SpawnDelay;                                        // 0x20(0x30)
	struct WeightedProbabilityRangeOfRanges                      TimeBetweenBackfillSpawns;                         // 0x50(0x30)
	TArray<struct AggressiveGhostShipEncounterShipDesc>          GruntShipDescs;                                    // 0x80(0x10)
	class UClass*                                                WaveMusicZoneActorClass;                           // 0x90(0x8)
	char                                                         WaveAnnouncementType;                              // 0x98(0x1)
	bool                                                         PreventGoingToNextWaveUntilNotified;               // 0x99(0x1)
};


// Size 0x28
struct EventReputationDisplayInformationResponse
{
public:
	struct EventReputationDisplayMessageData                     MessageDetails;                                    // 0x0(0x18)
	TArray<struct CompanyReputationSummary>                      ReputationData;                                    // 0x18(0x10)
};


// Size 0x60
struct WorldSnapshotV1
{
public:
	TArray<struct CrewSnapshotV1>                                Crews;                                             // 0x10(0x10)
	TArray<struct ShipSnapshotV1>                                Ships;                                             // 0x20(0x10)
	TArray<struct IslandSnapshotV1>                              Islands;                                           // 0x30(0x10)
	TArray<struct RowboatSnapshotV1>                             Rowboats;                                          // 0x40(0x10)
	TArray<struct WorldEventSnapshotV1>                          WorldEvents;                                       // 0x50(0x10)
};


// Size 0x98
struct RiddleQuestDesc
{
public:
	TArray<struct RiddleQuestGateDesc>                           Gates;                                             // 0x28(0x10)
	float                                                        IslandRotation;                                    // 0x38(0x4)
	assetobject                                                  MapInventoryTexture;                               // 0x40(0x20)
	struct Vector                                                TreasureChestWorldSpaceLocation;                   // 0x60(0xc)
	class UClass*                                                TreasureChestDesc;                                 // 0x70(0x8)
	class ItemSpawnData*                                         TreasureSpawnData;                                 // 0x78(0x8)
	float                                                        DigRadius;                                         // 0x80(0x4)
	class AIBoobyTrapSpawner*                                    BoobyTrapSpawner;                                  // 0x88(0x8)
	class UClass*                                                OverrideTreasureMapItemDesc;                       // 0x90(0x8)
};


// Size 0x80
struct UICompanyPromotionData
{
public:
	struct FName                                                 CompanyId;                                         // 0x0(0x8)
	bool                                                         IsMaxRank;                                         // 0x8(0x1)
	bool                                                         PromotionReady;                                    // 0x9(0x1)
	struct FString                                               PromotionLockedReason;                             // 0x10(0x10)
	struct FString                                               ClaimPromotionLockedReason;                        // 0x20(0x10)
	int                                                          PromotionRequirementLevel;                         // 0x30(0x4)
	int                                                          PromotionRequirementDistinction;                   // 0x34(0x4)
	struct UIPromotionRewards                                    PromotionRewards;                                  // 0x38(0x40)
	bool                                                         IsValid;                                           // 0x78(0x1)
};


// Size 0x30
struct CaptainsLogPinnedAccoladeEntries
{
public:
	TArray<struct AccoladeModel>                                 Accolades;                                         // 0x0(0x10)
	struct AccoladeProgressModel                                 CachedProgress;                                    // 0x10(0x20)
};


// Size 0x50
struct EventCompanyReputationCampaignDetail
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	struct FString                                               Description;                                       // 0x10(0x10)
	struct FString                                               ImageUrl;                                          // 0x20(0x10)
	struct CappedCount                                           CommendationProgress;                              // 0x30(0x8)
	struct CappedCount                                           TitleProgress;                                     // 0x38(0x8)
	TArray<struct EmblemSetInformation>                          EmblemSets;                                        // 0x40(0x10)
};


// Size 0x198
struct CompanyScreenInformation
{
public:
	struct ReputationCompanyDisplayInformation                   CompanySummary;                                    // 0x0(0x110)
	struct CappedCount                                           CompanyProgression;                                // 0x110(0x8)
	struct FText                                                 CompanyFlavourText1;                               // 0x118(0x38)
	struct FText                                                 CompanyFlavourText2;                               // 0x150(0x38)
	TArray<struct EmblemSetInformation>                          EmblemSets;                                        // 0x188(0x10)
};


// Size 0x1f0
struct BountyQuestDesc
{
public:
	class AIBountySpawner*                                       Spawner;                                           // 0x28(0x8)
	class BountyMapLayout*                                       Layout;                                            // 0x30(0x8)
	struct TreasureMapTextDesc                                   Location;                                          // 0x38(0x48)
	TArray<struct TreasureMapTextDesc>                           Descriptions;                                      // 0x80(0x10)
	TArray<struct BountyMapTargetDesc>                           Targets;                                           // 0x90(0x10)
	TArray<class Class*>                                         BountyRewards;                                     // 0xa0(0x10)
	TArray<class ItemSpawnData*>                                 BountyRewardsSpawnData;                            // 0xb0(0x10)
	class Landmark*                                              Landmark;                                          // 0xc0(0x8)
	float                                                        IslandRotation;                                    // 0xc8(0x4)
	assetobject                                                  MapInventoryTexture;                               // 0xd0(0x20)
	struct AIBountySpawnerParams                                 SpawnerGeneratedData;                              // 0xf0(0xd0)
	class UClass*                                                OverrideTreasureMapItemDesc;                       // 0x1c0(0x8)
	struct Vector                                                AIExclusionZoneLocation;                           // 0x1c8(0xc)
	float                                                        AIExclusionZoneRadius;                             // 0x1d4(0x4)
	float                                                        AIExclusionZoneHeight;                             // 0x1d8(0x4)
	int                                                          TotaNumCrew;                                       // 0x1dc(0x4)
	int                                                          TotaNumCaptains;                                   // 0x1e0(0x4)
	int                                                          TotaNumLords;                                      // 0x1e4(0x4)
	float                                                        QuestEndDelay;                                     // 0x1e8(0x4)
	float                                                        AIExclusionZoneRemovalEndDelay;                    // 0x1ec(0x4)
};


// Size 0x10
struct EventCompanyDataResponse
{
public:
	TArray<struct UICompanyData>                                 CompanyData;                                       // 0x0(0x10)
};


// Size 0x208
struct CompanyShopOffersEvent
{
public:
	struct RankOffer                                             RankOffer;                                         // 0x0(0x1e8)
	TArray<struct VoyageOffer>                                   VoyageOffers;                                      // 0x1e8(0x10)
	TArray<struct ShopOffer>                                     ItemOffers;                                        // 0x1f8(0x10)
};


// Size 0xe8
struct EmblemSetDefinition
{
public:
	struct FString                                               FriendlyName;                                      // 0x0(0x10)
	struct FText                                                 Title;                                             // 0x10(0x38)
	struct FText                                                 Description;                                       // 0x48(0x38)
	struct FText                                                 CompletedDescription;                              // 0x80(0x38)
	float                                                        ValueArgScalar;                                    // 0xb8(0x4)
	TArray<struct EmblemRankDefinition>                          Emblems;                                           // 0xc0(0x10)
	class PopUpMessageDesc*                                      UnlockPopUp;                                       // 0xd0(0x8)
	class PopUpAudioDesc*                                        UnlockPopUpAudioOverrides;                         // 0xd8(0x8)
	bool                                                         GrantsTitleAfterLastUnlock;                        // 0xe0(0x1)
	bool                                                         Hidden;                                            // 0xe1(0x1)
	bool                                                         HiddenIfNoProgress;                                // 0xe2(0x1)
	bool                                                         NoPopUp;                                           // 0xe3(0x1)
	bool                                                         IsUnavailableDuringSaferSeas;                      // 0xe4(0x1)
};


// Size 0x50
struct AlignmentInformationModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               Key;                                               // 0x10(0x10)
	struct FString                                               LocalizedTitle;                                    // 0x20(0x10)
	struct FString                                               LocalizedCopy;                                     // 0x30(0x10)
	TArray<struct AccoladeInformationModel>                      Accolades;                                         // 0x40(0x10)
};


// Size 0x38
struct RemoteCommodityDemandData
{
public:
	struct FName                                                 TradeRouteId;                                      // 0x0(0x8)
	TArray<struct PeriodicCommodityMultipliers>                  TradeRoutes;                                       // 0x8(0x10)
	struct DateTime                                              OverrideFromDate;                                  // 0x18(0x8)
	struct DateTime                                              OverrideToDate;                                    // 0x20(0x8)
	TArray<struct CommodityDemandMultipliers>                    OverrideMultipliers;                               // 0x28(0x10)
};


// Size 0x138
struct MerchantMapContents
{
public:
	struct TreasureMapTextDesc                                   PickupLocation;                                    // 0x0(0x48)
	struct TreasureMapTextDesc                                   DeliveryLocation;                                  // 0x48(0x48)
	struct TreasureMapTextDesc                                   DeliverByTime;                                     // 0x90(0x48)
	struct TreasureMapTextDesc                                   PickupLocationHint;                                // 0xd8(0x48)
	struct FName                                                 DeliveryLocationIslandName;                        // 0x120(0x8)
	TArray<struct MerchantMapItemData>                           ItemData;                                          // 0x128(0x10)
};


// Size 0x120
struct FireLaunchableShotRpc
{
public:
	struct FireRequest                                           Request;                                           // 0x20(0xd0)
	class LaunchableShotActionComponent*                         Action;                                            // 0xf0(0x8)
	struct Vector                                                LocalWielderVelocity;                              // 0xf8(0xc)
	int64                                                        StartTime;                                         // 0x108(0x8)
	int64                                                        StopTime;                                          // 0x110(0x8)
};


// Size 0x1e8
struct QuestTableCompany
{
public:
	struct FString                                               CompanyId;                                         // 0x0(0x10)
	struct FText                                                 DisplayName;                                       // 0x10(0x38)
	struct FText                                                 Description;                                       // 0x48(0x38)
	struct QuestTableCompanySkin                                 Skin;                                              // 0x80(0x98)
	bool                                                         IsLocked;                                          // 0x118(0x1)
	TArray<struct Text>                                          LockedDescriptions;                                // 0x120(0x10)
	struct FText                                                 WarningText;                                       // 0x130(0x38)
	struct FText                                                 HeaderWarningText;                                 // 0x168(0x38)
	struct FText                                                 PromotionLockedReason;                             // 0x1a0(0x38)
	TArray<struct QuestTableCompanyVoyageCategory>               CompanyVoyagesCategories;                          // 0x1d8(0x10)
};


// Size 0x110
struct ProjectileHitScanVFX
{
public:
	struct Projectile                                            Projectile;                                        // 0x0(0x1c)
	struct WeaponProjectileParams                                AmmoParams;                                        // 0x20(0xd0)
	class UClass*                                                DamagerType;                                       // 0xf0(0x8)
};


// Size 0x48
struct ShipDesc
{
public:
	struct ShipMetadata                                          MetaData;                                          // 0x0(0x20)
	struct ShipTemplate                                          Template;                                          // 0x20(0x8)
	struct PartsCustomisation                                    Customisation;                                     // 0x28(0x20)
};


// Size 0x500
struct WeightedQuestParams
{
public:
	TArray<char>                                                 LocationFilters;                                   // 0x0(0x10)
	float                                                        Weight;                                            // 0x10(0x4)
	struct QuestParams                                           Params;                                            // 0x18(0x4e8)
};


// Size 0x100
struct FireWeaponOnServerRpc
{
public:
	struct FireRequest                                           FireRequest;                                       // 0x20(0xd0)
};


// Size 0x360
struct FaunaAnimationLocationStructure
{
public:
	struct FaunaAnimationBaseStructure                           OnLand;                                            // 0x0(0x120)
	struct FaunaAnimationBaseStructure                           OnSea;                                             // 0x120(0x120)
	struct FaunaAnimationBaseStructure                           Underwater;                                        // 0x240(0x120)
};


// Size 0x218
struct PetAnimationDataStructure
{
public:
	struct PetAnimationDataBeingHeld                             BeingHeld;                                         // 0x0(0x160)
	struct PetAnimationDataRoaming                               Roaming;                                           // 0x160(0xa0)
	class WeightedAnimationLoadOnDemandDataAsset*                WeightedAnimationLoadOnDemandDataRoaming;          // 0x200(0x8)
	class WeightedAnimationLoadOnDemandDataAsset*                WeightedAnimationLoadOnDemandDataHeld;             // 0x208(0x8)
	class WeightedAnimationLoadOnDemandDataAsset*                WeightedAnimationLoadOnDemandDataShow;             // 0x210(0x8)
};


// Size 0x10
struct GuildInvitesReceivedResponseEvent
{
public:
	TArray<struct GuildInviteData>                               Invites;                                           // 0x0(0x10)
};


// Size 0x10
struct ReputationDisplayInformation
{
public:
	TArray<struct CompanyReputationSummary>                      CompanyReputationSummaries;                        // 0x0(0x10)
};


// Size 0xf0
struct ThrowMeleeGrenadeRpc
{
public:
	float                                                        ClientWorldYaw;                                    // 0x18(0x4)
	float                                                        ClientWorldPitch;                                  // 0x1c(0x4)
	struct FireRequest                                           FireRequest;                                       // 0x20(0xd0)
};


// Size 0x10
struct UniversalDescription
{
public:
	TArray<struct UniversalDescriptionPage>                      Pages;                                             // 0x0(0x10)
};


// Size 0x250
struct MerchantQuestDesc
{
public:
	class MerchantMapLayout*                                     Layout;                                            // 0x28(0x8)
	struct FText                                                 PickupLocationLocalisedIslandName;                 // 0x30(0x38)
	struct FName                                                 DeliveryLocationIslandName;                        // 0x68(0x8)
	struct FText                                                 DeliveryLocationLocalisedIslandName;               // 0x70(0x38)
	struct TreasureMapTextDesc                                   PickupLocation;                                    // 0xa8(0x48)
	struct TreasureMapTextDesc                                   DeliveryLocation;                                  // 0xf0(0x48)
	struct TreasureMapTextDesc                                   DeliverByTimeText;                                 // 0x138(0x48)
	struct TreasureMapTextDesc                                   PickupLocationHintText;                            // 0x180(0x48)
	TArray<struct MerchantMapItemData>                           ItemData;                                          // 0x1c8(0x10)
	TArray<struct MerchantItemGroupDesc>                         ItemGroupDescs;                                    // 0x1d8(0x10)
	int                                                          TimeLimitInMinutes;                                // 0x1e8(0x4)
	struct GameTime                                              DeliverByTime;                                     // 0x1f0(0x8)
	class UClass*                                                OverrideTreasureMapItemDesc;                       // 0x1f8(0x8)
	bool                                                         IsMerchantQuestV2;                                 // 0x200(0x1)
	struct Vector                                                AIExclusionZoneLocation;                           // 0x204(0xc)
	float                                                        AIExclusionZoneRadius;                             // 0x210(0x4)
	float                                                        AIExclusionZoneHeight;                             // 0x214(0x4)
	TArray<struct Vector>                                        CrateSpawnLocations;                               // 0x218(0x10)
	struct Vector                                                TargetLocation;                                    // 0x228(0xc)
	struct Vector                                                DirectionToApproachIsland;                         // 0x234(0xc)
	struct Guid                                                  IslandSpawnLocationReservationId;                  // 0x240(0x10)
};


// Size 0x50
struct GameEventScheduleInfo
{
public:
	TArray<struct GameEventConfigurationInfo>                    Configs;                                           // 0x0(0x10)
	TArray<struct GameEventConfigurationInfo>                    MainConfigs;                                       // 0x10(0x10)
	TArray<struct GameEventCountInfo>                            GlobalConfig;                                      // 0x20(0x10)
	TArray<struct GameEventSettingsInfo>                         EventSettings;                                     // 0x30(0x10)
	char                                                         PlayMode;                                          // 0x40(0x1)
	struct FName                                                 Story;                                             // 0x44(0x8)
};


// Size 0xa8
struct GuildInviteReceivedEvent
{
public:
	struct GuildReceivedInviteResponse                           Invite;                                            // 0x0(0xa8)
};


// Size 0x48
struct PetSpeciesViewModel
{
public:
	struct FString                                               Name;                                              // 0x0(0x10)
	struct FString                                               Icon;                                              // 0x10(0x10)
	struct FString                                               Description;                                       // 0x20(0x10)
	bool                                                         HasNewStuff;                                       // 0x30(0x1)
	bool                                                         HasOwnedOffer;                                     // 0x31(0x1)
	TArray<struct PetBreedViewModel>                             Breeds;                                            // 0x38(0x10)
};


// Size 0x18
struct ShipHullDamageLevel
{
public:
	class UClass*                                                SpeedBand;                                         // 0x0(0x8)
	TArray<struct ShipHullDamageTypeEntry>                       Params;                                            // 0x8(0x10)
};


// Size 0xf8
struct LoadoutEntry
{
public:
	struct PirateIdentity                                        PirateIdentity;                                    // 0x0(0x78)
	struct Loadout                                               Loadout;                                           // 0x78(0x68)
	struct FString                                               Tag;                                               // 0xe0(0x10)
};


// Size 0x100
struct HitRegSnapshotProjectileRecord
{
public:
	class Actor*                                                 AttackingActor;                                    // 0x0(0x8)
	char                                                         ShotType;                                          // 0x8(0x1)
	double                                                       FireTime;                                          // 0x10(0x8)
	struct Vector                                                AimDirection;                                      // 0x18(0xc)
	struct Vector                                                AimPosition;                                       // 0x24(0xc)
	float                                                        BulletLifetime;                                    // 0x30(0x4)
	struct Transform                                             WeaponMeshTransform;                               // 0x40(0x30)
	class Object*                                                WeaponMesh;                                        // 0x70(0x8)
	int                                                          AttackGroupSize;                                   // 0x78(0x4)
	int                                                          SubAttackGroupId;                                  // 0x7c(0x4)
	struct HitRegTrailData                                       ProjectileTrail;                                   // 0x80(0x50)
	TArray<struct HitRegCapsuleTargetData>                       PossibleTargetCapsules;                            // 0xd0(0x10)
	TArray<struct HitRegRewindSnapshot>                          RewindSnapshots;                                   // 0xe0(0x10)
	double                                                       RewoundTime;                                       // 0xf0(0x8)
	double                                                       PreCorrectionRewoundTime;                          // 0xf8(0x8)
};


// Size 0xf0
struct ThrowableMeleeGrenadeRpc
{
public:
	float                                                        ClientWorldYaw;                                    // 0x18(0x4)
	float                                                        ClientWorldPitch;                                  // 0x1c(0x4)
	struct FireRequest                                           FireRequest;                                       // 0x20(0xd0)
};


// Size 0x210
struct WeaponProjectileCreator
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct Guid                                                  AttackId;                                          // 0x10(0x10)
	class Actor*                                                 Instigator;                                        // 0x20(0x8)
	struct Vector                                                Origin;                                            // 0x28(0xc)
	struct Vector                                                Direction;                                         // 0x34(0xc)
	struct ProjectileAim                                         AimData;                                           // 0x40(0x50)
	TArray<class Actor*>                                         IgnoredActors;                                     // 0x90(0x10)
	struct WeaponProjectileParams                                Params;                                            // 0xa0(0xd0)
	class UClass*                                                DamagerType;                                       // 0x170(0x8)
	struct Guid                                                  TelemetryAttackId;                                 // 0x178(0x10)
	int                                                          SubAttackGroupId;                                  // 0x188(0x4)
	struct Transform                                             WeaponMeshTransform;                               // 0x190(0x30)
	class Object*                                                WeaponMesh;                                        // 0x1c0(0x8)
	float                                                        DistanceBeforeGravity;                             // 0x1c8(0x4)
	bool                                                         UseRewoundBaseVelocity;                            // 0x1cc(0x1)
	struct Vector                                                WielderVelocityToInherit;                          // 0x1d0(0xc)
	class Actor*                                                 HomingTarget;                                      // 0x1e0(0x8)
	interface                                                    HomingTargetRewindInterface;                       // 0x1e8(0x10)
	float                                                        HomingDegreesPerSecond;                            // 0x1f8(0x4)
	float                                                        HomingConeAngle;                                   // 0x1fc(0x4)
	float                                                        GravityFalloffTimeScalar;                          // 0x200(0x4)
};


// Size 0x238
struct ProjectileWeaponParameters
{
public:
	int                                                          AmmoClipSize;                                      // 0x0(0x4)
	int                                                          AmmoCostPerShot;                                   // 0x4(0x4)
	float                                                        ChargingDuration;                                  // 0x8(0x4)
	float                                                        EquipDuration;                                     // 0xc(0x4)
	float                                                        IntoAimingDuration;                                // 0x10(0x4)
	float                                                        RecoilDuration;                                    // 0x14(0x4)
	float                                                        ReloadDuration;                                    // 0x18(0x4)
	struct ProjectileShotParams                                  HipFireProjectileShotParams;                       // 0x1c(0x1c)
	struct ProjectileShotParams                                  AimDownSightsProjectileShotParams;                 // 0x38(0x1c)
	int                                                          InaccuracySeed;                                    // 0x54(0x4)
	float                                                        ProjectileDistributionMaxAngle;                    // 0x58(0x4)
	int                                                          NumberOfProjectiles;                               // 0x5c(0x4)
	float                                                        ProjectileMaximumRange;                            // 0x60(0x4)
	float                                                        ProjectileHitScanMaximumRange;                     // 0x64(0x4)
	float                                                        ProjectileDamage;                                  // 0x68(0x4)
	float                                                        ProjectileDamageMultiplierAtMaximumRange;          // 0x6c(0x4)
	class UClass*                                                DamagerType;                                       // 0x70(0x8)
	class UClass*                                                ProjectileId;                                      // 0x78(0x8)
	struct WeaponProjectileParams                                AmmoParams;                                        // 0x80(0xd0)
	float                                                        InheritWielderVelocityMultiplier;                  // 0x150(0x4)
	bool                                                         UsesHoming;                                        // 0x154(0x1)
	float                                                        HomingDegreesPerSecond;                            // 0x158(0x4)
	float                                                        HomingConeAngle;                                   // 0x15c(0x4)
	bool                                                         UsesScope;                                         // 0x160(0x1)
	float                                                        ZoomedRecoilDurationIncrease;                      // 0x164(0x4)
	float                                                        SecondsUntilZoomStarts;                            // 0x168(0x4)
	float                                                        SecondsUntilPostStarts;                            // 0x16c(0x4)
	float                                                        WeaponFiredAINoiseRange;                           // 0x170(0x4)
	float                                                        MaximumRequestPositionDelta;                       // 0x174(0x4)
	float                                                        MaximumRequestAngleDelta;                          // 0x178(0x4)
	float                                                        TimeoutTolerance;                                  // 0x17c(0x4)
	float                                                        AimingMoveSpeedScalar;                             // 0x180(0x4)
	char                                                         AimSensitivitySettingCategory;                     // 0x184(0x1)
	float                                                        InAimFOV;                                          // 0x188(0x4)
	float                                                        BlendSpeed;                                        // 0x18c(0x4)
	class WwiseEvent*                                            DryFireSfx;                                        // 0x190(0x8)
	class WwiseEvent*                                            EndOfBulletsNotificationSfx;                       // 0x198(0x8)
	struct AudioEmitterParameters                                AudioEmitterParameters;                            // 0x1a0(0x10)
	struct FName                                                 RumbleTag;                                         // 0x1b0(0x8)
	bool                                                         KnockbackEnabled;                                  // 0x1b8(0x1)
	struct KnockBackInfo                                         KnockbackParams;                                   // 0x1bc(0x54)
	bool                                                         StunEnabled;                                       // 0x210(0x1)
	float                                                        StunDuration;                                      // 0x214(0x4)
	struct Vector                                                TargetingOffset;                                   // 0x218(0xc)
	bool                                                         OverridePlayerCharacterInterpolationConeAngleAndDistanceWhenAiming; // 0x224(0x1)
	float                                                        OverridePlayerCharacterInterpolationConeAngleAndDistanceDuration; // 0x228(0x4)
	float                                                        PlayerCharacterInterpolationConeAngleOverride;     // 0x22c(0x4)
	float                                                        PlayerCharacterInterpolationDistanceOverride;      // 0x230(0x4)
	bool                                                         AdaptiveTriggerFeedbackEnabled;                    // 0x234(0x1)
};


// Size 0x108
struct VoyageParticipantView
{
public:
	struct VoyageParticipantViewData                             ViewData;                                          // 0x8(0x100)
};


// Size 0x68
struct BountyMapContents
{
public:
	struct TreasureMapTextDesc                                   Location;                                          // 0x0(0x48)
	TArray<struct TreasureMapTextDesc>                           Descriptions;                                      // 0x48(0x10)
	TArray<struct BountyMapTargetDesc>                           Targets;                                           // 0x58(0x10)
};


// Size 0x348
struct PurchaseShopOfferSucceededWithUpsellEvent
{
public:
	struct CatalogOffer                                          CatalogOfferToUpsell;                              // 0x0(0x348)
};


// Size 0x60
struct PremiumStoreItemsSetView
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               PageTitle;                                         // 0x10(0x10)
	struct FString                                               PageIcon;                                          // 0x20(0x10)
	TArray<struct PremiumStoreItemsView>                         Items;                                             // 0x30(0x10)
	struct FString                                               TopBannerUrl;                                      // 0x40(0x10)
	struct FString                                               BottomBannerUrl;                                   // 0x50(0x10)
};


// Size 0x20
struct RequestEmblemProgressSucceededEvent
{
public:
	struct Guid                                                  RequestID;                                         // 0x0(0x10)
	TArray<struct EmblemProgress>                                EmblemProgress;                                    // 0x10(0x10)
};


// Size 0x40
struct PlayerAndShipAccoladeProgressModel
{
public:
	struct AccoladeProgressModel                                 Pirate;                                            // 0x0(0x20)
	struct AccoladeProgressModel                                 Ship;                                              // 0x20(0x20)
};


// Size 0x3c8
struct AthenaAnimationPersistentItemAnimations
{
public:
	struct AthenaAnimationObjectEquipAnimations                  EquipAnimations;                                   // 0x0(0x40)
	struct AthenaAnimationBaseItemAnimations                     NominatedItemFallbackItemUseAnimations;            // 0x40(0x310)
	struct AthenaAnimationObjectLocomotionAnimations             NominatedItemFallbackLocomotionAnimations;         // 0x350(0x40)
	struct AthenaAnimationObjectJumpingAnimations                NominatedItemFallbackJumpingAnimations;            // 0x390(0x20)
	struct AthenaAnimationObjectIdleAnimations                   NominatedItemFallbackIdleAnimations;               // 0x3b0(0x18)
};


// Size 0x30
struct Catalog
{
public:
	struct FString                                               DisplayName;                                       // 0x0(0x10)
	struct FString                                               DisplayDescription;                                // 0x10(0x10)
	TArray<struct CatalogOffer>                                  Offers;                                            // 0x20(0x10)
};


// Size 0xc0
struct HitRegProjectileAttackData
{
public:
	bool                                                         HasValidData;                                      // 0x0(0x1)
	class Actor*                                                 AttackingCharacterActor;                           // 0x8(0x8)
	char                                                         ShotType;                                          // 0x10(0x1)
	double                                                       FireTime;                                          // 0x18(0x8)
	struct Vector                                                AimDirection;                                      // 0x20(0xc)
	struct Vector                                                AimPosition;                                       // 0x2c(0xc)
	struct Transform                                             WeaponMeshTransform;                               // 0x40(0x30)
	class Object*                                                WeaponMesh;                                        // 0x70(0x8)
	TArray<struct HitRegTrailData>                               ProjectileTrails;                                  // 0x78(0x10)
	TArray<struct HitRegCapsuleTargetData>                       PossibleCapsuleTargets;                            // 0x88(0x10)
	TArray<struct HitRegRewindSnapshot>                          RewindSnapshots;                                   // 0x98(0x10)
	double                                                       RewoundTime;                                       // 0xa8(0x8)
	double                                                       PreCorrectionRewoundTime;                          // 0xb0(0x8)
};


// Size 0x78
struct LoadoutCacheEntry
{
public:
	struct FString                                               PirateId;                                          // 0x0(0x10)
	struct Loadout                                               Loadout;                                           // 0x10(0x68)
};


// Size 0x460
struct AthenaAnimationItemAnimationCache
{
public:
	struct AthenaAnimationFishingAnimations                      FishingAnimations;                                 // 0x0(0x90)
	struct AthenaAnimationBaseItemAnimations                     ItemAnimations;                                    // 0x90(0x310)
	struct AthenaAnimationObjectEquipAnimations                  EquipAnimations;                                   // 0x3a0(0x40)
	struct AthenaAnimationObjectLocomotionAnimations             LocomotionAnimations;                              // 0x3e0(0x40)
	struct AthenaAnimationObjectJumpingAnimations                JumpingAnimations;                                 // 0x420(0x20)
	struct AthenaAnimationObjectIdleAnimations                   IdleAnimations;                                    // 0x440(0x18)
	class AnimSequence*                                          HandAdditive;                                      // 0x458(0x8)
};


// Size 0xc8
struct CarouselPirateGeneratorParams
{
public:
	int                                                          MinNumOfEachGender;                                // 0x0(0x4)
	int                                                          MinNumOfEachEthnicity;                             // 0x4(0x4)
	TArray<struct CarouselPirateGroup>                           Groups;                                            // 0x8(0x10)
	struct CarouselPirateGroup                                   Default;                                           // 0x18(0x6c)
	struct CarouselPirateClothing                                MaleClothing;                                      // 0x88(0x20)
	struct CarouselPirateClothing                                FemaleClothing;                                    // 0xa8(0x20)
};


// Size 0x38
struct NPCCustomAnimationDataStructure
{
public:
	TArray<struct NPCOneShotAnimationElement>                    OneShotSequences;                                  // 0x0(0x10)
	TArray<struct NPCContinuousAnimationElement>                 ContinuousSequences;                               // 0x10(0x10)
	class NPCHeldObjectData*                                     WieldableCosmeticItemList;                         // 0x20(0x8)
	TArray<struct NPCInitialSpawnedCosmeticItems>                InitialSpawnedCosmeticItems;                       // 0x28(0x10)
};


// Size 0x98
struct CompanyBootyStats
{
public:
	class UClass*                                                CompanyId;                                         // 0x0(0x8)
	struct BootyItemStats                                        Stats;                                             // 0x8(0x90)
};


// Size 0x20
struct PlayerAccoladeProgressModel
{
public:
	struct AccoladeProgressModel                                 Pirate;                                            // 0x0(0x20)
};


// Size 0x20
struct ShipAccoladeProgressModel
{
public:
	struct AccoladeProgressModel                                 Ship;                                              // 0x0(0x20)
};


// Size 0x60
struct WorldSnapshotV2
{
public:
	TArray<struct CrewSnapshotV1>                                Crews;                                             // 0x10(0x10)
	TArray<struct ShipSnapshotV1>                                Ships;                                             // 0x20(0x10)
	TArray<struct IslandSnapshotV1>                              Islands;                                           // 0x30(0x10)
	TArray<struct RowboatSnapshotV1>                             Rowboats;                                          // 0x40(0x10)
	TArray<struct WorldEventSnapshotV1>                          WorldEvents;                                       // 0x50(0x10)
};


// Size 0x30
struct GameEventSchedulerConfiguration
{
public:
	TArray<struct GameEventSchedulerMainConfig>                  MainConfigs;                                       // 0x0(0x10)
	TArray<struct GameEventCount>                                GlobalConfig;                                      // 0x10(0x10)
	TArray<struct SettingsForGameEventType>                      EventSettings;                                     // 0x20(0x10)
};


// Size 0x10
struct SeasonInfoModelContainer
{
public:
	TArray<struct SeasonInfoModel>                               Seasons;                                           // 0x0(0x10)
};


// Size 0x940
struct AthenaAnimationLoadObjectByID
{
public:
	int                                                          LoadedObjectID;                                    // 0x0(0x4)
	bool                                                         ObjectFound;                                       // 0x4(0x1)
	class UClass*                                                CharacterType;                                     // 0x8(0x8)
	class ScriptStruct*                                          DestinationStruct;                                 // 0x10(0x8)
	struct AthenaAnimationCoreObjectAnimations                   LoadedObjectAnimations;                            // 0x20(0x920)
};


// Size 0x50
struct EventCompanyReputationCampaignDetailResponse
{
public:
	struct EventCompanyReputationCampaignDetail                  CampaignDetail;                                    // 0x0(0x50)
};


// Size 0x6c0
struct FaunaAnimationStructure
{
public:
	struct FaunaAnimationLocationStructure                       FreeRange;                                         // 0x0(0x360)
	struct FaunaAnimationLocationStructure                       Caged;                                             // 0x360(0x360)
};


// Size 0x78
struct PartialHitRegProjectileSnapshotData
{
public:
	TArray<struct HitRegSnapshotProjectileRecord>                AttackerClientRecords;                             // 0x0(0x10)
	TArray<struct HitRegSnapshotProjectileRecord>                ServerRecords;                                     // 0x10(0x10)
	class Actor*                                                 ServerAttacker;                                    // 0x20(0x8)
	map                                                          RemoteClientRecords;                               // 0x28(0x50)
};


// Size 0x10
struct GameEventScheduleModel
{
public:
	TArray<struct GameEventScheduleInfo>                         Schedules;                                         // 0x0(0x10)
};


// Size 0x90
struct QuestTableData
{
public:
	struct QuestTableExperiences                                 Experiences;                                       // 0x0(0x50)
	TArray<struct QuestTableCompany>                             Voyages;                                           // 0x50(0x10)
	TArray<struct QuestTableTallTale>                            TallTales;                                         // 0x60(0x10)
	struct QuestTableShipState                                   ShipState;                                         // 0x70(0x1)
	struct QuestTableCommendationProgress                        CommendationProgress;                              // 0x78(0x10)
	struct QuestTableLikedVoyages                                LikedVoyages;                                      // 0x88(0x4)
	bool                                                         IsNewPlayer;                                       // 0x8c(0x1)
};


// Size 0x10
struct CommodityDemandModel
{
public:
	TArray<struct RemoteCommodityDemandData>                     NPCTradeRouteMultipliers;                          // 0x0(0x10)
};


// Size 0x30
struct ShowUniversalDescriptorEvent
{
public:
	struct UniversalDescription                                  Description;                                       // 0x0(0x10)
	struct UniversalDescriptorStyle                              Styling;                                           // 0x10(0x20)
};


// Size 0x10
struct CompanyBootyStatList
{
public:
	TArray<struct CompanyBootyStats>                             CompanyList;                                       // 0x0(0x10)
};


// Size 0x10
struct AccoladeAndAlignmentInformationModel
{
public:
	TArray<struct AlignmentInformationModel>                     Alignments;                                        // 0x0(0x10)
};


// Size 0x30
struct QuestPoolParams
{
public:
	float                                                        Weight;                                            // 0x0(0x4)
	TArray<struct WeightedQuestParams>                           Quests;                                            // 0x8(0x10)
	TArray<struct WeightedVoyageLocationParams>                  Location;                                          // 0x18(0x10)
	bool                                                         ChainLocations;                                    // 0x28(0x1)
	bool                                                         AllowRepeatIslandsWithinQuest;                     // 0x29(0x1)
	bool                                                         LimitTimesCanBeSelected;                           // 0x2a(0x1)
	int                                                          MaxTimesCanBeSelected;                             // 0x2c(0x4)
};


// Size 0x18
struct PartialClientHitRegProjectileSnapshotData
{
public:
	class Actor*                                                 SendingPlayer;                                     // 0x0(0x8)
	TArray<struct HitRegSnapshotProjectileRecord>                AttackRecords;                                     // 0x8(0x10)
};


// Size 0x170
struct CaptainsLogServiceEntry
{
public:
	struct Guid                                                  CrewId;                                            // 0x0(0x10)
	struct CaptainsLogbookServiceCache                           Cache;                                             // 0x10(0xc0)
	struct CaptainsLogPinnedAccoladeEntries                      PinnedShipAccolades;                               // 0xd0(0x30)
	map                                                          PinnedPlayerAccolades;                             // 0x100(0x50)
	struct PartDesc                                              CustomizationPartDesc;                             // 0x150(0x20)
};


// Size 0x10
struct DistanceThrottledRandomParticleSystemPicker
{
public:
	TArray<struct DistanceThrottledRandomParticleSystemPickerEntry> Entries;                                           // 0x0(0x10)
};


// Size 0x130
struct HitRegRecordProjectileShotRpc
{
public:
	struct Guid                                                  AttackId;                                          // 0x18(0x10)
	struct HitRegSnapshotProjectileRecord                        AttackRecord;                                      // 0x30(0x100)
};


// Size 0x20
struct PetShopDefinition
{
public:
	struct FString                                               Title;                                             // 0x0(0x10)
	TArray<struct PetSpeciesViewModel>                           Species;                                           // 0x10(0x10)
};


// Size 0xa8
struct PremiumStoreCardView
{
public:
	TArray<String>                                               Image;                                             // 0x0(0x10)
	struct FString                                               Cost;                                              // 0x10(0x10)
	struct FString                                               Title;                                             // 0x20(0x10)
	struct FString                                               Description;                                       // 0x30(0x10)
	bool                                                         Owned;                                             // 0x40(0x1)
	struct PremiumStoreTimeLimited                               TimeLimited;                                       // 0x41(0x2)
	struct PremiumStoreItemsSetView                              SetView;                                           // 0x48(0x60)
};


// Size 0xab0
struct AthenaAnimationLoadObjectsWrapper
{
public:
	struct AthenaAnimationCoreObjectAnimations                   ObjectAnimation;                                   // 0x0(0x920)
	struct AthenaAnimationPitchControlStates                     ObjectTargeting3rdPerson;                          // 0x920(0x168)
	struct AthenaAnimationFirstPersonTurnDelayStates             FirstPersonTurnDelay;                              // 0xa88(0x20)
	class UClass*                                                ObjectId;                                          // 0xaa8(0x8)
};


// Size 0x80
struct EventCompanyPromotionNPCResponse
{
public:
	struct UICompanyPromotionData                                CompanyPromotionData;                              // 0x0(0x80)
};


// Size 0x17e0
struct AthenaAnimationLoadOnDemandItemsAnimationData
{
public:
	struct AthenaAnimationAsyncLoadedFishingAnimations           FishingAnimationsToLoad;                           // 0x0(0x1e0)
	struct AthenaAnimationAsyncLoadedBaseItemAnimations          ItemUsageAnimationsToLoad;                         // 0x1e0(0xa60)
	struct AthenaAnimationAsyncLoadedLocomotionAnimations        LocomotionAnimationsToLoad;                        // 0xc40(0x100)
	struct AthenaAnimationAsyncLoadedObjectJumpingAnimations     JumpingAnimationsToLoad;                           // 0xd40(0x80)
	struct AthenaAnimationAsyncLoadedObjectIdleAnimations        IdleAnimationsToLoad;                              // 0xdc0(0x60)
	assetobject                                                  HandAdditiveToLoad;                                // 0xe20(0x20)
	struct AthenaAnimationItemAnimationCache                     CachedItemAnimations;                              // 0xe40(0x460)
	struct AthenaAnimationItemAnimationCache                     ItemFallbackAnimations;                            // 0x12a0(0x460)
	struct WieldAnimationParams                                  Params;                                            // 0x1700(0x40)
	struct FeatureFlag                                           ItemFeatureToggle;                                 // 0x1740(0xc)
};


// Size 0x180
struct HitRegProjectileSnapshotData
{
public:
	struct HitRegProjectileAttackData                            AttackerClientData;                                // 0x0(0xc0)
	struct HitRegProjectileAttackData                            ServerData;                                        // 0xc0(0xc0)
};


// Size 0x10
struct ShipHullDamageParams
{
public:
	TArray<struct ShipHullDamageLevel>                           DamageLevels;                                      // 0x0(0x10)
};


// Size 0x80
struct EventSingleCompanyPromotionUpdate
{
public:
	struct UICompanyPromotionData                                Promotion;                                         // 0x0(0x80)
};


// Size 0x100
struct ItemInfoCaptainsLogDataCacheMetaWrapper
{
public:
	struct CaptainsLogbookDataCache                              DataCache;                                         // 0x18(0xe8)
};


// Size 0x10
struct EventCompanyPromotionData
{
public:
	TArray<struct UICompanyPromotionData>                        CompanyPromotion;                                  // 0x0(0x10)
};


// Size 0x2c0
struct EmblemDefinitionModel
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FName                                                 FriendlyName;                                      // 0x10(0x8)
	struct FText                                                 CampaignDescription;                               // 0x18(0x38)
	struct FName                                                 CampaignId;                                        // 0x50(0x8)
	struct StringAssetReference                                  CampaignImagePath;                                 // 0x58(0x10)
	struct FText                                                 CampaignTitle;                                     // 0x68(0x38)
	struct FString                                               CompanyId;                                         // 0xa0(0x10)
	class UClass*                                                Company;                                           // 0xb0(0x8)
	struct FText                                                 MoreInfoFirst;                                     // 0xb8(0x38)
	struct FText                                                 MoreInfoSecond;                                    // 0xf0(0x38)
	struct FText                                                 MoreInfoFirstLocked;                               // 0x128(0x38)
	struct FText                                                 MoreInfoSecondLocked;                              // 0x160(0x38)
	struct FString                                               RewardId;                                          // 0x198(0x10)
	bool                                                         HasActiveDuration;                                 // 0x1a8(0x1)
	bool                                                         MarkAsNew;                                         // 0x1a9(0x1)
	struct DateTime                                              ActiveFrom;                                        // 0x1b0(0x8)
	struct DateTime                                              ActiveUntil;                                       // 0x1b8(0x8)
	uint32                                                       UnlockAtNumCriteriaCompleted;                      // 0x1c0(0x4)
	struct FString                                               Name;                                              // 0x1c8(0x10)
	struct EmblemSetDefinition                                   EmblemSet;                                         // 0x1d8(0xe8)
};


// Size 0x198
struct EventCompanyScreenDisplayInformationResponse
{
public:
	struct CompanyScreenInformation                              CompanyData;                                       // 0x0(0x198)
};


// Size 0x118
struct VoyageParticipantViewContainer
{
public:
	struct EmergentVoyageParticipantView                         State;                                             // 0x0(0x118)
};


// Size 0x1d10
struct AthenaAnimationLoadOnDemandItemsAnimgraphStructure
{
public:
	struct AthenaAnimationFishingAnimations                      FishingAnimationsToUse;                            // 0x0(0x90)
	struct AthenaAnimationBaseItemAnimations                     ItemAnimationsToUse;                               // 0x90(0x310)
	struct AthenaAnimationObjectEquipAnimations                  EquipAnimationsToUse;                              // 0x3a0(0x40)
	struct AthenaAnimationObjectLocomotionAnimations             LocomotionAnimationsToUse;                         // 0x3e0(0x40)
	struct AthenaAnimationObjectJumpingAnimations                JumpingAnimationsToUse;                            // 0x420(0x20)
	struct AthenaAnimationObjectIdleAnimations                   IdleAnimationsToUse;                               // 0x440(0x18)
	class AnimSequence*                                          HandAdditiveToUse;                                 // 0x458(0x8)
	class UClass*                                                CurrentWieldedItemID;                              // 0x460(0x8)
	struct WieldAnimationParams                                  Params;                                            // 0x470(0x40)
	map                                                          ItemAnimationsToLoad;                              // 0x4b8(0x50)
	class UClass*                                                PlayerCharacterType;                               // 0x508(0x8)
	struct AthenaAnimationLoadOnDemandItemsAnimationData         CurrentItemAnimationData;                          // 0x510(0x17e0)
	class DynamicAnimationAllocationTelemtry*                    DynamicAnimationAllocationTelemtry;                // 0x1cf0(0x8)
};


// Size 0x60
struct PremiumStoreCardsView
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               PageTitle;                                         // 0x10(0x10)
	struct FString                                               PageIcon;                                          // 0x20(0x10)
	TArray<struct PremiumStoreCardView>                          CardViews;                                         // 0x30(0x10)
	struct FString                                               TopBannerUrl;                                      // 0x40(0x10)
	struct FString                                               BottomBannerUrl;                                   // 0x50(0x10)
};


// Size 0xc0
struct CaptainsLogItemInfoRarityEntry
{
public:
	int                                                          DaysAtSea;                                         // 0x0(0x4)
	struct FName                                                 Rarity;                                            // 0x4(0x8)
	struct BootyItemStats                                        HandInStats;                                       // 0x10(0x90)
	struct CompanyBootyStatList                                  CompanySpecificStats;                              // 0xa0(0x10)
	TArray<struct CompanySpecificBootyReward>                    CompanySpecificHandInRewardIds;                    // 0xb0(0x10)
};


// Size 0x20
struct PetShopResponseEvent
{
public:
	struct PetShopDefinition                                     Data;                                              // 0x0(0x20)
};


// Size 0x68
struct SchedulesChangedTelemetryEvent
{
public:
	struct GameEventScheduleModel                                Model;                                             // 0x0(0x10)
	struct GameEventScheduleInfo                                 ChosenSchedule;                                    // 0x10(0x50)
	bool                                                         DidSchedulesChange;                                // 0x60(0x1)
	bool                                                         DidSchedulesContainErrors;                         // 0x61(0x1)
	bool                                                         WereSchedulesRefreshed;                            // 0x62(0x1)
};


// Size 0x90
struct QuestTableRefreshResponseEvent
{
public:
	struct QuestTableData                                        QuestTableData;                                    // 0x0(0x90)
};


// Size 0xc0
struct MerchantCrateItemInfoFaunaBreedRarityEntry
{
public:
	class UClass*                                                FaunaBreed;                                        // 0x0(0x8)
	struct FName                                                 Rarity;                                            // 0x8(0x8)
	struct BootyItemStats                                        HandInStats;                                       // 0x10(0x90)
	struct CompanyBootyStatList                                  CompanySpecificStats;                              // 0xa0(0x10)
	TArray<struct CompanySpecificBootyReward>                    CompanySpecificHandInRewardIds;                    // 0xb0(0x10)
};


// Size 0x180
struct VoyageRecipe
{
public:
	struct QuestDistributionParams                               QuestDistribution;                                 // 0x0(0xc8)
	struct QuestSelectionParams                                  QuestSelection;                                    // 0xc8(0x8)
	TArray<struct QuestPoolParams>                               QuestPools;                                        // 0xd0(0x10)
	bool                                                         UseFixedFinalQuestPool;                            // 0xe0(0x1)
	bool                                                         RandomiseChapters;                                 // 0xe1(0x1)
	struct QuestPoolParams                                       FixedFinalQuestPool;                               // 0xe8(0x30)
	bool                                                         DoNotNotifyParticipantsOnVoyageComplete;           // 0x118(0x1)
	bool                                                         DoNotNotifyParticipantsOnQuestsReceived;           // 0x119(0x1)
	TArray<struct PlayerStat>                                    VoyageProposedStats;                               // 0x120(0x10)
	TArray<struct PlayerStat>                                    VoyageBegunStats;                                  // 0x130(0x10)
	TArray<struct PlayerStat>                                    CompletionStats;                                   // 0x140(0x10)
	TArray<struct PlayerStat>                                    DiveCompletionStats;                               // 0x150(0x10)
	TArray<struct PlayerStat>                                    ReapersMarkCompletionStats;                        // 0x160(0x10)
	TArray<struct VoyageCompletionReward>                        VoyageCompletionRewards;                           // 0x170(0x10)
};


// Size 0x5f0
struct PremiumStoreLandingPageItem
{
public:
	TArray<String>                                               Image;                                             // 0x0(0x10)
	struct FString                                               Cost;                                              // 0x10(0x10)
	struct FString                                               Title;                                             // 0x20(0x10)
	struct FString                                               Description;                                       // 0x30(0x10)
	bool                                                         Owned;                                             // 0x40(0x1)
	struct PremiumStoreTimeLimited                               TimeLimited;                                       // 0x41(0x2)
	char                                                         Type;                                              // 0x43(0x1)
	int                                                          Size;                                              // 0x44(0x4)
	struct PremiumStoreBundleSetView                             BundleSetView;                                     // 0x48(0x2b8)
	struct PremiumStoreItemsSetView                              ItemsSetView;                                      // 0x300(0x60)
	struct PremiumStoreCardsView                                 CardsView;                                         // 0x360(0x60)
	struct PremiumStoreItemView                                  ItemView;                                          // 0x3c0(0x220)
	struct FString                                               AccentUrl;                                         // 0x5e0(0x10)
};


// Size 0x30
struct PremiumStoreLandingPageTab
{
public:
	struct Guid                                                  Id;                                                // 0x0(0x10)
	struct FString                                               DisplayName;                                       // 0x10(0x10)
	TArray<struct PremiumStoreLandingPageItem>                   Children;                                          // 0x20(0x10)
};


// Size 0x10
struct PremiumStoreLandingPage
{
public:
	TArray<struct PremiumStoreLandingPageTab>                    Tabs;                                              // 0x0(0x10)
};


// Size 0x28
struct PremiumStoreOffersEvent
{
public:
	struct PremiumStoreLandingPage                               Data;                                              // 0x0(0x10)
	int64                                                        TimeLimitedExpiresInSeconds;                       // 0x10(0x8)
	struct FString                                               CurrencyCode;                                      // 0x18(0x10)
};


