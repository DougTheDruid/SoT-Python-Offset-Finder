// Generated by DougTheDruid#2784 on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x0
class WarMapStateInterface: public Interface
{
public:
};


// Size 0xa0
class WarMapInteractionComponent: public InteractableComponent
{
public:
	Struct FText                                                 OpenMapInteractionText;                            // 0x130(0x38)
	Struct FText                                                 CannotOpenMapInteractionText;                      // 0x168(0x38)
	class                                                        OpenMapInputId;                                    // 0x1a0(0x8)
};


// Size 0x10
class WarMapInteractionVoteComponent: public InlineVotingInteractionComponent
{
public:
};


// Size 0xe8
class WarMapVoteConsumerBase: public VoteConsumerInlineBase
{
public:
	Class WarMapVoteValidatorBase*                               Validator;                                         // 0x30(0x8)
	Class Actor*                                                 OwningActor;                                       // 0x38(0x8)
	bool                                                         IsHardMode;                                        // 0x40(0x1)
	TArray<class PlayerState*>                                   Votes;                                             // 0xa8(0x10)
	Class BoxedRpcDispatcherComponent*                           RpcDispatcher;                                     // 0xb8(0x8)
};


// Size 0x1c0
class StartWarMapVoyageVoteConsumer: public WarMapVoteConsumerBase
{
public:
	Struct FText                                                 WarMapVotingCastVote;                              // 0x118(0x38)
	Struct FText                                                 WarMapVotingCantVote;                              // 0x150(0x38)
	Struct FText                                                 WarMapVotingRemoveVote;                            // 0x188(0x38)
	Struct FText                                                 WarMapVotingCantRemoveVote;                        // 0x1c0(0x38)
	Struct FText                                                 WarMapVotingCantVoteReasonCrewOnInvasion;          // 0x1f8(0x38)
	Struct FText                                                 WarMapVotingCantVoteReasonNearbyRivalShip;         // 0x230(0x38)
	Struct FText                                                 WarMapVotingCantVoteReasonCrewIsInPVEEncounter;    // 0x268(0x38)
	Struct FText                                                 WarMapVotingCantVoteReasonInTunnelOfTheDamned;     // 0x2a0(0x38)
};


// Size 0xe0
class StopWarMapVoyageVoteConsumer: public WarMapVoteConsumerBase
{
public:
	Struct FText                                                 WarMapVotingCastVote;                              // 0x118(0x38)
	Struct FText                                                 WarMapVotingCantVote;                              // 0x150(0x38)
	Struct FText                                                 WarMapVotingRemoveVote;                            // 0x188(0x38)
	Struct FText                                                 WarMapVotingCantRemoveVote;                        // 0x1c0(0x38)
};


// Size 0x248
class WarMapVoteInteractionActor: public Actor
{
public:
	float                                                        TooltipUIFadeDuration;                             // 0x3d8(0x4)
	Struct Vector2D                                              TooltipUIScreenSpaceOffsetRatio;                   // 0x3dc(0x8)
	Class StaticMeshComponent*                                   InvasionActiveMesh;                                // 0x3e8(0x8)
	TArray<Struct FactionDisplayInfo>                            FactionInfos;                                      // 0x3f0(0x10)
	TArray<Struct FactionRequest>                                FactionInfoPtrs;                                   // 0x400(0x10)
};


// Size 0xe8
class WarMapVoteValidatorBase: public VoteValidatorInlineBase
{
public:
	Class WarMapVoteConsumerBase*                                Consumer;                                          // 0x30(0x8)
	Class Actor*                                                 OwningActor;                                       // 0x38(0x8)
	float                                                        UpdateIsCrewInPVEEncounterInterval;                // 0x40(0x4)
	bool                                                         IsCrewInPVEEncounterCached;                        // 0x44(0x1)
	bool                                                         ShowWithHardMode;                                  // 0x45(0x1)
};


// Size 0x0
class StartWarMapVoyageVoteValidator: public WarMapVoteValidatorBase
{
public:
};


// Size 0x8
class StopWarMapVoyageVoteValidator: public WarMapVoteValidatorBase
{
public:
	bool                                                         ShowWhenInHardModeMatchmaking;                     // 0x118(0x1)
};


}