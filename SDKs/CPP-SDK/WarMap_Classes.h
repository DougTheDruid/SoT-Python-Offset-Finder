#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "WarMap_Structs.h"


// Size 0xe0 (Full Size[0x110] - InheritedSize[0x30]
class WarMapVoteConsumerBase: public VoteConsumerInlineBase
{
public:
	class WarMapVoteValidatorBase*                               Validator;                                         // 0x30(0x8)
	class Actor*                                                 OwningActor;                                       // 0x38(0x8)
	bool                                                         IsHardMode;                                        // 0x40(0x1)
	char                                                         pad0x67_56XIS[0x67];                               // 0x41(0x67)
	TArray<class PlayerState*>                                   Votes;                                             // 0xa8(0x10)
	char                                                         pad0x58_CK7OS[0x58];                               // 0xb8(0x58)
};


// Size 0x280 (Full Size[0x620] - InheritedSize[0x3a0]
class WarMapVoteInteractionActor: public Actor
{
public:
	char                                                         pad0x10_VBFNA[0x10];                               // 0x3a0(0x10)
	float                                                        TooltipUIFadeDuration;                             // 0x3b0(0x4)
	struct Vector2D                                              TooltipUIScreenSpaceOffsetRatio;                   // 0x3b4(0x8)
	char                                                         pad0x4_MTZB9[0x4];                                 // 0x3bc(0x4)
	class StaticMeshComponent*                                   InvasionActiveMesh;                                // 0x3c0(0x8)
	class BoxedRpcDispatcherComponent*                           BoxedRpcDispatcherComponent;                       // 0x3c8(0x8)
	TArray<struct FactionDisplayInfo>                            FactionInfos;                                      // 0x3d0(0x10)
	TArray<struct FactionRequest>                                FactionInfoPtrs;                                   // 0x3e0(0x10)
	char                                                         pad0x230_K3O99[0x230];                             // 0x3f0(0x230)
};


// Size 0x10 (Full Size[0x178] - InheritedSize[0x168]
class WarMapInteractionVoteComponent: public InlineVotingInteractionComponent
{
public:
	char                                                         pad0x10_87KLX[0x10];                               // 0x168(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class WarMapStateInterface: public Interface
{
public:
};


// Size 0x100 (Full Size[0x130] - InheritedSize[0x30]
class WarMapVoteValidatorBase: public VoteValidatorInlineBase
{
public:
	class WarMapVoteConsumerBase*                                Consumer;                                          // 0x30(0x8)
	class Actor*                                                 OwningActor;                                       // 0x38(0x8)
	bool                                                         ShowWithHardMode;                                  // 0x40(0x1)
	char                                                         pad0xef_6TRU3[0xef];                               // 0x41(0xef)
};


// Size 0xa0 (Full Size[0x1e0] - InheritedSize[0x140]
class WarMapInteractionComponent: public InteractableComponent
{
public:
	char                                                         pad0x8_BE7BM[0x8];                                 // 0x140(0x8)
	struct FText                                                 OpenMapInteractionText;                            // 0x148(0x38)
	struct FText                                                 CannotOpenMapInteractionText;                      // 0x180(0x38)
	class UClass*                                                OpenMapInputId;                                    // 0x1b8(0x8)
	char                                                         pad0x20_VYCDT[0x20];                               // 0x1c0(0x20)
};


// Size 0xe0 (Full Size[0x1f0] - InheritedSize[0x110]
class StopWarMapVoyageVoteConsumer: public WarMapVoteConsumerBase
{
public:
	struct FText                                                 WarMapVotingCastVote;                              // 0x110(0x38)
	struct FText                                                 WarMapVotingCantVote;                              // 0x148(0x38)
	struct FText                                                 WarMapVotingRemoveVote;                            // 0x180(0x38)
	struct FText                                                 WarMapVotingCantRemoveVote;                        // 0x1b8(0x38)
};


// Size 0x1f8 (Full Size[0x308] - InheritedSize[0x110]
class StartWarMapVoyageVoteConsumer: public WarMapVoteConsumerBase
{
public:
	struct FText                                                 WarMapVotingCastVote;                              // 0x110(0x38)
	struct FText                                                 WarMapVotingCantVote;                              // 0x148(0x38)
	struct FText                                                 WarMapVotingRemoveVote;                            // 0x180(0x38)
	struct FText                                                 WarMapVotingCantRemoveVote;                        // 0x1b8(0x38)
	struct FText                                                 WarMapVotingCantVoteReasonCrewOnInvasion;          // 0x1f0(0x38)
	struct FText                                                 WarMapVotingCantVoteReasonNearbyRivalShip;         // 0x228(0x38)
	struct FText                                                 WarMapVotingCantVoteReasonCrewIsInPVEEncounter;    // 0x260(0x38)
	struct FText                                                 WarMapVotingCantVoteReasonInTunnelOfTheDamned;     // 0x298(0x38)
	struct FText                                                 WarMapVotingCantVoteReasonCrewIsActiveInCompetitiveVoyage; // 0x2d0(0x38)
};


// Size 0x8 (Full Size[0x138] - InheritedSize[0x130]
class StopWarMapVoyageVoteValidator: public WarMapVoteValidatorBase
{
public:
	bool                                                         ShowWhenInHardModeMatchmaking;                     // 0x130(0x1)
	char                                                         pad0x7_YZ6AL[0x7];                                 // 0x131(0x7)
};


// Size 0x0 (Full Size[0x130] - InheritedSize[0x130]
class StartWarMapVoyageVoteValidator: public WarMapVoteValidatorBase
{
public:
};


