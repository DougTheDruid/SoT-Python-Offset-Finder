// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x0 (Full Size[0x448] - InheritedSize[0x448]
class AIPetsOnDemandSpawner: public AISpawner
{
public:
};


// Size 0x0 (Full Size[0x68] - InheritedSize[0x68]
class BTDecorator_IsForcingHangout: public BTDecorator_BaseConditional
{
public:
};


// Size 0x0 (Full Size[0x68] - InheritedSize[0x68]
class BTDecorator_IsOccupiedHangoutSpotStillAvailable: public BTDecorator_BaseConditional
{
public:
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_IsOccupyingHangoutSpotWithGivenId: public BTDecorator_BaseConditional
{
public:
	TArray<struct HangoutSpotId>                                 SuccessIds;                                        // 0x68(0x10)
};


// Size 0x0 (Full Size[0x68] - InheritedSize[0x68]
class BTDecorator_IsPerchedInHangout: public BTDecorator_BaseConditional
{
public:
};


// Size 0x0 (Full Size[0x68] - InheritedSize[0x68]
class BTDecorator_PetFoodSourceAvailable: public BTDecorator_BaseConditional
{
public:
};


// Size 0x10 (Full Size[0x78] - InheritedSize[0x68]
class BTDecorator_PetRoamingAnimationStateActive: public BTDecorator_BaseConditional
{
public:
	TArray<Byte MatchingStates>                                  MatchingStates;                                    // 0x68(0x10)
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_AttachToHangout: public BTTask_BlackboardBase
{
public:
	float                                                        TaskDuration;                                      // 0x88(0x4)
	char                                                         pad0x4_QKNBA[0x4];                                 // 0x8c(0x4)
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_ChangeHangoutAnimation: public BTTask_BlackboardBase
{
public:
};


// Size 0x8 (Full Size[0x90] - InheritedSize[0x88]
class BTTask_DetachFromHangout: public BTTask_BlackboardBase
{
public:
	float                                                        TaskDuration;                                      // 0x88(0x4)
	char                                                         pad0x4_2Y7KB[0x4];                                 // 0x8c(0x4)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_EatFood: public BTTaskNode
{
public:
	class PetFeedingDataAsset*                                   FeedingDataAsset;                                  // 0x60(0x8)
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_GetTotalHangoutTime: public BTTask_BlackboardBase
{
public:
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_NotifyForcedHangoutComplete: public BTTask_BlackboardBase
{
public:
};


// Size 0x20 (Full Size[0x80] - InheritedSize[0x60]
class BTTask_PetWaitForAnimationRoamingState: public BTTaskNode
{
public:
	TArray<Byte SuccessRoamingStates>                            SuccessRoamingStates;                              // 0x60(0x10)
	TArray<Byte FailRoamingStates>                               FailRoamingStates;                                 // 0x70(0x10)
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_ReactToOwner: public BTTaskNode
{
public:
	char                                                         pad0x8_BQVD5[0x8];                                 // 0x60(0x8)
};


// Size 0x10 (Full Size[0x70] - InheritedSize[0x60]
class BTTask_ReactToThreat: public BTTaskNode
{
public:
	byte                                                         ReactAnimState;                                    // 0x60(0x1)
	bool                                                         ChangeAnimationAfterWaitTime;                      // 0x61(0x1)
	char                                                         pad0x2_V8EBE[0x2];                                 // 0x62(0x2)
	float                                                        ReactAnimTime;                                     // 0x64(0x4)
	byte                                                         AfterReactAnimState;                               // 0x68(0x1)
	char                                                         pad0x7_JZ2PV[0x7];                                 // 0x69(0x7)
};


// Size 0x8 (Full Size[0x98] - InheritedSize[0x90]
class BTTask_RotatePetToFaceBBEntryWithTime: public BTTask_RotateToFaceBBEntry
{
public:
	float                                                        Delay;                                             // 0x90(0x4)
	float                                                        RotationTime;                                      // 0x94(0x4)
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_SelectFoodSource: public BTTask_BlackboardBase
{
public:
};


// Size 0x10 (Full Size[0x98] - InheritedSize[0x88]
class BTTask_SelectPetHangoutSpot: public BTTask_BlackboardBase
{
public:
	bool                                                         NeedForceId;                                       // 0x88(0x1)
	char                                                         pad0x3_9JVHD[0x3];                                 // 0x89(0x3)
	struct HangoutSpotId                                         ForcedId;                                          // 0x8c(0x8)
	char                                                         pad0x4_8O550[0x4];                                 // 0x94(0x4)
};


// Size 0x78 (Full Size[0x100] - InheritedSize[0x88]
class BTTask_SelectWanderFlyStrategy: public BTTask_BlackboardBase
{
public:
	struct AIDataProviderFloatValue                              WanderRange;                                       // 0x88(0x30)
	struct AIDataProviderFloatValue                              LowFlyRange;                                       // 0xb8(0x30)
	class UClass*                                                WanderStrategy;                                    // 0xe8(0x8)
	class UClass*                                                LowFlyStrategy;                                    // 0xf0(0x8)
	class UClass*                                                HighFlyStrategy;                                   // 0xf8(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetHangoutInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetMemoryInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetUGCNameInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetLifetimeInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetOwnerIdentityInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetSpawnOnShipInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetReactInterface: public Interface
{
public:
};


// Size 0x8 (Full Size[0x68] - InheritedSize[0x60]
class BTTask_SetDebugPetStateDescriptor: public BTTaskNode
{
public:
	byte                                                         NewDescriptor;                                     // 0x60(0x1)
	char                                                         pad0x7_IEAU6[0x7];                                 // 0x61(0x7)
};


// Size 0x0 (Full Size[0x88] - InheritedSize[0x88]
class BTTask_StopOccupyingHangoutSpot: public BTTask_BlackboardBase
{
public:
};


// Size 0x18 (Full Size[0xe0] - InheritedSize[0xc8]
class CannonSquashComponent: public ActorComponent
{
public:
	char                                                         pad0x18_D9DPP[0x18];                               // 0xc8(0x18)
};


// Size 0xd8 (Full Size[0x1a0] - InheritedSize[0xc8]
class PetDangerComponent: public ActorComponent
{
public:
	class PetDangerDataAsset*                                    DangerDataAsset;                                   // 0xc8(0x8)
	char                                                         pad0xd0_FU6ER[0xd0];                               // 0xd0(0xd0)
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_AverageThreatPositionFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_CurrentHangoutSpot: public EnvQueryContext
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_FirstThreatPositionFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class EnvQueryContext_PerceivedFoodSources: public EnvQueryContext
{
public:
};


// Size 0x0 (Full Size[0x30] - InheritedSize[0x30]
class EnvQueryContext_SafePositionFromBlackboard: public EnvQueryContext_PositionFromBlackboard
{
public:
};


// Size 0x10 (Full Size[0x130] - InheritedSize[0x120]
class PetDesc: public ItemDesc
{
public:
	class PetSpawnParamsDataAsset*                               PetSpawnParams;                                    // 0x120(0x8)
	class UClass*                                                PreviewPetClass;                                   // 0x128(0x8)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class PetHangoutSpotsDataAsset: public DataAsset
{
public:
	TArray<struct HangoutSpotParams>                             HangoutSpotParams;                                 // 0x28(0x10)
};


// Size 0x1f0 (Full Size[0x2b8] - InheritedSize[0xc8]
class PetHangoutSpotSelectorComponent: public ActorComponent
{
public:
	class PetHangoutSpotComponent*                               HangoutSpotPositionComponent;                      // 0xc8(0x8)
	class PetHangoutSpotsDataAsset*                              HangoutParamsDataAsset;                            // 0xd0(0x8)
	char                                                         pad0x70_UCAQM[0x70];                               // 0xd8(0x70)
	class UClass*                                                PetType_Cached;                                    // 0x148(0x8)
	char                                                         pad0x168_EHLTU[0x168];                             // 0x150(0x168)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class HangoutSpotSelectionInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetIdleMovementInterface: public Interface
{
public:
};


// Size 0xe8 (Full Size[0xa58] - InheritedSize[0x970]
class PetAIController: public AthenaAIController
{
public:
	char                                                         pad0x20_GUMXE[0x20];                               // 0x970(0x20)
	TArray<struct AIStategyControllerMovementMod>                StrategyControllerMovementMods;                    // 0x990(0x10)
	float                                                        DefaultControlRotationInterpSpeed;                 // 0x9a0(0x4)
	char                                                         pad0x4_C7F1L[0x4];                                 // 0x9a4(0x4)
	class UClass*                                                DefaultStrategy;                                   // 0x9a8(0x8)
	class ReactStateMappingsDataAsset*                           ReactMappings;                                     // 0x9b0(0x8)
	char                                                         pad0x8_L061V[0x8];                                 // 0x9b8(0x8)
	class PetHangoutSpotSelectorComponent*                       HangoutSpotSelectorComponent;                      // 0x9c0(0x8)
	class PetHangoutSpotComponent*                               ForcedHangoutSpotComponent;                        // 0x9c8(0x8)
	class BlackboardData*                                        DefaultBlackboardAsset;                            // 0x9d0(0x8)
	class BehaviorTree*                                          DefaultTree;                                       // 0x9d8(0x8)
	class BehaviorTree*                                          HangoutTree;                                       // 0x9e0(0x8)
	class BehaviorTree*                                          IdleTree;                                          // 0x9e8(0x8)
	float                                                        MaximumReactRange;                                 // 0x9f0(0x4)
	char                                                         pad0x4_JL61X[0x4];                                 // 0x9f4(0x4)
	class PetDangerComponent*                                    DangerComponent;                                   // 0x9f8(0x8)
	float                                                        MinAgentHalfHeightPctOverride;                     // 0xa00(0x4)
	char                                                         pad0x54_VO749[0x54];                               // 0xa04(0x54)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class PetCustomisationOverrideDataAsset: public DataAsset
{
public:
	class UClass*                                                AnimationOverrideId;                               // 0x28(0x8)
	class WwiseEvent*                                            FiredFromActorSFX;                                 // 0x30(0x8)
	struct FString                                               DebugMenuName;                                     // 0x38(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class PetCustomisationOverrideMappingsDataAsset: public DataAsset
{
public:
	TArray<struct PetCustomiationOverrideMappingEntry>           MappingEntries;                                    // 0x28(0x10)
};


// Size 0x28 (Full Size[0x50] - InheritedSize[0x28]
class PetDangerDataAsset: public DataAsset
{
public:
	TArray<struct PetDangerHearingThreat>                        KnownHearingDangers;                               // 0x28(0x10)
	float                                                        MinChangeAverageThreatLocationToUpdate;            // 0x38(0x4)
	float                                                        FleeDistance;                                      // 0x3c(0x4)
	TArray<Byte ResponsePriorities>                              ResponsePriorities;                                // 0x40(0x10)
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class PetFeedingDataAsset: public DataAsset
{
public:
	struct PetFeedingParams                                      PetFeedingParams;                                  // 0x28(0x38)
};


// Size 0xa0 (Full Size[0x380] - InheritedSize[0x2e0]
class PetHangoutSpotComponent: public SceneComponent
{
public:
	TArray<struct HangoutSpotPosition>                           HangoutSpots;                                      // 0x2e0(0x10)
	bool                                                         HasLowerDeckFloodThreshold;                        // 0x2f0(0x1)
	char                                                         pad0x3_QM9P1[0x3];                                 // 0x2f1(0x3)
	float                                                        LowerDeckFloodThreshold;                           // 0x2f4(0x4)
	bool                                                         HasMiddleDeckFloodThreshold;                       // 0x2f8(0x1)
	char                                                         pad0x3_C6GH7[0x3];                                 // 0x2f9(0x3)
	float                                                        MiddleDeckFloodThreshold;                          // 0x2fc(0x4)
	float                                                        PerchInteractableHeightOffset;                     // 0x300(0x4)
	bool                                                         IsWorldHangout;                                    // 0x304(0x1)
	char                                                         pad0x23_IZNOY[0x23];                               // 0x305(0x23)
	TArray<class PetPerchComponent*>                             PetPerchComponents;                                // 0x328(0x10)
	char                                                         pad0x10_D9023[0x10];                               // 0x338(0x10)
	bool                                                         IsTopDeckBlocked;                                  // 0x348(0x1)
	bool                                                         IsOwnerSinking;                                    // 0x349(0x1)
	char                                                         pad0x1e_4EB52[0x1e];                               // 0x34a(0x1e)
	class PetHangoutSpotsDataAsset*                              PetHangoutSpotsDataAsset;                          // 0x368(0x8)
	char                                                         pad0x10_L7KDV[0x10];                               // 0x370(0x10)
};


// Size 0x80 (Full Size[0x5a8] - InheritedSize[0x528]
class PetItemInfo: public NonStorableItemInfo
{
public:
	char                                                         pad0x20_NWJ13[0x20];                               // 0x528(0x20)
	class Actor*                                                 SpawnedForShip;                                    // 0x548(0x8)
	float                                                        DropTraceDistance;                                 // 0x550(0x4)
	float                                                        PointSearchRadius;                                 // 0x554(0x4)
	byte                                                         DropChannel;                                       // 0x558(0x1)
	char                                                         pad0x7_U152S[0x7];                                 // 0x559(0x7)
	class Actor*                                                 PetOwner;                                          // 0x560(0x8)
	struct PetCustomisation                                      PetCustomisation;                                  // 0x568(0x28)
	class PetUGCNameComponent*                                   PetUGCNameComponent;                               // 0x590(0x8)
	char                                                         pad0x10_1YK79[0x10];                               // 0x598(0x10)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class PetListingDataAsset: public DataAsset
{
public:
	TArray<struct PetListingTypeEntry>                           Entries;                                           // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetMovementModifierSettingsInterface: public Interface
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetOwnerInterface: public Interface
{
public:
};


// Size 0x20 (Full Size[0xe8] - InheritedSize[0xc8]
class PetOwnerComponent: public ActorComponent
{
public:
	char                                                         pad0x18_8CQG3[0x18];                               // 0xc8(0x18)
	class ItemInfo*                                              PetInfo;                                           // 0xe0(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetPartCustomisationInterface: public Interface
{
public:
};


// Size 0x48 (Full Size[0x180] - InheritedSize[0x138]
class PetPerchComponent: public InteractableComponent
{
public:
	char                                                         pad0x18_0PNMU[0x18];                               // 0x138(0x18)
	TArray<class Class*>                                         AllowedPetTypes;                                   // 0x150(0x10)
	int                                                          HangoutSpotIndex;                                  // 0x160(0x4)
	struct FName                                                 HangoutSpotName;                                   // 0x164(0x8)
	struct Vector                                                InteractionPointLocation;                          // 0x16c(0xc)
	bool                                                         Enabled;                                           // 0x178(0x1)
	bool                                                         BlocksPetEmoteReactions;                           // 0x179(0x1)
	bool                                                         IgnorePickupFromHangoutTooltipDisplayOffset;       // 0x17a(0x1)
	char                                                         pad0x5_CY95E[0x5];                                 // 0x17b(0x5)
};


// Size 0x40 (Full Size[0x68] - InheritedSize[0x28]
class PetSpawnParamsDataAsset: public DataAsset
{
public:
	class UClass*                                                PetClassID;                                        // 0x28(0x8)
	class BehaviorTree*                                          TreeToRun;                                         // 0x30(0x8)
	class EnvQuery*                                              SpawnQueryForLand;                                 // 0x58(0x8)
	class EnvQuery*                                              SpawnQueryForShip;                                 // 0x60(0x8)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PetsServiceInterface: public Interface
{
public:
};


// Size 0x38 (Full Size[0x60] - InheritedSize[0x28]
class PetsServiceParamsDataAsset: public DataAsset
{
public:
	struct PetsServiceParams                                     Params;                                            // 0x28(0x38)
};


// Size 0x308 (Full Size[0x330] - InheritedSize[0x28]
class PetsService: public Object
{
public:
	char                                                         pad0x60_DD3GL[0x60];                               // 0x28(0x60)
	class AIPetsOnDemandSpawner*                                 Spawner;                                           // 0x88(0x8)
	char                                                         pad0x18_ZH1C1[0x18];                               // 0x90(0x18)
	struct PetsServiceParams                                     PetsServiceParams;                                 // 0xa8(0x38)
	TArray<class Actor*>                                         OwnersToRemove;                                    // 0xe0(0x10)
	TArray<class Actor*>                                         OwnersToRequestDespawn;                            // 0xf0(0x10)
	TArray<class Pawn*>                                          MovingPetsOnIslands;                               // 0x100(0x10)
	TArray<class Pawn*>                                          MovingPetsOnShips;                                 // 0x110(0x10)
	TArray<class Actor*>                                         ScratchArray;                                      // 0x120(0x10)
	char                                                         pad0x1a8_4DTEA[0x1a8];                             // 0x130(0x1a8)
	class PetHangoutSpotsDataAsset*                              PetHangoutDataAsset;                               // 0x2d8(0x8)
	char                                                         pad0x50_HVYHN[0x50];                               // 0x2e0(0x50)
};


// Size 0x50 (Full Size[0x78] - InheritedSize[0x28]
class PetsSettings: public Object
{
public:
	struct StringAssetReference                                  PetHangoutSpotsDataAsset;                          // 0x28(0x10)
	struct StringAssetReference                                  PetListingDataAsset;                               // 0x38(0x10)
	struct StringAssetReference                                  PetsServiceParamsDataAsset;                        // 0x48(0x10)
	struct StringAssetReference                                  PetSpawnDefinitionsDataAsset;                      // 0x58(0x10)
	TArray<Byte ExcludedStatesForRoamingAssetGeneration>         ExcludedStatesForRoamingAssetGeneration;           // 0x68(0x10)
};


// Size 0x50 (Full Size[0x118] - InheritedSize[0xc8]
class PetUGCNameComponent: public ActorComponent
{
public:
	char                                                         pad0x18_HMYBZ[0x18];                               // 0xc8(0x18)
	struct FString                                               DefaultPetName;                                    // 0xe0(0x10)
	struct FString                                               CustomisedPetName;                                 // 0xf0(0x10)
	char                                                         pad0x18_MJ00T[0x18];                               // 0x100(0x18)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class ReactAIStrategyId: public AIStrategyId
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class ReactStateMappingsDataAsset: public DataAsset
{
public:
	TArray<struct ReactStateMapping>                             ReactMappings;                                     // 0x28(0x10)
};


// Size 0x150 (Full Size[0x930] - InheritedSize[0x7e0]
class WieldablePet: public SkeletalMeshWieldableItem
{
public:
	char                                                         pad0x38_NIMUB[0x38];                               // 0x7e0(0x38)
	float                                                        ThirdPersonScalingModifier;                        // 0x818(0x4)
	char                                                         pad0x4_2W2XV[0x4];                                 // 0x81c(0x4)
	class WieldablePetComponent*                                 WieldablePetComponent;                             // 0x820(0x8)
	class AIPartsRetrievalComponent*                             AIPartsRetrievalComponent;                         // 0x828(0x8)
	class PetPartCustomisationComponent*                         PetPartCustomisationComponent;                     // 0x830(0x8)
	class AnimNotifyWwiseEmitterComponent*                       AnimNotifyWwiseEmitterComponent;                   // 0x838(0x8)
	class WaterExposureComponent*                                WaterExposureComponent;                            // 0x840(0x8)
	class UsableWieldableComponent*                              UsableWieldableComponent;                          // 0x848(0x8)
	class PickupableComponent*                                   PickupableComponent;                               // 0x850(0x8)
	class WieldableInteractableComponent*                        WieldableInteractableComponent;                    // 0x858(0x8)
	class CleanlinessComponent*                                  CleanlinessComponent;                              // 0x860(0x8)
	class LightWeightStatusEffectManagerComponent*               LightWeightStatusEffectManagerComponent;           // 0x868(0x8)
	class PetDitherComponent*                                    PetDitherComponent;                                // 0x870(0x8)
	class Actor*                                                 PetOwner;                                          // 0x878(0x8)
	class FeedingComponent*                                      FeedingComponent;                                  // 0x880(0x8)
	class PetSicknessComponent*                                  SicknessComponent;                                 // 0x888(0x8)
	class WieldablePetHungerComponent*                           HungerComponent;                                   // 0x890(0x8)
	class StarvingComponent*                                     StarvingComponent;                                 // 0x898(0x8)
	class PetTelemetryComponent*                                 TelemetryComponent;                                // 0x8a0(0x8)
	class AnimationDataStoreComponent*                           AnimationDataStoreComponent;                       // 0x8a8(0x8)
	bool                                                         SubmergedStrokingEnabled;                          // 0x8b0(0x1)
	char                                                         pad0x6f_78LQQ[0x6f];                               // 0x8b1(0x6f)
	byte                                                         HungerReactAnimationState;                         // 0x920(0x1)
	byte                                                         DropRequest;                                       // 0x921(0x1)
	char                                                         pad0xe_MUSMO[0xe];                                 // 0x922(0xe)
};


// Size 0x10 (Full Size[0x320] - InheritedSize[0x310]
class WieldablePetAnimNotifyWwiseEmitterComponent: public AnimNotifyWwiseEmitterComponent
{
public:
	char                                                         pad0x10_1O70G[0x10];                               // 0x310(0x10)
};


// Size 0x88 (Full Size[0x150] - InheritedSize[0xc8]
class WieldablePetComponent: public ActorComponent
{
public:
	class WieldablePetComponentDataAsset*                        WieldablePetComponentData;                         // 0xc8(0x8)
	char                                                         pad0x80_8MESV[0x80];                               // 0xd0(0x80)
};


// Size 0x48 (Full Size[0x70] - InheritedSize[0x28]
class WieldablePetComponentDataAsset: public DataAsset
{
public:
	struct FloatRange                                            FriendlyTimeUntilEscape;                           // 0x28(0x10)
	struct FloatRange                                            NormalTimeUntilEscape;                             // 0x38(0x10)
	struct FloatRange                                            SubmergedTimeUntilEscape;                          // 0x48(0x10)
	float                                                        DamageToOwnerDropThreshold;                        // 0x58(0x4)
	char                                                         pad0x4_G7KYI[0x4];                                 // 0x5c(0x4)
	TArray<struct WieldablePetDropTimeout>                       DropTimeouts;                                      // 0x60(0x10)
};


// Size 0xb0 (Full Size[0x178] - InheritedSize[0xc8]
class WieldablePetHungerComponent: public ActorComponent
{
public:
	class WieldablePetHungerDataAsset*                           HungerData;                                        // 0xc8(0x8)
	char                                                         pad0x28_ZEOU0[0x28];                               // 0xd0(0x28)
	TArray<struct OverlapResult>                                 CachedOverlappingActors;                           // 0xf8(0x10)
	TArray<struct WieldablePetFoodSourceEntry>                   ActiveFoodSources;                                 // 0x108(0x10)
	TArray<struct WieldablePetFoodSourceEntry>                   FoodSourcesToRemove;                               // 0x118(0x10)
	char                                                         pad0x50_0HVJ8[0x50];                               // 0x128(0x50)
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class WieldablePetHungerDataAsset: public DataAsset
{
public:
	float                                                        TimeToStartEating;                                 // 0x28(0x4)
	float                                                        EdibleCheckRadius;                                 // 0x2c(0x4)
	struct WieldablePetHungerAnimationData                       EatingAnimData;                                    // 0x30(0x8)
	struct WieldablePetHungerAnimationData                       FedAnimData;                                       // 0x38(0x8)
	struct WieldablePetHungerAnimationData                       SickAnimData;                                      // 0x40(0x8)
	struct WieldablePetHungerAnimationData                       RefuseAnimData;                                    // 0x48(0x8)
	byte                                                         CollisionChannel;                                  // 0x50(0x1)
	char                                                         pad0x7_KZJ9G[0x7];                                 // 0x51(0x7)
};


}