#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "AthenaStatusResponse_Structs.h"


// Size 0x18 (Full Size[0x48] - InheritedSize[0x30]
class StatusResponseApplyOneShotStatus: public StatusResponse
{
public:
	struct Status                                                StatusToApply;                                     // 0x30(0x18)
};


// Size 0x20 (Full Size[0x50] - InheritedSize[0x30]
class StatusResponseApplyPersistentStatus: public StatusResponse
{
public:
	struct Status                                                StatusToApply;                                     // 0x30(0x18)
	float                                                        DurationMultiplier;                                // 0x48(0x4)
};


// Size 0x8 (Full Size[0x38] - InheritedSize[0x30]
class StatusResponseHealthRegenerationPoolChange: public StatusResponse
{
public:
	float                                                        HealthPoolChangeIntensityMultiplier;               // 0x30(0x4)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class StatusResponseCancelStatus: public StatusResponse
{
public:
	TArray<class Class*>                                         Status;                                            // 0x30(0x10)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class StatusResponseSuspendStatus: public StatusResponse
{
public:
	TArray<class Class*>                                         Status;                                            // 0x30(0x10)
};


// Size 0x40 (Full Size[0x70] - InheritedSize[0x30]
class StatusResponseReportNoiseEvent: public StatusResponse
{
public:
	class UClass*                                                NoiseInstigator;                                   // 0x30(0x8)
	struct FName                                                 NoiseTag;                                          // 0x38(0x8)
	float                                                        NoiseRange;                                        // 0x40(0x4)
	float                                                        NoiseLoudness;                                     // 0x44(0x4)
	bool                                                         NoiseMultipleTicks;                                // 0x48(0x1)
	float                                                        NoiseTimerTick;                                    // 0x4c(0x4)
};


// Size 0x10 (Full Size[0x40] - InheritedSize[0x30]
class StatusResponseSetScalarParamOnCharacter: public StatusResponse
{
public:
	TArray<struct ScalarParamInfo>                               ParamsToChange;                                    // 0x30(0x10)
};


