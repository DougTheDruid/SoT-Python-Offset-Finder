#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x10
struct Vector4
{
public:
	float                                                        X;                                                 // 0x0(0x4)
	float                                                        Y;                                                 // 0x4(0x4)
	float                                                        Z;                                                 // 0x8(0x4)
	float                                                        W;                                                 // 0xc(0x4)
};


// Size 0x8
struct Vector2D
{
public:
	float                                                        X;                                                 // 0x0(0x4)
	float                                                        Y;                                                 // 0x4(0x4)
};


// Size 0x10
struct StringAssetReference
{
public:
	struct FString                                               AssetLongPathname;                                 // 0x0(0x10)
};


// Size 0x10
struct LinearColor
{
public:
	float                                                        R;                                                 // 0x0(0x4)
	float                                                        G;                                                 // 0x4(0x4)
	float                                                        B;                                                 // 0x8(0x4)
	float                                                        A;                                                 // 0xc(0x4)
};


// Size 0x10
struct Quat
{
public:
	float                                                        X;                                                 // 0x0(0x4)
	float                                                        Y;                                                 // 0x4(0x4)
	float                                                        Z;                                                 // 0x8(0x4)
	float                                                        W;                                                 // 0xc(0x4)
};


// Size 0x8
struct Int32RangeBound
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	char                                                         pad0x3_9ZSDB[0x3];                                 // 0x1(0x3)
	int                                                          Value;                                             // 0x4(0x4)
};


// Size 0x8
struct FloatRangeBound
{
public:
	char                                                         Type;                                              // 0x0(0x1)
	char                                                         pad0x3_6GCIT[0x3];                                 // 0x1(0x3)
	float                                                        Value;                                             // 0x4(0x4)
};


// Size 0x10
struct StringClassReference
{
public:
	char                                                         pad0x10_ANDW8[0x10];                               // 0x0(0x10)
};


// Size 0x4
struct Color
{
public:
	char                                                         B;                                                 // 0x0(0x1)
	char                                                         G;                                                 // 0x1(0x1)
	char                                                         R;                                                 // 0x2(0x1)
	char                                                         A;                                                 // 0x3(0x1)
};


// Size 0x8
struct IntPoint
{
public:
	int                                                          X;                                                 // 0x0(0x4)
	int                                                          Y;                                                 // 0x4(0x4)
};


// Size 0x10
struct Plane
{
public:
	char                                                         pad0xc_762Q7[0xc];                                 // 0x0(0xc)
	float                                                        W;                                                 // 0xc(0x4)
};


// Size 0x8
struct Int32Interval
{
public:
	int                                                          Min;                                               // 0x0(0x4)
	int                                                          Max;                                               // 0x4(0x4)
};


// Size 0xc
struct Vector
{
public:
	float                                                        X;                                                 // 0x0(0x4)
	float                                                        Y;                                                 // 0x4(0x4)
	float                                                        Z;                                                 // 0x8(0x4)
};


// Size 0x14
struct InterpCurvePointFloat
{
public:
	float                                                        InVal;                                             // 0x0(0x4)
	float                                                        OutVal;                                            // 0x4(0x4)
	float                                                        ArriveTangent;                                     // 0x8(0x4)
	float                                                        LeaveTangent;                                      // 0xc(0x4)
	char                                                         InterpMode;                                        // 0x10(0x1)
	char                                                         pad0x3_SBNMJ[0x3];                                 // 0x11(0x3)
};


// Size 0x4
struct PackedNormal
{
public:
	char                                                         X;                                                 // 0x0(0x1)
	char                                                         Y;                                                 // 0x1(0x1)
	char                                                         Z;                                                 // 0x2(0x1)
	char                                                         W;                                                 // 0x3(0x1)
};


// Size 0x0
struct Default__ScriptStruct
{
public:
};


// Size 0x8
struct DateTime
{
public:
	char                                                         pad0x8_EJL9B[0x8];                                 // 0x0(0x8)
};


// Size 0xc
struct IntVector
{
public:
	int                                                          X;                                                 // 0x0(0x4)
	int                                                          Y;                                                 // 0x4(0x4)
	int                                                          Z;                                                 // 0x8(0x4)
};


// Size 0x10
struct Guid
{
public:
	int                                                          A;                                                 // 0x0(0x4)
	int                                                          B;                                                 // 0x4(0x4)
	int                                                          C;                                                 // 0x8(0x4)
	int                                                          D;                                                 // 0xc(0x4)
};


// Size 0x1
struct FallbackStruct
{
public:
	char                                                         pad0x1_WLSUB[0x1];                                 // 0x0(0x1)
};


// Size 0x8
struct RandomStream
{
public:
	int                                                          InitialSeed;                                       // 0x0(0x4)
	int                                                          Seed;                                              // 0x4(0x4)
};


// Size 0xc
struct Rotator
{
public:
	float                                                        Pitch;                                             // 0x0(0x4)
	float                                                        Yaw;                                               // 0x4(0x4)
	float                                                        Roll;                                              // 0x8(0x4)
};


// Size 0x8
struct FloatInterval
{
public:
	float                                                        Min;                                               // 0x0(0x4)
	float                                                        Max;                                               // 0x4(0x4)
};


// Size 0x8
struct Timespan
{
public:
	char                                                         pad0x8_38ZAQ[0x8];                                 // 0x0(0x8)
};


// Size 0x40
struct Matrix
{
public:
	struct Plane                                                 XPlane;                                            // 0x0(0x10)
	struct Plane                                                 YPlane;                                            // 0x10(0x10)
	struct Plane                                                 ZPlane;                                            // 0x20(0x10)
	struct Plane                                                 WPlane;                                            // 0x30(0x10)
};


// Size 0x1c
struct BoxSphereBounds
{
public:
	struct Vector                                                Origin;                                            // 0x0(0xc)
	struct Vector                                                BoxExtent;                                         // 0xc(0xc)
	float                                                        SphereRadius;                                      // 0x18(0x4)
};


// Size 0x3c
struct OrientedBox
{
public:
	struct Vector                                                Center;                                            // 0x0(0xc)
	struct Vector                                                AxisX;                                             // 0xc(0xc)
	struct Vector                                                AxisY;                                             // 0x18(0xc)
	struct Vector                                                AxisZ;                                             // 0x24(0xc)
	float                                                        ExtentX;                                           // 0x30(0x4)
	float                                                        ExtentY;                                           // 0x34(0x4)
	float                                                        ExtentZ;                                           // 0x38(0x4)
};


// Size 0x50
struct InterpCurvePointQuat
{
public:
	float                                                        InVal;                                             // 0x0(0x4)
	char                                                         pad0xc_O0YTE[0xc];                                 // 0x4(0xc)
	struct Quat                                                  OutVal;                                            // 0x10(0x10)
	struct Quat                                                  ArriveTangent;                                     // 0x20(0x10)
	struct Quat                                                  LeaveTangent;                                      // 0x30(0x10)
	char                                                         InterpMode;                                        // 0x40(0x1)
	char                                                         pad0xf_D5GEU[0xf];                                 // 0x41(0xf)
};


// Size 0x1c
struct Box
{
public:
	struct Vector                                                Min;                                               // 0x0(0xc)
	struct Vector                                                Max;                                               // 0xc(0xc)
	char                                                         IsValid;                                           // 0x18(0x1)
	char                                                         pad0x3_8PYQ3[0x3];                                 // 0x19(0x3)
};


// Size 0x10
struct Int32Range
{
public:
	struct Int32RangeBound                                       LowerBound;                                        // 0x0(0x8)
	struct Int32RangeBound                                       UpperBound;                                        // 0x8(0x8)
};


// Size 0x18
struct TwoVectors
{
public:
	struct Vector                                                v1;                                                // 0x0(0xc)
	struct Vector                                                v2;                                                // 0xc(0xc)
};


// Size 0x30
struct Transform
{
public:
	struct Quat                                                  Rotation;                                          // 0x0(0x10)
	struct Vector                                                Translation;                                       // 0x10(0xc)
	char                                                         pad0x4_KST3I[0x4];                                 // 0x1c(0x4)
	struct Vector                                                Scale3D;                                           // 0x20(0xc)
	char                                                         pad0x4_XPIJ8[0x4];                                 // 0x2c(0x4)
};


// Size 0x2c
struct InterpCurvePointVector
{
public:
	float                                                        InVal;                                             // 0x0(0x4)
	struct Vector                                                OutVal;                                            // 0x4(0xc)
	struct Vector                                                ArriveTangent;                                     // 0x10(0xc)
	struct Vector                                                LeaveTangent;                                      // 0x1c(0xc)
	char                                                         InterpMode;                                        // 0x28(0x1)
	char                                                         pad0x3_NEC1R[0x3];                                 // 0x29(0x3)
};


// Size 0x18
struct InterpCurveFloat
{
public:
	TArray<struct InterpCurvePointFloat>                         Points;                                            // 0x0(0x10)
	bool                                                         bIsLooped;                                         // 0x10(0x1)
	char                                                         pad0x3_FRQN4[0x3];                                 // 0x11(0x3)
	float                                                        LoopKeyOffset;                                     // 0x14(0x4)
};


// Size 0x14
struct Box2D
{
public:
	struct Vector2D                                              Min;                                               // 0x0(0x8)
	struct Vector2D                                              Max;                                               // 0x8(0x8)
	char                                                         IsValid;                                           // 0x10(0x1)
	char                                                         pad0x3_Z4APT[0x3];                                 // 0x11(0x3)
};


// Size 0x10
struct FloatRange
{
public:
	struct FloatRangeBound                                       LowerBound;                                        // 0x0(0x8)
	struct FloatRangeBound                                       UpperBound;                                        // 0x8(0x8)
};


// Size 0x20
struct InterpCurvePointVector2D
{
public:
	float                                                        InVal;                                             // 0x0(0x4)
	struct Vector2D                                              OutVal;                                            // 0x4(0x8)
	struct Vector2D                                              ArriveTangent;                                     // 0xc(0x8)
	struct Vector2D                                              LeaveTangent;                                      // 0x14(0x8)
	char                                                         InterpMode;                                        // 0x1c(0x1)
	char                                                         pad0x3_XQERK[0x3];                                 // 0x1d(0x3)
};


// Size 0x38
struct InterpCurvePointLinearColor
{
public:
	float                                                        InVal;                                             // 0x0(0x4)
	struct LinearColor                                           OutVal;                                            // 0x4(0x10)
	struct LinearColor                                           ArriveTangent;                                     // 0x14(0x10)
	struct LinearColor                                           LeaveTangent;                                      // 0x24(0x10)
	char                                                         InterpMode;                                        // 0x34(0x1)
	char                                                         pad0x3_IV4FK[0x3];                                 // 0x35(0x3)
};


// Size 0x18
struct InterpCurveLinearColor
{
public:
	TArray<struct InterpCurvePointLinearColor>                   Points;                                            // 0x0(0x10)
	bool                                                         bIsLooped;                                         // 0x10(0x1)
	char                                                         pad0x3_F2GDW[0x3];                                 // 0x11(0x3)
	float                                                        LoopKeyOffset;                                     // 0x14(0x4)
};


// Size 0x18
struct InterpCurveVector2D
{
public:
	TArray<struct InterpCurvePointVector2D>                      Points;                                            // 0x0(0x10)
	bool                                                         bIsLooped;                                         // 0x10(0x1)
	char                                                         pad0x3_I22N1[0x3];                                 // 0x11(0x3)
	float                                                        LoopKeyOffset;                                     // 0x14(0x4)
};


// Size 0x50
struct InterpCurvePointTwoVectors
{
public:
	float                                                        InVal;                                             // 0x0(0x4)
	struct TwoVectors                                            OutVal;                                            // 0x4(0x18)
	struct TwoVectors                                            ArriveTangent;                                     // 0x1c(0x18)
	struct TwoVectors                                            LeaveTangent;                                      // 0x34(0x18)
	char                                                         InterpMode;                                        // 0x4c(0x1)
	char                                                         pad0x3_PX5YN[0x3];                                 // 0x4d(0x3)
};


// Size 0x18
struct InterpCurveVector
{
public:
	TArray<struct InterpCurvePointVector>                        Points;                                            // 0x0(0x10)
	bool                                                         bIsLooped;                                         // 0x10(0x1)
	char                                                         pad0x3_2X10H[0x3];                                 // 0x11(0x3)
	float                                                        LoopKeyOffset;                                     // 0x14(0x4)
};


// Size 0x18
struct InterpCurveQuat
{
public:
	TArray<struct InterpCurvePointQuat>                          Points;                                            // 0x0(0x10)
	bool                                                         bIsLooped;                                         // 0x10(0x1)
	char                                                         pad0x3_ONIVR[0x3];                                 // 0x11(0x3)
	float                                                        LoopKeyOffset;                                     // 0x14(0x4)
};


// Size 0x18
struct InterpCurveTwoVectors
{
public:
	TArray<struct InterpCurvePointTwoVectors>                    Points;                                            // 0x0(0x10)
	bool                                                         bIsLooped;                                         // 0x10(0x1)
	char                                                         pad0x3_QW5CZ[0x3];                                 // 0x11(0x3)
	float                                                        LoopKeyOffset;                                     // 0x14(0x4)
};


