#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "AthenaEngine_Structs.h"


// Size 0x130 (Full Size[0x5e0] - InheritedSize[0x4b0]
class DynamicColourPointLightComponent: public PointLightComponent
{
public:
	struct                                                       ActivationCurve;                                   // 0x4a8(0x80)
	struct                                                       DeactivationCurve;                                 // 0x528(0x80)
};


// Size 0x30 (Full Size[0xf8] - InheritedSize[0xc8]
class SkeletalMeshAggregateTickComponent: public ActorComponent
{
public:
	class SkeletalMeshComponent*                                 Mesh;                                              // 0xc8(0x8)
};


// Size 0x40 (Full Size[0x108] - InheritedSize[0xc8]
class PrimitiveCollisionExtentAdjustOverTimeComponent: public ActorComponent
{
public:
	float                                                        DelayBeforeExtentAdjustment;                       // 0xc8(0x4)
	class World*                                                 CachedWorld;                                       // 0xf8(0x8)
};


// Size 0x30 (Full Size[0xf8] - InheritedSize[0xc8]
class RotateMeshToActorComponent: public ActorComponent
{
public:
	class MeshComponent*                                         MeshToRotate;                                      // 0xc8(0x8)
	class Actor*                                                 ActorToRotateTo;                                   // 0xd0(0x8)
	float                                                        CloseProximityRadius;                              // 0xd8(0x4)
	bool                                                         Use2DDistanceForCloseProximityRadius;              // 0xdc(0x1)
	bool                                                         WhenInCloseProximityKeepLastYaw;                   // 0xdd(0x1)
	float                                                        RotationSpeed;                                     // 0xe0(0x4)
	bool                                                         PreventPitchModification;                          // 0xe4(0x1)
	float                                                        MaxPitch;                                          // 0xe8(0x4)
	float                                                        CloseProximityYawRotation;                         // 0xec(0x4)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class PersistentAssetCollectionDataAsset: public DataAsset
{
public:
	TArray<class Class*>                                         Blueprints;                                        // 0x28(0x10)
	TArray<class DataAsset*>                                     DataAssets;                                        // 0x38(0x10)
};


// Size 0x28 (Full Size[0x50] - InheritedSize[0x28]
class StringToAssetClassMap: public DataAsset
{
public:
	TArray<struct StringAssetClassPair>                          StringAssetClassPairs;                             // 0x28(0x10)
};


// Size 0x18 (Full Size[0x120] - InheritedSize[0x108]
class SphereCollisionExtentAdjustOverTimeComponent: public PrimitiveCollisionExtentAdjustOverTimeComponent
{
public:
	bool                                                         ShouldAdjustSphereRadius;                          // 0x108(0x1)
	float                                                        PostAdjustmentSphereRadius;                        // 0x10c(0x4)
	float                                                        ServerSizeScale;                                   // 0x110(0x4)
	class SphereComponent*                                       SphereCollisionToAdjust;                           // 0x118(0x8)
};


// Size 0x30 (Full Size[0x138] - InheritedSize[0x108]
class BoxCollisionExtentAdjustOverTimeComponent: public PrimitiveCollisionExtentAdjustOverTimeComponent
{
public:
	bool                                                         ShouldAdjustBoxExtentX;                            // 0x108(0x1)
	float                                                        PostAdjustmentBoxExtentX;                          // 0x10c(0x4)
	bool                                                         ShouldAdjustBoxExtentY;                            // 0x110(0x1)
	float                                                        PostAdjustmentBoxExtentY;                          // 0x114(0x4)
	bool                                                         ShouldAdjustBoxExtentZ;                            // 0x118(0x1)
	float                                                        PostAdjustmentBoxExtentZ;                          // 0x11c(0x4)
	struct                                                       ServerSizeScale;                                   // 0x120(0xc)
	class BoxComponent*                                          BoxCollisionToAdjust;                              // 0x130(0x8)
};


