// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x0 (Full Size[0x620] - InheritedSize[0x620]
class ControlPointMeshComponent: public StaticMeshComponent
{
public:
};


// Size 0x1e8 (Full Size[0x210] - InheritedSize[0x28]
class LandscapeInfo: public Object
{
public:
	char                                                         pad0x1c_WNUOY[0x1c];                               // 0x28(0x1c)
	struct Guid                                                  LandscapeGuid;                                     // 0x44(0x10)
	int                                                          ComponentSizeQuads;                                // 0x54(0x4)
	int                                                          SubsectionSizeQuads;                               // 0x58(0x4)
	int                                                          ComponentNumSubsections;                           // 0x5c(0x4)
	struct Vector                                                DrawScale;                                         // 0x60(0xc)
	char                                                         pad0x1a4_T809V[0x1a4];                             // 0x6c(0x1a4)
};


// Size 0x160 (Full Size[0x720] - InheritedSize[0x5c0]
class LandscapeComponent: public PrimitiveComponent
{
public:
	int                                                          SectionBaseX;                                      // 0x5b8(0x4)
	int                                                          SectionBaseY;                                      // 0x5bc(0x4)
	int                                                          ComponentSizeQuads;                                // 0x5c0(0x4)
	int                                                          SubsectionSizeQuads;                               // 0x5c4(0x4)
	int                                                          NumSubsections;                                    // 0x5c8(0x4)
	char                                                         pad0x4_4NRYM[0x4];                                 // 0x5cc(0x4)
	class MaterialInterface*                                     OverrideMaterial;                                  // 0x5d0(0x8)
	class MaterialInterface*                                     OverrideHoleMaterial;                              // 0x5d8(0x8)
	class MaterialInstanceConstant*                              MaterialInstance;                                  // 0x5e0(0x8)
	TArray<struct WeightmapLayerAllocationInfo>                  WeightmapLayerAllocations;                         // 0x5e8(0x10)
	TArray<class Texture2D*>                                     WeightmapTextures;                                 // 0x5f8(0x10)
	class Texture2D*                                             XYOffsetmapTexture;                                // 0x608(0x8)
	struct Vector4                                               WeightmapScaleBias;                                // 0x610(0x10)
	float                                                        WeightmapSubsectionOffset;                         // 0x620(0x4)
	char                                                         pad0xc_DRXY3[0xc];                                 // 0x624(0xc)
	struct Vector4                                               HeightmapScaleBias;                                // 0x630(0x10)
	class Texture2D*                                             HeightmapTexture;                                  // 0x640(0x8)
	struct Box                                                   CachedLocalBox;                                    // 0x648(0x1c)
	TArray<struct Guid>                                          IrrelevantLights;                                  // 0x680(0x10)
	char                                                         pad0x10_N1PYB[0x10];                               // 0x690(0x10)
	int                                                          CollisionMipLevel;                                 // 0x6a0(0x4)
	float                                                        StaticLightingResolution;                          // 0x6a4(0x4)
	int                                                          ForcedLOD;                                         // 0x6a8(0x4)
	int                                                          LODBias;                                           // 0x6ac(0x4)
	struct Guid                                                  StateId;                                           // 0x6b0(0x10)
	struct Guid                                                  BakedTextureMaterialGuid;                          // 0x6c0(0x10)
	class Texture2D*                                             GIBakedBaseColorTexture;                           // 0x6d0(0x8)
	byte                                                         MobileBlendableLayerMask;                          // 0x6d8(0x1)
	char                                                         pad0x7_JEEMA[0x7];                                 // 0x6d9(0x7)
	class MaterialInterface*                                     MobileMaterialInterface;                           // 0x6e0(0x8)
	class Texture2D*                                             MobileWeightNormalmapTexture;                      // 0x6e8(0x8)
	char                                                         pad0x30_I5OFT[0x30];                               // 0x6f0(0x30)
};


// Size 0x0 (Full Size[0x3c8] - InheritedSize[0x3c8]
class LandscapeGizmoActor: public Actor
{
public:
};


// Size 0x50 (Full Size[0x418] - InheritedSize[0x3c8]
class LandscapeGizmoActiveActor: public LandscapeGizmoActor
{
public:
	char                                                         pad0x50_0P0NF[0x50];                               // 0x3c8(0x50)
};


// Size 0x0 (Full Size[0x5c0] - InheritedSize[0x5c0]
class LandscapeGizmoRenderComponent: public PrimitiveComponent
{
public:
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class LandscapeGrassType: public Object
{
public:
	TArray<struct GrassVariety>                                  GrassVarieties;                                    // 0x28(0x10)
	class StaticMesh*                                            GrassMesh;                                         // 0x38(0x8)
	float                                                        GrassDensity;                                      // 0x40(0x4)
	float                                                        PlacementJitter;                                   // 0x44(0x4)
	int                                                          StartCullDistance;                                 // 0x48(0x4)
	int                                                          EndCullDistance;                                   // 0x4c(0x4)
	bool                                                         RandomRotation;                                    // 0x50(0x1)
	bool                                                         AlignToSurface;                                    // 0x51(0x1)
	char                                                         pad0x6_OUZMY[0x6];                                 // 0x52(0x6)
};


// Size 0xd0 (Full Size[0x690] - InheritedSize[0x5c0]
class LandscapeHeightfieldCollisionComponent: public PrimitiveComponent
{
public:
	TArray<class LandscapeLayerInfoObject*>                      ComponentLayerInfos;                               // 0x5b8(0x10)
	int                                                          SectionBaseX;                                      // 0x5c8(0x4)
	int                                                          SectionBaseY;                                      // 0x5cc(0x4)
	int                                                          CollisionSizeQuads;                                // 0x5d0(0x4)
	float                                                        CollisionScale;                                    // 0x5d4(0x4)
	TArray<Byte CollisionQuadFlags>                              CollisionQuadFlags;                                // 0x5d8(0x10)
	struct Guid                                                  HeightfieldGuid;                                   // 0x5e8(0x10)
	struct Box                                                   CachedLocalBox;                                    // 0x5f8(0x1c)
	TArray<class PhysicalMaterial*>                              CookedPhysicalMaterials;                           // 0x640(0x10)
	char                                                         pad0x40_5EFMR[0x40];                               // 0x650(0x40)
};


// Size 0x20 (Full Size[0x6b0] - InheritedSize[0x690]
class LandscapeMeshCollisionComponent: public LandscapeHeightfieldCollisionComponent
{
public:
	struct Guid                                                  MeshGuid;                                          // 0x690(0x10)
	char                                                         pad0x10_H9OIQ[0x10];                               // 0x6a0(0x10)
};


// Size 0x50 (Full Size[0x78] - InheritedSize[0x28]
class LandscapeInfoMap: public Object
{
public:
	char                                                         pad0x50_KP2U2[0x50];                               // 0x28(0x50)
};


// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class LandscapeLayerInfoObject: public Object
{
public:
	struct FName                                                 LayerName;                                         // 0x28(0x8)
	class PhysicalMaterial*                                      PhysMaterial;                                      // 0x30(0x8)
	float                                                        Hardness;                                          // 0x38(0x4)
	char                                                         pad0x4_HTP0J[0x4];                                 // 0x3c(0x4)
};


// Size 0x10 (Full Size[0x1c8] - InheritedSize[0x1b8]
class LandscapeMaterialInstanceConstant: public MaterialInstanceConstant
{
public:
	bool                                                         bIsLayerThumbnail;                                 // 0x1b8(0x1)
	char                                                         pad0x3_T7LGW[0x3];                                 // 0x1b9(0x3)
	int                                                          DataWeightmapIndex;                                // 0x1bc(0x4)
	int                                                          DataWeightmapSize;                                 // 0x1c0(0x4)
	char                                                         pad0x4_SPY20[0x4];                                 // 0x1c4(0x4)
};


// Size 0x8 (Full Size[0x3d0] - InheritedSize[0x3c8]
class LandscapeMeshProxyActor: public Actor
{
public:
	class LandscapeMeshProxyComponent*                           LandscapeMeshProxyComponent;                       // 0x3c8(0x8)
};


// Size 0x388 (Full Size[0x750] - InheritedSize[0x3c8]
class LandscapeProxy: public Actor
{
public:
	char                                                         pad0x8_TZU4A[0x8];                                 // 0x3c8(0x8)
	class LandscapeSplinesComponent*                             SplineComponent;                                   // 0x3d0(0x8)
	struct Guid                                                  LandscapeGuid;                                     // 0x3d8(0x10)
	struct IntPoint                                              LandscapeSectionOffset;                            // 0x3e8(0x8)
	int                                                          MaxLODLevel;                                       // 0x3f0(0x4)
	int                                                          StaticLightingLOD;                                 // 0x3f4(0x4)
	class PhysicalMaterial*                                      DefaultPhysMaterial;                               // 0x3f8(0x8)
	float                                                        StreamingDistanceMultiplier;                       // 0x400(0x4)
	char                                                         pad0x4_8L8LR[0x4];                                 // 0x404(0x4)
	class MaterialInterface*                                     LandscapeMaterial;                                 // 0x408(0x8)
	class MaterialInterface*                                     LandscapeHoleMaterial;                             // 0x410(0x8)
	float                                                        LODDistanceFactor;                                 // 0x418(0x4)
	char                                                         pad0x4_SUEFI[0x4];                                 // 0x41c(0x4)
	TArray<class LandscapeComponent*>                            LandscapeComponents;                               // 0x420(0x10)
	TArray<class LandscapeHeightfieldCollisionComponent*>        CollisionComponents;                               // 0x430(0x10)
	TArray<class HierarchicalInstancedStaticMeshComponent*>      FoliageComponents;                                 // 0x440(0x10)
	char                                                         pad0x70_W7Y8P[0x70];                               // 0x450(0x70)
	float                                                        StaticLightingResolution;                          // 0x4c0(0x4)
	bool                                                         bCastStaticShadow;                                 // 0x4e0(0x1)
	bool                                                         bCastShadowAsTwoSided;                             // 0x4e0(0x1)
	bool                                                         bAffectDynamicIndirectLighting;                    // 0x4e0(0x1)
	bool                                                         bCastFarShadow;                                    // 0x4e0(0x1)
	bool                                                         bIsProxy;                                          // 0x4e0(0x1)
	bool                                                         bUseFarCascadeLPVBiasMultiplier;                   // 0x4e0(0x1)
	char                                                         pad0x3_WTAOU[0x3];                                 // 0x4e1(0x3)
	float                                                        LpvIntensityMultiplier;                            // 0x4e4(0x4)
	float                                                        LpvBiasMultiplier;                                 // 0x4e8(0x4)
	float                                                        FarCascadeLPVBiasMultiplier;                       // 0x4ec(0x4)
	struct LightmassPrimitiveSettings                            LightmassSettings;                                 // 0x4f0(0x18)
	int                                                          CollisionMipLevel;                                 // 0x508(0x4)
	float                                                        CollisionThickness;                                // 0x50c(0x4)
	struct BodyInstance                                          BodyInstance;                                      // 0x510(0x180)
	int                                                          ComponentSizeQuads;                                // 0x690(0x4)
	int                                                          SubsectionSizeQuads;                               // 0x694(0x4)
	int                                                          NumSubsections;                                    // 0x698(0x4)
	bool                                                         bUsedForNavigation;                                // 0x69c(0x1)
	bool                                                         bReflected;                                        // 0x69c(0x1)
	char                                                         pad0x3_MB7JA[0x3];                                 // 0x69d(0x3)
	byte                                                         NavigationGeometryGatheringMode;                   // 0x6a0(0x1)
	byte                                                         LODFalloff;                                        // 0x6a1(0x1)
	char                                                         pad0xae_YLRBZ[0xae];                               // 0x6a2(0xae)
};


// Size 0x30 (Full Size[0x650] - InheritedSize[0x620]
class LandscapeMeshProxyComponent: public StaticMeshComponent
{
public:
	struct Guid                                                  LandscapeGuid;                                     // 0x620(0x10)
	TArray<struct IntPoint>                                      ProxyComponentBases;                               // 0x630(0x10)
	char                                                         pad0x10_ZWQ41[0x10];                               // 0x640(0x10)
};


// Size 0x0 (Full Size[0x750] - InheritedSize[0x750]
class Landscape: public LandscapeProxy
{
public:
};


// Size 0x30 (Full Size[0x5f0] - InheritedSize[0x5c0]
class LandscapeSplinesComponent: public PrimitiveComponent
{
public:
	TArray<class LandscapeSplineControlPoint*>                   ControlPoints;                                     // 0x5b8(0x10)
	TArray<class LandscapeSplineSegment*>                        Segments;                                          // 0x5c8(0x10)
	TArray<class MeshComponent*>                                 CookedForeignMeshComponents;                       // 0x5d8(0x10)
	char                                                         pad0x8_9N7VO[0x8];                                 // 0x5e8(0x8)
};


// Size 0x88 (Full Size[0xb0] - InheritedSize[0x28]
class LandscapeSplineSegment: public Object
{
public:
	struct LandscapeSplineSegmentConnection                      Connections;                                       // 0x28(0x18)
	char                                                         pad0x18_C5V0T[0x18];                               // 0x40(0x18)
	struct InterpCurveVector                                     SplineInfo;                                        // 0x58(0x18)
	TArray<struct LandscapeSplineInterpPoint>                    Points;                                            // 0x70(0x10)
	struct Box                                                   Bounds;                                            // 0x80(0x1c)
	char                                                         pad0x4_THZUT[0x4];                                 // 0x9c(0x4)
	TArray<class SplineMeshComponent*>                           LocalMeshComponents;                               // 0xa0(0x10)
};


// Size 0x70 (Full Size[0x98] - InheritedSize[0x28]
class LandscapeSplineControlPoint: public Object
{
public:
	struct Vector                                                Location;                                          // 0x28(0xc)
	struct Rotator                                               Rotation;                                          // 0x34(0xc)
	float                                                        Width;                                             // 0x40(0x4)
	float                                                        SideFalloff;                                       // 0x44(0x4)
	float                                                        EndFalloff;                                        // 0x48(0x4)
	char                                                         pad0x4_0INJ1[0x4];                                 // 0x4c(0x4)
	TArray<struct LandscapeSplineConnection>                     ConnectedSegments;                                 // 0x50(0x10)
	TArray<struct LandscapeSplineInterpPoint>                    Points;                                            // 0x60(0x10)
	struct Box                                                   Bounds;                                            // 0x70(0x1c)
	char                                                         pad0x4_QHYQK[0x4];                                 // 0x8c(0x4)
	class ControlPointMeshComponent*                             LocalMeshComponent;                                // 0x90(0x8)
};


// Size 0x10 (Full Size[0x80] - InheritedSize[0x70]
class MaterialExpressionLandscapeGrassOutput: public MaterialExpressionCustomOutput
{
public:
	TArray<struct GrassInput>                                    GrassTypes;                                        // 0x70(0x10)
};


// Size 0x20 (Full Size[0x90] - InheritedSize[0x70]
class MaterialExpressionLandscapeLayerBlend: public MaterialExpression
{
public:
	TArray<struct LayerBlendInput>                               Layers;                                            // 0x70(0x10)
	struct Guid                                                  ExpressionGUID;                                    // 0x80(0x10)
};


// Size 0x18 (Full Size[0x88] - InheritedSize[0x70]
class MaterialExpressionLandscapeLayerCoords: public MaterialExpression
{
public:
	byte                                                         MappingType;                                       // 0x70(0x1)
	byte                                                         CustomUVType;                                      // 0x71(0x1)
	char                                                         pad0x2_MQKRJ[0x2];                                 // 0x72(0x2)
	float                                                        MappingScale;                                      // 0x74(0x4)
	float                                                        MappingRotation;                                   // 0x78(0x4)
	float                                                        MappingPanU;                                       // 0x7c(0x4)
	float                                                        MappingPanV;                                       // 0x80(0x4)
	char                                                         pad0x4_9UXJP[0x4];                                 // 0x84(0x4)
};


// Size 0x20 (Full Size[0x90] - InheritedSize[0x70]
class MaterialExpressionLandscapeLayerSample: public MaterialExpression
{
public:
	struct FName                                                 ParameterName;                                     // 0x70(0x8)
	float                                                        PreviewWeight;                                     // 0x78(0x4)
	struct Guid                                                  ExpressionGUID;                                    // 0x7c(0x10)
	char                                                         pad0x4_HZ5FW[0x4];                                 // 0x8c(0x4)
};


// Size 0x90 (Full Size[0x100] - InheritedSize[0x70]
class MaterialExpressionLandscapeLayerSwitch: public MaterialExpression
{
public:
	struct ExpressionInput                                       LayerUsed;                                         // 0x70(0x38)
	struct ExpressionInput                                       LayerNotUsed;                                      // 0xa8(0x38)
	struct FName                                                 ParameterName;                                     // 0xe0(0x8)
	bool                                                         PreviewUsed;                                       // 0xe8(0x1)
	char                                                         pad0x3_5292Q[0x3];                                 // 0xe9(0x3)
	struct Guid                                                  ExpressionGUID;                                    // 0xec(0x10)
	char                                                         pad0x4_4S7QJ[0x4];                                 // 0xfc(0x4)
};


// Size 0x98 (Full Size[0x108] - InheritedSize[0x70]
class MaterialExpressionLandscapeLayerWeight: public MaterialExpression
{
public:
	struct ExpressionInput                                       Base;                                              // 0x70(0x38)
	struct ExpressionInput                                       Layer;                                             // 0xa8(0x38)
	struct FName                                                 ParameterName;                                     // 0xe0(0x8)
	float                                                        PreviewWeight;                                     // 0xe8(0x4)
	struct Vector                                                ConstBase;                                         // 0xec(0xc)
	struct Guid                                                  ExpressionGUID;                                    // 0xf8(0x10)
};


// Size 0x10 (Full Size[0x80] - InheritedSize[0x70]
class MaterialExpressionLandscapeVisibilityMask: public MaterialExpression
{
public:
	struct Guid                                                  ExpressionGUID;                                    // 0x70(0x10)
};


}