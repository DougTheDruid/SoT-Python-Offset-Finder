#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "Overheating_Structs.h"


// Size 0x98 (Full Size[0xc0] - InheritedSize[0x28]
class OverheatingDataAsset: public DataAsset
{
public:
	float                                                        InitialDelayForCooldown;                           // 0x28(0x4)
	float                                                        NormalDelayForCooldown;                            // 0x2c(0x4)
	float                                                        SubmergedInWaterDelayForCooldown;                  // 0x30(0x4)
	float                                                        OverheatingToAddPerBoildingWaterSplash;            // 0x34(0x4)
	float                                                        OverheatingToAddPerWeaponFired;                    // 0x38(0x4)
	float                                                        OverheatingToAddPerFireDamage;                     // 0x3c(0x4)
	float                                                        OverheatingToRemovePerCooldownDelay;               // 0x40(0x4)
	float                                                        OverheatingToRemovePerWaterSplash;                 // 0x44(0x4)
	float                                                        OverheatingToRemoveWhenExposedToRain;              // 0x48(0x4)
	float                                                        OverheatingToRemoveWhenSubmergedInWater;           // 0x4c(0x4)
	float                                                        OverheatingToAddWhenSubmergedInSuperHeatedWater;   // 0x50(0x4)
	float                                                        HeatBuildingDuration;                              // 0x54(0x4)
	float                                                        SteamingDuration;                                  // 0x58(0x4)
	float                                                        ExplosionDuration;                                 // 0x5c(0x4)
	struct FName                                                 VfxEmitterLocation;                                // 0x60(0x8)
	class Object*                                                HeatBuildingVfx;                                   // 0x68(0x8)
	class Object*                                                ExplosionVfx;                                      // 0x70(0x8)
	TArray<struct OverheatingDamageTableEntry>                   DamageTable;                                       // 0x78(0x10)
	class WwiseEvent*                                            ExplosionSfx;                                      // 0x88(0x8)
	class WwiseEvent*                                            PlayHeatingLoopSfx;                                // 0x90(0x8)
	class WwiseEvent*                                            StopHeatingLoopSfx;                                // 0x98(0x8)
	class WwiseEvent*                                            SteamingSfx;                                       // 0xa0(0x8)
	class WwiseEvent*                                            ExtinguishSfx;                                     // 0xa8(0x8)
	class WwiseObjectPoolWrapper*                                PoolWrapper;                                       // 0xb0(0x8)
	struct FName                                                 OverheatingRtpcName;                               // 0xb8(0x8)
};


// Size 0x108 (Full Size[0x1c0] - InheritedSize[0xb8]
class OverheatingComponent: public ActorComponent
{
public:
	char                                                         pad0x38_RRKEI[0x38];                               // 0xb8(0x38)
	class StaticMeshComponent*                                   VisualiserStaticMeshComponent;                     // 0xf0(0x8)
	class ParticleSystemComponent*                               ExplosionVfxEmitter;                               // 0xf8(0x8)
	class ParticleSystemComponent*                               HeatBuildingVfxEmitter;                            // 0x100(0x8)
	class Actor*                                                 CooldownInstigator;                                // 0x108(0x8)
	class OverheatingDataAsset*                                  OverheatingDataAsset;                              // 0x110(0x8)
	struct OverheatingReplicatedData                             ReplicatedData;                                    // 0x118(0x8)
	int                                                          OverheatingMaterialIndex;                          // 0x120(0x4)
	float                                                        OverheatingLerpDuration;                           // 0x124(0x4)
	bool                                                         IsWieldableOrProxy;                                // 0x128(0x1)
	char                                                         pad0x6f_H01HY[0x6f];                               // 0x129(0x6f)
	float                                                        HandoverTimeRemainingInLerp;                       // 0x198(0x4)
	char                                                         pad0x24_6QXJO[0x24];                               // 0x19c(0x24)
};


