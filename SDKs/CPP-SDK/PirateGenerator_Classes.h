// Generated by DougTheDruid#2784 on Discord
// https://github.com/DougTheDruid
namespace DougsSDKDumper
{
//-----
// Classes
//-----

// Size 0x18 (Full Size[0x40] - InheritedSize[0x28]
class AnimationSwitchDataAsset: public DataAsset
{
public:
	float                                                        Threshold;                                         // 0x28(0x4)
	char                                                         pad0x4_5K1AI[0x4];                                 // 0x2c(0x4)
	TArray<struct Entries>                                       Entries;                                           // 0x30(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class CharacterMeshBakeFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x50 (Full Size[0x78] - InheritedSize[0x28]
class SkeletonsDataAsset: public DataAsset
{
public:
};


// Size 0x70 (Full Size[0x98] - InheritedSize[0x28]
class CharacterMeshBakeSpecification: public Object
{
public:
	bool                                                         StripTopLOD;                                       // 0x28(0x1)
	char                                                         pad0x7_LZIO2[0x7];                                 // 0x29(0x7)
	Class SkeletalMesh*                                          CharacterMesh;                                     // 0x30(0x8)
	Class SkeletalMesh*                                          BaseMeshReferenceSkeleton;                         // 0x38(0x8)
	Class SkeletonsDataAsset*                                    SourceSkeletons;                                   // 0x40(0x8)
	TArray<struct FName>                                         SourceSkeletonNames;                               // 0x48(0x10)
	TArray<Float SourceSkeletonWeights>                          SourceSkeletonWeights;                             // 0x58(0x10)
	TArray<struct BlendedSubMeshes>                              BlendedSubMeshes;                                  // 0x68(0x10)
	TArray<class SkeletalMesh*>                                  UnblendedSubMeshes;                                // 0x78(0x10)
	TArray<struct BlendShapes>                                   BlendShapes;                                       // 0x88(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class CharacterMeshBakeTestFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x10 (Full Size[0x148] - InheritedSize[0x138]
class ColorTexture: public Texture
{
public:
	Struct LinearColor                                           Color;                                             // 0x138(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class FileAccessFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class MaterialReferencesDataAsset: public DataAsset
{
public:
	TArray<struct MaterialReferences>                            MaterialReferences;                                // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PirateBodyShapeFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class PirateGeneratorMaterials: public Object
{
public:
	TArray<class MaterialInterface*>                             Materials;                                         // 0x28(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PirateGeneratorFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class WardrobeExcludeDataAsset: public DataAsset
{
public:
};


// Size 0xb0 (Full Size[0xd8] - InheritedSize[0x28]
class WardrobeDataAsset: public DataAsset
{
public:
	char                                                         pad0xa0_J68E3[0xa0];                               // 0x28(0xa0)
	TArray<struct AssetMap>                                      AssetMap;                                          // 0xc8(0x10)
};


// Size 0x100 (Full Size[0x138] - InheritedSize[0x38]
class PirateGeneratorSettings: public DeveloperSettings
{
public:
	Struct StringAssetReference                                  WardrobeDataAsset;                                 // 0x38(0x10)
	Class WardrobeDataAsset*                                     EditorWardrobeDataAsset;                           // 0x48(0x8)
	Struct FString                                               ConfigJson;                                        // 0x50(0x10)
	Struct FString                                               PiratesFolder;                                     // 0x60(0x10)
	Struct FString                                               WardrobeFolder;                                    // 0x70(0x10)
	TArray<struct FName>                                         DefaultWardrobeItems;                              // 0x80(0x10)
	Struct StringAssetReference                                  MaterialReferencesDataAsset;                       // 0x90(0x10)
	Struct StringAssetReference                                  SkeletonsDataAsset;                                // 0xa0(0x10)
	TArray<struct BaseSkeletonMeshes>                            BaseSkeletonMeshes;                                // 0xb0(0x10)
	TArray<struct Characterization>                              Characterization;                                  // 0xc0(0x10)
	TArray<Str SkeletonMeshFormats>                              SkeletonMeshFormats;                               // 0xd0(0x10)
	Struct StringAssetReference                                  FirstPersonAnimations;                             // 0xe0(0x10)
	Struct StringAssetReference                                  ThirdPersonAnimations;                             // 0xf0(0x10)
	TArray<Float LODScreenSizes>                                 LODScreenSizes;                                    // 0x100(0x10)
	TArray<Float LODHysteresis>                                  LODHysteresis;                                     // 0x110(0x10)
	TArray<struct ExcludeDataAssets>                             ExcludeDataAssets;                                 // 0x120(0x10)
	int                                                          DefaultPirateGenerationSeed;                       // 0x130(0x4)
	char                                                         pad0xc_1ADJ4[0xc];                                 // 0x132(0xc)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class PreparePirateMeshBakeTestFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


// Size 0xe0 (Full Size[0x220] - InheritedSize[0x140]
class TextureSwitch: public TextureProxy
{
public:
	char                                                         pad0x80_MA1JU[0x80];                               // 0x140(0x80)
	bool                                                         bDuplicated;                                       // 0x1c0(0x1)
	char                                                         pad0x7_GFSHA[0x7];                                 // 0x1c1(0x7)
	Struct TextureSwitchParameters                               DefaultParameters;                                 // 0x1c8(0x58)
};


// Size 0x38 (Full Size[0x258] - InheritedSize[0x220]
class TextureSwitchBySeed: public TextureSwitch
{
public:
	struct FName                                                 HashSource;                                        // 0x220(0x8)
	float                                                        FallbackProbability;                               // 0x228(0x4)
	struct FName                                                 FallbackReferenceName;                             // 0x22c(0x8)
	char                                                         pad0x4_1Q25Q[0x4];                                 // 0x234(0x4)
	Struct StringAssetReference                                  FallbackTexture;                                   // 0x238(0x10)
	TArray<struct Entries>                                       Entries;                                           // 0x248(0x10)
};


// Size 0x10 (Full Size[0x230] - InheritedSize[0x220]
class TextureSwitchByGender: public TextureSwitch
{
public:
	TArray<struct Entries>                                       Entries;                                           // 0x220(0x10)
};


// Size 0x10 (Full Size[0x230] - InheritedSize[0x220]
class TextureSwitchByEthnicity: public TextureSwitch
{
public:
	TArray<struct Entries>                                       Entries;                                           // 0x220(0x10)
};


// Size 0x10 (Full Size[0x230] - InheritedSize[0x220]
class TextureSwitchByBodyShape: public TextureSwitch
{
public:
	TArray<struct Entries>                                       Entries;                                           // 0x220(0x10)
};


// Size 0x20 (Full Size[0x240] - InheritedSize[0x220]
class TextureSwitchByItem: public TextureSwitch
{
public:
	Struct StringAssetReference                                  FallbackTexture;                                   // 0x220(0x10)
	TArray<struct Entries>                                       Entries;                                           // 0x230(0x10)
};


// Size 0x18 (Full Size[0x238] - InheritedSize[0x220]
class ColorTextureSwitchBySeed: public TextureSwitch
{
public:
	struct FName                                                 HashSource;                                        // 0x220(0x8)
	TArray<struct Entries>                                       Entries;                                           // 0x228(0x10)
};


// Size 0x30 (Full Size[0x58] - InheritedSize[0x28]
class WardrobeOutfitDataAsset: public DataAsset
{
public:
	TArray<struct FName>                                         FemaleWardrobeItems;                               // 0x28(0x10)
	TArray<struct FName>                                         MaleWardrobeItems;                                 // 0x38(0x10)
	TArray<struct BiasPerCategory>                               BiasPerCategory;                                   // 0x48(0x10)
};


// Size 0x0 (Full Size[0x28] - InheritedSize[0x28]
class WardrobeFunctionLibrary: public BlueprintFunctionLibrary
{
public:
};


}