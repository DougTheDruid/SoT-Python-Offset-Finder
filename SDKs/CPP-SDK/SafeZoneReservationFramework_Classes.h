#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x150 (Full Size[0x710] - InheritedSize[0x5c0]
class SafeZoneComponent: public CapsuleComponent
{
public:
	char                                                         pad0x10_EAZT4[0x10];                               // 0x5c0(0x10)
	float                                                        ExclusionRadius;                                   // 0x5d0(0x4)
	char                                                         pad0x4_021X9[0x4];                                 // 0x5d4(0x4)
	float                                                        ExclusionHeight;                                   // 0x5d8(0x4)
	struct FName                                                 SafeZoneEmptyCollisionProfile;                     // 0x5dc(0x8)
	bool                                                         AutoActivateSafeZone;                              // 0x5e4(0x1)
	bool                                                         DeactivateSafeZoneAfterExclusionRadiusIsEmpty;     // 0x5e5(0x1)
	bool                                                         UsePlayerTeleport;                                 // 0x5e6(0x1)
	char                                                         pad0x1_Y08Q6[0x1];                                 // 0x5e7(0x1)
	float                                                        PlayerTeleportRadius;                              // 0x5e8(0x4)
	char                                                         pad0x4_7H9GJ[0x4];                                 // 0x5ec(0x4)
	bool                                                         UseRepelForce;                                     // 0x5f0(0x1)
	char                                                         pad0x3_BVVVG[0x3];                                 // 0x5f1(0x3)
	float                                                        RepelForceRadius;                                  // 0x5f4(0x4)
	char                                                         pad0x4_FNAVJ[0x4];                                 // 0x5f8(0x4)
	float                                                        RepelForceExtents;                                 // 0x5fc(0x4)
	float                                                        RepelForceMin;                                     // 0x600(0x4)
	float                                                        RepelForceMax;                                     // 0x604(0x4)
	bool                                                         ApplyRepelForceAtCentreOfMass;                     // 0x608(0x1)
	char                                                         pad0x7_54575[0x7];                                 // 0x609(0x7)
	struct RuntimeFloatCurve                                     RepelForceGradientCurve;                           // 0x610(0x80)
	bool                                                         UseAngularImpulse;                                 // 0x690(0x1)
	char                                                         pad0x3_ULYSM[0x3];                                 // 0x691(0x3)
	float                                                        AngularImpulseRadius;                              // 0x694(0x4)
	char                                                         pad0x4_DCZFZ[0x4];                                 // 0x698(0x4)
	float                                                        AngularImpulseForce;                               // 0x69c(0x4)
	float                                                        TargetDeflectionAngle;                             // 0x6a0(0x4)
	bool                                                         IsSafeZoneEmpty;                                   // 0x6a4(0x1)
	bool                                                         StopAISpawning;                                    // 0x6a5(0x1)
	char                                                         pad0x2_HODUM[0x2];                                 // 0x6a6(0x2)
	struct FName                                                 CurrentCollisionProfile;                           // 0x6a8(0x8)
	char                                                         SafeZoneState;                                     // 0x6b0(0x1)
	char                                                         pad0x5f_7B2LP[0x5f];                               // 0x6b1(0x5f)
};


