#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

// Size 0x150 (Full Size[0x740] - InheritedSize[0x5f0]
class SafeZoneComponent: public CapsuleComponent
{
public:
	multicastinlinedelegate                                      OnSafeZoneIsEmptyDelegate;                         // 0x5f0(0x10)
	float                                                        ExclusionRadius;                                   // 0x600(0x4)
	float                                                        ExclusionHeight;                                   // 0x608(0x4)
	struct FName                                                 SafeZoneEmptyCollisionProfile;                     // 0x60c(0x8)
	bool                                                         AutoActivateSafeZone;                              // 0x614(0x1)
	bool                                                         DeactivateSafeZoneAfterExclusionRadiusIsEmpty;     // 0x615(0x1)
	bool                                                         UsePlayerTeleport;                                 // 0x616(0x1)
	float                                                        PlayerTeleportRadius;                              // 0x618(0x4)
	bool                                                         UseRepelForce;                                     // 0x620(0x1)
	float                                                        RepelForceRadius;                                  // 0x624(0x4)
	float                                                        RepelForceExtents;                                 // 0x62c(0x4)
	float                                                        RepelForceMin;                                     // 0x630(0x4)
	float                                                        RepelForceMax;                                     // 0x634(0x4)
	bool                                                         ApplyRepelForceAtCentreOfMass;                     // 0x638(0x1)
	struct RuntimeFloatCurve                                     RepelForceGradientCurve;                           // 0x640(0x80)
	bool                                                         UseAngularImpulse;                                 // 0x6c0(0x1)
	float                                                        AngularImpulseRadius;                              // 0x6c4(0x4)
	float                                                        AngularImpulseForce;                               // 0x6cc(0x4)
	float                                                        TargetDeflectionAngle;                             // 0x6d0(0x4)
	bool                                                         IsSafeZoneEmpty;                                   // 0x6d4(0x1)
	bool                                                         StopAISpawning;                                    // 0x6d5(0x1)
	struct FName                                                 CurrentCollisionProfile;                           // 0x6d8(0x8)
	char                                                         SafeZoneState;                                     // 0x6e0(0x1)
};


