#pragma once

// Generated by dougthedruid on Discord
// https://github.com/DougTheDruid

#include "Factions_Structs.h"


// Size 0x130 (Full Size[0x218] - InheritedSize[0xe8]
class FactionVoteAudioComponent: public VoteAudioComponent
{
public:
	class WwiseEvent*                                            FactionStart;                                      // 0xe8(0x8)
	class WwiseEvent*                                            Flip;                                              // 0xf0(0x8)
	class WwiseEvent*                                            Levelup;                                           // 0xf8(0x8)
	struct FName                                                 LevelupSwitchGroup;                                // 0x100(0x8)
	TArray<struct Name>                                          LevelupSwitchValues;                               // 0x108(0x10)
};


// Size 0x20 (Full Size[0x50] - InheritedSize[0x30]
class IsInFactionStatCondition: public TargetedStatCondition
{
public:
	bool                                                         CheckOwnerFaction;                                 // 0x30(0x1)
	bool                                                         RequiresOwnerMaxStreakLevel;                       // 0x31(0x1)
	class UClass*                                                RequiredOwnerFaction;                              // 0x38(0x8)
	bool                                                         CheckTargetFaction;                                // 0x40(0x1)
	bool                                                         RequiresTargetMaxStreakLevel;                      // 0x41(0x1)
	class UClass*                                                RequiredTargetFaction;                             // 0x48(0x8)
};


// Size 0x20 (Full Size[0x48] - InheritedSize[0x28]
class StreakMaterialDataAsset: public DataAsset
{
public:
	TArray<struct StreakMaterialValue>                           MaterialValues;                                    // 0x28(0x10)
	TArray<struct StreakCompanyMaterials>                        StreakMaterials;                                   // 0x38(0x10)
};


// Size 0xa0 (Full Size[0xd0] - InheritedSize[0x30]
class FactionVoteConsumerBase: public VoteConsumerInlineBase
{
public:
	class FactionVoteValidatorBase*                              Validator;                                         // 0x40(0x8)
	class Actor*                                                 OwningActor;                                       // 0x90(0x8)
	TArray<struct CinematicFactionEvent>                         FactionBannerData;                                 // 0x98(0x10)
	TArray<struct CrewMemberVotes>                               Votes;                                             // 0xa8(0x10)
};


// Size 0x1a0 (Full Size[0xa60] - InheritedSize[0x8c0]
class FactionParticleComponent: public ParticleSystemComponent
{
public:
	class UClass*                                                Faction;                                           // 0xa38(0x8)
	class UClass*                                                JoinedFaction;                                     // 0xa40(0x8)
	struct Guid                                                  OwningShipCrewId;                                  // 0xa48(0x10)
	int                                                          OwningShipCrewStreak;                              // 0xa58(0x4)
	bool                                                         ServerMigrationEnded;                              // 0xa5c(0x1)
};


// Size 0x270 (Full Size[0x8a0] - InheritedSize[0x630]
class FactionFlipMeshComponent: public StaticMeshComponent
{
public:
	class CurveFloat*                                            FlipCurve;                                         // 0x630(0x8)
	class UClass*                                                FlippedFaction;                                    // 0x638(0x8)
	float                                                        FactionJoinedLerpDuration;                         // 0x640(0x4)
	struct Guid                                                  OwningShipCrewId;                                  // 0x888(0x10)
	int                                                          OwningShipCrewStreak;                              // 0x898(0x4)
	bool                                                         ServerTargetFlipped;                               // 0x89c(0x1)
};


// Size 0x8 (Full Size[0x168] - InheritedSize[0x160]
class FactionInteractionVoteComponent: public InlineVotingInteractionComponent
{
public:
	float                                                        TurnHourglassInteractionHoldTime;                  // 0x160(0x4)
	int                                                          WaitTimeSimilarityThresholdSeconds;                // 0x164(0x4)
};


// Size 0x118 (Full Size[0x4e0] - InheritedSize[0x3c8]
class FactionVoteInteractionActor: public Actor
{
public:
	float                                                        FadeDuration;                                      // 0x3d8(0x4)
	TArray<struct FactionDisplayInfo>                            NoFactionInfos;                                    // 0x3e0(0x10)
	TArray<struct FactionDisplayInfo>                            FactionInfos;                                      // 0x3f0(0x10)
	TArray<struct FactionDisplayInfo>                            SaferSeasDisplayInfos;                             // 0x400(0x10)
	TArray<struct FactionRequest>                                NoFactionInfoPtrs;                                 // 0x410(0x10)
	TArray<struct FactionRequest>                                FactionInfoPtrs;                                   // 0x420(0x10)
	TArray<struct FactionRequest>                                SaferSeasDisplayInfoPtrs;                          // 0x430(0x10)
};


// Size 0x290 (Full Size[0x658] - InheritedSize[0x3c8]
class FactionService: public Actor
{
public:
	class FactionSettingsAsset*                                  Settings;                                          // 0x3d8(0x8)
	class FactionLootLevelRewardsAsset*                          LootLevelRewardsAsset;                             // 0x3e0(0x8)
	TArray<struct CompanyFactionAlignment>                       OpposingFactionsAndCompanies;                      // 0x4a8(0x10)
	TArray<struct DefenderLootLevelThreshold>                    DefenderLootLevelThresholds;                       // 0x4b8(0x10)
	TArray<struct CrewFactionEntryData>                          FactionAlignedCrewData;                            // 0x4c8(0x10)
	TArray<struct CrewFactionEntry>                              FactionAlignedCrews;                               // 0x4d8(0x10)
	TArray<struct FactionWaitTimesData>                          MatchmakingWaitTimes;                              // 0x4e8(0x10)
	class FactionServiceDebugRepActor*                           DebugRepActor;                                     // 0x630(0x8)
};


// Size 0xd8 (Full Size[0x108] - InheritedSize[0x30]
class FactionVoteValidatorBase: public VoteValidatorInlineBase
{
public:
	TArray<class Class*>                                         TargetCompanies;                                   // 0x30(0x10)
	float                                                        EdgeOfWorldWarningWeightForFactionLock;            // 0x40(0x4)
	class FactionVoteConsumerBase*                               Consumer;                                          // 0xe8(0x8)
	int                                                          CurrentCompany;                                    // 0xf0(0x4)
	float                                                        FlipTime;                                          // 0xf4(0x4)
	class Actor*                                                 OwningActor;                                       // 0x100(0x8)
};


// Size 0x230 (Full Size[0x5f8] - InheritedSize[0x3c8]
class FactionOutpostVoteInteractionActor: public Actor
{
public:
	float                                                        FadeDuration;                                      // 0x3d8(0x4)
	struct FactionDisplayInfo                                    FactionInactiveInfo;                               // 0x3e0(0xa0)
	struct FactionDisplayInfo                                    FactionActiveInfo;                                 // 0x480(0xa0)
	struct FactionRequest                                        FactionActiveInfoPtr;                              // 0x538(0x20)
};


// Size 0x48 (Full Size[0x410] - InheritedSize[0x3c8]
class FactionIntervoteService: public Actor
{
public:
	TArray<class FactionVoteConsumerBase*>                       FactionVoteConsumers;                              // 0x3d0(0x10)
};


// Size 0x8 (Full Size[0x98] - InheritedSize[0x90]
class IsWearingCursePrerequisite: public InteractionPrerequisiteBase
{
public:
	bool                                                         AnyCurse;                                          // 0x90(0x1)
	bool                                                         SkeletonCurse;                                     // 0x91(0x1)
	bool                                                         GhostCurse;                                        // 0x92(0x1)
};


// Size 0x88 (Full Size[0x150] - InheritedSize[0xc8]
class ShipFactionCustomisation: public ActorComponent
{
public:
	class StreakMaterialDataAsset*                               StreakMaterialData;                                // 0xc8(0x8)
	class FactionShipStreakDataAsset*                            ShipStreakData;                                    // 0xd0(0x8)
	TArray<class ActorComponent*>                                CachedStaticMeshComponents;                        // 0xd8(0x10)
	TArray<struct StreakDynamicMaterials>                        CachedDynamicMaterials;                            // 0xe8(0x10)
	struct FactionStreakData                                     FactionStreakData;                                 // 0x140(0x10)
};


// Size 0x170 (Full Size[0x198] - InheritedSize[0x28]
class FactionSettingsAsset: public DataAsset
{
public:
	TArray<class Class*>                                         PossibleFactions;                                  // 0x28(0x10)
	TArray<class Class*>                                         FactionsRewardingFriendlyFire;                     // 0x38(0x10)
	TArray<struct SandsOfFateData>                               SandsOfFateRewards;                                // 0x48(0x10)
	TArray<struct FactionStreakLevelData>                        FactionStreakLevelData;                            // 0x58(0x10)
	TArray<struct DefenderLootLevelThreshold>                    DefenderLootLevelThresholds;                       // 0x68(0x10)
	float                                                        EnemyFactionShipEmergentRange;                     // 0x78(0x4)
	float                                                        EnemyFactionShipInvasionRange;                     // 0x7c(0x4)
	float                                                        CrewShipRangeStatesUpdateInterval;                 // 0x80(0x4)
	float                                                        UpdateWaitTimesRate;                               // 0x84(0x4)
	TArray<struct CompanyFactionAlignment>                       AlignedFactionsAndCompanies;                       // 0x88(0x10)
	TArray<struct CompanyFactionAlignment>                       OpposingFactionsAndCompanies;                      // 0x98(0x10)
	TArray<struct FactionServicePopUpData>                       JoiningFactionPopUp;                               // 0xa8(0x10)
	TArray<struct FactionServicePopUpData>                       LeavingFactionPopUp;                               // 0xb8(0x10)
	TArray<struct FactionServicePopUpData>                       DefeatedFactionPopUp;                              // 0xc8(0x10)
	TArray<struct FactionServicePopUpData>                       EnteredTunnelOfTheDamnedFactionPopUp;              // 0xd8(0x10)
	TArray<struct FactionServicePopUpData>                       LeavingBattleBoundsPopUp;                          // 0xe8(0x10)
	TArray<struct FactionServicePopUpData>                       SentToSinBinPopUp;                                 // 0xf8(0x10)
	TArray<struct FactionServicePopUpData>                       MaxRankAchievedForSloopOrBrigantinePopUp;          // 0x108(0x10)
	TArray<struct FactionServicePopUpData>                       MaxRankAchievedForGalleonPopUp;                    // 0x118(0x10)
	struct FText                                                 LosingBattleHeaderText;                            // 0x128(0x38)
	struct FText                                                 LosingBattleMessageText;                           // 0x160(0x38)
};


// Size 0x30 (Full Size[0xf8] - InheritedSize[0xc8]
class ShipSunkTrackingComponent: public ActorComponent
{
public:
	float                                                        CrewRange;                                         // 0xc8(0x4)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class FactionShipStreakDataAsset: public DataAsset
{
public:
	TArray<struct StreakMesh>                                    StreakMeshes;                                      // 0x28(0x10)
};


// Size 0x20 (Full Size[0x3e8] - InheritedSize[0x3c8]
class FactionServiceDebugRepActor: public Actor
{
public:
	bool                                                         bDebugEnabled;                                     // 0x3c8(0x1)
	TArray<struct CrewFactionEntryData>                          FactionAlignedCrewData;                            // 0x3d0(0x10)
	class FactionService*                                        FactionService;                                    // 0x3e0(0x8)
};


// Size 0x10 (Full Size[0x38] - InheritedSize[0x28]
class FactionLootLevelRewardsAsset: public DataAsset
{
public:
	TArray<struct LootLevelReward>                               LootLevelRewards;                                  // 0x28(0x10)
};


// Size 0x360 (Full Size[0x430] - InheritedSize[0xd0]
class StartFactionVoyageVoteConsumer: public FactionVoteConsumerBase
{
public:
	struct FText                                                 FactionVotingCastVote;                             // 0xd0(0x38)
	struct FText                                                 FactionVotingCantVote;                             // 0x108(0x38)
	struct FText                                                 FactionVotingRemoveVote;                           // 0x140(0x38)
	struct FText                                                 FactionVotingCantRemoveVote;                       // 0x178(0x38)
	struct FText                                                 FactionVotingCantVoteReasonVoterNotOnOwnShip;      // 0x1b0(0x38)
	struct FText                                                 FactionVotingCantVoteReasonIsOpposingEmissary;     // 0x1e8(0x38)
	struct FText                                                 FactionVotingCantVoteReasonIsOnFactionBlockedTale; // 0x220(0x38)
	struct FText                                                 FactionVotingCantVoteReasonIsInInvalidWorldRegion; // 0x258(0x38)
	struct FText                                                 FactionVotingCantVoteReasonIsNotOnNormalPlayMode;  // 0x290(0x38)
	struct FText                                                 FactionVotingCantVoteReasonShroudbreakerIsActive;  // 0x2c8(0x38)
	struct FText                                                 FactionVotingCantVoteReasonSaferSeas;              // 0x300(0x38)
	struct FText                                                 FactionVotingSwitchVote;                           // 0x338(0x38)
	struct FText                                                 FactionVotingCantVoteReasonIsDivingToAdventure;    // 0x370(0x38)
	struct FText                                                 FactionVotingCantVoteReasonIsInTunnelOfTheDamned;  // 0x3a8(0x38)
	struct FText                                                 FactionVotingCantVoteReasonHasProposedOnDemandVoyage; // 0x3e0(0x38)
};


// Size 0x230 (Full Size[0x300] - InheritedSize[0xd0]
class StopFactionVoyageVoteConsumer: public FactionVoteConsumerBase
{
public:
	struct FText                                                 FactionVotingCastVote;                             // 0xd0(0x38)
	struct FText                                                 FactionVotingCantVote;                             // 0x108(0x38)
	struct FText                                                 FactionVotingRemoveVote;                           // 0x140(0x38)
	struct FText                                                 FactionVotingCantRemoveVote;                       // 0x178(0x38)
	struct FText                                                 FactionVotingCantVoteReasonGoToOutpost;            // 0x1b0(0x38)
	struct FText                                                 FactionVotingCantVoteReasonActiveForDifferentCompany; // 0x1e8(0x38)
	struct FText                                                 FactionVotingCantVoteReasonEnemyShipNearby;        // 0x220(0x38)
	struct FText                                                 FactionVotingCantVoteReasonShipNotInHarbour;       // 0x258(0x38)
	struct FText                                                 FactionVotingCantVoteReasonCrewInBattle;           // 0x290(0x38)
	struct FText                                                 FactionVotingCantVoteReasonLeaveFactionCooldownIsActive; // 0x2c8(0x38)
};


